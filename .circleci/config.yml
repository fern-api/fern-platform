version: 2.1
orbs:
  node: circleci/node@5.0.1
  aws-cli: circleci/aws-cli@3.1.1
jobs:
  compile:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Generate Fern SDKs
          command: |
            npm install -g fern-api
            fern generate --local --group local --log-level debug
      - run:
          name: Build
          command: yarn build
      - persist_to_workspace:
          root: /home/circleci
          paths: [project]

  check:
    machine:
      image: ubuntu-2004:current
    steps:
      - attach_workspace: { at: /home/circleci }
      - run:
          command: yarn lint
          name: Lint
      - run:
          command: yarn test
          name: Test
      - run:
          command: yarn test-db
          name: Test DB

  ete-test:
    machine:
      image: ubuntu-2004:current
    steps:
      - attach_workspace: { at: /home/circleci }
      - run:
          name: Dockerize Local
          command: yarn run docker:local
      - run:
          name: Test ETE
          command: yarn run test-ete

  migrate-dev2:
    circleci_ip_ranges: true
    docker:
      - image: cimg/node:lts
    working_directory: ~/project/apps/fdr
    steps:
      - attach_workspace: { at: /home/circleci }
      - run:
          name: prisma deploy
          command: yarn run db:migrate:dev

  deploy-dev2:
    machine:
      image: ubuntu-2004:current
    steps:
      - attach_workspace: { at: /home/circleci }
      - aws-cli/setup
      - run:
          name: cdk deploy
          command: |
            git_version="$(scripts/git-version.sh)"
            yarn run docker:dev "${git_version}"
            npm install -g aws-cdk
            yarn install
            VERSION="${git_version}" yarn workspace fdr-deploy deploy:dev

  migrate-prod:
    circleci_ip_ranges: true
    docker:
      - image: cimg/node:lts
    working_directory: ~/project/apps/fdr
    steps:
      - attach_workspace: { at: /home/circleci }
      - run:
          command: yarn run db:migrate:prod
          name: prisma deploy

  deploy-prod:
    machine:
      image: ubuntu-2004:current
    steps:
      - attach_workspace: { at: /home/circleci }
      - aws-cli/setup
      - run:
          name: cdk deploy
          command: |
            git_version="$(scripts/git-version.sh)"
            yarn run docker:prod "${git_version}"
            npm install -g aws-cdk
            yarn install
            cd apps/fdr-deploy
            VERSION="${git_version}" yarn workspace fdr-deploy deploy:prod

  publish-sdks:
    machine:
      image: ubuntu-2004:current
    steps:
      - attach_workspace: { at: /home/circleci }
      - run:
          name: Publish FDR SDK
          command: |
            git_version="$(scripts/git-version.sh)"
            cd packages/fdr-sdk
            mv package.json package.json.tmp
            version_replace="s/0.0.0/${git_version}/"
            cat package.json.tmp| sed "${version_replace}" > package.json
            rm -rf package.json.tmp
            echo "//registry.npmjs.org/:_authToken=${YARN_NPM_AUTH_TOKEN}" > ~/.npmrc
            npm publish --access public
      - run:
          name: Publish FDR Fiddle SDK
          command: |
            npm install -g fern-api
            git_version="$(scripts/git-version.sh)"
            fern generate --group fiddle --version "${git_version}" --log-level debug

# workflows:
#   version: 2
#   build:
#     jobs:
#       - compile:
#           filters:
#             tags:
#               only: /.*/
#           context:
#             - fern-tokens

#       - check:
#           filters:
#             tags:
#               only: /.*/
#           requires: [compile]

#       - ete-test:
#           filters:
#             tags:
#               only: /.*/
#           requires: [compile]

#       - migrate-dev2:
#           requires: [check, ete-test]
#           filters:
#             branches:
#               only:
#                 - main
#           context:
#             - fern-dev2

#       - deploy-dev2:
#           requires: [check, ete-test, migrate-dev2]
#           filters:
#             branches:
#               only:
#                 - main
#           context:
#             - aws
#             - github
#             - fern-dev2
#             - fern-tokens
#             - fdr-algolia-dev
#             - slack

#       - migrate-prod:
#           filters:
#             branches:
#               ignore: /.*/
#             tags:
#               only:
#                 - /.*/
#           context:
#             - fern-prod
#           requires: [check, ete-test]

#       - deploy-prod:
#           filters:
#             branches:
#               ignore: /.*/
#             tags:
#               only:
#                 - /.*/
#           context:
#             - aws
#             - github
#             - fern-prod
#             - fern-tokens
#             - fdr-algolia-prod
#             - slack
#           requires: [check, ete-test, migrate-prod]

#       - publish-sdks:
#           filters:
#             branches:
#               only:
#                 - main
#           context:
#             - fern-tokens
#             - npm
#           requires: [check, ete-test]
