version: 2.1
orbs:
  node: circleci/node@5.0.1
jobs:
  check:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: lint:monorepo
          command: yarn lint:monorepo
      - run:
          name: Check root package
          command: yarn root-package:check
      - run:
          name: Check dependencies
          command: yarn depcheck
      - run:
          name: lint:style
          command: yarn lint:style
      - run:
          name: Format
          command: yarn format:check
      - run:
          name: Ensure no changes to git-tracked files
          command: git --no-pager diff --exit-code

  organize-imports:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Organize imports
          # not using --list-different because sometimes this removes a trailing
          # comma that prettier adds back
          command: yarn organize-imports
      - run:
          name: Format
          command: yarn format:fix
      - run:
          name: Ensure no changes to git-tracked files
          command: git --no-pager diff --exit-code

  eslint:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          # compilation is needed for some typescript-eslint rules
          name: compile
          command: yarn compile
      - run:
          name: lint:eslint
          command: yarn lint:eslint

  compile:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: compile
          command: yarn compile

  test:
    # this is machine because of the docker-utils tests
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Run tests
          command: yarn test --ci
      - run:
          name: Ensure no changes to git-tracked files
          command: git --no-pager diff --exit-code

  check-docs-release-is-allowed:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Check release blockers
          command: yarn check-docs-release-blockers

  deploy-docs-preview:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install vercel
          command: sudo npm install --global vercel@latest
      - run:
          name: Pull Vercel environment information
          command: vercel pull --yes --environment=preview --token=${VERCEL_TOKEN}
      - run:
          name: Build project artifacts
          command: vercel build --token=${VERCEL_TOKEN}
      - run:
          name: Deploy
          command: vercel deploy --prebuilt --token=${VERCEL_TOKEN}

  deploy-docs-dev:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install vercel
          command: sudo npm install --global vercel@latest
      - run:
          name: Pull Vercel environment information
          command: vercel pull --yes --environment=production --token=${VERCEL_TOKEN}
      - run:
          name: Build project artifacts
          command: vercel build --prod --token=${VERCEL_TOKEN}
      - run:
          name: Deploy
          command: vercel deploy --prebuilt --prod --token=${VERCEL_TOKEN}

  deploy-docs:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install vercel
          command: sudo npm install --global vercel@latest
      - run:
          name: Pull Vercel environment information
          command: vercel pull --yes --environment=production --token=${VERCEL_TOKEN}
      - run:
          name: Build project artifacts
          command: vercel build --prod --token=${VERCEL_TOKEN}
      - run:
          name: Deploy
          command: vercel deploy --prebuilt --prod --token=${VERCEL_TOKEN}

workflows:
  version: 2
  build:
    jobs:
      - check:
          filters:
            tags:
              only: /.*/

      - eslint:
          filters:
            tags:
              only: /.*/

      - organize-imports:
          filters:
            tags:
              only: /.*/

      - compile:
          filters:
            tags:
              only: /.*/

      - test:
          filters:
            tags:
              only: /.*/

      - deploy-docs-preview:
          filters:
            branches:
              ignore: main
          context:
            - vercel-dev

      - deploy-docs-dev:
          filters:
            branches:
              only: main
          requires:
            - check
            - organize-imports
            - compile
            - eslint
            - test
          context:
            - vercel-dev

      - deploy-docs:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)$/
          requires:
            - check-docs-release-is-allowed
            - check
            - organize-imports
            - compile
            - eslint
            - test
          context:
            - vercel-prod
            - fe-algolia-prod

      - check-docs-release-is-allowed:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)$/
