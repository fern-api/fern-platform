version: 2.1
orbs:
  node: circleci/node@5.0.1
  aws-cli: circleci/aws-cli@3.1.1
jobs:
  compile:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: fern generate
          command: |
            npm install -g fern-api
            fern generate --log-level debug
      - run:
          name: prisma generate
          command: |
            yarn prisma generate
      - run:
          command: yarn compile
          name: Compile
      - persist_to_workspace:
          root: /home/circleci
          paths: [ project ]

  check:
    machine:
      image: ubuntu-2004:current
    steps:
      - attach_workspace: { at: /home/circleci }
      - run:
          command: yarn lint
          name: Lint
      - run:
          command: yarn test
          name: Test
      - run:
          command: yarn test:db
          name: Test DB

  ete-test:
    machine:
      image: ubuntu-2004:current
    steps:
      - attach_workspace: { at: /home/circleci }
      - run:
          command: yarn local:docker
          name: Dockerize Local
      - run:
          command: yarn test:ete
          name: Test ETE

  deploy-dev:
    circleci_ip_ranges: true
    docker:
      - image: cimg/node:lts
    steps:
      - attach_workspace: { at: /home/circleci }
      - aws-cli/setup
      - setup_remote_docker:
          version: 20.10.14
      - run:
          command: yarn run dev:db:migrate
          name: prisma deploy
      - run:
          command: |
            git_version="$(scripts/git-version.sh)"
            yarn run dev:docker "${git_version}"
            npm install -g aws-cdk
            cd fdr-deploy
            npm install
            VERSION="${git_version}" cdk deploy fdr-dev --require-approval never --progress events
          name: cdk deploy

  deploy-dev2:
    circleci_ip_ranges: true
    docker:
      - image: cimg/node:lts
    steps:
      - attach_workspace: { at: /home/circleci }
      - aws-cli/setup
      - setup_remote_docker:
          version: 20.10.14
      - run:
          command: yarn run dev:db:migrate
          name: prisma deploy
      - run:
          command: |
            git_version="$(scripts/git-version.sh)"
            yarn run dev:docker "${git_version}"
            npm install -g aws-cdk
            cd fdr-deploy
            npm install
            VERSION="${git_version}" cdk deploy fdr-dev2 --require-approval never --progress events
          name: cdk deploy

  deploy-prod:
    circleci_ip_ranges: true
    docker:
      - image: cimg/node:lts
    steps:
      - attach_workspace: { at: /home/circleci }
      - aws-cli/setup
      - setup_remote_docker:
          version: 20.10.14
      - run:
          command: yarn run prod:db:migrate
          name: prisma deploy
      - run:
          command: |
            git_version="$(scripts/git-version.sh)"
            yarn run prod:docker "${git_version}"
            npm install -g aws-cdk
            cd fdr-deploy
            npm install
            VERSION="${git_version}" cdk deploy fdr-prod --require-approval never --progress events
          name: cdk deploy
      - run:
          name: fern register --environment Production
          command: |
            npm install -g fern-api
            fern register-v2 --environment Production

  publish-sdks:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: fern generate
          command: |
            npm install -g fern-api
      - run:
          name: Publish FDR Read SDKs
          command: |
            git_version="$(scripts/git-version.sh)"
            fern generate --group internal-read --version "${git_version}" --log-level debug
      - run:
          name: Publish FDR Write SDKs
          command: |
            git_version="$(scripts/git-version.sh)"
            fern generate --group internal-write --version "${git_version}" --log-level debug

workflows:
  version: 2
  build:
    jobs:
      - compile:
          filters:
            tags:
              only: /.*/
          context:
            - fern-tokens

      - check:
          filters:
            tags:
              only: /.*/
          requires: [compile]

      - ete-test:
          filters:
            tags:
              only: /.*/
          requires: [compile]

      - deploy-dev:
          requires: [check, ete-test]
          filters:
            branches:
              only:
                - main
          context:
            - aws
            - github
            - fern-dev
            - fern-tokens
            - fdr-algolia-dev
            - slack

      - deploy-dev2:
          requires: [check, ete-test]
          filters:
            branches:
              only:
                - main
          context:
            - aws
            - github
            - fern-dev2
            - fern-tokens
            - fdr-algolia-dev
            - slack

      - deploy-prod:
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /.*/
          context:
            - aws
            - github
            - fern-prod
            - fern-tokens
            - fdr-algolia-prod
            - slack
          requires: [check, ete-test]

      - publish-sdks:
          filters:
            branches:
              only:
                - main
          context:
            - fern-tokens
          requires: [check, ete-test]
