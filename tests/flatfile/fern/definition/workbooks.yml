# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml
  sheets: sheets.yml
  records: records.yml
  versions: versions.yml

service:
  auth: true
  base-path: /workbooks
  audiences:
    - public
  endpoints:
    list:
      path: ""
      method: GET
      docs: Returns all workbooks matching a filter for an account or space
      display-name: List workbooks
      request:
        name: ListWorkbooksRequest
        query-parameters:
          spaceId: optional<commons.SpaceId>
          includeCounts:
            type: optional<boolean>
            docs: Include counts for the workbook
      response: ListWorkbooksResponse
      errors:
        - commons.BadRequestError

    create:
      path: ""
      method: POST
      docs: Creates a workbook and adds it to a space
      display-name: Create a workbook
      request: CreateWorkbookConfig
      response:
        type: WorkbookResponse
        # The create workbook request returns a 201 status code, but Fern
        # doesn't support non-200 status codes yet.
        # https://github.com/fern-api/fern/issues/1583
        # status-code: 201
      errors:
        - commons.BadRequestError

    get:
      path: /{workbookId}
      method: GET
      docs: Returns a single workbook
      display-name: Get a workbook
      path-parameters:
        workbookId:
          docs: ID of workbook to return
          type: commons.WorkbookId
      response: WorkbookResponse
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    delete:
      path: /{workbookId}
      method: DELETE
      docs: Deletes a workbook and all of its record data permanently
      display-name: Delete a workbook
      path-parameters:
        workbookId:
          docs: ID of workbook to delete
          type: commons.WorkbookId
      response: commons.Success
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    update:
      path: /{workbookId}
      method: PATCH
      docs: Updates a workbook
      display-name: Update a workbook
      path-parameters:
        workbookId:
          docs: ID of workbook to update
          type: commons.WorkbookId
      request: UpdateWorkbookConfig
      response: WorkbookResponse
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    clone:
      audiences:
        - internal
      path: /{workbookId}/clone
      method: POST
      docs: Clones a workbook
      display-name: Clone a workbook within a space
      path-parameters:
        workbookId:
          docs: ID of workbook to clone
          type: commons.WorkbookId
      response: WorkbookResponse
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    getSheetsDeprecated:
      audiences:
        - deprecated
      path: /{workbookId}/sheets
      method: GET
      docs: Returns sheets from a workbook
      path-parameters:
        workbookId:
          docs: ID of workbook
          type: commons.WorkbookId
      response: sheets.ListSheetsResponse
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    rebuildWorkbook:
      audiences:
        - internal
      path: /{workbookId}/rebuild
      method: POST
      docs: Rebuild a workbook
      display-name: Rebuild a workbook
      path-parameters:
        workbookId:
          docs: ID of workbook to rebuild
          type: commons.WorkbookId
      response: commons.Success
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    getRecordsDeprecated:
      audiences:
        - deprecated
      path: /{workbookId}/sheets/{sheetId}/records
      method: GET
      docs: Returns records from a sheet in a workbook
      display-name: Get records
      path-parameters:
        workbookId:
          docs: ID of workbook
          type: commons.WorkbookId
        sheetId:
          docs: ID of sheet
          type: commons.SheetId
      request:
        name: ListRecordsRequest
        query-parameters:
          versionId: optional<commons.VersionId>
          untilVersionId: optional<commons.VersionId>
          sinceVersionId: optional<commons.VersionId>
          sortField: optional<commons.SortField>
          sortDirection: optional<commons.SortDirection>
          filter: optional<commons.Filter>
          filterField: optional<commons.FilterField>
          searchValue: optional<commons.SearchValue>
          searchField: optional<commons.SearchField>
          pageSize:
            docs: >-
              Number of records to return in a page (default 1000 if pageNumber
              included)
            type: optional<integer>
          pageNumber:
            docs: Based on pageSize, which page of records to return
            type: optional<integer>
          includeCounts:
            docs: >-
              Include counts for the total records, valid records and records
              with errors
            type: optional<boolean>
          includeLinks:
            docs: >-
              If true, linked records will be included in the results. Defaults
              to false
            type: optional<boolean>
          includeMessages:
            docs: Include error messages, defaults to false
            type: optional<boolean>
      response: records.RecordsResponse
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    updateRecordsDeprecated:
      audiences:
        - deprecated
      path: /{workbookId}/sheets/{sheetId}/records
      method: PUT
      docs: Updates existing records in a workbook sheet
      display-name: Update records
      path-parameters:
        workbookId:
          docs: ID of workbook
          type: commons.WorkbookId
        sheetId:
          docs: ID of sheet
          type: commons.SheetId
      request:
        body: records.Records
      response: versions.VersionResponse
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    addRecordsDeprecated:
      audiences:
        - deprecated
      path: /{workbookId}/sheets/{sheetId}/records
      method: POST
      docs: Adds records to a workbook sheet
      display-name: Insert records
      path-parameters:
        workbookId:
          docs: ID of workbook
          type: commons.WorkbookId
        sheetId:
          docs: ID of sheet
          type: commons.SheetId
      request:
        body: list<records.RecordData>
      response: records.RecordsResponse
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    deleteRecordsDeprecated:
      audiences:
        - deprecated
      path: /{workbookId}/sheets/{sheetId}/records
      method: DELETE
      docs: Deletes records from a workbook sheet
      display-name: Delete records
      path-parameters:
        workbookId:
          docs: ID of workbook
          type: commons.WorkbookId
        sheetId:
          docs: ID of sheet
          type: commons.SheetId
      request:
        name: DeleteRecordsRequestDeprecated
        query-parameters:
          ids:
            docs: The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records
            type: optional<commons.RecordId>
            allow-multiple: true
      response: commons.Success
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    validateSheetDeprecated:
      audiences:
        - deprecated
      path: /{workbookId}/sheets/{sheetId}/validate
      method: POST
      docs: Trigger data hooks and validation to run on a sheet
      display-name: Validate sheet
      path-parameters:
        workbookId:
          docs: ID of workbook
          type: commons.WorkbookId
        sheetId:
          docs: ID of sheet
          type: commons.SheetId
      response: commons.Success
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    createVersionDeprecated:
      audiences:
        - deprecated
      path: /{workbookId}/sheets/{sheetId}/versions
      method: POST
      docs: Creates a new version of a workbook sheet
      display-name: Create a version
      path-parameters:
        workbookId:
          docs: ID of workbook
          type: commons.WorkbookId
        sheetId:
          docs: ID of sheet
          type: commons.SheetId
      response:
        type: versions.VersionResponse
        # The create version request returns a 201 status code, but Fern
        # doesn't support non-200 status codes yet.
        # https://github.com/fern-api/fern/issues/1583
        # status-code: 201
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

types:
  ListWorkbooksResponse:
    properties:
      data: list<Workbook>

  WorkbookResponse:
    properties:
      data: Workbook

  Workbook:
    docs: A collection of one or more sheets
    properties:
      id: commons.WorkbookId
      name: optional<string>
      spaceId: commons.SpaceId
      environmentId: commons.EnvironmentId
      sheets: optional<list<sheets.Sheet>>
      labels: optional<list<string>>
      actions: optional<list<commons.Action>>
      namespace: optional<string>
      updatedAt:
        type: datetime
        docs: Date the workbook was last updated
      createdAt:
        type: datetime
        docs: Date the workbook was created

  CreateWorkbookConfig:
    docs: Properties used to create a new Workbook
    properties:
      name: string
      labels: optional<list<string>>
      spaceId: optional<commons.SpaceId>
      environmentId: optional<commons.EnvironmentId>
      namespace: optional<string>
      sheets:
        type: optional<list<sheets.SheetConfig>>
      actions: optional<list<commons.Action>>

  UpdateWorkbookConfig:
    docs: Properties used to create a new Workbook
    properties:
      name: string
      labels: optional<list<string>>
      spaceId: optional<commons.SpaceId>
      environmentId: optional<commons.EnvironmentId>
      namespace: optional<string>
      sheets:
        type: optional<list<sheets.SheetConfig>>
      actions: optional<list<commons.Action>>
