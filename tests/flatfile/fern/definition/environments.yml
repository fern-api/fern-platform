# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml
  agents: agents.yml
  spaces: spaces/__package__.yml
  events: events.yml

service:
  auth: true
  base-path: /environments
  endpoints:
    list:
      path: ""
      method: GET
      audiences:
        - public
      docs: Get all environments
      display-name: List environments
      request:
        name: ListEnvironmentsRequest
        query-parameters:
          pageSize:
            docs: Number of environments to return in a page (default 10)
            type: optional<integer>
          pageNumber:
            docs: Based on pageSize, which page of environments to return
            type: optional<integer>
      response: ListEnvironmentsResponse
      examples:
        - response:
            body:
              data:
                - id: us_env_hVXkXs0b
                  accountId: us_acc_uj6s91wc
                  name: dev
                  isProd: false
                  guestAuthentication:
                    - magic_link
                  features: {}
                  metadata: {}

    create:
      path: ""
      method: POST
      audiences:
        - public
      docs: Create a new environment
      display-name: Create an environment
      request: EnvironmentConfigCreate
      response: EnvironmentResponse
      examples:
        - request: $EnvironmentConfigCreate.Example0
          response:
            body:
              data: $Environment.Example0

    getEnvironmentEventToken:
      path: /subscription-token
      method: GET
      audiences:
        - public
      docs: >-
        Get a token which can be used to subscribe to events for this
        environment
      display-name: Get environment subscription credentials
      request:
        name: GetEnvironmentEventTokenRequest
        query-parameters:
          environmentId:
            docs: ID of environment to return
            type: commons.EnvironmentId
      response: spaces.EventTokenResponse
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    get:
      path: /{environmentId}
      method: GET
      audiences:
        - public
      docs: Returns a single environment
      display-name: Get an environment
      path-parameters:
        environmentId:
          docs: ID of the environment to return. To fetch the current environment, pass `current`
          type: string
      response: EnvironmentResponse
      examples:
        - path-parameters:
            environmentId: $commons.EnvironmentId.Example0
          response:
            body:
              data: $Environment.Example0
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    update:
      path: /{environmentId}
      method: PATCH
      audiences:
        - public
      docs: Updates a single environment, to change the name for example
      display-name: Update an environment
      path-parameters:
        environmentId:
          docs: ID of the environment to update
          type: string
      request: EnvironmentConfigUpdate
      response: Environment
      examples:
        - path-parameters:
            environmentId: $commons.EnvironmentId.Example0
          request: $EnvironmentConfigUpdate.Example0
          response:
            body: $Environment.Example0

    delete:
      path: /{environmentId}
      method: DELETE
      audiences:
        - public
      display-name: Delete an environment
      docs: Deletes a single environment
      path-parameters:
        environmentId:
          docs: ID of the environment to delete
          type: string
      response: commons.Success
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    getEnvironmentAgentsLogsDeprecated:
      audiences:
        - deprecated
      path: /{environmentId}/logs
      method: GET
      display-name: Get all agent logs for an environment
      path-parameters:
        environmentId: string
      request:
        name: GetAllAgentLogsForEnvironmentRequest
        query-parameters:
          pageSize:
            docs: Number of logs to return in a page (default 20)
            type: optional<integer>
          pageNumber:
            docs: Based on pageSize, which page of records to return
            type: optional<integer>
      response: agents.GetAgentLogsResponse
      examples:
        - path-parameters:
            environmentId: $commons.EnvironmentId.Example0
          query-parameters:
            pageSize: 5
            pageNumber: 10
          response:
            body: $agents.GetAgentLogsResponse.Example0

    getAgentsDeprecated:
      audiences:
        - deprecated
      path: /{environmentId}/agents
      method: GET
      display-name: List agents
      path-parameters:
        environmentId: commons.EnvironmentId
      response: agents.ListAgentsResponse
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    createAgentDeprecated:
      audiences:
        - deprecated
      path: /{environmentId}/agents
      method: POST
      display-name: Create an agent
      path-parameters:
        environmentId: commons.EnvironmentId
      request:
        body: agents.AgentConfig
      response: agents.AgentResponse
      errors:
        - commons.BadRequestError

    getAgentDeprecated:
      audiences:
        - deprecated
      path: /{environmentId}/agents/{agentId}
      method: GET
      display-name: Get an agent
      path-parameters:
        environmentId: commons.EnvironmentId
        agentId: commons.AgentId
      response: agents.AgentResponse
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    getAgentLogsDeprecated:
      audiences:
        - deprecated
      path: /{environmentId}/agents/{agentId}/logs
      method: GET
      display-name: Get logs for an agent
      path-parameters:
        environmentId: commons.EnvironmentId
        agentId: commons.AgentId
      response: agents.GetAgentLogsResponse
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    getEnvironmentStatsDeprecated:
      audiences:
        - deprecated
      path: /{environmentId}/stats
      method: GET
      docs: Returns environment stats
      display-name: Get environment stats
      path-parameters:
        environmentId: commons.EnvironmentId
      request:
        name: GetEnvironmentStatsDeprecatedRequest
        query-parameters:
          start:
            docs: Start time for stats, defaults to 7 days ago
            type: optional<datetime>
          end:
            docs: End time for stats, defaults to now
            type: optional<datetime>
      response: agents.EnvironmentStatsResponse
      errors:
        - commons.ForbiddenError

    getEventsDeprecated:
      audiences:
        - deprecated
      path: /{environmentId}/events
      method: GET
      display-name: List events
      path-parameters:
        environmentId: commons.EnvironmentId
      request:
        name: getEventsDeprecatedRequest
        query-parameters:
          spaceId: optional<commons.SpaceId>
          domain:
            docs: Filter by event domain
            type: optional<string>
          topic:
            docs: Filter by event topic
            type: optional<string>
          since:
            docs: Filter by event timestamp
            type: optional<datetime>
          pageSize:
            docs: Number of results to return in a page (default 10)
            type: optional<integer>
          pageNumber:
            docs: Based on pageSize, which page of results to return
            type: optional<integer>
          includeAcknowledged:
            docs: Include acknowledged events
            type: optional<boolean>
      response: events.ListAllEventsResponse

    createEventDeprecated:
      audiences:
        - deprecated
      path: /{environmentId}/events
      method: POST
      display-name: Create an event
      path-parameters:
        environmentId: commons.EnvironmentId
      request:
        body: events.Event
      response: events.EventResponse
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    getEventDeprecated:
      audiences:
        - deprecated
      path: /{environmentId}/events/{eventId}
      method: GET
      display-name: Get an event
      path-parameters:
        environmentId: commons.EnvironmentId
        eventId: commons.EventId
      response: events.EventResponse
      errors:
        - commons.BadRequestError
        - commons.NotFoundError

    ackEventDeprecated:
      audiences:
        - deprecated
      path: /{environmentId}/events/{eventId}/ack
      method: POST
      display-name: Acknowledge an event
      path-parameters:
        environmentId: commons.EnvironmentId
        eventId: commons.EventId
      response: commons.Success

types:
  ListEnvironmentsResponse:
    properties:
      data: list<Environment>
      pagination: optional<commons.Pagination>

  EnvironmentResponse:
    properties:
      data: Environment

  Environment:
    properties:
      id: commons.EnvironmentId
      accountId: commons.AccountId
      name:
        docs: The name of the environment
        type: string
      isProd:
        docs: Whether or not the environment is a production environment
        type: boolean
      guestAuthentication: list<GuestAuthenticationEnum>
      features: map<string, unknown>
      metadata: map<string, unknown>
    examples:
      - name: Example0
        value:
          id: $commons.EnvironmentId.Example0
          accountId: $commons.AccountId.Example0
          name: dev
          isProd: false
          guestAuthentication:
            - magic_link
          features: {}
          metadata: {}

  EnvironmentConfigCreate:
    docs: Properties used to create a new environment
    properties:
      name:
        docs: The name of the environment
        type: string
      isProd:
        docs: Whether or not the environment is a production environment
        type: boolean
      guestAuthentication: optional<list<GuestAuthenticationEnum>>
      metadata: optional<map<string, unknown>>
    examples:
      - name: Example0
        value:
          name: dev
          isProd: false
          guestAuthentication:
            - magic_link
          metadata:
            key: value

  EnvironmentConfigUpdate:
    docs: Properties used to update an environment
    properties:
      name:
        docs: The name of the environment
        type: optional<string>
      isProd:
        docs: Whether or not the environment is a production environment
        type: optional<boolean>
      guestAuthentication: optional<list<GuestAuthenticationEnum>>
      metadata: optional<map<string, unknown>>
    examples:
      - name: Example0
        value:
          name: dev
          isProd: false
          guestAuthentication:
            - magic_link
          metadata:
            key: value

  GuestAuthenticationEnum:
    docs: The type of authentication to use for guests
    enum:
      - shared_link
      - magic_link
