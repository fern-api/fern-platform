# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml
  payers: payers.yml
  organization_provider: organization-providers/v2/__package__.yml

types:
  EnrollmentId: uuid
  EnrollmentAttachmentId: uuid

  EnrollmentAttachmentResponse:
    properties:
      signed_download_url: string

  EnrollmentAttachmentBase:
    properties:
      enrollment_id: EnrollmentId
      file_name: string
      storage_uri: string

  EnrollmentAttachment:
    extends: EnrollmentAttachmentBase
    properties:
      attachment_id: EnrollmentAttachmentId

  EnrollmentAttachmentCreate:
    extends: EnrollmentAttachmentBase
    properties:
      attachment_id: optional<EnrollmentAttachmentId>

  EnrollmentStatus:
    enum:
      - name: SUBMITTED
        value: SUBMITTED
      - name: AUTHORIZED
        value: AUTHORIZED
      - name: CANCELED
        value: CANCELED
      - name: DENIED
        value: DENIED
      - name: ACTION_REQUIRED
        value: ACTION_REQUIRED
      - name: PENDING_SUBMISSION
        value: PENDING_SUBMISSION
      - name: REQUIRES_INVESTIGATION
        value: REQUIRES_INVESTIGATION
      - name: ADDITIONAL_INFO_NEEDED
        value: ADDITIONAL_INFO_NEEDED

  IndividualAssignee:
    properties:
      auth0_id: string

  OrganizationAssignee:
    properties:
      organization_id: commons.OrganizationId

  # NOTE(sankruth): this is an organizationId or an Auth0Id based on who the assignee is
  # fern only supports primitives at the moment so we're using a string to represent both
  # ideally, this would be union-typed.
  AssigneeId: string

  Assignee:
    union:
      individual_assignee: IndividualAssignee
      organization_assignee: OrganizationAssignee

  EnrollmentType:
    enum:
      - name: CLAIMS
        value: CLAIMS
      - name: ELIGIBILITY
        value: ELIGIBILITY
      - name: CLAIM_STATUS
        value: CLAIM_STATUS
      - name: REMITTANCE
        value: REMITTANCE
      - name: EFT
        value: EFT

  ProviderNpi: string

  ChangeEnrollmentStatus:
    enum:
      - name: AUTHORIZED
        value: AUTHORIZED
      - name: CANCELED
        value: CANCELED
      - name: DENIED_PAYOR
        value: DENIED-PAYOR
      - name: DENIED_PENDING
        value: DENIED-PENDING
      - name: DENIED_REJECTED
        value: DENIED-REJECTED
      - name: DENIED_PENDING_EXPIRED
        value: DENIED-PENDING EXPIRED
      - name: EXPIRED
        value: EXPIRED
      - name: NEEDS_TEST
        value: NEEDS-TEST
      - name: OPEN
        value: OPEN
      - name: PENDING_RECEIPT
        value: PENDING RECEIPT
      - name: RECEIVED
        value: RECEIVED

  ChangeEnrollmentDocType:
    enum:
      - name: claim_status
        value: Claim Status
      - name: claims
        value: Claims
      - name: eligibility
        value: Eligibility
      - name: remittance
        value: Remittance

  EnrollmentPriority:
    enum:
      - HIGH_PRIORITY
      - NORMAL_PRIORITY

  ChangeEnrollmentBase:
    properties:
      doc_handle: string
      notes: optional<string>
      provider: string
      submitter_id: string
      cpid: string
      doc_type: ChangeEnrollmentDocType
      status: ChangeEnrollmentStatus
      payer_name: string
      idm_username: optional<string>
      npi_number: optional<string>
      provider_num: optional<string>
      provider_status: optional<string>
      tax_id: optional<string>
      payer_id: optional<string>
      reference_id: optional<string>
      sap_id: string
      date_received: optional<commons.Date>
      follow_up_date: optional<commons.Date>
      date_completed: optional<commons.Date>
      date_mailed: optional<commons.Date>

  EnrollmentSource:
    union:
      change_healthcare: ChangeEnrollmentBase

  RemovableAssignee:
    union:
      assignee: Assignee
      remove: {}

  Enrollment:
    properties:
      enrollment_id: EnrollmentId
      organization_id: commons.OrganizationId
      last_updated_at: datetime
      status: EnrollmentStatus
      assignee: optional<Assignee>
      enrollment_type: EnrollmentType
      payer_id: payers.PayerId
      payer_name: payers.PayerName
      provider_npi: ProviderNpi
      priority: optional<EnrollmentPriority>
      source: optional<EnrollmentSource>

  LatestImportDatetimeResponse:
    properties:
      import_datetime: datetime

  EnrollmentFilters:
    properties:
      statuses: optional<list<EnrollmentStatus>>
      enrollment_types: optional<list<EnrollmentType>>
      payer_search_term: optional<string>
      provider_npi: optional<ProviderNpi>
      limit: optional<integer>
      page_token: optional<commons.PageToken>
      organization_provider_id: optional<organization_provider.OrganizationProviderId>
      priority: optional<EnrollmentPriority>
      assignee_id: optional<AssigneeId>
      include_hidden: optional<boolean>

  EnrollmentPage:
    extends: commons.ResourcePage
    properties:
      items: list<Enrollment>

service:
  auth: true
  base-path: /api/enrollments/v2
  availability: in-development
  endpoints:
    get:
      method: GET
      path: "/{enrollment_id}"
      path-parameters:
        enrollment_id: EnrollmentId
      response: Enrollment

    get_multi:
      method: GET
      path: ""
      response: EnrollmentPage
      request:
        name: EnrollmentQueryParameters
        query-parameters:
          statuses:
            type: optional<EnrollmentStatus>
            allow-multiple: true
          enrollment_types:
            type: optional<EnrollmentType>
            allow-multiple: true
          payer_search_term: optional<string>
          provider_npi: optional<ProviderNpi>
          include_hidden: optional<boolean>
          organization_provider_id: optional<organization_provider.OrganizationProviderId>
          limit: optional<integer>
          priority: optional<EnrollmentPriority>
          assignee_id: optional<AssigneeId>
          page_token: optional<commons.PageToken>
    delete:
      method: DELETE
      path: "/{enrollment_id}"
      path-parameters:
        enrollment_id: EnrollmentId

    update:
      method: PATCH
      path: "/{enrollment_id}"
      path-parameters:
        enrollment_id: EnrollmentId
      request:
        name: EnrollmentUpdate
        body:
          properties:
            status: optional<EnrollmentStatus>
            priority: optional<EnrollmentPriority>
            assignee: optional<RemovableAssignee>
            is_hidden: optional<boolean>
      response: Enrollment

    create:
      method: POST
      path: ""
      request:
        name: EnrollmentCreate
        body:
          properties:
            payer_uuid: payers.PayerUuid
            provider_npi: ProviderNpi
            enrollment_type: EnrollmentType
            priority: EnrollmentPriority
      response: Enrollment
      errors:
        - error: commons.UnprocessableEntityError
          docs: Enrollment already exists

    get_latest_change_enrollment_import_datetime:
      method: GET
      path: "/change-import/latest-import-datetime"
      response: LatestImportDatetimeResponse

    download_attachment:
      method: GET
      path: "/{enrollment_id}/attachments/{attachment_id}"
      path-parameters:
        enrollment_id: EnrollmentId
        attachment_id: EnrollmentAttachmentId
      response: EnrollmentAttachmentResponse

    list_attachments:
      method: GET
      path: "/{enrollment_id}/attachments"
      path-parameters:
        enrollment_id: EnrollmentId
      response: list<EnrollmentAttachment>

    # NOTE(sankruth): Fern does not explicitly support a `File` type. We can still define a Fern API
    # and add the File Upload behavior in the endpoint implementation. Notice that the
    # audiences are marked internal, so this endpoint wouldn't be surfaced in any SDK. I understand
    # it's a little weird definition but this is the best way for us to leverage Fern behavior for
    # uploading files.

    # Below is a mocked upload attachment endpoint, that we can potentially just
    # uncomment once Fern supports file upload (07/18/23)
    #    UploadAttachmentRequest:
    #      enrollments_attachment_file: File
    upload_attachment:
      method: PUT
      path: "/{enrollment_id}/attachments"
      path-parameters:
        enrollment_id: EnrollmentId
      #      request: UploadAttachmentRequest
      response: EnrollmentAttachmentId

    delete_attachment:
      method: DELETE
      path: "/{enrollment_id}/attachments/{attachment_id}"
      path-parameters:
        enrollment_id: EnrollmentId
        attachment_id: EnrollmentAttachmentId
