# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: ../../commons.yml
  payers: ../../payers.yml
  x12: ../../x12/v1/__package__.yml

service:
  auth: true
  base-path: /api/remits/v1
  availability: in-development
  endpoints:
    get_multi:
      docs: |
        Returns all remits for the claim_id.
      method: GET
      path: ""
      request:
        name: GetMultiRemitsRequest
        query-parameters:
          claim_id:
            type: commons.ClaimId
            docs: Retrieve all remits for the given claim_id.
          sort:
            type: optional<RemitSortField>
            docs: Defaults to adjudication_date
          sort_direction:
            type: optional<commons.SortDirection>
            docs: Sort direction. Defaults to descending order if not provided.
      response: list<Remit>
      errors:
        - error: commons.EntityNotFoundError
          docs: if no Claim exists with the provided claim_id
        - error: commons.UnauthorizedError
          docs: if the authenticated user does not have permission to view the found Claim

    get_multi_paged:
      method: GET
      path: "/paged"
      request:
        name: GetMultiRemitsPagedRequest
        query-parameters:
          page_token: optional<commons.PageToken>
          limit: optional<integer>
          post_status:
            type: optional<RemitPostStatus>
            docs: Retrieve only remits for the given post_status.
          check_number:
            type: optional<string>
            docs: Retrieve only remits that include the given check_number.
          check_amount_cents:
            type: optional<integer>
            docs: Retrieve only remits that include a check with the exact amount in cents.
          payer_uuid:
            type: optional<payers.PayerUuid>
            docs: Retrieve only remits that refer to the given payer.
          sort:
            type: optional<GetMultiRemitsPagedSortField>
            docs: Defaults to check_date
          sort_direction:
            type: optional<commons.SortDirection>
            docs: Sort direction. Defaults to descending order if not provided.
      response: GetMultiRemitsPagedResponse

    post_remit:
      method: POST
      path: "/{remit_id}/post"
      path-parameters:
        remit_id: RemitId
      response: PostRemitResponse
      errors:
        - error: commons.EntityNotFoundError
          docs: if no EraPayment exists with the provided remit_id
        - error: commons.UnauthorizedError
          docs: if the authenticated user does not have permission to view the EraPayment
        - error: commons.EntityConflictError
          docs: if the remit has already been posted

types:
  RemitId: uuid
  RemitPostStatus:
    enum:
      - name: posted
        value: posted
        docs: A remit that has been accepted and associated with Candid encounter(s).
      - name: unposted
        value: unposted
        docs: A remit that has not yet been accepted and associated with Candid encounter(s).
  RemitSource:
    union:
      clearinghouse: {}
      lockbox: {}
      manual_upload: {}
  RemitSortField:
    enum:
      - payer_name
      - payer_identifier
      - adjudication_date
  ContentContainer:
    properties:
      claim_section: ContentSection
      service_line_sections: map<commons.ServiceLineId, ContentSection>
      content: Content
  ContentSection:
    properties:
      begin_line_number: integer
      end_line_number: integer
  Content:
    union:
      content_string: ContentString
      content_download_url: commons.ContentDownloadUrl
  ContentString: string
  Remit:
    properties:
      id: RemitId
      payer_name: string
      payer_identifier: optional<string>
      adjudication_date: optional<commons.Date>
      check_image_download_url: optional<commons.ContentDownloadUrlWithExpiration>
      content_edi: ContentContainer
      source: RemitSource
      posted_datetime: optional<datetime>
      check_date: date
      check_amount_cents: integer
      check_number: optional<string>
      claim_status_code: optional<x12.ClaimStatusCodeEnum>
      included_claims_count:
        type: integer
        docs: The number of claims the remit contains information for.
  GetMultiRemitsPagedSortField:
    enum:
      - check_amount_cents
      - check_date
  RemitPage:
    extends: commons.ResourcePage
    properties:
      items: list<Remit>
  GetMultiRemitsPagedResponse:
    properties:
      page: RemitPage
      # Maybe include total count in the future here

  PostRemitResponse:
    properties:
      remit: Remit
