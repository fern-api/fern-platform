# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: /api/invoices/v1
  endpoints:
    get:
      docs: |
        Returns Invoice identified by the id.
        If the given id is not found, then 404 response will be returned.
        If the authenticated user does not have permission to view the Invoice
        identified by the id, then 403 response will be returned
      method: GET
      path: /{id}
      path-parameters:
        id:
          type: InvoiceId
          docs: InvoiceId to be returned
      response: Invoice
      errors:
        - commons.EntityNotFoundError
        - commons.UnauthorizedError
    search:
      docs: |
        Returns all Invoices for the authenticated user's organziation.
        If optional patient_external_id is provided in query string, then the result
        will be limited to only those invoices that belong to the patient_external_id
      method: GET
      path: ""
      request:
        name: SearchInvoicesRequest
        query-parameters:
          patient_external_id: optional<commons.PatientExternalId>
          note:
            type: optional<string>
            docs: partial match supported
          due_date_before:
            type: optional<commons.Date>
            docs: all invoices whose due date is before this due date
          due_date_after:
            type: optional<commons.Date>
            docs: all invoices whose due date is after this due date
          status: optional<InvoiceStatus>
          limit:
            type: optional<integer>
            docs: Defaults to 100
          sort:
            type: optional<InvoiceSortField>
            docs: Defaults to created_at
          sort_direction:
            type: optional<commons.SortDirection>
            docs: Sort direction
          page_token: optional<commons.PageToken>
      response: PagedInvoices
    create:
      docs: |
        Create invoices and return the newly created Invoices.
        Please note that single InvoiceCreate can result in multiple Invoices being created due to the
        fact that the InvoiceCreate's claims could belong to multiple billing providers's payment processor
        accounts, thereby requiring creation of multiple invoices.
        If the optional query parameter should_send is provided, then the behavior of whether to send
        the invoice to the customer will depend on the value. Default behavior is to send the invoice
        upon creation of the invoice.
      method: POST
      path: ""
      request:
        name: CreateInvoiceRequest
        query-parameters:
          preview_mode:
            type: optional<boolean>
            docs: If true, invoices will not be created in stripe. Default = False
          should_send:
            type: optional<boolean>
            docs: If the invoice should be sent to the customer. Default = True
        body:
          properties:
            patient_external_id: commons.PatientExternalId
            note: optional<string>
            due_date: commons.Date
            items: list<InvoiceItem>
      response: list<CreatedInvoice>
      errors:
        - commons.EntityConflictError

types:
  InvoiceId: uuid

  PagedInvoices:
    extends: commons.ResourcePage
    properties:
      items: list<Invoice>

  InvoiceSortField:
    enum:
      - created_at
      - updated_at
      - patient_external_id
      - note
      - due_date
      - status

  CreatedInvoice:
    union:
      invoice: Invoice
      invoice_preview: InvoicePreview

  InvoiceFilter:
    properties:
      patient_external_id: optional<commons.PatientExternalId>
      note: optional<string>
      due_date_before: optional<commons.Date>
      due_date_after: optional<commons.Date>
      status: optional<InvoiceStatus>
      limit: optional<integer>
      sort: optional<InvoiceSortField>
      sort_direction: optional<commons.SortDirection>
      page_token: optional<commons.PageToken>

  Invoice:
    properties:
      id: InvoiceId
      created_at: datetime
      updated_at: datetime
      organzation_id: commons.OrganizationId
      source_id: string
      source_customer_id: string
      patient_external_id: commons.PatientExternalId
      note: optional<string>
      due_date: commons.Date
      status: InvoiceStatus
      url: optional<string>
      customer_invoice_url: optional<string>
      items: list<InvoiceItem>

  InvoicePreview:
    properties:
      organzation_id: commons.OrganizationId
      source_customer_id: optional<string>
      source_customer_email: optional<string>
      source_customer_name: optional<string>
      source_customer_url: optional<string>
      patient_external_id: commons.PatientExternalId
      note: optional<string>
      due_date: commons.Date
      status: optional<InvoiceStatus>
      items: list<InvoiceItem>

  InvoiceItem:
    properties:
      service_line_id: commons.ServiceLineId
      amount_cents: integer

  InvoiceStatus:
    enum:
      - draft
      - open
      - paid
      - void
      - uncollectible
