imports:
  commons: ../../commons.yml

service:
  auth: true
  base-path: /api/managed-emr-configs/v1
  availability: in-development
  endpoints:
    getById:
      method: GET
      path: "/{managed_emr_config_id}"
      path-parameters:
        managed_emr_config_id: ManagedEmrConfigId
      response: ManagedEmrConfig
      errors:
        - error: commons.UnprocessableEntityError
          docs: If the EMR integration does not exist

    getMulti:
      method: GET
      path: ""
      request:
        name: ManagedEmrConfigGetMultiQueryParameters
        query-parameters:
          enabled: optional<boolean>
          page_token: optional<commons.PageToken>
          limit: optional<integer>
      response: ManagedEmrConfigPage
      errors:
        - error: commons.UnprocessableEntityError
          docs: If the page limit is < 1 or limit > 9999

    create:
      method: POST
      path: ""
      request: ManagedEmrConfigCreate
      response: ManagedEmrConfig
      errors:
        - error: commons.EntityConflictError
          docs: If an enabled EMR integration already exists

    update:
      method: PUT
      path: "/{managed_emr_config_id}"
      path-parameters:
        managed_emr_config_id: ManagedEmrConfigId
      request: ManagedEmrConfigUpdate
      response: ManagedEmrConfig
      errors:
        - error: commons.UnprocessableEntityError
          docs: If the EMR integration does not exist

    delete:
      method: DELETE
      path: "/{managed_emr_config_id}"
      path-parameters:
        managed_emr_config_id: ManagedEmrConfigId
      errors:
        - error: commons.UnprocessableEntityError
          docs: If the EMR integration does not exist

types:
  ManagedEmrConfigPage:
    extends: commons.ResourcePage
    properties:
      items: list<ManagedEmrConfig>

  ManagedEmrConfigId:
    type: uuid
    docs: The ID of the Managed EMR Config

  ManagedEmrConfigAdditionalDetails:
    union:
      canvas: CanvasEmrConfig
      elation: ElationEmrConfig

  ManagedEmrConfig:
    properties:
      id:
        type: ManagedEmrConfigId
        docs: The ID of the Canvas EMR integration
      billing_start_date:
        type: optional<date>
        docs: The date that the integration is eligible for billing
      create_tasks_for_non_billable_encounters:
        type: boolean
        docs: Create tasks in the EMR system for encounters that are marked as `DNB` but fail to be ingested by our integration
      process_updates_for_existing_encounters:
        type: boolean
        docs: Whether to process updates for existing encounters
      enabled:
        type: boolean
        docs: Whether the EMR integration is enabled
      additional_details:
        type: ManagedEmrConfigAdditionalDetails
        docs: Additional details for the EMR integration

  ManagedEmrConfigCreateAdditionalDetails:
    union:
      canvas: CanvasEmrConfigCreate
      elation: ElationEmrConfigCreate

  ManagedEmrConfigCreate:
    properties:
      billing_start_date:
        type: optional<date>
        docs: The date that the integration is eligible for billing
      create_tasks_for_non_billable_encounters:
        type: boolean
        docs: Create tasks in the EMR system for encounters that are marked as `DNB` but fail to be ingested by our integration
      process_updates_for_existing_encounters:
        type: boolean
        docs: Whether to process updates for existing encounters
      enabled:
        type: boolean
        docs: Whether the EMR integration is enabled
      additional_details:
        type: ManagedEmrConfigCreateAdditionalDetails
        docs: Additional details for the EMR integration

  ManagedEmrConfigUpdateAdditionalDetails:
    union:
      canvas: CanvasEmrConfigUpdate
      elation: ElationEmrConfigUpdate

  ManagedEmrConfigUpdate:
    properties:
      billing_start_date:
        type: optional<date>
        docs: The date that the integration was turned on
      create_tasks_for_non_billable_encounters:
        type: optional<boolean>
        docs: Create tasks in the EMR system for encounters that are marked as `DNB` but fail to be ingested by our integration
      process_updates_for_existing_encounters:
        type: optional<boolean>
        docs: Whether to process updates for existing encounters
      enabled:
        type: optional<boolean>
        docs: Whether the integration is enabled
      additional_details:
        type: optional<ManagedEmrConfigUpdateAdditionalDetails>
        docs: Additional details for the EMR integration

  CanvasEmrConfig:
    properties:
      canvas_export_organization_name:
        type: string
        docs: The name of the organization that the Canvas EMR integration is for
      base_url:
        type: optional<string>
        docs: The base URL for the Canvas EMR integration
      auth_base_url:
        type: string
        docs: The auth base URL for the Canvas EMR integration
      candid_practitioner_id:
        type: optional<string>
        docs: The candid practitioner ID for the Canvas EMR integration
      customer_task_owner:
        type: optional<string>
        docs: The customer task owner for the Canvas EMR integration

  CanvasEmrConfigCreate:
    properties:
      canvas_export_organization_name:
        type: string
        docs: The name of the organization that the Canvas EMR integration is for
      canvas_client_id:
        type: string
        docs: The client ID for the Canvas EMR integration
      canvas_client_secret:
        type: string
        docs: The client secret for the Canvas EMR integration
      base_url:
        type: optional<string>
        docs: The base URL for the Canvas EMR integration
      auth_base_url:
        type: string
        docs: The auth base URL for the Canvas EMR integration
      candid_practitioner_id:
        type: optional<string>
        docs: The candid practitioner ID for the Canvas EMR integration
      customer_task_owner:
        type: optional<string>
        docs: The customer task owner for the Canvas EMR integration

  CanvasEmrConfigUpdate:
    properties:
      canvas_export_organization_name:
        type: optional<string>
        docs: The name of the organization that the Canvas EMR integration is for
      canvas_client_id:
        type: optional<string>
        docs: The client ID for the Canvas EMR integration
      canvas_client_secret:
        type: optional<string>
        docs: The client secret for the Canvas EMR integration
      base_url:
        type: optional<string>
        docs: The base URL for the Canvas EMR integration
      auth_base_url:
        type: optional<string>
        docs: The auth base URL for the Canvas EMR integration
      candid_practitioner_id:
        type: optional<string>
        docs: The candid practitioner ID for the Canvas EMR integration
      customer_task_owner:
        type: optional<string>
        docs: The customer task owner for the Canvas EMR integration

  IntegrationLevelElationServiceFacilityRoutingMetadata:
    properties:
      default_service_facility_group_name:
        type: string
        docs: The default service facility group name for the Elation EMR integration

  RuleLevelElationServiceFacilityRoutingMetadata:
    properties: {}

  FilterActionLevelElationServiceFacilityRoutingMetadata:
    properties: {}

  ElationServiceFacilityRoutingMetadata:
    union:
      integration: IntegrationLevelElationServiceFacilityRoutingMetadata
      rule: RuleLevelElationServiceFacilityRoutingMetadata
      filter_action_rule: FilterActionLevelElationServiceFacilityRoutingMetadata

  ElationEmrConfig:
    properties:
      elation_username:
        type: optional<string>
        docs: The username for the Elation EMR integration. This has been deprecated by Elation.
      enable_patient_payment:
        type: boolean
        docs: Whether to enable patient payment for the Elation EMR integration. This has been deprecated by Elation.
      service_facility_routing_location:
        type: ElationServiceFacilityRoutingMetadata
        docs: The service facility routing location for the Elation EMR integration

  ElationEmrConfigCreate:
    properties:
      elation_client_id:
        type: string
        docs: The client ID for the Elation EMR integration
      elation_client_secret:
        type: string
        docs: The client secret for the Elation EMR integration
      elation_username:
        type: optional<string>
        docs: The username for the Elation EMR integration. This has been deprecated by Elation.
      elation_password:
        type: optional<string>
        docs: The password for the Elation EMR integration
      enable_patient_payment:
        type: boolean
        docs: Whether to enable patient payment for the Elation EMR integration. This has been deprecated by Elation.
      service_facility_routing_location:
        type: ElationServiceFacilityRoutingMetadata
        docs: The service facility routing location for the Elation EMR integration

  ElationEmrConfigUpdate:
    properties:
      elation_client_id:
        type: optional<string>
        docs: The client ID for the Elation EMR integration
      elation_client_secret:
        type: optional<string>
        docs: The client secret for the Elation EMR integration
      elation_username:
        type: optional<string>
        docs: The username for the Elation EMR integration. This has been deprecated by Elation.
      elation_password:
        type: optional<string>
        docs: The password for the Elation EMR integration
      enable_patient_payment:
        type: optional<boolean>
        docs: Whether to enable patient payment for the Elation EMR integration. This has been deprecated by Elation.
      service_facility_routing_location:
        type: optional<ElationServiceFacilityRoutingMetadata>
        docs: The service facility routing location for the Elation EMR integration
