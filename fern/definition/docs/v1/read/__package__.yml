# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  rootCommons: ../../../commons.yml
  apiReadV1: ../../../api/v1/read/__package__.yml
  apiReadV1Endpoint: ../../../api/v1/read/endpoint.yml

service:
  base-path: /registry/docs
  auth: false
  audiences:
    - read
  endpoints:
    getDocsForDomainLegacy:
      availability: deprecated
      method: GET
      path: /load/{domain}
      path-parameters:
        domain: string
      response: DocsDefinition
      errors:
        - DomainNotRegisteredError

    getDocsForDomain:
      availability: deprecated
      method: POST
      path: /load
      request:
        name: LoadDocsForDomainRequest
        body:
          properties:
            domain: string
      response: DocsDefinition
      errors:
        - DomainNotRegisteredError

types:
  PageId: string

  Url: string

  FileId: string

  Height: double

  AlgoliaSearchIndex: string

  LoadDocsForUrlResponse:
    properties:
      baseUrl: string
      definition: DocsDefinition

  VersionId: string

  IndexSegmentId: string

  IndexSegment:
    properties:
      id: IndexSegmentId
      searchApiKey: string

  LegacyMultiAlgoliaIndexInfo:
    properties:
      algoliaIndex: optional<string>

  SingleAlgoliaIndexInfo:
    union:
      unversioned: UnversionedSingleAlgoliaIndexInfo
      versioned: VersionedSingleAlgoliaIndexInfo

  UnversionedSingleAlgoliaIndexInfo:
    properties:
      indexSegment: IndexSegment

  VersionedSingleAlgoliaIndexInfo:
    properties:
      indexSegmentsByVersionId: map<VersionId, IndexSegment>

  SearchInfo:
    union:
      legacyMultiAlgoliaIndex:
        docs: The legacy search storage where each docs website got its own algolia index.
        type: LegacyMultiAlgoliaIndexInfo
      singleAlgoliaIndex:
        docs: Every docs website is indexed in a global Algolia Index
        type: SingleAlgoliaIndexInfo

  DocsDefinition:
    properties:
      algoliaSearchIndex: optional<AlgoliaSearchIndex>
      pages: map<PageId, PageContent>
      apis: map<rootCommons.ApiDefinitionId, apiReadV1.ApiDefinition>
      files: map<FileId, Url>
      config: DocsConfig
      search: SearchInfo

  PageContent:
    properties:
      markdown: string # eventually PageContent should just be a FileId ?

  DocsConfig:
    properties:
      title: optional<string>
      navigation: NavigationConfig
      logo: optional<FileId>
      logoV2: optional<LogoV2>
      logoHeight: optional<Height>
      logoHref: optional<Url>
      favicon: optional<FileId>
      backgroundImage: optional<FileId>
      colors: optional<ColorsConfig>
      colorsV2: optional<ColorsConfigV2>
      colorsV3: ColorsConfigV3
      navbarLinks: list<NavbarLink>
      typography: optional<DocsTypographyConfig>

  ColorsConfigV3:
    union:
      dark: DarkModeConfig
      light: LightModeConfig
      darkAndLight: DarkAndLightModeConfig

  DarkModeConfig:
    properties:
      logo: optional<FileId>
      accentPrimary: RgbColor
      background: Background

  LightModeConfig:
    properties:
      logo: optional<FileId>
      accentPrimary: RgbColor
      background: Background

  DarkAndLightModeConfig:
    properties:
      dark: DarkModeConfig
      light: LightModeConfig

  Background:
    union:
      solid: RgbColor
      gradient: {}

  LogoV2:
    properties:
      dark: optional<FileId>
      light: optional<FileId>

  DocsTypographyConfig:
    properties:
      headingsFont: optional<FontConfig>
      bodyFont: optional<FontConfig>
      codeFont: optional<FontConfig>

  FontConfig:
    properties:
      name: string
      fontFile: FileId

  NavigationConfig:
    discriminated: false
    union:
      - UnversionedNavigationConfig
      - VersionedNavigationConfig

  UnversionedNavigationConfig:
    discriminated: false
    union:
      - UnversionedTabbedNavigationConfig
      - UnversionedUntabbedNavigationConfig

  UnversionedTabbedNavigationConfig:
    properties:
      tabs: list<NavigationTab>

  NavigationTab:
    properties:
      title: string
      icon: string
      items: list<NavigationItem>
      urlSlug: string

  UnversionedUntabbedNavigationConfig:
    properties:
      items: list<NavigationItem>

  VersionedNavigationConfig:
    properties:
      versions: list<VersionedNavigationConfigData>

  VersionedNavigationConfigData:
    properties:
      version: VersionId
      urlSlug: string
      availability: optional<VersionAvailability>
      config: UnversionedNavigationConfig

  VersionAvailability:
    enum:
      - Stable
      - GenerallyAvailable
      - Deprecated
      - Beta

  NavigationItem:
    union:
      page: PageMetadata
      api: ApiSection
      section: DocsSection

  PageMetadata:
    properties:
      id: PageId
      title: string
      urlSlug: string

  NavbarLink:
    union:
      primary: NavbarPrimaryLink
      secondary: NavbarSecondaryLink

  NavbarPrimaryLink:
    properties:
      url: string
      text: string

  NavbarSecondaryLink:
    properties:
      url: string
      text: string

  ApiSection:
    properties:
      title: string
      api: rootCommons.ApiDefinitionId
      urlSlug: string
      skipUrlSlug: boolean
      artifacts: optional<ApiArtifacts>
      showErrors: boolean

  DocsSection:
    properties:
      title: string
      items: list<NavigationItem>
      urlSlug: string
      skipUrlSlug: boolean
      collapsed: boolean

  ColorsConfig:
    properties:
      accentPrimary: optional<RgbColor>

  ColorsConfigV2:
    properties:
      accentPrimary: optional<ColorConfig>
      background: optional<ColorConfig>

  ColorConfig:
    union:
      unthemed: ColorUnthemedConfig
      themed: ColorThemedConfig

  ColorUnthemedConfig:
    properties:
      color: optional<RgbColor>

  ColorThemedConfig:
    properties:
      dark: optional<RgbColor>
      light: optional<RgbColor>

  RgbColor:
    properties:
      r: integer
      g: integer
      b: integer

  ApiArtifacts:
    properties:
      sdks: list<PublishedSdk>
      postman: optional<PublishedPostmanCollection>

  PublishedPostmanCollection:
    properties:
      url: string
      githubRepo: optional<GitHubRepo>

  PublishedSdk:
    union:
      npm: NpmPackage
      maven: MavenPackage
      pypi: PypiPackage

  NpmPackage:
    properties:
      packageName: string
      githubRepo: GitHubRepo
      version: string

  MavenPackage:
    properties:
      coordinate: string
      githubRepo: GitHubRepo
      version: string

  PypiPackage:
    properties:
      packageName: string
      githubRepo: GitHubRepo
      version: string

  GitHubRepo:
    properties:
      name: string
      url: string

  AlgoliaRecordType:
    enum:
      - endpoint
      - page

  AlgoliaRecord:
    audiences:
      - read
    properties:
      type: AlgoliaRecordType
      title: string
      subtitle: string
      path: string # path does not include version slug
      version: optional<VersionId>
      versionSlug: optional<string>
      indexSegmentId: optional<string>

errors:
  DomainNotRegisteredError:
    status-code: 404
