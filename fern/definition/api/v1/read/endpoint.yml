# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  type: type.yml
  commons: commons.yml

types:
  EnvironmentId: string

  EndpointId: string

  Availability: 
    enum: 
      - GenerallyAvailable
      - Deprecated
      - Beta

  EndpointDefinition:
    extends: commons.WithDescription
    properties:
      authed:
        type: boolean
        docs: When this is true, the api definition will have a union for auth
      availability: optional<Availability>
      defaultEnvironment: optional<EnvironmentId>
      environments: list<Environment>
      method: HttpMethod
      id: EndpointId
      urlSlug: string
      name: optional<string>
      path: EndpointPath
      queryParameters: list<QueryParameter>
      headers: list<Header>
      request: optional<HttpRequest>
      response: optional<HttpResponse>
      errors: list<ErrorDeclaration>
      errorsV2: optional<list<ErrorDeclarationV2>>
      examples: list<ExampleEndpointCall>

  Environment:
    properties:
      id: EnvironmentId
      baseUrl: string

  HttpMethod:
    enum:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE

  EndpointPath:
    properties:
      parts: list<EndpointPathPart>
      pathParameters: list<PathParameter>

  EndpointPathPart:
    union:
      literal: string
      pathParameter: PathParameterKey

  PathParameter:
    extends: commons.WithDescription
    properties:
      key: PathParameterKey
      type: type.TypeReference

  PathParameterKey: string

  QueryParameter:
    extends: commons.WithDescription
    properties:
      key: string
      type: type.TypeReference

  Header:
    extends: commons.WithDescription
    properties:
      key: string
      type: type.TypeReference

  HttpRequest:
    extends: commons.WithDescription
    properties:
      contentType: string
      type: HttpRequestBodyShape

  HttpRequestBodyShape:
    union:
      object: type.ObjectType
      reference: type.TypeReference
      fileUpload: {}

  HttpResponse:
    extends: commons.WithDescription
    properties:
      type: HttpResponseBodyShape
  
  JsonBodyShape: 
    union:
      object: type.ObjectType
      reference: type.TypeReference

  HttpResponseBodyShape:
    union:
      object: type.ObjectType
      reference: type.TypeReference
      fileDownload: {}
      streamingText: {}
      streamCondition: 
        type: StreamConditionResponse
        docs: | 
          A response that can either be streaming or REST

  StreamConditionResponse: 
    properties: 
      response: NonStreamResponse
      streamResponse: StreamResponse
      streamCondition: StreamCondition
  
  NonStreamResponse: 
    properties: 
      shape: JsonBodyShape
      examples: list<ExampleEndpointCall>
  
  StreamResponse:   
    properties: 
      shape: JsonBodyShape
      examples: list<ExampleEndpointCall>
  
  StreamCondition:
    union:
      booleanRequestProperty: type.PropertyKey

  ErrorDeclaration:
    extends: commons.WithDescription
    properties:
      type: optional<type.TypeReference>
      statusCode: integer
  
  ErrorDeclarationV2: 
    extends: commons.WithDescription
    properties: 
      type: optional<type.TypeShape>
      statusCode: integer
      name: optional<string>

  # examples

  ExampleEndpointCall:
    extends: commons.WithDescription
    properties:
      path: string
      pathParameters: map<PathParameterKey, unknown>
      queryParameters: map<string, unknown>
      headers: map<string, unknown>
      requestBody: unknown
      requestBodyV3: optional<ExampleEndpointRequest>
      responseStatusCode: integer
      responseBody: unknown
      responseBodyV3: optional<ExampleEndpointResponse>
      codeExamples: CodeExamples

  CodeExamples:
    properties:
      nodeAxios: optional<string>
      pythonSdk: optional<PythonSnippet>

  ExampleEndpointRequest:
    union:
      json: unknown
      form: map<string, FormValue>

  FormValue:
    union:
      json: unknown
      filename: string

  ExampleEndpointResponse:
    union:
      json: unknown
      filename: string
      stream: list<unknown>
    
  PythonSnippet: 
    properties: 
      async_client: string
      sync_client: string
