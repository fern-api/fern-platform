# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: false
  base-path: /api/fern-docs/proxy
  endpoints:
    rest:
      path: /rest
      display-name: Proxy REST
      method: POST
      request:
        body: ProxyRequest
      response: ProxyResponse
    grpc:
      path: /grpc
      display-name: Proxy gRPC
      method: POST
      request:
        body: GrpcProxyRequest
      response: GrpcProxyResponse
    file:
      path: /file
      display-name: Proxy File
      method: POST
      request:
        body: ProxyRequest
      response: file
    stream:
      path: /stream
      display-name: Proxy Stream
      method: POST
      request:
        body: ProxyRequest
      response-stream: unknown

types:
  ProxyRequest:
    properties:
      url: string
      method: string
      headers: map<string, string>
      body: RequestSerializableBody
      stream: optional<boolean>
      streamTerminator: optional<string>

  ProxyResponse:
    properties:
      response: ResponseSerializableBody
      time: integer
      size: optional<string>

  RequestSerializableBody:
    union:
      json: unknown
      form-data: map<string, SerializableFormDataEntryValue>
      octet-stream: SerializableFile

  ResponseSerializableBody:
    properties:
      headers: map<string, string>
      ok: boolean
      redirected: boolean
      status: integer
      statusText: string
      type: ResponseType
      url: string

  SerializableFormDataEntryValue:
    union:
      file: optional<SerializableFile>
      fileArray: list<SerializableFileValue>
      json: FormDataJsonEntry

  FormDataJsonEntry:
    properties:
      value: unknown
      contentType: optional<string>

  SerializableFile:
    properties:
      value: SerializableFileValue

  SerializableFileValue:
    properties:
      name: string
      lastModified: integer
      size: integer
      type: string
      dataUrl: base64

  ResponseType:
    enum:
      - basic
      - cors
      - default
      - error
      - opaque
      - opaqueredirect

  GrpcProxyRequest:
    properties:
      baseUrl:
        docs: The base URL to use for the call (e.g. https://acme.co).
        type: string
      endpoint:
        docs: The gRPC endpoint name (e.g. user.v1.UserService/GetUser).
        type: string
      headers:
        docs: |
          The set of encoded headers to send with the request (e.g. 'Authorization: Bearer ...').
        type: map<string, string>
      schema:
        docs: |
          The Protobuf schema that defines the API. If not specified, it's assumed the server
          supports gRPC reflection.
        type: optional<ProtobufSchema>
      body:
        docs: |
          The request body (represented as JSON) to include in the request, if any.
        type: optional<unknown>

  GrpcProxyResponse:
    properties:
      body: optional<unknown>

  ProtobufSchema:
    union:
<<<<<<< HEAD
<<<<<<< HEAD
      remote: RemoteProtobufSchema

=======
      local: LocalProtobufSchema
      remote: RemoteProtobufSchema

  LocalProtobufSchema:
    properties:
      filepath:
        docs: The local filepath to the Protobuf schema files that define this API.
        type: string

>>>>>>> ed23f63d7 (feat(proxy): Add ability to call gRPC endpoints)
=======
      remote: RemoteProtobufSchema

>>>>>>> 96e0ca99b (Simplify to just remote for now)
  RemoteProtobufSchema:
    properties:
      sourceUrl:
        docs: |
          The remote URL containing the Protobuf schema files that define this API.
          The content is assumed to be in a .zip file.
        type: string
