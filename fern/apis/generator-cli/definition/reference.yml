# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  ReferenceConfig:
    audiences:
      - public
    docs: |
      The information to include within the `reference.md` file generated by the CLI.
      The information here should really be all defined by the generator, and not user provided.
      We intentionally keep this a bit flexible in the event SDKs structure their package/module
      references in a unique way for the same API.
    properties:
      rootSection: optional<RootPackageReferenceSection>
      sections: list<ReferenceSection>
      language:
        type: Language
        docs: Similar to in README generation, the language property is used to determine the language to use when generating code blocks in markdown.

  RootPackageReferenceSection:
    properties:
      description: optional<string>
      endpoints: list<EndpointReference>

  ReferenceSection:
    properties:
      title: string
      description: optional<string>
      endpoints: list<EndpointReference>

  EndpointReference:
    properties:
      title:
        type: MethodInvocationSnippet
        docs: |
          The title is a code snippet that is shown when the endpoint's reference is collapsed. 
          For example, `client.subpackage.method({ ...params }) -> ReturnValue`.
      description: optional<string>
      snippet:
        type: string
        docs: |
          A "full" snippet, showing all the parameters, with a full example.
          ```typescript
          await client.subpackage.method({
              expiresIn: 300,
          });
          ```
      parameters: list<ParameterReference>

  MethodInvocationSnippet:
    docs: |
      The method invocation snippet is one which appears when the endpoint's reference is collapsed.
      It is meant to give a high-level overview of the endpoint -- e.g. the method name and it's return value.
      The snippet itself should be a list of concatable content, which the CLI will handle hyperlinking. Note that this
      will essentially just be a "".join(snippetParts), so you must handle making sure the right `.`, etc. are in the parts.
      Note this is a separate object to make it easier to add additional properties down the road, for example if 
      we wanted to be specific about what portion of the snippet we hyperlink, etc.
    properties:
      snippetParts: list<LinkedText>
      returnValue: optional<LinkedText>

  LinkedText:
    properties:
      text: string
      location: optional<RelativeLocation>

  ParameterReference:
    properties:
      name: string
      description: optional<string>
      location: optional<RelativeLocation>
      type: string
      required: boolean

  RelativeLocation:
    properties:
      path:
        type: string
        docs: |
          A relative location is a path to a file or directory relative to the root of the repository.
          This is used to specify a link for a type or a function that the `reference.md` can point users to.

  Language:
    enum:
      - JAVA
      - PYTHON
      - GO
      - RUBY
      - CSHARP
      - TYPESCRIPT
