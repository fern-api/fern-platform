# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  rootCommons: ../../../commons.yml
  commons: ../commons/commons.yml

service:
  base-path: /registry/docs
  auth: false
  audiences:
    - write
  endpoints:
    startDocsRegister:
      auth: true
      method: POST
      path: /init
      request:
        name: StartDocsRegisterRequest
        body:
          properties:
            domain: string
            orgId: rootCommons.OrgId
            filepaths:
              type: list<FilePath>
              docs: Relative filepath from docs folder.
      response: StartDocsRegisterResponse

    finishDocsRegister:
      auth: true
      method: POST
      path: /register/{docsRegistrationId}
      path-parameters:
        docsRegistrationId: DocsRegistrationId
      request:
        name: RegisterDocsRequest
        body:
          properties:
            docsDefinition: DocsDefinition
      errors:
        - rootCommons.UnauthorizedError
        - rootCommons.UserNotInOrgError
        - DocsRegistrationIdNotFound

types:
  FilePath:
    type: string
    docs: Each string is a unique key for the file. You can use the filepath as a key.

  DocsRegistrationId: string

  StartDocsRegisterResponse:
    properties:
      docsRegistrationId: DocsRegistrationId
      uploadUrls: map<FilePath, FileS3UploadUrl>

  FileS3UploadUrl:
    properties:
      uploadUrl: string
      fileId:
        type: commons.FileId
        docs: |
          When reading docs we will return a map<commons.FileId, URL> that you can use to look up the docs.

  Height: double

  DocsDefinition:
    properties:
      pages: map<commons.PageId, PageContent>
      config: DocsConfig

  PageContent:
    properties:
      markdown: string # eventually PageContent should just be a commons.FileId ?
      editThisPageUrl: optional<commons.Url>

  DocsConfig:
    properties:
      title: optional<string>

      # navigation
      navigation: NavigationConfig
      navbarLinks: optional<list<NavbarLink>>
      footerLinks: optional<list<FooterLink>>

      # logo
      logoHeight: optional<Height>
      logoHref: optional<commons.Url>
      favicon: optional<commons.FileId>

      # seo
      metadata: optional<MetadataConfig>
      redirects: optional<list<RedirectConfig>>
      # TODO: customize 404 page/behavior

      # styles
      colorsV3: optional<ColorsConfigV3>
      layout: optional<DocsLayoutConfig>
      typographyV2: optional<DocsTypographyConfigV2>

      # integrations
      integrations: optional<IntegrationsConfig>

      # css and js
      css: optional<CssConfig>
      js: optional<JsConfig>

      # deprecated
      backgroundImage: optional<commons.FileId>
      logoV2: optional<ThemedFileId>
      logo:
        type: optional<commons.FileId>
        availability: deprecated
      colors:
        type: optional<ColorsConfig>
        availability: deprecated
      colorsV2:
        type: optional<ColorsConfigV2>
        availability: deprecated
      typography:
        type: optional<DocsTypographyConfig>
        availability: deprecated

  ColorsConfigV3:
    union:
      dark: ThemeConfig
      light: ThemeConfig
      darkAndLight: DarkAndLightModeConfig

  ThemeConfig:
    properties:
      logo: optional<commons.FileId>
      backgroundImage: optional<commons.FileId>
      accentPrimary: RgbaColor
      background: optional<RgbaColor>
      border: optional<RgbaColor>
      sidebarBackground: optional<RgbaColor>
      headerBackground: optional<RgbaColor>
      cardBackground: optional<RgbaColor>

  DarkAndLightModeConfig:
    properties:
      dark: ThemeConfig
      light: ThemeConfig

  ThemedFileId:
    properties:
      dark: optional<commons.FileId>
      light: optional<commons.FileId>

  DocsTypographyConfig:
    properties:
      headingsFont: optional<FontConfig>
      bodyFont: optional<FontConfig>
      codeFont: optional<FontConfig>

  DocsTypographyConfigV2:
    properties:
      headingsFont: optional<FontConfigV2>
      bodyFont: optional<FontConfigV2>
      codeFont: optional<FontConfigV2>

  FontConfig:
    properties:
      name: string
      fontFile: commons.FileId

  # TODO: add support for google fonts
  FontConfigV2:
    union:
      custom: CustomFontConfig

  CustomFontConfig:
    properties:
      name: string
      variants: list<CustomFontConfigVariant>
      display: optional<FontDisplay>
      fallback: optional<list<string>>
      # declarations
      fontVariationSettings: optional<string>

  CustomFontConfigVariant:
    properties:
      fontFile: commons.FileId
      weight: optional<list<string>>
      style: optional<list<FontStyle>>

  FontStyle:
    enum:
      - normal
      - italic

  FontDisplay:
    enum:
      - auto
      - block
      - swap
      - fallback
      - optional

  NavbarLink:
    union:
      filled: NavbarLinkMetadata
      outlined: NavbarLinkMetadata
      minimal: NavbarLinkMetadata
      github: NavbarGithubMetadata

      # deprecated
      primary: NavbarLinkMetadata # -> outlined
      secondary: NavbarLinkMetadata # -> minimal

  NavbarLinkMetadata:
    properties:
      url: string
      text: optional<string>
      icon: optional<string>
      rightIcon: optional<string>
      rounded: optional<boolean>

  NavbarGithubMetadata:
    properties:
      url: string # github repo url

  NavigationConfig:
    discriminated: false
    union:
      - UnversionedNavigationConfig
      - VersionedNavigationConfig

  UnversionedNavigationConfig:
    discriminated: false
    union:
      - UnversionedTabbedNavigationConfig
      - UnversionedUntabbedNavigationConfig

  UnversionedTabbedNavigationConfig:
    properties:
      tabs: list<NavigationTab>

  NavigationTab:
    discriminated: false
    union:
      - NavigationTabGroup
      - NavigationTabLink

  NavigationTabGroup:
    properties:
      title: string
      icon: optional<string>
      items: list<NavigationItem>
      urlSlugOverride: optional<string>

  NavigationTabLink:
    properties:
      title: string
      icon: optional<string>
      url: string

  UnversionedUntabbedNavigationConfig:
    properties:
      items: list<NavigationItem>

  VersionedNavigationConfig:
    properties:
      versions: list<VersionedNavigationConfigData>

  VersionedNavigationConfigData:
    properties:
      version: string
      urlSlugOverride: optional<string>
      availability: optional<VersionAvailability>
      config: UnversionedNavigationConfig

  VersionAvailability:
    enum:
      - Stable
      - GenerallyAvailable
      - Deprecated
      - Beta

  DocsLayoutConfig:
    properties:
      pageWidth: optional<PageWidthSizeConfig>
      contentWidth: optional<SizeConfig>
      sidebarWidth: optional<SizeConfig>
      headerHeight: optional<SizeConfig>
      searchbarPlacement: optional<SidebarOrHeaderPlacement>
      tabsPlacement: optional<SidebarOrHeaderPlacement>
      contentAlignment: optional<ContentAlignment>
      headerPosition: optional<HeaderPosition>
      disableHeader: optional<boolean>

  SidebarOrHeaderPlacement:
    enum:
      - HEADER
      - SIDEBAR

  ContentAlignment:
    enum:
      - CENTER
      - LEFT

  HeaderPosition:
    enum:
      - FIXED
      - ABSOLUTE

  PageWidthSizeConfig:
    union:
      px: double
      rem: double
      full: {}

  SizeConfig:
    union:
      px: double
      rem: double

  NavigationItem:
    union:
      page: PageMetadata
      api: ApiSection
      section: DocsSection
      link: LinkMetadata

  PageMetadata:
    properties:
      id: commons.PageId
      title: string
      icon: optional<string>
      hidden: optional<boolean>
      urlSlugOverride: optional<string>
      fullSlug: optional<list<string>>

  LinkMetadata:
    properties:
      title: string
      icon: optional<string>
      url: string

  ApiSection:
    properties:
      title: string
      icon: optional<string>
      hidden: optional<boolean>
      api: rootCommons.ApiDefinitionId
      artifacts:
        type: optional<ApiArtifacts>
        availability: deprecated
      skipUrlSlug: optional<boolean>
      showErrors: optional<boolean>
      changelog: optional<ChangelogSection>
      urlSlugOverride: optional<string>
      fullSlug: optional<list<string>>
      navigation:
        type: optional<ApiNavigationConfigRootV1>
        availability: deprecated
      navigationV2: optional<ApiNavigationConfigRootV2>
      longScrolling: optional<boolean>
      flattened: optional<boolean>

  ApiNavigationConfigRootV2:
    properties:
      summaryPageId: optional<commons.PageId>
      items: list<ApiNavigationConfigItemV2>

  ApiNavigationConfigItemV2:
    union:
      subpackage: ApiNavigationConfigSubpackageV2
      endpoint: commons.EndpointLocator
      websocket: commons.WebSocketLocator
      webhook: commons.WebhookLocator
      page: PageMetadata

  ApiNavigationConfigSubpackageV2:
    properties:
      summaryPageId: optional<commons.PageId>
      subpackageId: commons.SubpackageId
      items: list<ApiNavigationConfigItemV2>

  # Deprecated types:

  ApiNavigationConfigRootV1:
    availability: deprecated
    properties:
      summaryPageId: optional<commons.PageId>
      items: list<ApiNavigationConfigItemV1>

  ApiNavigationConfigItemV1:
    availability: deprecated
    union:
      subpackage: ApiNavigationConfigSubpackageV1
      endpointId: commons.EndpointId
      websocketId: commons.WebSocketId
      webhookId: commons.WebhookId
      page: PageMetadata

  ApiNavigationConfigSubpackageV1:
    availability: deprecated
    properties:
      summaryPageId: optional<commons.PageId>
      subpackageId: commons.SubpackageId
      items: list<ApiNavigationConfigItemV1>

  ChangelogSection:
    properties:
      title:
        type: optional<string>
        docs: |
          Optional title for the changelog section. Defaults to "Changelog" if not provided.
      icon:
        type: optional<string>
        docs: Defaults to ActivityLog icon
      hidden: optional<boolean>
      description: optional<string>
      pageId:
        type: optional<string>
        docs: |
          Optional mdx content to display at the top of the changelog section. The title and description will be parsed from the frontmatter and replace the config-defined values.
      items: list<ChangelogItem>
      urlSlug: string
      fullSlug: optional<list<string>>

  ChangelogItem:
    properties:
      date: date
      pageId: string
      hidden: optional<boolean>

  DocsSection:
    properties:
      title: string
      icon: optional<string>
      items: list<NavigationItem>
      urlSlugOverride: optional<string>
      collapsed: optional<boolean>
      hidden: optional<boolean>
      skipUrlSlug: optional<boolean>
      fullSlug: optional<list<string>>

  ColorsConfig:
    properties:
      accentPrimary: optional<RgbaColor>

  ColorsConfigV2:
    properties:
      accentPrimary: optional<ColorConfig>
      background: optional<ColorConfig>

  ColorConfig:
    union:
      unthemed: ColorUnthemedConfig
      themed: ColorThemedConfig

  ColorUnthemedConfig:
    properties:
      color: optional<RgbaColor>

  ColorThemedConfig:
    properties:
      dark: optional<RgbaColor>
      light: optional<RgbaColor>

  RgbaColor:
    properties:
      r: integer
      g: integer
      b: integer
      a: optional<double>

  ApiArtifacts:
    properties:
      sdks: list<PublishedSdk>
      postman: optional<PublishedPostmanCollection>

  PublishedPostmanCollection:
    properties:
      url: string
      githubRepoName: optional<string>

  PublishedSdk:
    union:
      npm: NpmPackage
      maven: MavenPackage
      pypi: PypiPackage

  NpmPackage:
    properties:
      packageName: string
      githubRepoName: string
      version: string

  MavenPackage:
    properties:
      coordinate: string
      githubRepoName: string
      version: string

  PypiPackage:
    properties:
      packageName: string
      githubRepoName: string
      version: string

  InvalidDomainErrorBody:
    properties:
      requiredDomainSuffix:
        type: string
        docs: Value the domain should end with (i.e. docs.buildwithfern.com or dev.docs.buildwithfern.com)

  InvliadCustomDomainErrorBody:
    properties:
      overlappingDomains: list<OverlappingCustomDomains>

  OverlappingCustomDomains: list<string>

  CssConfig:
    properties:
      inline: optional<list<string>>

  JsConfig:
    properties:
      remote: optional<list<JsRemoteConfig>>
      files: list<JsFileConfig>
      inline: optional<list<string>>

  JsRemoteConfig:
    properties:
      url: commons.Url
      strategy: optional<JsScriptStrategy>

  JsFileConfig:
    properties:
      fileId: commons.FileId
      strategy: optional<JsScriptStrategy>

  JsScriptStrategy:
    enum:
      - beforeInteractive
      - afterInteractive # default
      - lazyOnload

  IntegrationsConfig:
    properties:
      intercom: optional<string>

  MetadataConfig:
    properties:
      "og:site_name": optional<string>
      "og:title": optional<string>
      "og:description": optional<string>
      "og:url": optional<string>
      "og:image": optional<commons.FileIdOrUrl>
      "og:image:width": optional<double>
      "og:image:height": optional<double>
      "og:locale": optional<string>
      "og:logo": optional<commons.FileIdOrUrl>
      "twitter:title": optional<string>
      "twitter:description": optional<string>
      "twitter:image": optional<commons.FileIdOrUrl>
      "twitter:handle": optional<string>
      "twitter:site": optional<string>
      "twitter:url": optional<string>
      "twitter:card": optional<TwitterCardSetting>

  RedirectConfig:
    properties:
      source: string
      destination: string

  TwitterCardSetting:
    enum:
      - summary
      - summary_large_image
      - app
      - player

  FooterLink:
    union:
      github: commons.Url
      twitter: commons.Url
      x: commons.Url
      linkedin: commons.Url
      youtube: commons.Url
      instagram: commons.Url
      facebook: commons.Url
      discord: commons.Url
      slack: commons.Url
      hackernews: commons.Url
      medium: commons.Url
      website: commons.Url

errors:
  DocsRegistrationIdNotFound:
    status-code: 404
