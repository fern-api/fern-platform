# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  rootCommons: ../../../commons.yml
  commons: ../commons/commons.yml
  links: ../commons/links.yml
  typography: ../commons/typography.yml
  colors: ../commons/colors.yml
  layout: ../commons/layout.yml

service:
  base-path: /registry/docs
  auth: false
  audiences:
    - write
  endpoints:
    startDocsRegister:
      auth: true
      method: POST
      path: /init
      request:
        name: StartDocsRegisterRequest
        body:
          properties:
            domain: string
            orgId: rootCommons.OrgId
            filepaths:
              type: list<FilePath>
              docs: Relative filepath from docs folder.
      response: StartDocsRegisterResponse

    finishDocsRegister:
      auth: true
      method: POST
      path: /register/{docsRegistrationId}
      path-parameters:
        docsRegistrationId: DocsRegistrationId
      request:
        name: RegisterDocsRequest
        body:
          properties:
            docsDefinition: DocsDefinition
      errors:
        - rootCommons.UnauthorizedError
        - rootCommons.UserNotInOrgError
        - DocsRegistrationIdNotFound

types:
  FilePath:
    type: string
    docs: Each string is a unique key for the file. You can use the filepath as a key.

  DocsRegistrationId: string

  StartDocsRegisterResponse:
    properties:
      docsRegistrationId: DocsRegistrationId
      uploadUrls: map<FilePath, FileS3UploadUrl>

  FileS3UploadUrl:
    properties:
      uploadUrl: string
      fileId:
        type: commons.FileId
        docs: |
          When reading docs we will return a map<FileId, URL> that you can use to look up the docs.

  Height: double

  PageId: string

  Url: string

  DocsDefinition:
    properties:
      pages: map<PageId, PageContent>
      config: DocsConfig

  PageContent:
    properties:
      markdown: string # eventually PageContent should just be a FileId ?
      editThisPageUrl: optional<Url>

  DocsConfig:
    properties:
      title: optional<string>
      navigation: NavigationConfig

      # logo
      logoHeight: optional<Height>
      logoHref: optional<Url>
      favicon: optional<commons.FileId>

      # styles
      colorsV3: optional<colors.ColorsConfigV3>
      headerLinks: optional<links.HeaderLinksConfig>
      layout: optional<layout.DocsLayoutConfig>
      typographyV2: optional<typography.DocsTypographyConfigV2>

      # css and js
      css: optional<CssConfig>
      js: optional<JsConfig>

      # deprecated, but still supported for backwards compatibility
      backgroundImage:
        type: optional<commons.FileId>
        availability: deprecated
      logoV2:
        type: optional<commons.ThemedFileId>
        availability: deprecated
      logo:
        type: optional<commons.FileId>
        availability: deprecated
      colors:
        type: optional<colors.ColorsConfig>
        availability: deprecated
      colorsV2:
        type: optional<colors.ColorsConfigV2>
        availability: deprecated
      typography:
        type: optional<DocsTypographyConfig>
        availability: deprecated
      navbarLinks:
        type: optional<list<links.NavbarLink>>
        availability: deprecated

  NavigationConfig:
    discriminated: false
    union:
      - UnversionedNavigationConfig
      - VersionedNavigationConfig

  UnversionedNavigationConfig:
    discriminated: false
    union:
      - UnversionedTabbedNavigationConfig
      - UnversionedUntabbedNavigationConfig

  UnversionedTabbedNavigationConfig:
    properties:
      tabs: list<NavigationTab>

  NavigationTab:
    properties:
      title: string
      icon: string
      items: list<NavigationItem>
      urlSlugOverride: optional<string>

  UnversionedUntabbedNavigationConfig:
    properties:
      items: list<NavigationItem>

  VersionedNavigationConfig:
    properties:
      versions: list<VersionedNavigationConfigData>

  VersionedNavigationConfigData:
    properties:
      version: string
      urlSlugOverride: optional<string>
      availability: optional<VersionAvailability>
      config: UnversionedNavigationConfig

  VersionAvailability:
    enum:
      - Stable
      - GenerallyAvailable
      - Deprecated
      - Beta

  NavigationItem:
    union:
      page: PageMetadata
      api: ApiSection
      section: DocsSection
      link: LinkMetadata

  PageMetadata:
    properties:
      title: string
      icon: optional<string>
      hidden: optional<boolean>
      id: PageId
      urlSlugOverride: optional<string>
      fullSlug: optional<list<string>>

  LinkMetadata:
    properties:
      title: string
      icon: optional<string>
      url: string

  ApiSection:
    properties:
      title: string
      icon: optional<string>
      api: rootCommons.ApiDefinitionId
      artifacts: optional<ApiArtifacts>
      skipUrlSlug: optional<boolean>
      showErrors: optional<boolean>
      changelog: optional<ChangelogSection>
      hidden: optional<boolean>
      fullSlug: optional<list<string>>

  ChangelogSection:
    properties:
      title:
        type: optional<string>
        docs: |
          Optional title for the changelog section. Defaults to "Changelog" if not provided.
      icon:
        type: optional<string>
        docs: Defaults to ActivityLog icon
      hidden: optional<boolean>
      description: optional<string>
      pageId:
        type: optional<string>
        docs: |
          Optional mdx content to display at the top of the changelog section. The title and description will be parsed from the frontmatter and replace the config-defined values.
      items: list<ChangelogItem>
      urlSlug: string
      fullSlug: optional<list<string>>

  ChangelogItem:
    properties:
      date: date
      pageId: string
      hidden: optional<boolean>

  DocsSection:
    properties:
      title: string
      icon: optional<string>
      items: list<NavigationItem>
      urlSlugOverride: optional<string>
      collapsed: optional<boolean>
      hidden: optional<boolean>
      skipUrlSlug: optional<boolean>
      fullSlug: optional<list<string>>

  ApiArtifacts:
    properties:
      sdks: list<PublishedSdk>
      postman: optional<PublishedPostmanCollection>

  PublishedPostmanCollection:
    properties:
      url: string
      githubRepoName: optional<string>

  PublishedSdk:
    union:
      npm: NpmPackage
      maven: MavenPackage
      pypi: PypiPackage

  NpmPackage:
    properties:
      packageName: string
      githubRepoName: string
      version: string

  MavenPackage:
    properties:
      coordinate: string
      githubRepoName: string
      version: string

  PypiPackage:
    properties:
      packageName: string
      githubRepoName: string
      version: string

  InvalidDomainErrorBody:
    properties:
      requiredDomainSuffix:
        type: string
        docs: Value the domain should end with (i.e. docs.buildwithfern.com or dev.docs.buildwithfern.com)

  InvliadCustomDomainErrorBody:
    properties:
      overlappingDomains: list<OverlappingCustomDomains>

  OverlappingCustomDomains: list<string>

  CssConfig:
    properties:
      inline: optional<list<string>>

  JsConfig:
    properties:
      remote: optional<list<JsRemoteConfig>>
      files: list<JsFileConfig>
      inline: optional<list<string>>

  JsRemoteConfig:
    properties:
      url: Url
      strategy: optional<JsScriptStrategy>

  JsFileConfig:
    properties:
      fileId: commons.FileId
      strategy: optional<JsScriptStrategy>

  JsScriptStrategy:
    enum:
      - beforeInteractive
      - afterInteractive # default
      - lazyOnload

errors:
  DocsRegistrationIdNotFound:
    status-code: 404
