# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml
  rootCommons: ../../commons.yml
  v1Read: ../v1/read/type.yml

types:
  BytesRequest: v1Read.BytesRequest
  ContentType: v1Read.ContentType
  TypeReferenceIdDefault: v1Read.TypeReferenceIdDefault
  PrimitiveType: v1Read.PrimitiveType
  LiteralType: v1Read.LiteralType

  TypeDefinition:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      name: string
      shape: TypeShape

  TypeReference:
    union:
      id: TypeReferenceId
      primitive: PrimitiveType
      optional: OptionalType
      nullable: NullableType
      list: ListType
      set: SetType
      map: MapType
      literal: LiteralType
      unknown: UnknownType

  TypeReferenceId:
    properties:
      id: rootCommons.TypeId
      default: optional<TypeReferenceIdDefault>

  UnknownType:
    properties:
      displayName: optional<string>

  TypeShape:
    union:
      alias: TypeReference
      enum: EnumType
      undiscriminatedUnion: UndiscriminatedUnionType
      discriminatedUnion: DiscriminatedUnionType
      object: ObjectType

  ObjectType:
    properties:
      extends: list<rootCommons.TypeId>
      properties: list<ObjectProperty>
      extraProperties: optional<TypeReference>

  ObjectProperty:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      key: rootCommons.PropertyKey
      valueShape: TypeShape

  EnumType:
    properties:
      default: optional<string>
      values: list<EnumValue>

  EnumValue:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      value: string

  UndiscriminatedUnionType:
    properties:
      variants: list<UndiscriminatedUnionVariant>

  UndiscriminatedUnionVariant:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      displayName: optional<string>
      shape: TypeShape

  DiscriminatedUnionType:
    properties:
      discriminant: rootCommons.PropertyKey
      variants: list<DiscriminatedUnionVariant>

  DiscriminatedUnionVariant:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
      - ObjectType
    properties:
      discriminantValue: string
      displayName: optional<string>

  FormDataRequest:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      fields: list<FormDataField>

  FormDataField:
    union:
      file: FormDataFile
      files: FormDataFiles
      property: FormDataProperty

  FormDataProperty:
    extends: ObjectProperty # has description and availability
    properties:
      contentType: optional<ContentType>

  FormDataFile:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      key: rootCommons.PropertyKey
      isOptional: boolean
      contentType: optional<ContentType>

  FormDataFiles:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      key: rootCommons.PropertyKey
      isOptional: boolean
      contentType: optional<ContentType>

  NullableType:
    properties:
      shape: TypeShape

  OptionalType:
    properties:
      shape: TypeShape
      default: optional<unknown>

  ListType:
    properties:
      itemShape: TypeShape

  SetType:
    properties:
      itemShape: TypeShape

  MapType:
    properties:
      keyShape: TypeShape
      valueShape: TypeShape
