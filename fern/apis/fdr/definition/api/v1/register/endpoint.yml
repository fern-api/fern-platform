# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  rootCommons: ../../../commons.yml
  type: type.yml
  commons: ../commons.yml

types:
  EndpointDefinition:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      auth: optional<boolean>
      defaultEnvironment: optional<rootCommons.EnvironmentId>
      environments: optional<list<commons.Environment>>
      method: rootCommons.HttpMethod
      id:
        type: rootCommons.EndpointId
        docs: This is the name of the endpoint.
      originalEndpointId:
        type: optional<string>
        docs: |
          The ID for the endpoint as declared within the IR, this is a unique name for the endpoint, whereas
          path and method are not (specifically for the fern definition, consider chat and chat stream).
          This is optional to remain backcompat with old definitions of yore.
      name: optional<string>
      path: EndpointPath
      queryParameters: list<QueryParameter>
      headers: list<Header>
      request: optional<HttpRequest>
      response: optional<HttpResponse>
      errors:
        type: optional<list<ErrorDeclaration>>
        availability: deprecated
      errorsV2: optional<list<ErrorDeclarationV2>>
      examples: list<ExampleEndpointCall>

  EndpointPath:
    properties:
      parts: list<EndpointPathPart>
      pathParameters: list<PathParameter>

  EndpointPathPart:
    union:
      literal: string
      pathParameter: rootCommons.PropertyKey

  PathParameter:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      key: rootCommons.PropertyKey
      type: type.TypeReference

  QueryParameter:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      key: string
      type: type.TypeReference
      arrayEncoding: optional<QueryParameterArrayEncoding>

  QueryParameterArrayEncoding:
    enum:
      - comma
      - exploded

  Header:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      key: string
      type: type.TypeReference

  HttpRequest:
    extends: commons.WithDescription
    properties:
      type: HttpRequestBodyShape

  HttpRequestBodyShape:
    union:
      json: JsonRequestBody
      formData: type.FormDataRequest
      bytes: type.BytesRequest
      # deprecated
      object:
        # deprecated, the CLI will use json instead
        type: type.ObjectType
      reference:
        # deprecated, the CLI will use json instead
        type: type.TypeReference
      fileUpload:
        # deprecated, the CLI will use formData instead
        type: optional<type.FormDataRequest>
        docs: "`fileUpload` is optional only to be backwards compatible. It should be required."

  JsonRequestBody:
    properties:
      contentType: string
      shape: JsonBodyShape

  JsonBodyShape:
    union:
      object: type.ObjectType
      reference: type.TypeReference

  HttpResponse:
    extends: commons.WithDescription
    properties:
      type: HttpResponseBodyShape
      statusCode:
        type: optional<integer>
        docs: Defaults to 200

  ErrorDeclaration:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      type: optional<type.TypeReference>
      statusCode: integer

  ErrorDeclarationV2:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      type: optional<type.TypeShape>
      statusCode: integer
      name: optional<string>
      examples: optional<list<ErrorExample>>

  HttpResponseBodyShape:
    union:
      object: type.ObjectType
      reference: type.TypeReference
      fileDownload: FileDownloadResponseBodyShape
      streamingText: {}
      stream: StreamResponseV2
      # deprecated
      streamCondition:
        type: StreamConditionResponse
        docs: |
          A response that can either be streaming or REST

  FileDownloadResponseBodyShape:
    properties:
      contentType: optional<string>

  StreamResponseV2:
    properties:
      terminator:
        type: optional<string>
        docs: |
          The terminator for each message. For example, for OpenAPI 
          the terminator is [DATA].
      shape: JsonBodyShape

  StreamConditionResponse:
    availability: deprecated
    properties:
      response: NonStreamResponse
      streamResponse: StreamResponse
      streamCondition: StreamCondition

  NonStreamResponse:
    availability: deprecated
    properties:
      shape: JsonBodyShape
      examples: list<ExampleEndpointCall>

  StreamResponse:
    availability: deprecated
    properties:
      shape: JsonBodyShape
      examples: list<ExampleEndpointCall>

  StreamCondition:
    availability: deprecated
    union:
      booleanRequestProperty: rootCommons.PropertyKey
  # examples

  ExampleEndpointCall:
    extends: commons.WithDescription
    properties:
      name: optional<string>
      path: string
      pathParameters: map<rootCommons.PropertyKey, unknown>
      queryParameters: map<string, unknown>
      headers: map<string, unknown>
      requestBody:
        type: unknown
        availability: deprecated
      requestBodyV3: optional<ExampleEndpointRequest>
      responseStatusCode: integer
      responseBody:
        type: unknown
        availability: deprecated
      responseBodyV3: optional<ExampleEndpointResponse>
      codeSamples: optional<list<CustomCodeSample>>

  CustomCodeSample:
    docs: Hand-written code samples
    extends: commons.WithDescription
    properties:
      language: string
      code: string
      name: optional<string>
      install: optional<string>

  ExampleEndpointRequest:
    union:
      json: unknown
      form: map<string, FormValue>
      bytes: BytesValue

  FormValue:
    union:
      json: unknown
      filename: string
      filenames: list<string>
      filenameWithData: FilenameWithData
      filenamesWithData: list<FilenameWithData>

  BytesValue:
    union:
      base64: string

  FilenameWithData:
    properties:
      filename: string
      data: rootCommons.FileId

  ExampleEndpointResponse:
    union:
      json: unknown
      filename: string
      stream: list<unknown>
      sse: list<ExampleServerSentEvent>

  ExampleServerSentEvent:
    properties:
      event: string
      data: unknown

  ErrorExample:
    extends:
      - commons.WithDescription
    properties:
      name: optional<string>
      responseBody: ExampleErrorResponse

  ExampleErrorResponse:
    union:
      json: unknown
