# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: ../commons.yml
  rootCommons: ../../../commons.yml

types:
  TypeDefinition:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      name: string
      shape: TypeShape

  TypeShape:
    union:
      alias: TypeReference
      enum: EnumType
      undiscriminatedUnion: UndiscriminatedUnionType
      discriminatedUnion: DiscriminatedUnionType
      object: ObjectType

  TypeReference:
    union:
      id: TypeReferenceId
      primitive: PrimitiveType
      optional: OptionalType
      list: ListType
      set: SetType
      map: MapType
      literal: LiteralType
      unknown: {}

  TypeReferenceId:
    properties:
      value: rootCommons.TypeId
      default: optional<TypeReferenceIdDefault>

  TypeReferenceIdDefault:
    union:
      enum: string

  ObjectType:
    properties:
      extends: list<rootCommons.TypeId>
      properties: list<ObjectProperty>
      extraProperties: optional<TypeReference>

  ObjectProperty:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      key: rootCommons.PropertyKey
      valueType: TypeReference

  PrimitiveType:
    union:
      integer: IntegerType
      double: DoubleType
      string: StringType
      long: LongType
      boolean: BooleanType
      datetime: DatetimeType
      uuid: UuidType
      base64: Base64Type
      date: DateType
      bigInteger: BigIntegerType
      uint: {}
      uint64: {}

  IntegerType:
    properties:
      minimum: optional<integer>
      maximum: optional<integer>
      default: optional<integer>

  DoubleType:
    properties:
      minimum: optional<double>
      maximum: optional<double>
      default: optional<double>

  StringType:
    properties:
      regex: optional<string>
      minLength: optional<integer>
      maxLength: optional<integer>
      default: optional<string>

  LongType:
    properties:
      minimum: optional<long>
      maximum: optional<long>
      default: optional<long>

  BooleanType:
    properties:
      default: optional<boolean>

  DatetimeType:
    properties:
      default: optional<datetime>

  UuidType:
    properties:
      default: optional<uuid>

  Base64Type:
    properties:
      default: optional<base64>

  DateType:
    properties:
      default: optional<date>

  BigIntegerType:
    properties:
      default: optional<bigint>

  OptionalType:
    properties:
      itemType: TypeReference
      defaultValue: optional<unknown>

  ListType:
    properties:
      itemType: TypeReference

  SetType:
    properties:
      itemType: TypeReference

  MapType:
    properties:
      keyType: TypeReference
      valueType: TypeReference

  EnumType:
    properties:
      default: optional<string>
      values: list<EnumValue>

  EnumValue:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      value: string

  UndiscriminatedUnionType:
    properties:
      variants: list<UndiscriminatedUnionVariant>

  UndiscriminatedUnionVariant:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      typeName: optional<string>
      type: TypeReference

  DiscriminatedUnionType:
    properties:
      discriminant: string
      variants: list<DiscriminatedUnionVariant>

  DiscriminatedUnionVariant:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      discriminantValue: string
      displayName: optional<string>
      additionalProperties: ObjectType

  LiteralType:
    union:
      booleanLiteral: boolean
      stringLiteral: string

  FormDataRequest:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      name: string
      properties: list<FormDataProperty>

  BytesRequest:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      isOptional: boolean
      contentType: optional<string>

  FormDataProperty:
    union:
      file: FormDataFileProperty
      bodyProperty: FormDataBodyProperty

  FormDataBodyProperty:
    extends: ObjectProperty
    properties:
      contentType: optional<ContentType>

  FormDataFileProperty:
    union:
      file: FilePropertySingle
      fileArray: FilePropertyArray

  FilePropertySingle:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      key: rootCommons.PropertyKey
      isOptional: boolean
      contentType: optional<ContentType>

  FilePropertyArray:
    extends:
      - commons.WithDescription
      - commons.WithAvailability
    properties:
      key: rootCommons.PropertyKey
      isOptional: boolean
      contentType: optional<ContentType>

  ContentType:
    discriminated: false
    union:
      - string
      - list<string>
