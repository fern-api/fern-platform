# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  Yank:
    docs: A yank is a metadata object that declares if a version is safe to upgrade to, if present the answer is no.
    properties:
      remediationVerision:
        type: optional<string>
        docs: |
          The remediation strategy to be used when a yank is detected. If one is not specified, we'll likely go backwards by publishing time
          to find the last unyanked version.

  VersionRange:
    union:
      inclusive: string
      exclusive: string

  GetChangelogRequest:
    properties:
      fromVersion: VersionRange
      toVersion: VersionRange

  GetChangelogResponse:
    properties:
      entries: list<ChangelogResponse>

  ChangelogResponse:
    properties:
      version: string
      changelogEntry: list<ChangelogEntry>

  ChangelogEntryType:
    docs: Following `conventional commit` types for the entries here.
    enum:
      - fix
      - feat
      - chore
      - break
      - internal

  ChangelogEntry:
    docs: Following `keep a changelog` format for the entries here. These are effectively your release notes, the strings are meant to be markdown.
    properties:
      type: ChangelogEntryType
      summary: string
      links:
        type: optional<list<string>>
        docs: |
          Any URLs that are relevant to the change, such as a PR or issue. This is optional for backcompat.

          You do not always need to specify the URL as the CLI can fill it in with the current PR, but given you can choose to not
          release within the same PR as the change is introduced, this should be specified for divorcing the two.
      upgradeNotes: optional<string>
      # Keep a Changelog
      added: optional<list<string>>
      changed: optional<list<string>>
      deprecated: optional<list<string>>
      removed: optional<list<string>>
      fixed: optional<list<string>>

  ReleaseType:
    enum:
      - GA
      - RC

  ReleaseRequest:
    properties:
      version: string
      createdAt: optional<date>
      isYanked: optional<Yank>
      changelogEntry: optional<list<ChangelogEntry>>

  Release:
    extends: ReleaseRequest
    properties:
      releaseType: ReleaseType
      majorVersion: integer

  InvalidVersionErrorMessage:
    properties:
      providedVersion: string

  InvalidIrVersionErrorMessage:
    properties:
      providedVersion: integer

errors:
  InvalidVersionError:
    status-code: 400
    type: InvalidVersionErrorMessage
