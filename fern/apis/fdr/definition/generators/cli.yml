# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

docs: CRUD API for managing CLI versions, as well as the corresponding IR metadata.

imports:
  commons: ./commons.yml

types:
  BaseCliRelease:
    properties:
      irVersion:
        type: integer
        docs: The major version of the IR that this CLI exposes.
      tags:
        type: optional<list<string>>
        docs: Tags to categorize the CLI release.

  CliReleaseRequest:
    extends:
      - commons.ReleaseRequest
      - BaseCliRelease

  CliRelease:
    extends:
      - commons.Release
      - BaseCliRelease

  ListCliReleasesResponse:
    properties:
      cliReleases: list<CliRelease>

  IrDependency:
    properties:
      cliVersion: string
      irVersion: integer

service:
  audiences:
    - generators
  base-path: /generators/cli
  auth: true
  endpoints:
    getLatestCliRelease:
      docs: Get the latest CLI version that has not been yanked.
      method: POST
      path: /latest
      request:
        name: GetLatestCliReleaseRequest
        body:
          properties:
            releaseTypes:
              type: optional<list<commons.ReleaseType>>
              docs: A filter for the release type, specifically if you'd like to get RC releases only, etc. Defaults to GA releases.
            irVersion:
              type: optional<integer>
              docs: |
                The IR version that the CLI must respect.
      response: CliRelease
      errors:
        - NoValidClisFoundError

    getChangelog:
      docs: Get the changelog for the specified CLI upgrade. The response will be a map of the generator version to it's corresponding changelog.
      method: POST
      path: /changelog
      request: commons.GetChangelogRequest
      response: commons.GetChangelogResponse

    getMinCliForIr:
      docs: Get the minimum CLI version that supports the given IR version. This does not include RCs.
      method: GET
      path: /for-ir/{irVersion}
      path-parameters:
        irVersion: integer
      response: CliRelease
      errors:
        - NoValidClisFoundError

    upsertCliRelease:
      docs: Update or create the specified CLI version.
      method: PUT
      path: ""
      request: CliReleaseRequest

    getCliRelease:
      docs: Get the specified CLI version.
      method: GET
      path: /{cliVersion}
      path-parameters:
        cliVersion: string
      response: CliRelease
      errors:
        - CliVersionNotFoundError

    listCliReleases:
      docs: Get all CLI versions.
      method: GET
      path: ""
      pagination:
        offset: $request.page
        results: $response.cliReleases
      request:
        name: ListCliReleasesRequest
        query-parameters:
          page:
            type: optional<integer>
            docs: The page integer to retrieve. Defaults to 0.
          pageSize:
            type: optional<integer>
            docs: The integer of items to retrieve per page. Defaults to 20.
      response: ListCliReleasesResponse

errors:
  CliVersionNotFoundError:
    status-code: 404
    type: commons.InvalidVersionErrorMessage
  NoValidClisFoundError:
    status-code: 404
  NoValidCliForIrError:
    status-code: 404
    type: commons.InvalidIrVersionErrorMessage
