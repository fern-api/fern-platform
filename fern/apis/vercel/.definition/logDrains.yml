types:
  GetIntegrationLogDrainsResponseItemDeliveryFormat:
    enum:
      - json
      - ndjson
      - syslog
    docs: The delivery log format
    source:
      openapi: openapi.json
  GetIntegrationLogDrainsResponseItemSourcesItem:
    enum:
      - build
      - edge
      - lambda
      - static
      - external
      - firewall
    docs: >-
      The sources from which logs are currently being delivered to this log
      drain.
    source:
      openapi: openapi.json
  GetIntegrationLogDrainsResponseItemCreatedFrom:
    enum:
      - value: self-served
        name: SelfServed
      - integration
    docs: Whether the log drain was created by an integration or by a user
    source:
      openapi: openapi.json
  GetIntegrationLogDrainsResponseItemEnvironmentsItem:
    enum:
      - production
      - preview
    docs: The environment of log drain
    source:
      openapi: openapi.json
  GetIntegrationLogDrainsResponseItem:
    properties:
      clientId:
        type: optional<string>
        docs: The oauth2 client application id that created this log drain
      configurationId:
        type: optional<string>
        docs: The client configuration this log drain was created with
      createdAt:
        type: double
        docs: A timestamp that tells you when the log drain was created
      id:
        type: string
        docs: The unique identifier of the log drain. Always prefixed with `ld_`
      deliveryFormat:
        type: optional<GetIntegrationLogDrainsResponseItemDeliveryFormat>
        docs: The delivery log format
      name:
        type: string
        docs: The name of the log drain
      ownerId:
        type: string
        docs: >-
          The identifier of the team or user whose events will trigger the log
          drain
      projectId: optional<string>
      projectIds:
        type: optional<list<string>>
        docs: The identifier of the projects this log drain is associated with
      url:
        type: string
        docs: The URL to call when logs are generated
      sources:
        type: optional<list<GetIntegrationLogDrainsResponseItemSourcesItem>>
        docs: >-
          The sources from which logs are currently being delivered to this log
          drain.
      createdFrom:
        type: optional<GetIntegrationLogDrainsResponseItemCreatedFrom>
        docs: Whether the log drain was created by an integration or by a user
      headers:
        type: optional<map<string, string>>
        docs: The headers to send with the request
      environments:
        docs: The environment of log drain
        type: list<GetIntegrationLogDrainsResponseItemEnvironmentsItem>
      branch:
        type: optional<string>
        docs: The branch regexp of log drain
      samplingRate:
        type: optional<double>
        docs: The sampling rate of log drain
    source:
      openapi: openapi.json
  CreateLogDrainRequestDeliveryFormat:
    enum:
      - json
      - ndjson
      - syslog
    docs: The delivery log format
    source:
      openapi: openapi.json
  CreateLogDrainRequestSourcesItem:
    enum:
      - static
      - lambda
      - build
      - edge
      - external
      - firewall
    source:
      openapi: openapi.json
  CreateLogDrainRequestEnvironmentsItem:
    enum:
      - preview
      - production
    source:
      openapi: openapi.json
  CreateLogDrainResponseDeliveryFormat:
    enum:
      - json
      - ndjson
      - syslog
    docs: The delivery log format
    source:
      openapi: openapi.json
  CreateLogDrainResponseSourcesItem:
    enum:
      - build
      - edge
      - lambda
      - static
      - external
      - firewall
    docs: >-
      The sources from which logs are currently being delivered to this log
      drain.
    source:
      openapi: openapi.json
  CreateLogDrainResponseCreatedFrom:
    enum:
      - value: self-served
        name: SelfServed
      - integration
    docs: Whether the log drain was created by an integration or by a user
    source:
      openapi: openapi.json
  CreateLogDrainResponseEnvironmentsItem:
    enum:
      - production
      - preview
    docs: The environment of log drain
    source:
      openapi: openapi.json
  CreateLogDrainResponse:
    properties:
      clientId:
        type: optional<string>
        docs: The oauth2 client application id that created this log drain
      configurationId:
        type: optional<string>
        docs: The client configuration this log drain was created with
      createdAt:
        type: double
        docs: A timestamp that tells you when the log drain was created
      id:
        type: string
        docs: The unique identifier of the log drain. Always prefixed with `ld_`
      deliveryFormat:
        type: optional<CreateLogDrainResponseDeliveryFormat>
        docs: The delivery log format
      name:
        type: string
        docs: The name of the log drain
      ownerId:
        type: string
        docs: >-
          The identifier of the team or user whose events will trigger the log
          drain
      projectId: optional<string>
      projectIds:
        type: optional<list<string>>
        docs: The identifier of the projects this log drain is associated with
      url:
        type: string
        docs: The URL to call when logs are generated
      sources:
        type: optional<list<CreateLogDrainResponseSourcesItem>>
        docs: >-
          The sources from which logs are currently being delivered to this log
          drain.
      createdFrom:
        type: optional<CreateLogDrainResponseCreatedFrom>
        docs: Whether the log drain was created by an integration or by a user
      headers:
        type: optional<map<string, string>>
        docs: The headers to send with the request
      environments:
        docs: The environment of log drain
        type: list<CreateLogDrainResponseEnvironmentsItem>
      branch:
        type: optional<string>
        docs: The branch regexp of log drain
      samplingRate:
        type: optional<double>
        docs: The sampling rate of log drain
    source:
      openapi: openapi.json
  GetConfigurableLogDrainResponseDeliveryFormat:
    enum:
      - json
      - ndjson
      - syslog
    source:
      openapi: openapi.json
  GetConfigurableLogDrainResponseSourcesItem:
    enum:
      - build
      - edge
      - lambda
      - static
      - external
      - firewall
    source:
      openapi: openapi.json
  GetConfigurableLogDrainResponseEnvironmentsItem:
    enum:
      - production
      - preview
    source:
      openapi: openapi.json
  GetConfigurableLogDrainResponseStatus:
    enum:
      - enabled
      - disabled
      - errored
    source:
      openapi: openapi.json
  GetConfigurableLogDrainResponseDisabledReason:
    enum:
      - value: disabled-by-owner
        name: DisabledByOwner
      - value: feature-not-available
        name: FeatureNotAvailable
      - value: account-plan-downgrade
        name: AccountPlanDowngrade
      - value: disabled-by-admin
        name: DisabledByAdmin
    source:
      openapi: openapi.json
  GetConfigurableLogDrainResponseCompression:
    enum:
      - gzip
      - zstd
      - none
    source:
      openapi: openapi.json
  GetConfigurableLogDrainResponse:
    properties:
      id: string
      deliveryFormat: GetConfigurableLogDrainResponseDeliveryFormat
      url: string
      name: string
      clientId: optional<string>
      configurationId: optional<string>
      teamId: optional<string>
      ownerId: string
      projectIds: optional<list<string>>
      createdAt: double
      deletedAt: optional<double>
      updatedAt: double
      sources: optional<list<GetConfigurableLogDrainResponseSourcesItem>>
      headers: optional<map<string, string>>
      environments: list<GetConfigurableLogDrainResponseEnvironmentsItem>
      status: optional<GetConfigurableLogDrainResponseStatus>
      disabledAt: optional<double>
      disabledReason: optional<GetConfigurableLogDrainResponseDisabledReason>
      disabledBy: optional<string>
      firstErrorTimestamp: optional<double>
      samplingRate: optional<double>
      compression: optional<GetConfigurableLogDrainResponseCompression>
      secret: string
      createdFrom: optional<literal<"self-served">>
    source:
      openapi: openapi.json
  GetAllLogDrainsResponseItemDeliveryFormat:
    enum:
      - json
      - ndjson
      - syslog
    source:
      openapi: openapi.json
  GetAllLogDrainsResponseItemSourcesItem:
    enum:
      - build
      - edge
      - lambda
      - static
      - external
      - firewall
    source:
      openapi: openapi.json
  GetAllLogDrainsResponseItemEnvironmentsItem:
    enum:
      - production
      - preview
    source:
      openapi: openapi.json
  GetAllLogDrainsResponseItemStatus:
    enum:
      - enabled
      - disabled
      - errored
    source:
      openapi: openapi.json
  GetAllLogDrainsResponseItemDisabledReason:
    enum:
      - value: disabled-by-owner
        name: DisabledByOwner
      - value: feature-not-available
        name: FeatureNotAvailable
      - value: account-plan-downgrade
        name: AccountPlanDowngrade
      - value: disabled-by-admin
        name: DisabledByAdmin
    source:
      openapi: openapi.json
  GetAllLogDrainsResponseItemCompression:
    enum:
      - gzip
      - zstd
      - none
    source:
      openapi: openapi.json
  GetAllLogDrainsResponseItem:
    properties:
      id: string
      deliveryFormat: GetAllLogDrainsResponseItemDeliveryFormat
      url: string
      name: string
      clientId: optional<string>
      configurationId: optional<string>
      teamId: optional<string>
      ownerId: string
      projectIds: optional<list<string>>
      createdAt: double
      deletedAt: optional<double>
      updatedAt: double
      sources: optional<list<GetAllLogDrainsResponseItemSourcesItem>>
      headers: optional<map<string, string>>
      environments: list<GetAllLogDrainsResponseItemEnvironmentsItem>
      status: optional<GetAllLogDrainsResponseItemStatus>
      disabledAt: optional<double>
      disabledReason: optional<GetAllLogDrainsResponseItemDisabledReason>
      disabledBy: optional<string>
      firstErrorTimestamp: optional<double>
      samplingRate: optional<double>
      compression: optional<GetAllLogDrainsResponseItemCompression>
      secret: string
      createdFrom: optional<literal<"self-served">>
    source:
      openapi: openapi.json
  CreateConfigurableLogDrainRequestDeliveryFormat:
    enum:
      - json
      - ndjson
    docs: The delivery log format
    source:
      openapi: openapi.json
  CreateConfigurableLogDrainRequestSourcesItem:
    enum:
      - static
      - lambda
      - build
      - edge
      - external
      - firewall
    source:
      openapi: openapi.json
  CreateConfigurableLogDrainRequestEnvironmentsItem:
    enum:
      - preview
      - production
    source:
      openapi: openapi.json
  CreateConfigurableLogDrainResponseDeliveryFormat:
    enum:
      - json
      - ndjson
      - syslog
    source:
      openapi: openapi.json
  CreateConfigurableLogDrainResponseSourcesItem:
    enum:
      - build
      - edge
      - lambda
      - static
      - external
      - firewall
    source:
      openapi: openapi.json
  CreateConfigurableLogDrainResponseEnvironmentsItem:
    enum:
      - production
      - preview
    source:
      openapi: openapi.json
  CreateConfigurableLogDrainResponseStatus:
    enum:
      - enabled
      - disabled
      - errored
    source:
      openapi: openapi.json
  CreateConfigurableLogDrainResponseDisabledReason:
    enum:
      - value: disabled-by-owner
        name: DisabledByOwner
      - value: feature-not-available
        name: FeatureNotAvailable
      - value: account-plan-downgrade
        name: AccountPlanDowngrade
      - value: disabled-by-admin
        name: DisabledByAdmin
    source:
      openapi: openapi.json
  CreateConfigurableLogDrainResponseCompression:
    enum:
      - gzip
      - zstd
      - none
    source:
      openapi: openapi.json
  CreateConfigurableLogDrainResponse:
    properties:
      secret:
        type: optional<string>
        docs: The secret to validate the log-drain payload
      id: string
      deliveryFormat: CreateConfigurableLogDrainResponseDeliveryFormat
      url: string
      name: string
      clientId: optional<string>
      configurationId: optional<string>
      teamId: optional<string>
      ownerId: string
      projectIds: optional<list<string>>
      createdAt: double
      deletedAt: optional<double>
      updatedAt: double
      sources: optional<list<CreateConfigurableLogDrainResponseSourcesItem>>
      headers: optional<map<string, string>>
      environments: list<CreateConfigurableLogDrainResponseEnvironmentsItem>
      status: optional<CreateConfigurableLogDrainResponseStatus>
      disabledAt: optional<double>
      disabledReason: optional<CreateConfigurableLogDrainResponseDisabledReason>
      disabledBy: optional<string>
      firstErrorTimestamp: optional<double>
      samplingRate: optional<double>
      compression: optional<CreateConfigurableLogDrainResponseCompression>
      createdFrom: optional<literal<"self-served">>
    source:
      openapi: openapi.json
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getIntegrationLogDrains:
      path: /v2/integrations/log-drains
      method: GET
      auth: true
      docs: >-
        Retrieves a list of all Integration log drains that are defined for the
        authenticated user or team. When using an OAuth2 token, the list is
        limited to log drains created by the authenticated integration.
      display-name: Retrieves a list of Integration log drains
      request:
        name: GetIntegrationLogDrainsRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      response:
        docs: A list of log drains
        type: list<GetIntegrationLogDrainsResponseItem>
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
      examples:
        - response:
            body:
              - clientId: oac_xRhY4LAB7yLhUADD69EvV7ct
                configurationId: icfg_cuwj0AdCdH3BwWT4LPijCC7t
                createdAt: 1558531915505
                id: ld_nBuA7zCID8g4QZ8g
                deliveryFormat: json
                name: My first log drain
                ownerId: kr1PsOIzqEL5Xg6M4VZcZosf
                projectId: AbCgVkqoxXeXCDWehVir51LHGrrcWL4mkYm14W6UBPWQeb
                projectIds:
                  - projectIds
                url: https://example.com/log-drain
                sources:
                  - build
                  - edge
                createdFrom: self-served
                headers:
                  key: value
                environments:
                  - production
                branch: feature/*
                samplingRate: 0.5
    createLogDrain:
      path: /v2/integrations/log-drains
      method: POST
      auth: true
      docs: >-
        Creates an Integration log drain. This endpoint must be called with an
        OAuth2 client (integration), since log drains are tied to integrations.
        If it is called with a different token type it will produce a 400 error.
      display-name: Creates a new Integration Log Drain
      request:
        name: CreateLogDrainRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
        body:
          properties:
            name:
              type: string
              docs: The name of the log drain
              validation:
                pattern: ^[A-z0-9_ -]+$
                maxLength: 100
            projectIds: optional<list<string>>
            secret:
              type: optional<string>
              docs: >-
                A secret to sign log drain notification headers so a consumer
                can verify their authenticity
              validation:
                pattern: ^[A-z0-9_ -]+$
                maxLength: 100
            deliveryFormat:
              type: optional<CreateLogDrainRequestDeliveryFormat>
              docs: The delivery log format
            url:
              type: string
              docs: >-
                The url where you will receive logs. The protocol must be
                `https://` or `http://` when type is `json` and `ndjson`, and
                `syslog+tls:` or `syslog:` when the type is `syslog`.
              validation:
                format: uri
                pattern: ^(https?|syslog\\+tls|syslog)://
            sources: optional<list<CreateLogDrainRequestSourcesItem>>
            headers:
              type: optional<map<string, string>>
              docs: Headers to be sent together with the request
            environments: optional<list<CreateLogDrainRequestEnvironmentsItem>>
      response:
        docs: The log drain was successfully created
        type: CreateLogDrainResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
      examples:
        - request:
            name: My first log drain
            url: https://example.com/log-drain
          response:
            body:
              clientId: oac_xRhY4LAB7yLhUADD69EvV7ct
              configurationId: icfg_cuwj0AdCdH3BwWT4LPijCC7t
              createdAt: 1558531915505
              id: ld_nBuA7zCID8g4QZ8g
              deliveryFormat: json
              name: My first log drain
              ownerId: kr1PsOIzqEL5Xg6M4VZcZosf
              projectId: AbCgVkqoxXeXCDWehVir51LHGrrcWL4mkYm14W6UBPWQeb
              projectIds:
                - projectIds
              url: https://example.com/log-drain
              sources:
                - build
                - edge
              createdFrom: self-served
              headers:
                key: value
              environments:
                - production
              branch: feature/*
              samplingRate: 0.5
    deleteIntegrationLogDrain:
      path: /v1/integrations/log-drains/{id}
      method: DELETE
      auth: true
      docs: >-
        Deletes the Integration log drain with the provided `id`. When using an
        OAuth2 Token, the log drain can be deleted only if the integration owns
        it.
      path-parameters:
        id:
          type: string
          docs: ID of the log drain to be deleted
      display-name: Deletes the Integration log drain with the provided `id`
      request:
        name: DeleteIntegrationLogDrainRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
    getConfigurableLogDrain:
      path: /v1/log-drains/{id}
      method: GET
      auth: true
      docs: >-
        Retrieves a Configurable Log Drain. This endpoint must be called with a
        team AccessToken (integration OAuth2 clients are not allowed). Only log
        drains owned by the authenticated team can be accessed.
      path-parameters:
        id: string
      display-name: Retrieves a Configurable Log Drain
      request:
        name: GetConfigurableLogDrainRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      response:
        docs: ''
        type: GetConfigurableLogDrainResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              deliveryFormat: json
              url: url
              name: name
              clientId: clientId
              configurationId: configurationId
              teamId: teamId
              ownerId: ownerId
              projectIds:
                - projectIds
              createdAt: 1.1
              deletedAt: 1.1
              updatedAt: 1.1
              sources:
                - build
              headers:
                key: value
              environments:
                - production
              status: enabled
              disabledAt: 1.1
              disabledReason: disabled-by-owner
              disabledBy: disabledBy
              firstErrorTimestamp: 1.1
              samplingRate: 1.1
              compression: gzip
              secret: secret
              createdFrom: self-served
    deleteConfigurableLogDrain:
      path: /v1/log-drains/{id}
      method: DELETE
      auth: true
      docs: >-
        Deletes a Configurable Log Drain. This endpoint must be called with a
        team AccessToken (integration OAuth2 clients are not allowed). Only log
        drains owned by the authenticated team can be deleted.
      path-parameters:
        id: string
      display-name: Deletes a Configurable Log Drain
      request:
        name: DeleteConfigurableLogDrainRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
      examples:
        - path-parameters:
            id: id
    getAllLogDrains:
      path: /v1/log-drains
      method: GET
      auth: true
      docs: >-
        Retrieves a list of all the Log Drains owned by the account. This
        endpoint must be called with an account AccessToken (integration OAuth2
        clients are not allowed). Only log drains owned by the authenticated
        account can be accessed.
      display-name: Retrieves a list of all the Log Drains
      request:
        name: GetAllLogDrainsRequest
        query-parameters:
          projectId: optional<string>
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      response:
        docs: ''
        type: list<GetAllLogDrainsResponseItem>
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
      examples:
        - response:
            body:
              - id: id
                deliveryFormat: json
                url: url
                name: name
                clientId: clientId
                configurationId: configurationId
                teamId: teamId
                ownerId: ownerId
                projectIds:
                  - projectIds
                createdAt: 1.1
                deletedAt: 1.1
                updatedAt: 1.1
                sources:
                  - build
                headers:
                  key: value
                environments:
                  - production
                status: enabled
                disabledAt: 1.1
                disabledReason: disabled-by-owner
                disabledBy: disabledBy
                firstErrorTimestamp: 1.1
                samplingRate: 1.1
                compression: gzip
                secret: secret
                createdFrom: self-served
    createConfigurableLogDrain:
      path: /v1/log-drains
      method: POST
      auth: true
      docs: >-
        Creates a configurable log drain. This endpoint must be called with a
        team AccessToken (integration OAuth2 clients are not allowed)
      display-name: Creates a Configurable Log Drain
      request:
        name: CreateConfigurableLogDrainRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
        body:
          properties:
            deliveryFormat:
              type: CreateConfigurableLogDrainRequestDeliveryFormat
              docs: The delivery log format
            url:
              type: string
              docs: The log drain url
              validation:
                format: uri
                pattern: ^(http|https)?://
            headers:
              type: optional<map<string, string>>
              docs: Headers to be sent together with the request
            projectIds: optional<list<string>>
            sources: list<CreateConfigurableLogDrainRequestSourcesItem>
            environments: optional<list<CreateConfigurableLogDrainRequestEnvironmentsItem>>
            secret:
              type: optional<string>
              docs: Custom secret of log drain
            samplingRate:
              type: optional<double>
              docs: >-
                The sampling rate for this log drain. It should be a percentage
                rate between 0 and 100. With max 2 decimal points
              validation:
                min: 0.01
                max: 1
            name:
              type: optional<string>
              docs: The custom name of this log drain.
      response:
        docs: ''
        type: CreateConfigurableLogDrainResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
      examples:
        - request:
            deliveryFormat: json
            url: url
            sources:
              - static
          response:
            body:
              secret: secret
              id: id
              deliveryFormat: json
              url: url
              name: name
              clientId: clientId
              configurationId: configurationId
              teamId: teamId
              ownerId: ownerId
              projectIds:
                - projectIds
              createdAt: 1.1
              deletedAt: 1.1
              updatedAt: 1.1
              sources:
                - build
              headers:
                key: value
              environments:
                - production
              status: enabled
              disabledAt: 1.1
              disabledReason: disabled-by-owner
              disabledBy: disabledBy
              firstErrorTimestamp: 1.1
              samplingRate: 1.1
              compression: gzip
              createdFrom: self-served
  source:
    openapi: openapi.json
