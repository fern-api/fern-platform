types:
  UpdateProjectDataCacheResponseAnalytics:
    properties:
      id: string
      canceledAt: optional<double>
      disabledAt: double
      enabledAt: double
      paidAt: optional<double>
      sampleRatePercent: optional<double>
      spendLimitInDollars: optional<double>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSpeedInsights:
    properties:
      id: string
      enabledAt: optional<double>
      disabledAt: optional<double>
      canceledAt: optional<double>
      hasData: optional<boolean>
      paidAt: optional<double>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseCronsDefinitionsItem:
    properties:
      host:
        type: string
        docs: The hostname that should be used.
      path:
        type: string
        docs: The path that should be called for the cronjob.
      schedule:
        type: string
        docs: The cron expression.
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseCrons:
    properties:
      enabledAt:
        type: double
        docs: >-
          The time the feature was enabled for this project. Note: It enables
          automatically with the first Deployment that outputs cronjobs.
      disabledAt:
        type: optional<double>
        docs: The time the feature was disabled for this project.
      updatedAt: double
      deploymentId:
        type: optional<string>
        docs: The ID of the Deployment from which the definitions originated.
      definitions: list<UpdateProjectDataCacheResponseCronsDefinitionsItem>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseDataCache:
    properties:
      userDisabled: boolean
      storageSizeBytes: optional<double>
      unlimited: optional<boolean>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseDeploymentExpiration:
    properties:
      expirationDays: optional<double>
      expirationDaysProduction: optional<double>
      expirationDaysCanceled: optional<double>
      expirationDaysErrored: optional<double>
      deploymentsToKeep: optional<double>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemTarget:
    discriminated: false
    union:
      - list<UpdateProjectDataCacheResponseEnvItemTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemType:
    enum:
      - secret
      - system
      - encrypted
      - plain
      - sensitive
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: UpdateProjectDataCacheResponseEnvItemContentHintRedisUrl
      redis-rest-api-url: UpdateProjectDataCacheResponseEnvItemContentHintRedisRestApiUrl
      redis-rest-api-token: UpdateProjectDataCacheResponseEnvItemContentHintRedisRestApiToken
      redis-rest-api-read-only-token: >-
        UpdateProjectDataCacheResponseEnvItemContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: UpdateProjectDataCacheResponseEnvItemContentHintBlobReadWriteToken
      postgres-url: UpdateProjectDataCacheResponseEnvItemContentHintPostgresUrl
      postgres-url-non-pooling: UpdateProjectDataCacheResponseEnvItemContentHintPostgresUrlNonPooling
      postgres-prisma-url: UpdateProjectDataCacheResponseEnvItemContentHintPostgresPrismaUrl
      postgres-user: UpdateProjectDataCacheResponseEnvItemContentHintPostgresUser
      postgres-host: UpdateProjectDataCacheResponseEnvItemContentHintPostgresHost
      postgres-password: UpdateProjectDataCacheResponseEnvItemContentHintPostgresPassword
      postgres-database: UpdateProjectDataCacheResponseEnvItemContentHintPostgresDatabase
      postgres-url-no-ssl: UpdateProjectDataCacheResponseEnvItemContentHintPostgresUrlNoSsl
      integration-store-secret: UpdateProjectDataCacheResponseEnvItemContentHintIntegrationStoreSecret
      flags-connection-string: UpdateProjectDataCacheResponseEnvItemContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItemInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseEnvItem:
    properties:
      target: optional<UpdateProjectDataCacheResponseEnvItemTarget>
      type: UpdateProjectDataCacheResponseEnvItemType
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: string
      value: string
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<UpdateProjectDataCacheResponseEnvItemContentHint>
      internalContentHint:
        type: optional<UpdateProjectDataCacheResponseEnvItemInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
      vsmValue: optional<string>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseCustomEnvironmentsItemType:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseCustomEnvironmentsItemBranchMatcherType:
    enum:
      - endsWith
      - startsWith
      - equals
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseCustomEnvironmentsItemBranchMatcher:
    properties:
      type: UpdateProjectDataCacheResponseCustomEnvironmentsItemBranchMatcherType
      pattern: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseCustomEnvironmentsItemDomainsItemVerificationItem:
    docs: >-
      A list of verification challenges, one of which must be completed to
      verify the domain for use on the project. After the challenge is complete
      `POST /projects/:idOrName/domains/:domain/verify` to verify the domain.
      Possible challenges: - If `verification.type = TXT` the
      `verification.domain` will be checked for a TXT record matching
      `verification.value`.
    properties:
      type: string
      domain: string
      value: string
      reason: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseCustomEnvironmentsItemDomainsItem:
    properties:
      name: string
      apexName: string
      projectId: string
      redirect: optional<string>
      redirectStatusCode: optional<double>
      gitBranch: optional<string>
      customEnvironmentId: optional<string>
      updatedAt: optional<double>
      createdAt: optional<double>
      verified:
        type: boolean
        docs: >-
          `true` if the domain is verified for use with the project. If `false`
          it will not be used as an alias on this project until the challenge in
          `verification` is completed.
      verification:
        type: >-
          optional<list<UpdateProjectDataCacheResponseCustomEnvironmentsItemDomainsItemVerificationItem>>
        docs: >-
          A list of verification challenges, one of which must be completed to
          verify the domain for use on the project. After the challenge is
          complete `POST /projects/:idOrName/domains/:domain/verify` to verify
          the domain. Possible challenges: - If `verification.type = TXT` the
          `verification.domain` will be checked for a TXT record matching
          `verification.value`.
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseCustomEnvironmentsItem:
    properties:
      id: string
      name: string
      slug: string
      type: UpdateProjectDataCacheResponseCustomEnvironmentsItemType
      description: optional<string>
      branchMatcher: >-
        optional<UpdateProjectDataCacheResponseCustomEnvironmentsItemBranchMatcher>
      createdAt: double
      updatedAt: double
      domains: >-
        optional<list<UpdateProjectDataCacheResponseCustomEnvironmentsItemDomainsItem>>
      currentDeploymentAliases: optional<list<string>>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseFramework:
    enum:
      - blitzjs
      - nextjs
      - gatsby
      - remix
      - astro
      - hexo
      - eleventy
      - value: docusaurus-2
        name: Docusaurus2
      - docusaurus
      - preact
      - value: solidstart-1
        name: Solidstart1
      - solidstart
      - dojo
      - ember
      - vue
      - scully
      - value: ionic-angular
        name: IonicAngular
      - angular
      - polymer
      - svelte
      - sveltekit
      - value: sveltekit-1
        name: Sveltekit1
      - value: ionic-react
        name: IonicReact
      - value: create-react-app
        name: CreateReactApp
      - gridsome
      - umijs
      - sapper
      - saber
      - stencil
      - nuxtjs
      - redwoodjs
      - hugo
      - jekyll
      - brunch
      - middleman
      - zola
      - hydrogen
      - vite
      - vitepress
      - vuepress
      - parcel
      - fasthtml
      - value: sanity-v3
        name: SanityV3
      - sanity
      - storybook
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLatestDeploymentsItemAliasAssigned:
    discriminated: false
    union:
      - double
      - boolean
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLatestDeploymentsItemAliasError:
    properties:
      code: string
      message: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLatestDeploymentsItemBuildsItem:
    properties:
      use: string
      src: optional<string>
      dest: optional<string>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLatestDeploymentsItemChecksConclusion:
    enum:
      - succeeded
      - failed
      - skipped
      - canceled
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLatestDeploymentsItemChecksState:
    enum:
      - registered
      - running
      - completed
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLatestDeploymentsItemCreator:
    properties:
      email: string
      githubLogin: optional<string>
      gitlabLogin: optional<string>
      uid: string
      username: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLatestDeploymentsItemOidcTokenClaims:
    properties:
      sub: string
      scope: string
      aud: string
      owner: string
      owner_id: string
      project: string
      project_id: string
      environment: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLatestDeploymentsItemPlan:
    enum:
      - pro
      - enterprise
      - hobby
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLatestDeploymentsItemReadyState:
    enum:
      - BUILDING
      - ERROR
      - INITIALIZING
      - QUEUED
      - READY
      - CANCELED
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLatestDeploymentsItemReadySubstate:
    enum:
      - STAGED
      - PROMOTED
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLatestDeploymentsItem:
    properties:
      id: string
      alias: optional<list<string>>
      aliasAssigned: >-
        optional<UpdateProjectDataCacheResponseLatestDeploymentsItemAliasAssigned>
      aliasError: optional<UpdateProjectDataCacheResponseLatestDeploymentsItemAliasError>
      aliasFinal: optional<string>
      automaticAliases: optional<list<string>>
      buildingAt: optional<double>
      builds: >-
        optional<list<UpdateProjectDataCacheResponseLatestDeploymentsItemBuildsItem>>
      checksConclusion: >-
        optional<UpdateProjectDataCacheResponseLatestDeploymentsItemChecksConclusion>
      checksState: optional<UpdateProjectDataCacheResponseLatestDeploymentsItemChecksState>
      connectBuildsEnabled: optional<boolean>
      connectConfigurationId: optional<string>
      createdAt: double
      createdIn: string
      creator: optional<UpdateProjectDataCacheResponseLatestDeploymentsItemCreator>
      deletedAt: optional<double>
      deploymentHostname: string
      forced: optional<boolean>
      name: string
      meta: optional<map<string, string>>
      monorepoManager: optional<string>
      oidcTokenClaims: >-
        optional<UpdateProjectDataCacheResponseLatestDeploymentsItemOidcTokenClaims>
      plan: UpdateProjectDataCacheResponseLatestDeploymentsItemPlan
      previewCommentsEnabled:
        type: optional<boolean>
        docs: Whether or not preview comments are enabled for the deployment
      private: boolean
      readyAt: optional<double>
      readyState: UpdateProjectDataCacheResponseLatestDeploymentsItemReadyState
      readySubstate: >-
        optional<UpdateProjectDataCacheResponseLatestDeploymentsItemReadySubstate>
      requestedAt: optional<double>
      target: optional<string>
      teamId: optional<string>
      type: literal<"LAMBDAS">
      url: string
      userId: string
      withCache: optional<boolean>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLinkGithubDeployHooksItem:
    properties:
      createdAt: optional<double>
      id: string
      name: string
      ref: string
      url: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLinkGithub:
    properties:
      org: optional<string>
      repoOwnerId:
        type: optional<double>
        docs: >-
          A new field, should be included in all new project links, is being
          added just in time when a deployment is created. This is needed for
          Protected Git scopes.
      repo: optional<string>
      repoId: optional<double>
      createdAt: optional<double>
      deployHooks: list<UpdateProjectDataCacheResponseLinkGithubDeployHooksItem>
      gitCredentialId: optional<string>
      updatedAt: optional<double>
      sourceless: optional<boolean>
      productionBranch: optional<string>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLinkGitlabDeployHooksItem:
    properties:
      createdAt: optional<double>
      id: string
      name: string
      ref: string
      url: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLinkGitlab:
    properties:
      projectId: optional<string>
      projectName: optional<string>
      projectNameWithNamespace: optional<string>
      projectNamespace: optional<string>
      projectOwnerId:
        type: optional<double>
        docs: >-
          A new field, should be included in all new project links, is being
          added just in time when a deployment is created. This is needed for
          Protected Git scopes. This is the id of the top level group that a
          namespace belongs to. Gitlab supports group nesting (up to 20 levels).
      projectUrl: optional<string>
      createdAt: optional<double>
      deployHooks: list<UpdateProjectDataCacheResponseLinkGitlabDeployHooksItem>
      gitCredentialId: optional<string>
      updatedAt: optional<double>
      sourceless: optional<boolean>
      productionBranch: optional<string>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLinkBitbucketDeployHooksItem:
    properties:
      createdAt: optional<double>
      id: string
      name: string
      ref: string
      url: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLinkBitbucket:
    properties:
      name: optional<string>
      slug: optional<string>
      owner: optional<string>
      uuid: optional<string>
      workspaceUuid: optional<string>
      createdAt: optional<double>
      deployHooks: list<UpdateProjectDataCacheResponseLinkBitbucketDeployHooksItem>
      gitCredentialId: optional<string>
      updatedAt: optional<double>
      sourceless: optional<boolean>
      productionBranch: optional<string>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLink:
    discriminant: type
    base-properties: {}
    union:
      github: UpdateProjectDataCacheResponseLinkGithub
      gitlab: UpdateProjectDataCacheResponseLinkGitlab
      bitbucket: UpdateProjectDataCacheResponseLinkBitbucket
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseNodeVersion:
    enum:
      - value: 20.x
        name: TwentyX
      - value: 18.x
        name: EighteenX
      - value: 16.x
        name: SixteenX
      - value: 14.x
        name: FourteenX
      - value: 12.x
        name: TwelveX
      - value: 10.x
        name: TenX
      - value: 8.10.x
        name: Eight10X
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseOptionsAllowlistPathsItem:
    properties:
      value: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseOptionsAllowlist:
    properties:
      paths: list<UpdateProjectDataCacheResponseOptionsAllowlistPathsItem>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseResourceConfigFunctionDefaultMemoryType:
    enum:
      - standard_legacy
      - standard
      - performance
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseResourceConfig:
    properties:
      functionDefaultTimeout: optional<double>
      functionDefaultMemoryType: >-
        optional<UpdateProjectDataCacheResponseResourceConfigFunctionDefaultMemoryType>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSsoProtectionDeploymentType:
    enum:
      - preview
      - all
      - prod_deployment_urls_and_all_previews
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSsoProtection:
    properties:
      deploymentType: UpdateProjectDataCacheResponseSsoProtectionDeploymentType
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTargetsValueAliasAssigned:
    discriminated: false
    union:
      - double
      - boolean
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTargetsValueAliasError:
    properties:
      code: string
      message: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTargetsValueBuildsItem:
    properties:
      use: string
      src: optional<string>
      dest: optional<string>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTargetsValueChecksConclusion:
    enum:
      - succeeded
      - failed
      - skipped
      - canceled
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTargetsValueChecksState:
    enum:
      - registered
      - running
      - completed
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTargetsValueCreator:
    properties:
      email: string
      githubLogin: optional<string>
      gitlabLogin: optional<string>
      uid: string
      username: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTargetsValueOidcTokenClaims:
    properties:
      sub: string
      scope: string
      aud: string
      owner: string
      owner_id: string
      project: string
      project_id: string
      environment: string
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTargetsValuePlan:
    enum:
      - pro
      - enterprise
      - hobby
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTargetsValueReadyState:
    enum:
      - BUILDING
      - ERROR
      - INITIALIZING
      - QUEUED
      - READY
      - CANCELED
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTargetsValueReadySubstate:
    enum:
      - STAGED
      - PROMOTED
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTargetsValue:
    properties:
      id: string
      alias: optional<list<string>>
      aliasAssigned: optional<UpdateProjectDataCacheResponseTargetsValueAliasAssigned>
      aliasError: optional<UpdateProjectDataCacheResponseTargetsValueAliasError>
      aliasFinal: optional<string>
      automaticAliases: optional<list<string>>
      buildingAt: optional<double>
      builds: optional<list<UpdateProjectDataCacheResponseTargetsValueBuildsItem>>
      checksConclusion: optional<UpdateProjectDataCacheResponseTargetsValueChecksConclusion>
      checksState: optional<UpdateProjectDataCacheResponseTargetsValueChecksState>
      connectBuildsEnabled: optional<boolean>
      connectConfigurationId: optional<string>
      createdAt: double
      createdIn: string
      creator: optional<UpdateProjectDataCacheResponseTargetsValueCreator>
      deletedAt: optional<double>
      deploymentHostname: string
      forced: optional<boolean>
      name: string
      meta: optional<map<string, string>>
      monorepoManager: optional<string>
      oidcTokenClaims: optional<UpdateProjectDataCacheResponseTargetsValueOidcTokenClaims>
      plan: UpdateProjectDataCacheResponseTargetsValuePlan
      previewCommentsEnabled:
        type: optional<boolean>
        docs: Whether or not preview comments are enabled for the deployment
      private: boolean
      readyAt: optional<double>
      readyState: UpdateProjectDataCacheResponseTargetsValueReadyState
      readySubstate: optional<UpdateProjectDataCacheResponseTargetsValueReadySubstate>
      requestedAt: optional<double>
      target: optional<string>
      teamId: optional<string>
      type: literal<"LAMBDAS">
      url: string
      userId: string
      withCache: optional<boolean>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponsePermissions:
    properties:
      accessGroup: optional<list<root.AclAction>>
      aliasGlobal: optional<list<root.AclAction>>
      analyticsSampling: optional<list<root.AclAction>>
      analyticsUsage: optional<list<root.AclAction>>
      auditLog: optional<list<root.AclAction>>
      billingAddress: optional<list<root.AclAction>>
      billingInformation: optional<list<root.AclAction>>
      billingInvoice: optional<list<root.AclAction>>
      billingInvoiceEmailRecipient: optional<list<root.AclAction>>
      billingInvoiceLanguage: optional<list<root.AclAction>>
      billingPlan: optional<list<root.AclAction>>
      billingPurchaseOrder: optional<list<root.AclAction>>
      billingTaxId: optional<list<root.AclAction>>
      blob: optional<list<root.AclAction>>
      budget: optional<list<root.AclAction>>
      cacheArtifact: optional<list<root.AclAction>>
      cacheArtifactUsageEvent: optional<list<root.AclAction>>
      codeChecks: optional<list<root.AclAction>>
      concurrentBuilds: optional<list<root.AclAction>>
      connect: optional<list<root.AclAction>>
      connectConfiguration: optional<list<root.AclAction>>
      domain: optional<list<root.AclAction>>
      domainAcceptDelegation: optional<list<root.AclAction>>
      domainAuthCodes: optional<list<root.AclAction>>
      domainCertificate: optional<list<root.AclAction>>
      domainCheckConfig: optional<list<root.AclAction>>
      domainMove: optional<list<root.AclAction>>
      domainPurchase: optional<list<root.AclAction>>
      domainRecord: optional<list<root.AclAction>>
      domainTransferIn: optional<list<root.AclAction>>
      event: optional<list<root.AclAction>>
      ownEvent: optional<list<root.AclAction>>
      sensitiveEnvironmentVariablePolicy: optional<list<root.AclAction>>
      fileUpload: optional<list<root.AclAction>>
      gitRepository: optional<list<root.AclAction>>
      ipBlocking: optional<list<root.AclAction>>
      integration: optional<list<root.AclAction>>
      integrationAccount: optional<list<root.AclAction>>
      integrationConfiguration: optional<list<root.AclAction>>
      integrationConfigurationTransfer: optional<list<root.AclAction>>
      integrationConfigurationProjects: optional<list<root.AclAction>>
      integrationVercelConfigurationOverride: optional<list<root.AclAction>>
      integrationConfigurationRole: optional<list<root.AclAction>>
      integrationResource: optional<list<root.AclAction>>
      integrationEvent: optional<list<root.AclAction>>
      integrationResourceSecrets: optional<list<root.AclAction>>
      marketplaceInstallationMember: optional<list<root.AclAction>>
      marketplaceBillingData: optional<list<root.AclAction>>
      marketplaceInvoice: optional<list<root.AclAction>>
      jobGlobal: optional<list<root.AclAction>>
      logDrain: optional<list<root.AclAction>>
      Monitoring: optional<list<root.AclAction>>
      monitoringSettings: optional<list<root.AclAction>>
      monitoringQuery: optional<list<root.AclAction>>
      monitoringChart: optional<list<root.AclAction>>
      monitoringAlert: optional<list<root.AclAction>>
      notificationDeploymentFailed: optional<list<root.AclAction>>
      notificationDomainConfiguration: optional<list<root.AclAction>>
      notificationDomainExpire: optional<list<root.AclAction>>
      notificationDomainMoved: optional<list<root.AclAction>>
      notificationDomainPurchase: optional<list<root.AclAction>>
      notificationDomainRenewal: optional<list<root.AclAction>>
      notificationDomainTransfer: optional<list<root.AclAction>>
      notificationDomainUnverified: optional<list<root.AclAction>>
      NotificationMonitoringAlert: optional<list<root.AclAction>>
      notificationPaymentFailed: optional<list<root.AclAction>>
      notificationUsageAlert: optional<list<root.AclAction>>
      notificationCustomerBudget: optional<list<root.AclAction>>
      notificationStatementOfReasons: optional<list<root.AclAction>>
      oauth2Connection: optional<list<root.AclAction>>
      openTelemetryEndpoint: optional<list<root.AclAction>>
      paymentMethod: optional<list<root.AclAction>>
      permissions: optional<list<root.AclAction>>
      postgres: optional<list<root.AclAction>>
      previewDeploymentSuffix: optional<list<root.AclAction>>
      proTrialOnboarding: optional<list<root.AclAction>>
      sharedEnvVars: optional<list<root.AclAction>>
      sharedEnvVarsProduction: optional<list<root.AclAction>>
      space: optional<list<root.AclAction>>
      spaceRun: optional<list<root.AclAction>>
      passwordProtectionInvoiceItem: optional<list<root.AclAction>>
      rateLimit: optional<list<root.AclAction>>
      redis: optional<list<root.AclAction>>
      repository: optional<list<root.AclAction>>
      remoteCaching: optional<list<root.AclAction>>
      samlConfig: optional<list<root.AclAction>>
      secret: optional<list<root.AclAction>>
      redisStoreTokenSet: optional<list<root.AclAction>>
      blobStoreTokenSet: optional<list<root.AclAction>>
      postgresStoreTokenSet: optional<list<root.AclAction>>
      integrationStoreTokenSet: optional<list<root.AclAction>>
      integrationResourceReplCommand: optional<list<root.AclAction>>
      storeTransfer: optional<list<root.AclAction>>
      supportCase: optional<list<root.AclAction>>
      supportCaseComment: optional<list<root.AclAction>>
      dataCacheBillingSettings: optional<list<root.AclAction>>
      team: optional<list<root.AclAction>>
      teamAccessRequest: optional<list<root.AclAction>>
      teamFellowMembership: optional<list<root.AclAction>>
      teamGitExclusivity: optional<list<root.AclAction>>
      teamInvite: optional<list<root.AclAction>>
      teamInviteCode: optional<list<root.AclAction>>
      teamJoin: optional<list<root.AclAction>>
      teamOwnMembership: optional<list<root.AclAction>>
      teamOwnMembershipDisconnectSAML: optional<list<root.AclAction>>
      token: optional<list<root.AclAction>>
      usage: optional<list<root.AclAction>>
      usageCycle: optional<list<root.AclAction>>
      user: optional<list<root.AclAction>>
      userConnection: optional<list<root.AclAction>>
      vpcPeeringConnection: optional<list<root.AclAction>>
      webAnalyticsPlan: optional<list<root.AclAction>>
      webAuthn: optional<list<root.AclAction>>
      edgeConfig: optional<list<root.AclAction>>
      edgeConfigItem: optional<list<root.AclAction>>
      edgeConfigSchema: optional<list<root.AclAction>>
      edgeConfigToken: optional<list<root.AclAction>>
      webhook: optional<list<root.AclAction>>
      webhook-event: optional<list<root.AclAction>>
      endpointVerification: optional<list<root.AclAction>>
      projectTransferIn: optional<list<root.AclAction>>
      oauth2Application: optional<list<root.AclAction>>
      aliasProject: optional<list<root.AclAction>>
      aliasProtectionBypass: optional<list<root.AclAction>>
      productionAliasProtectionBypass: optional<list<root.AclAction>>
      connectConfigurationLink: optional<list<root.AclAction>>
      dataCacheNamespace: optional<list<root.AclAction>>
      deployment: optional<list<root.AclAction>>
      deploymentCheck: optional<list<root.AclAction>>
      deploymentCheckPreview: optional<list<root.AclAction>>
      deploymentCheckReRunFromProductionBranch: optional<list<root.AclAction>>
      deploymentProductionGit: optional<list<root.AclAction>>
      deploymentPreview: optional<list<root.AclAction>>
      deploymentPrivate: optional<list<root.AclAction>>
      deploymentPromote: optional<list<root.AclAction>>
      deploymentRollback: optional<list<root.AclAction>>
      environments: optional<list<root.AclAction>>
      logs: optional<list<root.AclAction>>
      logsPreset: optional<list<root.AclAction>>
      passwordProtection: optional<list<root.AclAction>>
      optionsAllowlist: optional<list<root.AclAction>>
      job: optional<list<root.AclAction>>
      project: optional<list<root.AclAction>>
      projectAccessGroup: optional<list<root.AclAction>>
      projectAnalyticsSampling: optional<list<root.AclAction>>
      projectDeploymentHook: optional<list<root.AclAction>>
      projectDomain: optional<list<root.AclAction>>
      projectDomainMove: optional<list<root.AclAction>>
      projectDomainCheckConfig: optional<list<root.AclAction>>
      projectEnvVars: optional<list<root.AclAction>>
      projectEnvVarsProduction: optional<list<root.AclAction>>
      projectEnvVarsUnownedByIntegration: optional<list<root.AclAction>>
      projectFlags: optional<list<root.AclAction>>
      projectId: optional<list<root.AclAction>>
      projectIntegrationConfiguration: optional<list<root.AclAction>>
      projectLink: optional<list<root.AclAction>>
      projectMember: optional<list<root.AclAction>>
      projectMonitoring: optional<list<root.AclAction>>
      projectPermissions: optional<list<root.AclAction>>
      projectProductionBranch: optional<list<root.AclAction>>
      projectTransfer: optional<list<root.AclAction>>
      projectTransferOut: optional<list<root.AclAction>>
      projectProtectionBypass: optional<list<root.AclAction>>
      projectUsage: optional<list<root.AclAction>>
      projectAnalyticsUsage: optional<list<root.AclAction>>
      projectSupportCase: optional<list<root.AclAction>>
      projectSupportCaseComment: optional<list<root.AclAction>>
      projectDeploymentExpiration: optional<list<root.AclAction>>
      projectTier: optional<list<root.AclAction>>
      seawallConfig: optional<list<root.AclAction>>
      skewProtection: optional<list<root.AclAction>>
      analytics: optional<list<root.AclAction>>
      trustedIps: optional<list<root.AclAction>>
      webAnalytics: optional<list<root.AclAction>>
      sharedEnvVarConnection: optional<list<root.AclAction>>
      sonar: optional<list<root.AclAction>>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLastAliasRequestJobStatus:
    enum:
      - succeeded
      - failed
      - skipped
      - pending
      - value: in-progress
        name: InProgress
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLastAliasRequestType:
    enum:
      - promote
      - rollback
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseLastAliasRequest:
    properties:
      fromDeploymentId: string
      toDeploymentId: string
      jobStatus: UpdateProjectDataCacheResponseLastAliasRequestJobStatus
      requestedAt: double
      type: UpdateProjectDataCacheResponseLastAliasRequestType
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseProtectionBypassValue:
    properties:
      createdAt: double
      createdBy: string
      scope: literal<"automation-bypass">
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTrustedIpsAddressesDeploymentType:
    enum:
      - production
      - preview
      - all
      - prod_deployment_urls_and_all_previews
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTrustedIpsAddressesAddressesItem:
    properties:
      value: string
      note: optional<string>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTrustedIpsAddressesProtectionMode:
    enum:
      - additional
      - exclusive
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTrustedIpsAddresses:
    properties:
      deploymentType: UpdateProjectDataCacheResponseTrustedIpsAddressesDeploymentType
      addresses: list<UpdateProjectDataCacheResponseTrustedIpsAddressesAddressesItem>
      protectionMode: UpdateProjectDataCacheResponseTrustedIpsAddressesProtectionMode
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTrustedIpsOneDeploymentType:
    enum:
      - production
      - preview
      - all
      - prod_deployment_urls_and_all_previews
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTrustedIpsOne:
    properties:
      deploymentType: UpdateProjectDataCacheResponseTrustedIpsOneDeploymentType
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTrustedIps:
    discriminated: false
    union:
      - UpdateProjectDataCacheResponseTrustedIpsAddresses
      - UpdateProjectDataCacheResponseTrustedIpsOne
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseGitComments:
    properties:
      onPullRequest:
        type: boolean
        docs: Whether the Vercel bot should comment on PRs
      onCommit:
        type: boolean
        docs: Whether the Vercel bot should comment on commits
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseWebAnalytics:
    properties:
      id: string
      disabledAt: optional<double>
      canceledAt: optional<double>
      enabledAt: optional<double>
      hasData: optional<boolean>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItemSrcEq:
    properties:
      re: optional<string>
      eq: optional<string>
      neq: optional<string>
      inc: optional<list<string>>
      ninc: optional<list<string>>
      pre: optional<string>
      suf: optional<string>
      gt: optional<double>
      gte: optional<double>
      lt: optional<double>
      lte: optional<double>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItemSrc:
    discriminated: false
    union:
      - string
      - UpdateProjectDataCacheResponseSecurityFirewallRoutesItemSrcEq
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItemHasItemType:
    enum:
      - path
      - host
      - method
      - header
      - cookie
      - query
      - ip_address
      - protocol
      - scheme
      - environment
      - region
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItemHasItemValueEq:
    properties:
      re: optional<string>
      eq: optional<string>
      neq: optional<string>
      inc: optional<list<string>>
      ninc: optional<list<string>>
      pre: optional<string>
      suf: optional<string>
      gt: optional<double>
      gte: optional<double>
      lt: optional<double>
      lte: optional<double>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItemHasItemValue:
    discriminated: false
    union:
      - string
      - UpdateProjectDataCacheResponseSecurityFirewallRoutesItemHasItemValueEq
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItemHasItem:
    properties:
      type: UpdateProjectDataCacheResponseSecurityFirewallRoutesItemHasItemType
      key: optional<string>
      value: >-
        optional<UpdateProjectDataCacheResponseSecurityFirewallRoutesItemHasItemValue>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMissingItemType:
    enum:
      - path
      - host
      - method
      - header
      - cookie
      - query
      - ip_address
      - protocol
      - scheme
      - environment
      - region
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMissingItemValueEq:
    properties:
      re: optional<string>
      eq: optional<string>
      neq: optional<string>
      inc: optional<list<string>>
      ninc: optional<list<string>>
      pre: optional<string>
      suf: optional<string>
      gt: optional<double>
      gte: optional<double>
      lt: optional<double>
      lte: optional<double>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMissingItemValue:
    discriminated: false
    union:
      - string
      - >-
        UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMissingItemValueEq
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMissingItem:
    properties:
      type: UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMissingItemType
      key: optional<string>
      value: >-
        optional<UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMissingItemValue>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItemHandle:
    enum:
      - init
      - finalize
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMitigateAction:
    enum:
      - deny
      - challenge
      - log
      - bypass
      - rate_limit
      - redirect
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMitigateErlAlgo:
    enum:
      - fixed_window
      - token_bucket
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMitigateErl:
    properties:
      algo: UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMitigateErlAlgo
      window: double
      limit: double
      keys: list<string>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMitigate:
    properties:
      action: UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMitigateAction
      rule_id: string
      ttl: optional<double>
      erl: >-
        optional<UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMitigateErl>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurityFirewallRoutesItem:
    properties:
      src: optional<UpdateProjectDataCacheResponseSecurityFirewallRoutesItemSrc>
      has: >-
        optional<list<UpdateProjectDataCacheResponseSecurityFirewallRoutesItemHasItem>>
      missing: >-
        optional<list<UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMissingItem>>
      dest: optional<string>
      status: optional<double>
      handle: optional<UpdateProjectDataCacheResponseSecurityFirewallRoutesItemHandle>
      mitigate: >-
        optional<UpdateProjectDataCacheResponseSecurityFirewallRoutesItemMitigate>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseSecurity:
    properties:
      attackModeEnabled: optional<boolean>
      attackModeUpdatedAt: optional<double>
      firewallEnabled: optional<boolean>
      firewallUpdatedAt: optional<double>
      attackModeActiveUntil: optional<double>
      firewallConfigVersion: optional<double>
      firewallRoutes: optional<list<UpdateProjectDataCacheResponseSecurityFirewallRoutesItem>>
      firewallSeawallEnabled: optional<boolean>
      ja3Enabled: optional<boolean>
      ja4Enabled: optional<boolean>
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseOidcTokenConfig:
    properties:
      enabled: boolean
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponseTier:
    enum:
      - standard
      - advanced
      - critical
    source:
      openapi: openapi.json
  UpdateProjectDataCacheResponse:
    properties:
      accountId: string
      analytics: optional<UpdateProjectDataCacheResponseAnalytics>
      speedInsights: optional<UpdateProjectDataCacheResponseSpeedInsights>
      autoExposeSystemEnvs: optional<boolean>
      autoAssignCustomDomains: optional<boolean>
      autoAssignCustomDomainsUpdatedBy: optional<string>
      buildCommand: optional<string>
      commandForIgnoringBuildStep: optional<string>
      connectConfigurationId: optional<string>
      connectBuildsEnabled: optional<boolean>
      createdAt: optional<double>
      customerSupportCodeVisibility: optional<boolean>
      crons: optional<UpdateProjectDataCacheResponseCrons>
      dataCache: optional<UpdateProjectDataCacheResponseDataCache>
      deploymentExpiration: optional<UpdateProjectDataCacheResponseDeploymentExpiration>
      devCommand: optional<string>
      directoryListing: boolean
      installCommand: optional<string>
      env: optional<list<UpdateProjectDataCacheResponseEnvItem>>
      customEnvironments: optional<list<UpdateProjectDataCacheResponseCustomEnvironmentsItem>>
      framework: optional<UpdateProjectDataCacheResponseFramework>
      gitForkProtection: optional<boolean>
      gitLFS: optional<boolean>
      id: string
      latestDeployments: optional<list<UpdateProjectDataCacheResponseLatestDeploymentsItem>>
      link: optional<UpdateProjectDataCacheResponseLink>
      name: string
      nodeVersion: UpdateProjectDataCacheResponseNodeVersion
      optionsAllowlist: optional<UpdateProjectDataCacheResponseOptionsAllowlist>
      outputDirectory: optional<string>
      passiveConnectConfigurationId: optional<string>
      passwordProtection: optional<map<string, unknown>>
      productionDeploymentsFastLane: optional<boolean>
      publicSource: optional<boolean>
      resourceConfig: optional<UpdateProjectDataCacheResponseResourceConfig>
      rootDirectory: optional<string>
      serverlessFunctionRegion: optional<string>
      serverlessFunctionZeroConfigFailover: optional<boolean>
      skewProtectionBoundaryAt: optional<double>
      skewProtectionMaxAge: optional<double>
      skipGitConnectDuringLink: optional<boolean>
      sourceFilesOutsideRootDirectory: optional<boolean>
      enableAffectedProjectsDeployments: optional<boolean>
      ssoProtection: optional<UpdateProjectDataCacheResponseSsoProtection>
      targets: >-
        optional<map<string,
        optional<UpdateProjectDataCacheResponseTargetsValue>>>
      transferCompletedAt: optional<double>
      transferStartedAt: optional<double>
      transferToAccountId: optional<string>
      transferredFromAccountId: optional<string>
      updatedAt: optional<double>
      live: optional<boolean>
      enablePreviewFeedback: optional<boolean>
      enableProductionFeedback: optional<boolean>
      permissions: optional<UpdateProjectDataCacheResponsePermissions>
      lastRollbackTarget: optional<map<string, unknown>>
      lastAliasRequest: optional<UpdateProjectDataCacheResponseLastAliasRequest>
      hasFloatingAliases: optional<boolean>
      protectionBypass: >-
        optional<map<string,
        UpdateProjectDataCacheResponseProtectionBypassValue>>
      hasActiveBranches: optional<boolean>
      trustedIps: optional<UpdateProjectDataCacheResponseTrustedIps>
      gitComments: optional<UpdateProjectDataCacheResponseGitComments>
      paused: optional<boolean>
      concurrencyBucketName: optional<string>
      webAnalytics: optional<UpdateProjectDataCacheResponseWebAnalytics>
      security: optional<UpdateProjectDataCacheResponseSecurity>
      oidcTokenConfig: optional<UpdateProjectDataCacheResponseOidcTokenConfig>
      tier: optional<UpdateProjectDataCacheResponseTier>
    source:
      openapi: openapi.json
  GetProjectsRequestGitForkProtection:
    enum:
      - value: '1'
        name: One
      - value: '0'
        name: Zero
    docs: >-
      Specifies whether PRs from Git forks should require a team member's
      authorization before it can be deployed
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemAnalytics:
    properties:
      id: string
      canceledAt: optional<double>
      disabledAt: double
      enabledAt: double
      paidAt: optional<double>
      sampleRatePercent: optional<double>
      spendLimitInDollars: optional<double>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSpeedInsights:
    properties:
      id: string
      enabledAt: optional<double>
      disabledAt: optional<double>
      canceledAt: optional<double>
      hasData: optional<boolean>
      paidAt: optional<double>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemCronsDefinitionsItem:
    properties:
      host:
        type: string
        docs: The hostname that should be used.
      path:
        type: string
        docs: The path that should be called for the cronjob.
      schedule:
        type: string
        docs: The cron expression.
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemCrons:
    properties:
      enabledAt:
        type: double
        docs: >-
          The time the feature was enabled for this project. Note: It enables
          automatically with the first Deployment that outputs cronjobs.
      disabledAt:
        type: optional<double>
        docs: The time the feature was disabled for this project.
      updatedAt: double
      deploymentId:
        type: optional<string>
        docs: The ID of the Deployment from which the definitions originated.
      definitions: list<GetProjectsResponseProjectsItemCronsDefinitionsItem>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemDataCache:
    properties:
      userDisabled: boolean
      storageSizeBytes: optional<double>
      unlimited: optional<boolean>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemDeploymentExpiration:
    properties:
      expirationDays: optional<double>
      expirationDaysProduction: optional<double>
      expirationDaysCanceled: optional<double>
      expirationDaysErrored: optional<double>
      deploymentsToKeep: optional<double>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemTarget:
    discriminated: false
    union:
      - list<GetProjectsResponseProjectsItemEnvItemTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: GetProjectsResponseProjectsItemEnvItemContentHintRedisUrl
      redis-rest-api-url: GetProjectsResponseProjectsItemEnvItemContentHintRedisRestApiUrl
      redis-rest-api-token: GetProjectsResponseProjectsItemEnvItemContentHintRedisRestApiToken
      redis-rest-api-read-only-token: >-
        GetProjectsResponseProjectsItemEnvItemContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: GetProjectsResponseProjectsItemEnvItemContentHintBlobReadWriteToken
      postgres-url: GetProjectsResponseProjectsItemEnvItemContentHintPostgresUrl
      postgres-url-non-pooling: GetProjectsResponseProjectsItemEnvItemContentHintPostgresUrlNonPooling
      postgres-prisma-url: GetProjectsResponseProjectsItemEnvItemContentHintPostgresPrismaUrl
      postgres-user: GetProjectsResponseProjectsItemEnvItemContentHintPostgresUser
      postgres-host: GetProjectsResponseProjectsItemEnvItemContentHintPostgresHost
      postgres-password: GetProjectsResponseProjectsItemEnvItemContentHintPostgresPassword
      postgres-database: GetProjectsResponseProjectsItemEnvItemContentHintPostgresDatabase
      postgres-url-no-ssl: GetProjectsResponseProjectsItemEnvItemContentHintPostgresUrlNoSsl
      integration-store-secret: GetProjectsResponseProjectsItemEnvItemContentHintIntegrationStoreSecret
      flags-connection-string: GetProjectsResponseProjectsItemEnvItemContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItemInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemEnvItem:
    properties:
      target: optional<GetProjectsResponseProjectsItemEnvItemTarget>
      type: GetProjectsResponseProjectsItemEnvItemType
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: string
      value: string
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<GetProjectsResponseProjectsItemEnvItemContentHint>
      internalContentHint:
        type: optional<GetProjectsResponseProjectsItemEnvItemInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
      vsmValue: optional<string>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemCustomEnvironmentsItemType:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemCustomEnvironmentsItemBranchMatcherType:
    enum:
      - endsWith
      - startsWith
      - equals
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemCustomEnvironmentsItemBranchMatcher:
    properties:
      type: GetProjectsResponseProjectsItemCustomEnvironmentsItemBranchMatcherType
      pattern: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemCustomEnvironmentsItemDomainsItemVerificationItem:
    docs: >-
      A list of verification challenges, one of which must be completed to
      verify the domain for use on the project. After the challenge is complete
      `POST /projects/:idOrName/domains/:domain/verify` to verify the domain.
      Possible challenges: - If `verification.type = TXT` the
      `verification.domain` will be checked for a TXT record matching
      `verification.value`.
    properties:
      type: string
      domain: string
      value: string
      reason: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemCustomEnvironmentsItemDomainsItem:
    properties:
      name: string
      apexName: string
      projectId: string
      redirect: optional<string>
      redirectStatusCode: optional<double>
      gitBranch: optional<string>
      customEnvironmentId: optional<string>
      updatedAt: optional<double>
      createdAt: optional<double>
      verified:
        type: boolean
        docs: >-
          `true` if the domain is verified for use with the project. If `false`
          it will not be used as an alias on this project until the challenge in
          `verification` is completed.
      verification:
        type: >-
          optional<list<GetProjectsResponseProjectsItemCustomEnvironmentsItemDomainsItemVerificationItem>>
        docs: >-
          A list of verification challenges, one of which must be completed to
          verify the domain for use on the project. After the challenge is
          complete `POST /projects/:idOrName/domains/:domain/verify` to verify
          the domain. Possible challenges: - If `verification.type = TXT` the
          `verification.domain` will be checked for a TXT record matching
          `verification.value`.
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemCustomEnvironmentsItem:
    properties:
      id: string
      name: string
      slug: string
      type: GetProjectsResponseProjectsItemCustomEnvironmentsItemType
      description: optional<string>
      branchMatcher: >-
        optional<GetProjectsResponseProjectsItemCustomEnvironmentsItemBranchMatcher>
      createdAt: double
      updatedAt: double
      domains: >-
        optional<list<GetProjectsResponseProjectsItemCustomEnvironmentsItemDomainsItem>>
      currentDeploymentAliases: optional<list<string>>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemFramework:
    enum:
      - blitzjs
      - nextjs
      - gatsby
      - remix
      - astro
      - hexo
      - eleventy
      - value: docusaurus-2
        name: Docusaurus2
      - docusaurus
      - preact
      - value: solidstart-1
        name: Solidstart1
      - solidstart
      - dojo
      - ember
      - vue
      - scully
      - value: ionic-angular
        name: IonicAngular
      - angular
      - polymer
      - svelte
      - sveltekit
      - value: sveltekit-1
        name: Sveltekit1
      - value: ionic-react
        name: IonicReact
      - value: create-react-app
        name: CreateReactApp
      - gridsome
      - umijs
      - sapper
      - saber
      - stencil
      - nuxtjs
      - redwoodjs
      - hugo
      - jekyll
      - brunch
      - middleman
      - zola
      - hydrogen
      - vite
      - vitepress
      - vuepress
      - parcel
      - fasthtml
      - value: sanity-v3
        name: SanityV3
      - sanity
      - storybook
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLatestDeploymentsItemAliasAssigned:
    discriminated: false
    union:
      - double
      - boolean
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLatestDeploymentsItemAliasError:
    properties:
      code: string
      message: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLatestDeploymentsItemBuildsItem:
    properties:
      use: string
      src: optional<string>
      dest: optional<string>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLatestDeploymentsItemChecksConclusion:
    enum:
      - succeeded
      - failed
      - skipped
      - canceled
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLatestDeploymentsItemChecksState:
    enum:
      - registered
      - running
      - completed
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLatestDeploymentsItemCreator:
    properties:
      email: string
      githubLogin: optional<string>
      gitlabLogin: optional<string>
      uid: string
      username: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLatestDeploymentsItemOidcTokenClaims:
    properties:
      sub: string
      scope: string
      aud: string
      owner: string
      owner_id: string
      project: string
      project_id: string
      environment: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLatestDeploymentsItemPlan:
    enum:
      - pro
      - enterprise
      - hobby
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLatestDeploymentsItemReadyState:
    enum:
      - BUILDING
      - ERROR
      - INITIALIZING
      - QUEUED
      - READY
      - CANCELED
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLatestDeploymentsItemReadySubstate:
    enum:
      - STAGED
      - PROMOTED
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLatestDeploymentsItem:
    properties:
      id: string
      alias: optional<list<string>>
      aliasAssigned: >-
        optional<GetProjectsResponseProjectsItemLatestDeploymentsItemAliasAssigned>
      aliasError: optional<GetProjectsResponseProjectsItemLatestDeploymentsItemAliasError>
      aliasFinal: optional<string>
      automaticAliases: optional<list<string>>
      buildingAt: optional<double>
      builds: >-
        optional<list<GetProjectsResponseProjectsItemLatestDeploymentsItemBuildsItem>>
      checksConclusion: >-
        optional<GetProjectsResponseProjectsItemLatestDeploymentsItemChecksConclusion>
      checksState: >-
        optional<GetProjectsResponseProjectsItemLatestDeploymentsItemChecksState>
      connectBuildsEnabled: optional<boolean>
      connectConfigurationId: optional<string>
      createdAt: double
      createdIn: string
      creator: optional<GetProjectsResponseProjectsItemLatestDeploymentsItemCreator>
      deletedAt: optional<double>
      deploymentHostname: string
      forced: optional<boolean>
      name: string
      meta: optional<map<string, string>>
      monorepoManager: optional<string>
      oidcTokenClaims: >-
        optional<GetProjectsResponseProjectsItemLatestDeploymentsItemOidcTokenClaims>
      plan: GetProjectsResponseProjectsItemLatestDeploymentsItemPlan
      previewCommentsEnabled:
        type: optional<boolean>
        docs: Whether or not preview comments are enabled for the deployment
      private: boolean
      readyAt: optional<double>
      readyState: GetProjectsResponseProjectsItemLatestDeploymentsItemReadyState
      readySubstate: >-
        optional<GetProjectsResponseProjectsItemLatestDeploymentsItemReadySubstate>
      requestedAt: optional<double>
      target: optional<string>
      teamId: optional<string>
      type: literal<"LAMBDAS">
      url: string
      userId: string
      withCache: optional<boolean>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLinkGithubDeployHooksItem:
    properties:
      createdAt: optional<double>
      id: string
      name: string
      ref: string
      url: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLinkGithub:
    properties:
      org: optional<string>
      repoOwnerId:
        type: optional<double>
        docs: >-
          A new field, should be included in all new project links, is being
          added just in time when a deployment is created. This is needed for
          Protected Git scopes.
      repo: optional<string>
      repoId: optional<double>
      createdAt: optional<double>
      deployHooks: list<GetProjectsResponseProjectsItemLinkGithubDeployHooksItem>
      gitCredentialId: optional<string>
      updatedAt: optional<double>
      sourceless: optional<boolean>
      productionBranch: optional<string>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLinkGitlabDeployHooksItem:
    properties:
      createdAt: optional<double>
      id: string
      name: string
      ref: string
      url: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLinkGitlab:
    properties:
      projectId: optional<string>
      projectName: optional<string>
      projectNameWithNamespace: optional<string>
      projectNamespace: optional<string>
      projectOwnerId:
        type: optional<double>
        docs: >-
          A new field, should be included in all new project links, is being
          added just in time when a deployment is created. This is needed for
          Protected Git scopes. This is the id of the top level group that a
          namespace belongs to. Gitlab supports group nesting (up to 20 levels).
      projectUrl: optional<string>
      createdAt: optional<double>
      deployHooks: list<GetProjectsResponseProjectsItemLinkGitlabDeployHooksItem>
      gitCredentialId: optional<string>
      updatedAt: optional<double>
      sourceless: optional<boolean>
      productionBranch: optional<string>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLinkBitbucketDeployHooksItem:
    properties:
      createdAt: optional<double>
      id: string
      name: string
      ref: string
      url: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLinkBitbucket:
    properties:
      name: optional<string>
      slug: optional<string>
      owner: optional<string>
      uuid: optional<string>
      workspaceUuid: optional<string>
      createdAt: optional<double>
      deployHooks: list<GetProjectsResponseProjectsItemLinkBitbucketDeployHooksItem>
      gitCredentialId: optional<string>
      updatedAt: optional<double>
      sourceless: optional<boolean>
      productionBranch: optional<string>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLink:
    discriminant: type
    base-properties: {}
    union:
      github: GetProjectsResponseProjectsItemLinkGithub
      gitlab: GetProjectsResponseProjectsItemLinkGitlab
      bitbucket: GetProjectsResponseProjectsItemLinkBitbucket
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemNodeVersion:
    enum:
      - value: 20.x
        name: TwentyX
      - value: 18.x
        name: EighteenX
      - value: 16.x
        name: SixteenX
      - value: 14.x
        name: FourteenX
      - value: 12.x
        name: TwelveX
      - value: 10.x
        name: TenX
      - value: 8.10.x
        name: Eight10X
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemOptionsAllowlistPathsItem:
    properties:
      value: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemOptionsAllowlist:
    properties:
      paths: list<GetProjectsResponseProjectsItemOptionsAllowlistPathsItem>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemResourceConfigFunctionDefaultMemoryType:
    enum:
      - standard_legacy
      - standard
      - performance
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemResourceConfig:
    properties:
      functionDefaultTimeout: optional<double>
      functionDefaultMemoryType: >-
        optional<GetProjectsResponseProjectsItemResourceConfigFunctionDefaultMemoryType>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSsoProtectionDeploymentType:
    enum:
      - preview
      - all
      - prod_deployment_urls_and_all_previews
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSsoProtection:
    properties:
      deploymentType: GetProjectsResponseProjectsItemSsoProtectionDeploymentType
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTargetsValueAliasAssigned:
    discriminated: false
    union:
      - double
      - boolean
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTargetsValueAliasError:
    properties:
      code: string
      message: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTargetsValueBuildsItem:
    properties:
      use: string
      src: optional<string>
      dest: optional<string>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTargetsValueChecksConclusion:
    enum:
      - succeeded
      - failed
      - skipped
      - canceled
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTargetsValueChecksState:
    enum:
      - registered
      - running
      - completed
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTargetsValueCreator:
    properties:
      email: string
      githubLogin: optional<string>
      gitlabLogin: optional<string>
      uid: string
      username: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTargetsValueOidcTokenClaims:
    properties:
      sub: string
      scope: string
      aud: string
      owner: string
      owner_id: string
      project: string
      project_id: string
      environment: string
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTargetsValuePlan:
    enum:
      - pro
      - enterprise
      - hobby
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTargetsValueReadyState:
    enum:
      - BUILDING
      - ERROR
      - INITIALIZING
      - QUEUED
      - READY
      - CANCELED
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTargetsValueReadySubstate:
    enum:
      - STAGED
      - PROMOTED
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTargetsValue:
    properties:
      id: string
      alias: optional<list<string>>
      aliasAssigned: optional<GetProjectsResponseProjectsItemTargetsValueAliasAssigned>
      aliasError: optional<GetProjectsResponseProjectsItemTargetsValueAliasError>
      aliasFinal: optional<string>
      automaticAliases: optional<list<string>>
      buildingAt: optional<double>
      builds: optional<list<GetProjectsResponseProjectsItemTargetsValueBuildsItem>>
      checksConclusion: optional<GetProjectsResponseProjectsItemTargetsValueChecksConclusion>
      checksState: optional<GetProjectsResponseProjectsItemTargetsValueChecksState>
      connectBuildsEnabled: optional<boolean>
      connectConfigurationId: optional<string>
      createdAt: double
      createdIn: string
      creator: optional<GetProjectsResponseProjectsItemTargetsValueCreator>
      deletedAt: optional<double>
      deploymentHostname: string
      forced: optional<boolean>
      name: string
      meta: optional<map<string, string>>
      monorepoManager: optional<string>
      oidcTokenClaims: optional<GetProjectsResponseProjectsItemTargetsValueOidcTokenClaims>
      plan: GetProjectsResponseProjectsItemTargetsValuePlan
      previewCommentsEnabled:
        type: optional<boolean>
        docs: Whether or not preview comments are enabled for the deployment
      private: boolean
      readyAt: optional<double>
      readyState: GetProjectsResponseProjectsItemTargetsValueReadyState
      readySubstate: optional<GetProjectsResponseProjectsItemTargetsValueReadySubstate>
      requestedAt: optional<double>
      target: optional<string>
      teamId: optional<string>
      type: literal<"LAMBDAS">
      url: string
      userId: string
      withCache: optional<boolean>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemPermissions:
    properties:
      accessGroup: optional<list<root.AclAction>>
      aliasGlobal: optional<list<root.AclAction>>
      analyticsSampling: optional<list<root.AclAction>>
      analyticsUsage: optional<list<root.AclAction>>
      auditLog: optional<list<root.AclAction>>
      billingAddress: optional<list<root.AclAction>>
      billingInformation: optional<list<root.AclAction>>
      billingInvoice: optional<list<root.AclAction>>
      billingInvoiceEmailRecipient: optional<list<root.AclAction>>
      billingInvoiceLanguage: optional<list<root.AclAction>>
      billingPlan: optional<list<root.AclAction>>
      billingPurchaseOrder: optional<list<root.AclAction>>
      billingTaxId: optional<list<root.AclAction>>
      blob: optional<list<root.AclAction>>
      budget: optional<list<root.AclAction>>
      cacheArtifact: optional<list<root.AclAction>>
      cacheArtifactUsageEvent: optional<list<root.AclAction>>
      codeChecks: optional<list<root.AclAction>>
      concurrentBuilds: optional<list<root.AclAction>>
      connect: optional<list<root.AclAction>>
      connectConfiguration: optional<list<root.AclAction>>
      domain: optional<list<root.AclAction>>
      domainAcceptDelegation: optional<list<root.AclAction>>
      domainAuthCodes: optional<list<root.AclAction>>
      domainCertificate: optional<list<root.AclAction>>
      domainCheckConfig: optional<list<root.AclAction>>
      domainMove: optional<list<root.AclAction>>
      domainPurchase: optional<list<root.AclAction>>
      domainRecord: optional<list<root.AclAction>>
      domainTransferIn: optional<list<root.AclAction>>
      event: optional<list<root.AclAction>>
      ownEvent: optional<list<root.AclAction>>
      sensitiveEnvironmentVariablePolicy: optional<list<root.AclAction>>
      fileUpload: optional<list<root.AclAction>>
      gitRepository: optional<list<root.AclAction>>
      ipBlocking: optional<list<root.AclAction>>
      integration: optional<list<root.AclAction>>
      integrationAccount: optional<list<root.AclAction>>
      integrationConfiguration: optional<list<root.AclAction>>
      integrationConfigurationTransfer: optional<list<root.AclAction>>
      integrationConfigurationProjects: optional<list<root.AclAction>>
      integrationVercelConfigurationOverride: optional<list<root.AclAction>>
      integrationConfigurationRole: optional<list<root.AclAction>>
      integrationResource: optional<list<root.AclAction>>
      integrationEvent: optional<list<root.AclAction>>
      integrationResourceSecrets: optional<list<root.AclAction>>
      marketplaceInstallationMember: optional<list<root.AclAction>>
      marketplaceBillingData: optional<list<root.AclAction>>
      marketplaceInvoice: optional<list<root.AclAction>>
      jobGlobal: optional<list<root.AclAction>>
      logDrain: optional<list<root.AclAction>>
      Monitoring: optional<list<root.AclAction>>
      monitoringSettings: optional<list<root.AclAction>>
      monitoringQuery: optional<list<root.AclAction>>
      monitoringChart: optional<list<root.AclAction>>
      monitoringAlert: optional<list<root.AclAction>>
      notificationDeploymentFailed: optional<list<root.AclAction>>
      notificationDomainConfiguration: optional<list<root.AclAction>>
      notificationDomainExpire: optional<list<root.AclAction>>
      notificationDomainMoved: optional<list<root.AclAction>>
      notificationDomainPurchase: optional<list<root.AclAction>>
      notificationDomainRenewal: optional<list<root.AclAction>>
      notificationDomainTransfer: optional<list<root.AclAction>>
      notificationDomainUnverified: optional<list<root.AclAction>>
      NotificationMonitoringAlert: optional<list<root.AclAction>>
      notificationPaymentFailed: optional<list<root.AclAction>>
      notificationUsageAlert: optional<list<root.AclAction>>
      notificationCustomerBudget: optional<list<root.AclAction>>
      notificationStatementOfReasons: optional<list<root.AclAction>>
      oauth2Connection: optional<list<root.AclAction>>
      openTelemetryEndpoint: optional<list<root.AclAction>>
      paymentMethod: optional<list<root.AclAction>>
      permissions: optional<list<root.AclAction>>
      postgres: optional<list<root.AclAction>>
      previewDeploymentSuffix: optional<list<root.AclAction>>
      proTrialOnboarding: optional<list<root.AclAction>>
      sharedEnvVars: optional<list<root.AclAction>>
      sharedEnvVarsProduction: optional<list<root.AclAction>>
      space: optional<list<root.AclAction>>
      spaceRun: optional<list<root.AclAction>>
      passwordProtectionInvoiceItem: optional<list<root.AclAction>>
      rateLimit: optional<list<root.AclAction>>
      redis: optional<list<root.AclAction>>
      repository: optional<list<root.AclAction>>
      remoteCaching: optional<list<root.AclAction>>
      samlConfig: optional<list<root.AclAction>>
      secret: optional<list<root.AclAction>>
      redisStoreTokenSet: optional<list<root.AclAction>>
      blobStoreTokenSet: optional<list<root.AclAction>>
      postgresStoreTokenSet: optional<list<root.AclAction>>
      integrationStoreTokenSet: optional<list<root.AclAction>>
      integrationResourceReplCommand: optional<list<root.AclAction>>
      storeTransfer: optional<list<root.AclAction>>
      supportCase: optional<list<root.AclAction>>
      supportCaseComment: optional<list<root.AclAction>>
      dataCacheBillingSettings: optional<list<root.AclAction>>
      team: optional<list<root.AclAction>>
      teamAccessRequest: optional<list<root.AclAction>>
      teamFellowMembership: optional<list<root.AclAction>>
      teamGitExclusivity: optional<list<root.AclAction>>
      teamInvite: optional<list<root.AclAction>>
      teamInviteCode: optional<list<root.AclAction>>
      teamJoin: optional<list<root.AclAction>>
      teamOwnMembership: optional<list<root.AclAction>>
      teamOwnMembershipDisconnectSAML: optional<list<root.AclAction>>
      token: optional<list<root.AclAction>>
      usage: optional<list<root.AclAction>>
      usageCycle: optional<list<root.AclAction>>
      user: optional<list<root.AclAction>>
      userConnection: optional<list<root.AclAction>>
      vpcPeeringConnection: optional<list<root.AclAction>>
      webAnalyticsPlan: optional<list<root.AclAction>>
      webAuthn: optional<list<root.AclAction>>
      edgeConfig: optional<list<root.AclAction>>
      edgeConfigItem: optional<list<root.AclAction>>
      edgeConfigSchema: optional<list<root.AclAction>>
      edgeConfigToken: optional<list<root.AclAction>>
      webhook: optional<list<root.AclAction>>
      webhook-event: optional<list<root.AclAction>>
      endpointVerification: optional<list<root.AclAction>>
      projectTransferIn: optional<list<root.AclAction>>
      oauth2Application: optional<list<root.AclAction>>
      aliasProject: optional<list<root.AclAction>>
      aliasProtectionBypass: optional<list<root.AclAction>>
      productionAliasProtectionBypass: optional<list<root.AclAction>>
      connectConfigurationLink: optional<list<root.AclAction>>
      dataCacheNamespace: optional<list<root.AclAction>>
      deployment: optional<list<root.AclAction>>
      deploymentCheck: optional<list<root.AclAction>>
      deploymentCheckPreview: optional<list<root.AclAction>>
      deploymentCheckReRunFromProductionBranch: optional<list<root.AclAction>>
      deploymentProductionGit: optional<list<root.AclAction>>
      deploymentPreview: optional<list<root.AclAction>>
      deploymentPrivate: optional<list<root.AclAction>>
      deploymentPromote: optional<list<root.AclAction>>
      deploymentRollback: optional<list<root.AclAction>>
      environments: optional<list<root.AclAction>>
      logs: optional<list<root.AclAction>>
      logsPreset: optional<list<root.AclAction>>
      passwordProtection: optional<list<root.AclAction>>
      optionsAllowlist: optional<list<root.AclAction>>
      job: optional<list<root.AclAction>>
      project: optional<list<root.AclAction>>
      projectAccessGroup: optional<list<root.AclAction>>
      projectAnalyticsSampling: optional<list<root.AclAction>>
      projectDeploymentHook: optional<list<root.AclAction>>
      projectDomain: optional<list<root.AclAction>>
      projectDomainMove: optional<list<root.AclAction>>
      projectDomainCheckConfig: optional<list<root.AclAction>>
      projectEnvVars: optional<list<root.AclAction>>
      projectEnvVarsProduction: optional<list<root.AclAction>>
      projectEnvVarsUnownedByIntegration: optional<list<root.AclAction>>
      projectFlags: optional<list<root.AclAction>>
      projectId: optional<list<root.AclAction>>
      projectIntegrationConfiguration: optional<list<root.AclAction>>
      projectLink: optional<list<root.AclAction>>
      projectMember: optional<list<root.AclAction>>
      projectMonitoring: optional<list<root.AclAction>>
      projectPermissions: optional<list<root.AclAction>>
      projectProductionBranch: optional<list<root.AclAction>>
      projectTransfer: optional<list<root.AclAction>>
      projectTransferOut: optional<list<root.AclAction>>
      projectProtectionBypass: optional<list<root.AclAction>>
      projectUsage: optional<list<root.AclAction>>
      projectAnalyticsUsage: optional<list<root.AclAction>>
      projectSupportCase: optional<list<root.AclAction>>
      projectSupportCaseComment: optional<list<root.AclAction>>
      projectDeploymentExpiration: optional<list<root.AclAction>>
      projectTier: optional<list<root.AclAction>>
      seawallConfig: optional<list<root.AclAction>>
      skewProtection: optional<list<root.AclAction>>
      analytics: optional<list<root.AclAction>>
      trustedIps: optional<list<root.AclAction>>
      webAnalytics: optional<list<root.AclAction>>
      sharedEnvVarConnection: optional<list<root.AclAction>>
      sonar: optional<list<root.AclAction>>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLastAliasRequestJobStatus:
    enum:
      - succeeded
      - failed
      - skipped
      - pending
      - value: in-progress
        name: InProgress
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLastAliasRequestType:
    enum:
      - promote
      - rollback
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemLastAliasRequest:
    properties:
      fromDeploymentId: string
      toDeploymentId: string
      jobStatus: GetProjectsResponseProjectsItemLastAliasRequestJobStatus
      requestedAt: double
      type: GetProjectsResponseProjectsItemLastAliasRequestType
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemProtectionBypassValue:
    properties:
      createdAt: double
      createdBy: string
      scope: literal<"automation-bypass">
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTrustedIpsAddressesDeploymentType:
    enum:
      - production
      - preview
      - all
      - prod_deployment_urls_and_all_previews
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTrustedIpsAddressesAddressesItem:
    properties:
      value: string
      note: optional<string>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTrustedIpsAddressesProtectionMode:
    enum:
      - additional
      - exclusive
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTrustedIpsAddresses:
    properties:
      deploymentType: GetProjectsResponseProjectsItemTrustedIpsAddressesDeploymentType
      addresses: list<GetProjectsResponseProjectsItemTrustedIpsAddressesAddressesItem>
      protectionMode: GetProjectsResponseProjectsItemTrustedIpsAddressesProtectionMode
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTrustedIpsOneDeploymentType:
    enum:
      - production
      - preview
      - all
      - prod_deployment_urls_and_all_previews
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTrustedIpsOne:
    properties:
      deploymentType: GetProjectsResponseProjectsItemTrustedIpsOneDeploymentType
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTrustedIps:
    discriminated: false
    union:
      - GetProjectsResponseProjectsItemTrustedIpsAddresses
      - GetProjectsResponseProjectsItemTrustedIpsOne
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemGitComments:
    properties:
      onPullRequest:
        type: boolean
        docs: Whether the Vercel bot should comment on PRs
      onCommit:
        type: boolean
        docs: Whether the Vercel bot should comment on commits
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemWebAnalytics:
    properties:
      id: string
      disabledAt: optional<double>
      canceledAt: optional<double>
      enabledAt: optional<double>
      hasData: optional<boolean>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItemSrcEq:
    properties:
      re: optional<string>
      eq: optional<string>
      neq: optional<string>
      inc: optional<list<string>>
      ninc: optional<list<string>>
      pre: optional<string>
      suf: optional<string>
      gt: optional<double>
      gte: optional<double>
      lt: optional<double>
      lte: optional<double>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItemSrc:
    discriminated: false
    union:
      - string
      - GetProjectsResponseProjectsItemSecurityFirewallRoutesItemSrcEq
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItemHasItemType:
    enum:
      - path
      - host
      - method
      - header
      - cookie
      - query
      - ip_address
      - protocol
      - scheme
      - environment
      - region
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItemHasItemValueEq:
    properties:
      re: optional<string>
      eq: optional<string>
      neq: optional<string>
      inc: optional<list<string>>
      ninc: optional<list<string>>
      pre: optional<string>
      suf: optional<string>
      gt: optional<double>
      gte: optional<double>
      lt: optional<double>
      lte: optional<double>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItemHasItemValue:
    discriminated: false
    union:
      - string
      - GetProjectsResponseProjectsItemSecurityFirewallRoutesItemHasItemValueEq
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItemHasItem:
    properties:
      type: GetProjectsResponseProjectsItemSecurityFirewallRoutesItemHasItemType
      key: optional<string>
      value: >-
        optional<GetProjectsResponseProjectsItemSecurityFirewallRoutesItemHasItemValue>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMissingItemType:
    enum:
      - path
      - host
      - method
      - header
      - cookie
      - query
      - ip_address
      - protocol
      - scheme
      - environment
      - region
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMissingItemValueEq:
    properties:
      re: optional<string>
      eq: optional<string>
      neq: optional<string>
      inc: optional<list<string>>
      ninc: optional<list<string>>
      pre: optional<string>
      suf: optional<string>
      gt: optional<double>
      gte: optional<double>
      lt: optional<double>
      lte: optional<double>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMissingItemValue:
    discriminated: false
    union:
      - string
      - >-
        GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMissingItemValueEq
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMissingItem:
    properties:
      type: GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMissingItemType
      key: optional<string>
      value: >-
        optional<GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMissingItemValue>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItemHandle:
    enum:
      - init
      - finalize
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMitigateAction:
    enum:
      - deny
      - challenge
      - log
      - bypass
      - rate_limit
      - redirect
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMitigateErlAlgo:
    enum:
      - fixed_window
      - token_bucket
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMitigateErl:
    properties:
      algo: GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMitigateErlAlgo
      window: double
      limit: double
      keys: list<string>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMitigate:
    properties:
      action: GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMitigateAction
      rule_id: string
      ttl: optional<double>
      erl: >-
        optional<GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMitigateErl>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurityFirewallRoutesItem:
    properties:
      src: optional<GetProjectsResponseProjectsItemSecurityFirewallRoutesItemSrc>
      has: >-
        optional<list<GetProjectsResponseProjectsItemSecurityFirewallRoutesItemHasItem>>
      missing: >-
        optional<list<GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMissingItem>>
      dest: optional<string>
      status: optional<double>
      handle: >-
        optional<GetProjectsResponseProjectsItemSecurityFirewallRoutesItemHandle>
      mitigate: >-
        optional<GetProjectsResponseProjectsItemSecurityFirewallRoutesItemMitigate>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemSecurity:
    properties:
      attackModeEnabled: optional<boolean>
      attackModeUpdatedAt: optional<double>
      firewallEnabled: optional<boolean>
      firewallUpdatedAt: optional<double>
      attackModeActiveUntil: optional<double>
      firewallConfigVersion: optional<double>
      firewallRoutes: >-
        optional<list<GetProjectsResponseProjectsItemSecurityFirewallRoutesItem>>
      firewallSeawallEnabled: optional<boolean>
      ja3Enabled: optional<boolean>
      ja4Enabled: optional<boolean>
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemOidcTokenConfig:
    properties:
      enabled: boolean
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItemTier:
    enum:
      - standard
      - advanced
      - critical
    source:
      openapi: openapi.json
  GetProjectsResponseProjectsItem:
    properties:
      accountId: string
      analytics: optional<GetProjectsResponseProjectsItemAnalytics>
      speedInsights: optional<GetProjectsResponseProjectsItemSpeedInsights>
      autoExposeSystemEnvs: optional<boolean>
      autoAssignCustomDomains: optional<boolean>
      autoAssignCustomDomainsUpdatedBy: optional<string>
      buildCommand: optional<string>
      commandForIgnoringBuildStep: optional<string>
      connectConfigurationId: optional<string>
      connectBuildsEnabled: optional<boolean>
      createdAt: optional<double>
      customerSupportCodeVisibility: optional<boolean>
      crons: optional<GetProjectsResponseProjectsItemCrons>
      dataCache: optional<GetProjectsResponseProjectsItemDataCache>
      deploymentExpiration: optional<GetProjectsResponseProjectsItemDeploymentExpiration>
      devCommand: optional<string>
      directoryListing: boolean
      installCommand: optional<string>
      env: optional<list<GetProjectsResponseProjectsItemEnvItem>>
      customEnvironments: optional<list<GetProjectsResponseProjectsItemCustomEnvironmentsItem>>
      framework: optional<GetProjectsResponseProjectsItemFramework>
      gitForkProtection: optional<boolean>
      gitLFS: optional<boolean>
      id: string
      latestDeployments: optional<list<GetProjectsResponseProjectsItemLatestDeploymentsItem>>
      link: optional<GetProjectsResponseProjectsItemLink>
      name: string
      nodeVersion: GetProjectsResponseProjectsItemNodeVersion
      optionsAllowlist: optional<GetProjectsResponseProjectsItemOptionsAllowlist>
      outputDirectory: optional<string>
      passiveConnectConfigurationId: optional<string>
      passwordProtection: optional<map<string, unknown>>
      productionDeploymentsFastLane: optional<boolean>
      publicSource: optional<boolean>
      resourceConfig: optional<GetProjectsResponseProjectsItemResourceConfig>
      rootDirectory: optional<string>
      serverlessFunctionRegion: optional<string>
      serverlessFunctionZeroConfigFailover: optional<boolean>
      skewProtectionBoundaryAt: optional<double>
      skewProtectionMaxAge: optional<double>
      skipGitConnectDuringLink: optional<boolean>
      sourceFilesOutsideRootDirectory: optional<boolean>
      enableAffectedProjectsDeployments: optional<boolean>
      ssoProtection: optional<GetProjectsResponseProjectsItemSsoProtection>
      targets: >-
        optional<map<string,
        optional<GetProjectsResponseProjectsItemTargetsValue>>>
      transferCompletedAt: optional<double>
      transferStartedAt: optional<double>
      transferToAccountId: optional<string>
      transferredFromAccountId: optional<string>
      updatedAt: optional<double>
      live: optional<boolean>
      enablePreviewFeedback: optional<boolean>
      enableProductionFeedback: optional<boolean>
      permissions: optional<GetProjectsResponseProjectsItemPermissions>
      lastRollbackTarget: optional<map<string, unknown>>
      lastAliasRequest: optional<GetProjectsResponseProjectsItemLastAliasRequest>
      hasFloatingAliases: optional<boolean>
      protectionBypass: >-
        optional<map<string,
        GetProjectsResponseProjectsItemProtectionBypassValue>>
      hasActiveBranches: optional<boolean>
      trustedIps: optional<GetProjectsResponseProjectsItemTrustedIps>
      gitComments: optional<GetProjectsResponseProjectsItemGitComments>
      paused: optional<boolean>
      concurrencyBucketName: optional<string>
      webAnalytics: optional<GetProjectsResponseProjectsItemWebAnalytics>
      security: optional<GetProjectsResponseProjectsItemSecurity>
      oidcTokenConfig: optional<GetProjectsResponseProjectsItemOidcTokenConfig>
      tier: optional<GetProjectsResponseProjectsItemTier>
    source:
      openapi: openapi.json
  GetProjectsResponse:
    docs: The paginated list of projects
    properties:
      projects: list<GetProjectsResponseProjectsItem>
      pagination: root.Pagination
    source:
      openapi: openapi.json
  CreateProjectRequestEnvironmentVariablesItemTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  CreateProjectRequestEnvironmentVariablesItemTarget:
    discriminated: false
    docs: Deployment Target or Targets in which the ENV variable will be used
    union:
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - list<CreateProjectRequestEnvironmentVariablesItemTargetItem>
    source:
      openapi: openapi.json
  CreateProjectRequestEnvironmentVariablesItemType:
    enum:
      - system
      - secret
      - encrypted
      - plain
      - sensitive
    docs: Type of the ENV variable
    source:
      openapi: openapi.json
  CreateProjectRequestEnvironmentVariablesItem:
    properties:
      key:
        type: string
        docs: Name of the ENV variable
      target:
        type: CreateProjectRequestEnvironmentVariablesItemTarget
        docs: Deployment Target or Targets in which the ENV variable will be used
      gitBranch:
        type: optional<string>
        docs: >-
          If defined, the git branch of the environment variable (must have
          target=preview)
        validation:
          maxLength: 250
      type:
        type: optional<CreateProjectRequestEnvironmentVariablesItemType>
        docs: Type of the ENV variable
      value:
        type: string
        docs: Value for the ENV variable
    source:
      openapi: openapi.json
  CreateProjectRequestGitRepositoryType:
    enum:
      - github
      - gitlab
      - bitbucket
    docs: The Git Provider of the repository
    source:
      openapi: openapi.json
  CreateProjectRequestGitRepository:
    docs: >-
      The Git Repository that will be connected to the project. When this is
      defined, any pushes to the specified connected Git Repository will be
      automatically deployed
    properties:
      repo:
        type: string
        docs: 'The name of the git repository. For example: \"vercel/next.js\"'
      type:
        type: CreateProjectRequestGitRepositoryType
        docs: The Git Provider of the repository
    source:
      openapi: openapi.json
  CreateProjectRequestOidcTokenConfig:
    docs: OpenID Connect JSON Web Token generation configuration.
    properties:
      enabled:
        type: boolean
        docs: Whether or not to generate OpenID Connect JSON Web Tokens.
    source:
      openapi: openapi.json
  CreateProjectResponseAnalytics:
    properties:
      id: string
      canceledAt: optional<double>
      disabledAt: double
      enabledAt: double
      paidAt: optional<double>
      sampleRatePercent: optional<double>
      spendLimitInDollars: optional<double>
    source:
      openapi: openapi.json
  CreateProjectResponseSpeedInsights:
    properties:
      id: string
      enabledAt: optional<double>
      disabledAt: optional<double>
      canceledAt: optional<double>
      hasData: optional<boolean>
      paidAt: optional<double>
    source:
      openapi: openapi.json
  CreateProjectResponseCronsDefinitionsItem:
    properties:
      host:
        type: string
        docs: The hostname that should be used.
      path:
        type: string
        docs: The path that should be called for the cronjob.
      schedule:
        type: string
        docs: The cron expression.
    source:
      openapi: openapi.json
  CreateProjectResponseCrons:
    properties:
      enabledAt:
        type: double
        docs: >-
          The time the feature was enabled for this project. Note: It enables
          automatically with the first Deployment that outputs cronjobs.
      disabledAt:
        type: optional<double>
        docs: The time the feature was disabled for this project.
      updatedAt: double
      deploymentId:
        type: optional<string>
        docs: The ID of the Deployment from which the definitions originated.
      definitions: list<CreateProjectResponseCronsDefinitionsItem>
    source:
      openapi: openapi.json
  CreateProjectResponseDataCache:
    properties:
      userDisabled: boolean
      storageSizeBytes: optional<double>
      unlimited: optional<boolean>
    source:
      openapi: openapi.json
  CreateProjectResponseDeploymentExpiration:
    properties:
      expirationDays: optional<double>
      expirationDaysProduction: optional<double>
      expirationDaysCanceled: optional<double>
      expirationDaysErrored: optional<double>
      deploymentsToKeep: optional<double>
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemTarget:
    discriminated: false
    union:
      - list<CreateProjectResponseEnvItemTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: CreateProjectResponseEnvItemContentHintRedisUrl
      redis-rest-api-url: CreateProjectResponseEnvItemContentHintRedisRestApiUrl
      redis-rest-api-token: CreateProjectResponseEnvItemContentHintRedisRestApiToken
      redis-rest-api-read-only-token: CreateProjectResponseEnvItemContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: CreateProjectResponseEnvItemContentHintBlobReadWriteToken
      postgres-url: CreateProjectResponseEnvItemContentHintPostgresUrl
      postgres-url-non-pooling: CreateProjectResponseEnvItemContentHintPostgresUrlNonPooling
      postgres-prisma-url: CreateProjectResponseEnvItemContentHintPostgresPrismaUrl
      postgres-user: CreateProjectResponseEnvItemContentHintPostgresUser
      postgres-host: CreateProjectResponseEnvItemContentHintPostgresHost
      postgres-password: CreateProjectResponseEnvItemContentHintPostgresPassword
      postgres-database: CreateProjectResponseEnvItemContentHintPostgresDatabase
      postgres-url-no-ssl: CreateProjectResponseEnvItemContentHintPostgresUrlNoSsl
      integration-store-secret: CreateProjectResponseEnvItemContentHintIntegrationStoreSecret
      flags-connection-string: CreateProjectResponseEnvItemContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItemInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  CreateProjectResponseEnvItem:
    properties:
      target: optional<CreateProjectResponseEnvItemTarget>
      type: CreateProjectResponseEnvItemType
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: string
      value: string
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<CreateProjectResponseEnvItemContentHint>
      internalContentHint:
        type: optional<CreateProjectResponseEnvItemInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
      vsmValue: optional<string>
    source:
      openapi: openapi.json
  CreateProjectResponseCustomEnvironmentsItemType:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  CreateProjectResponseCustomEnvironmentsItemBranchMatcherType:
    enum:
      - endsWith
      - startsWith
      - equals
    source:
      openapi: openapi.json
  CreateProjectResponseCustomEnvironmentsItemBranchMatcher:
    properties:
      type: CreateProjectResponseCustomEnvironmentsItemBranchMatcherType
      pattern: string
    source:
      openapi: openapi.json
  CreateProjectResponseCustomEnvironmentsItemDomainsItemVerificationItem:
    docs: >-
      A list of verification challenges, one of which must be completed to
      verify the domain for use on the project. After the challenge is complete
      `POST /projects/:idOrName/domains/:domain/verify` to verify the domain.
      Possible challenges: - If `verification.type = TXT` the
      `verification.domain` will be checked for a TXT record matching
      `verification.value`.
    properties:
      type: string
      domain: string
      value: string
      reason: string
    source:
      openapi: openapi.json
  CreateProjectResponseCustomEnvironmentsItemDomainsItem:
    properties:
      name: string
      apexName: string
      projectId: string
      redirect: optional<string>
      redirectStatusCode: optional<double>
      gitBranch: optional<string>
      customEnvironmentId: optional<string>
      updatedAt: optional<double>
      createdAt: optional<double>
      verified:
        type: boolean
        docs: >-
          `true` if the domain is verified for use with the project. If `false`
          it will not be used as an alias on this project until the challenge in
          `verification` is completed.
      verification:
        type: >-
          optional<list<CreateProjectResponseCustomEnvironmentsItemDomainsItemVerificationItem>>
        docs: >-
          A list of verification challenges, one of which must be completed to
          verify the domain for use on the project. After the challenge is
          complete `POST /projects/:idOrName/domains/:domain/verify` to verify
          the domain. Possible challenges: - If `verification.type = TXT` the
          `verification.domain` will be checked for a TXT record matching
          `verification.value`.
    source:
      openapi: openapi.json
  CreateProjectResponseCustomEnvironmentsItem:
    properties:
      id: string
      name: string
      slug: string
      type: CreateProjectResponseCustomEnvironmentsItemType
      description: optional<string>
      branchMatcher: optional<CreateProjectResponseCustomEnvironmentsItemBranchMatcher>
      createdAt: double
      updatedAt: double
      domains: optional<list<CreateProjectResponseCustomEnvironmentsItemDomainsItem>>
      currentDeploymentAliases: optional<list<string>>
    source:
      openapi: openapi.json
  CreateProjectResponseFramework:
    enum:
      - blitzjs
      - nextjs
      - gatsby
      - remix
      - astro
      - hexo
      - eleventy
      - value: docusaurus-2
        name: Docusaurus2
      - docusaurus
      - preact
      - value: solidstart-1
        name: Solidstart1
      - solidstart
      - dojo
      - ember
      - vue
      - scully
      - value: ionic-angular
        name: IonicAngular
      - angular
      - polymer
      - svelte
      - sveltekit
      - value: sveltekit-1
        name: Sveltekit1
      - value: ionic-react
        name: IonicReact
      - value: create-react-app
        name: CreateReactApp
      - gridsome
      - umijs
      - sapper
      - saber
      - stencil
      - nuxtjs
      - redwoodjs
      - hugo
      - jekyll
      - brunch
      - middleman
      - zola
      - hydrogen
      - vite
      - vitepress
      - vuepress
      - parcel
      - fasthtml
      - value: sanity-v3
        name: SanityV3
      - sanity
      - storybook
    source:
      openapi: openapi.json
  CreateProjectResponseLatestDeploymentsItemAliasAssigned:
    discriminated: false
    union:
      - double
      - boolean
    source:
      openapi: openapi.json
  CreateProjectResponseLatestDeploymentsItemAliasError:
    properties:
      code: string
      message: string
    source:
      openapi: openapi.json
  CreateProjectResponseLatestDeploymentsItemBuildsItem:
    properties:
      use: string
      src: optional<string>
      dest: optional<string>
    source:
      openapi: openapi.json
  CreateProjectResponseLatestDeploymentsItemChecksConclusion:
    enum:
      - succeeded
      - failed
      - skipped
      - canceled
    source:
      openapi: openapi.json
  CreateProjectResponseLatestDeploymentsItemChecksState:
    enum:
      - registered
      - running
      - completed
    source:
      openapi: openapi.json
  CreateProjectResponseLatestDeploymentsItemCreator:
    properties:
      email: string
      githubLogin: optional<string>
      gitlabLogin: optional<string>
      uid: string
      username: string
    source:
      openapi: openapi.json
  CreateProjectResponseLatestDeploymentsItemOidcTokenClaims:
    properties:
      sub: string
      scope: string
      aud: string
      owner: string
      owner_id: string
      project: string
      project_id: string
      environment: string
    source:
      openapi: openapi.json
  CreateProjectResponseLatestDeploymentsItemPlan:
    enum:
      - pro
      - enterprise
      - hobby
    source:
      openapi: openapi.json
  CreateProjectResponseLatestDeploymentsItemReadyState:
    enum:
      - BUILDING
      - ERROR
      - INITIALIZING
      - QUEUED
      - READY
      - CANCELED
    source:
      openapi: openapi.json
  CreateProjectResponseLatestDeploymentsItemReadySubstate:
    enum:
      - STAGED
      - PROMOTED
    source:
      openapi: openapi.json
  CreateProjectResponseLatestDeploymentsItem:
    properties:
      id: string
      alias: optional<list<string>>
      aliasAssigned: optional<CreateProjectResponseLatestDeploymentsItemAliasAssigned>
      aliasError: optional<CreateProjectResponseLatestDeploymentsItemAliasError>
      aliasFinal: optional<string>
      automaticAliases: optional<list<string>>
      buildingAt: optional<double>
      builds: optional<list<CreateProjectResponseLatestDeploymentsItemBuildsItem>>
      checksConclusion: optional<CreateProjectResponseLatestDeploymentsItemChecksConclusion>
      checksState: optional<CreateProjectResponseLatestDeploymentsItemChecksState>
      connectBuildsEnabled: optional<boolean>
      connectConfigurationId: optional<string>
      createdAt: double
      createdIn: string
      creator: optional<CreateProjectResponseLatestDeploymentsItemCreator>
      deletedAt: optional<double>
      deploymentHostname: string
      forced: optional<boolean>
      name: string
      meta: optional<map<string, string>>
      monorepoManager: optional<string>
      oidcTokenClaims: optional<CreateProjectResponseLatestDeploymentsItemOidcTokenClaims>
      plan: CreateProjectResponseLatestDeploymentsItemPlan
      previewCommentsEnabled:
        type: optional<boolean>
        docs: Whether or not preview comments are enabled for the deployment
      private: boolean
      readyAt: optional<double>
      readyState: CreateProjectResponseLatestDeploymentsItemReadyState
      readySubstate: optional<CreateProjectResponseLatestDeploymentsItemReadySubstate>
      requestedAt: optional<double>
      target: optional<string>
      teamId: optional<string>
      type: literal<"LAMBDAS">
      url: string
      userId: string
      withCache: optional<boolean>
    source:
      openapi: openapi.json
  CreateProjectResponseLinkGithubDeployHooksItem:
    properties:
      createdAt: optional<double>
      id: string
      name: string
      ref: string
      url: string
    source:
      openapi: openapi.json
  CreateProjectResponseLinkGithub:
    properties:
      org: optional<string>
      repoOwnerId:
        type: optional<double>
        docs: >-
          A new field, should be included in all new project links, is being
          added just in time when a deployment is created. This is needed for
          Protected Git scopes.
      repo: optional<string>
      repoId: optional<double>
      createdAt: optional<double>
      deployHooks: list<CreateProjectResponseLinkGithubDeployHooksItem>
      gitCredentialId: optional<string>
      updatedAt: optional<double>
      sourceless: optional<boolean>
      productionBranch: optional<string>
    source:
      openapi: openapi.json
  CreateProjectResponseLinkGitlabDeployHooksItem:
    properties:
      createdAt: optional<double>
      id: string
      name: string
      ref: string
      url: string
    source:
      openapi: openapi.json
  CreateProjectResponseLinkGitlab:
    properties:
      projectId: optional<string>
      projectName: optional<string>
      projectNameWithNamespace: optional<string>
      projectNamespace: optional<string>
      projectOwnerId:
        type: optional<double>
        docs: >-
          A new field, should be included in all new project links, is being
          added just in time when a deployment is created. This is needed for
          Protected Git scopes. This is the id of the top level group that a
          namespace belongs to. Gitlab supports group nesting (up to 20 levels).
      projectUrl: optional<string>
      createdAt: optional<double>
      deployHooks: list<CreateProjectResponseLinkGitlabDeployHooksItem>
      gitCredentialId: optional<string>
      updatedAt: optional<double>
      sourceless: optional<boolean>
      productionBranch: optional<string>
    source:
      openapi: openapi.json
  CreateProjectResponseLinkBitbucketDeployHooksItem:
    properties:
      createdAt: optional<double>
      id: string
      name: string
      ref: string
      url: string
    source:
      openapi: openapi.json
  CreateProjectResponseLinkBitbucket:
    properties:
      name: optional<string>
      slug: optional<string>
      owner: optional<string>
      uuid: optional<string>
      workspaceUuid: optional<string>
      createdAt: optional<double>
      deployHooks: list<CreateProjectResponseLinkBitbucketDeployHooksItem>
      gitCredentialId: optional<string>
      updatedAt: optional<double>
      sourceless: optional<boolean>
      productionBranch: optional<string>
    source:
      openapi: openapi.json
  CreateProjectResponseLink:
    discriminant: type
    base-properties: {}
    union:
      github: CreateProjectResponseLinkGithub
      gitlab: CreateProjectResponseLinkGitlab
      bitbucket: CreateProjectResponseLinkBitbucket
    source:
      openapi: openapi.json
  CreateProjectResponseNodeVersion:
    enum:
      - value: 20.x
        name: TwentyX
      - value: 18.x
        name: EighteenX
      - value: 16.x
        name: SixteenX
      - value: 14.x
        name: FourteenX
      - value: 12.x
        name: TwelveX
      - value: 10.x
        name: TenX
      - value: 8.10.x
        name: Eight10X
    source:
      openapi: openapi.json
  CreateProjectResponseOptionsAllowlistPathsItem:
    properties:
      value: string
    source:
      openapi: openapi.json
  CreateProjectResponseOptionsAllowlist:
    properties:
      paths: list<CreateProjectResponseOptionsAllowlistPathsItem>
    source:
      openapi: openapi.json
  CreateProjectResponseResourceConfigFunctionDefaultMemoryType:
    enum:
      - standard_legacy
      - standard
      - performance
    source:
      openapi: openapi.json
  CreateProjectResponseResourceConfig:
    properties:
      functionDefaultTimeout: optional<double>
      functionDefaultMemoryType: optional<CreateProjectResponseResourceConfigFunctionDefaultMemoryType>
    source:
      openapi: openapi.json
  CreateProjectResponseSsoProtectionDeploymentType:
    enum:
      - preview
      - all
      - prod_deployment_urls_and_all_previews
    source:
      openapi: openapi.json
  CreateProjectResponseSsoProtection:
    properties:
      deploymentType: CreateProjectResponseSsoProtectionDeploymentType
    source:
      openapi: openapi.json
  CreateProjectResponseTargetsValueAliasAssigned:
    discriminated: false
    union:
      - double
      - boolean
    source:
      openapi: openapi.json
  CreateProjectResponseTargetsValueAliasError:
    properties:
      code: string
      message: string
    source:
      openapi: openapi.json
  CreateProjectResponseTargetsValueBuildsItem:
    properties:
      use: string
      src: optional<string>
      dest: optional<string>
    source:
      openapi: openapi.json
  CreateProjectResponseTargetsValueChecksConclusion:
    enum:
      - succeeded
      - failed
      - skipped
      - canceled
    source:
      openapi: openapi.json
  CreateProjectResponseTargetsValueChecksState:
    enum:
      - registered
      - running
      - completed
    source:
      openapi: openapi.json
  CreateProjectResponseTargetsValueCreator:
    properties:
      email: string
      githubLogin: optional<string>
      gitlabLogin: optional<string>
      uid: string
      username: string
    source:
      openapi: openapi.json
  CreateProjectResponseTargetsValueOidcTokenClaims:
    properties:
      sub: string
      scope: string
      aud: string
      owner: string
      owner_id: string
      project: string
      project_id: string
      environment: string
    source:
      openapi: openapi.json
  CreateProjectResponseTargetsValuePlan:
    enum:
      - pro
      - enterprise
      - hobby
    source:
      openapi: openapi.json
  CreateProjectResponseTargetsValueReadyState:
    enum:
      - BUILDING
      - ERROR
      - INITIALIZING
      - QUEUED
      - READY
      - CANCELED
    source:
      openapi: openapi.json
  CreateProjectResponseTargetsValueReadySubstate:
    enum:
      - STAGED
      - PROMOTED
    source:
      openapi: openapi.json
  CreateProjectResponseTargetsValue:
    properties:
      id: string
      alias: optional<list<string>>
      aliasAssigned: optional<CreateProjectResponseTargetsValueAliasAssigned>
      aliasError: optional<CreateProjectResponseTargetsValueAliasError>
      aliasFinal: optional<string>
      automaticAliases: optional<list<string>>
      buildingAt: optional<double>
      builds: optional<list<CreateProjectResponseTargetsValueBuildsItem>>
      checksConclusion: optional<CreateProjectResponseTargetsValueChecksConclusion>
      checksState: optional<CreateProjectResponseTargetsValueChecksState>
      connectBuildsEnabled: optional<boolean>
      connectConfigurationId: optional<string>
      createdAt: double
      createdIn: string
      creator: optional<CreateProjectResponseTargetsValueCreator>
      deletedAt: optional<double>
      deploymentHostname: string
      forced: optional<boolean>
      name: string
      meta: optional<map<string, string>>
      monorepoManager: optional<string>
      oidcTokenClaims: optional<CreateProjectResponseTargetsValueOidcTokenClaims>
      plan: CreateProjectResponseTargetsValuePlan
      previewCommentsEnabled:
        type: optional<boolean>
        docs: Whether or not preview comments are enabled for the deployment
      private: boolean
      readyAt: optional<double>
      readyState: CreateProjectResponseTargetsValueReadyState
      readySubstate: optional<CreateProjectResponseTargetsValueReadySubstate>
      requestedAt: optional<double>
      target: optional<string>
      teamId: optional<string>
      type: literal<"LAMBDAS">
      url: string
      userId: string
      withCache: optional<boolean>
    source:
      openapi: openapi.json
  CreateProjectResponsePermissions:
    properties:
      accessGroup: optional<list<root.AclAction>>
      aliasGlobal: optional<list<root.AclAction>>
      analyticsSampling: optional<list<root.AclAction>>
      analyticsUsage: optional<list<root.AclAction>>
      auditLog: optional<list<root.AclAction>>
      billingAddress: optional<list<root.AclAction>>
      billingInformation: optional<list<root.AclAction>>
      billingInvoice: optional<list<root.AclAction>>
      billingInvoiceEmailRecipient: optional<list<root.AclAction>>
      billingInvoiceLanguage: optional<list<root.AclAction>>
      billingPlan: optional<list<root.AclAction>>
      billingPurchaseOrder: optional<list<root.AclAction>>
      billingTaxId: optional<list<root.AclAction>>
      blob: optional<list<root.AclAction>>
      budget: optional<list<root.AclAction>>
      cacheArtifact: optional<list<root.AclAction>>
      cacheArtifactUsageEvent: optional<list<root.AclAction>>
      codeChecks: optional<list<root.AclAction>>
      concurrentBuilds: optional<list<root.AclAction>>
      connect: optional<list<root.AclAction>>
      connectConfiguration: optional<list<root.AclAction>>
      domain: optional<list<root.AclAction>>
      domainAcceptDelegation: optional<list<root.AclAction>>
      domainAuthCodes: optional<list<root.AclAction>>
      domainCertificate: optional<list<root.AclAction>>
      domainCheckConfig: optional<list<root.AclAction>>
      domainMove: optional<list<root.AclAction>>
      domainPurchase: optional<list<root.AclAction>>
      domainRecord: optional<list<root.AclAction>>
      domainTransferIn: optional<list<root.AclAction>>
      event: optional<list<root.AclAction>>
      ownEvent: optional<list<root.AclAction>>
      sensitiveEnvironmentVariablePolicy: optional<list<root.AclAction>>
      fileUpload: optional<list<root.AclAction>>
      gitRepository: optional<list<root.AclAction>>
      ipBlocking: optional<list<root.AclAction>>
      integration: optional<list<root.AclAction>>
      integrationAccount: optional<list<root.AclAction>>
      integrationConfiguration: optional<list<root.AclAction>>
      integrationConfigurationTransfer: optional<list<root.AclAction>>
      integrationConfigurationProjects: optional<list<root.AclAction>>
      integrationVercelConfigurationOverride: optional<list<root.AclAction>>
      integrationConfigurationRole: optional<list<root.AclAction>>
      integrationResource: optional<list<root.AclAction>>
      integrationEvent: optional<list<root.AclAction>>
      integrationResourceSecrets: optional<list<root.AclAction>>
      marketplaceInstallationMember: optional<list<root.AclAction>>
      marketplaceBillingData: optional<list<root.AclAction>>
      marketplaceInvoice: optional<list<root.AclAction>>
      jobGlobal: optional<list<root.AclAction>>
      logDrain: optional<list<root.AclAction>>
      Monitoring: optional<list<root.AclAction>>
      monitoringSettings: optional<list<root.AclAction>>
      monitoringQuery: optional<list<root.AclAction>>
      monitoringChart: optional<list<root.AclAction>>
      monitoringAlert: optional<list<root.AclAction>>
      notificationDeploymentFailed: optional<list<root.AclAction>>
      notificationDomainConfiguration: optional<list<root.AclAction>>
      notificationDomainExpire: optional<list<root.AclAction>>
      notificationDomainMoved: optional<list<root.AclAction>>
      notificationDomainPurchase: optional<list<root.AclAction>>
      notificationDomainRenewal: optional<list<root.AclAction>>
      notificationDomainTransfer: optional<list<root.AclAction>>
      notificationDomainUnverified: optional<list<root.AclAction>>
      NotificationMonitoringAlert: optional<list<root.AclAction>>
      notificationPaymentFailed: optional<list<root.AclAction>>
      notificationUsageAlert: optional<list<root.AclAction>>
      notificationCustomerBudget: optional<list<root.AclAction>>
      notificationStatementOfReasons: optional<list<root.AclAction>>
      oauth2Connection: optional<list<root.AclAction>>
      openTelemetryEndpoint: optional<list<root.AclAction>>
      paymentMethod: optional<list<root.AclAction>>
      permissions: optional<list<root.AclAction>>
      postgres: optional<list<root.AclAction>>
      previewDeploymentSuffix: optional<list<root.AclAction>>
      proTrialOnboarding: optional<list<root.AclAction>>
      sharedEnvVars: optional<list<root.AclAction>>
      sharedEnvVarsProduction: optional<list<root.AclAction>>
      space: optional<list<root.AclAction>>
      spaceRun: optional<list<root.AclAction>>
      passwordProtectionInvoiceItem: optional<list<root.AclAction>>
      rateLimit: optional<list<root.AclAction>>
      redis: optional<list<root.AclAction>>
      repository: optional<list<root.AclAction>>
      remoteCaching: optional<list<root.AclAction>>
      samlConfig: optional<list<root.AclAction>>
      secret: optional<list<root.AclAction>>
      redisStoreTokenSet: optional<list<root.AclAction>>
      blobStoreTokenSet: optional<list<root.AclAction>>
      postgresStoreTokenSet: optional<list<root.AclAction>>
      integrationStoreTokenSet: optional<list<root.AclAction>>
      integrationResourceReplCommand: optional<list<root.AclAction>>
      storeTransfer: optional<list<root.AclAction>>
      supportCase: optional<list<root.AclAction>>
      supportCaseComment: optional<list<root.AclAction>>
      dataCacheBillingSettings: optional<list<root.AclAction>>
      team: optional<list<root.AclAction>>
      teamAccessRequest: optional<list<root.AclAction>>
      teamFellowMembership: optional<list<root.AclAction>>
      teamGitExclusivity: optional<list<root.AclAction>>
      teamInvite: optional<list<root.AclAction>>
      teamInviteCode: optional<list<root.AclAction>>
      teamJoin: optional<list<root.AclAction>>
      teamOwnMembership: optional<list<root.AclAction>>
      teamOwnMembershipDisconnectSAML: optional<list<root.AclAction>>
      token: optional<list<root.AclAction>>
      usage: optional<list<root.AclAction>>
      usageCycle: optional<list<root.AclAction>>
      user: optional<list<root.AclAction>>
      userConnection: optional<list<root.AclAction>>
      vpcPeeringConnection: optional<list<root.AclAction>>
      webAnalyticsPlan: optional<list<root.AclAction>>
      webAuthn: optional<list<root.AclAction>>
      edgeConfig: optional<list<root.AclAction>>
      edgeConfigItem: optional<list<root.AclAction>>
      edgeConfigSchema: optional<list<root.AclAction>>
      edgeConfigToken: optional<list<root.AclAction>>
      webhook: optional<list<root.AclAction>>
      webhook-event: optional<list<root.AclAction>>
      endpointVerification: optional<list<root.AclAction>>
      projectTransferIn: optional<list<root.AclAction>>
      oauth2Application: optional<list<root.AclAction>>
      aliasProject: optional<list<root.AclAction>>
      aliasProtectionBypass: optional<list<root.AclAction>>
      productionAliasProtectionBypass: optional<list<root.AclAction>>
      connectConfigurationLink: optional<list<root.AclAction>>
      dataCacheNamespace: optional<list<root.AclAction>>
      deployment: optional<list<root.AclAction>>
      deploymentCheck: optional<list<root.AclAction>>
      deploymentCheckPreview: optional<list<root.AclAction>>
      deploymentCheckReRunFromProductionBranch: optional<list<root.AclAction>>
      deploymentProductionGit: optional<list<root.AclAction>>
      deploymentPreview: optional<list<root.AclAction>>
      deploymentPrivate: optional<list<root.AclAction>>
      deploymentPromote: optional<list<root.AclAction>>
      deploymentRollback: optional<list<root.AclAction>>
      environments: optional<list<root.AclAction>>
      logs: optional<list<root.AclAction>>
      logsPreset: optional<list<root.AclAction>>
      passwordProtection: optional<list<root.AclAction>>
      optionsAllowlist: optional<list<root.AclAction>>
      job: optional<list<root.AclAction>>
      project: optional<list<root.AclAction>>
      projectAccessGroup: optional<list<root.AclAction>>
      projectAnalyticsSampling: optional<list<root.AclAction>>
      projectDeploymentHook: optional<list<root.AclAction>>
      projectDomain: optional<list<root.AclAction>>
      projectDomainMove: optional<list<root.AclAction>>
      projectDomainCheckConfig: optional<list<root.AclAction>>
      projectEnvVars: optional<list<root.AclAction>>
      projectEnvVarsProduction: optional<list<root.AclAction>>
      projectEnvVarsUnownedByIntegration: optional<list<root.AclAction>>
      projectFlags: optional<list<root.AclAction>>
      projectId: optional<list<root.AclAction>>
      projectIntegrationConfiguration: optional<list<root.AclAction>>
      projectLink: optional<list<root.AclAction>>
      projectMember: optional<list<root.AclAction>>
      projectMonitoring: optional<list<root.AclAction>>
      projectPermissions: optional<list<root.AclAction>>
      projectProductionBranch: optional<list<root.AclAction>>
      projectTransfer: optional<list<root.AclAction>>
      projectTransferOut: optional<list<root.AclAction>>
      projectProtectionBypass: optional<list<root.AclAction>>
      projectUsage: optional<list<root.AclAction>>
      projectAnalyticsUsage: optional<list<root.AclAction>>
      projectSupportCase: optional<list<root.AclAction>>
      projectSupportCaseComment: optional<list<root.AclAction>>
      projectDeploymentExpiration: optional<list<root.AclAction>>
      projectTier: optional<list<root.AclAction>>
      seawallConfig: optional<list<root.AclAction>>
      skewProtection: optional<list<root.AclAction>>
      analytics: optional<list<root.AclAction>>
      trustedIps: optional<list<root.AclAction>>
      webAnalytics: optional<list<root.AclAction>>
      sharedEnvVarConnection: optional<list<root.AclAction>>
      sonar: optional<list<root.AclAction>>
    source:
      openapi: openapi.json
  CreateProjectResponseLastAliasRequestJobStatus:
    enum:
      - succeeded
      - failed
      - skipped
      - pending
      - value: in-progress
        name: InProgress
    source:
      openapi: openapi.json
  CreateProjectResponseLastAliasRequestType:
    enum:
      - promote
      - rollback
    source:
      openapi: openapi.json
  CreateProjectResponseLastAliasRequest:
    properties:
      fromDeploymentId: string
      toDeploymentId: string
      jobStatus: CreateProjectResponseLastAliasRequestJobStatus
      requestedAt: double
      type: CreateProjectResponseLastAliasRequestType
    source:
      openapi: openapi.json
  CreateProjectResponseProtectionBypassValue:
    properties:
      createdAt: double
      createdBy: string
      scope: literal<"automation-bypass">
    source:
      openapi: openapi.json
  CreateProjectResponseTrustedIpsAddressesDeploymentType:
    enum:
      - production
      - preview
      - all
      - prod_deployment_urls_and_all_previews
    source:
      openapi: openapi.json
  CreateProjectResponseTrustedIpsAddressesAddressesItem:
    properties:
      value: string
      note: optional<string>
    source:
      openapi: openapi.json
  CreateProjectResponseTrustedIpsAddressesProtectionMode:
    enum:
      - additional
      - exclusive
    source:
      openapi: openapi.json
  CreateProjectResponseTrustedIpsAddresses:
    properties:
      deploymentType: CreateProjectResponseTrustedIpsAddressesDeploymentType
      addresses: list<CreateProjectResponseTrustedIpsAddressesAddressesItem>
      protectionMode: CreateProjectResponseTrustedIpsAddressesProtectionMode
    source:
      openapi: openapi.json
  CreateProjectResponseTrustedIpsOneDeploymentType:
    enum:
      - production
      - preview
      - all
      - prod_deployment_urls_and_all_previews
    source:
      openapi: openapi.json
  CreateProjectResponseTrustedIpsOne:
    properties:
      deploymentType: CreateProjectResponseTrustedIpsOneDeploymentType
    source:
      openapi: openapi.json
  CreateProjectResponseTrustedIps:
    discriminated: false
    union:
      - CreateProjectResponseTrustedIpsAddresses
      - CreateProjectResponseTrustedIpsOne
    source:
      openapi: openapi.json
  CreateProjectResponseGitComments:
    properties:
      onPullRequest:
        type: boolean
        docs: Whether the Vercel bot should comment on PRs
      onCommit:
        type: boolean
        docs: Whether the Vercel bot should comment on commits
    source:
      openapi: openapi.json
  CreateProjectResponseWebAnalytics:
    properties:
      id: string
      disabledAt: optional<double>
      canceledAt: optional<double>
      enabledAt: optional<double>
      hasData: optional<boolean>
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItemSrcEq:
    properties:
      re: optional<string>
      eq: optional<string>
      neq: optional<string>
      inc: optional<list<string>>
      ninc: optional<list<string>>
      pre: optional<string>
      suf: optional<string>
      gt: optional<double>
      gte: optional<double>
      lt: optional<double>
      lte: optional<double>
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItemSrc:
    discriminated: false
    union:
      - string
      - CreateProjectResponseSecurityFirewallRoutesItemSrcEq
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItemHasItemType:
    enum:
      - path
      - host
      - method
      - header
      - cookie
      - query
      - ip_address
      - protocol
      - scheme
      - environment
      - region
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItemHasItemValueEq:
    properties:
      re: optional<string>
      eq: optional<string>
      neq: optional<string>
      inc: optional<list<string>>
      ninc: optional<list<string>>
      pre: optional<string>
      suf: optional<string>
      gt: optional<double>
      gte: optional<double>
      lt: optional<double>
      lte: optional<double>
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItemHasItemValue:
    discriminated: false
    union:
      - string
      - CreateProjectResponseSecurityFirewallRoutesItemHasItemValueEq
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItemHasItem:
    properties:
      type: CreateProjectResponseSecurityFirewallRoutesItemHasItemType
      key: optional<string>
      value: optional<CreateProjectResponseSecurityFirewallRoutesItemHasItemValue>
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItemMissingItemType:
    enum:
      - path
      - host
      - method
      - header
      - cookie
      - query
      - ip_address
      - protocol
      - scheme
      - environment
      - region
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItemMissingItemValueEq:
    properties:
      re: optional<string>
      eq: optional<string>
      neq: optional<string>
      inc: optional<list<string>>
      ninc: optional<list<string>>
      pre: optional<string>
      suf: optional<string>
      gt: optional<double>
      gte: optional<double>
      lt: optional<double>
      lte: optional<double>
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItemMissingItemValue:
    discriminated: false
    union:
      - string
      - CreateProjectResponseSecurityFirewallRoutesItemMissingItemValueEq
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItemMissingItem:
    properties:
      type: CreateProjectResponseSecurityFirewallRoutesItemMissingItemType
      key: optional<string>
      value: >-
        optional<CreateProjectResponseSecurityFirewallRoutesItemMissingItemValue>
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItemHandle:
    enum:
      - init
      - finalize
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItemMitigateAction:
    enum:
      - deny
      - challenge
      - log
      - bypass
      - rate_limit
      - redirect
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItemMitigateErlAlgo:
    enum:
      - fixed_window
      - token_bucket
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItemMitigateErl:
    properties:
      algo: CreateProjectResponseSecurityFirewallRoutesItemMitigateErlAlgo
      window: double
      limit: double
      keys: list<string>
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItemMitigate:
    properties:
      action: CreateProjectResponseSecurityFirewallRoutesItemMitigateAction
      rule_id: string
      ttl: optional<double>
      erl: optional<CreateProjectResponseSecurityFirewallRoutesItemMitigateErl>
    source:
      openapi: openapi.json
  CreateProjectResponseSecurityFirewallRoutesItem:
    properties:
      src: optional<CreateProjectResponseSecurityFirewallRoutesItemSrc>
      has: optional<list<CreateProjectResponseSecurityFirewallRoutesItemHasItem>>
      missing: >-
        optional<list<CreateProjectResponseSecurityFirewallRoutesItemMissingItem>>
      dest: optional<string>
      status: optional<double>
      handle: optional<CreateProjectResponseSecurityFirewallRoutesItemHandle>
      mitigate: optional<CreateProjectResponseSecurityFirewallRoutesItemMitigate>
    source:
      openapi: openapi.json
  CreateProjectResponseSecurity:
    properties:
      attackModeEnabled: optional<boolean>
      attackModeUpdatedAt: optional<double>
      firewallEnabled: optional<boolean>
      firewallUpdatedAt: optional<double>
      attackModeActiveUntil: optional<double>
      firewallConfigVersion: optional<double>
      firewallRoutes: optional<list<CreateProjectResponseSecurityFirewallRoutesItem>>
      firewallSeawallEnabled: optional<boolean>
      ja3Enabled: optional<boolean>
      ja4Enabled: optional<boolean>
    source:
      openapi: openapi.json
  CreateProjectResponseOidcTokenConfig:
    properties:
      enabled: boolean
    source:
      openapi: openapi.json
  CreateProjectResponseTier:
    enum:
      - standard
      - advanced
      - critical
    source:
      openapi: openapi.json
  CreateProjectResponse:
    properties:
      accountId: string
      analytics: optional<CreateProjectResponseAnalytics>
      speedInsights: optional<CreateProjectResponseSpeedInsights>
      autoExposeSystemEnvs: optional<boolean>
      autoAssignCustomDomains: optional<boolean>
      autoAssignCustomDomainsUpdatedBy: optional<string>
      buildCommand: optional<string>
      commandForIgnoringBuildStep: optional<string>
      connectConfigurationId: optional<string>
      connectBuildsEnabled: optional<boolean>
      createdAt: optional<double>
      customerSupportCodeVisibility: optional<boolean>
      crons: optional<CreateProjectResponseCrons>
      dataCache: optional<CreateProjectResponseDataCache>
      deploymentExpiration: optional<CreateProjectResponseDeploymentExpiration>
      devCommand: optional<string>
      directoryListing: boolean
      installCommand: optional<string>
      env: optional<list<CreateProjectResponseEnvItem>>
      customEnvironments: optional<list<CreateProjectResponseCustomEnvironmentsItem>>
      framework: optional<CreateProjectResponseFramework>
      gitForkProtection: optional<boolean>
      gitLFS: optional<boolean>
      id: string
      latestDeployments: optional<list<CreateProjectResponseLatestDeploymentsItem>>
      link: optional<CreateProjectResponseLink>
      name: string
      nodeVersion: CreateProjectResponseNodeVersion
      optionsAllowlist: optional<CreateProjectResponseOptionsAllowlist>
      outputDirectory: optional<string>
      passiveConnectConfigurationId: optional<string>
      passwordProtection: optional<map<string, unknown>>
      productionDeploymentsFastLane: optional<boolean>
      publicSource: optional<boolean>
      resourceConfig: optional<CreateProjectResponseResourceConfig>
      rootDirectory: optional<string>
      serverlessFunctionRegion: optional<string>
      serverlessFunctionZeroConfigFailover: optional<boolean>
      skewProtectionBoundaryAt: optional<double>
      skewProtectionMaxAge: optional<double>
      skipGitConnectDuringLink: optional<boolean>
      sourceFilesOutsideRootDirectory: optional<boolean>
      enableAffectedProjectsDeployments: optional<boolean>
      ssoProtection: optional<CreateProjectResponseSsoProtection>
      targets: optional<map<string, optional<CreateProjectResponseTargetsValue>>>
      transferCompletedAt: optional<double>
      transferStartedAt: optional<double>
      transferToAccountId: optional<string>
      transferredFromAccountId: optional<string>
      updatedAt: optional<double>
      live: optional<boolean>
      enablePreviewFeedback: optional<boolean>
      enableProductionFeedback: optional<boolean>
      permissions: optional<CreateProjectResponsePermissions>
      lastRollbackTarget: optional<map<string, unknown>>
      lastAliasRequest: optional<CreateProjectResponseLastAliasRequest>
      hasFloatingAliases: optional<boolean>
      protectionBypass: optional<map<string, CreateProjectResponseProtectionBypassValue>>
      hasActiveBranches: optional<boolean>
      trustedIps: optional<CreateProjectResponseTrustedIps>
      gitComments: optional<CreateProjectResponseGitComments>
      paused: optional<boolean>
      concurrencyBucketName: optional<string>
      webAnalytics: optional<CreateProjectResponseWebAnalytics>
      security: optional<CreateProjectResponseSecurity>
      oidcTokenConfig: optional<CreateProjectResponseOidcTokenConfig>
      tier: optional<CreateProjectResponseTier>
    source:
      openapi: openapi.json
  GetProjectRequestIdOrName:
    discriminated: false
    docs: The unique project identifier or the project name
    union:
      - string
      - boolean
    source:
      openapi: openapi.json
  GetProjectResponseAnalytics:
    properties:
      id: string
      canceledAt: optional<double>
      disabledAt: double
      enabledAt: double
      paidAt: optional<double>
      sampleRatePercent: optional<double>
      spendLimitInDollars: optional<double>
    source:
      openapi: openapi.json
  GetProjectResponseSpeedInsights:
    properties:
      id: string
      enabledAt: optional<double>
      disabledAt: optional<double>
      canceledAt: optional<double>
      hasData: optional<boolean>
      paidAt: optional<double>
    source:
      openapi: openapi.json
  GetProjectResponseCronsDefinitionsItem:
    properties:
      host:
        type: string
        docs: The hostname that should be used.
      path:
        type: string
        docs: The path that should be called for the cronjob.
      schedule:
        type: string
        docs: The cron expression.
    source:
      openapi: openapi.json
  GetProjectResponseCrons:
    properties:
      enabledAt:
        type: double
        docs: >-
          The time the feature was enabled for this project. Note: It enables
          automatically with the first Deployment that outputs cronjobs.
      disabledAt:
        type: optional<double>
        docs: The time the feature was disabled for this project.
      updatedAt: double
      deploymentId:
        type: optional<string>
        docs: The ID of the Deployment from which the definitions originated.
      definitions: list<GetProjectResponseCronsDefinitionsItem>
    source:
      openapi: openapi.json
  GetProjectResponseDataCache:
    properties:
      userDisabled: boolean
      storageSizeBytes: optional<double>
      unlimited: optional<boolean>
    source:
      openapi: openapi.json
  GetProjectResponseDeploymentExpiration:
    properties:
      expirationDays: optional<double>
      expirationDaysProduction: optional<double>
      expirationDaysCanceled: optional<double>
      expirationDaysErrored: optional<double>
      deploymentsToKeep: optional<double>
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemTarget:
    discriminated: false
    union:
      - list<GetProjectResponseEnvItemTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: GetProjectResponseEnvItemContentHintRedisUrl
      redis-rest-api-url: GetProjectResponseEnvItemContentHintRedisRestApiUrl
      redis-rest-api-token: GetProjectResponseEnvItemContentHintRedisRestApiToken
      redis-rest-api-read-only-token: GetProjectResponseEnvItemContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: GetProjectResponseEnvItemContentHintBlobReadWriteToken
      postgres-url: GetProjectResponseEnvItemContentHintPostgresUrl
      postgres-url-non-pooling: GetProjectResponseEnvItemContentHintPostgresUrlNonPooling
      postgres-prisma-url: GetProjectResponseEnvItemContentHintPostgresPrismaUrl
      postgres-user: GetProjectResponseEnvItemContentHintPostgresUser
      postgres-host: GetProjectResponseEnvItemContentHintPostgresHost
      postgres-password: GetProjectResponseEnvItemContentHintPostgresPassword
      postgres-database: GetProjectResponseEnvItemContentHintPostgresDatabase
      postgres-url-no-ssl: GetProjectResponseEnvItemContentHintPostgresUrlNoSsl
      integration-store-secret: GetProjectResponseEnvItemContentHintIntegrationStoreSecret
      flags-connection-string: GetProjectResponseEnvItemContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  GetProjectResponseEnvItemInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  GetProjectResponseEnvItem:
    properties:
      target: optional<GetProjectResponseEnvItemTarget>
      type: GetProjectResponseEnvItemType
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: string
      value: string
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<GetProjectResponseEnvItemContentHint>
      internalContentHint:
        type: optional<GetProjectResponseEnvItemInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
      vsmValue: optional<string>
    source:
      openapi: openapi.json
  GetProjectResponseCustomEnvironmentsItemType:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  GetProjectResponseCustomEnvironmentsItemBranchMatcherType:
    enum:
      - endsWith
      - startsWith
      - equals
    source:
      openapi: openapi.json
  GetProjectResponseCustomEnvironmentsItemBranchMatcher:
    properties:
      type: GetProjectResponseCustomEnvironmentsItemBranchMatcherType
      pattern: string
    source:
      openapi: openapi.json
  GetProjectResponseCustomEnvironmentsItemDomainsItemVerificationItem:
    docs: >-
      A list of verification challenges, one of which must be completed to
      verify the domain for use on the project. After the challenge is complete
      `POST /projects/:idOrName/domains/:domain/verify` to verify the domain.
      Possible challenges: - If `verification.type = TXT` the
      `verification.domain` will be checked for a TXT record matching
      `verification.value`.
    properties:
      type: string
      domain: string
      value: string
      reason: string
    source:
      openapi: openapi.json
  GetProjectResponseCustomEnvironmentsItemDomainsItem:
    properties:
      name: string
      apexName: string
      projectId: string
      redirect: optional<string>
      redirectStatusCode: optional<double>
      gitBranch: optional<string>
      customEnvironmentId: optional<string>
      updatedAt: optional<double>
      createdAt: optional<double>
      verified:
        type: boolean
        docs: >-
          `true` if the domain is verified for use with the project. If `false`
          it will not be used as an alias on this project until the challenge in
          `verification` is completed.
      verification:
        type: >-
          optional<list<GetProjectResponseCustomEnvironmentsItemDomainsItemVerificationItem>>
        docs: >-
          A list of verification challenges, one of which must be completed to
          verify the domain for use on the project. After the challenge is
          complete `POST /projects/:idOrName/domains/:domain/verify` to verify
          the domain. Possible challenges: - If `verification.type = TXT` the
          `verification.domain` will be checked for a TXT record matching
          `verification.value`.
    source:
      openapi: openapi.json
  GetProjectResponseCustomEnvironmentsItem:
    properties:
      id: string
      name: string
      slug: string
      type: GetProjectResponseCustomEnvironmentsItemType
      description: optional<string>
      branchMatcher: optional<GetProjectResponseCustomEnvironmentsItemBranchMatcher>
      createdAt: double
      updatedAt: double
      domains: optional<list<GetProjectResponseCustomEnvironmentsItemDomainsItem>>
      currentDeploymentAliases: optional<list<string>>
    source:
      openapi: openapi.json
  GetProjectResponseFramework:
    enum:
      - blitzjs
      - nextjs
      - gatsby
      - remix
      - astro
      - hexo
      - eleventy
      - value: docusaurus-2
        name: Docusaurus2
      - docusaurus
      - preact
      - value: solidstart-1
        name: Solidstart1
      - solidstart
      - dojo
      - ember
      - vue
      - scully
      - value: ionic-angular
        name: IonicAngular
      - angular
      - polymer
      - svelte
      - sveltekit
      - value: sveltekit-1
        name: Sveltekit1
      - value: ionic-react
        name: IonicReact
      - value: create-react-app
        name: CreateReactApp
      - gridsome
      - umijs
      - sapper
      - saber
      - stencil
      - nuxtjs
      - redwoodjs
      - hugo
      - jekyll
      - brunch
      - middleman
      - zola
      - hydrogen
      - vite
      - vitepress
      - vuepress
      - parcel
      - fasthtml
      - value: sanity-v3
        name: SanityV3
      - sanity
      - storybook
    source:
      openapi: openapi.json
  GetProjectResponseLatestDeploymentsItemAliasAssigned:
    discriminated: false
    union:
      - double
      - boolean
    source:
      openapi: openapi.json
  GetProjectResponseLatestDeploymentsItemAliasError:
    properties:
      code: string
      message: string
    source:
      openapi: openapi.json
  GetProjectResponseLatestDeploymentsItemBuildsItem:
    properties:
      use: string
      src: optional<string>
      dest: optional<string>
    source:
      openapi: openapi.json
  GetProjectResponseLatestDeploymentsItemChecksConclusion:
    enum:
      - succeeded
      - failed
      - skipped
      - canceled
    source:
      openapi: openapi.json
  GetProjectResponseLatestDeploymentsItemChecksState:
    enum:
      - registered
      - running
      - completed
    source:
      openapi: openapi.json
  GetProjectResponseLatestDeploymentsItemCreator:
    properties:
      email: string
      githubLogin: optional<string>
      gitlabLogin: optional<string>
      uid: string
      username: string
    source:
      openapi: openapi.json
  GetProjectResponseLatestDeploymentsItemOidcTokenClaims:
    properties:
      sub: string
      scope: string
      aud: string
      owner: string
      owner_id: string
      project: string
      project_id: string
      environment: string
    source:
      openapi: openapi.json
  GetProjectResponseLatestDeploymentsItemPlan:
    enum:
      - pro
      - enterprise
      - hobby
    source:
      openapi: openapi.json
  GetProjectResponseLatestDeploymentsItemReadyState:
    enum:
      - BUILDING
      - ERROR
      - INITIALIZING
      - QUEUED
      - READY
      - CANCELED
    source:
      openapi: openapi.json
  GetProjectResponseLatestDeploymentsItemReadySubstate:
    enum:
      - STAGED
      - PROMOTED
    source:
      openapi: openapi.json
  GetProjectResponseLatestDeploymentsItem:
    properties:
      id: string
      alias: optional<list<string>>
      aliasAssigned: optional<GetProjectResponseLatestDeploymentsItemAliasAssigned>
      aliasError: optional<GetProjectResponseLatestDeploymentsItemAliasError>
      aliasFinal: optional<string>
      automaticAliases: optional<list<string>>
      buildingAt: optional<double>
      builds: optional<list<GetProjectResponseLatestDeploymentsItemBuildsItem>>
      checksConclusion: optional<GetProjectResponseLatestDeploymentsItemChecksConclusion>
      checksState: optional<GetProjectResponseLatestDeploymentsItemChecksState>
      connectBuildsEnabled: optional<boolean>
      connectConfigurationId: optional<string>
      createdAt: double
      createdIn: string
      creator: optional<GetProjectResponseLatestDeploymentsItemCreator>
      deletedAt: optional<double>
      deploymentHostname: string
      forced: optional<boolean>
      name: string
      meta: optional<map<string, string>>
      monorepoManager: optional<string>
      oidcTokenClaims: optional<GetProjectResponseLatestDeploymentsItemOidcTokenClaims>
      plan: GetProjectResponseLatestDeploymentsItemPlan
      previewCommentsEnabled:
        type: optional<boolean>
        docs: Whether or not preview comments are enabled for the deployment
      private: boolean
      readyAt: optional<double>
      readyState: GetProjectResponseLatestDeploymentsItemReadyState
      readySubstate: optional<GetProjectResponseLatestDeploymentsItemReadySubstate>
      requestedAt: optional<double>
      target: optional<string>
      teamId: optional<string>
      type: literal<"LAMBDAS">
      url: string
      userId: string
      withCache: optional<boolean>
    source:
      openapi: openapi.json
  GetProjectResponseLinkGithubDeployHooksItem:
    properties:
      createdAt: optional<double>
      id: string
      name: string
      ref: string
      url: string
    source:
      openapi: openapi.json
  GetProjectResponseLinkGithub:
    properties:
      org: optional<string>
      repoOwnerId:
        type: optional<double>
        docs: >-
          A new field, should be included in all new project links, is being
          added just in time when a deployment is created. This is needed for
          Protected Git scopes.
      repo: optional<string>
      repoId: optional<double>
      createdAt: optional<double>
      deployHooks: list<GetProjectResponseLinkGithubDeployHooksItem>
      gitCredentialId: optional<string>
      updatedAt: optional<double>
      sourceless: optional<boolean>
      productionBranch: optional<string>
    source:
      openapi: openapi.json
  GetProjectResponseLinkGitlabDeployHooksItem:
    properties:
      createdAt: optional<double>
      id: string
      name: string
      ref: string
      url: string
    source:
      openapi: openapi.json
  GetProjectResponseLinkGitlab:
    properties:
      projectId: optional<string>
      projectName: optional<string>
      projectNameWithNamespace: optional<string>
      projectNamespace: optional<string>
      projectOwnerId:
        type: optional<double>
        docs: >-
          A new field, should be included in all new project links, is being
          added just in time when a deployment is created. This is needed for
          Protected Git scopes. This is the id of the top level group that a
          namespace belongs to. Gitlab supports group nesting (up to 20 levels).
      projectUrl: optional<string>
      createdAt: optional<double>
      deployHooks: list<GetProjectResponseLinkGitlabDeployHooksItem>
      gitCredentialId: optional<string>
      updatedAt: optional<double>
      sourceless: optional<boolean>
      productionBranch: optional<string>
    source:
      openapi: openapi.json
  GetProjectResponseLinkBitbucketDeployHooksItem:
    properties:
      createdAt: optional<double>
      id: string
      name: string
      ref: string
      url: string
    source:
      openapi: openapi.json
  GetProjectResponseLinkBitbucket:
    properties:
      name: optional<string>
      slug: optional<string>
      owner: optional<string>
      uuid: optional<string>
      workspaceUuid: optional<string>
      createdAt: optional<double>
      deployHooks: list<GetProjectResponseLinkBitbucketDeployHooksItem>
      gitCredentialId: optional<string>
      updatedAt: optional<double>
      sourceless: optional<boolean>
      productionBranch: optional<string>
    source:
      openapi: openapi.json
  GetProjectResponseLink:
    discriminant: type
    base-properties: {}
    union:
      github: GetProjectResponseLinkGithub
      gitlab: GetProjectResponseLinkGitlab
      bitbucket: GetProjectResponseLinkBitbucket
    source:
      openapi: openapi.json
  GetProjectResponseNodeVersion:
    enum:
      - value: 20.x
        name: TwentyX
      - value: 18.x
        name: EighteenX
      - value: 16.x
        name: SixteenX
      - value: 14.x
        name: FourteenX
      - value: 12.x
        name: TwelveX
      - value: 10.x
        name: TenX
      - value: 8.10.x
        name: Eight10X
    source:
      openapi: openapi.json
  GetProjectResponseOptionsAllowlistPathsItem:
    properties:
      value: string
    source:
      openapi: openapi.json
  GetProjectResponseOptionsAllowlist:
    properties:
      paths: list<GetProjectResponseOptionsAllowlistPathsItem>
    source:
      openapi: openapi.json
  GetProjectResponseResourceConfigFunctionDefaultMemoryType:
    enum:
      - standard_legacy
      - standard
      - performance
    source:
      openapi: openapi.json
  GetProjectResponseResourceConfig:
    properties:
      functionDefaultTimeout: optional<double>
      functionDefaultMemoryType: optional<GetProjectResponseResourceConfigFunctionDefaultMemoryType>
    source:
      openapi: openapi.json
  GetProjectResponseSsoProtectionDeploymentType:
    enum:
      - preview
      - all
      - prod_deployment_urls_and_all_previews
    source:
      openapi: openapi.json
  GetProjectResponseSsoProtection:
    properties:
      deploymentType: GetProjectResponseSsoProtectionDeploymentType
    source:
      openapi: openapi.json
  GetProjectResponseTargetsValueAliasAssigned:
    discriminated: false
    union:
      - double
      - boolean
    source:
      openapi: openapi.json
  GetProjectResponseTargetsValueAliasError:
    properties:
      code: string
      message: string
    source:
      openapi: openapi.json
  GetProjectResponseTargetsValueBuildsItem:
    properties:
      use: string
      src: optional<string>
      dest: optional<string>
    source:
      openapi: openapi.json
  GetProjectResponseTargetsValueChecksConclusion:
    enum:
      - succeeded
      - failed
      - skipped
      - canceled
    source:
      openapi: openapi.json
  GetProjectResponseTargetsValueChecksState:
    enum:
      - registered
      - running
      - completed
    source:
      openapi: openapi.json
  GetProjectResponseTargetsValueCreator:
    properties:
      email: string
      githubLogin: optional<string>
      gitlabLogin: optional<string>
      uid: string
      username: string
    source:
      openapi: openapi.json
  GetProjectResponseTargetsValueOidcTokenClaims:
    properties:
      sub: string
      scope: string
      aud: string
      owner: string
      owner_id: string
      project: string
      project_id: string
      environment: string
    source:
      openapi: openapi.json
  GetProjectResponseTargetsValuePlan:
    enum:
      - pro
      - enterprise
      - hobby
    source:
      openapi: openapi.json
  GetProjectResponseTargetsValueReadyState:
    enum:
      - BUILDING
      - ERROR
      - INITIALIZING
      - QUEUED
      - READY
      - CANCELED
    source:
      openapi: openapi.json
  GetProjectResponseTargetsValueReadySubstate:
    enum:
      - STAGED
      - PROMOTED
    source:
      openapi: openapi.json
  GetProjectResponseTargetsValue:
    properties:
      id: string
      alias: optional<list<string>>
      aliasAssigned: optional<GetProjectResponseTargetsValueAliasAssigned>
      aliasError: optional<GetProjectResponseTargetsValueAliasError>
      aliasFinal: optional<string>
      automaticAliases: optional<list<string>>
      buildingAt: optional<double>
      builds: optional<list<GetProjectResponseTargetsValueBuildsItem>>
      checksConclusion: optional<GetProjectResponseTargetsValueChecksConclusion>
      checksState: optional<GetProjectResponseTargetsValueChecksState>
      connectBuildsEnabled: optional<boolean>
      connectConfigurationId: optional<string>
      createdAt: double
      createdIn: string
      creator: optional<GetProjectResponseTargetsValueCreator>
      deletedAt: optional<double>
      deploymentHostname: string
      forced: optional<boolean>
      name: string
      meta: optional<map<string, string>>
      monorepoManager: optional<string>
      oidcTokenClaims: optional<GetProjectResponseTargetsValueOidcTokenClaims>
      plan: GetProjectResponseTargetsValuePlan
      previewCommentsEnabled:
        type: optional<boolean>
        docs: Whether or not preview comments are enabled for the deployment
      private: boolean
      readyAt: optional<double>
      readyState: GetProjectResponseTargetsValueReadyState
      readySubstate: optional<GetProjectResponseTargetsValueReadySubstate>
      requestedAt: optional<double>
      target: optional<string>
      teamId: optional<string>
      type: literal<"LAMBDAS">
      url: string
      userId: string
      withCache: optional<boolean>
    source:
      openapi: openapi.json
  GetProjectResponsePermissions:
    properties:
      accessGroup: optional<list<root.AclAction>>
      aliasGlobal: optional<list<root.AclAction>>
      analyticsSampling: optional<list<root.AclAction>>
      analyticsUsage: optional<list<root.AclAction>>
      auditLog: optional<list<root.AclAction>>
      billingAddress: optional<list<root.AclAction>>
      billingInformation: optional<list<root.AclAction>>
      billingInvoice: optional<list<root.AclAction>>
      billingInvoiceEmailRecipient: optional<list<root.AclAction>>
      billingInvoiceLanguage: optional<list<root.AclAction>>
      billingPlan: optional<list<root.AclAction>>
      billingPurchaseOrder: optional<list<root.AclAction>>
      billingTaxId: optional<list<root.AclAction>>
      blob: optional<list<root.AclAction>>
      budget: optional<list<root.AclAction>>
      cacheArtifact: optional<list<root.AclAction>>
      cacheArtifactUsageEvent: optional<list<root.AclAction>>
      codeChecks: optional<list<root.AclAction>>
      concurrentBuilds: optional<list<root.AclAction>>
      connect: optional<list<root.AclAction>>
      connectConfiguration: optional<list<root.AclAction>>
      domain: optional<list<root.AclAction>>
      domainAcceptDelegation: optional<list<root.AclAction>>
      domainAuthCodes: optional<list<root.AclAction>>
      domainCertificate: optional<list<root.AclAction>>
      domainCheckConfig: optional<list<root.AclAction>>
      domainMove: optional<list<root.AclAction>>
      domainPurchase: optional<list<root.AclAction>>
      domainRecord: optional<list<root.AclAction>>
      domainTransferIn: optional<list<root.AclAction>>
      event: optional<list<root.AclAction>>
      ownEvent: optional<list<root.AclAction>>
      sensitiveEnvironmentVariablePolicy: optional<list<root.AclAction>>
      fileUpload: optional<list<root.AclAction>>
      gitRepository: optional<list<root.AclAction>>
      ipBlocking: optional<list<root.AclAction>>
      integration: optional<list<root.AclAction>>
      integrationAccount: optional<list<root.AclAction>>
      integrationConfiguration: optional<list<root.AclAction>>
      integrationConfigurationTransfer: optional<list<root.AclAction>>
      integrationConfigurationProjects: optional<list<root.AclAction>>
      integrationVercelConfigurationOverride: optional<list<root.AclAction>>
      integrationConfigurationRole: optional<list<root.AclAction>>
      integrationResource: optional<list<root.AclAction>>
      integrationEvent: optional<list<root.AclAction>>
      integrationResourceSecrets: optional<list<root.AclAction>>
      marketplaceInstallationMember: optional<list<root.AclAction>>
      marketplaceBillingData: optional<list<root.AclAction>>
      marketplaceInvoice: optional<list<root.AclAction>>
      jobGlobal: optional<list<root.AclAction>>
      logDrain: optional<list<root.AclAction>>
      Monitoring: optional<list<root.AclAction>>
      monitoringSettings: optional<list<root.AclAction>>
      monitoringQuery: optional<list<root.AclAction>>
      monitoringChart: optional<list<root.AclAction>>
      monitoringAlert: optional<list<root.AclAction>>
      notificationDeploymentFailed: optional<list<root.AclAction>>
      notificationDomainConfiguration: optional<list<root.AclAction>>
      notificationDomainExpire: optional<list<root.AclAction>>
      notificationDomainMoved: optional<list<root.AclAction>>
      notificationDomainPurchase: optional<list<root.AclAction>>
      notificationDomainRenewal: optional<list<root.AclAction>>
      notificationDomainTransfer: optional<list<root.AclAction>>
      notificationDomainUnverified: optional<list<root.AclAction>>
      NotificationMonitoringAlert: optional<list<root.AclAction>>
      notificationPaymentFailed: optional<list<root.AclAction>>
      notificationUsageAlert: optional<list<root.AclAction>>
      notificationCustomerBudget: optional<list<root.AclAction>>
      notificationStatementOfReasons: optional<list<root.AclAction>>
      oauth2Connection: optional<list<root.AclAction>>
      openTelemetryEndpoint: optional<list<root.AclAction>>
      paymentMethod: optional<list<root.AclAction>>
      permissions: optional<list<root.AclAction>>
      postgres: optional<list<root.AclAction>>
      previewDeploymentSuffix: optional<list<root.AclAction>>
      proTrialOnboarding: optional<list<root.AclAction>>
      sharedEnvVars: optional<list<root.AclAction>>
      sharedEnvVarsProduction: optional<list<root.AclAction>>
      space: optional<list<root.AclAction>>
      spaceRun: optional<list<root.AclAction>>
      passwordProtectionInvoiceItem: optional<list<root.AclAction>>
      rateLimit: optional<list<root.AclAction>>
      redis: optional<list<root.AclAction>>
      repository: optional<list<root.AclAction>>
      remoteCaching: optional<list<root.AclAction>>
      samlConfig: optional<list<root.AclAction>>
      secret: optional<list<root.AclAction>>
      redisStoreTokenSet: optional<list<root.AclAction>>
      blobStoreTokenSet: optional<list<root.AclAction>>
      postgresStoreTokenSet: optional<list<root.AclAction>>
      integrationStoreTokenSet: optional<list<root.AclAction>>
      integrationResourceReplCommand: optional<list<root.AclAction>>
      storeTransfer: optional<list<root.AclAction>>
      supportCase: optional<list<root.AclAction>>
      supportCaseComment: optional<list<root.AclAction>>
      dataCacheBillingSettings: optional<list<root.AclAction>>
      team: optional<list<root.AclAction>>
      teamAccessRequest: optional<list<root.AclAction>>
      teamFellowMembership: optional<list<root.AclAction>>
      teamGitExclusivity: optional<list<root.AclAction>>
      teamInvite: optional<list<root.AclAction>>
      teamInviteCode: optional<list<root.AclAction>>
      teamJoin: optional<list<root.AclAction>>
      teamOwnMembership: optional<list<root.AclAction>>
      teamOwnMembershipDisconnectSAML: optional<list<root.AclAction>>
      token: optional<list<root.AclAction>>
      usage: optional<list<root.AclAction>>
      usageCycle: optional<list<root.AclAction>>
      user: optional<list<root.AclAction>>
      userConnection: optional<list<root.AclAction>>
      vpcPeeringConnection: optional<list<root.AclAction>>
      webAnalyticsPlan: optional<list<root.AclAction>>
      webAuthn: optional<list<root.AclAction>>
      edgeConfig: optional<list<root.AclAction>>
      edgeConfigItem: optional<list<root.AclAction>>
      edgeConfigSchema: optional<list<root.AclAction>>
      edgeConfigToken: optional<list<root.AclAction>>
      webhook: optional<list<root.AclAction>>
      webhook-event: optional<list<root.AclAction>>
      endpointVerification: optional<list<root.AclAction>>
      projectTransferIn: optional<list<root.AclAction>>
      oauth2Application: optional<list<root.AclAction>>
      aliasProject: optional<list<root.AclAction>>
      aliasProtectionBypass: optional<list<root.AclAction>>
      productionAliasProtectionBypass: optional<list<root.AclAction>>
      connectConfigurationLink: optional<list<root.AclAction>>
      dataCacheNamespace: optional<list<root.AclAction>>
      deployment: optional<list<root.AclAction>>
      deploymentCheck: optional<list<root.AclAction>>
      deploymentCheckPreview: optional<list<root.AclAction>>
      deploymentCheckReRunFromProductionBranch: optional<list<root.AclAction>>
      deploymentProductionGit: optional<list<root.AclAction>>
      deploymentPreview: optional<list<root.AclAction>>
      deploymentPrivate: optional<list<root.AclAction>>
      deploymentPromote: optional<list<root.AclAction>>
      deploymentRollback: optional<list<root.AclAction>>
      environments: optional<list<root.AclAction>>
      logs: optional<list<root.AclAction>>
      logsPreset: optional<list<root.AclAction>>
      passwordProtection: optional<list<root.AclAction>>
      optionsAllowlist: optional<list<root.AclAction>>
      job: optional<list<root.AclAction>>
      project: optional<list<root.AclAction>>
      projectAccessGroup: optional<list<root.AclAction>>
      projectAnalyticsSampling: optional<list<root.AclAction>>
      projectDeploymentHook: optional<list<root.AclAction>>
      projectDomain: optional<list<root.AclAction>>
      projectDomainMove: optional<list<root.AclAction>>
      projectDomainCheckConfig: optional<list<root.AclAction>>
      projectEnvVars: optional<list<root.AclAction>>
      projectEnvVarsProduction: optional<list<root.AclAction>>
      projectEnvVarsUnownedByIntegration: optional<list<root.AclAction>>
      projectFlags: optional<list<root.AclAction>>
      projectId: optional<list<root.AclAction>>
      projectIntegrationConfiguration: optional<list<root.AclAction>>
      projectLink: optional<list<root.AclAction>>
      projectMember: optional<list<root.AclAction>>
      projectMonitoring: optional<list<root.AclAction>>
      projectPermissions: optional<list<root.AclAction>>
      projectProductionBranch: optional<list<root.AclAction>>
      projectTransfer: optional<list<root.AclAction>>
      projectTransferOut: optional<list<root.AclAction>>
      projectProtectionBypass: optional<list<root.AclAction>>
      projectUsage: optional<list<root.AclAction>>
      projectAnalyticsUsage: optional<list<root.AclAction>>
      projectSupportCase: optional<list<root.AclAction>>
      projectSupportCaseComment: optional<list<root.AclAction>>
      projectDeploymentExpiration: optional<list<root.AclAction>>
      projectTier: optional<list<root.AclAction>>
      seawallConfig: optional<list<root.AclAction>>
      skewProtection: optional<list<root.AclAction>>
      analytics: optional<list<root.AclAction>>
      trustedIps: optional<list<root.AclAction>>
      webAnalytics: optional<list<root.AclAction>>
      sharedEnvVarConnection: optional<list<root.AclAction>>
      sonar: optional<list<root.AclAction>>
    source:
      openapi: openapi.json
  GetProjectResponseLastAliasRequestJobStatus:
    enum:
      - succeeded
      - failed
      - skipped
      - pending
      - value: in-progress
        name: InProgress
    source:
      openapi: openapi.json
  GetProjectResponseLastAliasRequestType:
    enum:
      - promote
      - rollback
    source:
      openapi: openapi.json
  GetProjectResponseLastAliasRequest:
    properties:
      fromDeploymentId: string
      toDeploymentId: string
      jobStatus: GetProjectResponseLastAliasRequestJobStatus
      requestedAt: double
      type: GetProjectResponseLastAliasRequestType
    source:
      openapi: openapi.json
  GetProjectResponseProtectionBypassValue:
    properties:
      createdAt: double
      createdBy: string
      scope: literal<"automation-bypass">
    source:
      openapi: openapi.json
  GetProjectResponseTrustedIpsAddressesDeploymentType:
    enum:
      - production
      - preview
      - all
      - prod_deployment_urls_and_all_previews
    source:
      openapi: openapi.json
  GetProjectResponseTrustedIpsAddressesAddressesItem:
    properties:
      value: string
      note: optional<string>
    source:
      openapi: openapi.json
  GetProjectResponseTrustedIpsAddressesProtectionMode:
    enum:
      - additional
      - exclusive
    source:
      openapi: openapi.json
  GetProjectResponseTrustedIpsAddresses:
    properties:
      deploymentType: GetProjectResponseTrustedIpsAddressesDeploymentType
      addresses: list<GetProjectResponseTrustedIpsAddressesAddressesItem>
      protectionMode: GetProjectResponseTrustedIpsAddressesProtectionMode
    source:
      openapi: openapi.json
  GetProjectResponseTrustedIpsOneDeploymentType:
    enum:
      - production
      - preview
      - all
      - prod_deployment_urls_and_all_previews
    source:
      openapi: openapi.json
  GetProjectResponseTrustedIpsOne:
    properties:
      deploymentType: GetProjectResponseTrustedIpsOneDeploymentType
    source:
      openapi: openapi.json
  GetProjectResponseTrustedIps:
    discriminated: false
    union:
      - GetProjectResponseTrustedIpsAddresses
      - GetProjectResponseTrustedIpsOne
    source:
      openapi: openapi.json
  GetProjectResponseGitComments:
    properties:
      onPullRequest:
        type: boolean
        docs: Whether the Vercel bot should comment on PRs
      onCommit:
        type: boolean
        docs: Whether the Vercel bot should comment on commits
    source:
      openapi: openapi.json
  GetProjectResponseWebAnalytics:
    properties:
      id: string
      disabledAt: optional<double>
      canceledAt: optional<double>
      enabledAt: optional<double>
      hasData: optional<boolean>
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItemSrcEq:
    properties:
      re: optional<string>
      eq: optional<string>
      neq: optional<string>
      inc: optional<list<string>>
      ninc: optional<list<string>>
      pre: optional<string>
      suf: optional<string>
      gt: optional<double>
      gte: optional<double>
      lt: optional<double>
      lte: optional<double>
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItemSrc:
    discriminated: false
    union:
      - string
      - GetProjectResponseSecurityFirewallRoutesItemSrcEq
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItemHasItemType:
    enum:
      - path
      - host
      - method
      - header
      - cookie
      - query
      - ip_address
      - protocol
      - scheme
      - environment
      - region
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItemHasItemValueEq:
    properties:
      re: optional<string>
      eq: optional<string>
      neq: optional<string>
      inc: optional<list<string>>
      ninc: optional<list<string>>
      pre: optional<string>
      suf: optional<string>
      gt: optional<double>
      gte: optional<double>
      lt: optional<double>
      lte: optional<double>
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItemHasItemValue:
    discriminated: false
    union:
      - string
      - GetProjectResponseSecurityFirewallRoutesItemHasItemValueEq
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItemHasItem:
    properties:
      type: GetProjectResponseSecurityFirewallRoutesItemHasItemType
      key: optional<string>
      value: optional<GetProjectResponseSecurityFirewallRoutesItemHasItemValue>
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItemMissingItemType:
    enum:
      - path
      - host
      - method
      - header
      - cookie
      - query
      - ip_address
      - protocol
      - scheme
      - environment
      - region
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItemMissingItemValueEq:
    properties:
      re: optional<string>
      eq: optional<string>
      neq: optional<string>
      inc: optional<list<string>>
      ninc: optional<list<string>>
      pre: optional<string>
      suf: optional<string>
      gt: optional<double>
      gte: optional<double>
      lt: optional<double>
      lte: optional<double>
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItemMissingItemValue:
    discriminated: false
    union:
      - string
      - GetProjectResponseSecurityFirewallRoutesItemMissingItemValueEq
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItemMissingItem:
    properties:
      type: GetProjectResponseSecurityFirewallRoutesItemMissingItemType
      key: optional<string>
      value: optional<GetProjectResponseSecurityFirewallRoutesItemMissingItemValue>
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItemHandle:
    enum:
      - init
      - finalize
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItemMitigateAction:
    enum:
      - deny
      - challenge
      - log
      - bypass
      - rate_limit
      - redirect
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItemMitigateErlAlgo:
    enum:
      - fixed_window
      - token_bucket
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItemMitigateErl:
    properties:
      algo: GetProjectResponseSecurityFirewallRoutesItemMitigateErlAlgo
      window: double
      limit: double
      keys: list<string>
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItemMitigate:
    properties:
      action: GetProjectResponseSecurityFirewallRoutesItemMitigateAction
      rule_id: string
      ttl: optional<double>
      erl: optional<GetProjectResponseSecurityFirewallRoutesItemMitigateErl>
    source:
      openapi: openapi.json
  GetProjectResponseSecurityFirewallRoutesItem:
    properties:
      src: optional<GetProjectResponseSecurityFirewallRoutesItemSrc>
      has: optional<list<GetProjectResponseSecurityFirewallRoutesItemHasItem>>
      missing: optional<list<GetProjectResponseSecurityFirewallRoutesItemMissingItem>>
      dest: optional<string>
      status: optional<double>
      handle: optional<GetProjectResponseSecurityFirewallRoutesItemHandle>
      mitigate: optional<GetProjectResponseSecurityFirewallRoutesItemMitigate>
    source:
      openapi: openapi.json
  GetProjectResponseSecurity:
    properties:
      attackModeEnabled: optional<boolean>
      attackModeUpdatedAt: optional<double>
      firewallEnabled: optional<boolean>
      firewallUpdatedAt: optional<double>
      attackModeActiveUntil: optional<double>
      firewallConfigVersion: optional<double>
      firewallRoutes: optional<list<GetProjectResponseSecurityFirewallRoutesItem>>
      firewallSeawallEnabled: optional<boolean>
      ja3Enabled: optional<boolean>
      ja4Enabled: optional<boolean>
    source:
      openapi: openapi.json
  GetProjectResponseOidcTokenConfig:
    properties:
      enabled: boolean
    source:
      openapi: openapi.json
  GetProjectResponseTier:
    enum:
      - standard
      - advanced
      - critical
    source:
      openapi: openapi.json
  GetProjectResponse:
    properties:
      accountId: string
      analytics: optional<GetProjectResponseAnalytics>
      speedInsights: optional<GetProjectResponseSpeedInsights>
      autoExposeSystemEnvs: optional<boolean>
      autoAssignCustomDomains: optional<boolean>
      autoAssignCustomDomainsUpdatedBy: optional<string>
      buildCommand: optional<string>
      commandForIgnoringBuildStep: optional<string>
      connectConfigurationId: optional<string>
      connectBuildsEnabled: optional<boolean>
      createdAt: optional<double>
      customerSupportCodeVisibility: optional<boolean>
      crons: optional<GetProjectResponseCrons>
      dataCache: optional<GetProjectResponseDataCache>
      deploymentExpiration: optional<GetProjectResponseDeploymentExpiration>
      devCommand: optional<string>
      directoryListing: boolean
      installCommand: optional<string>
      env: optional<list<GetProjectResponseEnvItem>>
      customEnvironments: optional<list<GetProjectResponseCustomEnvironmentsItem>>
      framework: optional<GetProjectResponseFramework>
      gitForkProtection: optional<boolean>
      gitLFS: optional<boolean>
      id: string
      latestDeployments: optional<list<GetProjectResponseLatestDeploymentsItem>>
      link: optional<GetProjectResponseLink>
      name: string
      nodeVersion: GetProjectResponseNodeVersion
      optionsAllowlist: optional<GetProjectResponseOptionsAllowlist>
      outputDirectory: optional<string>
      passiveConnectConfigurationId: optional<string>
      passwordProtection: optional<map<string, unknown>>
      productionDeploymentsFastLane: optional<boolean>
      publicSource: optional<boolean>
      resourceConfig: optional<GetProjectResponseResourceConfig>
      rootDirectory: optional<string>
      serverlessFunctionRegion: optional<string>
      serverlessFunctionZeroConfigFailover: optional<boolean>
      skewProtectionBoundaryAt: optional<double>
      skewProtectionMaxAge: optional<double>
      skipGitConnectDuringLink: optional<boolean>
      sourceFilesOutsideRootDirectory: optional<boolean>
      enableAffectedProjectsDeployments: optional<boolean>
      ssoProtection: optional<GetProjectResponseSsoProtection>
      targets: optional<map<string, optional<GetProjectResponseTargetsValue>>>
      transferCompletedAt: optional<double>
      transferStartedAt: optional<double>
      transferToAccountId: optional<string>
      transferredFromAccountId: optional<string>
      updatedAt: optional<double>
      live: optional<boolean>
      enablePreviewFeedback: optional<boolean>
      enableProductionFeedback: optional<boolean>
      permissions: optional<GetProjectResponsePermissions>
      lastRollbackTarget: optional<map<string, unknown>>
      lastAliasRequest: optional<GetProjectResponseLastAliasRequest>
      hasFloatingAliases: optional<boolean>
      protectionBypass: optional<map<string, GetProjectResponseProtectionBypassValue>>
      hasActiveBranches: optional<boolean>
      trustedIps: optional<GetProjectResponseTrustedIps>
      gitComments: optional<GetProjectResponseGitComments>
      paused: optional<boolean>
      concurrencyBucketName: optional<string>
      webAnalytics: optional<GetProjectResponseWebAnalytics>
      security: optional<GetProjectResponseSecurity>
      oidcTokenConfig: optional<GetProjectResponseOidcTokenConfig>
      tier: optional<GetProjectResponseTier>
    source:
      openapi: openapi.json
  UpdateProjectRequestNodeVersion:
    enum:
      - value: 20.x
        name: TwentyX
      - value: 18.x
        name: EighteenX
      - value: 16.x
        name: SixteenX
      - value: 14.x
        name: FourteenX
      - value: 12.x
        name: TwelveX
      - value: 10.x
        name: TenX
    source:
      openapi: openapi.json
  UpdateProjectRequestOidcTokenConfig:
    docs: OpenID Connect JSON Web Token generation configuration.
    properties:
      enabled:
        type: boolean
        docs: Whether or not to generate OpenID Connect JSON Web Tokens.
    source:
      openapi: openapi.json
  UpdateProjectRequestPasswordProtectionDeploymentType:
    enum:
      - all
      - preview
      - prod_deployment_urls_and_all_previews
    docs: >-
      Specify if the password will apply to every Deployment Target or just
      Preview
    source:
      openapi: openapi.json
  UpdateProjectRequestPasswordProtection:
    docs: Allows to protect project deployments with a password
    properties:
      deploymentType:
        type: UpdateProjectRequestPasswordProtectionDeploymentType
        docs: >-
          Specify if the password will apply to every Deployment Target or just
          Preview
      password:
        type: optional<string>
        docs: The password that will be used to protect Project Deployments
        validation:
          maxLength: 72
    source:
      openapi: openapi.json
  UpdateProjectRequestSsoProtectionDeploymentType:
    enum:
      - all
      - preview
      - prod_deployment_urls_and_all_previews
    docs: >-
      Specify if the Vercel Authentication (SSO Protection) will apply to every
      Deployment Target or just Preview
    default: preview
    source:
      openapi: openapi.json
  UpdateProjectRequestSsoProtection:
    docs: >-
      Ensures visitors to your Preview Deployments are logged into Vercel and
      have a minimum of Viewer access on your team
    properties:
      deploymentType:
        type: UpdateProjectRequestSsoProtectionDeploymentType
        docs: >-
          Specify if the Vercel Authentication (SSO Protection) will apply to
          every Deployment Target or just Preview
        default: preview
    source:
      openapi: openapi.json
  UpdateProjectRequestTrustedIpsDeploymentType:
    enum:
      - all
      - preview
      - production
      - prod_deployment_urls_and_all_previews
    docs: >-
      Specify if the Trusted IPs will apply to every Deployment Target or just
      Preview
    source:
      openapi: openapi.json
  UpdateProjectRequestTrustedIpsAddressesItem:
    properties:
      value:
        type: string
        docs: >-
          The IP addresses that are allowlisted. Supports IPv4 addresses and
          CIDR notations. IPv6 is not supported
      note:
        type: optional<string>
        docs: An optional note explaining what the IP address or subnet is used for
        validation:
          maxLength: 20
    source:
      openapi: openapi.json
  UpdateProjectRequestTrustedIpsProtectionMode:
    enum:
      - exclusive
      - additional
    docs: >-
      exclusive: ip match is enough to bypass deployment protection (regardless
      of other settings). additional: ip must match + any other protection
      should be also provided (password, vercel auth, shareable link, automation
      bypass header, automation bypass query param)
    source:
      openapi: openapi.json
  UpdateProjectRequestTrustedIps:
    docs: Restricts access to deployments based on the incoming request IP address
    properties:
      deploymentType:
        type: UpdateProjectRequestTrustedIpsDeploymentType
        docs: >-
          Specify if the Trusted IPs will apply to every Deployment Target or
          just Preview
      addresses: list<UpdateProjectRequestTrustedIpsAddressesItem>
      protectionMode:
        type: UpdateProjectRequestTrustedIpsProtectionMode
        docs: >-
          exclusive: ip match is enough to bypass deployment protection
          (regardless of other settings). additional: ip must match + any other
          protection should be also provided (password, vercel auth, shareable
          link, automation bypass header, automation bypass query param)
    source:
      openapi: openapi.json
  UpdateProjectRequestOptionsAllowlistPathsItem:
    properties:
      value:
        type: string
        docs: The regex path that should not be protected by Deployment Protection
        validation:
          pattern: ^/.*
    source:
      openapi: openapi.json
  UpdateProjectRequestOptionsAllowlist:
    docs: >-
      Specify a list of paths that should not be protected by Deployment
      Protection to enable Cors preflight requests
    properties:
      paths: list<UpdateProjectRequestOptionsAllowlistPathsItem>
    source:
      openapi: openapi.json
  UpdateProjectResponseAnalytics:
    properties:
      id: string
      canceledAt: optional<double>
      disabledAt: double
      enabledAt: double
      paidAt: optional<double>
      sampleRatePercent: optional<double>
      spendLimitInDollars: optional<double>
    source:
      openapi: openapi.json
  UpdateProjectResponseSpeedInsights:
    properties:
      id: string
      enabledAt: optional<double>
      disabledAt: optional<double>
      canceledAt: optional<double>
      hasData: optional<boolean>
      paidAt: optional<double>
    source:
      openapi: openapi.json
  UpdateProjectResponseCronsDefinitionsItem:
    properties:
      host:
        type: string
        docs: The hostname that should be used.
      path:
        type: string
        docs: The path that should be called for the cronjob.
      schedule:
        type: string
        docs: The cron expression.
    source:
      openapi: openapi.json
  UpdateProjectResponseCrons:
    properties:
      enabledAt:
        type: double
        docs: >-
          The time the feature was enabled for this project. Note: It enables
          automatically with the first Deployment that outputs cronjobs.
      disabledAt:
        type: optional<double>
        docs: The time the feature was disabled for this project.
      updatedAt: double
      deploymentId:
        type: optional<string>
        docs: The ID of the Deployment from which the definitions originated.
      definitions: list<UpdateProjectResponseCronsDefinitionsItem>
    source:
      openapi: openapi.json
  UpdateProjectResponseDataCache:
    properties:
      userDisabled: boolean
      storageSizeBytes: optional<double>
      unlimited: optional<boolean>
    source:
      openapi: openapi.json
  UpdateProjectResponseDeploymentExpiration:
    properties:
      expirationDays: optional<double>
      expirationDaysProduction: optional<double>
      expirationDaysCanceled: optional<double>
      expirationDaysErrored: optional<double>
      deploymentsToKeep: optional<double>
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemTarget:
    discriminated: false
    union:
      - list<UpdateProjectResponseEnvItemTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: UpdateProjectResponseEnvItemContentHintRedisUrl
      redis-rest-api-url: UpdateProjectResponseEnvItemContentHintRedisRestApiUrl
      redis-rest-api-token: UpdateProjectResponseEnvItemContentHintRedisRestApiToken
      redis-rest-api-read-only-token: UpdateProjectResponseEnvItemContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: UpdateProjectResponseEnvItemContentHintBlobReadWriteToken
      postgres-url: UpdateProjectResponseEnvItemContentHintPostgresUrl
      postgres-url-non-pooling: UpdateProjectResponseEnvItemContentHintPostgresUrlNonPooling
      postgres-prisma-url: UpdateProjectResponseEnvItemContentHintPostgresPrismaUrl
      postgres-user: UpdateProjectResponseEnvItemContentHintPostgresUser
      postgres-host: UpdateProjectResponseEnvItemContentHintPostgresHost
      postgres-password: UpdateProjectResponseEnvItemContentHintPostgresPassword
      postgres-database: UpdateProjectResponseEnvItemContentHintPostgresDatabase
      postgres-url-no-ssl: UpdateProjectResponseEnvItemContentHintPostgresUrlNoSsl
      integration-store-secret: UpdateProjectResponseEnvItemContentHintIntegrationStoreSecret
      flags-connection-string: UpdateProjectResponseEnvItemContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItemInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  UpdateProjectResponseEnvItem:
    properties:
      target: optional<UpdateProjectResponseEnvItemTarget>
      type: UpdateProjectResponseEnvItemType
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: string
      value: string
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<UpdateProjectResponseEnvItemContentHint>
      internalContentHint:
        type: optional<UpdateProjectResponseEnvItemInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
      vsmValue: optional<string>
    source:
      openapi: openapi.json
  UpdateProjectResponseCustomEnvironmentsItemType:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  UpdateProjectResponseCustomEnvironmentsItemBranchMatcherType:
    enum:
      - endsWith
      - startsWith
      - equals
    source:
      openapi: openapi.json
  UpdateProjectResponseCustomEnvironmentsItemBranchMatcher:
    properties:
      type: UpdateProjectResponseCustomEnvironmentsItemBranchMatcherType
      pattern: string
    source:
      openapi: openapi.json
  UpdateProjectResponseCustomEnvironmentsItemDomainsItemVerificationItem:
    docs: >-
      A list of verification challenges, one of which must be completed to
      verify the domain for use on the project. After the challenge is complete
      `POST /projects/:idOrName/domains/:domain/verify` to verify the domain.
      Possible challenges: - If `verification.type = TXT` the
      `verification.domain` will be checked for a TXT record matching
      `verification.value`.
    properties:
      type: string
      domain: string
      value: string
      reason: string
    source:
      openapi: openapi.json
  UpdateProjectResponseCustomEnvironmentsItemDomainsItem:
    properties:
      name: string
      apexName: string
      projectId: string
      redirect: optional<string>
      redirectStatusCode: optional<double>
      gitBranch: optional<string>
      customEnvironmentId: optional<string>
      updatedAt: optional<double>
      createdAt: optional<double>
      verified:
        type: boolean
        docs: >-
          `true` if the domain is verified for use with the project. If `false`
          it will not be used as an alias on this project until the challenge in
          `verification` is completed.
      verification:
        type: >-
          optional<list<UpdateProjectResponseCustomEnvironmentsItemDomainsItemVerificationItem>>
        docs: >-
          A list of verification challenges, one of which must be completed to
          verify the domain for use on the project. After the challenge is
          complete `POST /projects/:idOrName/domains/:domain/verify` to verify
          the domain. Possible challenges: - If `verification.type = TXT` the
          `verification.domain` will be checked for a TXT record matching
          `verification.value`.
    source:
      openapi: openapi.json
  UpdateProjectResponseCustomEnvironmentsItem:
    properties:
      id: string
      name: string
      slug: string
      type: UpdateProjectResponseCustomEnvironmentsItemType
      description: optional<string>
      branchMatcher: optional<UpdateProjectResponseCustomEnvironmentsItemBranchMatcher>
      createdAt: double
      updatedAt: double
      domains: optional<list<UpdateProjectResponseCustomEnvironmentsItemDomainsItem>>
      currentDeploymentAliases: optional<list<string>>
    source:
      openapi: openapi.json
  UpdateProjectResponseFramework:
    enum:
      - blitzjs
      - nextjs
      - gatsby
      - remix
      - astro
      - hexo
      - eleventy
      - value: docusaurus-2
        name: Docusaurus2
      - docusaurus
      - preact
      - value: solidstart-1
        name: Solidstart1
      - solidstart
      - dojo
      - ember
      - vue
      - scully
      - value: ionic-angular
        name: IonicAngular
      - angular
      - polymer
      - svelte
      - sveltekit
      - value: sveltekit-1
        name: Sveltekit1
      - value: ionic-react
        name: IonicReact
      - value: create-react-app
        name: CreateReactApp
      - gridsome
      - umijs
      - sapper
      - saber
      - stencil
      - nuxtjs
      - redwoodjs
      - hugo
      - jekyll
      - brunch
      - middleman
      - zola
      - hydrogen
      - vite
      - vitepress
      - vuepress
      - parcel
      - fasthtml
      - value: sanity-v3
        name: SanityV3
      - sanity
      - storybook
    source:
      openapi: openapi.json
  UpdateProjectResponseLatestDeploymentsItemAliasAssigned:
    discriminated: false
    union:
      - double
      - boolean
    source:
      openapi: openapi.json
  UpdateProjectResponseLatestDeploymentsItemAliasError:
    properties:
      code: string
      message: string
    source:
      openapi: openapi.json
  UpdateProjectResponseLatestDeploymentsItemBuildsItem:
    properties:
      use: string
      src: optional<string>
      dest: optional<string>
    source:
      openapi: openapi.json
  UpdateProjectResponseLatestDeploymentsItemChecksConclusion:
    enum:
      - succeeded
      - failed
      - skipped
      - canceled
    source:
      openapi: openapi.json
  UpdateProjectResponseLatestDeploymentsItemChecksState:
    enum:
      - registered
      - running
      - completed
    source:
      openapi: openapi.json
  UpdateProjectResponseLatestDeploymentsItemCreator:
    properties:
      email: string
      githubLogin: optional<string>
      gitlabLogin: optional<string>
      uid: string
      username: string
    source:
      openapi: openapi.json
  UpdateProjectResponseLatestDeploymentsItemOidcTokenClaims:
    properties:
      sub: string
      scope: string
      aud: string
      owner: string
      owner_id: string
      project: string
      project_id: string
      environment: string
    source:
      openapi: openapi.json
  UpdateProjectResponseLatestDeploymentsItemPlan:
    enum:
      - pro
      - enterprise
      - hobby
    source:
      openapi: openapi.json
  UpdateProjectResponseLatestDeploymentsItemReadyState:
    enum:
      - BUILDING
      - ERROR
      - INITIALIZING
      - QUEUED
      - READY
      - CANCELED
    source:
      openapi: openapi.json
  UpdateProjectResponseLatestDeploymentsItemReadySubstate:
    enum:
      - STAGED
      - PROMOTED
    source:
      openapi: openapi.json
  UpdateProjectResponseLatestDeploymentsItem:
    properties:
      id: string
      alias: optional<list<string>>
      aliasAssigned: optional<UpdateProjectResponseLatestDeploymentsItemAliasAssigned>
      aliasError: optional<UpdateProjectResponseLatestDeploymentsItemAliasError>
      aliasFinal: optional<string>
      automaticAliases: optional<list<string>>
      buildingAt: optional<double>
      builds: optional<list<UpdateProjectResponseLatestDeploymentsItemBuildsItem>>
      checksConclusion: optional<UpdateProjectResponseLatestDeploymentsItemChecksConclusion>
      checksState: optional<UpdateProjectResponseLatestDeploymentsItemChecksState>
      connectBuildsEnabled: optional<boolean>
      connectConfigurationId: optional<string>
      createdAt: double
      createdIn: string
      creator: optional<UpdateProjectResponseLatestDeploymentsItemCreator>
      deletedAt: optional<double>
      deploymentHostname: string
      forced: optional<boolean>
      name: string
      meta: optional<map<string, string>>
      monorepoManager: optional<string>
      oidcTokenClaims: optional<UpdateProjectResponseLatestDeploymentsItemOidcTokenClaims>
      plan: UpdateProjectResponseLatestDeploymentsItemPlan
      previewCommentsEnabled:
        type: optional<boolean>
        docs: Whether or not preview comments are enabled for the deployment
      private: boolean
      readyAt: optional<double>
      readyState: UpdateProjectResponseLatestDeploymentsItemReadyState
      readySubstate: optional<UpdateProjectResponseLatestDeploymentsItemReadySubstate>
      requestedAt: optional<double>
      target: optional<string>
      teamId: optional<string>
      type: literal<"LAMBDAS">
      url: string
      userId: string
      withCache: optional<boolean>
    source:
      openapi: openapi.json
  UpdateProjectResponseLinkGithubDeployHooksItem:
    properties:
      createdAt: optional<double>
      id: string
      name: string
      ref: string
      url: string
    source:
      openapi: openapi.json
  UpdateProjectResponseLinkGithub:
    properties:
      org: optional<string>
      repoOwnerId:
        type: optional<double>
        docs: >-
          A new field, should be included in all new project links, is being
          added just in time when a deployment is created. This is needed for
          Protected Git scopes.
      repo: optional<string>
      repoId: optional<double>
      createdAt: optional<double>
      deployHooks: list<UpdateProjectResponseLinkGithubDeployHooksItem>
      gitCredentialId: optional<string>
      updatedAt: optional<double>
      sourceless: optional<boolean>
      productionBranch: optional<string>
    source:
      openapi: openapi.json
  UpdateProjectResponseLinkGitlabDeployHooksItem:
    properties:
      createdAt: optional<double>
      id: string
      name: string
      ref: string
      url: string
    source:
      openapi: openapi.json
  UpdateProjectResponseLinkGitlab:
    properties:
      projectId: optional<string>
      projectName: optional<string>
      projectNameWithNamespace: optional<string>
      projectNamespace: optional<string>
      projectOwnerId:
        type: optional<double>
        docs: >-
          A new field, should be included in all new project links, is being
          added just in time when a deployment is created. This is needed for
          Protected Git scopes. This is the id of the top level group that a
          namespace belongs to. Gitlab supports group nesting (up to 20 levels).
      projectUrl: optional<string>
      createdAt: optional<double>
      deployHooks: list<UpdateProjectResponseLinkGitlabDeployHooksItem>
      gitCredentialId: optional<string>
      updatedAt: optional<double>
      sourceless: optional<boolean>
      productionBranch: optional<string>
    source:
      openapi: openapi.json
  UpdateProjectResponseLinkBitbucketDeployHooksItem:
    properties:
      createdAt: optional<double>
      id: string
      name: string
      ref: string
      url: string
    source:
      openapi: openapi.json
  UpdateProjectResponseLinkBitbucket:
    properties:
      name: optional<string>
      slug: optional<string>
      owner: optional<string>
      uuid: optional<string>
      workspaceUuid: optional<string>
      createdAt: optional<double>
      deployHooks: list<UpdateProjectResponseLinkBitbucketDeployHooksItem>
      gitCredentialId: optional<string>
      updatedAt: optional<double>
      sourceless: optional<boolean>
      productionBranch: optional<string>
    source:
      openapi: openapi.json
  UpdateProjectResponseLink:
    discriminant: type
    base-properties: {}
    union:
      github: UpdateProjectResponseLinkGithub
      gitlab: UpdateProjectResponseLinkGitlab
      bitbucket: UpdateProjectResponseLinkBitbucket
    source:
      openapi: openapi.json
  UpdateProjectResponseNodeVersion:
    enum:
      - value: 20.x
        name: TwentyX
      - value: 18.x
        name: EighteenX
      - value: 16.x
        name: SixteenX
      - value: 14.x
        name: FourteenX
      - value: 12.x
        name: TwelveX
      - value: 10.x
        name: TenX
      - value: 8.10.x
        name: Eight10X
    source:
      openapi: openapi.json
  UpdateProjectResponseOptionsAllowlistPathsItem:
    properties:
      value: string
    source:
      openapi: openapi.json
  UpdateProjectResponseOptionsAllowlist:
    properties:
      paths: list<UpdateProjectResponseOptionsAllowlistPathsItem>
    source:
      openapi: openapi.json
  UpdateProjectResponseResourceConfigFunctionDefaultMemoryType:
    enum:
      - standard_legacy
      - standard
      - performance
    source:
      openapi: openapi.json
  UpdateProjectResponseResourceConfig:
    properties:
      functionDefaultTimeout: optional<double>
      functionDefaultMemoryType: optional<UpdateProjectResponseResourceConfigFunctionDefaultMemoryType>
    source:
      openapi: openapi.json
  UpdateProjectResponseSsoProtectionDeploymentType:
    enum:
      - preview
      - all
      - prod_deployment_urls_and_all_previews
    source:
      openapi: openapi.json
  UpdateProjectResponseSsoProtection:
    properties:
      deploymentType: UpdateProjectResponseSsoProtectionDeploymentType
    source:
      openapi: openapi.json
  UpdateProjectResponseTargetsValueAliasAssigned:
    discriminated: false
    union:
      - double
      - boolean
    source:
      openapi: openapi.json
  UpdateProjectResponseTargetsValueAliasError:
    properties:
      code: string
      message: string
    source:
      openapi: openapi.json
  UpdateProjectResponseTargetsValueBuildsItem:
    properties:
      use: string
      src: optional<string>
      dest: optional<string>
    source:
      openapi: openapi.json
  UpdateProjectResponseTargetsValueChecksConclusion:
    enum:
      - succeeded
      - failed
      - skipped
      - canceled
    source:
      openapi: openapi.json
  UpdateProjectResponseTargetsValueChecksState:
    enum:
      - registered
      - running
      - completed
    source:
      openapi: openapi.json
  UpdateProjectResponseTargetsValueCreator:
    properties:
      email: string
      githubLogin: optional<string>
      gitlabLogin: optional<string>
      uid: string
      username: string
    source:
      openapi: openapi.json
  UpdateProjectResponseTargetsValueOidcTokenClaims:
    properties:
      sub: string
      scope: string
      aud: string
      owner: string
      owner_id: string
      project: string
      project_id: string
      environment: string
    source:
      openapi: openapi.json
  UpdateProjectResponseTargetsValuePlan:
    enum:
      - pro
      - enterprise
      - hobby
    source:
      openapi: openapi.json
  UpdateProjectResponseTargetsValueReadyState:
    enum:
      - BUILDING
      - ERROR
      - INITIALIZING
      - QUEUED
      - READY
      - CANCELED
    source:
      openapi: openapi.json
  UpdateProjectResponseTargetsValueReadySubstate:
    enum:
      - STAGED
      - PROMOTED
    source:
      openapi: openapi.json
  UpdateProjectResponseTargetsValue:
    properties:
      id: string
      alias: optional<list<string>>
      aliasAssigned: optional<UpdateProjectResponseTargetsValueAliasAssigned>
      aliasError: optional<UpdateProjectResponseTargetsValueAliasError>
      aliasFinal: optional<string>
      automaticAliases: optional<list<string>>
      buildingAt: optional<double>
      builds: optional<list<UpdateProjectResponseTargetsValueBuildsItem>>
      checksConclusion: optional<UpdateProjectResponseTargetsValueChecksConclusion>
      checksState: optional<UpdateProjectResponseTargetsValueChecksState>
      connectBuildsEnabled: optional<boolean>
      connectConfigurationId: optional<string>
      createdAt: double
      createdIn: string
      creator: optional<UpdateProjectResponseTargetsValueCreator>
      deletedAt: optional<double>
      deploymentHostname: string
      forced: optional<boolean>
      name: string
      meta: optional<map<string, string>>
      monorepoManager: optional<string>
      oidcTokenClaims: optional<UpdateProjectResponseTargetsValueOidcTokenClaims>
      plan: UpdateProjectResponseTargetsValuePlan
      previewCommentsEnabled:
        type: optional<boolean>
        docs: Whether or not preview comments are enabled for the deployment
      private: boolean
      readyAt: optional<double>
      readyState: UpdateProjectResponseTargetsValueReadyState
      readySubstate: optional<UpdateProjectResponseTargetsValueReadySubstate>
      requestedAt: optional<double>
      target: optional<string>
      teamId: optional<string>
      type: literal<"LAMBDAS">
      url: string
      userId: string
      withCache: optional<boolean>
    source:
      openapi: openapi.json
  UpdateProjectResponsePermissions:
    properties:
      accessGroup: optional<list<root.AclAction>>
      aliasGlobal: optional<list<root.AclAction>>
      analyticsSampling: optional<list<root.AclAction>>
      analyticsUsage: optional<list<root.AclAction>>
      auditLog: optional<list<root.AclAction>>
      billingAddress: optional<list<root.AclAction>>
      billingInformation: optional<list<root.AclAction>>
      billingInvoice: optional<list<root.AclAction>>
      billingInvoiceEmailRecipient: optional<list<root.AclAction>>
      billingInvoiceLanguage: optional<list<root.AclAction>>
      billingPlan: optional<list<root.AclAction>>
      billingPurchaseOrder: optional<list<root.AclAction>>
      billingTaxId: optional<list<root.AclAction>>
      blob: optional<list<root.AclAction>>
      budget: optional<list<root.AclAction>>
      cacheArtifact: optional<list<root.AclAction>>
      cacheArtifactUsageEvent: optional<list<root.AclAction>>
      codeChecks: optional<list<root.AclAction>>
      concurrentBuilds: optional<list<root.AclAction>>
      connect: optional<list<root.AclAction>>
      connectConfiguration: optional<list<root.AclAction>>
      domain: optional<list<root.AclAction>>
      domainAcceptDelegation: optional<list<root.AclAction>>
      domainAuthCodes: optional<list<root.AclAction>>
      domainCertificate: optional<list<root.AclAction>>
      domainCheckConfig: optional<list<root.AclAction>>
      domainMove: optional<list<root.AclAction>>
      domainPurchase: optional<list<root.AclAction>>
      domainRecord: optional<list<root.AclAction>>
      domainTransferIn: optional<list<root.AclAction>>
      event: optional<list<root.AclAction>>
      ownEvent: optional<list<root.AclAction>>
      sensitiveEnvironmentVariablePolicy: optional<list<root.AclAction>>
      fileUpload: optional<list<root.AclAction>>
      gitRepository: optional<list<root.AclAction>>
      ipBlocking: optional<list<root.AclAction>>
      integration: optional<list<root.AclAction>>
      integrationAccount: optional<list<root.AclAction>>
      integrationConfiguration: optional<list<root.AclAction>>
      integrationConfigurationTransfer: optional<list<root.AclAction>>
      integrationConfigurationProjects: optional<list<root.AclAction>>
      integrationVercelConfigurationOverride: optional<list<root.AclAction>>
      integrationConfigurationRole: optional<list<root.AclAction>>
      integrationResource: optional<list<root.AclAction>>
      integrationEvent: optional<list<root.AclAction>>
      integrationResourceSecrets: optional<list<root.AclAction>>
      marketplaceInstallationMember: optional<list<root.AclAction>>
      marketplaceBillingData: optional<list<root.AclAction>>
      marketplaceInvoice: optional<list<root.AclAction>>
      jobGlobal: optional<list<root.AclAction>>
      logDrain: optional<list<root.AclAction>>
      Monitoring: optional<list<root.AclAction>>
      monitoringSettings: optional<list<root.AclAction>>
      monitoringQuery: optional<list<root.AclAction>>
      monitoringChart: optional<list<root.AclAction>>
      monitoringAlert: optional<list<root.AclAction>>
      notificationDeploymentFailed: optional<list<root.AclAction>>
      notificationDomainConfiguration: optional<list<root.AclAction>>
      notificationDomainExpire: optional<list<root.AclAction>>
      notificationDomainMoved: optional<list<root.AclAction>>
      notificationDomainPurchase: optional<list<root.AclAction>>
      notificationDomainRenewal: optional<list<root.AclAction>>
      notificationDomainTransfer: optional<list<root.AclAction>>
      notificationDomainUnverified: optional<list<root.AclAction>>
      NotificationMonitoringAlert: optional<list<root.AclAction>>
      notificationPaymentFailed: optional<list<root.AclAction>>
      notificationUsageAlert: optional<list<root.AclAction>>
      notificationCustomerBudget: optional<list<root.AclAction>>
      notificationStatementOfReasons: optional<list<root.AclAction>>
      oauth2Connection: optional<list<root.AclAction>>
      openTelemetryEndpoint: optional<list<root.AclAction>>
      paymentMethod: optional<list<root.AclAction>>
      permissions: optional<list<root.AclAction>>
      postgres: optional<list<root.AclAction>>
      previewDeploymentSuffix: optional<list<root.AclAction>>
      proTrialOnboarding: optional<list<root.AclAction>>
      sharedEnvVars: optional<list<root.AclAction>>
      sharedEnvVarsProduction: optional<list<root.AclAction>>
      space: optional<list<root.AclAction>>
      spaceRun: optional<list<root.AclAction>>
      passwordProtectionInvoiceItem: optional<list<root.AclAction>>
      rateLimit: optional<list<root.AclAction>>
      redis: optional<list<root.AclAction>>
      repository: optional<list<root.AclAction>>
      remoteCaching: optional<list<root.AclAction>>
      samlConfig: optional<list<root.AclAction>>
      secret: optional<list<root.AclAction>>
      redisStoreTokenSet: optional<list<root.AclAction>>
      blobStoreTokenSet: optional<list<root.AclAction>>
      postgresStoreTokenSet: optional<list<root.AclAction>>
      integrationStoreTokenSet: optional<list<root.AclAction>>
      integrationResourceReplCommand: optional<list<root.AclAction>>
      storeTransfer: optional<list<root.AclAction>>
      supportCase: optional<list<root.AclAction>>
      supportCaseComment: optional<list<root.AclAction>>
      dataCacheBillingSettings: optional<list<root.AclAction>>
      team: optional<list<root.AclAction>>
      teamAccessRequest: optional<list<root.AclAction>>
      teamFellowMembership: optional<list<root.AclAction>>
      teamGitExclusivity: optional<list<root.AclAction>>
      teamInvite: optional<list<root.AclAction>>
      teamInviteCode: optional<list<root.AclAction>>
      teamJoin: optional<list<root.AclAction>>
      teamOwnMembership: optional<list<root.AclAction>>
      teamOwnMembershipDisconnectSAML: optional<list<root.AclAction>>
      token: optional<list<root.AclAction>>
      usage: optional<list<root.AclAction>>
      usageCycle: optional<list<root.AclAction>>
      user: optional<list<root.AclAction>>
      userConnection: optional<list<root.AclAction>>
      vpcPeeringConnection: optional<list<root.AclAction>>
      webAnalyticsPlan: optional<list<root.AclAction>>
      webAuthn: optional<list<root.AclAction>>
      edgeConfig: optional<list<root.AclAction>>
      edgeConfigItem: optional<list<root.AclAction>>
      edgeConfigSchema: optional<list<root.AclAction>>
      edgeConfigToken: optional<list<root.AclAction>>
      webhook: optional<list<root.AclAction>>
      webhook-event: optional<list<root.AclAction>>
      endpointVerification: optional<list<root.AclAction>>
      projectTransferIn: optional<list<root.AclAction>>
      oauth2Application: optional<list<root.AclAction>>
      aliasProject: optional<list<root.AclAction>>
      aliasProtectionBypass: optional<list<root.AclAction>>
      productionAliasProtectionBypass: optional<list<root.AclAction>>
      connectConfigurationLink: optional<list<root.AclAction>>
      dataCacheNamespace: optional<list<root.AclAction>>
      deployment: optional<list<root.AclAction>>
      deploymentCheck: optional<list<root.AclAction>>
      deploymentCheckPreview: optional<list<root.AclAction>>
      deploymentCheckReRunFromProductionBranch: optional<list<root.AclAction>>
      deploymentProductionGit: optional<list<root.AclAction>>
      deploymentPreview: optional<list<root.AclAction>>
      deploymentPrivate: optional<list<root.AclAction>>
      deploymentPromote: optional<list<root.AclAction>>
      deploymentRollback: optional<list<root.AclAction>>
      environments: optional<list<root.AclAction>>
      logs: optional<list<root.AclAction>>
      logsPreset: optional<list<root.AclAction>>
      passwordProtection: optional<list<root.AclAction>>
      optionsAllowlist: optional<list<root.AclAction>>
      job: optional<list<root.AclAction>>
      project: optional<list<root.AclAction>>
      projectAccessGroup: optional<list<root.AclAction>>
      projectAnalyticsSampling: optional<list<root.AclAction>>
      projectDeploymentHook: optional<list<root.AclAction>>
      projectDomain: optional<list<root.AclAction>>
      projectDomainMove: optional<list<root.AclAction>>
      projectDomainCheckConfig: optional<list<root.AclAction>>
      projectEnvVars: optional<list<root.AclAction>>
      projectEnvVarsProduction: optional<list<root.AclAction>>
      projectEnvVarsUnownedByIntegration: optional<list<root.AclAction>>
      projectFlags: optional<list<root.AclAction>>
      projectId: optional<list<root.AclAction>>
      projectIntegrationConfiguration: optional<list<root.AclAction>>
      projectLink: optional<list<root.AclAction>>
      projectMember: optional<list<root.AclAction>>
      projectMonitoring: optional<list<root.AclAction>>
      projectPermissions: optional<list<root.AclAction>>
      projectProductionBranch: optional<list<root.AclAction>>
      projectTransfer: optional<list<root.AclAction>>
      projectTransferOut: optional<list<root.AclAction>>
      projectProtectionBypass: optional<list<root.AclAction>>
      projectUsage: optional<list<root.AclAction>>
      projectAnalyticsUsage: optional<list<root.AclAction>>
      projectSupportCase: optional<list<root.AclAction>>
      projectSupportCaseComment: optional<list<root.AclAction>>
      projectDeploymentExpiration: optional<list<root.AclAction>>
      projectTier: optional<list<root.AclAction>>
      seawallConfig: optional<list<root.AclAction>>
      skewProtection: optional<list<root.AclAction>>
      analytics: optional<list<root.AclAction>>
      trustedIps: optional<list<root.AclAction>>
      webAnalytics: optional<list<root.AclAction>>
      sharedEnvVarConnection: optional<list<root.AclAction>>
      sonar: optional<list<root.AclAction>>
    source:
      openapi: openapi.json
  UpdateProjectResponseLastAliasRequestJobStatus:
    enum:
      - succeeded
      - failed
      - skipped
      - pending
      - value: in-progress
        name: InProgress
    source:
      openapi: openapi.json
  UpdateProjectResponseLastAliasRequestType:
    enum:
      - promote
      - rollback
    source:
      openapi: openapi.json
  UpdateProjectResponseLastAliasRequest:
    properties:
      fromDeploymentId: string
      toDeploymentId: string
      jobStatus: UpdateProjectResponseLastAliasRequestJobStatus
      requestedAt: double
      type: UpdateProjectResponseLastAliasRequestType
    source:
      openapi: openapi.json
  UpdateProjectResponseProtectionBypassValue:
    properties:
      createdAt: double
      createdBy: string
      scope: literal<"automation-bypass">
    source:
      openapi: openapi.json
  UpdateProjectResponseTrustedIpsAddressesDeploymentType:
    enum:
      - production
      - preview
      - all
      - prod_deployment_urls_and_all_previews
    source:
      openapi: openapi.json
  UpdateProjectResponseTrustedIpsAddressesAddressesItem:
    properties:
      value: string
      note: optional<string>
    source:
      openapi: openapi.json
  UpdateProjectResponseTrustedIpsAddressesProtectionMode:
    enum:
      - additional
      - exclusive
    source:
      openapi: openapi.json
  UpdateProjectResponseTrustedIpsAddresses:
    properties:
      deploymentType: UpdateProjectResponseTrustedIpsAddressesDeploymentType
      addresses: list<UpdateProjectResponseTrustedIpsAddressesAddressesItem>
      protectionMode: UpdateProjectResponseTrustedIpsAddressesProtectionMode
    source:
      openapi: openapi.json
  UpdateProjectResponseTrustedIpsOneDeploymentType:
    enum:
      - production
      - preview
      - all
      - prod_deployment_urls_and_all_previews
    source:
      openapi: openapi.json
  UpdateProjectResponseTrustedIpsOne:
    properties:
      deploymentType: UpdateProjectResponseTrustedIpsOneDeploymentType
    source:
      openapi: openapi.json
  UpdateProjectResponseTrustedIps:
    discriminated: false
    union:
      - UpdateProjectResponseTrustedIpsAddresses
      - UpdateProjectResponseTrustedIpsOne
    source:
      openapi: openapi.json
  UpdateProjectResponseGitComments:
    properties:
      onPullRequest:
        type: boolean
        docs: Whether the Vercel bot should comment on PRs
      onCommit:
        type: boolean
        docs: Whether the Vercel bot should comment on commits
    source:
      openapi: openapi.json
  UpdateProjectResponseWebAnalytics:
    properties:
      id: string
      disabledAt: optional<double>
      canceledAt: optional<double>
      enabledAt: optional<double>
      hasData: optional<boolean>
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItemSrcEq:
    properties:
      re: optional<string>
      eq: optional<string>
      neq: optional<string>
      inc: optional<list<string>>
      ninc: optional<list<string>>
      pre: optional<string>
      suf: optional<string>
      gt: optional<double>
      gte: optional<double>
      lt: optional<double>
      lte: optional<double>
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItemSrc:
    discriminated: false
    union:
      - string
      - UpdateProjectResponseSecurityFirewallRoutesItemSrcEq
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItemHasItemType:
    enum:
      - path
      - host
      - method
      - header
      - cookie
      - query
      - ip_address
      - protocol
      - scheme
      - environment
      - region
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItemHasItemValueEq:
    properties:
      re: optional<string>
      eq: optional<string>
      neq: optional<string>
      inc: optional<list<string>>
      ninc: optional<list<string>>
      pre: optional<string>
      suf: optional<string>
      gt: optional<double>
      gte: optional<double>
      lt: optional<double>
      lte: optional<double>
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItemHasItemValue:
    discriminated: false
    union:
      - string
      - UpdateProjectResponseSecurityFirewallRoutesItemHasItemValueEq
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItemHasItem:
    properties:
      type: UpdateProjectResponseSecurityFirewallRoutesItemHasItemType
      key: optional<string>
      value: optional<UpdateProjectResponseSecurityFirewallRoutesItemHasItemValue>
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItemMissingItemType:
    enum:
      - path
      - host
      - method
      - header
      - cookie
      - query
      - ip_address
      - protocol
      - scheme
      - environment
      - region
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItemMissingItemValueEq:
    properties:
      re: optional<string>
      eq: optional<string>
      neq: optional<string>
      inc: optional<list<string>>
      ninc: optional<list<string>>
      pre: optional<string>
      suf: optional<string>
      gt: optional<double>
      gte: optional<double>
      lt: optional<double>
      lte: optional<double>
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItemMissingItemValue:
    discriminated: false
    union:
      - string
      - UpdateProjectResponseSecurityFirewallRoutesItemMissingItemValueEq
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItemMissingItem:
    properties:
      type: UpdateProjectResponseSecurityFirewallRoutesItemMissingItemType
      key: optional<string>
      value: >-
        optional<UpdateProjectResponseSecurityFirewallRoutesItemMissingItemValue>
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItemHandle:
    enum:
      - init
      - finalize
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItemMitigateAction:
    enum:
      - deny
      - challenge
      - log
      - bypass
      - rate_limit
      - redirect
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItemMitigateErlAlgo:
    enum:
      - fixed_window
      - token_bucket
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItemMitigateErl:
    properties:
      algo: UpdateProjectResponseSecurityFirewallRoutesItemMitigateErlAlgo
      window: double
      limit: double
      keys: list<string>
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItemMitigate:
    properties:
      action: UpdateProjectResponseSecurityFirewallRoutesItemMitigateAction
      rule_id: string
      ttl: optional<double>
      erl: optional<UpdateProjectResponseSecurityFirewallRoutesItemMitigateErl>
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurityFirewallRoutesItem:
    properties:
      src: optional<UpdateProjectResponseSecurityFirewallRoutesItemSrc>
      has: optional<list<UpdateProjectResponseSecurityFirewallRoutesItemHasItem>>
      missing: >-
        optional<list<UpdateProjectResponseSecurityFirewallRoutesItemMissingItem>>
      dest: optional<string>
      status: optional<double>
      handle: optional<UpdateProjectResponseSecurityFirewallRoutesItemHandle>
      mitigate: optional<UpdateProjectResponseSecurityFirewallRoutesItemMitigate>
    source:
      openapi: openapi.json
  UpdateProjectResponseSecurity:
    properties:
      attackModeEnabled: optional<boolean>
      attackModeUpdatedAt: optional<double>
      firewallEnabled: optional<boolean>
      firewallUpdatedAt: optional<double>
      attackModeActiveUntil: optional<double>
      firewallConfigVersion: optional<double>
      firewallRoutes: optional<list<UpdateProjectResponseSecurityFirewallRoutesItem>>
      firewallSeawallEnabled: optional<boolean>
      ja3Enabled: optional<boolean>
      ja4Enabled: optional<boolean>
    source:
      openapi: openapi.json
  UpdateProjectResponseOidcTokenConfig:
    properties:
      enabled: boolean
    source:
      openapi: openapi.json
  UpdateProjectResponseTier:
    enum:
      - standard
      - advanced
      - critical
    source:
      openapi: openapi.json
  UpdateProjectResponse:
    properties:
      accountId: string
      analytics: optional<UpdateProjectResponseAnalytics>
      speedInsights: optional<UpdateProjectResponseSpeedInsights>
      autoExposeSystemEnvs: optional<boolean>
      autoAssignCustomDomains: optional<boolean>
      autoAssignCustomDomainsUpdatedBy: optional<string>
      buildCommand: optional<string>
      commandForIgnoringBuildStep: optional<string>
      connectConfigurationId: optional<string>
      connectBuildsEnabled: optional<boolean>
      createdAt: optional<double>
      customerSupportCodeVisibility: optional<boolean>
      crons: optional<UpdateProjectResponseCrons>
      dataCache: optional<UpdateProjectResponseDataCache>
      deploymentExpiration: optional<UpdateProjectResponseDeploymentExpiration>
      devCommand: optional<string>
      directoryListing: boolean
      installCommand: optional<string>
      env: optional<list<UpdateProjectResponseEnvItem>>
      customEnvironments: optional<list<UpdateProjectResponseCustomEnvironmentsItem>>
      framework: optional<UpdateProjectResponseFramework>
      gitForkProtection: optional<boolean>
      gitLFS: optional<boolean>
      id: string
      latestDeployments: optional<list<UpdateProjectResponseLatestDeploymentsItem>>
      link: optional<UpdateProjectResponseLink>
      name: string
      nodeVersion: UpdateProjectResponseNodeVersion
      optionsAllowlist: optional<UpdateProjectResponseOptionsAllowlist>
      outputDirectory: optional<string>
      passiveConnectConfigurationId: optional<string>
      passwordProtection: optional<map<string, unknown>>
      productionDeploymentsFastLane: optional<boolean>
      publicSource: optional<boolean>
      resourceConfig: optional<UpdateProjectResponseResourceConfig>
      rootDirectory: optional<string>
      serverlessFunctionRegion: optional<string>
      serverlessFunctionZeroConfigFailover: optional<boolean>
      skewProtectionBoundaryAt: optional<double>
      skewProtectionMaxAge: optional<double>
      skipGitConnectDuringLink: optional<boolean>
      sourceFilesOutsideRootDirectory: optional<boolean>
      enableAffectedProjectsDeployments: optional<boolean>
      ssoProtection: optional<UpdateProjectResponseSsoProtection>
      targets: optional<map<string, optional<UpdateProjectResponseTargetsValue>>>
      transferCompletedAt: optional<double>
      transferStartedAt: optional<double>
      transferToAccountId: optional<string>
      transferredFromAccountId: optional<string>
      updatedAt: optional<double>
      live: optional<boolean>
      enablePreviewFeedback: optional<boolean>
      enableProductionFeedback: optional<boolean>
      permissions: optional<UpdateProjectResponsePermissions>
      lastRollbackTarget: optional<map<string, unknown>>
      lastAliasRequest: optional<UpdateProjectResponseLastAliasRequest>
      hasFloatingAliases: optional<boolean>
      protectionBypass: optional<map<string, UpdateProjectResponseProtectionBypassValue>>
      hasActiveBranches: optional<boolean>
      trustedIps: optional<UpdateProjectResponseTrustedIps>
      gitComments: optional<UpdateProjectResponseGitComments>
      paused: optional<boolean>
      concurrencyBucketName: optional<string>
      webAnalytics: optional<UpdateProjectResponseWebAnalytics>
      security: optional<UpdateProjectResponseSecurity>
      oidcTokenConfig: optional<UpdateProjectResponseOidcTokenConfig>
      tier: optional<UpdateProjectResponseTier>
    source:
      openapi: openapi.json
  GetProjectDomainsRequestIdOrName:
    discriminated: false
    docs: The unique project identifier or the project name
    union:
      - string
      - integer
    source:
      openapi: openapi.json
  GetProjectDomainsRequestProduction:
    enum:
      - 'true'
      - 'false'
    docs: Filters only production domains when set to `true`.
    default: 'false'
    source:
      openapi: openapi.json
  GetProjectDomainsRequestTarget:
    enum:
      - production
      - preview
    docs: >-
      Filters on the target of the domain. Can be either \"production\",
      \"preview\"
    source:
      openapi: openapi.json
  GetProjectDomainsRequestRedirects:
    enum:
      - 'true'
      - 'false'
    docs: >-
      Excludes redirect project domains when \"false\". Includes redirect
      project domains when \"true\" (default).
    default: 'true'
    source:
      openapi: openapi.json
  GetProjectDomainsRequestVerified:
    enum:
      - 'true'
      - 'false'
    docs: Filters domains based on their verification status.
    source:
      openapi: openapi.json
  GetProjectDomainsRequestOrder:
    enum:
      - ASC
      - DESC
    docs: Domains sort order by createdAt
    default: DESC
    source:
      openapi: openapi.json
  GetProjectDomainsResponseDomainsItemVerificationItem:
    docs: >-
      A list of verification challenges, one of which must be completed to
      verify the domain for use on the project. After the challenge is complete
      `POST /projects/:idOrName/domains/:domain/verify` to verify the domain.
      Possible challenges: - If `verification.type = TXT` the
      `verification.domain` will be checked for a TXT record matching
      `verification.value`.
    properties:
      type: string
      domain: string
      value: string
      reason: string
    source:
      openapi: openapi.json
  GetProjectDomainsResponseDomainsItem:
    properties:
      name: string
      apexName: string
      projectId: string
      redirect: optional<string>
      redirectStatusCode: optional<double>
      gitBranch: optional<string>
      customEnvironmentId: optional<string>
      updatedAt: optional<double>
      createdAt: optional<double>
      verified:
        type: boolean
        docs: >-
          `true` if the domain is verified for use with the project. If `false`
          it will not be used as an alias on this project until the challenge in
          `verification` is completed.
      verification:
        type: optional<list<GetProjectDomainsResponseDomainsItemVerificationItem>>
        docs: >-
          A list of verification challenges, one of which must be completed to
          verify the domain for use on the project. After the challenge is
          complete `POST /projects/:idOrName/domains/:domain/verify` to verify
          the domain. Possible challenges: - If `verification.type = TXT` the
          `verification.domain` will be checked for a TXT record matching
          `verification.value`.
    source:
      openapi: openapi.json
  GetProjectDomainsResponse:
    properties:
      domains: list<GetProjectDomainsResponseDomainsItem>
      pagination: root.Pagination
    source:
      openapi: openapi.json
  GetProjectDomainResponseVerificationItem:
    docs: >-
      A list of verification challenges, one of which must be completed to
      verify the domain for use on the project. After the challenge is complete
      `POST /projects/:idOrName/domains/:domain/verify` to verify the domain.
      Possible challenges: - If `verification.type = TXT` the
      `verification.domain` will be checked for a TXT record matching
      `verification.value`.
    properties:
      type: string
      domain: string
      value: string
      reason: string
    source:
      openapi: openapi.json
  GetProjectDomainResponse:
    properties:
      name: string
      apexName: string
      projectId: string
      redirect: optional<string>
      redirectStatusCode: optional<double>
      gitBranch: optional<string>
      customEnvironmentId: optional<string>
      updatedAt: optional<double>
      createdAt: optional<double>
      verified:
        type: boolean
        docs: >-
          `true` if the domain is verified for use with the project. If `false`
          it will not be used as an alias on this project until the challenge in
          `verification` is completed.
      verification:
        type: optional<list<GetProjectDomainResponseVerificationItem>>
        docs: >-
          A list of verification challenges, one of which must be completed to
          verify the domain for use on the project. After the challenge is
          complete `POST /projects/:idOrName/domains/:domain/verify` to verify
          the domain. Possible challenges: - If `verification.type = TXT` the
          `verification.domain` will be checked for a TXT record matching
          `verification.value`.
    source:
      openapi: openapi.json
  UpdateProjectDomainResponseVerificationItem:
    docs: >-
      A list of verification challenges, one of which must be completed to
      verify the domain for use on the project. After the challenge is complete
      `POST /projects/:idOrName/domains/:domain/verify` to verify the domain.
      Possible challenges: - If `verification.type = TXT` the
      `verification.domain` will be checked for a TXT record matching
      `verification.value`.
    properties:
      type: string
      domain: string
      value: string
      reason: string
    source:
      openapi: openapi.json
  UpdateProjectDomainResponse:
    properties:
      name: string
      apexName: string
      projectId: string
      redirect: optional<string>
      redirectStatusCode: optional<double>
      gitBranch: optional<string>
      customEnvironmentId: optional<string>
      updatedAt: optional<double>
      createdAt: optional<double>
      verified:
        type: boolean
        docs: >-
          `true` if the domain is verified for use with the project. If `false`
          it will not be used as an alias on this project until the challenge in
          `verification` is completed.
      verification:
        type: optional<list<UpdateProjectDomainResponseVerificationItem>>
        docs: >-
          A list of verification challenges, one of which must be completed to
          verify the domain for use on the project. After the challenge is
          complete `POST /projects/:idOrName/domains/:domain/verify` to verify
          the domain. Possible challenges: - If `verification.type = TXT` the
          `verification.domain` will be checked for a TXT record matching
          `verification.value`.
    source:
      openapi: openapi.json
  AddProjectDomainResponseVerificationItem:
    docs: >-
      A list of verification challenges, one of which must be completed to
      verify the domain for use on the project. After the challenge is complete
      `POST /projects/:idOrName/domains/:domain/verify` to verify the domain.
      Possible challenges: - If `verification.type = TXT` the
      `verification.domain` will be checked for a TXT record matching
      `verification.value`.
    properties:
      type: string
      domain: string
      value: string
      reason: string
    source:
      openapi: openapi.json
  AddProjectDomainResponse:
    properties:
      name: string
      apexName: string
      projectId: string
      redirect: optional<string>
      redirectStatusCode: optional<double>
      gitBranch: optional<string>
      customEnvironmentId: optional<string>
      updatedAt: optional<double>
      createdAt: optional<double>
      verified:
        type: boolean
        docs: >-
          `true` if the domain is verified for use with the project. If `false`
          it will not be used as an alias on this project until the challenge in
          `verification` is completed.
      verification:
        type: optional<list<AddProjectDomainResponseVerificationItem>>
        docs: >-
          A list of verification challenges, one of which must be completed to
          verify the domain for use on the project. After the challenge is
          complete `POST /projects/:idOrName/domains/:domain/verify` to verify
          the domain. Possible challenges: - If `verification.type = TXT` the
          `verification.domain` will be checked for a TXT record matching
          `verification.value`.
    source:
      openapi: openapi.json
  VerifyProjectDomainResponseVerificationItem:
    docs: >-
      A list of verification challenges, one of which must be completed to
      verify the domain for use on the project. After the challenge is complete
      `POST /projects/:idOrName/domains/:domain/verify` to verify the domain.
      Possible challenges: - If `verification.type = TXT` the
      `verification.domain` will be checked for a TXT record matching
      `verification.value`.
    properties:
      type: string
      domain: string
      value: string
      reason: string
    source:
      openapi: openapi.json
  VerifyProjectDomainResponse:
    properties:
      name: string
      apexName: string
      projectId: string
      redirect: optional<string>
      redirectStatusCode: optional<double>
      gitBranch: optional<string>
      customEnvironmentId: optional<string>
      updatedAt: optional<double>
      createdAt: optional<double>
      verified:
        type: boolean
        docs: >-
          `true` if the domain is verified for use with the project. If `false`
          it will not be used as an alias on this project until the challenge in
          `verification` is completed.
      verification:
        type: optional<list<VerifyProjectDomainResponseVerificationItem>>
        docs: >-
          A list of verification challenges, one of which must be completed to
          verify the domain for use on the project. After the challenge is
          complete `POST /projects/:idOrName/domains/:domain/verify` to verify
          the domain. Possible challenges: - If `verification.type = TXT` the
          `verification.domain` will be checked for a TXT record matching
          `verification.value`.
    source:
      openapi: openapi.json
  FilterProjectEnvsRequestDecrypt:
    enum:
      - 'true'
      - 'false'
    docs: If true, the environment variable value will be decrypted
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentTarget:
    discriminated: false
    union:
      - list<FilterProjectEnvsResponseCommentTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: FilterProjectEnvsResponseCommentContentHintRedisUrl
      redis-rest-api-url: FilterProjectEnvsResponseCommentContentHintRedisRestApiUrl
      redis-rest-api-token: FilterProjectEnvsResponseCommentContentHintRedisRestApiToken
      redis-rest-api-read-only-token: FilterProjectEnvsResponseCommentContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: FilterProjectEnvsResponseCommentContentHintBlobReadWriteToken
      postgres-url: FilterProjectEnvsResponseCommentContentHintPostgresUrl
      postgres-url-non-pooling: FilterProjectEnvsResponseCommentContentHintPostgresUrlNonPooling
      postgres-prisma-url: FilterProjectEnvsResponseCommentContentHintPostgresPrismaUrl
      postgres-user: FilterProjectEnvsResponseCommentContentHintPostgresUser
      postgres-host: FilterProjectEnvsResponseCommentContentHintPostgresHost
      postgres-password: FilterProjectEnvsResponseCommentContentHintPostgresPassword
      postgres-database: FilterProjectEnvsResponseCommentContentHintPostgresDatabase
      postgres-url-no-ssl: FilterProjectEnvsResponseCommentContentHintPostgresUrlNoSsl
      integration-store-secret: FilterProjectEnvsResponseCommentContentHintIntegrationStoreSecret
      flags-connection-string: FilterProjectEnvsResponseCommentContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseCommentInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseComment:
    properties:
      target: optional<FilterProjectEnvsResponseCommentTarget>
      type: optional<FilterProjectEnvsResponseCommentType>
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: optional<string>
      value: optional<string>
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<FilterProjectEnvsResponseCommentContentHint>
      internalContentHint:
        type: optional<FilterProjectEnvsResponseCommentInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
      vsmValue: optional<string>
      system: optional<boolean>
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemTarget:
    discriminated: false
    union:
      - list<FilterProjectEnvsResponsePaginationEnvsItemTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: FilterProjectEnvsResponsePaginationEnvsItemContentHintRedisUrl
      redis-rest-api-url: FilterProjectEnvsResponsePaginationEnvsItemContentHintRedisRestApiUrl
      redis-rest-api-token: FilterProjectEnvsResponsePaginationEnvsItemContentHintRedisRestApiToken
      redis-rest-api-read-only-token: >-
        FilterProjectEnvsResponsePaginationEnvsItemContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: FilterProjectEnvsResponsePaginationEnvsItemContentHintBlobReadWriteToken
      postgres-url: FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresUrl
      postgres-url-non-pooling: >-
        FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresUrlNonPooling
      postgres-prisma-url: FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresPrismaUrl
      postgres-user: FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresUser
      postgres-host: FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresHost
      postgres-password: FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresPassword
      postgres-database: FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresDatabase
      postgres-url-no-ssl: FilterProjectEnvsResponsePaginationEnvsItemContentHintPostgresUrlNoSsl
      integration-store-secret: >-
        FilterProjectEnvsResponsePaginationEnvsItemContentHintIntegrationStoreSecret
      flags-connection-string: >-
        FilterProjectEnvsResponsePaginationEnvsItemContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItemInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePaginationEnvsItem:
    properties:
      target: optional<FilterProjectEnvsResponsePaginationEnvsItemTarget>
      type: optional<FilterProjectEnvsResponsePaginationEnvsItemType>
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: optional<string>
      value: optional<string>
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<FilterProjectEnvsResponsePaginationEnvsItemContentHint>
      internalContentHint:
        type: >-
          optional<FilterProjectEnvsResponsePaginationEnvsItemInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
      vsmValue: optional<string>
      system: optional<boolean>
    source:
      openapi: openapi.json
  FilterProjectEnvsResponsePagination:
    properties:
      envs: list<FilterProjectEnvsResponsePaginationEnvsItem>
      pagination: root.Pagination
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemTarget:
    discriminated: false
    union:
      - list<FilterProjectEnvsResponseTwoEnvsItemTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: FilterProjectEnvsResponseTwoEnvsItemContentHintRedisUrl
      redis-rest-api-url: FilterProjectEnvsResponseTwoEnvsItemContentHintRedisRestApiUrl
      redis-rest-api-token: FilterProjectEnvsResponseTwoEnvsItemContentHintRedisRestApiToken
      redis-rest-api-read-only-token: FilterProjectEnvsResponseTwoEnvsItemContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: FilterProjectEnvsResponseTwoEnvsItemContentHintBlobReadWriteToken
      postgres-url: FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresUrl
      postgres-url-non-pooling: FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresUrlNonPooling
      postgres-prisma-url: FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresPrismaUrl
      postgres-user: FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresUser
      postgres-host: FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresHost
      postgres-password: FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresPassword
      postgres-database: FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresDatabase
      postgres-url-no-ssl: FilterProjectEnvsResponseTwoEnvsItemContentHintPostgresUrlNoSsl
      integration-store-secret: FilterProjectEnvsResponseTwoEnvsItemContentHintIntegrationStoreSecret
      flags-connection-string: FilterProjectEnvsResponseTwoEnvsItemContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItemInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwoEnvsItem:
    properties:
      target: optional<FilterProjectEnvsResponseTwoEnvsItemTarget>
      type: optional<FilterProjectEnvsResponseTwoEnvsItemType>
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: optional<string>
      value: optional<string>
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<FilterProjectEnvsResponseTwoEnvsItemContentHint>
      internalContentHint:
        type: optional<FilterProjectEnvsResponseTwoEnvsItemInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
      vsmValue: optional<string>
      system: optional<boolean>
    source:
      openapi: openapi.json
  FilterProjectEnvsResponseTwo:
    docs: The list of environment variables for the given project
    properties:
      envs: list<FilterProjectEnvsResponseTwoEnvsItem>
    source:
      openapi: openapi.json
  FilterProjectEnvsResponse:
    discriminated: false
    union:
      - FilterProjectEnvsResponseComment
      - FilterProjectEnvsResponsePagination
      - type: FilterProjectEnvsResponseTwo
        docs: The list of environment variables for the given project
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroTarget:
    discriminated: false
    union:
      - list<GetProjectEnvResponseZeroTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: GetProjectEnvResponseZeroContentHintRedisUrl
      redis-rest-api-url: GetProjectEnvResponseZeroContentHintRedisRestApiUrl
      redis-rest-api-token: GetProjectEnvResponseZeroContentHintRedisRestApiToken
      redis-rest-api-read-only-token: GetProjectEnvResponseZeroContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: GetProjectEnvResponseZeroContentHintBlobReadWriteToken
      postgres-url: GetProjectEnvResponseZeroContentHintPostgresUrl
      postgres-url-non-pooling: GetProjectEnvResponseZeroContentHintPostgresUrlNonPooling
      postgres-prisma-url: GetProjectEnvResponseZeroContentHintPostgresPrismaUrl
      postgres-user: GetProjectEnvResponseZeroContentHintPostgresUser
      postgres-host: GetProjectEnvResponseZeroContentHintPostgresHost
      postgres-password: GetProjectEnvResponseZeroContentHintPostgresPassword
      postgres-database: GetProjectEnvResponseZeroContentHintPostgresDatabase
      postgres-url-no-ssl: GetProjectEnvResponseZeroContentHintPostgresUrlNoSsl
      integration-store-secret: GetProjectEnvResponseZeroContentHintIntegrationStoreSecret
      flags-connection-string: GetProjectEnvResponseZeroContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  GetProjectEnvResponseZeroInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  GetProjectEnvResponseZero:
    properties:
      decrypted: boolean
      target: optional<GetProjectEnvResponseZeroTarget>
      type: GetProjectEnvResponseZeroType
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: string
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<GetProjectEnvResponseZeroContentHint>
      internalContentHint:
        type: optional<GetProjectEnvResponseZeroInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
      vsmValue: optional<string>
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneTarget:
    discriminated: false
    union:
      - list<GetProjectEnvResponseOneTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: GetProjectEnvResponseOneContentHintRedisUrl
      redis-rest-api-url: GetProjectEnvResponseOneContentHintRedisRestApiUrl
      redis-rest-api-token: GetProjectEnvResponseOneContentHintRedisRestApiToken
      redis-rest-api-read-only-token: GetProjectEnvResponseOneContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: GetProjectEnvResponseOneContentHintBlobReadWriteToken
      postgres-url: GetProjectEnvResponseOneContentHintPostgresUrl
      postgres-url-non-pooling: GetProjectEnvResponseOneContentHintPostgresUrlNonPooling
      postgres-prisma-url: GetProjectEnvResponseOneContentHintPostgresPrismaUrl
      postgres-user: GetProjectEnvResponseOneContentHintPostgresUser
      postgres-host: GetProjectEnvResponseOneContentHintPostgresHost
      postgres-password: GetProjectEnvResponseOneContentHintPostgresPassword
      postgres-database: GetProjectEnvResponseOneContentHintPostgresDatabase
      postgres-url-no-ssl: GetProjectEnvResponseOneContentHintPostgresUrlNoSsl
      integration-store-secret: GetProjectEnvResponseOneContentHintIntegrationStoreSecret
      flags-connection-string: GetProjectEnvResponseOneContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  GetProjectEnvResponseOneInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  GetProjectEnvResponseOne:
    properties:
      target: optional<GetProjectEnvResponseOneTarget>
      type: GetProjectEnvResponseOneType
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: string
      value: string
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<GetProjectEnvResponseOneContentHint>
      internalContentHint:
        type: optional<GetProjectEnvResponseOneInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
      vsmValue: optional<string>
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentTarget:
    discriminated: false
    union:
      - list<GetProjectEnvResponseCommentTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: GetProjectEnvResponseCommentContentHintRedisUrl
      redis-rest-api-url: GetProjectEnvResponseCommentContentHintRedisRestApiUrl
      redis-rest-api-token: GetProjectEnvResponseCommentContentHintRedisRestApiToken
      redis-rest-api-read-only-token: GetProjectEnvResponseCommentContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: GetProjectEnvResponseCommentContentHintBlobReadWriteToken
      postgres-url: GetProjectEnvResponseCommentContentHintPostgresUrl
      postgres-url-non-pooling: GetProjectEnvResponseCommentContentHintPostgresUrlNonPooling
      postgres-prisma-url: GetProjectEnvResponseCommentContentHintPostgresPrismaUrl
      postgres-user: GetProjectEnvResponseCommentContentHintPostgresUser
      postgres-host: GetProjectEnvResponseCommentContentHintPostgresHost
      postgres-password: GetProjectEnvResponseCommentContentHintPostgresPassword
      postgres-database: GetProjectEnvResponseCommentContentHintPostgresDatabase
      postgres-url-no-ssl: GetProjectEnvResponseCommentContentHintPostgresUrlNoSsl
      integration-store-secret: GetProjectEnvResponseCommentContentHintIntegrationStoreSecret
      flags-connection-string: GetProjectEnvResponseCommentContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  GetProjectEnvResponseCommentInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  GetProjectEnvResponseComment:
    properties:
      target: optional<GetProjectEnvResponseCommentTarget>
      type: GetProjectEnvResponseCommentType
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: string
      value: string
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<GetProjectEnvResponseCommentContentHint>
      internalContentHint:
        type: optional<GetProjectEnvResponseCommentInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
    source:
      openapi: openapi.json
  GetProjectEnvResponse:
    discriminated: false
    union:
      - GetProjectEnvResponseZero
      - GetProjectEnvResponseOne
      - GetProjectEnvResponseComment
    source:
      openapi: openapi.json
  CreateProjectEnvRequestBody:
    discriminated: false
    union:
      - unknown
      - list<unknown>
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentTarget:
    discriminated: false
    union:
      - list<CreateProjectEnvResponseCreatedCommentTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: CreateProjectEnvResponseCreatedCommentContentHintRedisUrl
      redis-rest-api-url: CreateProjectEnvResponseCreatedCommentContentHintRedisRestApiUrl
      redis-rest-api-token: CreateProjectEnvResponseCreatedCommentContentHintRedisRestApiToken
      redis-rest-api-read-only-token: >-
        CreateProjectEnvResponseCreatedCommentContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: CreateProjectEnvResponseCreatedCommentContentHintBlobReadWriteToken
      postgres-url: CreateProjectEnvResponseCreatedCommentContentHintPostgresUrl
      postgres-url-non-pooling: CreateProjectEnvResponseCreatedCommentContentHintPostgresUrlNonPooling
      postgres-prisma-url: CreateProjectEnvResponseCreatedCommentContentHintPostgresPrismaUrl
      postgres-user: CreateProjectEnvResponseCreatedCommentContentHintPostgresUser
      postgres-host: CreateProjectEnvResponseCreatedCommentContentHintPostgresHost
      postgres-password: CreateProjectEnvResponseCreatedCommentContentHintPostgresPassword
      postgres-database: CreateProjectEnvResponseCreatedCommentContentHintPostgresDatabase
      postgres-url-no-ssl: CreateProjectEnvResponseCreatedCommentContentHintPostgresUrlNoSsl
      integration-store-secret: CreateProjectEnvResponseCreatedCommentContentHintIntegrationStoreSecret
      flags-connection-string: CreateProjectEnvResponseCreatedCommentContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedCommentInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedComment:
    properties:
      target: optional<CreateProjectEnvResponseCreatedCommentTarget>
      type: optional<CreateProjectEnvResponseCreatedCommentType>
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: optional<string>
      value: optional<string>
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<CreateProjectEnvResponseCreatedCommentContentHint>
      internalContentHint:
        type: optional<CreateProjectEnvResponseCreatedCommentInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
      vsmValue: optional<string>
      system: optional<boolean>
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemTarget:
    discriminated: false
    union:
      - list<CreateProjectEnvResponseCreatedItemTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: CreateProjectEnvResponseCreatedItemContentHintRedisUrl
      redis-rest-api-url: CreateProjectEnvResponseCreatedItemContentHintRedisRestApiUrl
      redis-rest-api-token: CreateProjectEnvResponseCreatedItemContentHintRedisRestApiToken
      redis-rest-api-read-only-token: CreateProjectEnvResponseCreatedItemContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: CreateProjectEnvResponseCreatedItemContentHintBlobReadWriteToken
      postgres-url: CreateProjectEnvResponseCreatedItemContentHintPostgresUrl
      postgres-url-non-pooling: CreateProjectEnvResponseCreatedItemContentHintPostgresUrlNonPooling
      postgres-prisma-url: CreateProjectEnvResponseCreatedItemContentHintPostgresPrismaUrl
      postgres-user: CreateProjectEnvResponseCreatedItemContentHintPostgresUser
      postgres-host: CreateProjectEnvResponseCreatedItemContentHintPostgresHost
      postgres-password: CreateProjectEnvResponseCreatedItemContentHintPostgresPassword
      postgres-database: CreateProjectEnvResponseCreatedItemContentHintPostgresDatabase
      postgres-url-no-ssl: CreateProjectEnvResponseCreatedItemContentHintPostgresUrlNoSsl
      integration-store-secret: CreateProjectEnvResponseCreatedItemContentHintIntegrationStoreSecret
      flags-connection-string: CreateProjectEnvResponseCreatedItemContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItemInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreatedItem:
    properties:
      target: optional<CreateProjectEnvResponseCreatedItemTarget>
      type: optional<CreateProjectEnvResponseCreatedItemType>
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: optional<string>
      value: optional<string>
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<CreateProjectEnvResponseCreatedItemContentHint>
      internalContentHint:
        type: optional<CreateProjectEnvResponseCreatedItemInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
      vsmValue: optional<string>
      system: optional<boolean>
    source:
      openapi: openapi.json
  CreateProjectEnvResponseCreated:
    discriminated: false
    union:
      - CreateProjectEnvResponseCreatedComment
      - list<CreateProjectEnvResponseCreatedItem>
    source:
      openapi: openapi.json
  CreateProjectEnvResponseFailedItemErrorValueItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  CreateProjectEnvResponseFailedItemErrorValue:
    discriminated: false
    union:
      - string
      - list<CreateProjectEnvResponseFailedItemErrorValueItem>
    source:
      openapi: openapi.json
  CreateProjectEnvResponseFailedItemErrorTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  CreateProjectEnvResponseFailedItemErrorTarget:
    discriminated: false
    union:
      - list<CreateProjectEnvResponseFailedItemErrorTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  CreateProjectEnvResponseFailedItemError:
    properties:
      code: string
      message: string
      key: optional<string>
      envVarId: optional<string>
      envVarKey: optional<string>
      action: optional<string>
      link: optional<string>
      value: optional<CreateProjectEnvResponseFailedItemErrorValue>
      gitBranch: optional<string>
      target: optional<CreateProjectEnvResponseFailedItemErrorTarget>
      project: optional<string>
    source:
      openapi: openapi.json
  CreateProjectEnvResponseFailedItem:
    properties:
      error: CreateProjectEnvResponseFailedItemError
    source:
      openapi: openapi.json
  CreateProjectEnvResponse:
    properties:
      created: CreateProjectEnvResponseCreated
      failed: list<CreateProjectEnvResponseFailedItem>
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemTarget:
    discriminated: false
    union:
      - list<RemoveProjectEnvResponseItemTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: RemoveProjectEnvResponseItemContentHintRedisUrl
      redis-rest-api-url: RemoveProjectEnvResponseItemContentHintRedisRestApiUrl
      redis-rest-api-token: RemoveProjectEnvResponseItemContentHintRedisRestApiToken
      redis-rest-api-read-only-token: RemoveProjectEnvResponseItemContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: RemoveProjectEnvResponseItemContentHintBlobReadWriteToken
      postgres-url: RemoveProjectEnvResponseItemContentHintPostgresUrl
      postgres-url-non-pooling: RemoveProjectEnvResponseItemContentHintPostgresUrlNonPooling
      postgres-prisma-url: RemoveProjectEnvResponseItemContentHintPostgresPrismaUrl
      postgres-user: RemoveProjectEnvResponseItemContentHintPostgresUser
      postgres-host: RemoveProjectEnvResponseItemContentHintPostgresHost
      postgres-password: RemoveProjectEnvResponseItemContentHintPostgresPassword
      postgres-database: RemoveProjectEnvResponseItemContentHintPostgresDatabase
      postgres-url-no-ssl: RemoveProjectEnvResponseItemContentHintPostgresUrlNoSsl
      integration-store-secret: RemoveProjectEnvResponseItemContentHintIntegrationStoreSecret
      flags-connection-string: RemoveProjectEnvResponseItemContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItemInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseItem:
    properties:
      target: optional<RemoveProjectEnvResponseItemTarget>
      type: RemoveProjectEnvResponseItemType
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: string
      value: string
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<RemoveProjectEnvResponseItemContentHint>
      internalContentHint:
        type: optional<RemoveProjectEnvResponseItemInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
      vsmValue: optional<string>
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemTarget:
    discriminated: false
    union:
      - list<RemoveProjectEnvResponseSystemTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: RemoveProjectEnvResponseSystemContentHintRedisUrl
      redis-rest-api-url: RemoveProjectEnvResponseSystemContentHintRedisRestApiUrl
      redis-rest-api-token: RemoveProjectEnvResponseSystemContentHintRedisRestApiToken
      redis-rest-api-read-only-token: RemoveProjectEnvResponseSystemContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: RemoveProjectEnvResponseSystemContentHintBlobReadWriteToken
      postgres-url: RemoveProjectEnvResponseSystemContentHintPostgresUrl
      postgres-url-non-pooling: RemoveProjectEnvResponseSystemContentHintPostgresUrlNonPooling
      postgres-prisma-url: RemoveProjectEnvResponseSystemContentHintPostgresPrismaUrl
      postgres-user: RemoveProjectEnvResponseSystemContentHintPostgresUser
      postgres-host: RemoveProjectEnvResponseSystemContentHintPostgresHost
      postgres-password: RemoveProjectEnvResponseSystemContentHintPostgresPassword
      postgres-database: RemoveProjectEnvResponseSystemContentHintPostgresDatabase
      postgres-url-no-ssl: RemoveProjectEnvResponseSystemContentHintPostgresUrlNoSsl
      integration-store-secret: RemoveProjectEnvResponseSystemContentHintIntegrationStoreSecret
      flags-connection-string: RemoveProjectEnvResponseSystemContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystemInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseSystem:
    properties:
      system: optional<boolean>
      target: optional<RemoveProjectEnvResponseSystemTarget>
      type: RemoveProjectEnvResponseSystemType
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: string
      value: string
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<RemoveProjectEnvResponseSystemContentHint>
      internalContentHint:
        type: optional<RemoveProjectEnvResponseSystemInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
      vsmValue: optional<string>
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoTarget:
    discriminated: false
    union:
      - list<RemoveProjectEnvResponseTwoTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: RemoveProjectEnvResponseTwoContentHintRedisUrl
      redis-rest-api-url: RemoveProjectEnvResponseTwoContentHintRedisRestApiUrl
      redis-rest-api-token: RemoveProjectEnvResponseTwoContentHintRedisRestApiToken
      redis-rest-api-read-only-token: RemoveProjectEnvResponseTwoContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: RemoveProjectEnvResponseTwoContentHintBlobReadWriteToken
      postgres-url: RemoveProjectEnvResponseTwoContentHintPostgresUrl
      postgres-url-non-pooling: RemoveProjectEnvResponseTwoContentHintPostgresUrlNonPooling
      postgres-prisma-url: RemoveProjectEnvResponseTwoContentHintPostgresPrismaUrl
      postgres-user: RemoveProjectEnvResponseTwoContentHintPostgresUser
      postgres-host: RemoveProjectEnvResponseTwoContentHintPostgresHost
      postgres-password: RemoveProjectEnvResponseTwoContentHintPostgresPassword
      postgres-database: RemoveProjectEnvResponseTwoContentHintPostgresDatabase
      postgres-url-no-ssl: RemoveProjectEnvResponseTwoContentHintPostgresUrlNoSsl
      integration-store-secret: RemoveProjectEnvResponseTwoContentHintIntegrationStoreSecret
      flags-connection-string: RemoveProjectEnvResponseTwoContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwoInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  RemoveProjectEnvResponseTwo:
    properties:
      target: optional<RemoveProjectEnvResponseTwoTarget>
      type: RemoveProjectEnvResponseTwoType
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: string
      value: string
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<RemoveProjectEnvResponseTwoContentHint>
      internalContentHint:
        type: optional<RemoveProjectEnvResponseTwoInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
      vsmValue: optional<string>
    source:
      openapi: openapi.json
  RemoveProjectEnvResponse:
    discriminated: false
    union:
      - list<RemoveProjectEnvResponseItem>
      - RemoveProjectEnvResponseSystem
      - RemoveProjectEnvResponseTwo
    source:
      openapi: openapi.json
  EditProjectEnvRequestTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  EditProjectEnvRequestType:
    enum:
      - system
      - secret
      - encrypted
      - plain
      - sensitive
    docs: The type of environment variable
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentTargetItem:
    enum:
      - production
      - preview
      - development
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentTarget:
    discriminated: false
    union:
      - list<EditProjectEnvResponseCommentTargetItem>
      - literal<"production">
      - literal<"preview">
      - literal<"development">
      - literal<"preview">
      - literal<"development">
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentType:
    enum:
      - system
      - encrypted
      - plain
      - sensitive
      - secret
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHintRedisUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHintRedisRestApiUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHintRedisRestApiToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHintRedisRestApiReadOnlyToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHintBlobReadWriteToken:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHintPostgresUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHintPostgresUrlNonPooling:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHintPostgresPrismaUrl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHintPostgresUser:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHintPostgresHost:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHintPostgresPassword:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHintPostgresDatabase:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHintPostgresUrlNoSsl:
    properties:
      storeId: string
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHintIntegrationStoreSecret:
    properties:
      storeId: string
      integrationId: string
      integrationProductId: string
      integrationConfigurationId: string
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHintFlagsConnectionString:
    properties:
      projectId: string
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentContentHint:
    discriminant: type
    base-properties: {}
    union:
      redis-url: EditProjectEnvResponseCommentContentHintRedisUrl
      redis-rest-api-url: EditProjectEnvResponseCommentContentHintRedisRestApiUrl
      redis-rest-api-token: EditProjectEnvResponseCommentContentHintRedisRestApiToken
      redis-rest-api-read-only-token: EditProjectEnvResponseCommentContentHintRedisRestApiReadOnlyToken
      blob-read-write-token: EditProjectEnvResponseCommentContentHintBlobReadWriteToken
      postgres-url: EditProjectEnvResponseCommentContentHintPostgresUrl
      postgres-url-non-pooling: EditProjectEnvResponseCommentContentHintPostgresUrlNonPooling
      postgres-prisma-url: EditProjectEnvResponseCommentContentHintPostgresPrismaUrl
      postgres-user: EditProjectEnvResponseCommentContentHintPostgresUser
      postgres-host: EditProjectEnvResponseCommentContentHintPostgresHost
      postgres-password: EditProjectEnvResponseCommentContentHintPostgresPassword
      postgres-database: EditProjectEnvResponseCommentContentHintPostgresDatabase
      postgres-url-no-ssl: EditProjectEnvResponseCommentContentHintPostgresUrlNoSsl
      integration-store-secret: EditProjectEnvResponseCommentContentHintIntegrationStoreSecret
      flags-connection-string: EditProjectEnvResponseCommentContentHintFlagsConnectionString
    source:
      openapi: openapi.json
  EditProjectEnvResponseCommentInternalContentHint:
    docs: Similar to `contentHints`, but should not be exposed to the user.
    properties:
      type: literal<"flags-secret">
      encryptedValue:
        type: string
        docs: >-
          Contains the `value` of the env variable, encrypted with a special key
          to make decryption possible in the subscriber Lambda.
    source:
      openapi: openapi.json
  EditProjectEnvResponseComment:
    properties:
      target: optional<EditProjectEnvResponseCommentTarget>
      type: EditProjectEnvResponseCommentType
      sunsetSecretId:
        type: optional<string>
        docs: >-
          This is used to identiy variables that have been migrated from type
          secret to sensitive.
      id: optional<string>
      key: string
      value: string
      configurationId: optional<string>
      createdAt: optional<double>
      updatedAt: optional<double>
      createdBy: optional<string>
      updatedBy: optional<string>
      gitBranch: optional<string>
      edgeConfigId: optional<string>
      edgeConfigTokenId: optional<string>
      contentHint: optional<EditProjectEnvResponseCommentContentHint>
      internalContentHint:
        type: optional<EditProjectEnvResponseCommentInternalContentHint>
        docs: Similar to `contentHints`, but should not be exposed to the user.
      decrypted:
        type: optional<boolean>
        docs: Whether `value` and `vsmValue` are decrypted.
      comment: optional<string>
      customEnvironmentIds: optional<list<string>>
    source:
      openapi: openapi.json
  EditProjectEnvResponse:
    discriminated: false
    union:
      - EditProjectEnvResponseComment
      - map<string, unknown>
    source:
      openapi: openapi.json
  UpdateProjectProtectionBypassRequestRevoke:
    docs: Optional instructions for revoking and regenerating a automation bypass
    properties:
      secret:
        type: string
        docs: Automation bypass to revoked
      regenerate:
        type: boolean
        docs: >-
          Whether or not a new automation bypass should be created after the
          provided secret is revoked
    source:
      openapi: openapi.json
  UpdateProjectProtectionBypassResponseProtectionBypassValue:
    properties:
      createdAt: double
      createdBy: string
      scope: literal<"automation-bypass">
    source:
      openapi: openapi.json
  UpdateProjectProtectionBypassResponse:
    properties:
      protectionBypass: >-
        optional<map<string,
        UpdateProjectProtectionBypassResponseProtectionBypassValue>>
    source:
      openapi: openapi.json
  ListPromoteAliasesResponseAliasesAliasesItem:
    properties:
      status: string
      alias: string
      id: string
    source:
      openapi: openapi.json
  ListPromoteAliasesResponseAliases:
    properties:
      aliases: list<ListPromoteAliasesResponseAliasesAliasesItem>
      pagination: root.Pagination
    source:
      openapi: openapi.json
  ListPromoteAliasesResponse:
    discriminated: false
    union:
      - map<string, unknown>
      - ListPromoteAliasesResponseAliases
    source:
      openapi: openapi.json
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    updateProjectDataCache:
      path: /v1/data-cache/projects/{projectId}
      method: PATCH
      auth: true
      docs: Update the data cache feature on a project.
      path-parameters:
        projectId:
          type: string
          docs: The unique project identifier
      display-name: Update the data cache feature
      request:
        name: UpdateProjectDataCacheRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
        body:
          properties:
            disabled:
              type: optional<boolean>
              docs: 'Enable or disable data cache for the project - default: false'
      response:
        docs: ''
        type: UpdateProjectDataCacheResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
      examples:
        - path-parameters:
            projectId: prj_12HKQaOmR5t5Uy6vdcQsNIiZgHGB
          request: {}
          response:
            body:
              accountId: accountId
              analytics:
                id: id
                canceledAt: 1.1
                disabledAt: 1.1
                enabledAt: 1.1
                paidAt: 1.1
                sampleRatePercent: 1.1
                spendLimitInDollars: 1.1
              speedInsights:
                id: id
                enabledAt: 1.1
                disabledAt: 1.1
                canceledAt: 1.1
                hasData: true
                paidAt: 1.1
              autoExposeSystemEnvs: true
              autoAssignCustomDomains: true
              autoAssignCustomDomainsUpdatedBy: autoAssignCustomDomainsUpdatedBy
              buildCommand: buildCommand
              commandForIgnoringBuildStep: commandForIgnoringBuildStep
              connectConfigurationId: connectConfigurationId
              connectBuildsEnabled: true
              createdAt: 1.1
              customerSupportCodeVisibility: true
              crons:
                enabledAt: 1.1
                disabledAt: 1.1
                updatedAt: 1.1
                deploymentId: deploymentId
                definitions:
                  - host: vercel.com
                    path: /api/crons/sync-something?hello=world
                    schedule: 0 0 * * *
              dataCache:
                userDisabled: true
                storageSizeBytes: 1.1
                unlimited: true
              deploymentExpiration:
                expirationDays: 1.1
                expirationDaysProduction: 1.1
                expirationDaysCanceled: 1.1
                expirationDaysErrored: 1.1
                deploymentsToKeep: 1.1
              devCommand: devCommand
              directoryListing: true
              installCommand: installCommand
              env:
                - target:
                    - production
                  type: secret
                  sunsetSecretId: sunsetSecretId
                  id: id
                  key: key
                  value: value
                  configurationId: configurationId
                  createdAt: 1.1
                  updatedAt: 1.1
                  createdBy: createdBy
                  updatedBy: updatedBy
                  gitBranch: gitBranch
                  edgeConfigId: edgeConfigId
                  edgeConfigTokenId: edgeConfigTokenId
                  contentHint:
                    type: flags-connection-string
                    projectId: contentHint
                  internalContentHint:
                    type: flags-secret
                    encryptedValue: encryptedValue
                  decrypted: true
                  comment: comment
                  customEnvironmentIds:
                    - customEnvironmentIds
                  vsmValue: vsmValue
              customEnvironments:
                - id: id
                  name: name
                  slug: slug
                  type: production
                  description: description
                  branchMatcher:
                    type: endsWith
                    pattern: pattern
                  createdAt: 1.1
                  updatedAt: 1.1
                  domains:
                    - name: name
                      apexName: apexName
                      projectId: projectId
                      verified: true
                  currentDeploymentAliases:
                    - currentDeploymentAliases
              framework: blitzjs
              gitForkProtection: true
              gitLFS: true
              id: id
              latestDeployments:
                - id: id
                  alias:
                    - alias
                  aliasAssigned: 1.1
                  aliasError:
                    code: code
                    message: message
                  aliasFinal: aliasFinal
                  automaticAliases:
                    - automaticAliases
                  buildingAt: 1.1
                  builds:
                    - use: use
                  checksConclusion: succeeded
                  checksState: registered
                  connectBuildsEnabled: true
                  connectConfigurationId: connectConfigurationId
                  createdAt: 1.1
                  createdIn: createdIn
                  creator:
                    email: email
                    uid: uid
                    username: username
                  deletedAt: 1.1
                  deploymentHostname: deploymentHostname
                  forced: true
                  name: name
                  meta:
                    key: value
                  monorepoManager: monorepoManager
                  oidcTokenClaims:
                    sub: sub
                    scope: scope
                    aud: aud
                    owner: owner
                    owner_id: owner_id
                    project: project
                    project_id: project_id
                    environment: environment
                  plan: pro
                  previewCommentsEnabled: false
                  private: true
                  readyAt: 1.1
                  readyState: BUILDING
                  readySubstate: STAGED
                  requestedAt: 1.1
                  target: target
                  teamId: teamId
                  type: LAMBDAS
                  url: url
                  userId: userId
                  withCache: true
              link:
                type: bitbucket
                name: link
                slug: link
                owner: link
                uuid: link
                workspaceUuid: link
                createdAt: 1.1
                deployHooks:
                  - id: id
                    name: name
                    ref: ref
                    url: url
                gitCredentialId: link
                updatedAt: 1.1
                sourceless: true
                productionBranch: link
              name: name
              nodeVersion: 20.x
              optionsAllowlist:
                paths:
                  - value: value
              outputDirectory: outputDirectory
              passiveConnectConfigurationId: passiveConnectConfigurationId
              passwordProtection:
                key: value
              productionDeploymentsFastLane: true
              publicSource: true
              resourceConfig:
                functionDefaultTimeout: 1.1
                functionDefaultMemoryType: standard_legacy
              rootDirectory: rootDirectory
              serverlessFunctionRegion: serverlessFunctionRegion
              serverlessFunctionZeroConfigFailover: true
              skewProtectionBoundaryAt: 1.1
              skewProtectionMaxAge: 1.1
              skipGitConnectDuringLink: true
              sourceFilesOutsideRootDirectory: true
              enableAffectedProjectsDeployments: true
              ssoProtection:
                deploymentType: preview
              targets:
                key:
                  id: id
                  alias:
                    - alias
                  aliasAssigned: 1.1
                  aliasError:
                    code: code
                    message: message
                  aliasFinal: aliasFinal
                  automaticAliases:
                    - automaticAliases
                  buildingAt: 1.1
                  builds:
                    - use: use
                  checksConclusion: succeeded
                  checksState: registered
                  connectBuildsEnabled: true
                  connectConfigurationId: connectConfigurationId
                  createdAt: 1.1
                  createdIn: createdIn
                  creator:
                    email: email
                    uid: uid
                    username: username
                  deletedAt: 1.1
                  deploymentHostname: deploymentHostname
                  forced: true
                  name: name
                  meta:
                    key: value
                  monorepoManager: monorepoManager
                  oidcTokenClaims:
                    sub: sub
                    scope: scope
                    aud: aud
                    owner: owner
                    owner_id: owner_id
                    project: project
                    project_id: project_id
                    environment: environment
                  plan: pro
                  previewCommentsEnabled: false
                  private: true
                  readyAt: 1.1
                  readyState: BUILDING
                  readySubstate: STAGED
                  requestedAt: 1.1
                  target: target
                  teamId: teamId
                  type: LAMBDAS
                  url: url
                  userId: userId
                  withCache: true
              transferCompletedAt: 1.1
              transferStartedAt: 1.1
              transferToAccountId: transferToAccountId
              transferredFromAccountId: transferredFromAccountId
              updatedAt: 1.1
              live: true
              enablePreviewFeedback: true
              enableProductionFeedback: true
              permissions:
                accessGroup:
                  - create
                aliasGlobal:
                  - create
                analyticsSampling:
                  - create
                analyticsUsage:
                  - create
                auditLog:
                  - create
                billingAddress:
                  - create
                billingInformation:
                  - create
                billingInvoice:
                  - create
                billingInvoiceEmailRecipient:
                  - create
                billingInvoiceLanguage:
                  - create
                billingPlan:
                  - create
                billingPurchaseOrder:
                  - create
                billingTaxId:
                  - create
                blob:
                  - create
                budget:
                  - create
                cacheArtifact:
                  - create
                cacheArtifactUsageEvent:
                  - create
                codeChecks:
                  - create
                concurrentBuilds:
                  - create
                connect:
                  - create
                connectConfiguration:
                  - create
                domain:
                  - create
                domainAcceptDelegation:
                  - create
                domainAuthCodes:
                  - create
                domainCertificate:
                  - create
                domainCheckConfig:
                  - create
                domainMove:
                  - create
                domainPurchase:
                  - create
                domainRecord:
                  - create
                domainTransferIn:
                  - create
                event:
                  - create
                ownEvent:
                  - create
                sensitiveEnvironmentVariablePolicy:
                  - create
                fileUpload:
                  - create
                gitRepository:
                  - create
                ipBlocking:
                  - create
                integration:
                  - create
                integrationAccount:
                  - create
                integrationConfiguration:
                  - create
                integrationConfigurationTransfer:
                  - create
                integrationConfigurationProjects:
                  - create
                integrationVercelConfigurationOverride:
                  - create
                integrationConfigurationRole:
                  - create
                integrationResource:
                  - create
                integrationEvent:
                  - create
                integrationResourceSecrets:
                  - create
                marketplaceInstallationMember:
                  - create
                marketplaceBillingData:
                  - create
                marketplaceInvoice:
                  - create
                jobGlobal:
                  - create
                logDrain:
                  - create
                Monitoring:
                  - create
                monitoringSettings:
                  - create
                monitoringQuery:
                  - create
                monitoringChart:
                  - create
                monitoringAlert:
                  - create
                notificationDeploymentFailed:
                  - create
                notificationDomainConfiguration:
                  - create
                notificationDomainExpire:
                  - create
                notificationDomainMoved:
                  - create
                notificationDomainPurchase:
                  - create
                notificationDomainRenewal:
                  - create
                notificationDomainTransfer:
                  - create
                notificationDomainUnverified:
                  - create
                NotificationMonitoringAlert:
                  - create
                notificationPaymentFailed:
                  - create
                notificationUsageAlert:
                  - create
                notificationCustomerBudget:
                  - create
                notificationStatementOfReasons:
                  - create
                oauth2Connection:
                  - create
                openTelemetryEndpoint:
                  - create
                paymentMethod:
                  - create
                permissions:
                  - create
                postgres:
                  - create
                previewDeploymentSuffix:
                  - create
                proTrialOnboarding:
                  - create
                sharedEnvVars:
                  - create
                sharedEnvVarsProduction:
                  - create
                space:
                  - create
                spaceRun:
                  - create
                passwordProtectionInvoiceItem:
                  - create
                rateLimit:
                  - create
                redis:
                  - create
                repository:
                  - create
                remoteCaching:
                  - create
                samlConfig:
                  - create
                secret:
                  - create
                redisStoreTokenSet:
                  - create
                blobStoreTokenSet:
                  - create
                postgresStoreTokenSet:
                  - create
                integrationStoreTokenSet:
                  - create
                integrationResourceReplCommand:
                  - create
                storeTransfer:
                  - create
                supportCase:
                  - create
                supportCaseComment:
                  - create
                dataCacheBillingSettings:
                  - create
                team:
                  - create
                teamAccessRequest:
                  - create
                teamFellowMembership:
                  - create
                teamGitExclusivity:
                  - create
                teamInvite:
                  - create
                teamInviteCode:
                  - create
                teamJoin:
                  - create
                teamOwnMembership:
                  - create
                teamOwnMembershipDisconnectSAML:
                  - create
                token:
                  - create
                usage:
                  - create
                usageCycle:
                  - create
                user:
                  - create
                userConnection:
                  - create
                vpcPeeringConnection:
                  - create
                webAnalyticsPlan:
                  - create
                webAuthn:
                  - create
                edgeConfig:
                  - create
                edgeConfigItem:
                  - create
                edgeConfigSchema:
                  - create
                edgeConfigToken:
                  - create
                webhook:
                  - create
                webhook-event:
                  - create
                endpointVerification:
                  - create
                projectTransferIn:
                  - create
                oauth2Application:
                  - create
                aliasProject:
                  - create
                aliasProtectionBypass:
                  - create
                productionAliasProtectionBypass:
                  - create
                connectConfigurationLink:
                  - create
                dataCacheNamespace:
                  - create
                deployment:
                  - create
                deploymentCheck:
                  - create
                deploymentCheckPreview:
                  - create
                deploymentCheckReRunFromProductionBranch:
                  - create
                deploymentProductionGit:
                  - create
                deploymentPreview:
                  - create
                deploymentPrivate:
                  - create
                deploymentPromote:
                  - create
                deploymentRollback:
                  - create
                environments:
                  - create
                logs:
                  - create
                logsPreset:
                  - create
                passwordProtection:
                  - create
                optionsAllowlist:
                  - create
                job:
                  - create
                project:
                  - create
                projectAccessGroup:
                  - create
                projectAnalyticsSampling:
                  - create
                projectDeploymentHook:
                  - create
                projectDomain:
                  - create
                projectDomainMove:
                  - create
                projectDomainCheckConfig:
                  - create
                projectEnvVars:
                  - create
                projectEnvVarsProduction:
                  - create
                projectEnvVarsUnownedByIntegration:
                  - create
                projectFlags:
                  - create
                projectId:
                  - create
                projectIntegrationConfiguration:
                  - create
                projectLink:
                  - create
                projectMember:
                  - create
                projectMonitoring:
                  - create
                projectPermissions:
                  - create
                projectProductionBranch:
                  - create
                projectTransfer:
                  - create
                projectTransferOut:
                  - create
                projectProtectionBypass:
                  - create
                projectUsage:
                  - create
                projectAnalyticsUsage:
                  - create
                projectSupportCase:
                  - create
                projectSupportCaseComment:
                  - create
                projectDeploymentExpiration:
                  - create
                projectTier:
                  - create
                seawallConfig:
                  - create
                skewProtection:
                  - create
                analytics:
                  - create
                trustedIps:
                  - create
                webAnalytics:
                  - create
                sharedEnvVarConnection:
                  - create
                sonar:
                  - create
              lastRollbackTarget:
                key: value
              lastAliasRequest:
                fromDeploymentId: fromDeploymentId
                toDeploymentId: toDeploymentId
                jobStatus: succeeded
                requestedAt: 1.1
                type: promote
              hasFloatingAliases: true
              protectionBypass:
                key:
                  createdAt: 1.1
                  createdBy: createdBy
                  scope: automation-bypass
              hasActiveBranches: true
              trustedIps:
                deploymentType: production
                addresses:
                  - value: value
                protectionMode: additional
              gitComments:
                onPullRequest: true
                onCommit: true
              paused: true
              concurrencyBucketName: concurrencyBucketName
              webAnalytics:
                id: id
                disabledAt: 1.1
                canceledAt: 1.1
                enabledAt: 1.1
                hasData: true
              security:
                attackModeEnabled: true
                attackModeUpdatedAt: 1.1
                firewallEnabled: true
                firewallUpdatedAt: 1.1
                attackModeActiveUntil: 1.1
                firewallConfigVersion: 1.1
                firewallRoutes:
                  - {}
                firewallSeawallEnabled: true
                ja3Enabled: true
                ja4Enabled: true
              oidcTokenConfig:
                enabled: true
              tier: standard
    getProjects:
      path: /v9/projects
      method: GET
      auth: true
      docs: >-
        Allows to retrieve the list of projects of the authenticated user or
        team. The list will be paginated and the provided query parameters allow
        filtering the returned projects.
      display-name: Retrieve a list of projects
      request:
        name: GetProjectsRequest
        query-parameters:
          from:
            type: optional<string>
            docs: Query only projects updated after the given timestamp
          gitForkProtection:
            type: optional<GetProjectsRequestGitForkProtection>
            docs: >-
              Specifies whether PRs from Git forks should require a team
              member's authorization before it can be deployed
          limit:
            type: optional<string>
            docs: Limit the number of projects returned
          search:
            type: optional<string>
            docs: Search projects by the name field
          repo:
            type: optional<string>
            docs: Filter results by repo. Also used for project count
          repoId:
            type: optional<string>
            docs: Filter results by Repository ID.
          repoUrl:
            type: optional<string>
            docs: Filter results by Repository URL.
          excludeRepos:
            type: optional<string>
            docs: Filter results by excluding those projects that belong to a repo
          edgeConfigId:
            type: optional<string>
            docs: Filter results by connected Edge Config ID
          edgeConfigTokenId:
            type: optional<string>
            docs: Filter results by connected Edge Config Token ID
          deprecated: optional<boolean>
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      response:
        docs: The paginated list of projects
        type: GetProjectsResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
      examples:
        - query-parameters:
            repoUrl: https://github.com/vercel/next.js
          response:
            body:
              projects:
                - accountId: accountId
                  analytics:
                    id: id
                    disabledAt: 1.1
                    enabledAt: 1.1
                  speedInsights:
                    id: id
                  autoExposeSystemEnvs: true
                  autoAssignCustomDomains: true
                  autoAssignCustomDomainsUpdatedBy: autoAssignCustomDomainsUpdatedBy
                  buildCommand: buildCommand
                  commandForIgnoringBuildStep: commandForIgnoringBuildStep
                  connectConfigurationId: connectConfigurationId
                  connectBuildsEnabled: true
                  createdAt: 1.1
                  customerSupportCodeVisibility: true
                  crons:
                    enabledAt: 1.1
                    updatedAt: 1.1
                    definitions:
                      - host: vercel.com
                        path: /api/crons/sync-something?hello=world
                        schedule: 0 0 * * *
                  dataCache:
                    userDisabled: true
                  devCommand: devCommand
                  directoryListing: true
                  installCommand: installCommand
                  env:
                    - type: system
                      key: key
                      value: value
                  customEnvironments:
                    - id: id
                      name: name
                      slug: slug
                      type: production
                      createdAt: 1.1
                      updatedAt: 1.1
                  framework: blitzjs
                  gitForkProtection: true
                  gitLFS: true
                  id: id
                  latestDeployments:
                    - id: id
                      createdAt: 1.1
                      createdIn: createdIn
                      deploymentHostname: deploymentHostname
                      name: name
                      plan: pro
                      previewCommentsEnabled: false
                      private: true
                      readyState: BUILDING
                      type: LAMBDAS
                      url: url
                      userId: userId
                  link:
                    type: bitbucket
                    deployHooks:
                      - id: id
                        name: name
                        ref: ref
                        url: url
                  name: name
                  nodeVersion: 20.x
                  optionsAllowlist:
                    paths:
                      - value: value
                  outputDirectory: outputDirectory
                  passiveConnectConfigurationId: passiveConnectConfigurationId
                  passwordProtection:
                    key: value
                  productionDeploymentsFastLane: true
                  publicSource: true
                  rootDirectory: rootDirectory
                  serverlessFunctionRegion: serverlessFunctionRegion
                  serverlessFunctionZeroConfigFailover: true
                  skewProtectionBoundaryAt: 1.1
                  skewProtectionMaxAge: 1.1
                  skipGitConnectDuringLink: true
                  sourceFilesOutsideRootDirectory: true
                  enableAffectedProjectsDeployments: true
                  ssoProtection:
                    deploymentType: preview
                  transferCompletedAt: 1.1
                  transferStartedAt: 1.1
                  transferToAccountId: transferToAccountId
                  transferredFromAccountId: transferredFromAccountId
                  updatedAt: 1.1
                  live: true
                  enablePreviewFeedback: true
                  enableProductionFeedback: true
                  lastRollbackTarget:
                    key: value
                  lastAliasRequest:
                    fromDeploymentId: fromDeploymentId
                    toDeploymentId: toDeploymentId
                    jobStatus: succeeded
                    requestedAt: 1.1
                    type: promote
                  hasFloatingAliases: true
                  protectionBypass:
                    key:
                      createdAt: 1.1
                      createdBy: createdBy
                      scope: automation-bypass
                  hasActiveBranches: true
                  trustedIps:
                    deploymentType: production
                    addresses:
                      - value: value
                    protectionMode: additional
                  gitComments:
                    onPullRequest: true
                    onCommit: true
                  paused: true
                  concurrencyBucketName: concurrencyBucketName
                  webAnalytics:
                    id: id
                  oidcTokenConfig:
                    enabled: true
                  tier: standard
              pagination:
                count: 20
                next: 1540095775951
                prev: 1540095775951
    createProject:
      path: /v10/projects
      method: POST
      auth: true
      docs: >-
        Allows to create a new project with the provided configuration. It only
        requires the project `name` but more configuration can be provided to
        override the defaults.
      display-name: Create a new project
      request:
        name: CreateProjectRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
        body:
          properties:
            buildCommand:
              type: optional<string>
              docs: >-
                The build command for this project. When `null` is used this
                value will be automatically detected
              validation:
                maxLength: 256
            commandForIgnoringBuildStep:
              type: optional<string>
              validation:
                maxLength: 256
            devCommand:
              type: optional<string>
              docs: >-
                The dev command for this project. When `null` is used this value
                will be automatically detected
              validation:
                maxLength: 256
            environmentVariables:
              type: optional<list<CreateProjectRequestEnvironmentVariablesItem>>
              docs: Collection of ENV Variables the Project will use
            framework:
              type: optional<string>
              docs: >-
                The framework that is being used for this project. When `null`
                is used no framework is selected
            gitRepository:
              type: optional<CreateProjectRequestGitRepository>
              docs: >-
                The Git Repository that will be connected to the project. When
                this is defined, any pushes to the specified connected Git
                Repository will be automatically deployed
            installCommand:
              type: optional<string>
              docs: >-
                The install command for this project. When `null` is used this
                value will be automatically detected
              validation:
                maxLength: 256
            name:
              type: string
              docs: The desired name for the project
              validation:
                pattern: ^(?!.*---)[a-z0-9-_.]+$
                maxLength: 100
            skipGitConnectDuringLink:
              type: optional<boolean>
              docs: >-
                Opts-out of the message prompting a CLI user to connect a Git
                repository in `vercel link`.
              availability: deprecated
            outputDirectory:
              type: optional<string>
              docs: >-
                The output directory of the project. When `null` is used this
                value will be automatically detected
              validation:
                maxLength: 256
            publicSource:
              type: optional<boolean>
              docs: >-
                Specifies whether the source code and logs of the deployments
                for this project should be public or not
            rootDirectory:
              type: optional<string>
              docs: >-
                The name of a directory or relative path to the source code of
                your project. When `null` is used it will default to the project
                root
              validation:
                maxLength: 256
            serverlessFunctionRegion:
              type: optional<string>
              docs: The region to deploy Serverless Functions in this project
              validation:
                maxLength: 4
            serverlessFunctionZeroConfigFailover: optional<boolean>
            oidcTokenConfig:
              type: optional<CreateProjectRequestOidcTokenConfig>
              docs: OpenID Connect JSON Web Token generation configuration.
            enableAffectedProjectsDeployments:
              type: optional<boolean>
              docs: >-
                Opt-in to skip deployments when there are no changes to the root
                directory and its dependencies
      response:
        docs: The project was successfuly created
        type: CreateProjectResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.PaymentRequiredError
        - root.ForbiddenError
        - root.ConflictError
      examples:
        - request:
            name: a-project-name
          response:
            body:
              accountId: accountId
              analytics:
                id: id
                canceledAt: 1.1
                disabledAt: 1.1
                enabledAt: 1.1
                paidAt: 1.1
                sampleRatePercent: 1.1
                spendLimitInDollars: 1.1
              speedInsights:
                id: id
                enabledAt: 1.1
                disabledAt: 1.1
                canceledAt: 1.1
                hasData: true
                paidAt: 1.1
              autoExposeSystemEnvs: true
              autoAssignCustomDomains: true
              autoAssignCustomDomainsUpdatedBy: autoAssignCustomDomainsUpdatedBy
              buildCommand: buildCommand
              commandForIgnoringBuildStep: commandForIgnoringBuildStep
              connectConfigurationId: connectConfigurationId
              connectBuildsEnabled: true
              createdAt: 1.1
              customerSupportCodeVisibility: true
              crons:
                enabledAt: 1.1
                disabledAt: 1.1
                updatedAt: 1.1
                deploymentId: deploymentId
                definitions:
                  - host: vercel.com
                    path: /api/crons/sync-something?hello=world
                    schedule: 0 0 * * *
              dataCache:
                userDisabled: true
                storageSizeBytes: 1.1
                unlimited: true
              deploymentExpiration:
                expirationDays: 1.1
                expirationDaysProduction: 1.1
                expirationDaysCanceled: 1.1
                expirationDaysErrored: 1.1
                deploymentsToKeep: 1.1
              devCommand: devCommand
              directoryListing: true
              installCommand: installCommand
              env:
                - target:
                    - production
                  type: system
                  sunsetSecretId: sunsetSecretId
                  id: id
                  key: key
                  value: value
                  configurationId: configurationId
                  createdAt: 1.1
                  updatedAt: 1.1
                  createdBy: createdBy
                  updatedBy: updatedBy
                  gitBranch: gitBranch
                  edgeConfigId: edgeConfigId
                  edgeConfigTokenId: edgeConfigTokenId
                  contentHint:
                    type: flags-connection-string
                    projectId: contentHint
                  internalContentHint:
                    type: flags-secret
                    encryptedValue: encryptedValue
                  decrypted: true
                  comment: comment
                  customEnvironmentIds:
                    - customEnvironmentIds
                  vsmValue: vsmValue
              customEnvironments:
                - id: id
                  name: name
                  slug: slug
                  type: production
                  description: description
                  branchMatcher:
                    type: endsWith
                    pattern: pattern
                  createdAt: 1.1
                  updatedAt: 1.1
                  domains:
                    - name: name
                      apexName: apexName
                      projectId: projectId
                      verified: true
                  currentDeploymentAliases:
                    - currentDeploymentAliases
              framework: blitzjs
              gitForkProtection: true
              gitLFS: true
              id: id
              latestDeployments:
                - id: id
                  alias:
                    - alias
                  aliasAssigned: 1.1
                  aliasError:
                    code: code
                    message: message
                  aliasFinal: aliasFinal
                  automaticAliases:
                    - automaticAliases
                  buildingAt: 1.1
                  builds:
                    - use: use
                  checksConclusion: succeeded
                  checksState: registered
                  connectBuildsEnabled: true
                  connectConfigurationId: connectConfigurationId
                  createdAt: 1.1
                  createdIn: createdIn
                  creator:
                    email: email
                    uid: uid
                    username: username
                  deletedAt: 1.1
                  deploymentHostname: deploymentHostname
                  forced: true
                  name: name
                  meta:
                    key: value
                  monorepoManager: monorepoManager
                  oidcTokenClaims:
                    sub: sub
                    scope: scope
                    aud: aud
                    owner: owner
                    owner_id: owner_id
                    project: project
                    project_id: project_id
                    environment: environment
                  plan: pro
                  previewCommentsEnabled: false
                  private: true
                  readyAt: 1.1
                  readyState: BUILDING
                  readySubstate: STAGED
                  requestedAt: 1.1
                  target: target
                  teamId: teamId
                  type: LAMBDAS
                  url: url
                  userId: userId
                  withCache: true
              link:
                type: bitbucket
                name: link
                slug: link
                owner: link
                uuid: link
                workspaceUuid: link
                createdAt: 1.1
                deployHooks:
                  - id: id
                    name: name
                    ref: ref
                    url: url
                gitCredentialId: link
                updatedAt: 1.1
                sourceless: true
                productionBranch: link
              name: name
              nodeVersion: 20.x
              optionsAllowlist:
                paths:
                  - value: value
              outputDirectory: outputDirectory
              passiveConnectConfigurationId: passiveConnectConfigurationId
              passwordProtection:
                key: value
              productionDeploymentsFastLane: true
              publicSource: true
              resourceConfig:
                functionDefaultTimeout: 1.1
                functionDefaultMemoryType: standard_legacy
              rootDirectory: rootDirectory
              serverlessFunctionRegion: serverlessFunctionRegion
              serverlessFunctionZeroConfigFailover: true
              skewProtectionBoundaryAt: 1.1
              skewProtectionMaxAge: 1.1
              skipGitConnectDuringLink: true
              sourceFilesOutsideRootDirectory: true
              enableAffectedProjectsDeployments: true
              ssoProtection:
                deploymentType: preview
              targets:
                key:
                  id: id
                  alias:
                    - alias
                  aliasAssigned: 1.1
                  aliasError:
                    code: code
                    message: message
                  aliasFinal: aliasFinal
                  automaticAliases:
                    - automaticAliases
                  buildingAt: 1.1
                  builds:
                    - use: use
                  checksConclusion: succeeded
                  checksState: registered
                  connectBuildsEnabled: true
                  connectConfigurationId: connectConfigurationId
                  createdAt: 1.1
                  createdIn: createdIn
                  creator:
                    email: email
                    uid: uid
                    username: username
                  deletedAt: 1.1
                  deploymentHostname: deploymentHostname
                  forced: true
                  name: name
                  meta:
                    key: value
                  monorepoManager: monorepoManager
                  oidcTokenClaims:
                    sub: sub
                    scope: scope
                    aud: aud
                    owner: owner
                    owner_id: owner_id
                    project: project
                    project_id: project_id
                    environment: environment
                  plan: pro
                  previewCommentsEnabled: false
                  private: true
                  readyAt: 1.1
                  readyState: BUILDING
                  readySubstate: STAGED
                  requestedAt: 1.1
                  target: target
                  teamId: teamId
                  type: LAMBDAS
                  url: url
                  userId: userId
                  withCache: true
              transferCompletedAt: 1.1
              transferStartedAt: 1.1
              transferToAccountId: transferToAccountId
              transferredFromAccountId: transferredFromAccountId
              updatedAt: 1.1
              live: true
              enablePreviewFeedback: true
              enableProductionFeedback: true
              permissions:
                accessGroup:
                  - create
                aliasGlobal:
                  - create
                analyticsSampling:
                  - create
                analyticsUsage:
                  - create
                auditLog:
                  - create
                billingAddress:
                  - create
                billingInformation:
                  - create
                billingInvoice:
                  - create
                billingInvoiceEmailRecipient:
                  - create
                billingInvoiceLanguage:
                  - create
                billingPlan:
                  - create
                billingPurchaseOrder:
                  - create
                billingTaxId:
                  - create
                blob:
                  - create
                budget:
                  - create
                cacheArtifact:
                  - create
                cacheArtifactUsageEvent:
                  - create
                codeChecks:
                  - create
                concurrentBuilds:
                  - create
                connect:
                  - create
                connectConfiguration:
                  - create
                domain:
                  - create
                domainAcceptDelegation:
                  - create
                domainAuthCodes:
                  - create
                domainCertificate:
                  - create
                domainCheckConfig:
                  - create
                domainMove:
                  - create
                domainPurchase:
                  - create
                domainRecord:
                  - create
                domainTransferIn:
                  - create
                event:
                  - create
                ownEvent:
                  - create
                sensitiveEnvironmentVariablePolicy:
                  - create
                fileUpload:
                  - create
                gitRepository:
                  - create
                ipBlocking:
                  - create
                integration:
                  - create
                integrationAccount:
                  - create
                integrationConfiguration:
                  - create
                integrationConfigurationTransfer:
                  - create
                integrationConfigurationProjects:
                  - create
                integrationVercelConfigurationOverride:
                  - create
                integrationConfigurationRole:
                  - create
                integrationResource:
                  - create
                integrationEvent:
                  - create
                integrationResourceSecrets:
                  - create
                marketplaceInstallationMember:
                  - create
                marketplaceBillingData:
                  - create
                marketplaceInvoice:
                  - create
                jobGlobal:
                  - create
                logDrain:
                  - create
                Monitoring:
                  - create
                monitoringSettings:
                  - create
                monitoringQuery:
                  - create
                monitoringChart:
                  - create
                monitoringAlert:
                  - create
                notificationDeploymentFailed:
                  - create
                notificationDomainConfiguration:
                  - create
                notificationDomainExpire:
                  - create
                notificationDomainMoved:
                  - create
                notificationDomainPurchase:
                  - create
                notificationDomainRenewal:
                  - create
                notificationDomainTransfer:
                  - create
                notificationDomainUnverified:
                  - create
                NotificationMonitoringAlert:
                  - create
                notificationPaymentFailed:
                  - create
                notificationUsageAlert:
                  - create
                notificationCustomerBudget:
                  - create
                notificationStatementOfReasons:
                  - create
                oauth2Connection:
                  - create
                openTelemetryEndpoint:
                  - create
                paymentMethod:
                  - create
                permissions:
                  - create
                postgres:
                  - create
                previewDeploymentSuffix:
                  - create
                proTrialOnboarding:
                  - create
                sharedEnvVars:
                  - create
                sharedEnvVarsProduction:
                  - create
                space:
                  - create
                spaceRun:
                  - create
                passwordProtectionInvoiceItem:
                  - create
                rateLimit:
                  - create
                redis:
                  - create
                repository:
                  - create
                remoteCaching:
                  - create
                samlConfig:
                  - create
                secret:
                  - create
                redisStoreTokenSet:
                  - create
                blobStoreTokenSet:
                  - create
                postgresStoreTokenSet:
                  - create
                integrationStoreTokenSet:
                  - create
                integrationResourceReplCommand:
                  - create
                storeTransfer:
                  - create
                supportCase:
                  - create
                supportCaseComment:
                  - create
                dataCacheBillingSettings:
                  - create
                team:
                  - create
                teamAccessRequest:
                  - create
                teamFellowMembership:
                  - create
                teamGitExclusivity:
                  - create
                teamInvite:
                  - create
                teamInviteCode:
                  - create
                teamJoin:
                  - create
                teamOwnMembership:
                  - create
                teamOwnMembershipDisconnectSAML:
                  - create
                token:
                  - create
                usage:
                  - create
                usageCycle:
                  - create
                user:
                  - create
                userConnection:
                  - create
                vpcPeeringConnection:
                  - create
                webAnalyticsPlan:
                  - create
                webAuthn:
                  - create
                edgeConfig:
                  - create
                edgeConfigItem:
                  - create
                edgeConfigSchema:
                  - create
                edgeConfigToken:
                  - create
                webhook:
                  - create
                webhook-event:
                  - create
                endpointVerification:
                  - create
                projectTransferIn:
                  - create
                oauth2Application:
                  - create
                aliasProject:
                  - create
                aliasProtectionBypass:
                  - create
                productionAliasProtectionBypass:
                  - create
                connectConfigurationLink:
                  - create
                dataCacheNamespace:
                  - create
                deployment:
                  - create
                deploymentCheck:
                  - create
                deploymentCheckPreview:
                  - create
                deploymentCheckReRunFromProductionBranch:
                  - create
                deploymentProductionGit:
                  - create
                deploymentPreview:
                  - create
                deploymentPrivate:
                  - create
                deploymentPromote:
                  - create
                deploymentRollback:
                  - create
                environments:
                  - create
                logs:
                  - create
                logsPreset:
                  - create
                passwordProtection:
                  - create
                optionsAllowlist:
                  - create
                job:
                  - create
                project:
                  - create
                projectAccessGroup:
                  - create
                projectAnalyticsSampling:
                  - create
                projectDeploymentHook:
                  - create
                projectDomain:
                  - create
                projectDomainMove:
                  - create
                projectDomainCheckConfig:
                  - create
                projectEnvVars:
                  - create
                projectEnvVarsProduction:
                  - create
                projectEnvVarsUnownedByIntegration:
                  - create
                projectFlags:
                  - create
                projectId:
                  - create
                projectIntegrationConfiguration:
                  - create
                projectLink:
                  - create
                projectMember:
                  - create
                projectMonitoring:
                  - create
                projectPermissions:
                  - create
                projectProductionBranch:
                  - create
                projectTransfer:
                  - create
                projectTransferOut:
                  - create
                projectProtectionBypass:
                  - create
                projectUsage:
                  - create
                projectAnalyticsUsage:
                  - create
                projectSupportCase:
                  - create
                projectSupportCaseComment:
                  - create
                projectDeploymentExpiration:
                  - create
                projectTier:
                  - create
                seawallConfig:
                  - create
                skewProtection:
                  - create
                analytics:
                  - create
                trustedIps:
                  - create
                webAnalytics:
                  - create
                sharedEnvVarConnection:
                  - create
                sonar:
                  - create
              lastRollbackTarget:
                key: value
              lastAliasRequest:
                fromDeploymentId: fromDeploymentId
                toDeploymentId: toDeploymentId
                jobStatus: succeeded
                requestedAt: 1.1
                type: promote
              hasFloatingAliases: true
              protectionBypass:
                key:
                  createdAt: 1.1
                  createdBy: createdBy
                  scope: automation-bypass
              hasActiveBranches: true
              trustedIps:
                deploymentType: production
                addresses:
                  - value: value
                protectionMode: additional
              gitComments:
                onPullRequest: true
                onCommit: true
              paused: true
              concurrencyBucketName: concurrencyBucketName
              webAnalytics:
                id: id
                disabledAt: 1.1
                canceledAt: 1.1
                enabledAt: 1.1
                hasData: true
              security:
                attackModeEnabled: true
                attackModeUpdatedAt: 1.1
                firewallEnabled: true
                firewallUpdatedAt: 1.1
                attackModeActiveUntil: 1.1
                firewallConfigVersion: 1.1
                firewallRoutes:
                  - {}
                firewallSeawallEnabled: true
                ja3Enabled: true
                ja4Enabled: true
              oidcTokenConfig:
                enabled: true
              tier: standard
    getProject:
      path: /v9/projects/{idOrName}
      method: GET
      auth: true
      docs: >-
        Get the information for a specific project by passing either the project
        `id` or `name` in the URL.
      path-parameters:
        idOrName:
          type: GetProjectRequestIdOrName
          docs: The unique project identifier or the project name
      display-name: Find a project by id or name
      request:
        name: GetProjectRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      response:
        docs: The project information
        type: GetProjectResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
      examples:
        - path-parameters:
            idOrName: idOrName
          response:
            body:
              accountId: accountId
              analytics:
                id: id
                canceledAt: 1.1
                disabledAt: 1.1
                enabledAt: 1.1
                paidAt: 1.1
                sampleRatePercent: 1.1
                spendLimitInDollars: 1.1
              speedInsights:
                id: id
                enabledAt: 1.1
                disabledAt: 1.1
                canceledAt: 1.1
                hasData: true
                paidAt: 1.1
              autoExposeSystemEnvs: true
              autoAssignCustomDomains: true
              autoAssignCustomDomainsUpdatedBy: autoAssignCustomDomainsUpdatedBy
              buildCommand: buildCommand
              commandForIgnoringBuildStep: commandForIgnoringBuildStep
              connectConfigurationId: connectConfigurationId
              connectBuildsEnabled: true
              createdAt: 1.1
              customerSupportCodeVisibility: true
              crons:
                enabledAt: 1.1
                disabledAt: 1.1
                updatedAt: 1.1
                deploymentId: deploymentId
                definitions:
                  - host: vercel.com
                    path: /api/crons/sync-something?hello=world
                    schedule: 0 0 * * *
              dataCache:
                userDisabled: true
                storageSizeBytes: 1.1
                unlimited: true
              deploymentExpiration:
                expirationDays: 1.1
                expirationDaysProduction: 1.1
                expirationDaysCanceled: 1.1
                expirationDaysErrored: 1.1
                deploymentsToKeep: 1.1
              devCommand: devCommand
              directoryListing: true
              installCommand: installCommand
              env:
                - target:
                    - production
                  type: system
                  sunsetSecretId: sunsetSecretId
                  id: id
                  key: key
                  value: value
                  configurationId: configurationId
                  createdAt: 1.1
                  updatedAt: 1.1
                  createdBy: createdBy
                  updatedBy: updatedBy
                  gitBranch: gitBranch
                  edgeConfigId: edgeConfigId
                  edgeConfigTokenId: edgeConfigTokenId
                  contentHint:
                    type: flags-connection-string
                    projectId: contentHint
                  internalContentHint:
                    type: flags-secret
                    encryptedValue: encryptedValue
                  decrypted: true
                  comment: comment
                  customEnvironmentIds:
                    - customEnvironmentIds
                  vsmValue: vsmValue
              customEnvironments:
                - id: id
                  name: name
                  slug: slug
                  type: production
                  description: description
                  branchMatcher:
                    type: endsWith
                    pattern: pattern
                  createdAt: 1.1
                  updatedAt: 1.1
                  domains:
                    - name: name
                      apexName: apexName
                      projectId: projectId
                      verified: true
                  currentDeploymentAliases:
                    - currentDeploymentAliases
              framework: blitzjs
              gitForkProtection: true
              gitLFS: true
              id: id
              latestDeployments:
                - id: id
                  alias:
                    - alias
                  aliasAssigned: 1.1
                  aliasError:
                    code: code
                    message: message
                  aliasFinal: aliasFinal
                  automaticAliases:
                    - automaticAliases
                  buildingAt: 1.1
                  builds:
                    - use: use
                  checksConclusion: succeeded
                  checksState: registered
                  connectBuildsEnabled: true
                  connectConfigurationId: connectConfigurationId
                  createdAt: 1.1
                  createdIn: createdIn
                  creator:
                    email: email
                    uid: uid
                    username: username
                  deletedAt: 1.1
                  deploymentHostname: deploymentHostname
                  forced: true
                  name: name
                  meta:
                    key: value
                  monorepoManager: monorepoManager
                  oidcTokenClaims:
                    sub: sub
                    scope: scope
                    aud: aud
                    owner: owner
                    owner_id: owner_id
                    project: project
                    project_id: project_id
                    environment: environment
                  plan: pro
                  previewCommentsEnabled: false
                  private: true
                  readyAt: 1.1
                  readyState: BUILDING
                  readySubstate: STAGED
                  requestedAt: 1.1
                  target: target
                  teamId: teamId
                  type: LAMBDAS
                  url: url
                  userId: userId
                  withCache: true
              link:
                type: bitbucket
                name: link
                slug: link
                owner: link
                uuid: link
                workspaceUuid: link
                createdAt: 1.1
                deployHooks:
                  - id: id
                    name: name
                    ref: ref
                    url: url
                gitCredentialId: link
                updatedAt: 1.1
                sourceless: true
                productionBranch: link
              name: name
              nodeVersion: 20.x
              optionsAllowlist:
                paths:
                  - value: value
              outputDirectory: outputDirectory
              passiveConnectConfigurationId: passiveConnectConfigurationId
              passwordProtection:
                key: value
              productionDeploymentsFastLane: true
              publicSource: true
              resourceConfig:
                functionDefaultTimeout: 1.1
                functionDefaultMemoryType: standard_legacy
              rootDirectory: rootDirectory
              serverlessFunctionRegion: serverlessFunctionRegion
              serverlessFunctionZeroConfigFailover: true
              skewProtectionBoundaryAt: 1.1
              skewProtectionMaxAge: 1.1
              skipGitConnectDuringLink: true
              sourceFilesOutsideRootDirectory: true
              enableAffectedProjectsDeployments: true
              ssoProtection:
                deploymentType: preview
              targets:
                key:
                  id: id
                  alias:
                    - alias
                  aliasAssigned: 1.1
                  aliasError:
                    code: code
                    message: message
                  aliasFinal: aliasFinal
                  automaticAliases:
                    - automaticAliases
                  buildingAt: 1.1
                  builds:
                    - use: use
                  checksConclusion: succeeded
                  checksState: registered
                  connectBuildsEnabled: true
                  connectConfigurationId: connectConfigurationId
                  createdAt: 1.1
                  createdIn: createdIn
                  creator:
                    email: email
                    uid: uid
                    username: username
                  deletedAt: 1.1
                  deploymentHostname: deploymentHostname
                  forced: true
                  name: name
                  meta:
                    key: value
                  monorepoManager: monorepoManager
                  oidcTokenClaims:
                    sub: sub
                    scope: scope
                    aud: aud
                    owner: owner
                    owner_id: owner_id
                    project: project
                    project_id: project_id
                    environment: environment
                  plan: pro
                  previewCommentsEnabled: false
                  private: true
                  readyAt: 1.1
                  readyState: BUILDING
                  readySubstate: STAGED
                  requestedAt: 1.1
                  target: target
                  teamId: teamId
                  type: LAMBDAS
                  url: url
                  userId: userId
                  withCache: true
              transferCompletedAt: 1.1
              transferStartedAt: 1.1
              transferToAccountId: transferToAccountId
              transferredFromAccountId: transferredFromAccountId
              updatedAt: 1.1
              live: true
              enablePreviewFeedback: true
              enableProductionFeedback: true
              permissions:
                accessGroup:
                  - create
                aliasGlobal:
                  - create
                analyticsSampling:
                  - create
                analyticsUsage:
                  - create
                auditLog:
                  - create
                billingAddress:
                  - create
                billingInformation:
                  - create
                billingInvoice:
                  - create
                billingInvoiceEmailRecipient:
                  - create
                billingInvoiceLanguage:
                  - create
                billingPlan:
                  - create
                billingPurchaseOrder:
                  - create
                billingTaxId:
                  - create
                blob:
                  - create
                budget:
                  - create
                cacheArtifact:
                  - create
                cacheArtifactUsageEvent:
                  - create
                codeChecks:
                  - create
                concurrentBuilds:
                  - create
                connect:
                  - create
                connectConfiguration:
                  - create
                domain:
                  - create
                domainAcceptDelegation:
                  - create
                domainAuthCodes:
                  - create
                domainCertificate:
                  - create
                domainCheckConfig:
                  - create
                domainMove:
                  - create
                domainPurchase:
                  - create
                domainRecord:
                  - create
                domainTransferIn:
                  - create
                event:
                  - create
                ownEvent:
                  - create
                sensitiveEnvironmentVariablePolicy:
                  - create
                fileUpload:
                  - create
                gitRepository:
                  - create
                ipBlocking:
                  - create
                integration:
                  - create
                integrationAccount:
                  - create
                integrationConfiguration:
                  - create
                integrationConfigurationTransfer:
                  - create
                integrationConfigurationProjects:
                  - create
                integrationVercelConfigurationOverride:
                  - create
                integrationConfigurationRole:
                  - create
                integrationResource:
                  - create
                integrationEvent:
                  - create
                integrationResourceSecrets:
                  - create
                marketplaceInstallationMember:
                  - create
                marketplaceBillingData:
                  - create
                marketplaceInvoice:
                  - create
                jobGlobal:
                  - create
                logDrain:
                  - create
                Monitoring:
                  - create
                monitoringSettings:
                  - create
                monitoringQuery:
                  - create
                monitoringChart:
                  - create
                monitoringAlert:
                  - create
                notificationDeploymentFailed:
                  - create
                notificationDomainConfiguration:
                  - create
                notificationDomainExpire:
                  - create
                notificationDomainMoved:
                  - create
                notificationDomainPurchase:
                  - create
                notificationDomainRenewal:
                  - create
                notificationDomainTransfer:
                  - create
                notificationDomainUnverified:
                  - create
                NotificationMonitoringAlert:
                  - create
                notificationPaymentFailed:
                  - create
                notificationUsageAlert:
                  - create
                notificationCustomerBudget:
                  - create
                notificationStatementOfReasons:
                  - create
                oauth2Connection:
                  - create
                openTelemetryEndpoint:
                  - create
                paymentMethod:
                  - create
                permissions:
                  - create
                postgres:
                  - create
                previewDeploymentSuffix:
                  - create
                proTrialOnboarding:
                  - create
                sharedEnvVars:
                  - create
                sharedEnvVarsProduction:
                  - create
                space:
                  - create
                spaceRun:
                  - create
                passwordProtectionInvoiceItem:
                  - create
                rateLimit:
                  - create
                redis:
                  - create
                repository:
                  - create
                remoteCaching:
                  - create
                samlConfig:
                  - create
                secret:
                  - create
                redisStoreTokenSet:
                  - create
                blobStoreTokenSet:
                  - create
                postgresStoreTokenSet:
                  - create
                integrationStoreTokenSet:
                  - create
                integrationResourceReplCommand:
                  - create
                storeTransfer:
                  - create
                supportCase:
                  - create
                supportCaseComment:
                  - create
                dataCacheBillingSettings:
                  - create
                team:
                  - create
                teamAccessRequest:
                  - create
                teamFellowMembership:
                  - create
                teamGitExclusivity:
                  - create
                teamInvite:
                  - create
                teamInviteCode:
                  - create
                teamJoin:
                  - create
                teamOwnMembership:
                  - create
                teamOwnMembershipDisconnectSAML:
                  - create
                token:
                  - create
                usage:
                  - create
                usageCycle:
                  - create
                user:
                  - create
                userConnection:
                  - create
                vpcPeeringConnection:
                  - create
                webAnalyticsPlan:
                  - create
                webAuthn:
                  - create
                edgeConfig:
                  - create
                edgeConfigItem:
                  - create
                edgeConfigSchema:
                  - create
                edgeConfigToken:
                  - create
                webhook:
                  - create
                webhook-event:
                  - create
                endpointVerification:
                  - create
                projectTransferIn:
                  - create
                oauth2Application:
                  - create
                aliasProject:
                  - create
                aliasProtectionBypass:
                  - create
                productionAliasProtectionBypass:
                  - create
                connectConfigurationLink:
                  - create
                dataCacheNamespace:
                  - create
                deployment:
                  - create
                deploymentCheck:
                  - create
                deploymentCheckPreview:
                  - create
                deploymentCheckReRunFromProductionBranch:
                  - create
                deploymentProductionGit:
                  - create
                deploymentPreview:
                  - create
                deploymentPrivate:
                  - create
                deploymentPromote:
                  - create
                deploymentRollback:
                  - create
                environments:
                  - create
                logs:
                  - create
                logsPreset:
                  - create
                passwordProtection:
                  - create
                optionsAllowlist:
                  - create
                job:
                  - create
                project:
                  - create
                projectAccessGroup:
                  - create
                projectAnalyticsSampling:
                  - create
                projectDeploymentHook:
                  - create
                projectDomain:
                  - create
                projectDomainMove:
                  - create
                projectDomainCheckConfig:
                  - create
                projectEnvVars:
                  - create
                projectEnvVarsProduction:
                  - create
                projectEnvVarsUnownedByIntegration:
                  - create
                projectFlags:
                  - create
                projectId:
                  - create
                projectIntegrationConfiguration:
                  - create
                projectLink:
                  - create
                projectMember:
                  - create
                projectMonitoring:
                  - create
                projectPermissions:
                  - create
                projectProductionBranch:
                  - create
                projectTransfer:
                  - create
                projectTransferOut:
                  - create
                projectProtectionBypass:
                  - create
                projectUsage:
                  - create
                projectAnalyticsUsage:
                  - create
                projectSupportCase:
                  - create
                projectSupportCaseComment:
                  - create
                projectDeploymentExpiration:
                  - create
                projectTier:
                  - create
                seawallConfig:
                  - create
                skewProtection:
                  - create
                analytics:
                  - create
                trustedIps:
                  - create
                webAnalytics:
                  - create
                sharedEnvVarConnection:
                  - create
                sonar:
                  - create
              lastRollbackTarget:
                key: value
              lastAliasRequest:
                fromDeploymentId: fromDeploymentId
                toDeploymentId: toDeploymentId
                jobStatus: succeeded
                requestedAt: 1.1
                type: promote
              hasFloatingAliases: true
              protectionBypass:
                key:
                  createdAt: 1.1
                  createdBy: createdBy
                  scope: automation-bypass
              hasActiveBranches: true
              trustedIps:
                deploymentType: production
                addresses:
                  - value: value
                protectionMode: additional
              gitComments:
                onPullRequest: true
                onCommit: true
              paused: true
              concurrencyBucketName: concurrencyBucketName
              webAnalytics:
                id: id
                disabledAt: 1.1
                canceledAt: 1.1
                enabledAt: 1.1
                hasData: true
              security:
                attackModeEnabled: true
                attackModeUpdatedAt: 1.1
                firewallEnabled: true
                firewallUpdatedAt: 1.1
                attackModeActiveUntil: 1.1
                firewallConfigVersion: 1.1
                firewallRoutes:
                  - {}
                firewallSeawallEnabled: true
                ja3Enabled: true
                ja4Enabled: true
              oidcTokenConfig:
                enabled: true
              tier: standard
    deleteProject:
      path: /v9/projects/{idOrName}
      method: DELETE
      auth: true
      docs: >-
        Delete a specific project by passing either the project `id` or `name`
        in the URL.
      path-parameters:
        idOrName:
          type: string
          docs: The unique project identifier or the project name
      display-name: Delete a Project
      request:
        name: DeleteProjectRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.ConflictError
      examples:
        - path-parameters:
            idOrName: prj_12HKQaOmR5t5Uy6vdcQsNIiZgHGB
    updateProject:
      path: /v9/projects/{idOrName}
      method: PATCH
      auth: true
      docs: Update the fields of a project using either its `name` or `id`.
      path-parameters:
        idOrName:
          type: string
          docs: The unique project identifier or the project name
      display-name: Update an existing project
      request:
        name: UpdateProjectRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
        body:
          properties:
            autoExposeSystemEnvs: optional<boolean>
            autoAssignCustomDomains: optional<boolean>
            autoAssignCustomDomainsUpdatedBy: optional<string>
            buildCommand:
              type: optional<string>
              docs: >-
                The build command for this project. When `null` is used this
                value will be automatically detected
              validation:
                maxLength: 256
            commandForIgnoringBuildStep:
              type: optional<string>
              validation:
                maxLength: 256
            customerSupportCodeVisibility:
              type: optional<boolean>
              docs: >-
                Specifies whether customer support can see git source for a
                deployment
            devCommand:
              type: optional<string>
              docs: >-
                The dev command for this project. When `null` is used this value
                will be automatically detected
              validation:
                maxLength: 256
            directoryListing: optional<boolean>
            framework:
              type: optional<string>
              docs: >-
                The framework that is being used for this project. When `null`
                is used no framework is selected
            gitForkProtection:
              type: optional<boolean>
              docs: >-
                Specifies whether PRs from Git forks should require a team
                member's authorization before it can be deployed
            gitLFS:
              type: optional<boolean>
              docs: Specifies whether Git LFS is enabled for this project.
            installCommand:
              type: optional<string>
              docs: >-
                The install command for this project. When `null` is used this
                value will be automatically detected
              validation:
                maxLength: 256
            name:
              type: optional<string>
              docs: The desired name for the project
              validation:
                pattern: ^(?!.*---)[a-z0-9-_.]+$
                maxLength: 100
            nodeVersion: optional<UpdateProjectRequestNodeVersion>
            outputDirectory:
              type: optional<string>
              docs: >-
                The output directory of the project. When `null` is used this
                value will be automatically detected
              validation:
                maxLength: 256
            publicSource:
              type: optional<boolean>
              docs: >-
                Specifies whether the source code and logs of the deployments
                for this project should be public or not
            rootDirectory:
              type: optional<string>
              docs: >-
                The name of a directory or relative path to the source code of
                your project. When `null` is used it will default to the project
                root
              validation:
                maxLength: 256
            serverlessFunctionRegion:
              type: optional<string>
              docs: The region to deploy Serverless Functions in this project
              validation:
                maxLength: 4
            serverlessFunctionZeroConfigFailover: optional<boolean>
            skewProtectionBoundaryAt:
              type: optional<integer>
              docs: >-
                Deployments created before this absolute datetime have Skew
                Protection disabled. Value is in milliseconds since epoch to
                match \"createdAt\" fields.
              validation:
                min: 0
            skewProtectionMaxAge:
              type: optional<integer>
              docs: >-
                Deployments created before this rolling window have Skew
                Protection disabled. Value is in seconds to match \"revalidate\"
                fields.
              validation:
                min: 0
            skipGitConnectDuringLink:
              type: optional<boolean>
              docs: >-
                Opts-out of the message prompting a CLI user to connect a Git
                repository in `vercel link`.
              availability: deprecated
            sourceFilesOutsideRootDirectory:
              type: optional<boolean>
              docs: >-
                Indicates if there are source files outside of the root
                directory
            enablePreviewFeedback:
              type: optional<boolean>
              docs: Opt-in to preview toolbar on the project level
            enableProductionFeedback:
              type: optional<boolean>
              docs: Opt-in to production toolbar on the project level
            enableAffectedProjectsDeployments:
              type: optional<boolean>
              docs: >-
                Opt-in to skip deployments when there are no changes to the root
                directory and its dependencies
            oidcTokenConfig:
              type: optional<UpdateProjectRequestOidcTokenConfig>
              docs: OpenID Connect JSON Web Token generation configuration.
            passwordProtection:
              type: optional<UpdateProjectRequestPasswordProtection>
              docs: Allows to protect project deployments with a password
            ssoProtection:
              type: optional<UpdateProjectRequestSsoProtection>
              docs: >-
                Ensures visitors to your Preview Deployments are logged into
                Vercel and have a minimum of Viewer access on your team
            trustedIps:
              type: optional<UpdateProjectRequestTrustedIps>
              docs: >-
                Restricts access to deployments based on the incoming request IP
                address
            optionsAllowlist:
              type: optional<UpdateProjectRequestOptionsAllowlist>
              docs: >-
                Specify a list of paths that should not be protected by
                Deployment Protection to enable Cors preflight requests
      response:
        docs: The project was successfully updated
        type: UpdateProjectResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.PaymentRequiredError
        - root.ForbiddenError
        - root.ConflictError
        - root.PreconditionError
      examples:
        - path-parameters:
            idOrName: prj_12HKQaOmR5t5Uy6vdcQsNIiZgHGB
          request: {}
          response:
            body:
              accountId: accountId
              analytics:
                id: id
                canceledAt: 1.1
                disabledAt: 1.1
                enabledAt: 1.1
                paidAt: 1.1
                sampleRatePercent: 1.1
                spendLimitInDollars: 1.1
              speedInsights:
                id: id
                enabledAt: 1.1
                disabledAt: 1.1
                canceledAt: 1.1
                hasData: true
                paidAt: 1.1
              autoExposeSystemEnvs: true
              autoAssignCustomDomains: true
              autoAssignCustomDomainsUpdatedBy: autoAssignCustomDomainsUpdatedBy
              buildCommand: buildCommand
              commandForIgnoringBuildStep: commandForIgnoringBuildStep
              connectConfigurationId: connectConfigurationId
              connectBuildsEnabled: true
              createdAt: 1.1
              customerSupportCodeVisibility: true
              crons:
                enabledAt: 1.1
                disabledAt: 1.1
                updatedAt: 1.1
                deploymentId: deploymentId
                definitions:
                  - host: vercel.com
                    path: /api/crons/sync-something?hello=world
                    schedule: 0 0 * * *
              dataCache:
                userDisabled: true
                storageSizeBytes: 1.1
                unlimited: true
              deploymentExpiration:
                expirationDays: 1.1
                expirationDaysProduction: 1.1
                expirationDaysCanceled: 1.1
                expirationDaysErrored: 1.1
                deploymentsToKeep: 1.1
              devCommand: devCommand
              directoryListing: true
              installCommand: installCommand
              env:
                - target:
                    - production
                  type: system
                  sunsetSecretId: sunsetSecretId
                  id: id
                  key: key
                  value: value
                  configurationId: configurationId
                  createdAt: 1.1
                  updatedAt: 1.1
                  createdBy: createdBy
                  updatedBy: updatedBy
                  gitBranch: gitBranch
                  edgeConfigId: edgeConfigId
                  edgeConfigTokenId: edgeConfigTokenId
                  contentHint:
                    type: flags-connection-string
                    projectId: contentHint
                  internalContentHint:
                    type: flags-secret
                    encryptedValue: encryptedValue
                  decrypted: true
                  comment: comment
                  customEnvironmentIds:
                    - customEnvironmentIds
                  vsmValue: vsmValue
              customEnvironments:
                - id: id
                  name: name
                  slug: slug
                  type: production
                  description: description
                  branchMatcher:
                    type: endsWith
                    pattern: pattern
                  createdAt: 1.1
                  updatedAt: 1.1
                  domains:
                    - name: name
                      apexName: apexName
                      projectId: projectId
                      verified: true
                  currentDeploymentAliases:
                    - currentDeploymentAliases
              framework: blitzjs
              gitForkProtection: true
              gitLFS: true
              id: id
              latestDeployments:
                - id: id
                  alias:
                    - alias
                  aliasAssigned: 1.1
                  aliasError:
                    code: code
                    message: message
                  aliasFinal: aliasFinal
                  automaticAliases:
                    - automaticAliases
                  buildingAt: 1.1
                  builds:
                    - use: use
                  checksConclusion: succeeded
                  checksState: registered
                  connectBuildsEnabled: true
                  connectConfigurationId: connectConfigurationId
                  createdAt: 1.1
                  createdIn: createdIn
                  creator:
                    email: email
                    uid: uid
                    username: username
                  deletedAt: 1.1
                  deploymentHostname: deploymentHostname
                  forced: true
                  name: name
                  meta:
                    key: value
                  monorepoManager: monorepoManager
                  oidcTokenClaims:
                    sub: sub
                    scope: scope
                    aud: aud
                    owner: owner
                    owner_id: owner_id
                    project: project
                    project_id: project_id
                    environment: environment
                  plan: pro
                  previewCommentsEnabled: false
                  private: true
                  readyAt: 1.1
                  readyState: BUILDING
                  readySubstate: STAGED
                  requestedAt: 1.1
                  target: target
                  teamId: teamId
                  type: LAMBDAS
                  url: url
                  userId: userId
                  withCache: true
              link:
                type: bitbucket
                name: link
                slug: link
                owner: link
                uuid: link
                workspaceUuid: link
                createdAt: 1.1
                deployHooks:
                  - id: id
                    name: name
                    ref: ref
                    url: url
                gitCredentialId: link
                updatedAt: 1.1
                sourceless: true
                productionBranch: link
              name: name
              nodeVersion: 20.x
              optionsAllowlist:
                paths:
                  - value: value
              outputDirectory: outputDirectory
              passiveConnectConfigurationId: passiveConnectConfigurationId
              passwordProtection:
                key: value
              productionDeploymentsFastLane: true
              publicSource: true
              resourceConfig:
                functionDefaultTimeout: 1.1
                functionDefaultMemoryType: standard_legacy
              rootDirectory: rootDirectory
              serverlessFunctionRegion: serverlessFunctionRegion
              serverlessFunctionZeroConfigFailover: true
              skewProtectionBoundaryAt: 1.1
              skewProtectionMaxAge: 1.1
              skipGitConnectDuringLink: true
              sourceFilesOutsideRootDirectory: true
              enableAffectedProjectsDeployments: true
              ssoProtection:
                deploymentType: preview
              targets:
                key:
                  id: id
                  alias:
                    - alias
                  aliasAssigned: 1.1
                  aliasError:
                    code: code
                    message: message
                  aliasFinal: aliasFinal
                  automaticAliases:
                    - automaticAliases
                  buildingAt: 1.1
                  builds:
                    - use: use
                  checksConclusion: succeeded
                  checksState: registered
                  connectBuildsEnabled: true
                  connectConfigurationId: connectConfigurationId
                  createdAt: 1.1
                  createdIn: createdIn
                  creator:
                    email: email
                    uid: uid
                    username: username
                  deletedAt: 1.1
                  deploymentHostname: deploymentHostname
                  forced: true
                  name: name
                  meta:
                    key: value
                  monorepoManager: monorepoManager
                  oidcTokenClaims:
                    sub: sub
                    scope: scope
                    aud: aud
                    owner: owner
                    owner_id: owner_id
                    project: project
                    project_id: project_id
                    environment: environment
                  plan: pro
                  previewCommentsEnabled: false
                  private: true
                  readyAt: 1.1
                  readyState: BUILDING
                  readySubstate: STAGED
                  requestedAt: 1.1
                  target: target
                  teamId: teamId
                  type: LAMBDAS
                  url: url
                  userId: userId
                  withCache: true
              transferCompletedAt: 1.1
              transferStartedAt: 1.1
              transferToAccountId: transferToAccountId
              transferredFromAccountId: transferredFromAccountId
              updatedAt: 1.1
              live: true
              enablePreviewFeedback: true
              enableProductionFeedback: true
              permissions:
                accessGroup:
                  - create
                aliasGlobal:
                  - create
                analyticsSampling:
                  - create
                analyticsUsage:
                  - create
                auditLog:
                  - create
                billingAddress:
                  - create
                billingInformation:
                  - create
                billingInvoice:
                  - create
                billingInvoiceEmailRecipient:
                  - create
                billingInvoiceLanguage:
                  - create
                billingPlan:
                  - create
                billingPurchaseOrder:
                  - create
                billingTaxId:
                  - create
                blob:
                  - create
                budget:
                  - create
                cacheArtifact:
                  - create
                cacheArtifactUsageEvent:
                  - create
                codeChecks:
                  - create
                concurrentBuilds:
                  - create
                connect:
                  - create
                connectConfiguration:
                  - create
                domain:
                  - create
                domainAcceptDelegation:
                  - create
                domainAuthCodes:
                  - create
                domainCertificate:
                  - create
                domainCheckConfig:
                  - create
                domainMove:
                  - create
                domainPurchase:
                  - create
                domainRecord:
                  - create
                domainTransferIn:
                  - create
                event:
                  - create
                ownEvent:
                  - create
                sensitiveEnvironmentVariablePolicy:
                  - create
                fileUpload:
                  - create
                gitRepository:
                  - create
                ipBlocking:
                  - create
                integration:
                  - create
                integrationAccount:
                  - create
                integrationConfiguration:
                  - create
                integrationConfigurationTransfer:
                  - create
                integrationConfigurationProjects:
                  - create
                integrationVercelConfigurationOverride:
                  - create
                integrationConfigurationRole:
                  - create
                integrationResource:
                  - create
                integrationEvent:
                  - create
                integrationResourceSecrets:
                  - create
                marketplaceInstallationMember:
                  - create
                marketplaceBillingData:
                  - create
                marketplaceInvoice:
                  - create
                jobGlobal:
                  - create
                logDrain:
                  - create
                Monitoring:
                  - create
                monitoringSettings:
                  - create
                monitoringQuery:
                  - create
                monitoringChart:
                  - create
                monitoringAlert:
                  - create
                notificationDeploymentFailed:
                  - create
                notificationDomainConfiguration:
                  - create
                notificationDomainExpire:
                  - create
                notificationDomainMoved:
                  - create
                notificationDomainPurchase:
                  - create
                notificationDomainRenewal:
                  - create
                notificationDomainTransfer:
                  - create
                notificationDomainUnverified:
                  - create
                NotificationMonitoringAlert:
                  - create
                notificationPaymentFailed:
                  - create
                notificationUsageAlert:
                  - create
                notificationCustomerBudget:
                  - create
                notificationStatementOfReasons:
                  - create
                oauth2Connection:
                  - create
                openTelemetryEndpoint:
                  - create
                paymentMethod:
                  - create
                permissions:
                  - create
                postgres:
                  - create
                previewDeploymentSuffix:
                  - create
                proTrialOnboarding:
                  - create
                sharedEnvVars:
                  - create
                sharedEnvVarsProduction:
                  - create
                space:
                  - create
                spaceRun:
                  - create
                passwordProtectionInvoiceItem:
                  - create
                rateLimit:
                  - create
                redis:
                  - create
                repository:
                  - create
                remoteCaching:
                  - create
                samlConfig:
                  - create
                secret:
                  - create
                redisStoreTokenSet:
                  - create
                blobStoreTokenSet:
                  - create
                postgresStoreTokenSet:
                  - create
                integrationStoreTokenSet:
                  - create
                integrationResourceReplCommand:
                  - create
                storeTransfer:
                  - create
                supportCase:
                  - create
                supportCaseComment:
                  - create
                dataCacheBillingSettings:
                  - create
                team:
                  - create
                teamAccessRequest:
                  - create
                teamFellowMembership:
                  - create
                teamGitExclusivity:
                  - create
                teamInvite:
                  - create
                teamInviteCode:
                  - create
                teamJoin:
                  - create
                teamOwnMembership:
                  - create
                teamOwnMembershipDisconnectSAML:
                  - create
                token:
                  - create
                usage:
                  - create
                usageCycle:
                  - create
                user:
                  - create
                userConnection:
                  - create
                vpcPeeringConnection:
                  - create
                webAnalyticsPlan:
                  - create
                webAuthn:
                  - create
                edgeConfig:
                  - create
                edgeConfigItem:
                  - create
                edgeConfigSchema:
                  - create
                edgeConfigToken:
                  - create
                webhook:
                  - create
                webhook-event:
                  - create
                endpointVerification:
                  - create
                projectTransferIn:
                  - create
                oauth2Application:
                  - create
                aliasProject:
                  - create
                aliasProtectionBypass:
                  - create
                productionAliasProtectionBypass:
                  - create
                connectConfigurationLink:
                  - create
                dataCacheNamespace:
                  - create
                deployment:
                  - create
                deploymentCheck:
                  - create
                deploymentCheckPreview:
                  - create
                deploymentCheckReRunFromProductionBranch:
                  - create
                deploymentProductionGit:
                  - create
                deploymentPreview:
                  - create
                deploymentPrivate:
                  - create
                deploymentPromote:
                  - create
                deploymentRollback:
                  - create
                environments:
                  - create
                logs:
                  - create
                logsPreset:
                  - create
                passwordProtection:
                  - create
                optionsAllowlist:
                  - create
                job:
                  - create
                project:
                  - create
                projectAccessGroup:
                  - create
                projectAnalyticsSampling:
                  - create
                projectDeploymentHook:
                  - create
                projectDomain:
                  - create
                projectDomainMove:
                  - create
                projectDomainCheckConfig:
                  - create
                projectEnvVars:
                  - create
                projectEnvVarsProduction:
                  - create
                projectEnvVarsUnownedByIntegration:
                  - create
                projectFlags:
                  - create
                projectId:
                  - create
                projectIntegrationConfiguration:
                  - create
                projectLink:
                  - create
                projectMember:
                  - create
                projectMonitoring:
                  - create
                projectPermissions:
                  - create
                projectProductionBranch:
                  - create
                projectTransfer:
                  - create
                projectTransferOut:
                  - create
                projectProtectionBypass:
                  - create
                projectUsage:
                  - create
                projectAnalyticsUsage:
                  - create
                projectSupportCase:
                  - create
                projectSupportCaseComment:
                  - create
                projectDeploymentExpiration:
                  - create
                projectTier:
                  - create
                seawallConfig:
                  - create
                skewProtection:
                  - create
                analytics:
                  - create
                trustedIps:
                  - create
                webAnalytics:
                  - create
                sharedEnvVarConnection:
                  - create
                sonar:
                  - create
              lastRollbackTarget:
                key: value
              lastAliasRequest:
                fromDeploymentId: fromDeploymentId
                toDeploymentId: toDeploymentId
                jobStatus: succeeded
                requestedAt: 1.1
                type: promote
              hasFloatingAliases: true
              protectionBypass:
                key:
                  createdAt: 1.1
                  createdBy: createdBy
                  scope: automation-bypass
              hasActiveBranches: true
              trustedIps:
                deploymentType: production
                addresses:
                  - value: value
                protectionMode: additional
              gitComments:
                onPullRequest: true
                onCommit: true
              paused: true
              concurrencyBucketName: concurrencyBucketName
              webAnalytics:
                id: id
                disabledAt: 1.1
                canceledAt: 1.1
                enabledAt: 1.1
                hasData: true
              security:
                attackModeEnabled: true
                attackModeUpdatedAt: 1.1
                firewallEnabled: true
                firewallUpdatedAt: 1.1
                attackModeActiveUntil: 1.1
                firewallConfigVersion: 1.1
                firewallRoutes:
                  - {}
                firewallSeawallEnabled: true
                ja3Enabled: true
                ja4Enabled: true
              oidcTokenConfig:
                enabled: true
              tier: standard
    getProjectDomains:
      path: /v9/projects/{idOrName}/domains
      method: GET
      auth: true
      docs: >-
        Retrieve the domains associated with a given project by passing either
        the project `id` or `name` in the URL.
      path-parameters:
        idOrName:
          type: GetProjectDomainsRequestIdOrName
          docs: The unique project identifier or the project name
      display-name: Retrieve project domains by project by id or name
      request:
        name: GetProjectDomainsRequest
        query-parameters:
          production:
            type: optional<GetProjectDomainsRequestProduction>
            docs: Filters only production domains when set to `true`.
          target:
            type: optional<GetProjectDomainsRequestTarget>
            docs: >-
              Filters on the target of the domain. Can be either \"production\",
              \"preview\"
          gitBranch:
            type: optional<string>
            docs: Filters domains based on specific branch.
          redirects:
            type: optional<GetProjectDomainsRequestRedirects>
            docs: >-
              Excludes redirect project domains when \"false\". Includes
              redirect project domains when \"true\" (default).
          redirect:
            type: optional<string>
            docs: Filters domains based on their redirect target.
          verified:
            type: optional<GetProjectDomainsRequestVerified>
            docs: Filters domains based on their verification status.
          limit:
            type: optional<double>
            docs: Maximum number of domains to list from a request (max 100).
          since:
            type: optional<double>
            docs: Get domains created after this JavaScript timestamp.
          until:
            type: optional<double>
            docs: Get domains created before this JavaScript timestamp.
          order:
            type: optional<GetProjectDomainsRequestOrder>
            docs: Domains sort order by createdAt
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      response:
        docs: Successful response retrieving a list of domains
        type: GetProjectDomainsResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
      examples:
        - path-parameters:
            idOrName: idOrName
          query-parameters:
            redirect: example.com
            limit: 20
            since: 1609499532000
            until: 1612264332000
          response:
            body:
              domains:
                - name: name
                  apexName: apexName
                  projectId: projectId
                  redirect: redirect
                  redirectStatusCode: 1.1
                  gitBranch: gitBranch
                  customEnvironmentId: customEnvironmentId
                  updatedAt: 1.1
                  createdAt: 1.1
                  verified: true
                  verification:
                    - type: type
                      domain: domain
                      value: value
                      reason: reason
              pagination:
                count: 20
                next: 1540095775951
                prev: 1540095775951
    getProjectDomain:
      path: /v9/projects/{idOrName}/domains/{domain}
      method: GET
      auth: true
      docs: Get project domain by project id/name and domain name.
      path-parameters:
        idOrName:
          type: string
          docs: The unique project identifier or the project name
        domain:
          type: string
          docs: The project domain name
      display-name: Get a project domain
      request:
        name: GetProjectDomainRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      response:
        docs: ''
        type: GetProjectDomainResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
      examples:
        - path-parameters:
            idOrName: idOrName
            domain: www.example.com
          response:
            body:
              name: name
              apexName: apexName
              projectId: projectId
              redirect: redirect
              redirectStatusCode: 1.1
              gitBranch: gitBranch
              customEnvironmentId: customEnvironmentId
              updatedAt: 1.1
              createdAt: 1.1
              verified: true
              verification:
                - type: type
                  domain: domain
                  value: value
                  reason: reason
    removeProjectDomain:
      path: /v9/projects/{idOrName}/domains/{domain}
      method: DELETE
      auth: true
      docs: >-
        Remove a domain from a project by passing the domain name and by
        specifying the project by either passing the project `id` or `name` in
        the URL.
      path-parameters:
        idOrName:
          type: string
          docs: The unique project identifier or the project name
        domain:
          type: string
          docs: The project domain name
      display-name: Remove a domain from a project
      request:
        name: RemoveProjectDomainRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      response:
        docs: The domain was succesfully removed from the project
        type: map<string, unknown>
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ConflictError
      examples:
        - path-parameters:
            idOrName: idOrName
            domain: www.example.com
          response:
            body:
              key: value
    updateProjectDomain:
      path: /v9/projects/{idOrName}/domains/{domain}
      method: PATCH
      auth: true
      docs: >-
        Update a project domain's configuration, including the name, git branch
        and redirect of the domain.
      path-parameters:
        idOrName:
          type: string
          docs: The unique project identifier or the project name
        domain:
          type: string
          docs: The project domain name
      display-name: Update a project domain
      request:
        name: UpdateProjectDomainRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
        body:
          properties:
            gitBranch:
              type: optional<string>
              docs: Git branch to link the project domain
              validation:
                maxLength: 250
            redirect:
              type: optional<string>
              docs: Target destination domain for redirect
            redirectStatusCode:
              type: optional<integer>
              docs: Status code for domain redirect
      response:
        docs: The domain was updated successfuly
        type: UpdateProjectDomainResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.ConflictError
      examples:
        - path-parameters:
            idOrName: idOrName
            domain: www.example.com
          request: {}
          response:
            body:
              name: name
              apexName: apexName
              projectId: projectId
              redirect: redirect
              redirectStatusCode: 1.1
              gitBranch: gitBranch
              customEnvironmentId: customEnvironmentId
              updatedAt: 1.1
              createdAt: 1.1
              verified: true
              verification:
                - type: type
                  domain: domain
                  value: value
                  reason: reason
    addProjectDomain:
      path: /v10/projects/{idOrName}/domains
      method: POST
      auth: true
      docs: >-
        Add a domain to the project by passing its domain name and by specifying
        the project by either passing the project `id` or `name` in the URL. If
        the domain is not yet verified to be used on this project, the request
        will return `verified = false`, and the domain will need to be verified
        according to the `verification` challenge via `POST
        /projects/:idOrName/domains/:domain/verify`. If the domain already
        exists on the project, the request will fail with a `400` status code.
      path-parameters:
        idOrName:
          type: string
          docs: The unique project identifier or the project name
      display-name: Add a domain to a project
      request:
        name: AddProjectDomainRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
        body:
          properties:
            name:
              type: string
              docs: The project domain name
            gitBranch:
              type: optional<string>
              docs: Git branch to link the project domain
              validation:
                maxLength: 250
            redirect:
              type: optional<string>
              docs: Target destination domain for redirect
            redirectStatusCode:
              type: optional<integer>
              docs: Status code for domain redirect
      response:
        docs: The domain was successfully added to the project
        type: AddProjectDomainResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.PaymentRequiredError
        - root.ForbiddenError
        - root.ConflictError
      examples:
        - path-parameters:
            idOrName: idOrName
          request:
            name: www.example.com
          response:
            body:
              name: name
              apexName: apexName
              projectId: projectId
              redirect: redirect
              redirectStatusCode: 1.1
              gitBranch: gitBranch
              customEnvironmentId: customEnvironmentId
              updatedAt: 1.1
              createdAt: 1.1
              verified: true
              verification:
                - type: type
                  domain: domain
                  value: value
                  reason: reason
    verifyProjectDomain:
      path: /v9/projects/{idOrName}/domains/{domain}/verify
      method: POST
      auth: true
      docs: >-
        Attempts to verify a project domain with `verified = false` by checking
        the correctness of the project domain's `verification` challenge.
      path-parameters:
        idOrName:
          type: string
          docs: The unique project identifier or the project name
        domain:
          type: string
          docs: The domain name you want to verify
      display-name: Verify project domain
      request:
        name: VerifyProjectDomainRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      response:
        docs: |-
          The project domain was verified successfully
          Domain is already verified
        type: VerifyProjectDomainResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
      examples:
        - path-parameters:
            idOrName: prj_12HKQaOmR5t5Uy6vdcQsNIiZgHGB
            domain: example.com
          response:
            body:
              name: name
              apexName: apexName
              projectId: projectId
              redirect: redirect
              redirectStatusCode: 1.1
              gitBranch: gitBranch
              customEnvironmentId: customEnvironmentId
              updatedAt: 1.1
              createdAt: 1.1
              verified: true
              verification:
                - type: type
                  domain: domain
                  value: value
                  reason: reason
    filterProjectEnvs:
      path: /v9/projects/{idOrName}/env
      method: GET
      auth: true
      docs: >-
        Retrieve the environment variables for a given project by passing either
        the project `id` or `name` in the URL.
      path-parameters:
        idOrName:
          type: string
          docs: The unique project identifier or the project name
      display-name: Retrieve the environment variables of a project by id or name
      request:
        name: FilterProjectEnvsRequest
        query-parameters:
          gitBranch:
            type: optional<string>
            docs: >-
              If defined, the git branch of the environment variable to filter
              the results (must have target=preview)
          decrypt:
            type: optional<FilterProjectEnvsRequestDecrypt>
            docs: If true, the environment variable value will be decrypted
          source:
            type: optional<string>
            docs: The source that is calling the endpoint.
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      response:
        docs: The list of environment variables for the given project
        type: FilterProjectEnvsResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
      examples:
        - path-parameters:
            idOrName: prj_XLKmu1DyR1eY7zq8UgeRKbA7yVLA
          query-parameters:
            gitBranch: feature-1
            source: vercel-cli:pull
          response:
            body:
              target:
                - production
              type: system
              sunsetSecretId: sunsetSecretId
              id: id
              key: key
              value: value
              configurationId: configurationId
              createdAt: 1.1
              updatedAt: 1.1
              createdBy: createdBy
              updatedBy: updatedBy
              gitBranch: gitBranch
              edgeConfigId: edgeConfigId
              edgeConfigTokenId: edgeConfigTokenId
              contentHint:
                type: flags-connection-string
                projectId: contentHint
              internalContentHint:
                type: flags-secret
                encryptedValue: encryptedValue
              decrypted: true
              comment: comment
              customEnvironmentIds:
                - customEnvironmentIds
              vsmValue: vsmValue
              system: true
    getProjectEnv:
      path: /v1/projects/{idOrName}/env/{id}
      method: GET
      auth: true
      docs: Retrieve the environment variable for a given project.
      path-parameters:
        idOrName:
          type: string
          docs: The unique project identifier or the project name
        id:
          type: string
          docs: >-
            The unique ID for the environment variable to get the decrypted
            value.
      display-name: >-
        Retrieve the decrypted value of an environment variable of a project by
        id
      request:
        name: GetProjectEnvRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      response:
        docs: ''
        type: GetProjectEnvResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
      examples:
        - path-parameters:
            idOrName: prj_XLKmu1DyR1eY7zq8UgeRKbA7yVLA
            id: id
          response:
            body:
              decrypted: true
              target:
                - production
              type: system
              sunsetSecretId: sunsetSecretId
              id: id
              key: key
              configurationId: configurationId
              createdAt: 1.1
              updatedAt: 1.1
              createdBy: createdBy
              updatedBy: updatedBy
              gitBranch: gitBranch
              edgeConfigId: edgeConfigId
              edgeConfigTokenId: edgeConfigTokenId
              contentHint:
                type: flags-connection-string
                projectId: contentHint
              internalContentHint:
                type: flags-secret
                encryptedValue: encryptedValue
              comment: comment
              customEnvironmentIds:
                - customEnvironmentIds
              vsmValue: vsmValue
    createProjectEnv:
      path: /v10/projects/{idOrName}/env
      method: POST
      auth: true
      docs: >-
        Create one ore more environment variables for a project by passing its
        `key`, `value`, `type` and `target` and by specifying the project by
        either passing the project `id` or `name` in the URL.
      path-parameters:
        idOrName:
          type: string
          docs: The unique project identifier or the project name
      display-name: Create one or more environment variables
      request:
        body: CreateProjectEnvRequestBody
        query-parameters:
          upsert:
            type: optional<string>
            docs: Allow override of environment variable if it already exists
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
        name: CreateProjectEnvRequest
      response:
        docs: The environment variable was created successfully
        type: CreateProjectEnvResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.PaymentRequiredError
        - root.ForbiddenError
        - root.ConflictError
    removeProjectEnv:
      path: /v9/projects/{idOrName}/env/{id}
      method: DELETE
      auth: true
      docs: >-
        Delete a specific environment variable for a given project by passing
        the environment variable identifier and either passing the project `id`
        or `name` in the URL.
      path-parameters:
        idOrName:
          type: string
          docs: The unique project identifier or the project name
        id:
          type: string
          docs: The unique environment variable identifier
      display-name: Remove an environment variable
      request:
        name: RemoveProjectEnvRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      response:
        docs: The environment variable was successfully removed
        type: RemoveProjectEnvResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ConflictError
      examples:
        - path-parameters:
            idOrName: prj_XLKmu1DyR1eY7zq8UgeRKbA7yVLA
            id: XMbOEya1gUUO1ir4
          response:
            body:
              - target:
                  - production
                type: system
                sunsetSecretId: sunsetSecretId
                id: id
                key: key
                value: value
                configurationId: configurationId
                createdAt: 1.1
                updatedAt: 1.1
                createdBy: createdBy
                updatedBy: updatedBy
                gitBranch: gitBranch
                edgeConfigId: edgeConfigId
                edgeConfigTokenId: edgeConfigTokenId
                contentHint:
                  type: flags-connection-string
                  projectId: contentHint
                internalContentHint:
                  type: flags-secret
                  encryptedValue: encryptedValue
                decrypted: true
                comment: comment
                customEnvironmentIds:
                  - customEnvironmentIds
                vsmValue: vsmValue
    editProjectEnv:
      path: /v9/projects/{idOrName}/env/{id}
      method: PATCH
      auth: true
      docs: >-
        Edit a specific environment variable for a given project by passing the
        environment variable identifier and either passing the project `id` or
        `name` in the URL.
      path-parameters:
        idOrName:
          type: string
          docs: The unique project identifier or the project name
        id:
          type: string
          docs: The unique environment variable identifier
      display-name: Edit an environment variable
      request:
        name: EditProjectEnvRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
        body:
          properties:
            key:
              type: optional<string>
              docs: The name of the environment variable
            target:
              type: optional<list<EditProjectEnvRequestTargetItem>>
              docs: The target environment of the environment variable
            gitBranch:
              type: optional<string>
              docs: >-
                If defined, the git branch of the environment variable (must
                have target=preview)
              validation:
                maxLength: 250
            type:
              type: optional<EditProjectEnvRequestType>
              docs: The type of environment variable
            value:
              type: optional<string>
              docs: The value of the environment variable
            customEnvironmentIds: optional<list<string>>
            comment:
              type: optional<string>
              docs: A comment to add context on what this env var is for
              validation:
                maxLength: 500
      response:
        docs: The environment variable was successfully edited
        type: EditProjectEnvResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.ConflictError
      examples:
        - path-parameters:
            idOrName: prj_XLKmu1DyR1eY7zq8UgeRKbA7yVLA
            id: XMbOEya1gUUO1ir4
          request: {}
          response:
            body:
              target:
                - production
              type: system
              sunsetSecretId: sunsetSecretId
              id: id
              key: key
              value: value
              configurationId: configurationId
              createdAt: 1.1
              updatedAt: 1.1
              createdBy: createdBy
              updatedBy: updatedBy
              gitBranch: gitBranch
              edgeConfigId: edgeConfigId
              edgeConfigTokenId: edgeConfigTokenId
              contentHint:
                type: flags-connection-string
                projectId: contentHint
              internalContentHint:
                type: flags-secret
                encryptedValue: encryptedValue
              decrypted: true
              comment: comment
              customEnvironmentIds:
                - customEnvironmentIds
    updateProjectProtectionBypass:
      path: /v1/projects/{idOrName}/protection-bypass
      method: PATCH
      auth: true
      docs: Update the deployment protection automation bypass for a project
      path-parameters:
        idOrName:
          type: string
          docs: The unique project identifier or the project name
      display-name: Update Protection Bypass for Automation
      request:
        name: UpdateProjectProtectionBypassRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
        body:
          properties:
            revoke:
              type: optional<UpdateProjectProtectionBypassRequestRevoke>
              docs: >-
                Optional instructions for revoking and regenerating a automation
                bypass
      response:
        docs: ''
        type: UpdateProjectProtectionBypassResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.ConflictError
      examples:
        - path-parameters:
            idOrName: idOrName
          request: {}
          response:
            body:
              protectionBypass:
                key:
                  createdAt: 1.1
                  createdBy: createdBy
                  scope: automation-bypass
    requestPromote:
      path: /v10/projects/{projectId}/promote/{deploymentId}
      method: POST
      auth: true
      docs: >-
        Allows users to promote a deployment to production. Note: This does NOT
        rebuild the deployment. If you need that, then call create-deployments
        endpoint.
      path-parameters:
        projectId: string
        deploymentId: string
      display-name: Points all production domains for a project to the given deploy
      request:
        name: RequestPromoteRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.ConflictError
      examples:
        - path-parameters:
            projectId: projectId
            deploymentId: deploymentId
    listPromoteAliases:
      path: /v1/projects/{projectId}/promote/aliases
      method: GET
      auth: true
      docs: >-
        Get a list of aliases related to the last promote request with their
        mapping status
      path-parameters:
        projectId: string
      display-name: Gets a list of aliases with status for the current promote
      request:
        name: ListPromoteAliasesRequest
        query-parameters:
          limit:
            type: optional<double>
            docs: Maximum number of aliases to list from a request (max 100).
          since:
            type: optional<double>
            docs: Get aliases created after this epoch timestamp.
          until:
            type: optional<double>
            docs: Get aliases created before this epoch timestamp.
          failedOnly:
            type: optional<boolean>
            docs: >-
              Filter results down to aliases that failed to map to the requested
              deployment
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      response:
        docs: ''
        type: ListPromoteAliasesResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
      examples:
        - path-parameters:
            projectId: projectId
          query-parameters:
            limit: 20
            since: 1609499532000
            until: 1612264332000
          response:
            body:
              key: value
    pauseProject:
      path: /v1/projects/{projectId}/pause
      method: POST
      auth: true
      docs: >-
        Pause a project by passing its project `id` in the URL. If the project
        does not exist given the id then the request will fail with 400 status
        code. If the project disables auto assigning custom production domains
        and blocks the active Production Deployment then the request will return
        with 200 status code.
      path-parameters:
        projectId:
          type: string
          docs: The unique project identifier
      display-name: Pause a project
      request:
        name: PauseProjectRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.PaymentRequiredError
        - root.ForbiddenError
        - root.InternalServerError
      examples:
        - path-parameters:
            projectId: projectId
    unpauseProject:
      path: /v1/projects/{projectId}/unpause
      method: POST
      auth: true
      docs: >-
        Unpause a project by passing its project `id` in the URL. If the project
        does not exist given the id then the request will fail with 400 status
        code. If the project enables auto assigning custom production domains
        and unblocks the active Production Deployment then the request will
        return with 200 status code.
      path-parameters:
        projectId:
          type: string
          docs: The unique project identifier
      display-name: Unpause a project
      request:
        name: UnpauseProjectRequest
        query-parameters:
          teamId:
            type: optional<string>
            docs: The Team identifier to perform the request on behalf of.
          slug:
            type: optional<string>
            docs: The Team slug to perform the request on behalf of.
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.InternalServerError
      examples:
        - path-parameters:
            projectId: projectId
  source:
    openapi: openapi.json
