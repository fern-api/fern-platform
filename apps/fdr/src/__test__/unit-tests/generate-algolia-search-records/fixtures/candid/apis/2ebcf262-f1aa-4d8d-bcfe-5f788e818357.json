{
  "types": {
    "type_auth/v2:AuthGetTokenRequest": {
      "name": "AuthGetTokenRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "client_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "client_secret",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_auth/v2:AuthGetTokenResponse": {
      "name": "AuthGetTokenResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "access_token",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "expires_in",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "token_type",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_auth/v2:TooManyRequestsErrorType": {
      "name": "TooManyRequestsErrorType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter-providers/v2:EncounterProviderBase": {
      "name": "EncounterProviderBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "If the provider is an individual, this should be set instead of organization name\n",
            "key": "first_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "If the provider is an individual, this should be set instead of organization name\n",
            "key": "last_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "If the provider is an organization, this should be set instead of first + last name\n",
            "key": "organization_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter-providers/v2:RenderingProvider": {
      "name": "RenderingProvider",
      "shape": {
        "extends": ["type_encounter-providers/v2:EncounterProviderBase"],
        "properties": [
          {
            "key": "address",
            "valueType": {
              "itemType": {
                "value": "type_commons:StreetAddressLongZip",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "A National Provider Identifier is a unique 10-digit identification\nnumber issued to health care providers in the United States\n",
            "key": "npi",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter-providers/v2:ReferringProvider": {
      "name": "ReferringProvider",
      "shape": {
        "extends": ["type_encounter-providers/v2:EncounterProviderBase"],
        "properties": [
          {
            "description": "A National Provider Identifier is a unique 10-digit identification\nnumber issued to health care providers in the United States\n",
            "key": "npi",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "address",
            "valueType": {
              "itemType": {
                "value": "type_commons:StreetAddressLongZip",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter-providers/v2:BillingProvider": {
      "description": "The billing provider is the provider or business entity submitting the claim.\nBilling provider may be, but is not necessarily, the same person/NPI as the rendering provider.\nFrom a payer's perspective, this represents the person or entity being reimbursed.\nWhen a contract exists with the target payer, the billing provider should be the entity contracted with the payer.\nIn some circumstances, this will be an individual provider. In that case, submit that provider's NPI and the\ntax ID (TIN) that the provider gave to the payer during contracting.\nIn other cases, the billing entity will be a medical group. If so, submit the group NPI and the group's tax ID.\nBox 33 on the CMS-1500 claim form.\n",
      "name": "BillingProvider",
      "shape": {
        "extends": ["type_encounter-providers/v2:EncounterProviderBase"],
        "properties": [
          {
            "key": "address",
            "valueType": {
              "value": "type_commons:StreetAddressLongZip",
              "type": "id"
            }
          },
          {
            "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.\n",
            "key": "tax_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "npi",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter-providers/v2:ProviderId": {
      "name": "ProviderId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_encounter-providers/v2:EncounterProvider": {
      "name": "EncounterProvider",
      "shape": {
        "extends": ["type_encounter-providers/v2:EncounterProviderBase"],
        "properties": [
          {
            "key": "provider_id",
            "valueType": {
              "value": "type_encounter-providers/v2:ProviderId",
              "type": "id"
            }
          },
          {
            "key": "address",
            "valueType": {
              "value": "type_commons:StreetAddressLongZip",
              "type": "id"
            }
          },
          {
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "npi",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:EncounterBase": {
      "name": "EncounterBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "A client-specified unique ID to associate with this encounter;\nfor example, your internal encounter ID or a Dr. Chrono encounter ID.\nThis field should not contain PHI.\n",
            "key": "external_id",
            "valueType": {
              "value": "type_commons:EncounterExternalId",
              "type": "id"
            }
          },
          {
            "description": "Date formatted as YYYY-MM-DD; eg: 2019-08-24.\nThis date must be the local date in the timezone where the service occurred.\nBox 24a on the CMS-1500 claim form.\nIf service occurred over a range of dates, this should be the start date.\n",
            "key": "date_of_service",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          },
          {
            "description": "Date formatted as YYYY-MM-DD; eg: 2019-08-25.\nThis date must be the local date in the timezone where the service occurred.\nIf omitted, the Encounter is assumed to be for a single day.\nMust not be temporally before the date_of_service field.\n",
            "key": "end_date_of_service",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Box 23 on the CMS-1500 claim form.",
            "key": "prior_authorization_number",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:PriorAuthorizationNumber",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether this patient has authorized the release of medical information\nfor billing purpose.\nBox 12 on the CMS-1500 claim form.\n",
            "key": "patient_authorized_release",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether this patient has authorized insurance payments to be made to you,\nnot them. If false, patient may receive reimbursement.\nBox 13 on the CMS-1500 claim form.\n",
            "key": "benefits_assigned_to_provider",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether you have accepted the patient's authorization for insurance payments\nto be made to you, not them.\nBox 27 on the CMS-1500 claim form.\n",
            "key": "provider_accepts_assignment",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Human-readable description of the appointment type (ex: \"Acupuncture - Headaches\")\n",
            "key": "appointment_type",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "existing_medications",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_encounters/v4:Medication",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "vitals",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:Vitals",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "interventions",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_encounters/v4:Intervention",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "pay_to_address",
            "valueType": {
              "itemType": {
                "value": "type_commons:StreetAddressLongZip",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether or not this was a synchronous or asynchronous encounter.\nAsynchronous encounters occur when providers and patients communicate online using\nforms, instant messaging, or other pre-recorded digital mediums.\nSynchronous encounters occur in live, real-time settings where the patient interacts\ndirectly with the provider, such as over video or a phone call.\n",
            "key": "synchronicity",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:SynchronicityType",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Defines if the Encounter is to be billed by Candid to the responsible_party.\nExamples for when this should be set to NOT_BILLABLE include\nif the Encounter has not occurred yet or if there is no intention of ever billing the responsible_party.\n",
            "key": "billable_status",
            "valueType": {
              "value": "type_encounters/v4:BillableStatusType",
              "type": "id"
            }
          },
          {
            "description": "Defines the party to be billed with the initial balance owed on the claim.\n",
            "key": "responsible_party",
            "valueType": {
              "value": "type_encounters/v4:ResponsiblePartyType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:Encounter": {
      "name": "Encounter",
      "shape": {
        "extends": ["type_encounters/v4:EncounterBase"],
        "properties": [
          {
            "key": "encounter_id",
            "valueType": {
              "value": "type_commons:EncounterId",
              "type": "id"
            }
          },
          {
            "key": "claims",
            "valueType": {
              "itemType": {
                "value": "type_claims:Claim",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "patient",
            "valueType": {
              "value": "type_individual:Patient",
              "type": "id"
            }
          },
          {
            "key": "guarantor",
            "valueType": {
              "itemType": {
                "value": "type_guarantor/v1:Guarantor",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "billing_provider",
            "valueType": {
              "value": "type_encounter-providers/v2:EncounterProvider",
              "type": "id"
            }
          },
          {
            "key": "rendering_provider",
            "valueType": {
              "value": "type_encounter-providers/v2:EncounterProvider",
              "type": "id"
            }
          },
          {
            "key": "referring_provider",
            "valueType": {
              "itemType": {
                "value": "type_encounter-providers/v2:EncounterProvider",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_facility",
            "valueType": {
              "value": "type_service-facility:EncounterServiceFacility",
              "type": "id"
            }
          },
          {
            "key": "subscriber_primary",
            "valueType": {
              "itemType": {
                "value": "type_individual:Subscriber",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "subscriber_secondary",
            "valueType": {
              "itemType": {
                "value": "type_individual:Subscriber",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "URL that links directly to the claim created in Candid",
            "key": "url",
            "valueType": {
              "value": "type_commons:LinkUrl",
              "type": "id"
            }
          },
          {
            "key": "diagnoses",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:Diagnosis",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "clinical_notes",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:ClinicalNoteCategory",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "description": "Spot to store misc, human-readable, notes about this encounter to be\nused in the billing process.\n",
            "key": "billing_notes",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_billing-notes:BillingNote",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "place_of_service_code",
            "valueType": {
              "itemType": {
                "value": "type_commons:FacilityTypeCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "place_of_service_code_as_submitted",
            "valueType": {
              "itemType": {
                "value": "type_commons:FacilityTypeCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_histories",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:PatientHistoryCategory",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "patient_payments",
            "valueType": {
              "itemType": {
                "value": "type_patient-payments/v3:PatientPayment",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "tags",
            "valueType": {
              "itemType": {
                "value": "type_tags:Tag",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "coding_attribution",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:CodingAttributionType",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "work_queue_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:WorkQueueId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "work_queue_membership_activated_at",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "datetime"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The party who is responsible for taking the next action on an Encounter, as defined by ownership of open Tasks.",
            "key": "owner_of_next_action",
            "valueType": {
              "value": "type_encounters/v4:EncounterOwnerOfNextActionType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:EncounterSortOptions": {
      "name": "EncounterSortOptions",
      "shape": {
        "values": [
          {
            "value": "created_at:asc"
          },
          {
            "value": "created_at:desc"
          },
          {
            "value": "date_of_service:asc"
          },
          {
            "value": "date_of_service:desc"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:Medication": {
      "name": "Medication",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "rx_cui",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:RxCui",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "dosage",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "dosage_form",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "frequency",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "as_needed",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:Vitals": {
      "name": "Vitals",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "height_in",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "weight_lbs",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "blood_pressure_systolic_mmhg",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "blood_pressure_diastolic_mmhg",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "body_temperature_f",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "double"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:Intervention": {
      "name": "Intervention",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "category",
            "valueType": {
              "value": "type_encounters/v4:InterventionCategory",
              "type": "id"
            }
          },
          {
            "description": "\"Examples: 'Birth Control LAC', 'Tracking', 'Stress Management', 'Supplement', 'Labs'\"\n",
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Required when `type` is `allopathic`",
            "key": "medication",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:Medication",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Required when `type` is `tests`",
            "key": "labs",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_encounters/v4:Lab",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:InterventionCategory": {
      "name": "InterventionCategory",
      "shape": {
        "values": [
          {
            "value": "allopathic"
          },
          {
            "value": "naturopathic"
          },
          {
            "value": "tests"
          },
          {
            "value": "lifestyle"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:Lab": {
      "name": "Lab",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "code_type",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:LabCodeType",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:LabCodeType": {
      "name": "LabCodeType",
      "shape": {
        "values": [
          {
            "value": "quest"
          },
          {
            "value": "labcorp"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:PatientHistoryCategory": {
      "name": "PatientHistoryCategory",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "category",
            "valueType": {
              "value": "type_encounters/v4:PatientHistoryCategoryEnum",
              "type": "id"
            }
          },
          {
            "description": "Must contain at least one item.",
            "key": "questions",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:IntakeQuestion",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:PatientHistoryCategoryEnum": {
      "name": "PatientHistoryCategoryEnum",
      "shape": {
        "values": [
          {
            "value": "present_illness"
          },
          {
            "value": "medical"
          },
          {
            "value": "family"
          },
          {
            "value": "social"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:IntakeQuestion": {
      "name": "IntakeQuestion",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_encounters/v4:IntakeQuestionId",
              "type": "id"
            }
          },
          {
            "key": "text",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "responses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_encounters/v4:IntakeResponseAndFollowUps",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:IntakeResponseAndFollowUps": {
      "name": "IntakeResponseAndFollowUps",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "response",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "follow_ups",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_encounters/v4:IntakeFollowUp",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:IntakeFollowUp": {
      "name": "IntakeFollowUp",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_encounters/v4:IntakeFollowUpId",
              "type": "id"
            }
          },
          {
            "key": "text",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "response",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:ClinicalNoteCategoryCreate": {
      "name": "ClinicalNoteCategoryCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "category",
            "valueType": {
              "value": "type_encounters/v4:NoteCategory",
              "type": "id"
            }
          },
          {
            "key": "notes",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:ClinicalNote",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:ClinicalNoteCategory": {
      "name": "ClinicalNoteCategory",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "category",
            "valueType": {
              "value": "type_encounters/v4:NoteCategory",
              "type": "id"
            }
          },
          {
            "key": "notes",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "list"
            }
          },
          {
            "key": "notes_structured",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_encounters/v4:ClinicalNote",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:NoteCategory": {
      "name": "NoteCategory",
      "shape": {
        "values": [
          {
            "value": "clinical"
          },
          {
            "value": "care_plan"
          },
          {
            "value": "diagnoses"
          },
          {
            "value": "vitals"
          },
          {
            "value": "physical_exam"
          },
          {
            "value": "review_of_systems"
          },
          {
            "value": "medical_decisions"
          },
          {
            "value": "history_of_present_illness"
          },
          {
            "value": "patient_info"
          },
          {
            "value": "chief_complaint"
          },
          {
            "value": "health_record"
          },
          {
            "value": "consent"
          },
          {
            "value": "procedure"
          },
          {
            "value": "time_in_appointment"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:ClinicalNote": {
      "name": "ClinicalNote",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "text",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "author_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "author_npi",
            "valueType": {
              "itemType": {
                "value": "type_commons:Npi",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "timestamp",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:ResponsiblePartyType": {
      "name": "ResponsiblePartyType",
      "shape": {
        "values": [
          {
            "value": "INSURANCE_PAY"
          },
          {
            "value": "SELF_PAY"
          },
          {
            "value": "UNKNOWN"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:BillableStatusType": {
      "name": "BillableStatusType",
      "shape": {
        "values": [
          {
            "value": "BILLABLE"
          },
          {
            "value": "NOT_BILLABLE"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:EncounterOwnerOfNextActionType": {
      "name": "EncounterOwnerOfNextActionType",
      "shape": {
        "values": [
          {
            "value": "CANDID"
          },
          {
            "value": "CUSTOMER"
          },
          {
            "value": "CODER"
          },
          {
            "value": "NONE"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:SynchronicityType": {
      "name": "SynchronicityType",
      "shape": {
        "values": [
          {
            "value": "Synchronous"
          },
          {
            "value": "Asynchronous"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:CodingAttributionType": {
      "name": "CodingAttributionType",
      "shape": {
        "values": [
          {
            "value": "CANDID"
          },
          {
            "value": "CUSTOMER"
          },
          {
            "value": "TCN"
          },
          {
            "value": "PJF"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:EncounterPage": {
      "name": "EncounterPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:Encounter",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:PriorAuthorizationNumber": {
      "name": "PriorAuthorizationNumber",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_encounters/v4:RxCui": {
      "name": "RxCui",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_encounters/v4:IntakeQuestionId": {
      "name": "IntakeQuestionId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_encounters/v4:IntakeFollowUpId": {
      "name": "IntakeFollowUpId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_encounters/v4:EncounterExternalIdUniquenessErrorType": {
      "name": "EncounterExternalIdUniquenessErrorType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "external_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:EncounterExternalId",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:EncounterGuarantorMissingContactInfoErrorType": {
      "name": "EncounterGuarantorMissingContactInfoErrorType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "missing_fields",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:CashPayPayerErrorMessage": {
      "name": "CashPayPayerErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_expected-network-status/v1:ExpectedNetworkStatus": {
      "name": "ExpectedNetworkStatus",
      "shape": {
        "values": [
          {
            "value": "in_network"
          },
          {
            "value": "out_of_network"
          },
          {
            "value": "unknown"
          }
        ],
        "type": "enum"
      }
    },
    "type_expected-network-status/v1:ExpectedNetworkStatusResponse": {
      "name": "ExpectedNetworkStatusResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "expected_network_status",
            "valueType": {
              "value": "type_expected-network-status/v1:ExpectedNetworkStatus",
              "type": "id"
            }
          },
          {
            "key": "explanation",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "contract_id",
            "valueType": {
              "itemType": {
                "value": "type_contracts:ContractId",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_exports/v3:GetExportsResponse": {
      "name": "GetExportsResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Report name; contains date strings representing the start and end date of the export.",
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Authenticated URL where a customer's report can be retrieved.",
            "key": "authenticated_download_url",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Expiration datetime of the authenticated URL. URLs expire after 2 minutes.",
            "key": "authenticated_download_url_expiration",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_guarantor/v1:GuarantorId": {
      "name": "GuarantorId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_guarantor/v1:GuarantorBase": {
      "name": "GuarantorBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "first_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "last_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "external_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "date_of_birth",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "address",
            "valueType": {
              "itemType": {
                "value": "type_commons:StreetAddressShortZip",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_guarantor/v1:Guarantor": {
      "name": "Guarantor",
      "shape": {
        "extends": ["type_guarantor/v1:GuarantorBase"],
        "properties": [
          {
            "key": "guarantor_id",
            "valueType": {
              "value": "type_guarantor/v1:GuarantorId",
              "type": "id"
            }
          },
          {
            "key": "phone_numbers",
            "valueType": {
              "itemType": {
                "value": "type_commons:PhoneNumber",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "phone_consent",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "email",
            "valueType": {
              "itemType": {
                "value": "type_commons:Email",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "email_consent",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_guarantor/v1:GuarantorCreate": {
      "name": "GuarantorCreate",
      "shape": {
        "extends": ["type_guarantor/v1:GuarantorBase"],
        "properties": [
          {
            "key": "phone_numbers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_commons:PhoneNumber",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "description": "Defaults to false",
            "key": "phone_consent",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "email",
            "valueType": {
              "itemType": {
                "value": "type_commons:Email",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Defaults to false",
            "key": "email_consent",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_guarantor/v1:EncounterHasExistingGuarantorErrorType": {
      "name": "EncounterHasExistingGuarantorErrorType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-providers/v2:OrganizationProviderId": {
      "name": "OrganizationProviderId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_organization-providers/v2:OrganizationProviderSortOptions": {
      "name": "OrganizationProviderSortOptions",
      "shape": {
        "values": [
          {
            "value": "provider_name:asc"
          },
          {
            "value": "provider_name:desc"
          },
          {
            "value": "npi:asc"
          },
          {
            "value": "npi:desc"
          }
        ],
        "type": "enum"
      }
    },
    "type_organization-providers/v2:ProviderType": {
      "name": "ProviderType",
      "shape": {
        "values": [
          {
            "value": "INDIVIDUAL"
          },
          {
            "value": "ORGANIZATION"
          }
        ],
        "type": "enum"
      }
    },
    "type_organization-providers/v2:LicenseType": {
      "name": "LicenseType",
      "shape": {
        "values": [
          {
            "value": "MD"
          },
          {
            "value": "NP"
          },
          {
            "value": "PA"
          },
          {
            "value": "LMFT"
          },
          {
            "value": "LCPC"
          },
          {
            "value": "LCSW"
          },
          {
            "value": "PMHNP"
          },
          {
            "value": "FNP"
          },
          {
            "value": "LPCC"
          },
          {
            "value": "DO"
          },
          {
            "value": "RD"
          },
          {
            "value": "SLP"
          },
          {
            "value": "APRN"
          },
          {
            "value": "LPC"
          },
          {
            "value": "PHD"
          },
          {
            "value": "PSYD"
          },
          {
            "value": "LMSW"
          },
          {
            "value": "LMHC"
          },
          {
            "value": "OTHER_MASTERS"
          },
          {
            "value": "BCBA"
          },
          {
            "value": "UNKNOWN"
          },
          {
            "value": "RPH"
          },
          {
            "value": "PHT"
          },
          {
            "value": "LAC"
          },
          {
            "value": "LMT"
          },
          {
            "value": "DC"
          },
          {
            "value": "ND"
          },
          {
            "value": "MA"
          },
          {
            "value": "PT"
          },
          {
            "value": "IBCLC"
          },
          {
            "value": "RN"
          },
          {
            "value": "DPT"
          },
          {
            "value": "LCMHC"
          }
        ],
        "type": "enum"
      }
    },
    "type_organization-providers/v2:OrganizationProviderAddress": {
      "name": "OrganizationProviderAddress",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The address of the provider",
            "key": "address",
            "valueType": {
              "value": "type_commons:StreetAddressLongZip",
              "type": "id"
            }
          },
          {
            "description": "The address type of the provider",
            "key": "address_type",
            "valueType": {
              "value": "type_organization-providers/v2:AddressType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-providers/v2:AddressType": {
      "name": "AddressType",
      "shape": {
        "values": [
          {
            "value": "DEFAULT"
          }
        ],
        "type": "enum"
      }
    },
    "type_organization-providers/v3:OrganizationProviderV2": {
      "name": "OrganizationProviderV2",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The NPI of the provider. This must be all digits [0-9] and exactly 10 characters long.",
            "key": "npi",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether the provider can be used to render services.",
            "key": "is_rendering",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether the provider can be used to bill services.",
            "key": "is_billing",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The first name of the provider, if the provider is an individual.",
            "key": "first_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The last name of the provider, if the provider is an individual.",
            "key": "last_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The name of the provider, if the provider is an organization.",
            "key": "organization_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether the provider is an individual (NPPES Type 1) or organization (NPPES Type 2) provider.\n",
            "key": "provider_type",
            "valueType": {
              "value": "type_organization-providers/v2:ProviderType",
              "type": "id"
            }
          },
          {
            "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.\n",
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A code designating classification and specialization.",
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The type of license that the provider holds.",
            "key": "license_type",
            "valueType": {
              "value": "type_organization-providers/v2:LicenseType",
              "type": "id"
            }
          },
          {
            "description": "The addresses associated with this provider.",
            "key": "addresses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_organization-providers/v2:OrganizationProviderAddress",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "description": "The employment start date for the provider.",
            "key": "employment_start_date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The employment termination date for the provider.",
            "key": "employment_termination_date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Auto-generated ID set on creation",
            "key": "organization_provider_id",
            "valueType": {
              "value": "type_organization-providers/v2:OrganizationProviderId",
              "type": "id"
            }
          },
          {
            "description": "Qualification given to a provider (PTAN, Medicaid Provider Id etc.)",
            "key": "qualifications",
            "valueType": {
              "itemType": {
                "value": "type_identifiers:Identifier",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-providers/v3:OrganizationProviderCreateV2": {
      "name": "OrganizationProviderCreateV2",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The NPI of the provider. This must be all digits [0-9] and exactly 10 characters long.",
            "key": "npi",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether the provider can be used to render services.",
            "key": "is_rendering",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether the provider can be used to bill services.",
            "key": "is_billing",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The first name of the provider, if the provider is an individual.",
            "key": "first_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The last name of the provider, if the provider is an individual.",
            "key": "last_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The name of the provider, if the provider is an organization.",
            "key": "organization_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether the provider is an individual (NPPES Type 1) or organization (NPPES Type 2) provider.\n",
            "key": "provider_type",
            "valueType": {
              "value": "type_organization-providers/v2:ProviderType",
              "type": "id"
            }
          },
          {
            "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.\n",
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A code designating classification and specialization.",
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The type of license that the provider holds.",
            "key": "license_type",
            "valueType": {
              "value": "type_organization-providers/v2:LicenseType",
              "type": "id"
            }
          },
          {
            "description": "The addresses associated with this provider.",
            "key": "addresses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_organization-providers/v2:OrganizationProviderAddress",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "description": "The employment start date for the provider.",
            "key": "employment_start_date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The employment termination date for the provider.",
            "key": "employment_termination_date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A provider's qualifications such as PTAN, Medicaid Provider Id, etc.",
            "key": "qualifications",
            "valueType": {
              "itemType": {
                "value": "type_identifiers:IdentifierCreate",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-providers/v3:OrganizationProviderUpdateV2": {
      "name": "OrganizationProviderUpdateV2",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The NPI of the provider. This must be all digits [0-9] and exactly 10 characters long.",
            "key": "npi",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether the provider can be used to render services.",
            "key": "is_rendering",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether the provider can be used to bill services.",
            "key": "is_billing",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The first name of the provider, if the provider is an individual.",
            "key": "first_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The last name of the provider, if the provider is an individual.",
            "key": "last_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The name of the provider, if the provider is an organization.",
            "key": "organization_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether the provider is an individual (NPPES Type 1) or organization (NPPES Type 2) provider.\n",
            "key": "provider_type",
            "valueType": {
              "itemType": {
                "value": "type_organization-providers/v2:ProviderType",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.\n",
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A code designating classification and specialization.",
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The type of license that the provider holds.",
            "key": "license_type",
            "valueType": {
              "itemType": {
                "value": "type_organization-providers/v2:LicenseType",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The addresses associated with this provider.",
            "key": "addresses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_organization-providers/v2:OrganizationProviderAddress",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "description": "The employment start date for the provider.",
            "key": "employment_start_date",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The employment termination date for the provider.",
            "key": "employment_termination_date",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Provider's qualifications (medicare provider number, medicaid provider number, etc.)",
            "key": "qualifications",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_identifiers:UpdatableIdentifier",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-providers/v3:OrganizationProviderPageV2": {
      "name": "OrganizationProviderPageV2",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_organization-providers/v3:OrganizationProviderV2",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patient-payments/v3:PatientPaymentId": {
      "name": "PatientPaymentId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_patient-payments/v3:PatientPaymentSource": {
      "name": "PatientPaymentSource",
      "shape": {
        "values": [
          {
            "value": "MANUAL_ENTRY"
          },
          {
            "value": "CHARGEBEE_PAYMENTS"
          },
          {
            "value": "CHARGEBEE MANUALLY VOIDED BY CANDID"
          },
          {
            "value": "CHARGEBEE_REFUNDS"
          },
          {
            "value": "SQUARE_REFUNDS"
          },
          {
            "value": "SQUARE_PAYMENTS"
          },
          {
            "value": "STRIPE_CHARGES"
          },
          {
            "value": "STRIPE_REFUNDS"
          },
          {
            "value": "ELATION_PAYMENTS"
          }
        ],
        "type": "enum"
      }
    },
    "type_patient-payments/v3:PatientPayment": {
      "name": "PatientPayment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "patient_payment_id",
            "valueType": {
              "value": "type_patient-payments/v3:PatientPaymentId",
              "type": "id"
            }
          },
          {
            "key": "organization_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          },
          {
            "key": "source_internal_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "source",
            "valueType": {
              "value": "type_patient-payments/v3:PatientPaymentSource",
              "type": "id"
            }
          },
          {
            "key": "amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payment_timestamp",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "datetime"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "status",
            "valueType": {
              "itemType": {
                "value": "type_patient-payments/v3:PatientPaymentStatus",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "payment_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "payment_note",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_external_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:PatientExternalId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "encounter_external_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:EncounterExternalId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:ServiceLineId",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patient-payments/v3:PatientPaymentStatus": {
      "name": "PatientPaymentStatus",
      "shape": {
        "values": [
          {
            "value": "PENDING"
          },
          {
            "value": "paid"
          },
          {
            "value": "CANCELED"
          },
          {
            "value": "voided"
          },
          {
            "value": "FAILED"
          },
          {
            "value": "COMPLETED"
          },
          {
            "value": "succeeded"
          },
          {
            "value": "pending"
          },
          {
            "value": "failed"
          },
          {
            "value": "requires_action"
          },
          {
            "value": "canceled"
          }
        ],
        "type": "enum"
      }
    },
    "type_service-lines/v2:ServiceLineCreate": {
      "name": "ServiceLineCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "modifiers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_commons:ProcedureModifier",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "procedure_code",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "String representation of a Decimal that can be parsed by most libraries.\nA ServiceLine quantity cannot contain more than one digit of precision.\nExample: 1.1 is valid, 1.11 is not.\n",
            "key": "quantity",
            "valueType": {
              "value": "type_commons:Decimal",
              "type": "id"
            }
          },
          {
            "key": "units",
            "valueType": {
              "value": "type_commons:ServiceLineUnits",
              "type": "id"
            }
          },
          {
            "description": "The total amount charged for this service line taking quantity into account. For example, if a single unit\ncosts 100 cents and 2 units were rendered, the charge_amount_cents should be 200. Should be greater than or\nequal to 0.\n",
            "key": "charge_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Indices (zero-indexed) of all the diagnoses this service line references",
            "key": "diagnosis_pointers",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "list"
            }
          },
          {
            "key": "drug_identification",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:DrugIdentification",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "place_of_service_code",
            "valueType": {
              "itemType": {
                "value": "type_commons:FacilityTypeCode",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceLine": {
      "name": "ServiceLine",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "modifiers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_commons:ProcedureModifier",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "charge_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "allowed_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "insurance_balance_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_balance_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "paid_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_responsibility_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_zero",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_one",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_two",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_three",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_era_data",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:ServiceLineERAData",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_manual_adjustments",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_service-lines/v2:ServiceLineAdjustment",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "related_invoices",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_invoices:Invoice",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "denial_reason",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:ServiceLineDenialReason",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "place_of_service_code",
            "valueType": {
              "itemType": {
                "value": "type_commons:FacilityTypeCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_id",
            "valueType": {
              "value": "type_commons:ServiceLineId",
              "type": "id"
            }
          },
          {
            "key": "procedure_code",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "String representation of a Decimal that can be parsed by most libraries.\nA ServiceLine quantity cannot contain more than one digit of precision.\nExample: 1.1 is valid, 1.11 is not.\n",
            "key": "quantity",
            "valueType": {
              "value": "type_commons:Decimal",
              "type": "id"
            }
          },
          {
            "key": "units",
            "valueType": {
              "value": "type_commons:ServiceLineUnits",
              "type": "id"
            }
          },
          {
            "key": "claim_id",
            "valueType": {
              "value": "type_commons:ClaimId",
              "type": "id"
            }
          },
          {
            "description": "A range of dates of service for this service line. If the service line is for a single date, the end date\nwill be empty.\n",
            "key": "date_of_service_range",
            "valueType": {
              "value": "type_commons:DateRangeOptionalEnd",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceLineERAData": {
      "name": "ServiceLineERAData",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_line_adjustments",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:ServiceLineAdjustment",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "remittance_advice_remark_codes",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceLineAdjustment": {
      "name": "ServiceLineAdjustment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "created_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "adjustment_group_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "adjustment_reason_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "adjustment_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "adjustment_note",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceLineDenialReason": {
      "description": "The reason a given service line was denied within a given time range.\nA service line may be denied for different reasons over time, but only one reason at a time.\n",
      "name": "ServiceLineDenialReason",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Text of the denial reason",
            "key": "reason",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:DenialReasonContent",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:DenialReasonContent": {
      "name": "DenialReasonContent",
      "shape": {
        "values": [
          {
            "value": "Authorization Required"
          },
          {
            "value": "Referral Required"
          },
          {
            "value": "Medical Records Requested"
          },
          {
            "value": "Timely Filing"
          },
          {
            "value": "Duplicate Claim"
          },
          {
            "value": "Incorrect Place of Service"
          },
          {
            "value": "Incorrect Patient Gender"
          },
          {
            "value": "Bundled"
          },
          {
            "value": "Exceeded Billable Time"
          },
          {
            "value": "Invalid Provider Information"
          },
          {
            "value": "Invalid Diagnosis Code"
          },
          {
            "value": "Incorrect Procedure Code"
          },
          {
            "value": "Invalid Modifier"
          },
          {
            "value": "Missing NDC Code"
          },
          {
            "value": "Invalid Insurance Data"
          },
          {
            "value": "No Active Coverage"
          },
          {
            "value": "Coordination of Benefits"
          },
          {
            "value": "Incorrect Payer"
          },
          {
            "value": "Credentialing"
          },
          {
            "value": "No Effective Contract"
          },
          {
            "value": "Missing W-9"
          },
          {
            "value": "Missing Contract Linkage"
          },
          {
            "value": "Non-Covered Benefit"
          },
          {
            "value": "Experimental Procedure"
          },
          {
            "value": "Not Medically Necessary"
          },
          {
            "value": "Info Requested from Provider"
          },
          {
            "value": "Info Requested from Patient"
          },
          {
            "value": "Billing Error"
          },
          {
            "value": "Unknown"
          },
          {
            "value": "Max Benefit Reached"
          }
        ],
        "type": "enum"
      }
    },
    "type_service-lines/v2:DrugIdentification": {
      "name": "DrugIdentification",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_id_qualifier",
            "valueType": {
              "value": "type_service-lines/v2:ServiceIdQualifier",
              "type": "id"
            }
          },
          {
            "key": "national_drug_code",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "national_drug_unit_count",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "measurement_unit_code",
            "valueType": {
              "value": "type_service-lines/v2:MeasurementUnitCode",
              "type": "id"
            }
          },
          {
            "key": "link_sequence_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "pharmacy_prescription_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceIdQualifier": {
      "name": "ServiceIdQualifier",
      "shape": {
        "values": [
          {
            "description": "EAN/UCC - 13",
            "value": "EN"
          },
          {
            "description": "EAN/UCC - 8",
            "value": "EO"
          },
          {
            "description": "HIBC (Health Care Industry Bar Code) Supplier Labeling Standard Primary Data Message\n",
            "value": "HI"
          },
          {
            "description": "National Drug Code in 5-4-2 Format",
            "value": "N4"
          },
          {
            "description": "Customer Order Number",
            "value": "ON"
          },
          {
            "description": "GTIN 14-digit Data Structure",
            "value": "UK"
          },
          {
            "description": "UCC - 12",
            "value": "UP"
          }
        ],
        "type": "enum"
      }
    },
    "type_service-lines/v2:MeasurementUnitCode": {
      "name": "MeasurementUnitCode",
      "shape": {
        "values": [
          {
            "value": "ML"
          },
          {
            "value": "UN"
          },
          {
            "value": "GR"
          },
          {
            "value": "F2"
          },
          {
            "value": "ME"
          }
        ],
        "type": "enum"
      }
    },
    "type_tasks/v3:TaskActionExecutionMethod": {
      "name": "TaskActionExecutionMethod",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "close_task",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_tasks/v3:TaskActions": {
      "name": "TaskActions",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "actions",
            "valueType": {
              "itemType": {
                "value": "type_tasks/v3:TaskAction",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_tasks/v3:TaskAction": {
      "name": "TaskAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "display_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "execution_method",
            "valueType": {
              "value": "type_tasks/v3:TaskActionExecutionMethod",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_billing-notes:BillingNoteId": {
      "name": "BillingNoteId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_billing-notes:BillingNoteBase": {
      "name": "BillingNoteBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Empty string not allowed.",
            "key": "text",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_billing-notes:BillingNote": {
      "name": "BillingNote",
      "shape": {
        "extends": ["type_billing-notes:BillingNoteBase"],
        "properties": [
          {
            "key": "billing_note_id",
            "valueType": {
              "value": "type_billing-notes:BillingNoteId",
              "type": "id"
            }
          },
          {
            "key": "encounter_id",
            "valueType": {
              "value": "type_commons:EncounterId",
              "type": "id"
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "author_auth0_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "author_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_claims:Claim": {
      "name": "Claim",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "claim_id",
            "valueType": {
              "value": "type_commons:ClaimId",
              "type": "id"
            }
          },
          {
            "key": "status",
            "valueType": {
              "value": "type_claims:ClaimStatus",
              "type": "id"
            }
          },
          {
            "key": "clearinghouse",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "clearinghouse_claim_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "payer_claim_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_lines",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:ServiceLine",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "eras",
            "valueType": {
              "itemType": {
                "value": "type_era:ERA",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_claims:ClaimStatus": {
      "name": "ClaimStatus",
      "shape": {
        "values": [
          {
            "value": "biller_received"
          },
          {
            "value": "coded"
          },
          {
            "value": "submitted_to_payer"
          },
          {
            "value": "missing_information"
          },
          {
            "value": "not_billable"
          },
          {
            "value": "waiting_for_provider"
          },
          {
            "value": "era_received"
          },
          {
            "value": "rejected"
          },
          {
            "value": "denied"
          },
          {
            "value": "paid"
          },
          {
            "value": "paid_incorrectly"
          },
          {
            "value": "finalized_paid"
          },
          {
            "value": "finalized_denied"
          },
          {
            "value": "held_by_customer"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:EncounterId": {
      "name": "EncounterId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:OrganizationId": {
      "name": "OrganizationId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:ClaimId": {
      "name": "ClaimId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:ServiceLineId": {
      "name": "ServiceLineId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:PatientExternalId": {
      "name": "PatientExternalId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:EncounterExternalId": {
      "name": "EncounterExternalId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:Npi": {
      "name": "Npi",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:WorkQueueId": {
      "name": "WorkQueueId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:TaskId": {
      "name": "TaskId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:LinkUrl": {
      "name": "LinkUrl",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:PageToken": {
      "name": "PageToken",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:Date": {
      "description": "ISO 8601 date; formatted YYYY-MM-DD (i.e. 2012-02-01)",
      "name": "Date",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:DateRangeOptionalEnd": {
      "name": "DateRangeOptionalEnd",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "start_date",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          },
          {
            "key": "end_date",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:Decimal": {
      "description": "String representation of a Decimal that can be parsed by most libraries.",
      "name": "Decimal",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:RemovableDateRangeOptionalEnd": {
      "name": "RemovableDateRangeOptionalEnd",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "date_range",
            "additionalProperties": {
              "extends": ["type_commons:DateRangeOptionalEnd"],
              "properties": []
            }
          },
          {
            "discriminantValue": "remove",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_commons:ResourcePage": {
      "name": "ResourcePage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "prev_page_token",
            "valueType": {
              "itemType": {
                "value": "type_commons:PageToken",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "next_page_token",
            "valueType": {
              "itemType": {
                "value": "type_commons:PageToken",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:StreetAddressBase": {
      "name": "StreetAddressBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "address1",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "address2",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "city",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "state",
            "valueType": {
              "value": "type_commons:State",
              "type": "id"
            }
          },
          {
            "description": "5-digit zip code",
            "key": "zip_code",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:StreetAddressShortZip": {
      "name": "StreetAddressShortZip",
      "shape": {
        "extends": ["type_commons:StreetAddressBase"],
        "properties": [
          {
            "description": "4-digit zip add-on code https://en.wikipedia.org/wiki/ZIP_Code#ZIP+4",
            "key": "zip_plus_four_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:StreetAddressLongZip": {
      "name": "StreetAddressLongZip",
      "shape": {
        "extends": ["type_commons:StreetAddressBase"],
        "properties": [
          {
            "description": "4-digit zip add-on code https://en.wikipedia.org/wiki/ZIP_Code#ZIP+4",
            "key": "zip_plus_four_code",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:State": {
      "name": "State",
      "shape": {
        "values": [
          {
            "value": "AA"
          },
          {
            "value": "AE"
          },
          {
            "value": "AP"
          },
          {
            "value": "AL"
          },
          {
            "value": "AK"
          },
          {
            "value": "AZ"
          },
          {
            "value": "AR"
          },
          {
            "value": "CA"
          },
          {
            "value": "CO"
          },
          {
            "value": "CT"
          },
          {
            "value": "DC"
          },
          {
            "value": "DE"
          },
          {
            "value": "FL"
          },
          {
            "value": "GA"
          },
          {
            "value": "HI"
          },
          {
            "value": "ID"
          },
          {
            "value": "IL"
          },
          {
            "value": "IN"
          },
          {
            "value": "IA"
          },
          {
            "value": "KS"
          },
          {
            "value": "KY"
          },
          {
            "value": "LA"
          },
          {
            "value": "ME"
          },
          {
            "value": "MD"
          },
          {
            "value": "MA"
          },
          {
            "value": "MI"
          },
          {
            "value": "MN"
          },
          {
            "value": "MS"
          },
          {
            "value": "MO"
          },
          {
            "value": "MT"
          },
          {
            "value": "NE"
          },
          {
            "value": "NV"
          },
          {
            "value": "NH"
          },
          {
            "value": "NJ"
          },
          {
            "value": "NM"
          },
          {
            "value": "NY"
          },
          {
            "value": "NC"
          },
          {
            "value": "ND"
          },
          {
            "value": "OH"
          },
          {
            "value": "OK"
          },
          {
            "value": "OR"
          },
          {
            "value": "PA"
          },
          {
            "value": "PR"
          },
          {
            "value": "RI"
          },
          {
            "value": "SC"
          },
          {
            "value": "SD"
          },
          {
            "value": "TN"
          },
          {
            "value": "TX"
          },
          {
            "value": "UT"
          },
          {
            "value": "VT"
          },
          {
            "value": "VA"
          },
          {
            "value": "WA"
          },
          {
            "value": "WV"
          },
          {
            "value": "WI"
          },
          {
            "value": "WY"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:SourceOfPaymentCode": {
      "name": "SourceOfPaymentCode",
      "shape": {
        "values": [
          {
            "description": "Self-pay",
            "value": "09"
          },
          {
            "description": "Other Non-Federal Programs",
            "value": "11"
          },
          {
            "description": "Preferred Provider Organization (PPO)",
            "value": "12"
          },
          {
            "description": "Point of Service (POS)",
            "value": "13"
          },
          {
            "description": "Exclusive Provider Organization (EPO)",
            "value": "14"
          },
          {
            "description": "Indemnity Insurance",
            "value": "15"
          },
          {
            "description": "Health Maintenance Organization (HMO) Medicare Risk",
            "value": "16"
          },
          {
            "description": "Dental Maintenance Organization",
            "value": "17"
          },
          {
            "description": "Automobile Medical",
            "value": "AM"
          },
          {
            "description": "Blue Cross/Blue Shield",
            "value": "BL"
          },
          {
            "description": "CHAMPUS",
            "value": "CH"
          },
          {
            "description": "Commercial Insurance Co.",
            "value": "CI"
          },
          {
            "description": "Disability",
            "value": "DS"
          },
          {
            "description": "Federal Employees Program",
            "value": "FI"
          },
          {
            "description": "Health Maintenance Organization (HMO)",
            "value": "HM"
          },
          {
            "description": "Liability Medical",
            "value": "LM"
          },
          {
            "description": "Medicare Part A",
            "value": "MA"
          },
          {
            "description": "Medicare Part B",
            "value": "MB"
          },
          {
            "description": "Medicaid",
            "value": "MC"
          },
          {
            "description": "Other Federal Program",
            "value": "OF"
          },
          {
            "description": "Title V",
            "value": "TV"
          },
          {
            "description": "Veterans Affairs Plan",
            "value": "VA"
          },
          {
            "description": "Workers' Compensation Health Claim",
            "value": "WC"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:FacilityTypeCode": {
      "description": "Box 24B on the CMS-1500 claim form. Line-level place of service is not currently supported.\n02 for telemedicine, 11 for in-person. Full list here:\nhttps://www.cms.gov/Medicare/Coding/place-of-service-codes/Place_of_Service_Code_Set\n",
      "name": "FacilityTypeCode",
      "shape": {
        "values": [
          {
            "value": "01"
          },
          {
            "value": "02"
          },
          {
            "value": "03"
          },
          {
            "value": "04"
          },
          {
            "value": "05"
          },
          {
            "value": "06"
          },
          {
            "value": "07"
          },
          {
            "value": "08"
          },
          {
            "value": "09"
          },
          {
            "value": "10"
          },
          {
            "value": "11"
          },
          {
            "value": "12"
          },
          {
            "value": "13"
          },
          {
            "value": "14"
          },
          {
            "value": "15"
          },
          {
            "value": "16"
          },
          {
            "value": "17"
          },
          {
            "value": "18"
          },
          {
            "value": "19"
          },
          {
            "value": "20"
          },
          {
            "value": "21"
          },
          {
            "value": "22"
          },
          {
            "value": "23"
          },
          {
            "value": "24"
          },
          {
            "value": "25"
          },
          {
            "value": "26"
          },
          {
            "value": "31"
          },
          {
            "value": "32"
          },
          {
            "value": "33"
          },
          {
            "value": "34"
          },
          {
            "value": "41"
          },
          {
            "value": "42"
          },
          {
            "value": "49"
          },
          {
            "value": "50"
          },
          {
            "value": "51"
          },
          {
            "value": "52"
          },
          {
            "value": "53"
          },
          {
            "value": "54"
          },
          {
            "value": "55"
          },
          {
            "value": "56"
          },
          {
            "value": "57"
          },
          {
            "value": "58"
          },
          {
            "value": "60"
          },
          {
            "value": "61"
          },
          {
            "value": "62"
          },
          {
            "value": "65"
          },
          {
            "value": "71"
          },
          {
            "value": "72"
          },
          {
            "value": "81"
          },
          {
            "value": "99"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:PatientRelationshipToInsuredCodeAll": {
      "name": "PatientRelationshipToInsuredCodeAll",
      "shape": {
        "values": [
          {
            "value": "01"
          },
          {
            "value": "04"
          },
          {
            "value": "05"
          },
          {
            "value": "07"
          },
          {
            "value": "10"
          },
          {
            "value": "15"
          },
          {
            "value": "17"
          },
          {
            "value": "18"
          },
          {
            "value": "19"
          },
          {
            "value": "20"
          },
          {
            "value": "21"
          },
          {
            "value": "22"
          },
          {
            "value": "23"
          },
          {
            "value": "24"
          },
          {
            "value": "29"
          },
          {
            "value": "32"
          },
          {
            "value": "33"
          },
          {
            "value": "36"
          },
          {
            "value": "39"
          },
          {
            "value": "40"
          },
          {
            "value": "41"
          },
          {
            "value": "43"
          },
          {
            "value": "53"
          },
          {
            "value": "G8"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:ProcedureModifier": {
      "name": "ProcedureModifier",
      "shape": {
        "values": [
          {
            "description": "Increased Procedural Services",
            "value": "22"
          },
          {
            "description": "Unusual Anesthesia",
            "value": "23"
          },
          {
            "description": "Unrelated Evaluation and Management Service by the Same Physician or Other Qualified Health Care Professional During a Postoperative Period",
            "value": "24"
          },
          {
            "description": "Significant, Separately Identifiable Evaluation and Management Service by the Same Physician or Other Qualified Health Care Professional on the Same Day of the Procedure or Other Service",
            "value": "25"
          },
          {
            "description": "Professional Component",
            "value": "26"
          },
          {
            "description": "Multiple Outpatient Hospital E/M Encounters on the Same Date",
            "value": "27"
          },
          {
            "description": "Mandated Services",
            "value": "32"
          },
          {
            "description": "Preventive Services",
            "value": "33"
          },
          {
            "description": "Anesthesia by Surgeon",
            "value": "47"
          },
          {
            "description": "Bilateral Procedure",
            "value": "50"
          },
          {
            "description": "Multiple Procedures",
            "value": "51"
          },
          {
            "description": "Reduced Services",
            "value": "52"
          },
          {
            "description": "Discontinued Procedure",
            "value": "53"
          },
          {
            "description": "Surgical Care Only",
            "value": "54"
          },
          {
            "description": "Postoperative Management Only",
            "value": "55"
          },
          {
            "description": "Preoperative Management Only",
            "value": "56"
          },
          {
            "description": "Decision for Surgery",
            "value": "57"
          },
          {
            "description": "Staged or Related Procedure or Service by the Same Physician or Other Qualified Health Care Professional During the Postoperative Period",
            "value": "58"
          },
          {
            "description": "Distinct Procedural Service",
            "value": "59"
          },
          {
            "description": "Two Surgeons",
            "value": "62"
          },
          {
            "description": "Procedure Performed on Infants less than 4 kg",
            "value": "63"
          },
          {
            "description": "Surgical Team",
            "value": "66"
          },
          {
            "description": "Discontinued Outpatient Hospital/Ambulatory Surgery Center (ASC) Procedure After Administration of Anesthesia",
            "value": "74"
          },
          {
            "description": "Repeat Procedure or Service by Same Physician or Other Qualified Health Care Professional",
            "value": "76"
          },
          {
            "description": "Repeat Procedure by Another Physician or Other Qualified Health Care Professional",
            "value": "77"
          },
          {
            "description": "Unplanned Return to the Operating/Procedure Room by the Same Physician or Other Qualified Health Care Professional Following Initial Procedure for a Related Procedure During the Postoperative Period",
            "value": "78"
          },
          {
            "description": "Unrelated Procedure or Service by the Same Physician or Other Qualified Health Care Professional During the Postoperative Period",
            "value": "79"
          },
          {
            "description": "Assistant Surgeon",
            "value": "80"
          },
          {
            "description": "Minimum Assistant Surgeon",
            "value": "81"
          },
          {
            "description": "Assistant Surgeon (when qualified resident surgeon not available)",
            "value": "82"
          },
          {
            "description": "Reference (Outside) Laboratory",
            "value": "90"
          },
          {
            "description": "Repeat Clinical Diagnostic Laboratory Test",
            "value": "91"
          },
          {
            "description": "Alternative Laboratory Platform Testing",
            "value": "92"
          },
          {
            "description": "Synchronous Telemedicine Service Rendered Via Telephone or Other Real-Time Interactive Audio-Only Telecommunications System",
            "value": "93"
          },
          {
            "description": "Synchronous Telemedicine Service Rendered via a Real-Time Interactive Audio and Video Telecommunications System",
            "value": "95"
          },
          {
            "description": "Habilitative Services",
            "value": "96"
          },
          {
            "description": "Rehabilitative Services",
            "value": "97"
          },
          {
            "description": "Multiple Modifiers",
            "value": "99"
          },
          {
            "description": "Dressing for one wound",
            "value": "A1"
          },
          {
            "description": "Dressing for two wounds",
            "value": "A2"
          },
          {
            "description": "Dressing for three wounds",
            "value": "A3"
          },
          {
            "description": "Dressing for four wounds",
            "value": "A4"
          },
          {
            "description": "Dressing for five wounds",
            "value": "A5"
          },
          {
            "description": "Dressing for six wounds",
            "value": "A6"
          },
          {
            "description": "Dressing for seven wounds",
            "value": "A7"
          },
          {
            "description": "Dressing for eight wounds",
            "value": "A8"
          },
          {
            "description": "Dressing for nine wounds",
            "value": "A9"
          },
          {
            "description": "Anesthesia services performed personally by anesthesiologist",
            "value": "AA"
          },
          {
            "description": "Audiology service furnished personally by an audiologist without a physician/npp order for non-acute hearing assessment ...\n",
            "value": "AB"
          },
          {
            "description": "Medical supervision by a physician: more than four concurrent anesthesia procedures\n",
            "value": "AD"
          },
          {
            "description": "Registered dietician",
            "value": "AE"
          },
          {
            "description": "Specialty physician",
            "value": "AF"
          },
          {
            "description": "Primary physician",
            "value": "AG"
          },
          {
            "description": "Clinical psychologist",
            "value": "AH"
          },
          {
            "description": "Principal physician of record",
            "value": "AI"
          },
          {
            "description": "Clinical social worker",
            "value": "AJ"
          },
          {
            "description": "Non participating physician",
            "value": "AK"
          },
          {
            "description": "Physician, team member service",
            "value": "AM"
          },
          {
            "description": "Alternate payment method declined by provider of service",
            "value": "AO"
          },
          {
            "description": "Determination of refractive state was not performed in the course of diagnostic ophthalmological examination",
            "value": "AP"
          },
          {
            "description": "Physician providing a service in an unlisted health professional shortage area (hpsa)",
            "value": "AQ"
          },
          {
            "description": "Physician provider services in a physician scarcity area",
            "value": "AR"
          },
          {
            "description": "Physician assistant, nurse practitioner, or clinical nurse specialist services for assistant at surgery",
            "value": "AS"
          },
          {
            "description": "Acute treatment",
            "value": "AT"
          },
          {
            "description": "Physician providing a service in a dental health professional shortage area for the purpose of an EHR incentive payment",
            "value": "AZ"
          },
          {
            "description": "Item furnished in conjunction with parenteral enteral nutrition (pen) services",
            "value": "BA"
          },
          {
            "description": "Special acquisition of blood and blood products",
            "value": "BL"
          },
          {
            "description": "Orally administered nutrition, not by feeding tube",
            "value": "BO"
          },
          {
            "description": "The beneficiary has been informed of the purchase and rental options and has elected to purchase the item",
            "value": "BP"
          },
          {
            "description": "The beneficiary has been informed of the purchase and rental options and has elected to rent the item",
            "value": "BR"
          },
          {
            "description": "The beneficiary has been informed of the purchase and rental options and after 30 days has not informed the supplier",
            "value": "BU"
          },
          {
            "description": "Procedure payable only in the inpatient setting when performed emergently on an outpatient who expires prior to admission",
            "value": "CA"
          },
          {
            "description": "Service ordered by a renal dialysis facility (rdf) physician as part of the ESRD beneficiary's dialysis benefit",
            "value": "CB"
          },
          {
            "description": "Procedure code change",
            "value": "CC"
          },
          {
            "description": "Amcc test has been ordered by an ESRD facility or MCP physician that is not separately billable",
            "value": "CD"
          },
          {
            "description": "Amcc test has been ordered by an esrd facility or mcp physician that is beyond the normal frequency covered",
            "value": "CE"
          },
          {
            "description": "Amcc test has been ordered by an esrd facility or mcp physician that is separately billable",
            "value": "CF"
          },
          {
            "description": "Policy criteria applied",
            "value": "CG"
          },
          {
            "description": "0 percent impaired, limited or restricted",
            "value": "CH"
          },
          {
            "description": "At least 1 percent but less than 20 percent impaired, limited or restricted",
            "value": "CI"
          },
          {
            "description": "At least 20 percent but less than 40 percent impaired, limited or restricted",
            "value": "CJ"
          },
          {
            "description": "At least 40 percent but less than 60 percent impaired, limited or restricted",
            "value": "CK"
          },
          {
            "description": "At least 60 percent but less than 80 percent impaired, limited or restricted",
            "value": "CL"
          },
          {
            "description": "At least 80 percent but less than 100 percent impaired, limited or restricted",
            "value": "CM"
          },
          {
            "description": "100 percent impaired, limited or restricted",
            "value": "CN"
          },
          {
            "description": "Catastrophe/disaster related",
            "value": "CR"
          },
          {
            "description": "Cost sharing for COVID-19 testing",
            "value": "CS"
          },
          {
            "description": "Computed tomography services furnished using equipment that does not meet xr-29-2013 standard",
            "value": "CT"
          },
          {
            "description": "Outpatient physical therapy services furnished in whole or in part by a occupational therapist assistant",
            "value": "CO"
          },
          {
            "description": "Outpatient physical therapy services furnished in whole or in part by a physical therapist assistant",
            "value": "CQ"
          },
          {
            "description": "Upper left, eyelid",
            "value": "E1"
          },
          {
            "description": "Lower left, eyelid",
            "value": "E2"
          },
          {
            "description": "Upper right, eyelid",
            "value": "E3"
          },
          {
            "description": "Lower right, eyelid",
            "value": "E4"
          },
          {
            "description": "Erythropoetic stimulating agent (esa) administered to treat anemia due to anti-cancer chemotherapy",
            "value": "EA"
          },
          {
            "description": "Erythropoetic stimulating agent (esa) administered to treat anemia due to anti-cancer radiotherapy",
            "value": "EB"
          },
          {
            "description": "Erythropoetic stimulating agent (esa) administered to treat anemia not due to anti-cancer radiotherapy or chemotherapy",
            "value": "EC"
          },
          {
            "description": "Hematocrit level has exceeded 39% (or hemoglobin level has exceeded 13.0 g/dl) for 3 or more consecutive billing cycles",
            "value": "ED"
          },
          {
            "description": "Hematocrit level has not exceeded 39% (or hemoglobin level has not exceeded 13.0 g/dl) for 3 or more billing cycles",
            "value": "EE"
          },
          {
            "description": "Subsequent claims for a defined course of therapy, e.g., epo, sodium hyaluronate, infliximab",
            "value": "EJ"
          },
          {
            "description": "Emergency reserve supply (for esrd benefit only)",
            "value": "EM"
          },
          {
            "description": "Service provided as part of medicaid early periodic screening diagnosis and treatment (epsdt) program",
            "value": "EP"
          },
          {
            "description": "Items and services furnished by a provider-based, off-campus emergency department",
            "value": "ER"
          },
          {
            "description": "Emergency services",
            "value": "ET"
          },
          {
            "description": "Expatriate beneficiary",
            "value": "EX"
          },
          {
            "description": "No physician or other licensed health care provider order for this item or service",
            "value": "EY"
          },
          {
            "description": "Left hand, second digit",
            "value": "F1"
          },
          {
            "description": "Left hand, third digit",
            "value": "F2"
          },
          {
            "description": "Left hand, fourth digit",
            "value": "F3"
          },
          {
            "description": "Left hand, fifth digit",
            "value": "F4"
          },
          {
            "description": "Right hand, thumb",
            "value": "F5"
          },
          {
            "description": "Right hand, second digit",
            "value": "F6"
          },
          {
            "description": "Right hand, third digit",
            "value": "F7"
          },
          {
            "description": "Right hand, fourth digit",
            "value": "F8"
          },
          {
            "description": "Right hand, fifth digit",
            "value": "F9"
          },
          {
            "description": "Right hand, thumb",
            "value": "FA"
          },
          {
            "description": "Item provided without cost to provider, supplier or practitioner, or full credit received for replaced device",
            "value": "FB"
          },
          {
            "description": "Partial credit received for replaced device",
            "value": "FC"
          },
          {
            "description": "Service provided as part of family planning program",
            "value": "FP"
          },
          {
            "description": "Telehealth service furnished using real-time audio-only communication technology.",
            "value": "FQ"
          },
          {
            "description": "A supervising practitioner was present through a real-time two-way, audio/video communication technology.",
            "value": "FR"
          },
          {
            "description": "Split (or shared) evaluation and management visit.",
            "value": "FS"
          },
          {
            "description": "Unrelated evaluation and management (e/m) visit on the same day as another e/m visit or during a global procedure",
            "value": "FT"
          },
          {
            "description": "X-ray taken using film",
            "value": "FX"
          },
          {
            "description": "X-ray taken using computed radiography technology/cassette-based imaging",
            "value": "FY"
          },
          {
            "description": "Telehealth Services For Diagnosis, Evaluation, Or Treatment, Of Symptoms Of An Acute Stroke",
            "value": "G0"
          },
          {
            "description": "Most recent urr reading of less than 60",
            "value": "G1"
          },
          {
            "description": "Most recent urr reading of 60 to 64.9",
            "value": "G2"
          },
          {
            "description": "Most recent urr reading of 65 to 69.9",
            "value": "G3"
          },
          {
            "description": "Most recent urr reading of 70 to 74.9",
            "value": "G4"
          },
          {
            "description": "Most recent urr reading of 75 or greater",
            "value": "G5"
          },
          {
            "description": "ESRD patient for whom less than six dialysis sessions have been provided in a month",
            "value": "G6"
          },
          {
            "description": "Pregnancy resulted from rape or incest or pregnancy certified by physician as life threatening",
            "value": "G7"
          },
          {
            "description": "Monitored anesthesia care (mac) for deep complex, complicated, or markedly invasive surgical procedure",
            "value": "G8"
          },
          {
            "description": "Monitored anesthesia care for patient who has history of severe cardio-pulmonary condition",
            "value": "G9"
          },
          {
            "description": "Waiver of liability statement issued as required by payer policy, individual case",
            "value": "GA"
          },
          {
            "description": "Claim being re-submitted for payment because it is no longer covered under a global payment demonstration",
            "value": "GB"
          },
          {
            "description": "This service has been performed in part by a resident under the direction of a teaching physician",
            "value": "GC"
          },
          {
            "description": "This service has been performed by a resident without the presence of a teaching physician under the primary care exception",
            "value": "GE"
          },
          {
            "description": "Non-physician (e.g. nurse practitioner (np), certified registered nurse anesthetist (crna), certified registered nurse (crn), clinical nurse specialist (cns), physician assistant (pa)) services in a critical access hospital",
            "value": "GF"
          },
          {
            "description": "Performance and payment of a screening mammogram and diagnostic mammogram on the same patient, same day",
            "value": "GG"
          },
          {
            "description": "Diagnostic mammogram converted from screening mammogram on same day",
            "value": "GH"
          },
          {
            "description": "opt out physician or practitioner emergency or urgent service",
            "value": "GJ"
          },
          {
            "description": "Reasonable and necessary item/service associated with a ga or gz modifier",
            "value": "GK"
          },
          {
            "description": "Medically unnecessary upgrade provided instead of non-upgraded item, no charge, no advance beneficiary notice (abn)",
            "value": "GL"
          },
          {
            "description": "Multiple patients on one ambulance trip",
            "value": "GM"
          },
          {
            "description": "Services delivered under an outpatient speech-language pathology plan of care",
            "value": "GN"
          },
          {
            "description": "Service delivered personally by an occupational therapist or under an outpatient occupational therapy plan of care",
            "value": "GO"
          },
          {
            "description": "Service delivered personally by a physical therapist or under an outpatient physical therapy plan of care",
            "value": "GP"
          },
          {
            "description": "Services provided via an asynchronous telecommunications system",
            "value": "GQ"
          },
          {
            "description": "This service was performed in whole or in part by a resident in a department of veterans affairs medical center or clinic, supervised in accordance with va policy",
            "value": "GR"
          },
          {
            "description": "Dosage of erythropoietin stimulating agent has been reduced and maintained in response to hematocrit or hemoglobin level",
            "value": "GS"
          },
          {
            "description": "Services took place via an interactive audio and video telecommunications system",
            "value": "GT"
          },
          {
            "description": "Waiver of liability statement issued as required by payer policy, routine notice",
            "value": "GU"
          },
          {
            "description": "Attending physician not employed or paid under arrangement by the patient's hospice provider",
            "value": "GV"
          },
          {
            "description": "Service not related to the hospice patient's terminal condition",
            "value": "GW"
          },
          {
            "description": "Notice of liability issued, voluntary under payer policy",
            "value": "GX"
          },
          {
            "description": "Not a covered benefit",
            "value": "GY"
          },
          {
            "description": "Item or service expected to be denied as not reasonable and necessary",
            "value": "GZ"
          },
          {
            "description": "Child/adolescent program",
            "value": "HA"
          },
          {
            "description": "Adult program, non geriatric",
            "value": "HB"
          },
          {
            "description": "Adult program, geriatric",
            "value": "HC"
          },
          {
            "description": "Pregnant/parenting women's program",
            "value": "HD"
          },
          {
            "description": "Mental health program",
            "value": "HE"
          },
          {
            "description": "Substance abuse program",
            "value": "HF"
          },
          {
            "description": "Opioid addiction treatment program",
            "value": "HG"
          },
          {
            "description": "Integrated mental health/substance abuse program",
            "value": "HH"
          },
          {
            "description": "Integrated mental health and intellectual disability/developmental disabilities program",
            "value": "HI"
          },
          {
            "description": "Employee assistance program",
            "value": "HJ"
          },
          {
            "description": "Specialized mental health programs for high-risk populations",
            "value": "HK"
          },
          {
            "description": "Intern",
            "value": "HL"
          },
          {
            "description": "The rendering provider has a highest educational attainment of less than a bachelor's degree",
            "value": "HM"
          },
          {
            "description": "The rendering provider has a highest educational attainment of a bachelor's degree",
            "value": "HN"
          },
          {
            "description": "The rendering provider has a highest educational attainment of a master's degree",
            "value": "HO"
          },
          {
            "description": "The rendering provider has a highest educational attainment of a doctoral degree",
            "value": "HP"
          },
          {
            "description": "Group setting",
            "value": "HQ"
          },
          {
            "description": "Family/couple with client present",
            "value": "HR"
          },
          {
            "description": "Family/couple without client present",
            "value": "HS"
          },
          {
            "description": "Multi-disciplinary team",
            "value": "HT"
          },
          {
            "description": "Funded by child welfare agency",
            "value": "HU"
          },
          {
            "description": "Funded by state addictions agency",
            "value": "HV"
          },
          {
            "description": "Funded by state mental health agency",
            "value": "HW"
          },
          {
            "description": "Funded by county/local agency",
            "value": "HX"
          },
          {
            "description": "Funded by juvenile justice agency",
            "value": "HY"
          },
          {
            "description": "Funded by criminal justice agency",
            "value": "HZ"
          },
          {
            "description": "Competitive acquisition program no-pay submission for a prescription number",
            "value": "J1"
          },
          {
            "description": "Competitive acquisition program, restocking of emergency drugs after emergency administration",
            "value": "J2"
          },
          {
            "description": "Competitive acquisition program (cap) reimbursed under average sales price methodology",
            "value": "J3"
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program that is furnished by a hospital upon discharge",
            "value": "J4"
          },
          {
            "description": "Off-the-shelf orthotic subject to DMEPOS competitive bidding program",
            "value": "J5"
          },
          {
            "description": "Administered intravenously",
            "value": "JA"
          },
          {
            "description": "Administered subcutaneously",
            "value": "JB"
          },
          {
            "description": "Skin substitute used as a graft",
            "value": "JC"
          },
          {
            "description": "Skin substitute not used as a graft",
            "value": "JD"
          },
          {
            "description": "Administered via dialysate",
            "value": "JE"
          },
          {
            "description": "Drug or biological acquired with 340b drug pricing program discount",
            "value": "JG"
          },
          {
            "description": "Drug amount discarded/not administered to any patient",
            "value": "JW"
          },
          {
            "description": "Zero drug amount discarded/not administered to any patient",
            "value": "JZ"
          },
          {
            "description": "Lower extremity prosthesis functional level 0",
            "value": "K0"
          },
          {
            "description": "Lower extremity prosthesis functional level 1",
            "value": "K1"
          },
          {
            "description": "Lower extremity prosthesis functional level 2",
            "value": "K2"
          },
          {
            "description": "Lower extremity prosthesis functional level 3",
            "value": "K3"
          },
          {
            "description": "Lower extremity prosthesis functional level 4",
            "value": "K4"
          },
          {
            "description": "Add on option/accessory for wheelchair",
            "value": "KA"
          },
          {
            "description": "Beneficiary requested upgrade for abn, more than 4 modifiers identified on claim",
            "value": "KB"
          },
          {
            "description": "Replacement of special power wheelchair interface",
            "value": "KC"
          },
          {
            "description": "Drug or biological infused through DME",
            "value": "KD"
          },
          {
            "description": "Bid under round one of the DMEPOS competitive bidding program",
            "value": "KE"
          },
          {
            "description": "Item designated by FDA as class III device",
            "value": "KF"
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program number 1",
            "value": "KG"
          },
          {
            "description": "DMEPOS item, initial claim, purchase or first month rental",
            "value": "KH"
          },
          {
            "description": "DMEPOS item, second or third month rental",
            "value": "KI"
          },
          {
            "description": "DMEPOS item, parenteral enteral nutrition (pen) pump or capped rental, months four to fifteen",
            "value": "KJ"
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program number 2",
            "value": "KK"
          },
          {
            "description": "DMEPOS item delivered via mail",
            "value": "KL"
          },
          {
            "description": "Replacement of facial prosthesis including new impression/moulage",
            "value": "KM"
          },
          {
            "description": "Replacement of facial prosthesis using previous master model",
            "value": "KN"
          },
          {
            "description": "Single drug unit dose formulation",
            "value": "KO"
          },
          {
            "description": "First drug of a multiple drug unit dose formulation",
            "value": "KP"
          },
          {
            "description": "Second or subsequent drug of a multiple drug unit dose formulation",
            "value": "KQ"
          },
          {
            "description": "Rental item, billing for partial month",
            "value": "KR"
          },
          {
            "description": "Glucose monitor supply for diabetic beneficiary not treated with insulin",
            "value": "KS"
          },
          {
            "description": "Beneficiary resides in a competitive bidding area and travels outside that competitive bidding area",
            "value": "KT"
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program number 3",
            "value": "KU"
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program that is furnished as part of a professional service",
            "value": "KV"
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program number 4",
            "value": "KW"
          },
          {
            "description": "Requirements specified in the medical policy have been met",
            "value": "KX"
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program number 5",
            "value": "KY"
          },
          {
            "description": "New coverage not implemented by managed care",
            "value": "KZ"
          },
          {
            "description": "Left circumflex coronary artery",
            "value": "LC"
          },
          {
            "description": "Left anterior descending coronary artery",
            "value": "LD"
          },
          {
            "description": "Lease/rental",
            "value": "LL"
          },
          {
            "description": "Left main coronary artery",
            "value": "LM"
          },
          {
            "description": "Laboratory round trip",
            "value": "LR"
          },
          {
            "description": "FDA-monitored intraocular lens implant",
            "value": "LS"
          },
          {
            "description": "Left side (used to identify procedures performed on the left side of the body)",
            "value": "LT"
          },
          {
            "description": "Fractionated payment of CAR-T therapy",
            "value": "LU"
          },
          {
            "description": "Medicare secondary payer",
            "value": "M2"
          },
          {
            "description": "Not required to consult clinical decision support... for patient with a suspected or confirmed emergency medical condition",
            "value": "MA"
          },
          {
            "description": "Not required to consult clinical decision support mechanism due to insufficient internet access",
            "value": "MB"
          },
          {
            "description": "Not required to consult clinical decision support mechanism due to electronic health record vendor issues",
            "value": "MC"
          },
          {
            "description": "Not required to consult clinical decision support mechanism due to extreme/uncontrollable circumstances",
            "value": "MD"
          },
          {
            "description": "Adheres to appropriate use criteria in the clinical decision support mechanism consulted by the ordering professional",
            "value": "ME"
          },
          {
            "description": "Does not adhere to the criteria in the clinical decision support mechanism consulted by the ordering professional",
            "value": "MF"
          },
          {
            "description": "Does not have appropriate use criteria in the clinical decision support mechanism consulted by the ordering professional",
            "value": "MG"
          },
          {
            "description": "Unknown if ordering professional consulted a clinical decision support mechanism for this service",
            "value": "MH"
          },
          {
            "description": "Six month maintenance and servicing fee for parts and labor, not covered under any manufacturer or supplier warranty",
            "value": "MS"
          },
          {
            "description": "Group 1 oxygen coverage criteria met",
            "value": "N1"
          },
          {
            "description": "Group 2 oxygen coverage criteria met",
            "value": "N2"
          },
          {
            "description": "Group 3 oxygen coverage criteria met",
            "value": "N3"
          },
          {
            "description": "Nebulizer system, any type, FDA-cleared for use with specific drug",
            "value": "NB"
          },
          {
            "description": "New when rented",
            "value": "NR"
          },
          {
            "description": "New durable medical equipment purchase",
            "value": "NU"
          },
          {
            "description": "A normal healthy patient",
            "value": "P1"
          },
          {
            "description": "A patient with a mild systemic disease",
            "value": "P2"
          },
          {
            "description": "A patient with severe systemic disease",
            "value": "P3"
          },
          {
            "description": "A patient with severe systemic disease that is a constant threat to life",
            "value": "P4"
          },
          {
            "description": "A moribund patient who is not expected to survive without the operation",
            "value": "P5"
          },
          {
            "description": "A declared brain-dead patient whose organs are being removed for donor purposes",
            "value": "P6"
          },
          {
            "description": "Surgical or other invasive procedure on wrong body part",
            "value": "PA"
          },
          {
            "description": "Surgical or other invasive procedure on wrong patient",
            "value": "PB"
          },
          {
            "description": "Wrong surgery or other invasive procedure on patient",
            "value": "PC"
          },
          {
            "description": "Diagnostic or related non diagnostic item or service provided in a wholly owned or operated entity to a patient who is admitted as an inpatient within 3 days",
            "value": "PD"
          },
          {
            "description": "Positron emission tomography (PET) or PET/computed tomography (CT)",
            "value": "PI"
          },
          {
            "description": "Progressive addition lenses",
            "value": "PL"
          },
          {
            "description": "Post-mortem",
            "value": "PM"
          },
          {
            "description": "Non-excepted service provided at an off-campus, outpatient, provider-based department of a hospital",
            "value": "PN"
          },
          {
            "description": "Excepted service provided at an off-campus, outpatient, provider-based department of a hospital",
            "value": "PO"
          },
          {
            "description": "Positron emission tomography (PET) or pet/computed tomography (CT) to inform the treatment strategy of cancerous tumors",
            "value": "PS"
          },
          {
            "description": "Colorectal cancer screening test; converted to diagnostic test or other procedure",
            "value": "PT"
          },
          {
            "description": "Investigational clinical service provided in a clinical research study that is in an approved clinical research study",
            "value": "Q0"
          },
          {
            "description": "Routine clinical service provided in a clinical research study that is in an approved clinical research study",
            "value": "Q1"
          },
          {
            "description": "Demonstration procedure/service",
            "value": "Q2"
          },
          {
            "description": "Live kidney donor surgery and related services",
            "value": "Q3"
          },
          {
            "description": "Service for ordering/referring physician qualifies as a service exemption",
            "value": "Q4"
          },
          {
            "description": "Service furnished under a reciprocal billing arrangement by a substitute physician; or by a substitute physical therapist furnishing outpatient physical therapy services in a health professional shortage area, a medically underserved area, or a rural area",
            "value": "Q5"
          },
          {
            "description": "Service furnished under a fee-for-time compensation arrangement by a substitute physician; or by a substitute physical therapist furnishing outpatient physical therapy services in a health professional shortage area, a medically underserved area, or a rural area",
            "value": "Q6"
          },
          {
            "description": "One Class A finding",
            "value": "Q7"
          },
          {
            "description": "Two Class A findings",
            "value": "Q8"
          },
          {
            "description": "One Class B and two Class C findings",
            "value": "Q9"
          },
          {
            "description": "Prescribed amounts of stationary oxygen for daytime use differ ... <1 liter per minute",
            "value": "QA"
          },
          {
            "description": "Prescribed amounts of stationary oxygen for daytime use differ ... >4 liters per minute",
            "value": "QB"
          },
          {
            "description": "Single channel monitoring",
            "value": "QC"
          },
          {
            "description": "Recording and storage in solid state memory by a digital recorder",
            "value": "QD"
          },
          {
            "description": "Prescribed amount of stationary oxygen while at rest is less than 1 liter per minute (lpm)",
            "value": "QE"
          },
          {
            "description": "Prescribed amount of stationary oxygen while at rest exceeds 4 liters per minute (lpm) and portable oxygen is prescribed",
            "value": "QF"
          },
          {
            "description": "Prescribed amount of stationary oxygen while at rest is greater than 4 liters per minute (lpm)",
            "value": "QG"
          },
          {
            "description": "Oxygen conserving device is being used with an oxygen delivery system",
            "value": "QH"
          },
          {
            "description": "Services/items provided to a prisoner or patient in state or local custody, however the state or local government, as applicable, meets the requirements in 42 cfr 411.4 (b)",
            "value": "QJ"
          },
          {
            "description": "Medical direction of two, three, or four concurrent anesthesia procedure involving qualified individuals",
            "value": "QK"
          },
          {
            "description": "Patient pronounced dead after ambulance called",
            "value": "QL"
          },
          {
            "description": "Ambulance service provided under arrangement by a provider of services",
            "value": "QM"
          },
          {
            "description": "Ambulance service furnished directly by a provider of services",
            "value": "QN"
          },
          {
            "description": "Laboratory test(s) was ordered individually or ordered as a cpt-recognized panel other than automated profile codes",
            "value": "QP"
          },
          {
            "description": "Ordering professional consulted a qualified clinical decision support mechanism for this service",
            "value": "QQ"
          },
          {
            "description": "Amounts of stationary oxygen for daytime use and nighttime use differ; average of the amounts >4 liters per minute",
            "value": "QR"
          },
          {
            "description": "Monitored anesthesia care service",
            "value": "QS"
          },
          {
            "description": "Recording and storage on tape by an analog tape recorder",
            "value": "QT"
          },
          {
            "description": "CLIA waived",
            "value": "QW"
          },
          {
            "description": "CRNA service: with medical direction by a physician\n",
            "value": "QX"
          },
          {
            "description": "Medical direction of one certified registered nurse anesthetist (CRNA) by an anesthesiologist",
            "value": "QY"
          },
          {
            "description": "CRNA service: without medical direction by a physician\n",
            "value": "QZ"
          },
          {
            "description": "Replacement of a DME, orthotic or prosthetic item",
            "value": "RA"
          },
          {
            "description": "Replacement of a part of a DME, orthotic or prosthetic item",
            "value": "RB"
          },
          {
            "description": "Right coronary artery",
            "value": "RC"
          },
          {
            "description": "Drug provided to beneficiary, but not administered 'incident-to'",
            "value": "RD"
          },
          {
            "description": "Furnished in full compliance with FDA-mandated risk evaluation and mitigation strategy (REMS)",
            "value": "RE"
          },
          {
            "description": "Ramus intermedius coronary artery",
            "value": "RI"
          },
          {
            "description": "Rental (Use this ‘RR' modifier when DME is to be rented)",
            "value": "RR"
          },
          {
            "description": "Right side (used to identify procedures performed on the right side of the body)",
            "value": "RT"
          },
          {
            "description": "Physician assistant, nurse practitioner, or clinical nurse specialist services for non-surgical services",
            "value": "SA"
          },
          {
            "description": "Nurse midwife",
            "value": "SB"
          },
          {
            "description": "Medically necessary service or supply",
            "value": "SC"
          },
          {
            "description": "Services provided by registered nurse with specialized, highly technical home infusion training",
            "value": "SD"
          },
          {
            "description": "State- and/or federally-funded programs/services",
            "value": "SE"
          },
          {
            "description": "Second opinion ordered by a professional review organization (PRO) per section 9401, p.l. 99-272",
            "value": "SF"
          },
          {
            "description": "Ambulatory surgical center (ASC) facility service",
            "value": "SG"
          },
          {
            "description": "Second concurrently administered infusion therapy",
            "value": "SH"
          },
          {
            "description": "Third or more concurrently administered infusion therapy",
            "value": "SJ"
          },
          {
            "description": "Addresses reimbursement guidelines for vaccines provided at no cost to the provider by a state or federal agency",
            "value": "SL"
          },
          {
            "description": "Second surgical opinion",
            "value": "SM"
          },
          {
            "description": "Third surgical opinion",
            "value": "SN"
          },
          {
            "description": "Item ordered by home health",
            "value": "SQ"
          },
          {
            "description": "Home infusion services provided in the infusion suite of the IV therapy provider",
            "value": "SS"
          },
          {
            "description": "Related to trauma or injury",
            "value": "ST"
          },
          {
            "description": "Procedure performed in physician's office (to denote use of facility and equipment)",
            "value": "SU"
          },
          {
            "description": "Pharamceuticals delivered to patient's home but not utilized",
            "value": "SV"
          },
          {
            "description": "Services provided by a certified diabetic educator",
            "value": "SW"
          },
          {
            "description": "Persons who are in close contact with member of high-risk population (use only with codes for immunization)",
            "value": "SY"
          },
          {
            "description": "Left foot, second digit",
            "value": "T1"
          },
          {
            "description": "Left foot, third digit",
            "value": "T2"
          },
          {
            "description": "Left foot, fourth digit",
            "value": "T3"
          },
          {
            "description": "Left foot, fifth digit",
            "value": "T4"
          },
          {
            "description": "Right foot, great toe",
            "value": "T5"
          },
          {
            "description": "Right foot, second digit",
            "value": "T6"
          },
          {
            "description": "Right foot, third digit",
            "value": "T7"
          },
          {
            "description": "Right foot, fourth digit",
            "value": "T8"
          },
          {
            "description": "Right foot, fifth digit",
            "value": "T9"
          },
          {
            "description": "Left foot, great toe",
            "value": "TA"
          },
          {
            "description": "Drug or biological acquired with 340b drug pricing program discount, reported for informational purposes",
            "value": "TB"
          },
          {
            "description": "Technical Component",
            "value": "TC"
          },
          {
            "description": "Registered nurse (RN)",
            "value": "TD"
          },
          {
            "description": "Licensed vocational nurse (LVN) or licensed practical nurse (LPN)",
            "value": "TE"
          },
          {
            "description": "Intermediate level of care",
            "value": "TF"
          },
          {
            "description": "Complex/high tech level of care",
            "value": "TG"
          },
          {
            "description": "Obstetrical treatment/services, prenatal or postpart",
            "value": "TH"
          },
          {
            "description": "Program group, child and/or adolescent",
            "value": "TJ"
          },
          {
            "description": "Extra patient or passenger, non-ambulance",
            "value": "TK"
          },
          {
            "description": "Early Intervention/Individualized Family Service Plan",
            "value": "TL"
          },
          {
            "description": "Individualized education program (IEP)",
            "value": "TM"
          },
          {
            "description": "Rural/outside providers' customary service area",
            "value": "TN"
          },
          {
            "description": "Medical transport, unloaded vehicle",
            "value": "TP"
          },
          {
            "description": "Basic life support transport by a volunteer ambulance provider",
            "value": "TQ"
          },
          {
            "description": "School-based individualized education program (IEP) services provided outside the public school district",
            "value": "TR"
          },
          {
            "description": "Follow-up service",
            "value": "TS"
          },
          {
            "description": "Individualized service provided to more than one patient in same setting",
            "value": "TT"
          },
          {
            "description": "Special payment rate, overtime",
            "value": "TU"
          },
          {
            "description": "Special payment rates, holidays/weekends",
            "value": "TV"
          },
          {
            "description": "Back-up equipment",
            "value": "TW"
          },
          {
            "description": "Medicaid level of care 1, as defined by each state",
            "value": "U1"
          },
          {
            "description": "Medicaid level of care 2, as defined by each state",
            "value": "U2"
          },
          {
            "description": "Medicaid level of care 3, as defined by each state",
            "value": "U3"
          },
          {
            "description": "Medicaid level of care 4, as defined by each state",
            "value": "U4"
          },
          {
            "description": "Medicaid level of care 5, as defined by each state",
            "value": "U5"
          },
          {
            "description": "Medicaid level of care 6, as defined by each state",
            "value": "U6"
          },
          {
            "description": "Medicaid level of care 7, as defined by each state",
            "value": "U7"
          },
          {
            "description": "Medicaid level of care 8, as defined by each state",
            "value": "U8"
          },
          {
            "description": "Medicaid level of care 9, as defined by each state",
            "value": "U9"
          },
          {
            "description": "Medicaid level of care 10, as defined by each state",
            "value": "UA"
          },
          {
            "description": "Medicaid level of care 11, as defined by each state",
            "value": "UB"
          },
          {
            "description": "Medicaid level of care 12, as defined by each state",
            "value": "UC"
          },
          {
            "description": "Medicaid level of care 13, as defined by each state",
            "value": "UD"
          },
          {
            "description": "Used durable medical equipment",
            "value": "UE"
          },
          {
            "description": "Services provided in the morning",
            "value": "UF"
          },
          {
            "description": "Services provided in the afternoon",
            "value": "UG"
          },
          {
            "description": "Services provided in the evening",
            "value": "UH"
          },
          {
            "description": "Services provided at night",
            "value": "UJ"
          },
          {
            "description": "Services provided on behalf of the client to someone other than the client (collateral relationship)",
            "value": "UK"
          },
          {
            "description": "Two patients served",
            "value": "UN"
          },
          {
            "description": "Three patients served",
            "value": "UP"
          },
          {
            "description": "Four patients served",
            "value": "UQ"
          },
          {
            "description": "Five patients served",
            "value": "UR"
          },
          {
            "description": "Six patients served",
            "value": "US"
          },
          {
            "description": "One patient visit in a month",
            "value": "V1"
          },
          {
            "description": "Two patient visits in a month",
            "value": "V2"
          },
          {
            "description": "Three patient visits in a month",
            "value": "V3"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:ServiceLineUnits": {
      "name": "ServiceLineUnits",
      "shape": {
        "values": [
          {
            "value": "MJ"
          },
          {
            "value": "UN"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:InsuranceTypeCode": {
      "description": "Code identifying the type of insurance policy within a specific insurance program (X12 008020 Element 1336)",
      "name": "InsuranceTypeCode",
      "shape": {
        "values": [
          {
            "description": "Short Term Insurance",
            "value": "01"
          },
          {
            "description": "Medicare Secondary Working Aged Beneficiary or Spouse with Employer Group Health Plan",
            "value": "12"
          },
          {
            "description": "Medicare Secondary End-Stage Renal Disease Beneficiary in the Mandated Coordination Period with an Employer's Group Health Plan",
            "value": "13"
          },
          {
            "description": "Medicare Secondary, No-fault Insurance including Auto is Primary",
            "value": "14"
          },
          {
            "description": "Medicare Secondary Worker's Compensation",
            "value": "15"
          },
          {
            "description": "Medicare Secondary Public Health Service (PHS) or Other Federal Agency",
            "value": "16"
          },
          {
            "description": "Dental",
            "value": "17"
          },
          {
            "description": "Vision",
            "value": "18"
          },
          {
            "description": "Prescription Drugs",
            "value": "19"
          },
          {
            "description": "Medicare Secondary Black Lung",
            "value": "41"
          },
          {
            "description": "Medicare Secondary Veteran's Administration",
            "value": "42"
          },
          {
            "description": "Medicare Secondary Disabled Beneficiary Under Age 65 with Large Group Health Plan (LGHP)",
            "value": "43"
          },
          {
            "description": "Medicare Secondary, Other Liability Insurance is Primary",
            "value": "47"
          },
          {
            "description": "Auto Insurance Policy",
            "value": "AP"
          },
          {
            "description": "Commercial",
            "value": "C1"
          },
          {
            "description": "Consolidated Omnibus Budget Reconciliation Act (COBRA)",
            "value": "CO"
          },
          {
            "description": "Medicare Conditionally Primary",
            "value": "CP"
          },
          {
            "description": "Disability - Provides periodic payments to replace income when an insured person is unable to work as a result of illness, injury or disease",
            "value": "D"
          },
          {
            "description": "Disability Benefits",
            "value": "DB"
          },
          {
            "description": "Medicare - Point of Service (POS)",
            "value": "E"
          },
          {
            "description": "Exclusive Provider Organization - Gives subscriber a choice of providers from an approved/contracted payer list; there are fixed dollar co-payments for most covered services in return for using plan providers",
            "value": "EP"
          },
          {
            "description": "Family or Friends",
            "value": "FF"
          },
          {
            "description": "Group Policy - Two or more people who are part of complete unit who enter into an insurance contract with an insurance company",
            "value": "GP"
          },
          {
            "description": "Health Insurance Exchange (HIX) Silver",
            "value": "HA"
          },
          {
            "description": "Health Insurance Exchange (HIX) Bronze",
            "value": "HB"
          },
          {
            "description": "High Deductible Health Plan",
            "value": "HD"
          },
          {
            "description": "Health Insurance Exchange (HIX) Gold",
            "value": "HG"
          },
          {
            "description": "Health Maintenance Organization (HMO)",
            "value": "HM"
          },
          {
            "description": "Health Maintenance Organization (HMO) - Medicare Risk",
            "value": "HN"
          },
          {
            "description": "Health Insurance Exchange (HIX) Platinum",
            "value": "HP"
          },
          {
            "description": "Special Low Income Medicare Beneficiary - An individual eligible for Medicare for whom Medicaid pays only Medicare premiums",
            "value": "HS"
          },
          {
            "description": "Indemnity - Gives a subscriber the choice to select any provider.  Payment is fixed percentage of the cost for covered care after satisfying an annual deductible",
            "value": "IN"
          },
          {
            "description": "Individual Policy",
            "value": "IP"
          },
          {
            "description": "Long Term Care - Coverage designed to help pay for some or all long term care costs, reducing the risk that a policy-holder would need to deplete all of his or her assets to pay for long term care",
            "value": "LC"
          },
          {
            "description": "Long Term Policy",
            "value": "LD"
          },
          {
            "description": "Life Insurance",
            "value": "LI"
          },
          {
            "description": "Litigation",
            "value": "LT"
          },
          {
            "description": "Medicare Advantage Point of Service (POS) Plan that excludes Part D coverage",
            "value": "M"
          },
          {
            "description": "Medicare Part A",
            "value": "MA"
          },
          {
            "description": "Medicare Part B",
            "value": "MB"
          },
          {
            "description": "Medicaid - Program of health care services made available to medically indigent and other needy persons, regardless of age, under terms of a 1965 amendment to the U.S. Social Security Act",
            "value": "MC"
          },
          {
            "description": "Medicare Part D",
            "value": "MD"
          },
          {
            "description": "Medicare Advantage Preferred Provider Organization (PPO) Plan that excludes Part D Coverage",
            "value": "ME"
          },
          {
            "description": "Medicare Advantage Private Fee for Service",
            "value": "MF"
          },
          {
            "description": "Medigap Part A - Health insurance policy intended to cover the non-covered portion of expenses eligible for Medicare Part A reimbursement which must be paid by a Medicare beneficiary for health care services and/or supplies received",
            "value": "MH"
          },
          {
            "description": "Medigap Part B - Health insurance policy intended to cover the non-covered portion of expenses eligible for Medicare Part B reimbursement which must be paid by a Medicare beneficiary for health care services and/or supplies received",
            "value": "MI"
          },
          {
            "description": "Medicare Advantage Health Maintenance Organization (HMO) Plan that includes Part D Coverage",
            "value": "MJ"
          },
          {
            "description": "Medicare Advantage Health Maintenance Organization (HMO) Risk Plan that includes Part D Coverage",
            "value": "MK"
          },
          {
            "description": "Medicare Advantage Indemnity Plan that includes Part D Coverage",
            "value": "ML"
          },
          {
            "description": "Medicare Advantage Preferred Provider Organization (PPO) Plan that includes Part D Coverage",
            "value": "MM"
          },
          {
            "description": "Medicare Advantage Indemnity Plan that excludes Part D coverage",
            "value": "MN"
          },
          {
            "description": "Medicare Advantage Point of Service (POS) Plan that includes Part D Coverage",
            "value": "MO"
          },
          {
            "description": "Medicare Primary - Medicare has the primary responsibility to pay for health care services and/or supplies received by a covered beneficiary (a person entitled to Medicare benefits)",
            "value": "MP"
          },
          {
            "description": "Medicare Advantage Health Maintenance Organization (HMO) Risk Plan that excludes Part D coverage",
            "value": "MR"
          },
          {
            "description": "Medicare Advantage Health Maintenance Organization (HMO) Plan that excludes Part D coverage",
            "value": "MT"
          },
          {
            "description": "Medicare Advantage",
            "value": "MV"
          },
          {
            "description": "Open Access Point of Service Plan",
            "value": "OA"
          },
          {
            "description": "Other",
            "value": "OT"
          },
          {
            "description": "Property Insurance - Personal",
            "value": "PE"
          },
          {
            "description": "Personal",
            "value": "PL"
          },
          {
            "description": "Personal Payment (Cash - No Insurance)",
            "value": "PP"
          },
          {
            "description": "Preferred Provider Organization (PPO)",
            "value": "PR"
          },
          {
            "description": "Point of Service (POS)",
            "value": "PS"
          },
          {
            "description": "Qualified Medicare Beneficiary - Coverage for a Medicare eligible individual for whom Medicaid pays only for Medicare premiums, co-insurance, and deductibles",
            "value": "QM"
          },
          {
            "description": "Property Insurance - Real",
            "value": "RP"
          },
          {
            "description": "Supplemental Policy - An insurance policy intended to cover non-covered charges of another insurance policy",
            "value": "SP"
          },
          {
            "description": "Tax Equity Fiscal Responsibility Act (TEFRA)",
            "value": "TF"
          },
          {
            "description": "Multiple Options Health Plan",
            "value": "U"
          },
          {
            "description": "Workers Compensation - Coverage provides medical treatment, rehabilitation, lost wages and related expenses arising from a job related injury or disease",
            "value": "WC"
          },
          {
            "description": "Wrap Up Policy - A Workers Compensation Policy written for a specific job site, which will include or cover more than one insured",
            "value": "WU"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:EmrPayerCrosswalk": {
      "name": "EmrPayerCrosswalk",
      "shape": {
        "values": [
          {
            "value": "HEALTHIE"
          },
          {
            "value": "CANVAS"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:ErrorMessage": {
      "name": "ErrorMessage",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:EntityNotFoundErrorMessage": {
      "name": "EntityNotFoundErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:UnauthorizedErrorMessage": {
      "name": "UnauthorizedErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:HttpServiceUnavailableErrorMessage": {
      "name": "HttpServiceUnavailableErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:RequestValidationError": {
      "name": "RequestValidationError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "fieldName",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "humanReadableMessage",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:PhoneNumber": {
      "name": "PhoneNumber",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "number",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "type",
            "valueType": {
              "value": "type_commons:PhoneNumberType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:PhoneNumberType": {
      "name": "PhoneNumberType",
      "shape": {
        "values": [
          {
            "value": "Home"
          },
          {
            "value": "Mobile"
          },
          {
            "value": "Work"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:Email": {
      "name": "Email",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_contracts:ContractId": {
      "name": "ContractId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_diagnoses:DiagnosisId": {
      "name": "DiagnosisId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_diagnoses:DiagnosisCreate": {
      "name": "DiagnosisCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Empty string not allowed.",
            "key": "name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Typically, providers submitting claims to Candid are using ICD-10 diagnosis codes. If you are using ICD-10 codes, the primary diagnosis code listed on the claim should use the ABK code_type. If more than one diagnosis is being submitted on a claim, please use ABF for the rest of the listed diagnoses. If you are using ICD-9 diagnosis codes, use BK and BF for the principal and following diagnosis code(s) respectively.\n",
            "key": "code_type",
            "valueType": {
              "value": "type_diagnoses:DiagnosisTypeCode",
              "type": "id"
            }
          },
          {
            "description": "Empty string not allowed.\nShould be of the appropriate format for the provided `code_type`.\nMust obey the ICD-10 format if an ICD-10 code_type is provided, specifically:\n  - Letter\n  - Digit\n  - Digit or the letter `A` or `B`\n  - (Optional) Period `.`\n  - Up to 4 (or as few as 0) letters and digits\n",
            "key": "code",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_diagnoses:StandaloneDiagnosisCreate": {
      "name": "StandaloneDiagnosisCreate",
      "shape": {
        "extends": ["type_diagnoses:DiagnosisCreate"],
        "properties": [
          {
            "key": "encounter_id",
            "valueType": {
              "value": "type_commons:EncounterId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_diagnoses:DiagnosisTypeCode": {
      "name": "DiagnosisTypeCode",
      "shape": {
        "values": [
          {
            "description": "ICD-10 Diagnosis",
            "value": "ABF"
          },
          {
            "description": "ICD-10 Admitting Diagnosis",
            "value": "ABJ"
          },
          {
            "description": "ICD-10 Principal Diagnosis",
            "value": "ABK"
          },
          {
            "description": "ICD-10 Patient Reason for Visit",
            "value": "APR"
          },
          {
            "description": "ICD-9 Diagnosis",
            "value": "BF"
          },
          {
            "description": "ICD-9 Admitting Diagnosis",
            "value": "BJ"
          },
          {
            "description": "ICD-9 Principal Diagnosis",
            "value": "BK"
          },
          {
            "description": "ICD-9 Patient Reason for Visit",
            "value": "PR"
          },
          {
            "description": "Diagnosis Related Group (DRG)",
            "value": "DR"
          },
          {
            "description": "Logical Observation Identifier Names and Codes (LOINC<190>) Codes",
            "value": "LOI"
          }
        ],
        "type": "enum"
      }
    },
    "type_diagnoses:Diagnosis": {
      "name": "Diagnosis",
      "shape": {
        "extends": ["type_diagnoses:StandaloneDiagnosisCreate"],
        "properties": [
          {
            "key": "diagnosis_id",
            "valueType": {
              "value": "type_diagnoses:DiagnosisId",
              "type": "id"
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_era:EraId": {
      "name": "EraId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_era:ERABase": {
      "name": "ERABase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "check_number",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "check_date",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_era:ERA": {
      "name": "ERA",
      "shape": {
        "extends": ["type_era:ERABase"],
        "properties": [
          {
            "key": "era_id",
            "valueType": {
              "value": "type_era:EraId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_identifiers:IdentifierCode": {
      "name": "IdentifierCode",
      "shape": {
        "values": [
          {
            "value": "MCR"
          },
          {
            "value": "MCD"
          }
        ],
        "type": "enum"
      }
    },
    "type_identifiers:IdentifierId": {
      "name": "IdentifierId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_identifiers:MedicareProviderIdentifier": {
      "name": "MedicareProviderIdentifier",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "state",
            "valueType": {
              "value": "type_commons:State",
              "type": "id"
            }
          },
          {
            "key": "provider_number",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_identifiers:MedicaidProviderIdentifier": {
      "name": "MedicaidProviderIdentifier",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "state",
            "valueType": {
              "value": "type_commons:State",
              "type": "id"
            }
          },
          {
            "key": "provider_number",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_identifiers:IdentifierValue": {
      "name": "IdentifierValue",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "medicare_provider_identifier",
            "additionalProperties": {
              "extends": ["type_identifiers:MedicareProviderIdentifier"],
              "properties": []
            }
          },
          {
            "discriminantValue": "medicaid_provider_identifier",
            "additionalProperties": {
              "extends": ["type_identifiers:MedicaidProviderIdentifier"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_identifiers:IdentifierBase": {
      "name": "IdentifierBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "period",
            "valueType": {
              "itemType": {
                "value": "type_commons:DateRangeOptionalEnd",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "identifier_code",
            "valueType": {
              "value": "type_identifiers:IdentifierCode",
              "type": "id"
            }
          },
          {
            "key": "identifier_value",
            "valueType": {
              "value": "type_identifiers:IdentifierValue",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_identifiers:Identifier": {
      "name": "Identifier",
      "shape": {
        "extends": ["type_identifiers:IdentifierBase"],
        "properties": [
          {
            "key": "identifier_id",
            "valueType": {
              "value": "type_identifiers:IdentifierId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_identifiers:IdentifierCreate": {
      "name": "IdentifierCreate",
      "shape": {
        "extends": ["type_identifiers:IdentifierBase"],
        "properties": [],
        "type": "object"
      }
    },
    "type_identifiers:IdentifierUpdate": {
      "name": "IdentifierUpdate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "identifier_id",
            "valueType": {
              "value": "type_identifiers:IdentifierId",
              "type": "id"
            }
          },
          {
            "key": "identifier_code",
            "valueType": {
              "itemType": {
                "value": "type_identifiers:IdentifierCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "identifier_value",
            "valueType": {
              "itemType": {
                "value": "type_identifiers:IdentifierValue",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "period",
            "valueType": {
              "itemType": {
                "value": "type_commons:RemovableDateRangeOptionalEnd",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_identifiers:UpdatableIdentifier": {
      "name": "UpdatableIdentifier",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "add",
            "additionalProperties": {
              "extends": ["type_identifiers:IdentifierCreate"],
              "properties": []
            }
          },
          {
            "discriminantValue": "update",
            "additionalProperties": {
              "extends": ["type_identifiers:IdentifierUpdate"],
              "properties": []
            }
          },
          {
            "discriminantValue": "remove",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_identifiers:IdentifierId",
                    "type": "id"
                  }
                }
              ]
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_individual:IndividualId": {
      "name": "IndividualId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_individual:IndividualBase": {
      "name": "IndividualBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "first_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "last_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "gender",
            "valueType": {
              "value": "type_individual:Gender",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_individual:SubscriberBase": {
      "name": "SubscriberBase",
      "shape": {
        "extends": ["type_individual:IndividualBase"],
        "properties": [
          {
            "key": "patient_relationship_to_subscriber_code",
            "valueType": {
              "value": "type_commons:PatientRelationshipToInsuredCodeAll",
              "type": "id"
            }
          },
          {
            "key": "date_of_birth",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "address",
            "valueType": {
              "itemType": {
                "value": "type_commons:StreetAddressShortZip",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_individual:SubscriberCreate": {
      "name": "SubscriberCreate",
      "shape": {
        "extends": ["type_individual:SubscriberBase"],
        "properties": [
          {
            "key": "insurance_card",
            "valueType": {
              "value": "type_insurance-card:InsuranceCardCreate",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_individual:Subscriber": {
      "name": "Subscriber",
      "shape": {
        "extends": ["type_individual:SubscriberBase"],
        "properties": [
          {
            "key": "individual_id",
            "valueType": {
              "value": "type_individual:IndividualId",
              "type": "id"
            }
          },
          {
            "key": "insurance_card",
            "valueType": {
              "value": "type_insurance-card:InsuranceCard",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_individual:PatientCreate": {
      "name": "PatientCreate",
      "shape": {
        "extends": ["type_individual:PatientBase"],
        "properties": [
          {
            "key": "phone_numbers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_commons:PhoneNumber",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "description": "Defaults to false",
            "key": "phone_consent",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "email",
            "valueType": {
              "itemType": {
                "value": "type_commons:Email",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Defaults to false",
            "key": "email_consent",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_individual:PatientBase": {
      "name": "PatientBase",
      "shape": {
        "extends": ["type_individual:IndividualBase"],
        "properties": [
          {
            "description": "Another ID you want to associate with this patient.\nFor example, your internal patient ID or a Dr. Chrono patient ID. Box 1a on the CMS-1500 claim form\n",
            "key": "external_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Box 3 on the CMS-1500 claim form. The date format should be in ISO 8601 date; formatted YYYY-MM-DD (i.e. 2012-02-01)",
            "key": "date_of_birth",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          },
          {
            "description": "Box 5 on the CMS-1500 claim form.",
            "key": "address",
            "valueType": {
              "value": "type_commons:StreetAddressShortZip",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_individual:Patient": {
      "name": "Patient",
      "shape": {
        "extends": ["type_individual:PatientBase"],
        "properties": [
          {
            "key": "individual_id",
            "valueType": {
              "value": "type_individual:IndividualId",
              "type": "id"
            }
          },
          {
            "key": "phone_numbers",
            "valueType": {
              "itemType": {
                "value": "type_commons:PhoneNumber",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "phone_consent",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "email",
            "valueType": {
              "itemType": {
                "value": "type_commons:Email",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "email_consent",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_individual:Gender": {
      "name": "Gender",
      "shape": {
        "values": [
          {
            "value": "male"
          },
          {
            "value": "female"
          },
          {
            "value": "other"
          },
          {
            "value": "not_given"
          },
          {
            "value": "unknown"
          }
        ],
        "type": "enum"
      }
    },
    "type_insurance-card:InsuranceCardId": {
      "name": "InsuranceCardId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_insurance-card:InsuranceCardBase": {
      "name": "InsuranceCardBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Box 11 on the CMS-1500 claim form.",
            "key": "group_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Box 11c on the CMS-1500 claim form.",
            "key": "plan_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "plan_type",
            "valueType": {
              "itemType": {
                "value": "type_commons:SourceOfPaymentCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "insurance_type",
            "valueType": {
              "itemType": {
                "value": "type_commons:InsuranceTypeCode",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-card:InsuranceCardCreate": {
      "name": "InsuranceCardCreate",
      "shape": {
        "extends": ["type_insurance-card:InsuranceCardBase"],
        "properties": [
          {
            "key": "member_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payer_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payer_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "rx_bin",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "rx_pcn",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "image_url_front",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "image_url_back",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "emr_payer_crosswalk",
            "valueType": {
              "itemType": {
                "value": "type_commons:EmrPayerCrosswalk",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-card:InsuranceCard": {
      "name": "InsuranceCard",
      "shape": {
        "extends": ["type_insurance-card:InsuranceCardBase"],
        "properties": [
          {
            "key": "insurance_card_id",
            "valueType": {
              "value": "type_insurance-card:InsuranceCardId",
              "type": "id"
            }
          },
          {
            "key": "member_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payer_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payer_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "rx_bin",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "rx_pcn",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "image_url_front",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "image_url_back",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_invoices:InvoiceId": {
      "name": "InvoiceId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_invoices:Invoice": {
      "name": "Invoice",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_invoices:InvoiceId",
              "type": "id"
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "organzation_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          },
          {
            "key": "source_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "source_customer_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_external_id",
            "valueType": {
              "value": "type_commons:PatientExternalId",
              "type": "id"
            }
          },
          {
            "key": "note",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "due_date",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          },
          {
            "key": "status",
            "valueType": {
              "value": "type_invoices:InvoiceStatus",
              "type": "id"
            }
          },
          {
            "key": "url",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "customer_invoice_url",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_invoices:InvoiceItem",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_invoices:InvoiceItem": {
      "name": "InvoiceItem",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_line_id",
            "valueType": {
              "value": "type_commons:ServiceLineId",
              "type": "id"
            }
          },
          {
            "key": "amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_invoices:InvoiceStatus": {
      "name": "InvoiceStatus",
      "shape": {
        "values": [
          {
            "value": "draft"
          },
          {
            "value": "open"
          },
          {
            "value": "paid"
          },
          {
            "value": "void"
          },
          {
            "value": "uncollectible"
          }
        ],
        "type": "enum"
      }
    },
    "type_payers:PayerUuid": {
      "name": "PayerUuid",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_payers:PayerPage": {
      "name": "PayerPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_payers:Payer",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payers:Payer": {
      "name": "Payer",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Auto-generated ID set on creation",
            "key": "payer_uuid",
            "valueType": {
              "value": "type_payers:PayerUuid",
              "type": "id"
            }
          },
          {
            "description": "The primary national payer ID of the payer",
            "key": "payer_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The primary display name of the payer",
            "key": "payer_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-facility:ServiceFacilityId": {
      "name": "ServiceFacilityId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_service-facility:EncounterServiceFacilityBase": {
      "description": "Encounter Service facility is typically the location a medical service was rendered, such as a provider office or hospital.\nFor telehealth, service facility can represent the provider's location when the service was delivered (e.g., home),\nor the location where an in-person visit would have taken place, whichever is easier to identify.\nIf the provider is in-network, service facility may be defined in payer contracts.\nBox 32 on the CMS-1500 claim form.\nNote that for an in-network claim to be successfully adjudicated, the service facility address listed on claims\nmust match what was provided to the payer during the credentialing process.\n",
      "name": "EncounterServiceFacilityBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "organization_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "address",
            "valueType": {
              "value": "type_commons:StreetAddressLongZip",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-facility:EncounterServiceFacility": {
      "name": "EncounterServiceFacility",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_facility_id",
            "valueType": {
              "value": "type_service-facility:ServiceFacilityId",
              "type": "id"
            }
          },
          {
            "key": "organization_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "address",
            "valueType": {
              "value": "type_commons:StreetAddressLongZip",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_tags:TagId": {
      "name": "TagId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_tags:TagCreate": {
      "name": "TagCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "tag_id",
            "valueType": {
              "value": "type_tags:TagId",
              "type": "id"
            }
          },
          {
            "key": "description",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "color",
            "valueType": {
              "value": "type_tags:TagColorEnum",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_tags:Tag": {
      "name": "Tag",
      "shape": {
        "extends": ["type_tags:TagCreate"],
        "properties": [
          {
            "key": "creator_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_tags:TagColorEnum": {
      "name": "TagColorEnum",
      "shape": {
        "values": [
          {
            "value": "black"
          },
          {
            "value": "white"
          },
          {
            "value": "gray"
          },
          {
            "value": "red"
          },
          {
            "value": "yellow"
          },
          {
            "value": "green"
          },
          {
            "value": "blue"
          },
          {
            "value": "indigo"
          },
          {
            "value": "purple"
          },
          {
            "value": "pink"
          }
        ],
        "type": "enum"
      }
    }
  },
  "subpackages": {
    "subpackage_auth": {
      "subpackageId": "subpackage_auth",
      "name": "auth",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_auth/v2"],
      "pointsTo": "subpackage_auth/v2"
    },
    "subpackage_auth/v2": {
      "subpackageId": "subpackage_auth/v2",
      "name": "v2",
      "endpoints": [
        {
          "availability": "GenerallyAvailable",
          "auth": false,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_token",
          "name": "Get Token",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/auth/v2",
                "type": "literal"
              },
              {
                "value": "/token",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_auth/v2:AuthGetTokenRequest",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_auth/v2:AuthGetTokenResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_auth/v2:TooManyRequestsErrorType",
                "type": "id"
              },
              "statusCode": 429
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_auth/v2:AuthGetTokenRequest",
        "type_auth/v2:AuthGetTokenResponse",
        "type_auth/v2:TooManyRequestsErrorType"
      ],
      "subpackages": []
    },
    "subpackage_eligibility": {
      "subpackageId": "subpackage_eligibility",
      "name": "eligibility",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_eligibility/v2"]
    },
    "subpackage_eligibility/v2": {
      "subpackageId": "subpackage_eligibility/v2",
      "name": "v2",
      "endpoints": [
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "description": "This API is a wrapper around Change Healthcare's eligibility API. Below are some helpful documentation links:\n\n- [Candid Health Support article](https://support.joincandidhealth.com/hc/en-us/articles/7937415468820)\n- [Change Healthcare - API Reference: Check Eligibility](https://developers.changehealthcare.com/eligibilityandclaims/reference/medicaleligibility)\n- [Change Healthcare - Guides: Eligibility FAQs](https://developers.changehealthcare.com/eligibilityandclaims/docs/eligibility-api-requests)\n- [Change Healthcare - Guides: Sandbox API Values and Test Responses](https://developers.changehealthcare.com/eligibilityandclaims/docs/eligibility-sandbox-api-values-and-test-responses)\n- [Change Healthcare - Guides: Sandbox Predefined Fields and Values](https://developers.changehealthcare.com/eligibilityandclaims/docs/sandbox-predefined-fields-and-values)\n- [Change Healthcare - Guides: Using Test Payers in the Sandbox](https://developers.changehealthcare.com/eligibilityandclaims/docs/use-the-test-payers-in-the-sandbox-api)\n\nA schema of the response object can be found here: [Change Healthcare Docs](https://developers.changehealthcare.com/eligibilityandclaims/reference/medicaleligibility)\n",
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "submit_eligibility_check",
          "name": "Submit encounter eligibility check",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/eligibility/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "type": "unknown"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "type": "unknown"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:HttpServiceUnavailableErrorMessage",
                "type": "id"
              },
              "statusCode": 503
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_encounter-providers": {
      "subpackageId": "subpackage_encounter-providers",
      "name": "encounter-providers",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_encounter-providers/v2"]
    },
    "subpackage_encounter-providers/v2": {
      "subpackageId": "subpackage_encounter-providers/v2",
      "name": "v2",
      "endpoints": [],
      "webhooks": [],
      "types": [
        "type_encounter-providers/v2:EncounterProviderBase",
        "type_encounter-providers/v2:RenderingProvider",
        "type_encounter-providers/v2:ReferringProvider",
        "type_encounter-providers/v2:BillingProvider",
        "type_encounter-providers/v2:ProviderId",
        "type_encounter-providers/v2:EncounterProvider"
      ],
      "subpackages": []
    },
    "subpackage_encounters": {
      "subpackageId": "subpackage_encounters",
      "name": "encounters",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_encounters/v4"],
      "pointsTo": "subpackage_encounters/v4"
    },
    "subpackage_encounters/v4": {
      "subpackageId": "subpackage_encounters/v4",
      "name": "v4",
      "endpoints": [
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getAll",
          "name": "Get all encounters",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/encounters/v4",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "claim_status",
              "type": {
                "itemType": {
                  "value": "type_claims:ClaimStatus",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to created_at:desc",
              "key": "sort",
              "type": {
                "itemType": {
                  "value": "type_encounters/v4:EncounterSortOptions",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "date_of_service_min",
              "type": {
                "itemType": {
                  "value": "type_commons:Date",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "date_of_service_max",
              "type": {
                "itemType": {
                  "value": "type_commons:Date",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Comma delimited string",
              "key": "primary_payer_names",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter by any of the following fields: encounter_id, claim_id, patient external_id,\npatient date of birth, patient first name, patient last name,\nor encounter external id.\n",
              "key": "search_term",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to an exact match on encounter external_id, if one exists",
              "key": "external_id",
              "type": {
                "itemType": {
                  "value": "type_commons:EncounterExternalId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "ISO 8601 timestamp; ideally in UTC (although not required): 2019-08-24T14:15:22Z\n",
              "key": "diagnoses_updated_since",
              "type": {
                "itemType": {
                  "value": {
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "tag_ids",
              "type": {
                "itemType": {
                  "value": "type_tags:TagId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "work_queue_id",
              "type": {
                "itemType": {
                  "value": "type_commons:WorkQueueId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "billable_status",
              "type": {
                "itemType": {
                  "value": "type_encounters/v4:BillableStatusType",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "responsible_party",
              "type": {
                "itemType": {
                  "value": "type_encounters/v4:ResponsiblePartyType",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "owner_of_next_action",
              "type": {
                "itemType": {
                  "value": "type_encounters/v4:EncounterOwnerOfNextActionType",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_encounters/v4:EncounterPage",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "examples": []
        },
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get encounter",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/encounters/v4",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_encounters/v4:Encounter",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "examples": []
        },
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create encounter",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/encounters/v4",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": ["type_encounters/v4:EncounterBase"],
                "properties": [
                  {
                    "key": "patient",
                    "valueType": {
                      "value": "type_individual:PatientCreate",
                      "type": "id"
                    }
                  },
                  {
                    "key": "billing_provider",
                    "valueType": {
                      "value": "type_encounter-providers/v2:BillingProvider",
                      "type": "id"
                    }
                  },
                  {
                    "key": "rendering_provider",
                    "valueType": {
                      "value": "type_encounter-providers/v2:RenderingProvider",
                      "type": "id"
                    }
                  },
                  {
                    "description": "The provider who referred the services that were rendered.\nAll physicians who order services or refer Medicare beneficiaries must\nreport this data.\nIf a claim involves multiple referring physicians, create a separate\nencounter for each physician.\n",
                    "key": "referring_provider",
                    "valueType": {
                      "itemType": {
                        "value": "type_encounter-providers/v2:ReferringProvider",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "service_facility",
                    "valueType": {
                      "itemType": {
                        "value": "type_service-facility:EncounterServiceFacilityBase",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Subscriber_primary is required when responsible_party is INSURANCE_PAY (i.e. when the claim should be billed to insurance).\nThese are not required fields when responsible_party is SELF_PAY (i.e. when the claim should be billed to the patient).\nHowever, if you collect this for patients, even self-pay, we recommend including it when sending encounters to Candid.\nNote: Cash Pay is no longer a valid payer_id in v4, please use responsible party to define self-pay claims\n",
                    "key": "subscriber_primary",
                    "valueType": {
                      "itemType": {
                        "value": "type_individual:SubscriberCreate",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Please always include this when you have it, even for self-pay claims\n",
                    "key": "subscriber_secondary",
                    "valueType": {
                      "itemType": {
                        "value": "type_individual:SubscriberCreate",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Ideally, this field should contain no more than 12 diagnoses. However, more diagnoses\nmay be submitted at this time, and coders will later prioritize the 12 that will be\nsubmitted to the payor.\n",
                    "key": "diagnoses",
                    "valueType": {
                      "itemType": {
                        "value": "type_diagnoses:DiagnosisCreate",
                        "type": "id"
                      },
                      "type": "list"
                    }
                  },
                  {
                    "key": "clinical_notes",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_encounters/v4:ClinicalNoteCategoryCreate",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Spot to store misc, human-readable, notes about this encounter to be used\nin the billing process.\n",
                    "key": "billing_notes",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_billing-notes:BillingNoteBase",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "place_of_service_code",
                    "valueType": {
                      "value": "type_commons:FacilityTypeCode",
                      "type": "id"
                    }
                  },
                  {
                    "key": "patient_histories",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_encounters/v4:PatientHistoryCategory",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Each service line must be linked to a diagnosis. Concretely,\n`service_line.diagnosis_pointers`must contain at least one entry which should be\nin bounds of the diagnoses list field\n",
                    "key": "service_lines",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_service-lines/v2:ServiceLineCreate",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Personal and contact info for the guarantor of the patient responsibility.\n",
                    "key": "guarantor",
                    "valueType": {
                      "itemType": {
                        "value": "type_guarantor/v1:GuarantorCreate",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_encounters/v4:Encounter",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_encounters/v4:EncounterExternalIdUniquenessErrorType",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_encounters/v4:EncounterGuarantorMissingContactInfoErrorType",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "itemType": {
                  "value": "type_commons:RequestValidationError",
                  "type": "id"
                },
                "type": "list"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_encounters/v4:CashPayPayerErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        },
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update encounter",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/encounters/v4",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "Box 23 on the CMS-1500 claim form.",
                    "key": "prior_authorization_number",
                    "valueType": {
                      "itemType": {
                        "value": "type_encounters/v4:PriorAuthorizationNumber",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "A client-specified unique ID to associate with this encounter;\nfor example, your internal encounter ID or a Dr. Chrono encounter ID.\nThis field should not contain PHI.\n",
                    "key": "external_id",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:EncounterExternalId",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Date formatted as YYYY-MM-DD; eg: 2019-08-24.\nThis date must be the local date in the timezone where the service occurred.\nBox 24a on the CMS-1500 claim form.\nIf service occurred over a range of dates, this should be the start date.\n",
                    "key": "date_of_service",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:Date",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Ideally, this field should contain no more than 12 diagnoses. However, more diagnoses\nmay be submitted at this time, and coders will later prioritize the 12 that will be\nsubmitted to the payor.\n",
                    "key": "diagnosis_ids",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_diagnoses:DiagnosisId",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "tag_ids",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_tags:TagId",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "clinical_notes",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_encounters/v4:ClinicalNoteCategoryCreate",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "pay_to_address",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:StreetAddressLongZip",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "billable_status",
                    "valueType": {
                      "itemType": {
                        "value": "type_encounters/v4:BillableStatusType",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "responsible_party",
                    "valueType": {
                      "itemType": {
                        "value": "type_encounters/v4:ResponsiblePartyType",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "provider_accepts_assignment",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "benefits_assigned_to_provider",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "synchronicity",
                    "valueType": {
                      "itemType": {
                        "value": "type_encounters/v4:SynchronicityType",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "place_of_service_code",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:FacilityTypeCode",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "appointment_type",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "end_date_of_service",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:Date",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "subscriber_secondary",
                    "valueType": {
                      "itemType": {
                        "value": "type_individual:SubscriberCreate",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_encounters/v4:Encounter",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_encounters/v4:EncounterExternalIdUniquenessErrorType",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            },
            {
              "type": {
                "itemType": {
                  "value": "type_commons:RequestValidationError",
                  "type": "id"
                },
                "type": "list"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_encounters/v4:EncounterBase",
        "type_encounters/v4:Encounter",
        "type_encounters/v4:EncounterSortOptions",
        "type_encounters/v4:Medication",
        "type_encounters/v4:Vitals",
        "type_encounters/v4:Intervention",
        "type_encounters/v4:InterventionCategory",
        "type_encounters/v4:Lab",
        "type_encounters/v4:LabCodeType",
        "type_encounters/v4:PatientHistoryCategory",
        "type_encounters/v4:PatientHistoryCategoryEnum",
        "type_encounters/v4:IntakeQuestion",
        "type_encounters/v4:IntakeResponseAndFollowUps",
        "type_encounters/v4:IntakeFollowUp",
        "type_encounters/v4:ClinicalNoteCategoryCreate",
        "type_encounters/v4:ClinicalNoteCategory",
        "type_encounters/v4:NoteCategory",
        "type_encounters/v4:ClinicalNote",
        "type_encounters/v4:ResponsiblePartyType",
        "type_encounters/v4:BillableStatusType",
        "type_encounters/v4:EncounterOwnerOfNextActionType",
        "type_encounters/v4:SynchronicityType",
        "type_encounters/v4:CodingAttributionType",
        "type_encounters/v4:EncounterPage",
        "type_encounters/v4:PriorAuthorizationNumber",
        "type_encounters/v4:RxCui",
        "type_encounters/v4:IntakeQuestionId",
        "type_encounters/v4:IntakeFollowUpId",
        "type_encounters/v4:EncounterExternalIdUniquenessErrorType",
        "type_encounters/v4:EncounterGuarantorMissingContactInfoErrorType",
        "type_encounters/v4:CashPayPayerErrorMessage"
      ],
      "subpackages": []
    },
    "subpackage_expected-network-status": {
      "subpackageId": "subpackage_expected-network-status",
      "name": "expected-network-status",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_expected-network-status/v1"],
      "pointsTo": "subpackage_expected-network-status/v1"
    },
    "subpackage_expected-network-status/v1": {
      "subpackageId": "subpackage_expected-network-status/v1",
      "name": "v1",
      "endpoints": [
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "compute",
          "name": "Compute network status",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/expected-network-status/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "external_patient_id",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "subscriber_payer_id",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "subscriber_payer_name",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "subscriber_insurance_type",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:InsuranceTypeCode",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "subscriber_plan_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "billing_provider_npi",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "billing_provider_tin",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "rendering_provider_npi",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "contracted_state",
                    "valueType": {
                      "value": "type_commons:State",
                      "type": "id"
                    }
                  },
                  {
                    "key": "date_of_service",
                    "valueType": {
                      "value": "type_commons:Date",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_expected-network-status/v1:ExpectedNetworkStatusResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_expected-network-status/v1:ExpectedNetworkStatus",
        "type_expected-network-status/v1:ExpectedNetworkStatusResponse"
      ],
      "subpackages": []
    },
    "subpackage_exports": {
      "subpackageId": "subpackage_exports",
      "name": "exports",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_exports/v3"]
    },
    "subpackage_exports/v3": {
      "subpackageId": "subpackage_exports/v3",
      "name": "v3",
      "endpoints": [
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_exports",
          "name": "Get Exports",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/exports/v3",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Beginning date of claim versions returned in the export, ISO 8601 date e.g. 2019-08-24.\nMust be at least 1 calendar day in the past. Cannot be earlier than 2022-10-07.\n",
              "key": "start_date",
              "type": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              }
            },
            {
              "description": "Ending date of claim versions returned in the export, ISO 8601 date; e.g. 2019-08-24.\nMust be within 30 days of start_date.\n",
              "key": "end_date",
              "type": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_exports/v3:GetExportsResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "itemType": {
                  "value": "type_commons:RequestValidationError",
                  "type": "id"
                },
                "type": "list"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_commons:ErrorMessage",
                "type": "id"
              },
              "statusCode": 503
            },
            {
              "type": {
                "value": "type_commons:ErrorMessage",
                "type": "id"
              },
              "statusCode": 503
            },
            {
              "type": {
                "value": "type_commons:ErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_commons:ErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": ["type_exports/v3:GetExportsResponse"],
      "subpackages": []
    },
    "subpackage_guarantor": {
      "subpackageId": "subpackage_guarantor",
      "name": "guarantor",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_guarantor/v1"],
      "pointsTo": "subpackage_guarantor/v1"
    },
    "subpackage_guarantor/v1": {
      "subpackageId": "subpackage_guarantor/v1",
      "name": "v1",
      "endpoints": [
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/guarantors/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_guarantor/v1:GuarantorCreate",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_guarantor/v1:Guarantor",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_guarantor/v1:EncounterHasExistingGuarantorErrorType",
                "type": "id"
              },
              "statusCode": 409
            }
          ],
          "examples": []
        },
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "guarantor_id",
                "type": {
                  "value": "type_guarantor/v1:GuarantorId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/guarantors/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "guarantor_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_guarantor/v1:Guarantor",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "examples": []
        },
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "guarantor_id",
                "type": {
                  "value": "type_guarantor/v1:GuarantorId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/guarantors/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "guarantor_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "first_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "last_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "external_id",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "date_of_birth",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "date"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "address",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:StreetAddressShortZip",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "phone_numbers",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_commons:PhoneNumber",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "phone_consent",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "email",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:Email",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "email_consent",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_guarantor/v1:Guarantor",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_guarantor/v1:GuarantorId",
        "type_guarantor/v1:GuarantorBase",
        "type_guarantor/v1:Guarantor",
        "type_guarantor/v1:GuarantorCreate",
        "type_guarantor/v1:EncounterHasExistingGuarantorErrorType"
      ],
      "subpackages": []
    },
    "subpackage_organization-providers": {
      "subpackageId": "subpackage_organization-providers",
      "name": "organization-providers",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_organization-providers/v2", "subpackage_organization-providers/v3"]
    },
    "subpackage_organization-providers/v2": {
      "subpackageId": "subpackage_organization-providers/v2",
      "name": "v2",
      "endpoints": [],
      "webhooks": [],
      "types": [
        "type_organization-providers/v2:OrganizationProviderId",
        "type_organization-providers/v2:OrganizationProviderSortOptions",
        "type_organization-providers/v2:ProviderType",
        "type_organization-providers/v2:LicenseType",
        "type_organization-providers/v2:OrganizationProviderAddress",
        "type_organization-providers/v2:AddressType"
      ],
      "subpackages": []
    },
    "subpackage_organization-providers/v3": {
      "subpackageId": "subpackage_organization-providers/v3",
      "name": "v3",
      "endpoints": [
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "organization_provider_id",
                "type": {
                  "value": "type_organization-providers/v2:OrganizationProviderId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/organization-providers/v3",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "organization_provider_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_organization-providers/v3:OrganizationProviderV2",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "examples": []
        },
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_multi",
          "name": "Get Multi",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/organization-providers/v3",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Limit the number of results returned. Defaults to 100.",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to a name or a part of a name",
              "key": "search_term",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to a specific NPI",
              "key": "npi",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to only rendering providers",
              "key": "is_rendering",
              "type": {
                "itemType": {
                  "value": {
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to only billing providers",
              "key": "is_billing",
              "type": {
                "itemType": {
                  "value": {
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "The page token to continue paging through a previous request",
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to PROVIDER_NAME_ASC",
              "key": "sort",
              "type": {
                "itemType": {
                  "value": "type_organization-providers/v2:OrganizationProviderSortOptions",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_organization-providers/v3:OrganizationProviderPageV2",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "examples": []
        },
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/organization-providers/v3",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_organization-providers/v3:OrganizationProviderCreateV2",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_organization-providers/v3:OrganizationProviderV2",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:RequestValidationError",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "examples": []
        },
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "organization_provider_id",
                "type": {
                  "value": "type_organization-providers/v2:OrganizationProviderId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/organization-providers/v3",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "organization_provider_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_organization-providers/v3:OrganizationProviderUpdateV2",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_organization-providers/v3:OrganizationProviderV2",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:RequestValidationError",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_organization-providers/v3:OrganizationProviderV2",
        "type_organization-providers/v3:OrganizationProviderCreateV2",
        "type_organization-providers/v3:OrganizationProviderUpdateV2",
        "type_organization-providers/v3:OrganizationProviderPageV2"
      ],
      "subpackages": []
    },
    "subpackage_service-lines": {
      "subpackageId": "subpackage_service-lines",
      "name": "service-lines",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_service-lines/v2"]
    },
    "subpackage_service-lines/v2": {
      "subpackageId": "subpackage_service-lines/v2",
      "name": "v2",
      "endpoints": [],
      "webhooks": [],
      "types": [
        "type_service-lines/v2:ServiceLineCreate",
        "type_service-lines/v2:ServiceLine",
        "type_service-lines/v2:ServiceLineERAData",
        "type_service-lines/v2:ServiceLineAdjustment",
        "type_service-lines/v2:ServiceLineDenialReason",
        "type_service-lines/v2:DenialReasonContent",
        "type_service-lines/v2:DrugIdentification",
        "type_service-lines/v2:ServiceIdQualifier",
        "type_service-lines/v2:MeasurementUnitCode"
      ],
      "subpackages": []
    },
    "subpackage_tasks": {
      "subpackageId": "subpackage_tasks",
      "name": "tasks",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_tasks/v3"],
      "pointsTo": "subpackage_tasks/v3"
    },
    "subpackage_tasks/v3": {
      "subpackageId": "subpackage_tasks/v3",
      "name": "v3",
      "endpoints": [
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_actions",
          "name": "Get Actions",
          "path": {
            "pathParameters": [
              {
                "key": "task_id",
                "type": {
                  "value": "type_commons:TaskId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/tasks/v3",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "task_id",
                "type": "pathParameter"
              },
              {
                "value": "/actions",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_tasks/v3:TaskActions",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": ["type_tasks/v3:TaskActionExecutionMethod", "type_tasks/v3:TaskActions", "type_tasks/v3:TaskAction"],
      "subpackages": []
    },
    "subpackage_billing-notes": {
      "subpackageId": "subpackage_billing-notes",
      "name": "billing-notes",
      "endpoints": [
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create billing note",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/billing_notes/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": ["type_billing-notes:BillingNoteBase"],
                "properties": [
                  {
                    "key": "encounter_id",
                    "valueType": {
                      "value": "type_commons:EncounterId",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_billing-notes:BillingNote",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_billing-notes:BillingNoteId",
        "type_billing-notes:BillingNoteBase",
        "type_billing-notes:BillingNote"
      ],
      "subpackages": []
    },
    "subpackage_claims": {
      "subpackageId": "subpackage_claims",
      "name": "claims",
      "endpoints": [],
      "webhooks": [],
      "types": ["type_claims:Claim", "type_claims:ClaimStatus"],
      "subpackages": []
    },
    "subpackage_commons": {
      "subpackageId": "subpackage_commons",
      "name": "commons",
      "endpoints": [],
      "webhooks": [],
      "types": [
        "type_commons:EncounterId",
        "type_commons:OrganizationId",
        "type_commons:ClaimId",
        "type_commons:ServiceLineId",
        "type_commons:PatientExternalId",
        "type_commons:EncounterExternalId",
        "type_commons:Npi",
        "type_commons:WorkQueueId",
        "type_commons:TaskId",
        "type_commons:LinkUrl",
        "type_commons:PageToken",
        "type_commons:Date",
        "type_commons:DateRangeOptionalEnd",
        "type_commons:Decimal",
        "type_commons:RemovableDateRangeOptionalEnd",
        "type_commons:ResourcePage",
        "type_commons:StreetAddressBase",
        "type_commons:StreetAddressShortZip",
        "type_commons:StreetAddressLongZip",
        "type_commons:State",
        "type_commons:SourceOfPaymentCode",
        "type_commons:FacilityTypeCode",
        "type_commons:PatientRelationshipToInsuredCodeAll",
        "type_commons:ProcedureModifier",
        "type_commons:ServiceLineUnits",
        "type_commons:InsuranceTypeCode",
        "type_commons:EmrPayerCrosswalk",
        "type_commons:ErrorMessage",
        "type_commons:EntityNotFoundErrorMessage",
        "type_commons:UnauthorizedErrorMessage",
        "type_commons:HttpServiceUnavailableErrorMessage",
        "type_commons:RequestValidationError",
        "type_commons:PhoneNumber",
        "type_commons:PhoneNumberType",
        "type_commons:Email"
      ],
      "subpackages": []
    },
    "subpackage_diagnoses": {
      "subpackageId": "subpackage_diagnoses",
      "name": "diagnoses",
      "endpoints": [],
      "webhooks": [],
      "types": [
        "type_diagnoses:DiagnosisId",
        "type_diagnoses:DiagnosisCreate",
        "type_diagnoses:StandaloneDiagnosisCreate",
        "type_diagnoses:DiagnosisTypeCode",
        "type_diagnoses:Diagnosis"
      ],
      "subpackages": []
    },
    "subpackage_individual": {
      "subpackageId": "subpackage_individual",
      "name": "individual",
      "endpoints": [],
      "webhooks": [],
      "types": [
        "type_individual:IndividualId",
        "type_individual:IndividualBase",
        "type_individual:SubscriberBase",
        "type_individual:SubscriberCreate",
        "type_individual:Subscriber",
        "type_individual:PatientCreate",
        "type_individual:PatientBase",
        "type_individual:Patient",
        "type_individual:Gender"
      ],
      "subpackages": []
    },
    "subpackage_payers": {
      "subpackageId": "subpackage_payers",
      "name": "payers",
      "endpoints": [
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get payer",
          "path": {
            "pathParameters": [
              {
                "key": "payer_uuid",
                "type": {
                  "value": "type_payers:PayerUuid",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/payers/v3",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "payer_uuid",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_payers:Payer",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "examples": []
        },
        {
          "availability": "GenerallyAvailable",
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getAll",
          "name": "Get all payers",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/payers/v3",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "search_term",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_payers:PayerPage",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": ["type_payers:PayerUuid", "type_payers:PayerPage", "type_payers:Payer"],
      "subpackages": []
    },
    "subpackage_service-facility": {
      "subpackageId": "subpackage_service-facility",
      "name": "service-facility",
      "endpoints": [],
      "webhooks": [],
      "types": [
        "type_service-facility:ServiceFacilityId",
        "type_service-facility:EncounterServiceFacilityBase",
        "type_service-facility:EncounterServiceFacility"
      ],
      "subpackages": []
    },
    "subpackage_tags": {
      "subpackageId": "subpackage_tags",
      "name": "tags",
      "endpoints": [],
      "webhooks": [],
      "types": ["type_tags:TagId", "type_tags:TagCreate", "type_tags:Tag", "type_tags:TagColorEnum"],
      "subpackages": []
    }
  },
  "rootPackage": {
    "endpoints": [],
    "webhooks": [],
    "types": [],
    "subpackages": [
      "subpackage_auth",
      "subpackage_eligibility",
      "subpackage_encounter-providers",
      "subpackage_encounters",
      "subpackage_expected-network-status",
      "subpackage_exports",
      "subpackage_guarantor",
      "subpackage_organization-providers",
      "subpackage_service-lines",
      "subpackage_tasks",
      "subpackage_billing-notes",
      "subpackage_claims",
      "subpackage_commons",
      "subpackage_diagnoses",
      "subpackage_individual",
      "subpackage_payers",
      "subpackage_service-facility",
      "subpackage_tags"
    ]
  },
  "auth": {
    "tokenName": "token",
    "type": "bearerAuth"
  }
}
