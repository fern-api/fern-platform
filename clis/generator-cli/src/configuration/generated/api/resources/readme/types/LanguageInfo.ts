/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernGeneratorCli from "../../../index";

/**
 * The language and its associated publish information (if any).
 * This is used to generate badges, the installation guide, and determine what language to
 * use when surrounding the snippets in a code block.
 */
export type LanguageInfo =
    | FernGeneratorCli.LanguageInfo.Typescript
    | FernGeneratorCli.LanguageInfo.Python
    | FernGeneratorCli.LanguageInfo.Go
    | FernGeneratorCli.LanguageInfo.Java
    | FernGeneratorCli.LanguageInfo.Ruby
    | FernGeneratorCli.LanguageInfo.Csharp;

export declare namespace LanguageInfo {
    interface Typescript extends FernGeneratorCli.TypescriptInfo, _Utils {
        type: "typescript";
    }

    interface Python extends FernGeneratorCli.PythonInfo, _Utils {
        type: "python";
    }

    interface Go extends FernGeneratorCli.GoInfo, _Utils {
        type: "go";
    }

    interface Java extends FernGeneratorCli.JavaInfo, _Utils {
        type: "java";
    }

    interface Ruby extends FernGeneratorCli.RubyInfo, _Utils {
        type: "ruby";
    }

    interface Csharp extends FernGeneratorCli.CsharpInfo, _Utils {
        type: "csharp";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernGeneratorCli.LanguageInfo._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        typescript: (value: FernGeneratorCli.TypescriptInfo) => _Result;
        python: (value: FernGeneratorCli.PythonInfo) => _Result;
        go: (value: FernGeneratorCli.GoInfo) => _Result;
        java: (value: FernGeneratorCli.JavaInfo) => _Result;
        ruby: (value: FernGeneratorCli.RubyInfo) => _Result;
        csharp: (value: FernGeneratorCli.CsharpInfo) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const LanguageInfo = {
    typescript: (value: FernGeneratorCli.TypescriptInfo): FernGeneratorCli.LanguageInfo.Typescript => {
        return {
            ...value,
            type: "typescript",
            _visit: function <_Result>(
                this: FernGeneratorCli.LanguageInfo.Typescript,
                visitor: FernGeneratorCli.LanguageInfo._Visitor<_Result>
            ) {
                return FernGeneratorCli.LanguageInfo._visit(this, visitor);
            },
        };
    },

    python: (value: FernGeneratorCli.PythonInfo): FernGeneratorCli.LanguageInfo.Python => {
        return {
            ...value,
            type: "python",
            _visit: function <_Result>(
                this: FernGeneratorCli.LanguageInfo.Python,
                visitor: FernGeneratorCli.LanguageInfo._Visitor<_Result>
            ) {
                return FernGeneratorCli.LanguageInfo._visit(this, visitor);
            },
        };
    },

    go: (value: FernGeneratorCli.GoInfo): FernGeneratorCli.LanguageInfo.Go => {
        return {
            ...value,
            type: "go",
            _visit: function <_Result>(
                this: FernGeneratorCli.LanguageInfo.Go,
                visitor: FernGeneratorCli.LanguageInfo._Visitor<_Result>
            ) {
                return FernGeneratorCli.LanguageInfo._visit(this, visitor);
            },
        };
    },

    java: (value: FernGeneratorCli.JavaInfo): FernGeneratorCli.LanguageInfo.Java => {
        return {
            ...value,
            type: "java",
            _visit: function <_Result>(
                this: FernGeneratorCli.LanguageInfo.Java,
                visitor: FernGeneratorCli.LanguageInfo._Visitor<_Result>
            ) {
                return FernGeneratorCli.LanguageInfo._visit(this, visitor);
            },
        };
    },

    ruby: (value: FernGeneratorCli.RubyInfo): FernGeneratorCli.LanguageInfo.Ruby => {
        return {
            ...value,
            type: "ruby",
            _visit: function <_Result>(
                this: FernGeneratorCli.LanguageInfo.Ruby,
                visitor: FernGeneratorCli.LanguageInfo._Visitor<_Result>
            ) {
                return FernGeneratorCli.LanguageInfo._visit(this, visitor);
            },
        };
    },

    csharp: (value: FernGeneratorCli.CsharpInfo): FernGeneratorCli.LanguageInfo.Csharp => {
        return {
            ...value,
            type: "csharp",
            _visit: function <_Result>(
                this: FernGeneratorCli.LanguageInfo.Csharp,
                visitor: FernGeneratorCli.LanguageInfo._Visitor<_Result>
            ) {
                return FernGeneratorCli.LanguageInfo._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernGeneratorCli.LanguageInfo,
        visitor: FernGeneratorCli.LanguageInfo._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case "typescript":
                return visitor.typescript(value);
            case "python":
                return visitor.python(value);
            case "go":
                return visitor.go(value);
            case "java":
                return visitor.java(value);
            case "ruby":
                return visitor.ruby(value);
            case "csharp":
                return visitor.csharp(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
