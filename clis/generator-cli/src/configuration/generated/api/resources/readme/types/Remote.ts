/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernGeneratorCli from "../../../index";

/**
 * The remote where the README.md is hosted.
 */
export type Remote = FernGeneratorCli.Remote.Github;

export declare namespace Remote {
    interface Github extends FernGeneratorCli.GithubRemote, _Utils {
        type: "github";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernGeneratorCli.Remote._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        github: (value: FernGeneratorCli.GithubRemote) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const Remote = {
    github: (value: FernGeneratorCli.GithubRemote): FernGeneratorCli.Remote.Github => {
        return {
            ...value,
            type: "github",
            _visit: function <_Result>(
                this: FernGeneratorCli.Remote.Github,
                visitor: FernGeneratorCli.Remote._Visitor<_Result>
            ) {
                return FernGeneratorCli.Remote._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernGeneratorCli.Remote, visitor: FernGeneratorCli.Remote._Visitor<_Result>): _Result => {
        switch (value.type) {
            case "github":
                return visitor.github(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
