info:
    title: Schematic API
    version: "0.1"
    description: Schematic API
openapi: 3.0.0
security:
    - ApiKeyAuth: []
servers:
    - url: https://api.schematichq.com
components:
    securitySchemes:
        ApiKeyAuth:
            type: apiKey
            in: header
            name: X-Schematic-Api-Key
    responses:
        BadRequest:
            description: Bad request
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ApiError'
        Conflict:
            description: Conflict
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ApiError'
        Forbidden:
            description: Forbidden
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ApiError'
        NotFound:
            description: Not found
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ApiError'
        ServerError:
            description: Server error
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ApiError'
        Unauthorized:
            description: Unauthorized
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ApiError'
        UnprocessableEntity:
            description: Unprocessable entity
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ApiError'
    schemas:
        ApiError:
            type: object
            properties:
                error:
                    type: string
                    description: Error message
            required:
                - error
        ApiKeyCreateResponseData:
            type: object
            description: The created resource
            properties:
                created_at:
                    type: string
                    format: date-time
                description:
                    type: string
                    nullable: true
                environment_id:
                    type: string
                    nullable: true
                id:
                    type: string
                last_used_at:
                    type: string
                    format: date-time
                    nullable: true
                name:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                secret:
                    type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - id
                - name
                - scopes
                - created_at
                - updated_at
                - secret
            title: ApiKeyCreateResponseData
        ApiKeyRequestListResponseData:
            type: object
            properties:
                api_key_id:
                    type: string
                ended_at:
                    type: string
                    format: date-time
                    nullable: true
                environment_id:
                    type: string
                    nullable: true
                id:
                    type: string
                method:
                    type: string
                req_body:
                    type: string
                    nullable: true
                request_type:
                    type: string
                    nullable: true
                resource_id:
                    type: integer
                    nullable: true
                resource_id_string:
                    type: string
                    nullable: true
                resource_name:
                    type: string
                    nullable: true
                resource_type:
                    type: string
                    nullable: true
                resp_code:
                    type: integer
                    nullable: true
                secondary_resource:
                    type: string
                    nullable: true
                started_at:
                    type: string
                    format: date-time
                url:
                    type: string
                user_name:
                    type: string
                    nullable: true
            required:
                - api_key_id
                - method
                - id
                - started_at
                - url
            title: ApiKeyRequestListResponseData
        ApiKeyRequestResponseData:
            type: object
            description: The returned resource
            properties:
                api_key_id:
                    type: string
                ended_at:
                    type: string
                    format: date-time
                    nullable: true
                environment_id:
                    type: string
                    nullable: true
                id:
                    type: string
                method:
                    type: string
                req_body:
                    type: string
                    nullable: true
                request_type:
                    type: string
                    nullable: true
                resource_id:
                    type: integer
                    nullable: true
                resource_id_string:
                    type: string
                    nullable: true
                resource_name:
                    type: string
                    nullable: true
                resource_type:
                    type: string
                    nullable: true
                resp_body:
                    type: string
                    nullable: true
                resp_code:
                    type: integer
                    nullable: true
                secondary_resource:
                    type: string
                    nullable: true
                started_at:
                    type: string
                    format: date-time
                url:
                    type: string
                user_agent:
                    type: string
                    nullable: true
                user_id:
                    type: string
                    nullable: true
                user_name:
                    type: string
                    nullable: true
            required:
                - api_key_id
                - method
                - id
                - started_at
                - url
            title: ApiKeyRequestResponseData
        ApiKeyResponseData:
            type: object
            description: The updated resource
            properties:
                created_at:
                    type: string
                    format: date-time
                description:
                    type: string
                    nullable: true
                environment_id:
                    type: string
                    nullable: true
                id:
                    type: string
                last_used_at:
                    type: string
                    format: date-time
                    nullable: true
                name:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - id
                - name
                - scopes
                - created_at
                - updated_at
            title: ApiKeyResponseData
        AudienceRequestBody:
            type: object
            properties:
                condition_groups:
                    type: array
                    items:
                        $ref: '#/components/schemas/CreateOrUpdateConditionGroupRequestBody'
                conditions:
                    type: array
                    items:
                        $ref: '#/components/schemas/CreateOrUpdateConditionRequestBody'
                limit:
                    type: integer
                    description: Page limit (default 100)
                    nullable: true
                offset:
                    type: integer
                    description: Page offset (default 0)
                    nullable: true
                q:
                    type: string
                    nullable: true
            required:
                - conditions
                - condition_groups
            title: AudienceRequestBody
        BillingProductResponseData:
            type: object
            properties:
                account_id:
                    type: string
                created_at:
                    type: string
                    format: date-time
                currency:
                    type: string
                deleted_at:
                    type: string
                    format: date-time
                    nullable: true
                environment_id:
                    type: string
                external_id:
                    type: string
                name:
                    type: string
                price:
                    type: number
                product_id:
                    type: string
                quantity:
                    type: number
                updated_at:
                    type: string
                    format: date-time
            required:
                - product_id
                - external_id
                - account_id
                - environment_id
                - name
                - price
                - currency
                - quantity
                - created_at
                - updated_at
            title: BillingProductResponseData
        BillingSubscriptionResponseData:
            type: object
            description: The created resource
            properties:
                deleted_at:
                    type: string
                    format: date-time
                    nullable: true
                expired_at:
                    type: string
                    format: date-time
                    nullable: true
                external_id:
                    type: string
                id:
                    type: integer
                updated_at:
                    type: string
                    format: date-time
            required:
                - id
                - external_id
                - updated_at
            title: BillingSubscriptionResponseData
        CheckFlagOutputWithFlagKey:
            type: object
            properties:
                company_id:
                    type: string
                    nullable: true
                error:
                    type: string
                    nullable: true
                flag:
                    type: string
                reason:
                    type: string
                rule_id:
                    type: string
                    nullable: true
                user_id:
                    type: string
                    nullable: true
                value:
                    type: boolean
            required:
                - reason
                - value
                - flag
            title: CheckFlagOutputWithFlagKey
        CheckFlagRequestBody:
            type: object
            properties:
                company:
                    type: object
                    nullable: true
                user:
                    type: object
                    nullable: true
            title: CheckFlagRequestBody
        CheckFlagResponseData:
            type: object
            description: The returned resource
            properties:
                company_id:
                    type: string
                    nullable: true
                error:
                    type: string
                    nullable: true
                reason:
                    type: string
                rule_id:
                    type: string
                    nullable: true
                user_id:
                    type: string
                    nullable: true
                value:
                    type: boolean
            required:
                - reason
                - value
            title: CheckFlagResponseData
        CheckFlagsResponseData:
            type: object
            description: The created resource
            properties:
                flags:
                    type: array
                    items:
                        $ref: '#/components/schemas/CheckFlagOutputWithFlagKey'
            required:
                - flags
            title: CheckFlagsResponseData
        CompanyDetailResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                entity_traits:
                    type: array
                    items:
                        $ref: '#/components/schemas/EntityTraitDetailResponseData'
                environment_id:
                    type: string
                id:
                    type: string
                keys:
                    type: array
                    items:
                        $ref: '#/components/schemas/EntityKeyDetailResponseData'
                last_seen_at:
                    type: string
                    format: date-time
                    nullable: true
                logo_url:
                    type: string
                    nullable: true
                name:
                    type: string
                plans:
                    type: array
                    items:
                        $ref: '#/components/schemas/PreviewObject'
                traits:
                    type: object
                    description: A map of trait names to trait values
                updated_at:
                    type: string
                    format: date-time
                user_count:
                    type: integer
            required:
                - created_at
                - environment_id
                - id
                - name
                - updated_at
                - keys
                - entity_traits
                - plans
                - user_count
            title: CompanyDetailResponseData
        CompanyMembershipDetailResponseData:
            type: object
            properties:
                company:
                    $ref: '#/components/schemas/CompanyResponseData'
                company_id:
                    type: string
                created_at:
                    type: string
                    format: date-time
                id:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                user_id:
                    type: string
            required:
                - id
                - company_id
                - user_id
                - created_at
                - updated_at
            title: CompanyMembershipDetailResponseData
        CompanyMembershipResponseData:
            type: object
            properties:
                company_id:
                    type: string
                created_at:
                    type: string
                    format: date-time
                id:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                user_id:
                    type: string
            required:
                - id
                - company_id
                - user_id
                - created_at
                - updated_at
            title: CompanyMembershipResponseData
        CompanyOverrideResponseData:
            type: object
            description: The updated resource
            properties:
                company:
                    $ref: '#/components/schemas/CompanyDetailResponseData'
                company_id:
                    type: string
                created_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                feature:
                    $ref: '#/components/schemas/FeatureResponseData'
                feature_id:
                    type: string
                id:
                    type: string
                metric_period:
                    type: string
                    nullable: true
                rule_id:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                value_bool:
                    type: boolean
                    nullable: true
                value_numeric:
                    type: integer
                    nullable: true
                value_trait:
                    $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
                value_trait_id:
                    type: string
                    nullable: true
                value_type:
                    type: string
            required:
                - company_id
                - created_at
                - environment_id
                - feature_id
                - id
                - rule_id
                - updated_at
                - value_type
            title: CompanyOverrideResponseData
        CompanyPlanResponseData:
            type: object
            properties:
                company_id:
                    type: string
                created_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                id:
                    type: string
                plan_id:
                    type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - id
                - environment_id
                - company_id
                - plan_id
                - created_at
                - updated_at
            title: CompanyPlanResponseData
        CompanyResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                id:
                    type: string
                last_seen_at:
                    type: string
                    format: date-time
                    nullable: true
                logo_url:
                    type: string
                    nullable: true
                name:
                    type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - created_at
                - environment_id
                - id
                - name
                - updated_at
            title: CompanyResponseData
        CompanySubscriptionResponseData:
            type: object
            properties:
                customer_external_id:
                    type: string
                expired_at:
                    type: string
                    format: date-time
                    nullable: true
                interval:
                    type: string
                products:
                    type: array
                    items:
                        $ref: '#/components/schemas/BillingProductResponseData'
                subscription_external_id:
                    type: string
            required:
                - subscription_external_id
                - customer_external_id
                - interval
                - products
            title: CompanySubscriptionResponseData
        CountResponse:
            type: object
            description: The created resource
            properties:
                count:
                    type: integer
            required:
                - count
            title: CountResponse
        CreateApiKeyRequestBody:
            type: object
            properties:
                description:
                    type: string
                    nullable: true
                environment_id:
                    type: string
                    nullable: true
                name:
                    type: string
            required:
                - name
            title: CreateApiKeyRequestBody
        CreateBillingProductRequestBody:
            type: object
            properties:
                currency:
                    type: string
                external_id:
                    type: string
                name:
                    type: string
                price:
                    type: number
                quantity:
                    type: integer
            required:
                - external_id
                - name
                - price
                - currency
                - quantity
            title: CreateBillingProductRequestBody
        CreateBillingSubscriptionsRequestBody:
            type: object
            properties:
                customer_external_id:
                    type: string
                expired_at:
                    type: string
                    format: date-time
                interval:
                    type: string
                    nullable: true
                product_external_ids:
                    type: array
                    items:
                        type: string
                subscription_external_id:
                    type: string
            required:
                - customer_external_id
                - subscription_external_id
                - expired_at
                - product_external_ids
            title: CreateBillingSubscriptionsRequestBody
        CreateCompanyOverrideRequestBody:
            type: object
            properties:
                company_id:
                    type: string
                feature_id:
                    type: string
                metric_period:
                    type: string
                    nullable: true
                    enum:
                        - current_month
                        - current_week
                        - current_day
                value_bool:
                    type: boolean
                    nullable: true
                value_numeric:
                    type: integer
                    nullable: true
                value_trait_id:
                    type: string
                    nullable: true
                value_type:
                    type: string
                    enum:
                        - Boolean
                        - Numeric
                        - Trait
                        - Unlimited
            required:
                - company_id
                - feature_id
                - value_type
            title: CreateCompanyOverrideRequestBody
        CreateEntityTraitDefinitionRequestBody:
            type: object
            properties:
                display_name:
                    type: string
                    nullable: true
                entity_type:
                    type: string
                    enum:
                        - company
                        - user
                hierarchy:
                    type: array
                    items:
                        type: string
                trait_type:
                    type: string
                    enum:
                        - boolean
                        - currency
                        - date
                        - number
                        - string
                        - url
            required:
                - entity_type
                - hierarchy
                - trait_type
            title: CreateEntityTraitDefinitionRequestBody
        CreateEnvironmentRequestBody:
            type: object
            properties:
                environment_type:
                    type: string
                    enum:
                        - development
                        - staging
                        - production
                name:
                    type: string
            required:
                - name
                - environment_type
            title: CreateEnvironmentRequestBody
        CreateEventBatchRequestBody:
            type: object
            properties:
                events:
                    type: array
                    items:
                        $ref: '#/components/schemas/CreateEventRequestBody'
            required:
                - events
            title: CreateEventBatchRequestBody
        CreateEventRequestBody:
            type: object
            properties:
                body:
                    type: object
                    oneOf:
                        - type: object
                          properties:
                            company:
                                type: object
                                description: Key-value pairs to identify company associated with track event
                            event:
                                type: string
                                description: The name of the type of track event
                            traits:
                                type: object
                                description: A map of trait names to trait values
                            user:
                                type: object
                                description: Key-value pairs to identify user associated with track event
                          required:
                            - event
                          title: EventBodyTrack
                        - type: object
                          properties:
                            company:
                                type: object
                                description: Information about the company associated with the user; required only if it is a new user
                                properties:
                                    keys:
                                        type: object
                                        description: Key-value pairs to identify the company
                                    name:
                                        type: string
                                        description: The display name of the company; required only if it is a new company
                                    traits:
                                        type: object
                                        description: A map of company trait names to trait values
                                required:
                                    - keys
                                title: EventBodyIdentifyCompany
                            keys:
                                type: object
                                description: Key-value pairs to identify the user
                            name:
                                type: string
                                description: The display name of the user being identified; required only if it is a new user
                            traits:
                                type: object
                                description: A map of user trait names to trait values
                          required:
                            - keys
                          title: EventBodyIdentify
                    title: EventBody
                event_type:
                    type: string
                    description: Either 'identify' or 'track'
                    enum:
                        - identify
                        - track
                sent_at:
                    type: string
                    description: Optionally provide a timestamp at which the event was sent to Schematic
                    format: date-time
                    nullable: true
            required:
                - event_type
            title: CreateEventRequestBody
        CreateFeatureRequestBody:
            type: object
            properties:
                description:
                    type: string
                event_subtype:
                    type: string
                    nullable: true
                feature_type:
                    type: string
                    enum:
                        - boolean
                        - event
                        - trait
                flag:
                    $ref: '#/components/schemas/CreateOrUpdateFlagRequestBody'
                lifecycle_phase:
                    type: string
                    nullable: true
                name:
                    type: string
                trait_id:
                    type: string
                    nullable: true
            required:
                - description
                - feature_type
                - name
            title: CreateFeatureRequestBody
        CreateFlagRequestBody:
            type: object
            properties:
                default_value:
                    type: boolean
                description:
                    type: string
                feature_id:
                    type: string
                    nullable: true
                flag_type:
                    type: string
                key:
                    type: string
                name:
                    type: string
            required:
                - default_value
                - description
                - flag_type
                - key
                - name
            title: CreateFlagRequestBody
        CreateOrUpdateConditionGroupRequestBody:
            type: object
            properties:
                conditions:
                    type: array
                    items:
                        $ref: '#/components/schemas/CreateOrUpdateConditionRequestBody'
                flag_id:
                    type: string
                    nullable: true
                id:
                    type: string
                    nullable: true
                plan_id:
                    type: string
                    nullable: true
            required:
                - conditions
            title: CreateOrUpdateConditionGroupRequestBody
        CreateOrUpdateConditionRequestBody:
            type: object
            properties:
                comparison_trait_id:
                    type: string
                    description: Optionally provide a trait ID to compare a metric or trait value against instead of a value
                    nullable: true
                condition_type:
                    type: string
                    enum:
                        - company
                        - metric
                        - trait
                        - user
                        - plan
                        - billing_product
                event_subtype:
                    type: string
                    description: Name of track event type used to measure this condition
                    nullable: true
                id:
                    type: string
                    nullable: true
                metric_period:
                    type: string
                    description: Period of time over which to measure the track event metric
                    nullable: true
                    enum:
                        - current_month
                        - current_week
                        - current_day
                metric_value:
                    type: integer
                    description: Value to compare the track event metric against
                operator:
                    type: string
                    enum:
                        - eq
                        - ne
                        - gt
                        - gte
                        - lt
                        - lte
                resource_ids:
                    type: array
                    description: List of resource IDs (companies, users, or plans) targeted by this condition
                    items:
                        type: string
                trait_id:
                    type: string
                    description: ID of trait to use to measure this condition
                    nullable: true
                trait_value:
                    type: string
                    description: Value to compare the trait value against
                    nullable: true
            required:
                - condition_type
                - operator
                - resource_ids
                - metric_value
            title: CreateOrUpdateConditionRequestBody
        CreateOrUpdateFlagRequestBody:
            type: object
            properties:
                default_value:
                    type: boolean
                description:
                    type: string
                feature_id:
                    type: string
                    nullable: true
                flag_type:
                    type: string
                id:
                    type: string
                    nullable: true
                key:
                    type: string
                name:
                    type: string
            required:
                - default_value
                - description
                - flag_type
                - key
                - name
            title: CreateOrUpdateFlagRequestBody
        CreateOrUpdateRuleRequestBody:
            type: object
            properties:
                condition_groups:
                    type: array
                    items:
                        $ref: '#/components/schemas/CreateOrUpdateConditionGroupRequestBody'
                conditions:
                    type: array
                    items:
                        $ref: '#/components/schemas/CreateOrUpdateConditionRequestBody'
                id:
                    type: string
                    nullable: true
                name:
                    type: string
                priority:
                    type: integer
                rule_type:
                    type: string
                    nullable: true
                    enum:
                        - global_override
                        - company_override
                        - plan_entitlement
                        - standard
                        - default
                        - plan_audience
                value:
                    type: boolean
            required:
                - condition_groups
                - conditions
                - name
                - priority
                - value
            title: CreateOrUpdateRuleRequestBody
        CreatePlanEntitlementRequestBody:
            type: object
            properties:
                feature_id:
                    type: string
                metric_period:
                    type: string
                    nullable: true
                    enum:
                        - current_month
                        - current_week
                        - current_day
                plan_id:
                    type: string
                value_bool:
                    type: boolean
                    nullable: true
                value_numeric:
                    type: integer
                    nullable: true
                value_trait_id:
                    type: string
                    nullable: true
                value_type:
                    type: string
                    enum:
                        - Boolean
                        - Numeric
                        - Trait
                        - Unlimited
            required:
                - plan_id
                - feature_id
                - value_type
            title: CreatePlanEntitlementRequestBody
        CreatePlanRequestBody:
            type: object
            properties:
                description:
                    type: string
                name:
                    type: string
                plan_type:
                    type: string
                    enum:
                        - product
                        - pricing_plan
                        - add_on
                        - overage
                        - billable_metric
                        - other
            required:
                - description
                - name
                - plan_type
            title: CreatePlanRequestBody
        CreateReqCommon:
            type: object
            properties:
                feature_id:
                    type: string
                metric_period:
                    type: string
                    nullable: true
                    enum:
                        - current_month
                        - current_week
                        - current_day
                value_bool:
                    type: boolean
                    nullable: true
                value_numeric:
                    type: integer
                    nullable: true
                value_trait_id:
                    type: string
                    nullable: true
                value_type:
                    type: string
                    enum:
                        - Boolean
                        - Numeric
                        - Trait
                        - Unlimited
            required:
                - feature_id
                - value_type
            title: CreateReqCommon
        CreateWebhookRequestBody:
            type: object
            properties:
                name:
                    type: string
                request_types:
                    type: array
                    items:
                        type: string
                url:
                    type: string
            required:
                - name
                - url
                - request_types
            title: CreateWebhookRequestBody
        DeleteResponse:
            type: object
            properties:
                deleted:
                    type: boolean
                    description: Whether the delete was successful
        EntityKeyDefinitionResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                entity_type:
                    type: string
                id:
                    type: string
                key:
                    type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - id
                - entity_type
                - key
                - created_at
                - updated_at
            title: EntityKeyDefinitionResponseData
        EntityKeyDetailResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                definition:
                    $ref: '#/components/schemas/EntityKeyDefinitionResponseData'
                definition_id:
                    type: string
                entity_id:
                    type: string
                entity_type:
                    type: string
                environment_id:
                    type: string
                id:
                    type: string
                key:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                value:
                    type: string
            required:
                - id
                - environment_id
                - definition_id
                - entity_type
                - entity_id
                - key
                - value
                - created_at
                - updated_at
            title: EntityKeyDetailResponseData
        EntityKeyResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                definition_id:
                    type: string
                entity_id:
                    type: string
                entity_type:
                    type: string
                environment_id:
                    type: string
                id:
                    type: string
                key:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                value:
                    type: string
            required:
                - id
                - environment_id
                - definition_id
                - entity_type
                - entity_id
                - key
                - value
                - created_at
                - updated_at
            title: EntityKeyResponseData
        EntityTraitDefinitionResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                display_name:
                    type: string
                entity_type:
                    type: string
                hierarchy:
                    type: array
                    items:
                        type: string
                id:
                    type: string
                trait_type:
                    type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - created_at
                - display_name
                - entity_type
                - hierarchy
                - id
                - trait_type
                - updated_at
            title: EntityTraitDefinitionResponseData
        EntityTraitDetailResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                definition:
                    $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
                definition_id:
                    type: string
                environment_id:
                    type: string
                id:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                value:
                    type: string
            required:
                - id
                - environment_id
                - definition_id
                - value
                - created_at
                - updated_at
            title: EntityTraitDetailResponseData
        EntityTraitResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                definition_id:
                    type: string
                environment_id:
                    type: string
                id:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                value:
                    type: string
            required:
                - id
                - environment_id
                - definition_id
                - value
                - created_at
                - updated_at
            title: EntityTraitResponseData
        EntityTraitValue:
            type: object
            properties:
                definition_id:
                    type: string
                value:
                    type: string
            required:
                - definition_id
                - value
            title: EntityTraitValue
        EnvironmentDetailResponseData:
            type: object
            description: The created resource
            properties:
                api_keys:
                    type: array
                    items:
                        $ref: '#/components/schemas/ApiKeyResponseData'
                created_at:
                    type: string
                    format: date-time
                environment_type:
                    type: string
                id:
                    type: string
                name:
                    type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - id
                - name
                - environment_type
                - created_at
                - updated_at
                - api_keys
            title: EnvironmentDetailResponseData
        EnvironmentResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                environment_type:
                    type: string
                id:
                    type: string
                name:
                    type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - id
                - name
                - environment_type
                - created_at
                - updated_at
            title: EnvironmentResponseData
        EventDetailResponseData:
            type: object
            properties:
                api_key:
                    type: string
                    nullable: true
                body:
                    type: object
                body_preview:
                    type: string
                captured_at:
                    type: string
                    format: date-time
                company:
                    $ref: '#/components/schemas/PreviewObject'
                company_id:
                    type: string
                    nullable: true
                enriched_at:
                    type: string
                    format: date-time
                    nullable: true
                environment_id:
                    type: string
                    nullable: true
                error_message:
                    type: string
                    nullable: true
                feature_ids:
                    type: array
                    items:
                        type: string
                features:
                    type: array
                    items:
                        $ref: '#/components/schemas/PreviewObject'
                id:
                    type: string
                loaded_at:
                    type: string
                    format: date-time
                    nullable: true
                processed_at:
                    type: string
                    format: date-time
                    nullable: true
                sent_at:
                    type: string
                    format: date-time
                    nullable: true
                status:
                    type: string
                subtype:
                    type: string
                    nullable: true
                type:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                user:
                    $ref: '#/components/schemas/PreviewObject'
                user_id:
                    type: string
                    nullable: true
            required:
                - body
                - body_preview
                - captured_at
                - type
                - feature_ids
                - id
                - status
                - updated_at
                - features
            title: EventDetailResponseData
        EventResponseData:
            type: object
            properties:
                api_key:
                    type: string
                    nullable: true
                body:
                    type: object
                body_preview:
                    type: string
                captured_at:
                    type: string
                    format: date-time
                company_id:
                    type: string
                    nullable: true
                enriched_at:
                    type: string
                    format: date-time
                    nullable: true
                environment_id:
                    type: string
                    nullable: true
                error_message:
                    type: string
                    nullable: true
                feature_ids:
                    type: array
                    items:
                        type: string
                id:
                    type: string
                loaded_at:
                    type: string
                    format: date-time
                    nullable: true
                processed_at:
                    type: string
                    format: date-time
                    nullable: true
                sent_at:
                    type: string
                    format: date-time
                    nullable: true
                status:
                    type: string
                subtype:
                    type: string
                    nullable: true
                type:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                user_id:
                    type: string
                    nullable: true
            required:
                - body
                - body_preview
                - captured_at
                - type
                - feature_ids
                - id
                - status
                - updated_at
            title: EventResponseData
        EventSummaryResponseData:
            type: object
            properties:
                company_count:
                    type: integer
                environment_id:
                    type: string
                event_count:
                    type: integer
                event_subtype:
                    type: string
                last_seen_at:
                    type: string
                    format: date-time
                    nullable: true
                user_count:
                    type: integer
            required:
                - company_count
                - environment_id
                - event_count
                - event_subtype
                - user_count
            title: EventSummaryResponseData
        FeatureCompanyResponseData:
            type: object
            properties:
                access:
                    type: boolean
                    description: Whether further usage is permitted.
                allocation:
                    type: integer
                    description: The maximum amount of usage that is permitted; a null value indicates that unlimited usage is permitted.
                    nullable: true
                company:
                    $ref: '#/components/schemas/CompanyDetailResponseData'
                entitlement_id:
                    type: string
                entitlement_type:
                    type: string
                feature:
                    $ref: '#/components/schemas/FeatureDetailResponseData'
                period:
                    type: string
                    description: The period over which usage is measured.
                    nullable: true
                plan:
                    $ref: '#/components/schemas/PlanResponseData'
                usage:
                    type: integer
                    description: The amount of usage that has been consumed; a null value indicates that usage is not being measured.
                    nullable: true
            required:
                - access
                - entitlement_id
                - entitlement_type
            title: FeatureCompanyResponseData
        FeatureCompanyUserResponseData:
            type: object
            properties:
                access:
                    type: boolean
                    description: Whether further usage is permitted.
                allocation:
                    type: integer
                    description: The maximum amount of usage that is permitted; a null value indicates that unlimited usage is permitted.
                    nullable: true
                company:
                    $ref: '#/components/schemas/CompanyDetailResponseData'
                entitlement_id:
                    type: string
                entitlement_type:
                    type: string
                feature:
                    $ref: '#/components/schemas/FeatureDetailResponseData'
                period:
                    type: string
                    description: The period over which usage is measured.
                    nullable: true
                plan:
                    $ref: '#/components/schemas/PlanResponseData'
                usage:
                    type: integer
                    description: The amount of usage that has been consumed; a null value indicates that usage is not being measured.
                    nullable: true
                user:
                    $ref: '#/components/schemas/UserResponseData'
            required:
                - access
                - entitlement_id
                - entitlement_type
            title: FeatureCompanyUserResponseData
        FeatureDetailResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                description:
                    type: string
                event_subtype:
                    type: string
                    nullable: true
                event_summary:
                    $ref: '#/components/schemas/EventSummaryResponseData'
                feature_type:
                    type: string
                flags:
                    type: array
                    items:
                        $ref: '#/components/schemas/FlagDetailResponseData'
                id:
                    type: string
                lifecycle_phase:
                    type: string
                    nullable: true
                name:
                    type: string
                plans:
                    type: array
                    items:
                        $ref: '#/components/schemas/PreviewObject'
                trait:
                    $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
                trait_id:
                    type: string
                    nullable: true
                updated_at:
                    type: string
                    format: date-time
            required:
                - id
                - name
                - description
                - feature_type
                - created_at
                - updated_at
                - flags
                - plans
            title: FeatureDetailResponseData
        FeatureResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                description:
                    type: string
                event_subtype:
                    type: string
                    nullable: true
                feature_type:
                    type: string
                id:
                    type: string
                lifecycle_phase:
                    type: string
                    nullable: true
                name:
                    type: string
                trait_id:
                    type: string
                    nullable: true
                updated_at:
                    type: string
                    format: date-time
            required:
                - id
                - name
                - description
                - feature_type
                - created_at
                - updated_at
            title: FeatureResponseData
        FeatureUsageDetailResponseData:
            type: object
            description: The returned resource
            properties:
                features:
                    type: array
                    items:
                        $ref: '#/components/schemas/FeatureUsageResponseData'
            required:
                - features
            title: FeatureUsageDetailResponseData
        FeatureUsageResponseData:
            type: object
            properties:
                access:
                    type: boolean
                    description: Whether further usage is permitted.
                allocation:
                    type: integer
                    description: The maximum amount of usage that is permitted; a null value indicates that unlimited usage is permitted.
                    nullable: true
                entitlement_id:
                    type: string
                entitlement_type:
                    type: string
                feature:
                    $ref: '#/components/schemas/FeatureDetailResponseData'
                period:
                    type: string
                    description: The period over which usage is measured.
                    nullable: true
                plan:
                    $ref: '#/components/schemas/PlanResponseData'
                usage:
                    type: integer
                    description: The amount of usage that has been consumed; a null value indicates that usage is not being measured.
                    nullable: true
            required:
                - access
                - entitlement_id
                - entitlement_type
            title: FeatureUsageResponseData
        FlagCheckLogDetailResponseData:
            type: object
            properties:
                check_status:
                    type: string
                company:
                    $ref: '#/components/schemas/CompanyResponseData'
                company_id:
                    type: string
                    nullable: true
                created_at:
                    type: string
                    format: date-time
                environment:
                    $ref: '#/components/schemas/EnvironmentResponseData'
                environment_id:
                    type: string
                error:
                    type: string
                    nullable: true
                flag:
                    $ref: '#/components/schemas/FlagResponseData'
                flag_id:
                    type: string
                    nullable: true
                flag_key:
                    type: string
                id:
                    type: string
                reason:
                    type: string
                req_company:
                    type: object
                    nullable: true
                req_user:
                    type: object
                    nullable: true
                rule:
                    $ref: '#/components/schemas/RuleResponseData'
                rule_id:
                    type: string
                    nullable: true
                updated_at:
                    type: string
                    format: date-time
                user:
                    $ref: '#/components/schemas/UserResponseData'
                user_id:
                    type: string
                    nullable: true
                value:
                    type: boolean
            required:
                - check_status
                - created_at
                - environment_id
                - flag_key
                - id
                - reason
                - updated_at
                - value
            title: FlagCheckLogDetailResponseData
        FlagCheckLogResponseData:
            type: object
            properties:
                check_status:
                    type: string
                company_id:
                    type: string
                    nullable: true
                created_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                error:
                    type: string
                    nullable: true
                flag_id:
                    type: string
                    nullable: true
                flag_key:
                    type: string
                id:
                    type: string
                reason:
                    type: string
                req_company:
                    type: object
                    nullable: true
                req_user:
                    type: object
                    nullable: true
                rule_id:
                    type: string
                    nullable: true
                updated_at:
                    type: string
                    format: date-time
                user_id:
                    type: string
                    nullable: true
                value:
                    type: boolean
            required:
                - check_status
                - created_at
                - environment_id
                - flag_key
                - id
                - reason
                - updated_at
                - value
            title: FlagCheckLogResponseData
        FlagDetailResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                default_value:
                    type: boolean
                description:
                    type: string
                feature:
                    $ref: '#/components/schemas/FeatureResponseData'
                feature_id:
                    type: string
                    nullable: true
                flag_type:
                    type: string
                id:
                    type: string
                key:
                    type: string
                latest_check:
                    $ref: '#/components/schemas/FlagCheckLogResponseData'
                name:
                    type: string
                rules:
                    type: array
                    items:
                        $ref: '#/components/schemas/RuleDetailResponseData'
                updated_at:
                    type: string
                    format: date-time
            required:
                - created_at
                - default_value
                - description
                - flag_type
                - id
                - key
                - name
                - updated_at
                - rules
            title: FlagDetailResponseData
        FlagResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                default_value:
                    type: boolean
                description:
                    type: string
                feature_id:
                    type: string
                    nullable: true
                flag_type:
                    type: string
                id:
                    type: string
                key:
                    type: string
                name:
                    type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - created_at
                - default_value
                - description
                - flag_type
                - id
                - key
                - name
                - updated_at
            title: FlagResponseData
        GetOrCreateCompanyMembershipRequestBody:
            type: object
            properties:
                company_id:
                    type: string
                user_id:
                    type: string
            required:
                - company_id
                - user_id
            title: GetOrCreateCompanyMembershipRequestBody
        KeysRequestBody:
            type: object
            properties:
                keys:
                    type: object
            required:
                - keys
            title: KeysRequestBody
        MetricCountsHourlyResponseData:
            type: object
            properties:
                company_id:
                    type: string
                    nullable: true
                created_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                event_subtype:
                    type: string
                start_time:
                    type: string
                    format: date-time
                user_id:
                    type: string
                    nullable: true
                value:
                    type: integer
            required:
                - environment_id
                - event_subtype
                - start_time
                - value
                - created_at
            title: MetricCountsHourlyResponseData
        PaginationFilter:
            type: object
            properties:
                limit:
                    type: integer
                    description: Page limit (default 100)
                    nullable: true
                offset:
                    type: integer
                    description: Page offset (default 0)
                    nullable: true
            title: PaginationFilter
        PlanAudienceDetailResponseData:
            type: object
            description: The updated resource
            properties:
                condition_groups:
                    type: array
                    items:
                        $ref: '#/components/schemas/RuleConditionGroupDetailResponseData'
                conditions:
                    type: array
                    items:
                        $ref: '#/components/schemas/RuleConditionDetailResponseData'
                created_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                flag_id:
                    type: string
                    nullable: true
                id:
                    type: string
                name:
                    type: string
                plan_id:
                    type: string
                    nullable: true
                priority:
                    type: integer
                rule_type:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                value:
                    type: boolean
            required:
                - id
                - environment_id
                - priority
                - name
                - rule_type
                - value
                - created_at
                - updated_at
                - conditions
                - condition_groups
            title: PlanAudienceDetailResponseData
        PlanAudienceResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                flag_id:
                    type: string
                    nullable: true
                id:
                    type: string
                name:
                    type: string
                plan_id:
                    type: string
                    nullable: true
                priority:
                    type: integer
                rule_type:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                value:
                    type: boolean
            required:
                - id
                - environment_id
                - priority
                - name
                - rule_type
                - value
                - created_at
                - updated_at
            title: PlanAudienceResponseData
        PlanDetailResponseData:
            type: object
            description: The updated resource
            properties:
                company_count:
                    type: integer
                created_at:
                    type: string
                    format: date-time
                description:
                    type: string
                features:
                    type: array
                    items:
                        $ref: '#/components/schemas/FeatureDetailResponseData'
                id:
                    type: string
                name:
                    type: string
                plan_type:
                    type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - created_at
                - description
                - id
                - name
                - plan_type
                - updated_at
                - company_count
                - features
            title: PlanDetailResponseData
        PlanEntitlementResponseData:
            type: object
            description: The updated resource
            properties:
                created_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                feature:
                    $ref: '#/components/schemas/FeatureResponseData'
                feature_id:
                    type: string
                id:
                    type: string
                metric_period:
                    type: string
                    nullable: true
                plan:
                    $ref: '#/components/schemas/PlanResponseData'
                plan_id:
                    type: string
                rule_id:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                value_bool:
                    type: boolean
                    nullable: true
                value_numeric:
                    type: integer
                    nullable: true
                value_trait:
                    $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
                value_trait_id:
                    type: string
                    nullable: true
                value_type:
                    type: string
            required:
                - created_at
                - environment_id
                - feature_id
                - id
                - plan_id
                - rule_id
                - updated_at
                - value_type
            title: PlanEntitlementResponseData
        PlanResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                description:
                    type: string
                id:
                    type: string
                name:
                    type: string
                plan_type:
                    type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - created_at
                - description
                - id
                - name
                - plan_type
                - updated_at
            title: PlanResponseData
        PreviewObject:
            type: object
            properties:
                id:
                    type: string
                image_url:
                    type: string
                    nullable: true
                name:
                    type: string
            required:
                - id
                - name
            title: PreviewObject
        RawEventBatchResponseData:
            type: object
            description: The created resource
            properties:
                events:
                    type: array
                    items:
                        $ref: '#/components/schemas/RawEventResponseData'
            required:
                - events
            title: RawEventBatchResponseData
        RawEventResponseData:
            type: object
            properties:
                captured_at:
                    type: string
                    format: date-time
                event_id:
                    type: string
                    nullable: true
                remote_addr:
                    type: string
                remote_ip:
                    type: string
                user_agent:
                    type: string
            required:
                - captured_at
                - remote_addr
                - remote_ip
                - user_agent
            title: RawEventResponseData
        RuleConditionDetailResponseData:
            type: object
            properties:
                comparison_trait:
                    $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
                comparison_trait_id:
                    type: string
                    nullable: true
                condition_group_id:
                    type: string
                    nullable: true
                condition_type:
                    type: string
                created_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                event_subtype:
                    type: string
                    nullable: true
                flag_id:
                    type: string
                    nullable: true
                id:
                    type: string
                metric_period:
                    type: string
                    nullable: true
                metric_value:
                    type: integer
                operator:
                    type: string
                plan_id:
                    type: string
                    nullable: true
                resource_ids:
                    type: array
                    items:
                        type: string
                resources:
                    type: array
                    items:
                        $ref: '#/components/schemas/RuleConditionResourceResponseData'
                rule_id:
                    type: string
                trait:
                    $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
                trait_entity_type:
                    type: string
                    nullable: true
                trait_id:
                    type: string
                    nullable: true
                trait_value:
                    type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - id
                - environment_id
                - rule_id
                - condition_type
                - operator
                - created_at
                - updated_at
                - resource_ids
                - metric_value
                - trait_value
                - resources
            title: RuleConditionDetailResponseData
        RuleConditionGroupDetailResponseData:
            type: object
            properties:
                conditions:
                    type: array
                    items:
                        $ref: '#/components/schemas/RuleConditionDetailResponseData'
                created_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                flag_id:
                    type: string
                    nullable: true
                id:
                    type: string
                plan_id:
                    type: string
                    nullable: true
                rule_id:
                    type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - id
                - environment_id
                - rule_id
                - created_at
                - updated_at
                - conditions
            title: RuleConditionGroupDetailResponseData
        RuleConditionGroupResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                flag_id:
                    type: string
                    nullable: true
                id:
                    type: string
                plan_id:
                    type: string
                    nullable: true
                rule_id:
                    type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - id
                - environment_id
                - rule_id
                - created_at
                - updated_at
            title: RuleConditionGroupResponseData
        RuleConditionResourceResponseData:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
            required:
                - id
                - name
            title: RuleConditionResourceResponseData
        RuleConditionResponseData:
            type: object
            properties:
                comparison_trait_id:
                    type: string
                    nullable: true
                condition_group_id:
                    type: string
                    nullable: true
                condition_type:
                    type: string
                created_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                event_subtype:
                    type: string
                    nullable: true
                flag_id:
                    type: string
                    nullable: true
                id:
                    type: string
                metric_period:
                    type: string
                    nullable: true
                metric_value:
                    type: integer
                operator:
                    type: string
                plan_id:
                    type: string
                    nullable: true
                resource_ids:
                    type: array
                    items:
                        type: string
                rule_id:
                    type: string
                trait_entity_type:
                    type: string
                    nullable: true
                trait_id:
                    type: string
                    nullable: true
                trait_value:
                    type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - id
                - environment_id
                - rule_id
                - condition_type
                - operator
                - created_at
                - updated_at
                - resource_ids
                - metric_value
                - trait_value
            title: RuleConditionResponseData
        RuleDetailResponseData:
            type: object
            properties:
                condition_groups:
                    type: array
                    items:
                        $ref: '#/components/schemas/RuleConditionGroupDetailResponseData'
                conditions:
                    type: array
                    items:
                        $ref: '#/components/schemas/RuleConditionDetailResponseData'
                created_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                flag_id:
                    type: string
                    nullable: true
                id:
                    type: string
                name:
                    type: string
                plan_id:
                    type: string
                    nullable: true
                priority:
                    type: integer
                rule_type:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                value:
                    type: boolean
            required:
                - id
                - environment_id
                - priority
                - name
                - rule_type
                - value
                - created_at
                - updated_at
                - conditions
                - condition_groups
            title: RuleDetailResponseData
        RuleResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                flag_id:
                    type: string
                    nullable: true
                id:
                    type: string
                name:
                    type: string
                plan_id:
                    type: string
                    nullable: true
                priority:
                    type: integer
                rule_type:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                value:
                    type: boolean
            required:
                - id
                - environment_id
                - priority
                - name
                - rule_type
                - value
                - created_at
                - updated_at
            title: RuleResponseData
        RulesDetailResponseData:
            type: object
            description: The updated resource
            properties:
                Flag:
                    $ref: '#/components/schemas/FlagResponseData'
                rules:
                    type: array
                    items:
                        $ref: '#/components/schemas/RuleDetailResponseData'
            required:
                - rules
            title: RulesDetailResponseData
        SegmentStatusResp:
            type: object
            description: The returned resource
            properties:
                connected:
                    type: boolean
                environment_id:
                    type: string
                last_event_at:
                    type: string
                    format: date-time
                    nullable: true
            required:
                - connected
                - environment_id
            title: SegmentStatusResp
        UpdateApiKeyRequestBody:
            type: object
            properties:
                description:
                    type: string
                    nullable: true
                name:
                    type: string
                    nullable: true
            title: UpdateApiKeyRequestBody
        UpdateAudienceRequestBody:
            type: object
            properties:
                condition_groups:
                    type: array
                    items:
                        $ref: '#/components/schemas/CreateOrUpdateConditionGroupRequestBody'
                conditions:
                    type: array
                    items:
                        $ref: '#/components/schemas/CreateOrUpdateConditionRequestBody'
            required:
                - conditions
                - condition_groups
            title: UpdateAudienceRequestBody
        UpdateCompanyOverrideRequestBody:
            type: object
            properties:
                metric_period:
                    type: string
                    nullable: true
                    enum:
                        - current_month
                        - current_week
                        - current_day
                value_bool:
                    type: boolean
                    nullable: true
                value_numeric:
                    type: integer
                    nullable: true
                value_trait_id:
                    type: string
                    nullable: true
                value_type:
                    type: string
                    enum:
                        - Boolean
                        - Numeric
                        - Trait
                        - Unlimited
            required:
                - value_type
            title: UpdateCompanyOverrideRequestBody
        UpdateEntityTraitDefinitionRequestBody:
            type: object
            properties:
                display_name:
                    type: string
                    nullable: true
                trait_type:
                    type: string
                    enum:
                        - boolean
                        - currency
                        - date
                        - number
                        - string
                        - url
            required:
                - trait_type
            title: UpdateEntityTraitDefinitionRequestBody
        UpdateEnvironmentRequestBody:
            type: object
            properties:
                environment_type:
                    type: string
                    nullable: true
                    enum:
                        - development
                        - staging
                        - production
                name:
                    type: string
                    nullable: true
            title: UpdateEnvironmentRequestBody
        UpdateFeatureRequestBody:
            type: object
            properties:
                description:
                    type: string
                    nullable: true
                event_subtype:
                    type: string
                    nullable: true
                feature_type:
                    type: string
                    nullable: true
                    enum:
                        - boolean
                        - event
                        - trait
                flag:
                    $ref: '#/components/schemas/CreateOrUpdateFlagRequestBody'
                lifecycle_phase:
                    type: string
                    nullable: true
                name:
                    type: string
                    nullable: true
                trait_id:
                    type: string
                    nullable: true
            title: UpdateFeatureRequestBody
        UpdateFlagRulesRequestBody:
            type: object
            properties:
                rules:
                    type: array
                    items:
                        $ref: '#/components/schemas/CreateOrUpdateRuleRequestBody'
            required:
                - rules
            title: UpdateFlagRulesRequestBody
        UpdatePlanEntitlementRequestBody:
            type: object
            properties:
                metric_period:
                    type: string
                    nullable: true
                    enum:
                        - current_month
                        - current_week
                        - current_day
                value_bool:
                    type: boolean
                    nullable: true
                value_numeric:
                    type: integer
                    nullable: true
                value_trait_id:
                    type: string
                    nullable: true
                value_type:
                    type: string
                    enum:
                        - Boolean
                        - Numeric
                        - Trait
                        - Unlimited
            required:
                - value_type
            title: UpdatePlanEntitlementRequestBody
        UpdatePlanRequestBody:
            type: object
            properties:
                description:
                    type: string
                    nullable: true
                name:
                    type: string
                plan_type:
                    type: string
                    nullable: true
                    enum:
                        - product
                        - pricing_plan
                        - add_on
                        - overage
                        - billable_metric
                        - other
            required:
                - name
            title: UpdatePlanRequestBody
        UpdateReqCommon:
            type: object
            properties:
                metric_period:
                    type: string
                    nullable: true
                    enum:
                        - current_month
                        - current_week
                        - current_day
                value_bool:
                    type: boolean
                    nullable: true
                value_numeric:
                    type: integer
                    nullable: true
                value_trait_id:
                    type: string
                    nullable: true
                value_type:
                    type: string
                    enum:
                        - Boolean
                        - Numeric
                        - Trait
                        - Unlimited
            required:
                - value_type
            title: UpdateReqCommon
        UpdateRuleRequestBody:
            type: object
            properties:
                condition_groups:
                    type: array
                    items:
                        $ref: '#/components/schemas/CreateOrUpdateConditionGroupRequestBody'
                conditions:
                    type: array
                    items:
                        $ref: '#/components/schemas/CreateOrUpdateConditionRequestBody'
                name:
                    type: string
                priority:
                    type: integer
                value:
                    type: boolean
            required:
                - condition_groups
                - conditions
                - name
                - priority
                - value
            title: UpdateRuleRequestBody
        UpdateWebhookRequestBody:
            type: object
            properties:
                name:
                    type: string
                    nullable: true
                request_types:
                    type: array
                    items:
                        type: string
                url:
                    type: string
                    nullable: true
            title: UpdateWebhookRequestBody
        UpsertCompanyRequestBody:
            type: object
            properties:
                id:
                    type: string
                    nullable: true
                keys:
                    type: object
                last_seen_at:
                    type: string
                    format: date-time
                    nullable: true
                name:
                    type: string
                    nullable: true
                traits:
                    type: object
                    description: A map of trait names to trait values
                update_only:
                    type: boolean
                    nullable: true
            required:
                - keys
            title: UpsertCompanyRequestBody
        UpsertTraitRequestBody:
            type: object
            properties:
                incr:
                    type: integer
                    description: Amount to increment the trait by (positive or negative)
                    nullable: true
                keys:
                    type: object
                    description: Key/value pairs too identify a company or user
                set:
                    type: string
                    description: Value to set the trait to
                    nullable: true
                trait:
                    type: string
                    description: Name of the trait to update
                update_only:
                    type: boolean
                    description: Unless this is set, the company or user will be created if it does not already exist
                    nullable: true
            required:
                - keys
                - trait
            title: UpsertTraitRequestBody
        UpsertUserRequestBody:
            type: object
            properties:
                company:
                    type: object
                    description: Optionally specify company using key/value pairs
                company_id:
                    type: string
                    description: Optionally specify company using Schematic company ID
                    nullable: true
                keys:
                    type: object
                last_seen_at:
                    type: string
                    format: date-time
                    nullable: true
                name:
                    type: string
                    nullable: true
                traits:
                    type: object
                    description: A map of trait names to trait values
                update_only:
                    type: boolean
                    nullable: true
            required:
                - keys
                - company
            title: UpsertUserRequestBody
        UpsertUserSubRequestBody:
            type: object
            properties:
                company_id:
                    type: string
                    description: Optionally specify company using Schematic company ID
                    nullable: true
                keys:
                    type: object
                last_seen_at:
                    type: string
                    format: date-time
                    nullable: true
                name:
                    type: string
                    nullable: true
                traits:
                    type: object
                    description: A map of trait names to trait values
                update_only:
                    type: boolean
                    nullable: true
            required:
                - keys
            title: UpsertUserSubRequestBody
        UserDetailResponseData:
            type: object
            properties:
                company_memberships:
                    type: array
                    items:
                        $ref: '#/components/schemas/CompanyMembershipDetailResponseData'
                created_at:
                    type: string
                    format: date-time
                entity_traits:
                    type: array
                    items:
                        $ref: '#/components/schemas/EntityTraitDetailResponseData'
                environment_id:
                    type: string
                id:
                    type: string
                keys:
                    type: array
                    items:
                        $ref: '#/components/schemas/EntityKeyDetailResponseData'
                last_seen_at:
                    type: string
                    format: date-time
                    nullable: true
                name:
                    type: string
                traits:
                    type: object
                    description: A map of trait names to trait values
                updated_at:
                    type: string
                    format: date-time
            required:
                - id
                - environment_id
                - name
                - created_at
                - updated_at
                - keys
                - entity_traits
                - company_memberships
            title: UserDetailResponseData
        UserResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                id:
                    type: string
                last_seen_at:
                    type: string
                    format: date-time
                    nullable: true
                name:
                    type: string
                updated_at:
                    type: string
                    format: date-time
            required:
                - id
                - environment_id
                - name
                - created_at
                - updated_at
            title: UserResponseData
        WebhookEventResponseData:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                id:
                    type: string
                request_type:
                    type: string
                response_code:
                    type: integer
                    nullable: true
                sent_at:
                    type: string
                    format: date-time
                    nullable: true
                status:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                webhook_id:
                    type: string
            required:
                - id
                - webhook_id
                - request_type
                - status
                - created_at
                - updated_at
            title: WebhookEventResponseData
        WebhookResponseData:
            type: object
            description: The updated resource
            properties:
                created_at:
                    type: string
                    format: date-time
                id:
                    type: string
                name:
                    type: string
                request_types:
                    type: array
                    items:
                        type: string
                status:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                url:
                    type: string
            required:
                - id
                - name
                - url
                - status
                - request_types
                - created_at
                - updated_at
            title: WebhookResponseData
paths:
    /api-keys:
        get:
            operationId: listApiKeys
            summary: List api keys
            tags:
                - accounts
            parameters:
                - name: environment_id
                  in: query
                  schema:
                    type: string
                - name: require_environment
                  in: query
                  required: true
                  schema:
                    type: boolean
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/ApiKeyResponseData'
                                        title: ListApiKeysResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            environment_id:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            require_environment:
                                                type: boolean
                                        title: ListApiKeysParams
                                required:
                                    - data
                                    - params
                                title: ListApiKeysResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
        post:
            operationId: createApiKey
            summary: Create api key
            tags:
                - accounts
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateApiKeyRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ApiKeyCreateResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CreateApiKeyParams
                                required:
                                    - data
                                    - params
                                title: CreateApiKeyResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /api-keys/{api_key_id}:
        get:
            operationId: getApiKey
            summary: Get api key
            tags:
                - accounts
            parameters:
                - name: api_key_id
                  in: path
                  description: api_key_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ApiKeyResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetApiKeyParams
                                required:
                                    - data
                                    - params
                                title: GetApiKeyResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        put:
            operationId: updateApiKey
            summary: Update api key
            tags:
                - accounts
            parameters:
                - name: api_key_id
                  in: path
                  description: api_key_id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateApiKeyRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ApiKeyResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpdateApiKeyParams
                                required:
                                    - data
                                    - params
                                title: UpdateApiKeyResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        delete:
            operationId: deleteApiKey
            summary: Delete api key
            tags:
                - accounts
            parameters:
                - name: api_key_id
                  in: path
                  description: api_key_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/DeleteResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: DeleteApiKeyParams
                                required:
                                    - data
                                    - params
                                title: DeleteApiKeyResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /api-keys/count:
        get:
            operationId: countApiKeys
            summary: Count api keys
            tags:
                - accounts
            parameters:
                - name: environment_id
                  in: query
                  schema:
                    type: string
                - name: require_environment
                  in: query
                  required: true
                  schema:
                    type: boolean
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            environment_id:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            require_environment:
                                                type: boolean
                                        title: CountApiKeysParams
                                required:
                                    - data
                                    - params
                                title: CountApiKeysResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /api-requests:
        get:
            operationId: listApiRequests
            summary: List api requests
            tags:
                - accounts
            parameters:
                - name: q
                  in: query
                  schema:
                    type: string
                - name: request_type
                  in: query
                  schema:
                    type: string
                - name: environment_id
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/ApiKeyRequestListResponseData'
                                        title: ListApiRequestsResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            environment_id:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                            request_type:
                                                type: string
                                        title: ListApiRequestsParams
                                required:
                                    - data
                                    - params
                                title: ListApiRequestsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /api-requests/{api_request_id}:
        get:
            operationId: getApiRequest
            summary: Get api request
            tags:
                - accounts
            parameters:
                - name: api_request_id
                  in: path
                  description: api_request_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/ApiKeyRequestResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetApiRequestParams
                                required:
                                    - data
                                    - params
                                title: GetApiRequestResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
    /api-requests/count:
        get:
            operationId: countApiRequests
            summary: Count api requests
            tags:
                - accounts
            parameters:
                - name: q
                  in: query
                  schema:
                    type: string
                - name: request_type
                  in: query
                  schema:
                    type: string
                - name: environment_id
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            environment_id:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                            request_type:
                                                type: string
                                        title: CountApiRequestsParams
                                required:
                                    - data
                                    - params
                                title: CountApiRequestsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /audience/count-companies:
        post:
            operationId: countAudienceCompanies
            summary: Count audience companies
            tags:
                - features
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AudienceRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CountAudienceCompaniesParams
                                required:
                                    - data
                                    - params
                                title: CountAudienceCompaniesResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /audience/count-users:
        post:
            operationId: countAudienceUsers
            summary: Count audience users
            tags:
                - features
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AudienceRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CountAudienceUsersParams
                                required:
                                    - data
                                    - params
                                title: CountAudienceUsersResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /audience/get-companies:
        post:
            operationId: listAudienceCompanies
            summary: List audience companies
            tags:
                - features
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AudienceRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/CompanyDetailResponseData'
                                        title: ListAudienceCompaniesResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: ListAudienceCompaniesParams
                                required:
                                    - data
                                    - params
                                title: ListAudienceCompaniesResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /audience/get-users:
        post:
            operationId: listAudienceUsers
            summary: List audience users
            tags:
                - features
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AudienceRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/UserDetailResponseData'
                                        title: ListAudienceUsersResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: ListAudienceUsersParams
                                required:
                                    - data
                                    - params
                                title: ListAudienceUsersResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /billing/product/upsert:
        post:
            operationId: upsertBillingProduct
            summary: Upsert billing product
            tags:
                - billing
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateBillingProductRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/BillingProductResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpsertBillingProductParams
                                required:
                                    - data
                                    - params
                                title: UpsertBillingProductResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /billing/products:
        get:
            operationId: listProducts
            summary: List products
            tags:
                - billing
            parameters:
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: name
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/BillingProductResponseData'
                                        title: ListProductsResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            name:
                                                type: string
                                            offset:
                                                type: integer
                                                example: "0"
                                        title: ListProductsParams
                                required:
                                    - data
                                    - params
                                title: ListProductsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /billing/subscription/upsert:
        post:
            operationId: upsertBillingSubscription
            summary: Upsert billing subscription
            tags:
                - billing
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateBillingSubscriptionsRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/BillingSubscriptionResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpsertBillingSubscriptionParams
                                required:
                                    - data
                                    - params
                                title: UpsertBillingSubscriptionResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /companies:
        get:
            operationId: listCompanies
            summary: List companies
            tags:
                - companies
            parameters:
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: plan_id
                  in: query
                  schema:
                    type: string
                - name: q
                  in: query
                  description: Search filter
                  schema:
                    type: string
                - name: without_feature_override_for
                  in: query
                  description: Filter out companies that already have a company override for the specified feature ID
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/CompanyDetailResponseData'
                                        title: ListCompaniesResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            plan_id:
                                                type: string
                                            q:
                                                type: string
                                            without_feature_override_for:
                                                type: string
                                        title: ListCompaniesParams
                                required:
                                    - data
                                    - params
                                title: ListCompaniesResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
        post:
            operationId: upsertCompany
            summary: Upsert company
            tags:
                - companies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpsertCompanyRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CompanyDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpsertCompanyParams
                                required:
                                    - data
                                    - params
                                title: UpsertCompanyResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /companies/{company_id}:
        get:
            operationId: getCompany
            summary: Get company
            tags:
                - companies
            parameters:
                - name: company_id
                  in: path
                  description: company_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CompanyDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetCompanyParams
                                required:
                                    - data
                                    - params
                                title: GetCompanyResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        delete:
            operationId: deleteCompany
            summary: Delete company
            tags:
                - companies
            parameters:
                - name: company_id
                  in: path
                  description: company_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/DeleteResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: DeleteCompanyParams
                                required:
                                    - data
                                    - params
                                title: DeleteCompanyResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /companies/count:
        get:
            operationId: countCompanies
            summary: Count companies
            tags:
                - companies
            parameters:
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: plan_id
                  in: query
                  schema:
                    type: string
                - name: q
                  in: query
                  description: Search filter
                  schema:
                    type: string
                - name: without_feature_override_for
                  in: query
                  description: Filter out companies that already have a company override for the specified feature ID
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            plan_id:
                                                type: string
                                            q:
                                                type: string
                                            without_feature_override_for:
                                                type: string
                                        title: CountCompaniesParams
                                required:
                                    - data
                                    - params
                                title: CountCompaniesResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /companies/create:
        post:
            operationId: createCompany
            summary: Create company
            tags:
                - companies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpsertCompanyRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CompanyDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CreateCompanyParams
                                required:
                                    - data
                                    - params
                                title: CreateCompanyResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /companies/delete:
        post:
            operationId: deleteCompanyByKeys
            summary: Delete company by keys
            tags:
                - companies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/KeysRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CompanyResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: DeleteCompanyByKeysParams
                                required:
                                    - data
                                    - params
                                title: DeleteCompanyByKeysResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /companies/lookup:
        get:
            operationId: lookupCompany
            summary: Lookup company
            tags:
                - companies
            parameters:
                - name: keys
                  in: query
                  description: Key/value pairs
                  required: true
                  schema:
                    type: object
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CompanyDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            keys:
                                                type: object
                                        title: LookupCompanyParams
                                required:
                                    - data
                                    - params
                                title: LookupCompanyResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
    /company-memberships:
        get:
            operationId: listCompanyMemberships
            summary: List company memberships
            tags:
                - companies
            parameters:
                - name: company_id
                  in: query
                  schema:
                    type: string
                - name: user_id
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/CompanyMembershipDetailResponseData'
                                        title: ListCompanyMembershipsResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            company_id:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            user_id:
                                                type: string
                                        title: ListCompanyMembershipsParams
                                required:
                                    - data
                                    - params
                                title: ListCompanyMembershipsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
        post:
            operationId: getOrCreateCompanyMembership
            summary: Get or create company membership
            tags:
                - companies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetOrCreateCompanyMembershipRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CompanyMembershipDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetOrCreateCompanyMembershipParams
                                required:
                                    - data
                                    - params
                                title: GetOrCreateCompanyMembershipResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /company-memberships/{company_membership_id}:
        delete:
            operationId: deleteCompanyMembership
            summary: Delete company membership
            tags:
                - companies
            parameters:
                - name: company_membership_id
                  in: path
                  description: company_membership_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/DeleteResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: DeleteCompanyMembershipParams
                                required:
                                    - data
                                    - params
                                title: DeleteCompanyMembershipResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /company-overrides:
        get:
            operationId: listCompanyOverrides
            summary: List company overrides
            tags:
                - entitlements
            parameters:
                - name: company_id
                  in: query
                  schema:
                    type: string
                - name: company_ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: feature_id
                  in: query
                  schema:
                    type: string
                - name: feature_ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/CompanyOverrideResponseData'
                                        title: ListCompanyOverridesResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            company_id:
                                                type: string
                                            company_ids:
                                                type: array
                                                items:
                                                    type: string
                                            feature_id:
                                                type: string
                                            feature_ids:
                                                type: array
                                                items:
                                                    type: string
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                        title: ListCompanyOverridesParams
                                required:
                                    - data
                                    - params
                                title: ListCompanyOverridesResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
        post:
            operationId: createCompanyOverride
            summary: Create company override
            tags:
                - entitlements
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCompanyOverrideRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CompanyOverrideResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CreateCompanyOverrideParams
                                required:
                                    - data
                                    - params
                                title: CreateCompanyOverrideResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /company-overrides/{company_override_id}:
        get:
            operationId: getCompanyOverride
            summary: Get company override
            tags:
                - entitlements
            parameters:
                - name: company_override_id
                  in: path
                  description: company_override_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CompanyOverrideResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetCompanyOverrideParams
                                required:
                                    - data
                                    - params
                                title: GetCompanyOverrideResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        put:
            operationId: updateCompanyOverride
            summary: Update company override
            tags:
                - entitlements
            parameters:
                - name: company_override_id
                  in: path
                  description: company_override_id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateCompanyOverrideRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CompanyOverrideResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpdateCompanyOverrideParams
                                required:
                                    - data
                                    - params
                                title: UpdateCompanyOverrideResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        delete:
            operationId: deleteCompanyOverride
            summary: Delete company override
            tags:
                - entitlements
            parameters:
                - name: company_override_id
                  in: path
                  description: company_override_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/DeleteResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: DeleteCompanyOverrideParams
                                required:
                                    - data
                                    - params
                                title: DeleteCompanyOverrideResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /company-overrides/count:
        get:
            operationId: countCompanyOverrides
            summary: Count company overrides
            tags:
                - entitlements
            parameters:
                - name: company_id
                  in: query
                  schema:
                    type: string
                - name: company_ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: feature_id
                  in: query
                  schema:
                    type: string
                - name: feature_ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            company_id:
                                                type: string
                                            company_ids:
                                                type: array
                                                items:
                                                    type: string
                                            feature_id:
                                                type: string
                                            feature_ids:
                                                type: array
                                                items:
                                                    type: string
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                        title: CountCompanyOverridesParams
                                required:
                                    - data
                                    - params
                                title: CountCompanyOverridesResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /company-plans:
        get:
            operationId: listCompanyPlans
            summary: List company plans
            tags:
                - companies
            parameters:
                - name: company_id
                  in: query
                  schema:
                    type: string
                - name: plan_id
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/CompanyPlanResponseData'
                                        title: ListCompanyPlansResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            company_id:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            plan_id:
                                                type: string
                                        title: ListCompanyPlansParams
                                required:
                                    - data
                                    - params
                                title: ListCompanyPlansResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /company-subscriptions:
        get:
            operationId: getActiveCompanySubscription
            summary: Get active company subscription
            tags:
                - companies
            parameters:
                - name: company_id
                  in: query
                  required: true
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/CompanySubscriptionResponseData'
                                        title: GetActiveCompanySubscriptionResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            company_id:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                        title: GetActiveCompanySubscriptionParams
                                required:
                                    - data
                                    - params
                                title: GetActiveCompanySubscriptionResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /company-traits:
        post:
            operationId: upsertCompanyTrait
            summary: Upsert company trait
            tags:
                - companies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpsertTraitRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CompanyDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpsertCompanyTraitParams
                                required:
                                    - data
                                    - params
                                title: UpsertCompanyTraitResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /entity-key-definitions:
        get:
            operationId: listEntityKeyDefinitions
            summary: List entity key definitions
            tags:
                - companies
            parameters:
                - name: entity_type
                  in: query
                  schema:
                    type: string
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: key
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/EntityKeyDefinitionResponseData'
                                        title: ListEntityKeyDefinitionsResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            entity_type:
                                                type: string
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            key:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                        title: ListEntityKeyDefinitionsParams
                                required:
                                    - data
                                    - params
                                title: ListEntityKeyDefinitionsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /entity-key-definitions/count:
        get:
            operationId: countEntityKeyDefinitions
            summary: Count entity key definitions
            tags:
                - companies
            parameters:
                - name: entity_type
                  in: query
                  schema:
                    type: string
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: key
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            entity_type:
                                                type: string
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            key:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                        title: CountEntityKeyDefinitionsParams
                                required:
                                    - data
                                    - params
                                title: CountEntityKeyDefinitionsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /entity-trait-definitions:
        get:
            operationId: listEntityTraitDefinitions
            summary: List entity trait definitions
            tags:
                - companies
            parameters:
                - name: entity_type
                  in: query
                  schema:
                    type: string
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: trait_type
                  in: query
                  schema:
                    type: string
                - name: q
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
                                        title: ListEntityTraitDefinitionsResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            entity_type:
                                                type: string
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                            trait_type:
                                                type: string
                                        title: ListEntityTraitDefinitionsParams
                                required:
                                    - data
                                    - params
                                title: ListEntityTraitDefinitionsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
        post:
            operationId: getOrCreateEntityTraitDefinition
            summary: Get or create entity trait definition
            tags:
                - companies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateEntityTraitDefinitionRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetOrCreateEntityTraitDefinitionParams
                                required:
                                    - data
                                    - params
                                title: GetOrCreateEntityTraitDefinitionResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /entity-trait-definitions/{entity_trait_definition_id}:
        get:
            operationId: getEntityTraitDefinition
            summary: Get entity trait definition
            tags:
                - companies
            parameters:
                - name: entity_trait_definition_id
                  in: path
                  description: entity_trait_definition_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetEntityTraitDefinitionParams
                                required:
                                    - data
                                    - params
                                title: GetEntityTraitDefinitionResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        put:
            operationId: updateEntityTraitDefinition
            summary: Update entity trait definition
            tags:
                - companies
            parameters:
                - name: entity_trait_definition_id
                  in: path
                  description: entity_trait_definition_id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateEntityTraitDefinitionRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpdateEntityTraitDefinitionParams
                                required:
                                    - data
                                    - params
                                title: UpdateEntityTraitDefinitionResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
    /entity-trait-definitions/count:
        get:
            operationId: countEntityTraitDefinitions
            summary: Count entity trait definitions
            tags:
                - companies
            parameters:
                - name: entity_type
                  in: query
                  schema:
                    type: string
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: trait_type
                  in: query
                  schema:
                    type: string
                - name: q
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            entity_type:
                                                type: string
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                            trait_type:
                                                type: string
                                        title: CountEntityTraitDefinitionsParams
                                required:
                                    - data
                                    - params
                                title: CountEntityTraitDefinitionsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /entity-trait-values:
        get:
            operationId: getEntityTraitValues
            summary: Get entity trait values
            tags:
                - companies
            parameters:
                - name: definition_id
                  in: query
                  required: true
                  schema:
                    type: string
                - name: q
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/EntityTraitValue'
                                        title: GetEntityTraitValuesResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            definition_id:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                        title: GetEntityTraitValuesParams
                                required:
                                    - data
                                    - params
                                title: GetEntityTraitValuesResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /environments:
        get:
            operationId: listEnvironments
            summary: List environments
            tags:
                - accounts
            parameters:
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/EnvironmentResponseData'
                                        title: ListEnvironmentsResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                        title: ListEnvironmentsParams
                                required:
                                    - data
                                    - params
                                title: ListEnvironmentsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
        post:
            operationId: createEnvironment
            summary: Create environment
            tags:
                - accounts
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateEnvironmentRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/EnvironmentDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CreateEnvironmentParams
                                required:
                                    - data
                                    - params
                                title: CreateEnvironmentResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /environments/{environment_id}:
        get:
            operationId: getEnvironment
            summary: Get environment
            tags:
                - accounts
            parameters:
                - name: environment_id
                  in: path
                  description: environment_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/EnvironmentResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetEnvironmentParams
                                required:
                                    - data
                                    - params
                                title: GetEnvironmentResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        put:
            operationId: updateEnvironment
            summary: Update environment
            tags:
                - accounts
            parameters:
                - name: environment_id
                  in: path
                  description: environment_id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateEnvironmentRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/EnvironmentResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpdateEnvironmentParams
                                required:
                                    - data
                                    - params
                                title: UpdateEnvironmentResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        delete:
            operationId: deleteEnvironment
            summary: Delete environment
            tags:
                - accounts
            parameters:
                - name: environment_id
                  in: path
                  description: environment_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/DeleteResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: DeleteEnvironmentParams
                                required:
                                    - data
                                    - params
                                title: DeleteEnvironmentResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /event-batch:
        post:
            operationId: createEventBatch
            summary: Create event batch
            tags:
                - events
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateEventBatchRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/RawEventBatchResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CreateEventBatchParams
                                required:
                                    - data
                                    - params
                                title: CreateEventBatchResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /event-types:
        get:
            operationId: getEventSummaries
            summary: Get event summaries
            tags:
                - events
            parameters:
                - name: q
                  in: query
                  schema:
                    type: string
                - name: event_subtypes
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/EventSummaryResponseData'
                                        title: GetEventSummariesResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            event_subtypes:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                        title: GetEventSummariesParams
                                required:
                                    - data
                                    - params
                                title: GetEventSummariesResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /event-types/{key}:
        get:
            operationId: getEventSummaryBySubtype
            summary: Get event summary by subtype
            tags:
                - events
            parameters:
                - name: key
                  in: path
                  description: key
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/EventSummaryResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetEventSummaryBySubtypeParams
                                required:
                                    - data
                                    - params
                                title: GetEventSummaryBySubtypeResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
    /events:
        get:
            operationId: listEvents
            summary: List events
            tags:
                - events
            parameters:
                - name: company_id
                  in: query
                  schema:
                    type: string
                - name: user_id
                  in: query
                  schema:
                    type: string
                - name: event_subtype
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/EventDetailResponseData'
                                        title: ListEventsResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            company_id:
                                                type: string
                                            event_subtype:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            user_id:
                                                type: string
                                        title: ListEventsParams
                                required:
                                    - data
                                    - params
                                title: ListEventsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
        post:
            operationId: createEvent
            summary: Create event
            tags:
                - events
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateEventRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/RawEventResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CreateEventParams
                                required:
                                    - data
                                    - params
                                title: CreateEventResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /events/{event_id}:
        get:
            operationId: getEvent
            summary: Get event
            tags:
                - events
            parameters:
                - name: event_id
                  in: path
                  description: event_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/EventDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetEventParams
                                required:
                                    - data
                                    - params
                                title: GetEventResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
    /feature-companies:
        get:
            operationId: listFeatureCompanies
            summary: List feature companies
            tags:
                - entitlements
            parameters:
                - name: feature_id
                  in: query
                  required: true
                  schema:
                    type: string
                - name: q
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/FeatureCompanyResponseData'
                                        title: ListFeatureCompaniesResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            feature_id:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                        title: ListFeatureCompaniesParams
                                required:
                                    - data
                                    - params
                                title: ListFeatureCompaniesResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /feature-companies/count:
        get:
            operationId: countFeatureCompanies
            summary: Count feature companies
            tags:
                - entitlements
            parameters:
                - name: feature_id
                  in: query
                  required: true
                  schema:
                    type: string
                - name: q
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            feature_id:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                        title: CountFeatureCompaniesParams
                                required:
                                    - data
                                    - params
                                title: CountFeatureCompaniesResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /feature-usage:
        get:
            operationId: listFeatureUsage
            summary: List feature usage
            tags:
                - entitlements
            parameters:
                - name: company_id
                  in: query
                  schema:
                    type: string
                - name: company_keys
                  in: query
                  schema:
                    type: object
                - name: feature_ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: q
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/FeatureUsageResponseData'
                                        title: ListFeatureUsageResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            company_id:
                                                type: string
                                            company_keys:
                                                type: object
                                            feature_ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                        title: ListFeatureUsageParams
                                required:
                                    - data
                                    - params
                                title: ListFeatureUsageResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /feature-usage/count:
        get:
            operationId: countFeatureUsage
            summary: Count feature usage
            tags:
                - entitlements
            parameters:
                - name: company_id
                  in: query
                  schema:
                    type: string
                - name: company_keys
                  in: query
                  schema:
                    type: object
                - name: feature_ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: q
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            company_id:
                                                type: string
                                            company_keys:
                                                type: object
                                            feature_ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                        title: CountFeatureUsageParams
                                required:
                                    - data
                                    - params
                                title: CountFeatureUsageResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /feature-users:
        get:
            operationId: listFeatureUsers
            summary: List feature users
            tags:
                - entitlements
            parameters:
                - name: feature_id
                  in: query
                  required: true
                  schema:
                    type: string
                - name: q
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/FeatureCompanyUserResponseData'
                                        title: ListFeatureUsersResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            feature_id:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                        title: ListFeatureUsersParams
                                required:
                                    - data
                                    - params
                                title: ListFeatureUsersResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /feature-users/count:
        get:
            operationId: countFeatureUsers
            summary: Count feature users
            tags:
                - entitlements
            parameters:
                - name: feature_id
                  in: query
                  required: true
                  schema:
                    type: string
                - name: q
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            feature_id:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                        title: CountFeatureUsersParams
                                required:
                                    - data
                                    - params
                                title: CountFeatureUsersResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /features:
        get:
            operationId: listFeatures
            summary: List features
            tags:
                - features
            parameters:
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: q
                  in: query
                  schema:
                    type: string
                - name: without_company_override_for
                  in: query
                  description: Filter out features that already have a company override for the specified company ID
                  schema:
                    type: string
                - name: without_plan_entitlement_for
                  in: query
                  description: Filter out features that already have a plan entitlement for the specified plan ID
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/FeatureDetailResponseData'
                                        title: ListFeaturesResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                            without_company_override_for:
                                                type: string
                                            without_plan_entitlement_for:
                                                type: string
                                        title: ListFeaturesParams
                                required:
                                    - data
                                    - params
                                title: ListFeaturesResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
        post:
            operationId: createFeature
            summary: Create feature
            tags:
                - features
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateFeatureRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/FeatureDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CreateFeatureParams
                                required:
                                    - data
                                    - params
                                title: CreateFeatureResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /features/{feature_id}:
        get:
            operationId: getFeature
            summary: Get feature
            tags:
                - features
            parameters:
                - name: feature_id
                  in: path
                  description: feature_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/FeatureDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetFeatureParams
                                required:
                                    - data
                                    - params
                                title: GetFeatureResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        put:
            operationId: updateFeature
            summary: Update feature
            tags:
                - features
            parameters:
                - name: feature_id
                  in: path
                  description: feature_id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateFeatureRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/FeatureDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpdateFeatureParams
                                required:
                                    - data
                                    - params
                                title: UpdateFeatureResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        delete:
            operationId: deleteFeature
            summary: Delete feature
            tags:
                - features
            parameters:
                - name: feature_id
                  in: path
                  description: feature_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/DeleteResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: DeleteFeatureParams
                                required:
                                    - data
                                    - params
                                title: DeleteFeatureResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /features/count:
        get:
            operationId: countFeatures
            summary: Count features
            tags:
                - features
            parameters:
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: q
                  in: query
                  schema:
                    type: string
                - name: without_company_override_for
                  in: query
                  description: Filter out features that already have a company override for the specified company ID
                  schema:
                    type: string
                - name: without_plan_entitlement_for
                  in: query
                  description: Filter out features that already have a plan entitlement for the specified plan ID
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                            without_company_override_for:
                                                type: string
                                            without_plan_entitlement_for:
                                                type: string
                                        title: CountFeaturesParams
                                required:
                                    - data
                                    - params
                                title: CountFeaturesResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /flag-checks:
        get:
            operationId: listFlagChecks
            summary: List flag checks
            tags:
                - features
            parameters:
                - name: flag_id
                  in: query
                  schema:
                    type: string
                - name: flag_ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: id
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/FlagCheckLogDetailResponseData'
                                        title: ListFlagChecksResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            flag_id:
                                                type: string
                                            flag_ids:
                                                type: array
                                                items:
                                                    type: string
                                            id:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                        title: ListFlagChecksParams
                                required:
                                    - data
                                    - params
                                title: ListFlagChecksResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /flag-checks/{flag_check_id}:
        get:
            operationId: getFlagCheck
            summary: Get flag check
            tags:
                - features
            parameters:
                - name: flag_check_id
                  in: path
                  description: flag_check_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/FlagCheckLogDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetFlagCheckParams
                                required:
                                    - data
                                    - params
                                title: GetFlagCheckResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
    /flag-checks/count:
        get:
            operationId: countFlagChecks
            summary: Count flag checks
            tags:
                - features
            parameters:
                - name: flag_id
                  in: query
                  schema:
                    type: string
                - name: flag_ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: id
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            flag_id:
                                                type: string
                                            flag_ids:
                                                type: array
                                                items:
                                                    type: string
                                            id:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                        title: CountFlagChecksParams
                                required:
                                    - data
                                    - params
                                title: CountFlagChecksResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /flag-checks/latest:
        get:
            operationId: getLatestFlagChecks
            summary: Get latest flag checks
            tags:
                - features
            parameters:
                - name: flag_id
                  in: query
                  schema:
                    type: string
                - name: flag_ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: id
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/FlagCheckLogResponseData'
                                        title: GetLatestFlagChecksResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            flag_id:
                                                type: string
                                            flag_ids:
                                                type: array
                                                items:
                                                    type: string
                                            id:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                        title: GetLatestFlagChecksParams
                                required:
                                    - data
                                    - params
                                title: GetLatestFlagChecksResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /flags:
        get:
            operationId: listFlags
            summary: List flags
            tags:
                - features
            parameters:
                - name: feature_id
                  in: query
                  schema:
                    type: string
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: q
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/FlagDetailResponseData'
                                        title: ListFlagsResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            feature_id:
                                                type: string
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                        title: ListFlagsParams
                                required:
                                    - data
                                    - params
                                title: ListFlagsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
        post:
            operationId: createFlag
            summary: Create flag
            tags:
                - features
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateFlagRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/FlagDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CreateFlagParams
                                required:
                                    - data
                                    - params
                                title: CreateFlagResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /flags/{flag_id}:
        get:
            operationId: getFlag
            summary: Get flag
            tags:
                - features
            parameters:
                - name: flag_id
                  in: path
                  description: flag_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/FlagDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetFlagParams
                                required:
                                    - data
                                    - params
                                title: GetFlagResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        put:
            operationId: updateFlag
            summary: Update flag
            tags:
                - features
            parameters:
                - name: flag_id
                  in: path
                  description: flag_id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateFlagRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/FlagDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpdateFlagParams
                                required:
                                    - data
                                    - params
                                title: UpdateFlagResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        delete:
            operationId: deleteFlag
            summary: Delete flag
            tags:
                - features
            parameters:
                - name: flag_id
                  in: path
                  description: flag_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/DeleteResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: DeleteFlagParams
                                required:
                                    - data
                                    - params
                                title: DeleteFlagResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /flags/{flag_id}/rules:
        put:
            operationId: updateFlagRules
            summary: Update flag rules
            tags:
                - features
            parameters:
                - name: flag_id
                  in: path
                  description: flag_id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateFlagRulesRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/RulesDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpdateFlagRulesParams
                                required:
                                    - data
                                    - params
                                title: UpdateFlagRulesResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
    /flags/{key}/check:
        post:
            operationId: checkFlag
            summary: Check flag
            tags:
                - features
            parameters:
                - name: key
                  in: path
                  description: key
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CheckFlagRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CheckFlagResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CheckFlagParams
                                required:
                                    - data
                                    - params
                                title: CheckFlagResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /flags/check:
        post:
            operationId: checkFlags
            summary: Check flags
            tags:
                - features
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CheckFlagRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CheckFlagsResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CheckFlagsParams
                                required:
                                    - data
                                    - params
                                title: CheckFlagsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /flags/count:
        get:
            operationId: countFlags
            summary: Count flags
            tags:
                - features
            parameters:
                - name: feature_id
                  in: query
                  schema:
                    type: string
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: q
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            feature_id:
                                                type: string
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                        title: CountFlagsParams
                                required:
                                    - data
                                    - params
                                title: CountFlagsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /metric-counts:
        get:
            operationId: listMetricCounts
            summary: List metric counts
            tags:
                - events
            parameters:
                - name: start_time
                  in: query
                  schema:
                    type: string
                    format: date-time
                - name: end_time
                  in: query
                  schema:
                    type: string
                    format: date-time
                - name: event_subtype
                  in: query
                  schema:
                    type: string
                - name: event_subtypes
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: company_id
                  in: query
                  schema:
                    type: string
                - name: company_ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: user_id
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
                - name: grouping
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/MetricCountsHourlyResponseData'
                                        title: ListMetricCountsResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            company_id:
                                                type: string
                                            company_ids:
                                                type: array
                                                items:
                                                    type: string
                                            end_time:
                                                type: string
                                                format: date-time
                                            event_subtype:
                                                type: string
                                            event_subtypes:
                                                type: array
                                                items:
                                                    type: string
                                            grouping:
                                                type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            start_time:
                                                type: string
                                                format: date-time
                                            user_id:
                                                type: string
                                        title: ListMetricCountsParams
                                required:
                                    - data
                                    - params
                                title: ListMetricCountsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /plan-audiences/{plan_audience_id}:
        get:
            operationId: getAudience
            summary: Get audience
            tags:
                - plans
            parameters:
                - name: plan_audience_id
                  in: path
                  description: plan_audience_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/PlanAudienceDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetAudienceParams
                                required:
                                    - data
                                    - params
                                title: GetAudienceResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        put:
            operationId: updateAudience
            summary: Update audience
            tags:
                - plans
            parameters:
                - name: plan_audience_id
                  in: path
                  description: plan_audience_id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAudienceRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/PlanAudienceDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpdateAudienceParams
                                required:
                                    - data
                                    - params
                                title: UpdateAudienceResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        delete:
            operationId: deleteAudience
            summary: Delete audience
            tags:
                - plans
            parameters:
                - name: plan_audience_id
                  in: path
                  description: plan_audience_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/DeleteResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: DeleteAudienceParams
                                required:
                                    - data
                                    - params
                                title: DeleteAudienceResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /plan-entitlements:
        get:
            operationId: listPlanEntitlements
            summary: List plan entitlements
            tags:
                - entitlements
            parameters:
                - name: feature_id
                  in: query
                  schema:
                    type: string
                - name: feature_ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: plan_id
                  in: query
                  schema:
                    type: string
                - name: plan_ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/PlanEntitlementResponseData'
                                        title: ListPlanEntitlementsResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            feature_id:
                                                type: string
                                            feature_ids:
                                                type: array
                                                items:
                                                    type: string
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            plan_id:
                                                type: string
                                            plan_ids:
                                                type: array
                                                items:
                                                    type: string
                                        title: ListPlanEntitlementsParams
                                required:
                                    - data
                                    - params
                                title: ListPlanEntitlementsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
        post:
            operationId: createPlanEntitlement
            summary: Create plan entitlement
            tags:
                - entitlements
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreatePlanEntitlementRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/PlanEntitlementResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CreatePlanEntitlementParams
                                required:
                                    - data
                                    - params
                                title: CreatePlanEntitlementResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /plan-entitlements/{plan_entitlement_id}:
        get:
            operationId: getPlanEntitlement
            summary: Get plan entitlement
            tags:
                - entitlements
            parameters:
                - name: plan_entitlement_id
                  in: path
                  description: plan_entitlement_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/PlanEntitlementResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetPlanEntitlementParams
                                required:
                                    - data
                                    - params
                                title: GetPlanEntitlementResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        put:
            operationId: updatePlanEntitlement
            summary: Update plan entitlement
            tags:
                - entitlements
            parameters:
                - name: plan_entitlement_id
                  in: path
                  description: plan_entitlement_id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdatePlanEntitlementRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/PlanEntitlementResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpdatePlanEntitlementParams
                                required:
                                    - data
                                    - params
                                title: UpdatePlanEntitlementResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        delete:
            operationId: deletePlanEntitlement
            summary: Delete plan entitlement
            tags:
                - entitlements
            parameters:
                - name: plan_entitlement_id
                  in: path
                  description: plan_entitlement_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/DeleteResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: DeletePlanEntitlementParams
                                required:
                                    - data
                                    - params
                                title: DeletePlanEntitlementResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /plan-entitlements/count:
        get:
            operationId: countPlanEntitlements
            summary: Count plan entitlements
            tags:
                - entitlements
            parameters:
                - name: feature_id
                  in: query
                  schema:
                    type: string
                - name: feature_ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: plan_id
                  in: query
                  schema:
                    type: string
                - name: plan_ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            feature_id:
                                                type: string
                                            feature_ids:
                                                type: array
                                                items:
                                                    type: string
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            plan_id:
                                                type: string
                                            plan_ids:
                                                type: array
                                                items:
                                                    type: string
                                        title: CountPlanEntitlementsParams
                                required:
                                    - data
                                    - params
                                title: CountPlanEntitlementsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /plans:
        get:
            operationId: listPlans
            summary: List plans
            tags:
                - plans
            parameters:
                - name: company_id
                  in: query
                  schema:
                    type: string
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: q
                  in: query
                  schema:
                    type: string
                - name: without_entitlement_for
                  in: query
                  description: Filter out plans that already have a plan entitlement for the specified feature ID
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/PlanDetailResponseData'
                                        title: ListPlansResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            company_id:
                                                type: string
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                            without_entitlement_for:
                                                type: string
                                        title: ListPlansParams
                                required:
                                    - data
                                    - params
                                title: ListPlansResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
        post:
            operationId: createPlan
            summary: Create plan
            tags:
                - plans
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreatePlanRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/PlanDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CreatePlanParams
                                required:
                                    - data
                                    - params
                                title: CreatePlanResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /plans/{plan_id}:
        get:
            operationId: getPlan
            summary: Get plan
            tags:
                - plans
            parameters:
                - name: plan_id
                  in: path
                  description: plan_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/PlanDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetPlanParams
                                required:
                                    - data
                                    - params
                                title: GetPlanResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        put:
            operationId: updatePlan
            summary: Update plan
            tags:
                - plans
            parameters:
                - name: plan_id
                  in: path
                  description: plan_id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdatePlanRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/PlanDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpdatePlanParams
                                required:
                                    - data
                                    - params
                                title: UpdatePlanResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        delete:
            operationId: deletePlan
            summary: Delete plan
            tags:
                - plans
            parameters:
                - name: plan_id
                  in: path
                  description: plan_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/DeleteResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: DeletePlanParams
                                required:
                                    - data
                                    - params
                                title: DeletePlanResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /plans/count:
        get:
            operationId: countPlans
            summary: Count plans
            tags:
                - plans
            parameters:
                - name: company_id
                  in: query
                  schema:
                    type: string
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: q
                  in: query
                  schema:
                    type: string
                - name: without_entitlement_for
                  in: query
                  description: Filter out plans that already have a plan entitlement for the specified feature ID
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            company_id:
                                                type: string
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                            without_entitlement_for:
                                                type: string
                                        title: CountPlansParams
                                required:
                                    - data
                                    - params
                                title: CountPlansResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /segment-integration:
        get:
            operationId: getSegmentIntegrationStatus
            summary: Get segment integration status
            tags:
                - events
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/SegmentStatusResp'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetSegmentIntegrationStatusParams
                                required:
                                    - data
                                    - params
                                title: GetSegmentIntegrationStatusResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
    /usage-by-company:
        get:
            operationId: getFeatureUsageByCompany
            summary: Get feature usage by company
            tags:
                - entitlements
            parameters:
                - name: keys
                  in: query
                  description: Key/value pairs
                  required: true
                  schema:
                    type: object
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/FeatureUsageDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            keys:
                                                type: object
                                        title: GetFeatureUsageByCompanyParams
                                required:
                                    - data
                                    - params
                                title: GetFeatureUsageByCompanyResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
    /user-traits:
        post:
            operationId: upsertUserTrait
            summary: Upsert user trait
            tags:
                - companies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpsertTraitRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/UserDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpsertUserTraitParams
                                required:
                                    - data
                                    - params
                                title: UpsertUserTraitResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /users:
        get:
            operationId: listUsers
            summary: List users
            tags:
                - companies
            parameters:
                - name: company_id
                  in: query
                  schema:
                    type: string
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: plan_id
                  in: query
                  schema:
                    type: string
                - name: q
                  in: query
                  description: Search filter
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/UserDetailResponseData'
                                        title: ListUsersResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            company_id:
                                                type: string
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            plan_id:
                                                type: string
                                            q:
                                                type: string
                                        title: ListUsersParams
                                required:
                                    - data
                                    - params
                                title: ListUsersResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
        post:
            operationId: upsertUser
            summary: Upsert user
            tags:
                - companies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpsertUserRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/UserDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpsertUserParams
                                required:
                                    - data
                                    - params
                                title: UpsertUserResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /users/{user_id}:
        get:
            operationId: getUser
            summary: Get user
            tags:
                - companies
            parameters:
                - name: user_id
                  in: path
                  description: user_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/UserDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetUserParams
                                required:
                                    - data
                                    - params
                                title: GetUserResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        delete:
            operationId: deleteUser
            summary: Delete user
            tags:
                - companies
            parameters:
                - name: user_id
                  in: path
                  description: user_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/DeleteResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: DeleteUserParams
                                required:
                                    - data
                                    - params
                                title: DeleteUserResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /users/count:
        get:
            operationId: countUsers
            summary: Count users
            tags:
                - companies
            parameters:
                - name: company_id
                  in: query
                  schema:
                    type: string
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: plan_id
                  in: query
                  schema:
                    type: string
                - name: q
                  in: query
                  description: Search filter
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            company_id:
                                                type: string
                                            ids:
                                                type: array
                                                items:
                                                    type: string
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            plan_id:
                                                type: string
                                            q:
                                                type: string
                                        title: CountUsersParams
                                required:
                                    - data
                                    - params
                                title: CountUsersResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /users/create:
        post:
            operationId: createUser
            summary: Create user
            tags:
                - companies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpsertUserRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/UserDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CreateUserParams
                                required:
                                    - data
                                    - params
                                title: CreateUserResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /users/delete:
        post:
            operationId: deleteUserByKeys
            summary: Delete user by keys
            tags:
                - companies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/KeysRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/UserResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: DeleteUserByKeysParams
                                required:
                                    - data
                                    - params
                                title: DeleteUserByKeysResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /users/lookup:
        get:
            operationId: lookupUser
            summary: Lookup user
            tags:
                - companies
            parameters:
                - name: keys
                  in: query
                  description: Key/value pairs
                  required: true
                  schema:
                    type: object
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/UserDetailResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            keys:
                                                type: object
                                        title: LookupUserParams
                                required:
                                    - data
                                    - params
                                title: LookupUserResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
    /webhook-events:
        get:
            operationId: listWebhookEvents
            summary: List webhook events
            tags:
                - webhooks
            parameters:
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/WebhookEventResponseData'
                                        title: ListWebhookEventsResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                        title: ListWebhookEventsParams
                                required:
                                    - data
                                    - params
                                title: ListWebhookEventsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /webhook-events/{webhook_event_id}:
        get:
            operationId: getWebhookEvent
            summary: Get webhook event
            tags:
                - webhooks
            parameters:
                - name: webhook_event_id
                  in: path
                  description: webhook_event_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/WebhookEventResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetWebhookEventParams
                                required:
                                    - data
                                    - params
                                title: GetWebhookEventResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
    /webhook-events/count:
        get:
            operationId: countWebhookEvents
            summary: Count webhook events
            tags:
                - webhooks
            parameters:
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                        title: CountWebhookEventsParams
                                required:
                                    - data
                                    - params
                                title: CountWebhookEventsResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /webhooks:
        get:
            operationId: listWebhooks
            summary: List webhooks
            tags:
                - webhooks
            parameters:
                - name: q
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        description: The returned resources
                                        items:
                                            $ref: '#/components/schemas/WebhookResponseData'
                                        title: ListWebhooksResponseData
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                        title: ListWebhooksParams
                                required:
                                    - data
                                    - params
                                title: ListWebhooksResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
        post:
            operationId: createWebhook
            summary: Create webhook
            tags:
                - webhooks
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateWebhookRequestBody'
                required: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/WebhookResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: CreateWebhookParams
                                required:
                                    - data
                                    - params
                                title: CreateWebhookResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /webhooks/{webhook_id}:
        get:
            operationId: getWebhook
            summary: Get webhook
            tags:
                - webhooks
            parameters:
                - name: webhook_id
                  in: path
                  description: webhook_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/WebhookResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: GetWebhookParams
                                required:
                                    - data
                                    - params
                                title: GetWebhookResponse
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        put:
            operationId: updateWebhook
            summary: Update webhook
            tags:
                - webhooks
            parameters:
                - name: webhook_id
                  in: path
                  description: webhook_id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateWebhookRequestBody'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/WebhookResponseData'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: UpdateWebhookParams
                                required:
                                    - data
                                    - params
                                title: UpdateWebhookResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "404":
                    $ref: '#/components/responses/NotFound'
                "500":
                    $ref: '#/components/responses/ServerError'
        delete:
            operationId: deleteWebhook
            summary: Delete webhook
            tags:
                - webhooks
            parameters:
                - name: webhook_id
                  in: path
                  description: webhook_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/DeleteResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        title: DeleteWebhookParams
                                required:
                                    - data
                                    - params
                                title: DeleteWebhookResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
    /webhooks/count:
        get:
            operationId: countWebhooks
            summary: Count webhooks
            tags:
                - webhooks
            parameters:
                - name: q
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  description: Page limit (default 100)
                  schema:
                    type: integer
                    example: "100"
                - name: offset
                  in: query
                  description: Page offset (default 0)
                  schema:
                    type: integer
                    example: "0"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        $ref: '#/components/schemas/CountResponse'
                                    params:
                                        type: object
                                        description: Input parameters
                                        properties:
                                            limit:
                                                type: integer
                                                example: "100"
                                            offset:
                                                type: integer
                                                example: "0"
                                            q:
                                                type: string
                                        title: CountWebhooksParams
                                required:
                                    - data
                                    - params
                                title: CountWebhooksResponse
                "400":
                    $ref: '#/components/responses/BadRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "403":
                    $ref: '#/components/responses/Forbidden'
                "500":
                    $ref: '#/components/responses/ServerError'
tags:
    - name: accounts
    - name: companies
    - name: events
    - name: features
    - name: plans
    - name: entitlements
    - name: billing
    - name: webhooks
