// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transformApiDefinitionToDb {"name":"cyclical-1"} 1`] = `
Object {
  "auth": Object {
    "headerWireValue": "Authorization",
    "nameOverride": "secretKey",
    "type": "header",
  },
  "hasMultipleBaseUrls": false,
  "id": "id",
  "rootPackage": Object {
    "endpoints": Array [],
    "subpackages": Array [
      "subpackage_transactions",
    ],
    "types": Array [],
    "webhooks": Array [],
  },
  "subpackages": Object {
    "subpackage_transactions": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "endpoints": Array [
        Object {
          "authed": false,
          "defaultEnvironment": "Production",
          "description": "Retrieves the user with the given ID.",
          "descriptionContainsMarkdown": true,
          "environments": Array [
            Object {
              "baseUrl": "https://api.buildwithfern.com",
              "id": "Production",
            },
            Object {
              "baseUrl": "https://staging.buildwithfern.com",
              "id": "Staging",
            },
          ],
          "errors": Array [],
          "examples": Array [
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/transactions/string",
              "pathParameters": Object {
                "transaction_id": "string",
              },
              "queryParameters": Object {},
              "requestBody": undefined,
              "requestBodyV2": undefined,
              "responseBody": Object {
                "creditor": Object {
                  "name": "string",
                },
                "debtor": Object {
                  "name": "string",
                },
              },
              "responseBodyV2": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": Array [],
          "htmlDescription": "<p>Retrieves the user with the given ID.</p>
",
          "id": "get",
          "method": "GET",
          "name": "Retrieve a transaction",
          "path": Object {
            "parts": Array [
              Object {
                "type": "literal",
                "value": "/transactions",
              },
              Object {
                "type": "literal",
                "value": "/",
              },
              Object {
                "type": "pathParameter",
                "value": "transaction_id",
              },
              Object {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": Array [
              Object {
                "key": "transaction_id",
                "type": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": Array [],
          "request": undefined,
          "response": Object {
            "type": Object {
              "type": "reference",
              "value": Object {
                "type": "id",
                "value": "type_transactions:Transaction",
              },
            },
          },
          "urlSlug": "retrieve-a-transaction",
        },
      ],
      "htmlDescription": undefined,
      "name": "transactions",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_transactions",
      "subpackages": Array [],
      "types": Array [
        "type_transactions:Transaction",
        "type_transactions:User",
      ],
      "urlSlug": "transactions",
      "webhooks": Array [],
    },
  },
  "types": Object {
    "type_transactions:Transaction": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "Transaction",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "creditor",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_transactions:User",
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "debtor",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_transactions:User",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_transactions:User": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "User",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "name",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
  },
}
`;

exports[`transformApiDefinitionToDb {"name":"string"} 1`] = `
Object {
  "auth": Object {
    "headerWireValue": "Authorization",
    "nameOverride": "MyAuthScheme",
    "type": "header",
  },
  "hasMultipleBaseUrls": false,
  "id": "id",
  "rootPackage": Object {
    "endpoints": Array [],
    "subpackages": Array [
      "subpackage_lcf",
    ],
    "types": Array [],
    "webhooks": Array [],
  },
  "subpackages": Object {
    "subpackage_lcf": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "endpoints": Array [
        Object {
          "authed": true,
          "defaultEnvironment": "Production",
          "description": "For a shipment, find the lowest cost shipping option based on provided parameters.",
          "descriptionContainsMarkdown": true,
          "environments": Array [
            Object {
              "baseUrl": "https://api.meetstring.com",
              "id": "Production",
            },
          ],
          "errors": Array [
            Object {
              "statusCode": 401,
            },
          ],
          "examples": Array [
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/lcf",
              "pathParameters": Object {},
              "queryParameters": Object {},
              "requestBody": Object {
                "order": Object {
                  "deliveryCommitment": 3,
                  "orderId": "shopify_12345",
                  "package": Object {
                    "dimensions": Array [
                      14,
                      10,
                      3,
                    ],
                    "weight": 1.5,
                  },
                  "shipTo": Object {
                    "city": "Washington DC",
                    "country": "US",
                    "isResidential": false,
                    "postalCode": "20500",
                    "state": "Washington DC",
                    "street1": "1600 Pennsylvania Avenue NW",
                  },
                },
              },
              "requestBodyV2": undefined,
              "responseBody": Object {
                "comments": Array [],
                "orderId": "shopify_12345",
                "parcel": Object {
                  "dimensions": Object {
                    "height": 3,
                    "length": 14,
                    "units": "inches",
                    "width": 10,
                  },
                  "name": "CUSTOM_PACKAGE",
                  "weight": Object {
                    "unit": "pounds",
                    "value": 1.5,
                  },
                },
                "service": Object {
                  "accountNumber": "acc_1234",
                  "carrier": "carrier",
                  "cost": 2,
                  "deliveryDate": "2017-07-21",
                  "saturdayDelivery": false,
                  "service": "service",
                },
                "shipTo": Object {
                  "city": "Washington DC",
                  "country": "US",
                  "isResidential": false,
                  "postalCode": "20500",
                  "state": "Washington DC",
                  "street1": "1600 Pennsylvania Avenue NW",
                },
                "tags": Array [],
              },
              "responseBodyV2": undefined,
              "responseStatusCode": 200,
            },
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/lcf",
              "pathParameters": Object {},
              "queryParameters": Object {},
              "requestBody": Object {
                "order": Object {
                  "deliveryCommitment": 0,
                  "orderId": "string",
                  "package": Object {
                    "dimensions": Array [
                      1,
                    ],
                    "weight": 1,
                  },
                  "shipTo": Object {
                    "city": "string",
                    "country": "US",
                    "isResidential": true,
                    "postalCode": "string",
                    "state": "string",
                    "street1": "string",
                  },
                },
              },
              "requestBodyV2": undefined,
              "responseBody": undefined,
              "responseBodyV2": undefined,
              "responseStatusCode": 401,
            },
          ],
          "headers": Array [],
          "htmlDescription": "<p>For a shipment, find the lowest cost shipping option based on provided parameters.</p>
",
          "id": "CreateLeastCostFulfillment",
          "method": "POST",
          "name": "Create Least Cost Fulfillment",
          "path": Object {
            "parts": Array [
              Object {
                "type": "literal",
                "value": "",
              },
              Object {
                "type": "literal",
                "value": "/lcf",
              },
            ],
            "pathParameters": Array [],
          },
          "queryParameters": Array [],
          "request": Object {
            "contentType": "application/json",
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "type": Object {
              "type": "reference",
              "value": Object {
                "type": "id",
                "value": "type_lcf:CreateLcfRequest",
              },
            },
          },
          "response": Object {
            "type": Object {
              "type": "reference",
              "value": Object {
                "type": "id",
                "value": "type_lcf:LeastCostFulfillment",
              },
            },
          },
          "urlSlug": "create-least-cost-fulfillment",
        },
      ],
      "htmlDescription": undefined,
      "name": "lcf",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_lcf",
      "subpackages": Array [],
      "types": Array [
        "type_lcf:CreateLcfRequest",
        "type_lcf:Order",
        "type_lcf:OrderId",
        "type_lcf:ShipTo",
        "type_lcf:Country",
        "type_lcf:Package",
        "type_lcf:Dimensions",
        "type_lcf:Weight",
        "type_lcf:LeastCostFulfillment",
        "type_lcf:Service",
        "type_lcf:Parcel",
        "type_lcf:ParcelDimensions",
        "type_lcf:ParcelWeight",
      ],
      "urlSlug": "lcf",
      "webhooks": Array [],
    },
  },
  "types": Object {
    "type_lcf:Country": Object {
      "description": "The country you're shipping an order to.  Only 'US' is supported at this time.",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<p>The country you&#39;re shipping an order to.  Only &#39;US&#39; is supported at this time.</p>
",
      "name": "Country",
      "shape": Object {
        "type": "enum",
        "values": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "US",
          },
        ],
      },
    },
    "type_lcf:CreateLcfRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "CreateLcfRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "order",
            "valueType": Object {
              "type": "id",
              "value": "type_lcf:Order",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:Dimensions": Object {
      "description": "The length, width, and height of the package in inches.  Order does not matter.",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<p>The length, width, and height of the package in inches.  Order does not matter.</p>
",
      "name": "Dimensions",
      "shape": Object {
        "type": "alias",
        "value": Object {
          "itemType": Object {
            "type": "primitive",
            "value": Object {
              "type": "double",
            },
          },
          "type": "set",
        },
      },
    },
    "type_lcf:LeastCostFulfillment": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "LeastCostFulfillment",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "orderId",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "shipTo",
            "valueType": Object {
              "type": "id",
              "value": "type_lcf:ShipTo",
            },
          },
          Object {
            "description": "An array of tags with high level information about the prediction String just made.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>An array of tags with high level information about the prediction String just made.</p>
",
            "key": "tags",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "set",
            },
          },
          Object {
            "description": "An array of comments with detailed information about the prediction String just made.
First comment includes the carrier, service code, account, cost, and package
",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>An array of comments with detailed information about the prediction String just made.
First comment includes the carrier, service code, account, cost, and package</p>
",
            "key": "comments",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "set",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "service",
            "valueType": Object {
              "type": "id",
              "value": "type_lcf:Service",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "parcel",
            "valueType": Object {
              "type": "id",
              "value": "type_lcf:Parcel",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:Order": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "Order",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "A unique identifier for the order.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>A unique identifier for the order.</p>
",
            "key": "orderId",
            "valueType": Object {
              "type": "id",
              "value": "type_lcf:OrderId",
            },
          },
          Object {
            "description": "The address the order is being shipped to.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The address the order is being shipped to.</p>
",
            "key": "shipTo",
            "valueType": Object {
              "type": "id",
              "value": "type_lcf:ShipTo",
            },
          },
          Object {
            "description": "The number of days from the order date that the order must be 
delivered to the customer by.  If no limit, set as null.
",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The number of days from the order date that the order must be 
delivered to the customer by.  If no limit, set as null.</p>
",
            "key": "deliveryCommitment",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "integer",
              },
            },
          },
          Object {
            "description": "The dimensions and weight of the package being shipped.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The dimensions and weight of the package being shipped.</p>
",
            "key": "package",
            "valueType": Object {
              "type": "id",
              "value": "type_lcf:Package",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:OrderId": Object {
      "description": "The unique identifier for the order, this can be an order number from your Shopify store for example.",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<p>The unique identifier for the order, this can be an order number from your Shopify store for example.</p>
",
      "name": "OrderId",
      "shape": Object {
        "type": "alias",
        "value": Object {
          "type": "primitive",
          "value": Object {
            "type": "string",
          },
        },
      },
    },
    "type_lcf:Package": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "Package",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "dimensions",
            "valueType": Object {
              "type": "id",
              "value": "type_lcf:Dimensions",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "weight",
            "valueType": Object {
              "type": "id",
              "value": "type_lcf:Weight",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:Parcel": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "Parcel",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The name of the package String reccomends.
Defaults to 'CUSTOM_PACKAGE' if the user provides a package.
",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The name of the package String reccomends.
Defaults to &#39;CUSTOM_PACKAGE&#39; if the user provides a package.</p>
",
            "key": "name",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "dimensions",
            "valueType": Object {
              "type": "id",
              "value": "type_lcf:ParcelDimensions",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "weight",
            "valueType": Object {
              "type": "id",
              "value": "type_lcf:ParcelWeight",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:ParcelDimensions": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "ParcelDimensions",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The units of measurement for the package dimensions.  Only 'inches' is supported at this time.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The units of measurement for the package dimensions.  Only &#39;inches&#39; is supported at this time.</p>
",
            "key": "units",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "The length of the package in inches.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The length of the package in inches.</p>
",
            "key": "length",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
          Object {
            "description": "The width of the package in inches.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The width of the package in inches.</p>
",
            "key": "width",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
          Object {
            "description": "The height of the package in inches.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The height of the package in inches.</p>
",
            "key": "height",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:ParcelWeight": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "ParcelWeight",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The weight of the package in pounds.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The weight of the package in pounds.</p>
",
            "key": "value",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
          Object {
            "description": "The units of measurement for the package weight.  Only 'pounds' is supported at this time.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The units of measurement for the package weight.  Only &#39;pounds&#39; is supported at this time.</p>
",
            "key": "unit",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:Service": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "Service",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The carrier that will be used to ship the package.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The carrier that will be used to ship the package.</p>
",
            "key": "carrier",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "The service code that will be used to ship the package.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The service code that will be used to ship the package.</p>
",
            "key": "service",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "An RFC 3339, section 5.6 date (YYYY-MM-DD). For example, 2017-07-21.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>An RFC 3339, section 5.6 date (YYYY-MM-DD). For example, 2017-07-21.</p>
",
            "key": "deliveryDate",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "date",
              },
            },
          },
          Object {
            "description": "If the package can be delivered by the carrier on Saturday. 'True' only possible for UPS and FedEx.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>If the package can be delivered by the carrier on Saturday. &#39;True&#39; only possible for UPS and FedEx.</p>
",
            "key": "saturdayDelivery",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "boolean",
              },
            },
          },
          Object {
            "description": "You carrier account that will be used to ship the package.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>You carrier account that will be used to ship the package.</p>
",
            "key": "accountNumber",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "The cost of the shipping label String recommends.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The cost of the shipping label String recommends.</p>
",
            "key": "cost",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:ShipTo": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "ShipTo",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The street address you're shipping an order to.  If your customer has a second address line, like an apartment number add street2.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The street address you&#39;re shipping an order to.  If your customer has a second address line, like an apartment number add street2.</p>
",
            "key": "street1",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "street2",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": "The city you're shipping an order to'.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The city you&#39;re shipping an order to&#39;.</p>
",
            "key": "city",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "The state you're shipping an order to. 
Two digit code.  For example, 'CA' for California.
",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The state you&#39;re shipping an order to. 
Two digit code.  For example, &#39;CA&#39; for California.</p>
",
            "key": "state",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "The postal code you're shipping an order to. 
This must be a 5 or 9 digit numerical code.  If 9 digits, you must include a hyphen between the first 5 and last 4 digits.
",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The postal code you&#39;re shipping an order to. 
This must be a 5 or 9 digit numerical code.  If 9 digits, you must include a hyphen between the first 5 and last 4 digits.</p>
",
            "key": "postalCode",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "country",
            "valueType": Object {
              "type": "id",
              "value": "type_lcf:Country",
            },
          },
          Object {
            "description": "If residential, set as true.  If commercial, set as false.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>If residential, set as true.  If commercial, set as false.</p>
",
            "key": "isResidential",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "boolean",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:Weight": Object {
      "description": "The weight of the package in pounds. Include up to 2 decimal places.",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<p>The weight of the package in pounds. Include up to 2 decimal places.</p>
",
      "name": "Weight",
      "shape": Object {
        "type": "alias",
        "value": Object {
          "type": "primitive",
          "value": Object {
            "type": "double",
          },
        },
      },
    },
  },
}
`;

exports[`transformApiDefinitionToDb {"name":"vellum"} 1`] = `
Object {
  "auth": Object {
    "headerWireValue": "X_API_KEY",
    "nameOverride": "apiKey",
    "type": "header",
  },
  "hasMultipleBaseUrls": true,
  "id": "id",
  "rootPackage": Object {
    "endpoints": Array [
      Object {
        "authed": true,
        "defaultEnvironment": "Production",
        "description": "<strong style=\\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\\">Stable</strong>

Generate a completion using a previously defined deployment.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
        "descriptionContainsMarkdown": true,
        "environments": Array [
          Object {
            "baseUrl": "https://predict.vellum.ai",
            "id": "Production",
          },
        ],
        "errors": Array [
          Object {
            "statusCode": 400,
            "type": Object {
              "type": "unknown",
            },
          },
          Object {
            "statusCode": 404,
            "type": Object {
              "type": "unknown",
            },
          },
          Object {
            "statusCode": 500,
            "type": Object {
              "type": "unknown",
            },
          },
        ],
        "examples": Array [
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/generate",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "requests": Array [
                Object {
                  "input_values": Object {
                    "string": Object {},
                  },
                },
              ],
            },
            "requestBodyV2": undefined,
            "responseBody": Object {
              "results": Array [
                Object {
                  "data": Object {
                    "completions": Array [
                      Object {
                        "external_id": "string",
                        "finish_reason": "LENGTH",
                        "id": "string",
                        "logprobs": Object {
                          "likelihood": 1,
                          "tokens": Array [
                            Object {
                              "logprob": 1,
                              "text_offset": 0,
                              "token": "string",
                              "top_logprobs": Object {
                                "string": 1,
                              },
                            },
                          ],
                        },
                        "model_version_id": "string",
                        "text": "string",
                        "type": "STRING",
                      },
                    ],
                  },
                  "error": Object {
                    "message": "string",
                  },
                },
              ],
            },
            "responseBodyV2": undefined,
            "responseStatusCode": 200,
          },
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/generate",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "requests": Array [
                Object {
                  "input_values": Object {
                    "string": Object {},
                  },
                },
              ],
            },
            "requestBodyV2": undefined,
            "responseBody": Object {},
            "responseBodyV2": undefined,
            "responseStatusCode": 400,
          },
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/generate",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "requests": Array [
                Object {
                  "input_values": Object {
                    "string": Object {},
                  },
                },
              ],
            },
            "requestBodyV2": undefined,
            "responseBody": Object {},
            "responseBodyV2": undefined,
            "responseStatusCode": 404,
          },
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/generate",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "requests": Array [
                Object {
                  "input_values": Object {
                    "string": Object {},
                  },
                },
              ],
            },
            "requestBodyV2": undefined,
            "responseBody": Object {},
            "responseBodyV2": undefined,
            "responseStatusCode": 500,
          },
        ],
        "headers": Array [],
        "htmlDescription": "<p><strong style=\\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\\">Stable</strong></p>
<p>Generate a completion using a previously defined deployment.</p>
<p><strong>Note:</strong> Uses a base url of <code>https://predict.vellum.ai</code>.</p>
",
        "id": "generate",
        "method": "POST",
        "name": "Generate",
        "path": Object {
          "parts": Array [
            Object {
              "type": "literal",
              "value": "",
            },
            Object {
              "type": "literal",
              "value": "/v1/generate",
            },
          ],
          "pathParameters": Array [],
        },
        "queryParameters": Array [],
        "request": Object {
          "contentType": "application/json",
          "description": undefined,
          "descriptionContainsMarkdown": false,
          "htmlDescription": undefined,
          "type": Object {
            "extends": Array [],
            "properties": Array [
              Object {
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "key": "deployment_id",
                "valueType": Object {
                  "itemType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              Object {
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "key": "deployment_name",
                "valueType": Object {
                  "itemType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              Object {
                "description": "The generation requests to make. Supplying multiple will perform a bulk request to the LLM provided when possible.",
                "key": "requests",
                "valueType": Object {
                  "itemType": Object {
                    "type": "id",
                    "value": "type_:GenerateRequest",
                  },
                  "type": "list",
                },
              },
              Object {
                "description": "Additional configuration that can be used to control what's included in the response.",
                "key": "options",
                "valueType": Object {
                  "itemType": Object {
                    "type": "id",
                    "value": "type_:GenerateOptionsRequest",
                  },
                  "type": "optional",
                },
              },
            ],
            "type": "object",
          },
        },
        "response": Object {
          "type": Object {
            "type": "reference",
            "value": Object {
              "type": "id",
              "value": "type_:GenerateResponse",
            },
          },
        },
        "urlSlug": "generate",
      },
      Object {
        "authed": true,
        "defaultEnvironment": "Production",
        "description": "<strong style=\\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\\">Stable</strong>

Generate a stream of completions using a previously defined deployment.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
        "descriptionContainsMarkdown": true,
        "environments": Array [
          Object {
            "baseUrl": "https://predict.vellum.ai",
            "id": "Production",
          },
        ],
        "errors": Array [
          Object {
            "statusCode": 400,
            "type": Object {
              "type": "unknown",
            },
          },
          Object {
            "statusCode": 404,
            "type": Object {
              "type": "unknown",
            },
          },
          Object {
            "statusCode": 500,
            "type": Object {
              "type": "unknown",
            },
          },
        ],
        "examples": Array [
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/generate-stream",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "requests": Array [
                Object {
                  "input_values": Object {
                    "string": Object {},
                  },
                },
              ],
            },
            "requestBodyV2": undefined,
            "responseBody": undefined,
            "responseBodyV2": undefined,
            "responseStatusCode": 200,
          },
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/generate-stream",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "requests": Array [
                Object {
                  "input_values": Object {
                    "string": Object {},
                  },
                },
              ],
            },
            "requestBodyV2": undefined,
            "responseBody": Object {},
            "responseBodyV2": undefined,
            "responseStatusCode": 400,
          },
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/generate-stream",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "requests": Array [
                Object {
                  "input_values": Object {
                    "string": Object {},
                  },
                },
              ],
            },
            "requestBodyV2": undefined,
            "responseBody": Object {},
            "responseBodyV2": undefined,
            "responseStatusCode": 404,
          },
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/generate-stream",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "requests": Array [
                Object {
                  "input_values": Object {
                    "string": Object {},
                  },
                },
              ],
            },
            "requestBodyV2": undefined,
            "responseBody": Object {},
            "responseBodyV2": undefined,
            "responseStatusCode": 500,
          },
        ],
        "headers": Array [],
        "htmlDescription": "<p><strong style=\\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\\">Stable</strong></p>
<p>Generate a stream of completions using a previously defined deployment.</p>
<p><strong>Note:</strong> Uses a base url of <code>https://predict.vellum.ai</code>.</p>
",
        "id": "generate-stream",
        "method": "POST",
        "name": "Generate Stream",
        "path": Object {
          "parts": Array [
            Object {
              "type": "literal",
              "value": "",
            },
            Object {
              "type": "literal",
              "value": "/v1/generate-stream",
            },
          ],
          "pathParameters": Array [],
        },
        "queryParameters": Array [],
        "request": Object {
          "contentType": "application/json",
          "description": undefined,
          "descriptionContainsMarkdown": false,
          "htmlDescription": undefined,
          "type": Object {
            "extends": Array [],
            "properties": Array [
              Object {
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "key": "deployment_id",
                "valueType": Object {
                  "itemType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              Object {
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "key": "deployment_name",
                "valueType": Object {
                  "itemType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              Object {
                "description": "The generation requests to make. Supplying multiple will perform a bulk request to the LLM provided when possible.",
                "key": "requests",
                "valueType": Object {
                  "itemType": Object {
                    "type": "id",
                    "value": "type_:GenerateRequest",
                  },
                  "type": "list",
                },
              },
              Object {
                "description": "Additional configuration that can be used to control what's included in the response.",
                "key": "options",
                "valueType": Object {
                  "itemType": Object {
                    "type": "id",
                    "value": "type_:GenerateOptionsRequest",
                  },
                  "type": "optional",
                },
              },
            ],
            "type": "object",
          },
        },
        "response": undefined,
        "urlSlug": "generate-stream",
      },
      Object {
        "authed": true,
        "defaultEnvironment": "Production",
        "description": "<strong style=\\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\\">Stable</strong>

Perform a search against a document index.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
        "descriptionContainsMarkdown": true,
        "environments": Array [
          Object {
            "baseUrl": "https://predict.vellum.ai",
            "id": "Production",
          },
        ],
        "errors": Array [
          Object {
            "statusCode": 400,
            "type": Object {
              "type": "unknown",
            },
          },
          Object {
            "statusCode": 404,
            "type": Object {
              "type": "unknown",
            },
          },
          Object {
            "statusCode": 500,
            "type": Object {
              "type": "unknown",
            },
          },
        ],
        "examples": Array [
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/search",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "query": "string",
            },
            "requestBodyV2": undefined,
            "responseBody": Object {
              "results": Array [
                Object {
                  "document": Object {
                    "external_id": "string",
                    "id": "string",
                    "label": "string",
                  },
                  "keywords": Array [
                    "string",
                  ],
                  "score": 1,
                  "text": "string",
                },
              ],
            },
            "responseBodyV2": undefined,
            "responseStatusCode": 200,
          },
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/search",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "query": "string",
            },
            "requestBodyV2": undefined,
            "responseBody": Object {},
            "responseBodyV2": undefined,
            "responseStatusCode": 400,
          },
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/search",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "query": "string",
            },
            "requestBodyV2": undefined,
            "responseBody": Object {},
            "responseBodyV2": undefined,
            "responseStatusCode": 404,
          },
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/search",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "query": "string",
            },
            "requestBodyV2": undefined,
            "responseBody": Object {},
            "responseBodyV2": undefined,
            "responseStatusCode": 500,
          },
        ],
        "headers": Array [],
        "htmlDescription": "<p><strong style=\\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\\">Stable</strong></p>
<p>Perform a search against a document index.</p>
<p><strong>Note:</strong> Uses a base url of <code>https://predict.vellum.ai</code>.</p>
",
        "id": "search",
        "method": "POST",
        "name": "Search",
        "path": Object {
          "parts": Array [
            Object {
              "type": "literal",
              "value": "",
            },
            Object {
              "type": "literal",
              "value": "/v1/search",
            },
          ],
          "pathParameters": Array [],
        },
        "queryParameters": Array [],
        "request": Object {
          "contentType": "application/json",
          "description": undefined,
          "descriptionContainsMarkdown": false,
          "htmlDescription": undefined,
          "type": Object {
            "extends": Array [],
            "properties": Array [
              Object {
                "description": "The ID of the index to search against. Must provide either this or index_name.",
                "key": "index_id",
                "valueType": Object {
                  "itemType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              Object {
                "description": "The name of the index to search against. Must provide either this or index_id.",
                "key": "index_name",
                "valueType": Object {
                  "itemType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              Object {
                "description": "The query to search for. <span style=\\"white-space: nowrap\\">\`non-empty\`</span> ",
                "key": "query",
                "valueType": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
              },
              Object {
                "description": "Configuration options for the search.",
                "key": "options",
                "valueType": Object {
                  "itemType": Object {
                    "type": "id",
                    "value": "type_:SearchRequestOptionsRequest",
                  },
                  "type": "optional",
                },
              },
            ],
            "type": "object",
          },
        },
        "response": Object {
          "type": Object {
            "type": "reference",
            "value": Object {
              "type": "id",
              "value": "type_:SearchResponse",
            },
          },
        },
        "urlSlug": "search",
      },
      Object {
        "authed": true,
        "defaultEnvironment": "Production",
        "description": "<strong style=\\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\\">Stable</strong>

Used to submit feedback regarding the quality of previously generated completions.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
        "descriptionContainsMarkdown": true,
        "environments": Array [
          Object {
            "baseUrl": "https://predict.vellum.ai",
            "id": "Production",
          },
        ],
        "errors": Array [
          Object {
            "statusCode": 400,
            "type": Object {
              "type": "unknown",
            },
          },
          Object {
            "statusCode": 404,
            "type": Object {
              "type": "unknown",
            },
          },
          Object {
            "statusCode": 500,
            "type": Object {
              "type": "unknown",
            },
          },
        ],
        "examples": Array [
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/submit-completion-actuals",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "actuals": Array [
                Object {},
              ],
            },
            "requestBodyV2": undefined,
            "responseBody": undefined,
            "responseBodyV2": undefined,
            "responseStatusCode": 200,
          },
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/submit-completion-actuals",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "actuals": Array [
                Object {},
              ],
            },
            "requestBodyV2": undefined,
            "responseBody": Object {},
            "responseBodyV2": undefined,
            "responseStatusCode": 400,
          },
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/submit-completion-actuals",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "actuals": Array [
                Object {},
              ],
            },
            "requestBodyV2": undefined,
            "responseBody": Object {},
            "responseBodyV2": undefined,
            "responseStatusCode": 404,
          },
          Object {
            "codeExamples": Object {
              "nodeAxios": "",
            },
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "headers": Object {},
            "htmlDescription": undefined,
            "path": "/v1/submit-completion-actuals",
            "pathParameters": Object {},
            "queryParameters": Object {},
            "requestBody": Object {
              "actuals": Array [
                Object {},
              ],
            },
            "requestBodyV2": undefined,
            "responseBody": Object {},
            "responseBodyV2": undefined,
            "responseStatusCode": 500,
          },
        ],
        "headers": Array [],
        "htmlDescription": "<p><strong style=\\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\\">Stable</strong></p>
<p>Used to submit feedback regarding the quality of previously generated completions.</p>
<p><strong>Note:</strong> Uses a base url of <code>https://predict.vellum.ai</code>.</p>
",
        "id": "submit-completion-actuals",
        "method": "POST",
        "name": "Submit Completion Actuals",
        "path": Object {
          "parts": Array [
            Object {
              "type": "literal",
              "value": "",
            },
            Object {
              "type": "literal",
              "value": "/v1/submit-completion-actuals",
            },
          ],
          "pathParameters": Array [],
        },
        "queryParameters": Array [],
        "request": Object {
          "contentType": "application/json",
          "description": undefined,
          "descriptionContainsMarkdown": false,
          "htmlDescription": undefined,
          "type": Object {
            "extends": Array [],
            "properties": Array [
              Object {
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "key": "deployment_id",
                "valueType": Object {
                  "itemType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              Object {
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "key": "deployment_name",
                "valueType": Object {
                  "itemType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              Object {
                "description": "Feedback regarding the quality of previously generated completions",
                "key": "actuals",
                "valueType": Object {
                  "itemType": Object {
                    "type": "id",
                    "value": "type_:SubmitCompletionActualRequest",
                  },
                  "type": "list",
                },
              },
            ],
            "type": "object",
          },
        },
        "response": undefined,
        "urlSlug": "submit-completion-actuals",
      },
    ],
    "subpackages": Array [
      "subpackage_deployments",
      "subpackage_documentIndexes",
      "subpackage_documents",
      "subpackage_modelVersions",
      "subpackage_registeredPrompts",
      "subpackage_sandboxes",
      "subpackage_testSuites",
    ],
    "types": Array [
      "type_:BlockTypeEnum",
      "type_:ChatMessage",
      "type_:ChatMessageRequest",
      "type_:ChatMessageRole",
      "type_:ContentType",
      "type_:DeploymentRead",
      "type_:DeploymentReadStatusEnum",
      "type_:Document",
      "type_:DocumentDocumentToDocumentIndex",
      "type_:DocumentIndexRead",
      "type_:DocumentIndexStatus",
      "type_:EnrichedNormalizedCompletion",
      "type_:EnvironmentEnum",
      "type_:EvaluationParams",
      "type_:EvaluationParamsRequest",
      "type_:FinishReasonEnum",
      "type_:GenerateErrorResponse",
      "type_:GenerateOptionsRequest",
      "type_:GenerateRequest",
      "type_:GenerateResponse",
      "type_:GenerateResult",
      "type_:GenerateResultData",
      "type_:GenerateResultError",
      "type_:GenerateStreamResponse",
      "type_:GenerateStreamResult",
      "type_:GenerateStreamResultData",
      "type_:IndexingStateEnum",
      "type_:LogprobsEnum",
      "type_:ModelTypeEnum",
      "type_:ModelVersionBuildConfig",
      "type_:ModelVersionCompilePromptResponse",
      "type_:ModelVersionCompiledPrompt",
      "type_:ModelVersionExecConfig",
      "type_:ModelVersionExecConfigParameters",
      "type_:ModelVersionRead",
      "type_:ModelVersionReadStatusEnum",
      "type_:ModelVersionSandboxSnapshot",
      "type_:NormalizedLogProbs",
      "type_:NormalizedTokenLogProbs",
      "type_:PaginatedSlimDocumentList",
      "type_:ProcessingFailureReasonEnum",
      "type_:ProcessingStateEnum",
      "type_:PromptTemplateBlock",
      "type_:PromptTemplateBlockData",
      "type_:PromptTemplateBlockDataRequest",
      "type_:PromptTemplateBlockProperties",
      "type_:PromptTemplateBlockPropertiesRequest",
      "type_:PromptTemplateBlockRequest",
      "type_:PromptTemplateInputVariable",
      "type_:PromptTemplateInputVariableRequest",
      "type_:ProviderEnum",
      "type_:RegisterPromptErrorResponse",
      "type_:RegisterPromptModelParametersRequest",
      "type_:RegisterPromptPrompt",
      "type_:RegisterPromptPromptInfoRequest",
      "type_:RegisterPromptResponse",
      "type_:RegisteredPromptDeployment",
      "type_:RegisteredPromptModelVersion",
      "type_:RegisteredPromptSandbox",
      "type_:RegisteredPromptSandboxSnapshot",
      "type_:SandboxMetricInputParams",
      "type_:SandboxMetricInputParamsRequest",
      "type_:SandboxScenario",
      "type_:ScenarioInput",
      "type_:ScenarioInputRequest",
      "type_:ScenarioInputTypeEnum",
      "type_:SearchErrorResponse",
      "type_:SearchFiltersRequest",
      "type_:SearchRequestOptionsRequest",
      "type_:SearchResponse",
      "type_:SearchResult",
      "type_:SearchResultMergingRequest",
      "type_:SearchWeightsRequest",
      "type_:SlimDocument",
      "type_:SlimDocumentStatusEnum",
      "type_:SubmitCompletionActualRequest",
      "type_:SubmitCompletionActualsErrorResponse",
      "type_:TestSuiteTestCase",
      "type_:UploadDocumentErrorResponse",
      "type_:UploadDocumentResponse",
    ],
    "webhooks": Array [],
  },
  "subpackages": Object {
    "subpackage_deployments": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "endpoints": Array [
        Object {
          "authed": true,
          "defaultEnvironment": "Production",
          "description": "
<strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong>

Used to retrieve a deployment given its ID or name.
",
          "descriptionContainsMarkdown": true,
          "environments": Array [
            Object {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": Array [],
          "examples": Array [
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/v1/deployments/string",
              "pathParameters": Object {
                "id": "string",
              },
              "queryParameters": Object {},
              "requestBody": undefined,
              "requestBodyV2": undefined,
              "responseBody": Object {
                "active_model_version_ids": Array [
                  "string",
                ],
                "created": "string",
                "environment": "DEVELOPMENT",
                "id": "string",
                "label": "string",
                "last_deployed_on": "string",
                "model_type": "GENERATE",
                "name": "string",
                "status": "ACTIVE",
              },
              "responseBodyV2": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": Array [],
          "htmlDescription": "<p><strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong></p>
<p>Used to retrieve a deployment given its ID or name.</p>
",
          "id": "retrieve",
          "method": "GET",
          "name": "Retrieve",
          "path": Object {
            "parts": Array [
              Object {
                "type": "literal",
                "value": "",
              },
              Object {
                "type": "literal",
                "value": "/v1/deployments/",
              },
              Object {
                "type": "pathParameter",
                "value": "id",
              },
              Object {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": Array [
              Object {
                "description": "Either the Deployment's ID or its unique name",
                "key": "id",
                "type": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": Array [],
          "request": undefined,
          "response": Object {
            "type": Object {
              "type": "reference",
              "value": Object {
                "type": "id",
                "value": "type_:DeploymentRead",
              },
            },
          },
          "urlSlug": "retrieve",
        },
      ],
      "htmlDescription": undefined,
      "name": "deployments",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_deployments",
      "subpackages": Array [],
      "types": Array [],
      "urlSlug": "deployments",
      "webhooks": Array [],
    },
    "subpackage_documentIndexes": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "endpoints": Array [
        Object {
          "authed": true,
          "defaultEnvironment": "Production",
          "description": "<strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong>

Creates a new document index.",
          "descriptionContainsMarkdown": true,
          "environments": Array [
            Object {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": Array [],
          "examples": Array [
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/v1/document-indexes",
              "pathParameters": Object {},
              "queryParameters": Object {},
              "requestBody": Object {
                "indexing_config": Object {
                  "string": Object {},
                },
                "label": "string",
                "name": "string",
              },
              "requestBodyV2": undefined,
              "responseBody": Object {
                "created": "string",
                "environment": "DEVELOPMENT",
                "id": "string",
                "indexing_config": Object {
                  "string": Object {},
                },
                "label": "string",
                "name": "string",
                "status": "ACTIVE",
              },
              "responseBodyV2": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": Array [],
          "htmlDescription": "<p><strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong></p>
<p>Creates a new document index.</p>
",
          "id": "create",
          "method": "POST",
          "name": "Create",
          "path": Object {
            "parts": Array [
              Object {
                "type": "literal",
                "value": "",
              },
              Object {
                "type": "literal",
                "value": "/v1/document-indexes",
              },
            ],
            "pathParameters": Array [],
          },
          "queryParameters": Array [],
          "request": Object {
            "contentType": "application/json",
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "type": Object {
              "extends": Array [],
              "properties": Array [
                Object {
                  "description": "A human-readable label for the document index <span style=\\"white-space: nowrap\\">\`non-empty\`</span> <span style=\\"white-space: nowrap\\">\`<= 150 characters\`</span> ",
                  "key": "label",
                  "valueType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "string",
                    },
                  },
                },
                Object {
                  "description": "A name that uniquely identifies this index within its workspace <span style=\\"white-space: nowrap\\">\`non-empty\`</span> <span style=\\"white-space: nowrap\\">\`<= 150 characters\`</span> ",
                  "key": "name",
                  "valueType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "string",
                    },
                  },
                },
                Object {
                  "description": "The current status of the document index

* \`ACTIVE\` - Active
* \`ARCHIVED\` - Archived",
                  "key": "status",
                  "valueType": Object {
                    "itemType": Object {
                      "type": "id",
                      "value": "type_:DocumentIndexStatus",
                    },
                    "type": "optional",
                  },
                },
                Object {
                  "description": "The environment this document index is used in

* \`DEVELOPMENT\` - Development
* \`STAGING\` - Staging
* \`PRODUCTION\` - Production",
                  "key": "environment",
                  "valueType": Object {
                    "itemType": Object {
                      "type": "id",
                      "value": "type_:EnvironmentEnum",
                    },
                    "type": "optional",
                  },
                },
                Object {
                  "description": "Configuration representing how documents should be indexed",
                  "key": "indexing_config",
                  "valueType": Object {
                    "keyType": Object {
                      "type": "primitive",
                      "value": Object {
                        "type": "string",
                      },
                    },
                    "type": "map",
                    "valueType": Object {
                      "type": "unknown",
                    },
                  },
                },
                Object {
                  "description": "Optionally specify the id of a document index from which you'd like to copy and re-index its documents into this newly created index",
                  "key": "copy_documents_from_index_id",
                  "valueType": Object {
                    "itemType": Object {
                      "type": "primitive",
                      "value": Object {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": Object {
            "type": Object {
              "type": "reference",
              "value": Object {
                "type": "id",
                "value": "type_:DocumentIndexRead",
              },
            },
          },
          "urlSlug": "create",
        },
      ],
      "htmlDescription": undefined,
      "name": "documentIndexes",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_documentIndexes",
      "subpackages": Array [],
      "types": Array [],
      "urlSlug": "document-indexes",
      "webhooks": Array [],
    },
    "subpackage_documents": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "endpoints": Array [
        Object {
          "authed": true,
          "defaultEnvironment": "Production",
          "description": "
<strong style=\\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\\">Stable</strong>

Used to list documents. Optionally filter on supported fields.
",
          "descriptionContainsMarkdown": true,
          "environments": Array [
            Object {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": Array [],
          "examples": Array [
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/v1/documents",
              "pathParameters": Object {},
              "queryParameters": Object {
                "document_index_id": "string",
                "limit": 0,
                "offset": undefined,
                "ordering": undefined,
              },
              "requestBody": undefined,
              "requestBodyV2": undefined,
              "responseBody": Object {
                "count": 0,
                "next": "string",
                "previous": "string",
                "results": Array [
                  Object {
                    "document_to_document_indexes": Array [
                      Object {
                        "document_index_id": "string",
                        "id": "string",
                        "indexing_state": "AWAITING_PROCESSING",
                      },
                    ],
                    "external_id": "string",
                    "id": "string",
                    "keywords": Array [
                      "string",
                    ],
                    "label": "string",
                    "last_uploaded_at": "string",
                    "processing_failure_reason": "EXCEEDED_CHARACTER_LIMIT",
                    "processing_state": "QUEUED",
                    "status": "ACTIVE",
                  },
                ],
              },
              "responseBodyV2": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": Array [],
          "htmlDescription": "<p><strong style=\\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\\">Stable</strong></p>
<p>Used to list documents. Optionally filter on supported fields.</p>
",
          "id": "list",
          "method": "GET",
          "name": "List",
          "path": Object {
            "parts": Array [
              Object {
                "type": "literal",
                "value": "",
              },
              Object {
                "type": "literal",
                "value": "/v1/documents",
              },
            ],
            "pathParameters": Array [],
          },
          "queryParameters": Array [
            Object {
              "description": "Filter down to only those documents that are included in the specified index. You may provide either the Vellum-generated ID or the unique name of the index specified upon initial creation.",
              "key": "document_index_id",
              "type": Object {
                "itemType": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            Object {
              "description": "Number of results to return per page.",
              "key": "limit",
              "type": Object {
                "itemType": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            Object {
              "description": "The initial index from which to return the results.",
              "key": "offset",
              "type": Object {
                "itemType": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            Object {
              "description": "Which field to use when ordering the results.",
              "key": "ordering",
              "type": Object {
                "itemType": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": Object {
            "type": Object {
              "type": "reference",
              "value": Object {
                "type": "id",
                "value": "type_:PaginatedSlimDocumentList",
              },
            },
          },
          "urlSlug": "list",
        },
        Object {
          "authed": true,
          "defaultEnvironment": "Production",
          "description": "<strong style=\\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\\">Stable</strong>

Upload a document to be indexed and used for search.

**Note:** Uses a base url of \`https://documents.vellum.ai\`.",
          "descriptionContainsMarkdown": true,
          "environments": Array [
            Object {
              "baseUrl": "https://documents.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": Array [
            Object {
              "statusCode": 400,
              "type": Object {
                "type": "unknown",
              },
            },
            Object {
              "statusCode": 404,
              "type": Object {
                "type": "unknown",
              },
            },
            Object {
              "statusCode": 500,
              "type": Object {
                "type": "unknown",
              },
            },
          ],
          "examples": Array [
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/v1/upload-document",
              "pathParameters": Object {},
              "queryParameters": Object {},
              "requestBody": "<filename>",
              "requestBodyV2": undefined,
              "responseBody": Object {
                "document_id": "string",
              },
              "responseBodyV2": undefined,
              "responseStatusCode": 200,
            },
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/v1/upload-document",
              "pathParameters": Object {},
              "queryParameters": Object {},
              "requestBody": "<filename>",
              "requestBodyV2": undefined,
              "responseBody": Object {},
              "responseBodyV2": undefined,
              "responseStatusCode": 400,
            },
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/v1/upload-document",
              "pathParameters": Object {},
              "queryParameters": Object {},
              "requestBody": "<filename>",
              "requestBodyV2": undefined,
              "responseBody": Object {},
              "responseBodyV2": undefined,
              "responseStatusCode": 404,
            },
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/v1/upload-document",
              "pathParameters": Object {},
              "queryParameters": Object {},
              "requestBody": "<filename>",
              "requestBodyV2": undefined,
              "responseBody": Object {},
              "responseBodyV2": undefined,
              "responseStatusCode": 500,
            },
          ],
          "headers": Array [],
          "htmlDescription": "<p><strong style=\\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\\">Stable</strong></p>
<p>Upload a document to be indexed and used for search.</p>
<p><strong>Note:</strong> Uses a base url of <code>https://documents.vellum.ai</code>.</p>
",
          "id": "upload",
          "method": "POST",
          "name": "Upload",
          "path": Object {
            "parts": Array [
              Object {
                "type": "literal",
                "value": "",
              },
              Object {
                "type": "literal",
                "value": "/v1/upload-document",
              },
            ],
            "pathParameters": Array [],
          },
          "queryParameters": Array [],
          "request": Object {
            "contentType": "multipart/form-data",
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "type": Object {
              "type": "fileUpload",
            },
          },
          "response": Object {
            "type": Object {
              "type": "reference",
              "value": Object {
                "type": "id",
                "value": "type_:UploadDocumentResponse",
              },
            },
          },
          "urlSlug": "upload",
        },
      ],
      "htmlDescription": undefined,
      "name": "documents",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_documents",
      "subpackages": Array [],
      "types": Array [],
      "urlSlug": "documents",
      "webhooks": Array [],
    },
    "subpackage_modelVersions": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "endpoints": Array [
        Object {
          "authed": true,
          "defaultEnvironment": "Production",
          "description": "
<strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong>

Used to retrieve a model version given its ID.
",
          "descriptionContainsMarkdown": true,
          "environments": Array [
            Object {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": Array [],
          "examples": Array [
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/v1/model-versions/string",
              "pathParameters": Object {
                "id": "string",
              },
              "queryParameters": Object {},
              "requestBody": undefined,
              "requestBodyV2": undefined,
              "responseBody": Object {
                "build_config": Object {
                  "base_model": "string",
                  "sandbox_snapshot": Object {
                    "id": "string",
                    "prompt_id": "string",
                    "prompt_index": 0,
                    "sandbox_id": "string",
                  },
                },
                "created": "string",
                "exec_config": Object {
                  "input_variables": Array [
                    Object {
                      "key": "string",
                    },
                  ],
                  "parameters": Object {
                    "frequency_penalty": 1,
                    "logit_bias": Object {
                      "string": 1,
                    },
                    "max_tokens": 0,
                    "presence_penalty": 1,
                    "stop": Array [
                      "string",
                    ],
                    "temperature": 1,
                    "top_k": 1,
                    "top_p": 1,
                  },
                  "prompt_block_data": Object {
                    "blocks": Array [
                      Object {
                        "block_type": "CHAT_MESSAGE",
                        "id": "string",
                        "properties": Object {
                          "blocks": Array [],
                          "chat_message_unterminated": true,
                          "chat_role": "SYSTEM",
                          "function_description": "string",
                          "function_name": "string",
                          "function_parameters": Object {
                            "string": Object {},
                          },
                          "template": "string",
                          "template_type": "STRING",
                        },
                      },
                    ],
                    "version": 0,
                  },
                  "prompt_syntax_version": 0,
                  "prompt_template": "string",
                },
                "external_id": "string",
                "id": "string",
                "label": "string",
                "model_type": "GENERATE",
                "provider": "ANTHROPIC",
                "status": "CREATING",
              },
              "responseBodyV2": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": Array [],
          "htmlDescription": "<p><strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong></p>
<p>Used to retrieve a model version given its ID.</p>
",
          "id": "retrieve",
          "method": "GET",
          "name": "Retrieve",
          "path": Object {
            "parts": Array [
              Object {
                "type": "literal",
                "value": "",
              },
              Object {
                "type": "literal",
                "value": "/v1/model-versions/",
              },
              Object {
                "type": "pathParameter",
                "value": "id",
              },
              Object {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": Array [
              Object {
                "description": "A UUID string identifying this model version.",
                "key": "id",
                "type": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": Array [],
          "request": undefined,
          "response": Object {
            "type": Object {
              "type": "reference",
              "value": Object {
                "type": "id",
                "value": "type_:ModelVersionRead",
              },
            },
          },
          "urlSlug": "retrieve",
        },
        Object {
          "authed": true,
          "defaultEnvironment": "Production",
          "description": "<strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong>

Compiles the prompt backing the model version using the provided input values.",
          "descriptionContainsMarkdown": true,
          "environments": Array [
            Object {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": Array [],
          "examples": Array [
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/v1/model-versions/string/compile-prompt",
              "pathParameters": Object {
                "id": "string",
              },
              "queryParameters": Object {},
              "requestBody": Object {
                "input_values": Object {
                  "string": Object {},
                },
              },
              "requestBodyV2": undefined,
              "responseBody": Object {
                "prompt": Object {
                  "num_tokens": 0,
                  "text": "string",
                },
              },
              "responseBodyV2": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": Array [],
          "htmlDescription": "<p><strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong></p>
<p>Compiles the prompt backing the model version using the provided input values.</p>
",
          "id": "model_version_compile_prompt",
          "method": "POST",
          "name": "Model Version Compile Prompt",
          "path": Object {
            "parts": Array [
              Object {
                "type": "literal",
                "value": "",
              },
              Object {
                "type": "literal",
                "value": "/v1/model-versions/",
              },
              Object {
                "type": "pathParameter",
                "value": "id",
              },
              Object {
                "type": "literal",
                "value": "/compile-prompt",
              },
            ],
            "pathParameters": Array [
              Object {
                "description": "A UUID string identifying this model version.",
                "key": "id",
                "type": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": Array [],
          "request": Object {
            "contentType": "application/json",
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "type": Object {
              "extends": Array [],
              "properties": Array [
                Object {
                  "description": "Key/value pairs for each variable found within the model version's prompt template.",
                  "key": "input_values",
                  "valueType": Object {
                    "keyType": Object {
                      "type": "primitive",
                      "value": Object {
                        "type": "string",
                      },
                    },
                    "type": "map",
                    "valueType": Object {
                      "type": "unknown",
                    },
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": Object {
            "type": Object {
              "type": "reference",
              "value": Object {
                "type": "id",
                "value": "type_:ModelVersionCompilePromptResponse",
              },
            },
          },
          "urlSlug": "model-version-compile-prompt",
        },
      ],
      "htmlDescription": undefined,
      "name": "modelVersions",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_modelVersions",
      "subpackages": Array [],
      "types": Array [],
      "urlSlug": "model-versions",
      "webhooks": Array [],
    },
    "subpackage_registeredPrompts": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "endpoints": Array [
        Object {
          "authed": true,
          "defaultEnvironment": "Production",
          "description": "<strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong>

Registers a prompt within Vellum and creates associated Vellum entities. Intended to be used by integration
partners, not directly by Vellum users.

Under the hood, this endpoint creates a new sandbox, a new model version, and a new deployment.",
          "descriptionContainsMarkdown": true,
          "environments": Array [
            Object {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": Array [
            Object {
              "statusCode": 409,
              "type": Object {
                "type": "id",
                "value": "type_:RegisterPromptErrorResponse",
              },
            },
          ],
          "examples": Array [
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/v1/registered-prompts/register",
              "pathParameters": Object {},
              "queryParameters": Object {},
              "requestBody": Object {
                "label": "string",
                "model": "string",
                "name": "string",
                "parameters": Object {
                  "frequency_penalty": 1,
                  "max_tokens": 0,
                  "presence_penalty": 1,
                  "temperature": 1,
                  "top_p": 1,
                },
                "prompt": Object {
                  "input_variables": Array [
                    Object {
                      "key": "string",
                    },
                  ],
                  "prompt_block_data": Object {
                    "blocks": Array [
                      Object {
                        "block_type": "CHAT_MESSAGE",
                        "id": "string",
                        "properties": Object {},
                      },
                    ],
                    "version": 0,
                  },
                },
                "provider": "ANTHROPIC",
              },
              "requestBodyV2": undefined,
              "responseBody": Object {
                "deployment": Object {
                  "id": "string",
                  "label": "string",
                  "name": "string",
                },
                "model_version": Object {
                  "id": "string",
                  "label": "string",
                },
                "prompt": Object {
                  "id": "string",
                  "label": "string",
                },
                "sandbox": Object {
                  "id": "string",
                  "label": "string",
                },
                "sandbox_snapshot": Object {
                  "id": "string",
                },
              },
              "responseBodyV2": undefined,
              "responseStatusCode": 200,
            },
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/v1/registered-prompts/register",
              "pathParameters": Object {},
              "queryParameters": Object {},
              "requestBody": Object {
                "label": "string",
                "model": "string",
                "name": "string",
                "parameters": Object {
                  "frequency_penalty": 1,
                  "max_tokens": 0,
                  "presence_penalty": 1,
                  "temperature": 1,
                  "top_p": 1,
                },
                "prompt": Object {
                  "input_variables": Array [
                    Object {
                      "key": "string",
                    },
                  ],
                  "prompt_block_data": Object {
                    "blocks": Array [
                      Object {
                        "block_type": "CHAT_MESSAGE",
                        "id": "string",
                        "properties": Object {},
                      },
                    ],
                    "version": 0,
                  },
                },
                "provider": "ANTHROPIC",
              },
              "requestBodyV2": undefined,
              "responseBody": Object {
                "detail": "string",
              },
              "responseBodyV2": undefined,
              "responseStatusCode": 409,
            },
          ],
          "headers": Array [],
          "htmlDescription": "<p><strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong></p>
<p>Registers a prompt within Vellum and creates associated Vellum entities. Intended to be used by integration
partners, not directly by Vellum users.</p>
<p>Under the hood, this endpoint creates a new sandbox, a new model version, and a new deployment.</p>
",
          "id": "register_prompt",
          "method": "POST",
          "name": "Register Prompt",
          "path": Object {
            "parts": Array [
              Object {
                "type": "literal",
                "value": "",
              },
              Object {
                "type": "literal",
                "value": "/v1/registered-prompts/register",
              },
            ],
            "pathParameters": Array [],
          },
          "queryParameters": Array [],
          "request": Object {
            "contentType": "application/json",
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "type": Object {
              "extends": Array [],
              "properties": Array [
                Object {
                  "description": "A human-friendly label for corresponding entities created in Vellum. <span style=\\"white-space: nowrap\\">\`non-empty\`</span> ",
                  "key": "label",
                  "valueType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "string",
                    },
                  },
                },
                Object {
                  "description": "A uniquely-identifying name for corresponding entities created in Vellum. <span style=\\"white-space: nowrap\\">\`non-empty\`</span> ",
                  "key": "name",
                  "valueType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "string",
                    },
                  },
                },
                Object {
                  "description": "Information about how to execute the prompt template.",
                  "key": "prompt",
                  "valueType": Object {
                    "type": "id",
                    "value": "type_:RegisterPromptPromptInfoRequest",
                  },
                },
                Object {
                  "description": "The initial LLM provider to use for this prompt

* \`ANTHROPIC\` - Anthropic
* \`COHERE\` - Cohere
* \`GOOGLE\` - Google
* \`HOSTED\` - Hosted
* \`MOSAICML\` - MosaicML
* \`OPENAI\` - OpenAI
* \`PYQ\` - Pyq",
                  "key": "provider",
                  "valueType": Object {
                    "type": "id",
                    "value": "type_:ProviderEnum",
                  },
                },
                Object {
                  "description": "The initial model to use for this prompt <span style=\\"white-space: nowrap\\">\`non-empty\`</span> ",
                  "key": "model",
                  "valueType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "string",
                    },
                  },
                },
                Object {
                  "description": "The initial model parameters to use for  this prompt",
                  "key": "parameters",
                  "valueType": Object {
                    "type": "id",
                    "value": "type_:RegisterPromptModelParametersRequest",
                  },
                },
                Object {
                  "description": "Optionally include additional metadata to store along with the prompt.",
                  "key": "meta",
                  "valueType": Object {
                    "itemType": Object {
                      "keyType": Object {
                        "type": "primitive",
                        "value": Object {
                          "type": "string",
                        },
                      },
                      "type": "map",
                      "valueType": Object {
                        "type": "unknown",
                      },
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": Object {
            "type": Object {
              "type": "reference",
              "value": Object {
                "type": "id",
                "value": "type_:RegisterPromptResponse",
              },
            },
          },
          "urlSlug": "register-prompt",
        },
      ],
      "htmlDescription": undefined,
      "name": "registeredPrompts",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_registeredPrompts",
      "subpackages": Array [],
      "types": Array [],
      "urlSlug": "registered-prompts",
      "webhooks": Array [],
    },
    "subpackage_sandboxes": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "endpoints": Array [
        Object {
          "authed": true,
          "defaultEnvironment": "Production",
          "description": "<strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong>

Upserts a new scenario for a sandbox, keying off of the optionally provided scenario id.

If an id is provided and has a match, the scenario will be updated. If no id is provided or no match
is found, a new scenario will be appended to the end.

Note that a full replacement of the scenario is performed, so any fields not provided will be removed
or overwritten with default values.",
          "descriptionContainsMarkdown": true,
          "environments": Array [
            Object {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": Array [],
          "examples": Array [
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/v1/sandboxes/string/scenarios",
              "pathParameters": Object {
                "id": "string",
              },
              "queryParameters": Object {},
              "requestBody": Object {
                "inputs": Array [
                  Object {
                    "key": "string",
                  },
                ],
              },
              "requestBodyV2": undefined,
              "responseBody": Object {
                "id": "string",
                "inputs": Array [
                  Object {
                    "chat_history": Array [
                      Object {
                        "role": "SYSTEM",
                        "text": "string",
                      },
                    ],
                    "key": "string",
                    "type": "TEXT",
                    "value": "string",
                  },
                ],
                "label": "string",
                "metric_input_params": Object {
                  "params": Object {
                    "target": "string",
                  },
                },
              },
              "responseBodyV2": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": Array [],
          "htmlDescription": "<p><strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong></p>
<p>Upserts a new scenario for a sandbox, keying off of the optionally provided scenario id.</p>
<p>If an id is provided and has a match, the scenario will be updated. If no id is provided or no match
is found, a new scenario will be appended to the end.</p>
<p>Note that a full replacement of the scenario is performed, so any fields not provided will be removed
or overwritten with default values.</p>
",
          "id": "upsert_sandbox_scenario",
          "method": "POST",
          "name": "Upsert Sandbox Scenario",
          "path": Object {
            "parts": Array [
              Object {
                "type": "literal",
                "value": "",
              },
              Object {
                "type": "literal",
                "value": "/v1/sandboxes/",
              },
              Object {
                "type": "pathParameter",
                "value": "id",
              },
              Object {
                "type": "literal",
                "value": "/scenarios",
              },
            ],
            "pathParameters": Array [
              Object {
                "description": "A UUID string identifying this sandbox.",
                "key": "id",
                "type": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": Array [],
          "request": Object {
            "contentType": "application/json",
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "type": Object {
              "extends": Array [],
              "properties": Array [
                Object {
                  "key": "label",
                  "valueType": Object {
                    "itemType": Object {
                      "type": "primitive",
                      "value": Object {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                Object {
                  "description": "The inputs for the scenario",
                  "key": "inputs",
                  "valueType": Object {
                    "itemType": Object {
                      "type": "id",
                      "value": "type_:ScenarioInputRequest",
                    },
                    "type": "list",
                  },
                },
                Object {
                  "description": "The id of the scenario to update. If none is provided, an id will be generated and a new scenario will be appended. <span style=\\"white-space: nowrap\\">\`non-empty\`</span> ",
                  "key": "scenario_id",
                  "valueType": Object {
                    "itemType": Object {
                      "type": "primitive",
                      "value": Object {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                Object {
                  "key": "metric_input_params",
                  "valueType": Object {
                    "itemType": Object {
                      "type": "id",
                      "value": "type_:SandboxMetricInputParamsRequest",
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": Object {
            "type": Object {
              "type": "reference",
              "value": Object {
                "type": "id",
                "value": "type_:SandboxScenario",
              },
            },
          },
          "urlSlug": "upsert-sandbox-scenario",
        },
        Object {
          "authed": true,
          "defaultEnvironment": "Production",
          "description": "<strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong>

Deletes an existing scenario from a sandbox, keying off of the provided scenario id.",
          "descriptionContainsMarkdown": true,
          "environments": Array [
            Object {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": Array [],
          "examples": Array [
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/v1/sandboxes/string/scenarios/string",
              "pathParameters": Object {
                "id": "string",
                "scenario_id": "string",
              },
              "queryParameters": Object {},
              "requestBody": undefined,
              "requestBodyV2": undefined,
              "responseBody": undefined,
              "responseBodyV2": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": Array [],
          "htmlDescription": "<p><strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong></p>
<p>Deletes an existing scenario from a sandbox, keying off of the provided scenario id.</p>
",
          "id": "delete_sandbox_scenario",
          "method": "DELETE",
          "name": "Delete Sandbox Scenario",
          "path": Object {
            "parts": Array [
              Object {
                "type": "literal",
                "value": "",
              },
              Object {
                "type": "literal",
                "value": "/v1/sandboxes/",
              },
              Object {
                "type": "pathParameter",
                "value": "id",
              },
              Object {
                "type": "literal",
                "value": "/scenarios/",
              },
              Object {
                "type": "pathParameter",
                "value": "scenario_id",
              },
              Object {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": Array [
              Object {
                "description": "A UUID string identifying this sandbox.",
                "key": "id",
                "type": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
              },
              Object {
                "description": "An id identifying the scenario that you'd like to delete",
                "key": "scenario_id",
                "type": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": Array [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete-sandbox-scenario",
        },
      ],
      "htmlDescription": undefined,
      "name": "sandboxes",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_sandboxes",
      "subpackages": Array [],
      "types": Array [],
      "urlSlug": "sandboxes",
      "webhooks": Array [],
    },
    "subpackage_testSuites": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "endpoints": Array [
        Object {
          "authed": true,
          "defaultEnvironment": "Production",
          "description": "<strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong>

Upserts a new test case for a test suite, keying off of the optionally provided test case id.

If an id is provided and has a match, the test case will be updated. If no id is provided or no match
is found, a new test case will be appended to the end.

Note that a full replacement of the test case is performed, so any fields not provided will be removed
or overwritten with default values.",
          "descriptionContainsMarkdown": true,
          "environments": Array [
            Object {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": Array [],
          "examples": Array [
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/v1/test-suites/string/test-cases",
              "pathParameters": Object {
                "id": "string",
              },
              "queryParameters": Object {},
              "requestBody": Object {
                "evaluation_params": Object {},
                "input_values": Object {
                  "string": Object {},
                },
              },
              "requestBodyV2": undefined,
              "responseBody": Object {
                "evaluation_params": Object {
                  "target": "string",
                },
                "input_values": Object {
                  "string": Object {},
                },
                "label": "string",
                "test_case_id": "string",
              },
              "responseBodyV2": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": Array [],
          "htmlDescription": "<p><strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong></p>
<p>Upserts a new test case for a test suite, keying off of the optionally provided test case id.</p>
<p>If an id is provided and has a match, the test case will be updated. If no id is provided or no match
is found, a new test case will be appended to the end.</p>
<p>Note that a full replacement of the test case is performed, so any fields not provided will be removed
or overwritten with default values.</p>
",
          "id": "upsert_test_suite_test_case",
          "method": "POST",
          "name": "Upsert Test Suite Test Case",
          "path": Object {
            "parts": Array [
              Object {
                "type": "literal",
                "value": "",
              },
              Object {
                "type": "literal",
                "value": "/v1/test-suites/",
              },
              Object {
                "type": "pathParameter",
                "value": "id",
              },
              Object {
                "type": "literal",
                "value": "/test-cases",
              },
            ],
            "pathParameters": Array [
              Object {
                "description": "A UUID string identifying this test suite.",
                "key": "id",
                "type": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": Array [],
          "request": Object {
            "contentType": "application/json",
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "type": Object {
              "extends": Array [],
              "properties": Array [
                Object {
                  "description": "The id of the test case to update. If none is provided, an id will be generated and a new test case will be appended. <span style=\\"white-space: nowrap\\">\`non-empty\`</span> ",
                  "key": "test_case_id",
                  "valueType": Object {
                    "itemType": Object {
                      "type": "primitive",
                      "value": Object {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                Object {
                  "description": "A human-friendly label for the test case.",
                  "key": "label",
                  "valueType": Object {
                    "itemType": Object {
                      "type": "primitive",
                      "value": Object {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                Object {
                  "description": "Key/value pairs for each input variable that the Test Suite expects.",
                  "key": "input_values",
                  "valueType": Object {
                    "keyType": Object {
                      "type": "primitive",
                      "value": Object {
                        "type": "string",
                      },
                    },
                    "type": "map",
                    "valueType": Object {
                      "type": "unknown",
                    },
                  },
                },
                Object {
                  "description": "Parameters to use when evaluating the test case, specific to the test suite's evaluation metric.",
                  "key": "evaluation_params",
                  "valueType": Object {
                    "type": "id",
                    "value": "type_:EvaluationParamsRequest",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": Object {
            "type": Object {
              "type": "reference",
              "value": Object {
                "type": "id",
                "value": "type_:TestSuiteTestCase",
              },
            },
          },
          "urlSlug": "upsert-test-suite-test-case",
        },
        Object {
          "authed": true,
          "defaultEnvironment": "Production",
          "description": "<strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong>

Deletes an existing test case for a test suite, keying off of the test case id.",
          "descriptionContainsMarkdown": true,
          "environments": Array [
            Object {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": Array [],
          "examples": Array [
            Object {
              "codeExamples": Object {
                "nodeAxios": "",
              },
              "description": undefined,
              "descriptionContainsMarkdown": false,
              "headers": Object {},
              "htmlDescription": undefined,
              "path": "/v1/test-suites/string/test-cases/string",
              "pathParameters": Object {
                "id": "string",
                "test_case_id": "string",
              },
              "queryParameters": Object {},
              "requestBody": undefined,
              "requestBodyV2": undefined,
              "responseBody": undefined,
              "responseBodyV2": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": Array [],
          "htmlDescription": "<p><strong style=\\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\\">Unstable</strong></p>
<p>Deletes an existing test case for a test suite, keying off of the test case id.</p>
",
          "id": "delete_test_suite_test_case",
          "method": "DELETE",
          "name": "Delete Test Suite Test Case",
          "path": Object {
            "parts": Array [
              Object {
                "type": "literal",
                "value": "",
              },
              Object {
                "type": "literal",
                "value": "/v1/test-suites/",
              },
              Object {
                "type": "pathParameter",
                "value": "id",
              },
              Object {
                "type": "literal",
                "value": "/test-cases/",
              },
              Object {
                "type": "pathParameter",
                "value": "test_case_id",
              },
              Object {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": Array [
              Object {
                "description": "A UUID string identifying this test suite.",
                "key": "id",
                "type": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
              },
              Object {
                "description": "An id identifying the test case that you'd like to delete",
                "key": "test_case_id",
                "type": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": Array [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete-test-suite-test-case",
        },
      ],
      "htmlDescription": undefined,
      "name": "testSuites",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_testSuites",
      "subpackages": Array [],
      "types": Array [],
      "urlSlug": "test-suites",
      "webhooks": Array [],
    },
  },
  "types": Object {
    "type_:BlockTypeEnum": Object {
      "description": "* \`CHAT_MESSAGE\` - CHAT_MESSAGE
* \`CHAT_HISTORY\` - CHAT_HISTORY
* \`JINJA\` - JINJA
* \`FUNCTION_DEFINITION\` - FUNCTION_DEFINITION",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<ul>
<li><code>CHAT_MESSAGE</code> - CHAT_MESSAGE</li>
<li><code>CHAT_HISTORY</code> - CHAT_HISTORY</li>
<li><code>JINJA</code> - JINJA</li>
<li><code>FUNCTION_DEFINITION</code> - FUNCTION_DEFINITION</li>
</ul>
",
      "name": "BlockTypeEnum",
      "shape": Object {
        "type": "enum",
        "values": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "CHAT_MESSAGE",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "CHAT_HISTORY",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "JINJA",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "FUNCTION_DEFINITION",
          },
        ],
      },
    },
    "type_:ChatMessage": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "ChatMessage",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "text",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "role",
            "valueType": Object {
              "type": "id",
              "value": "type_:ChatMessageRole",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ChatMessageRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "ChatMessageRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "text",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "role",
            "valueType": Object {
              "type": "id",
              "value": "type_:ChatMessageRole",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ChatMessageRole": Object {
      "description": "* \`SYSTEM\` - System
* \`ASSISTANT\` - Assistant
* \`USER\` - User
* \`FUNCTION\` - Function",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<ul>
<li><code>SYSTEM</code> - System</li>
<li><code>ASSISTANT</code> - Assistant</li>
<li><code>USER</code> - User</li>
<li><code>FUNCTION</code> - Function</li>
</ul>
",
      "name": "ChatMessageRole",
      "shape": Object {
        "type": "enum",
        "values": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "SYSTEM",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "ASSISTANT",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "USER",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "FUNCTION",
          },
        ],
      },
    },
    "type_:ContentType": Object {
      "description": "* \`STRING\` - STRING
* \`JSON\` - JSON",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<ul>
<li><code>STRING</code> - STRING</li>
<li><code>JSON</code> - JSON</li>
</ul>
",
      "name": "ContentType",
      "shape": Object {
        "type": "enum",
        "values": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "STRING",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "JSON",
          },
        ],
      },
    },
    "type_:DeploymentRead": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "DeploymentRead",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "created",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "A human-readable label for the deployment <span style=\\"white-space: nowrap\\">\`<= 150 characters\`</span> ",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>A human-readable label for the deployment <span style=\\"white-space: nowrap\\"><code>&lt;= 150 characters</code></span> </p>
",
            "key": "label",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "A name that uniquely identifies this deployment within its workspace <span style=\\"white-space: nowrap\\">\`<= 150 characters\`</span> ",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>A name that uniquely identifies this deployment within its workspace <span style=\\"white-space: nowrap\\"><code>&lt;= 150 characters</code></span> </p>
",
            "key": "name",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "The current status of the deployment

* \`ACTIVE\` - Active
* \`INACTIVE\` - Inactive
* \`ARCHIVED\` - Archived",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The current status of the deployment</p>
<ul>
<li><code>ACTIVE</code> - Active</li>
<li><code>INACTIVE</code> - Inactive</li>
<li><code>ARCHIVED</code> - Archived</li>
</ul>
",
            "key": "status",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:DeploymentReadStatusEnum",
              },
              "type": "optional",
            },
          },
          Object {
            "description": "The environment this deployment is used in

* \`DEVELOPMENT\` - Development
* \`STAGING\` - Staging
* \`PRODUCTION\` - Production",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The environment this deployment is used in</p>
<ul>
<li><code>DEVELOPMENT</code> - Development</li>
<li><code>STAGING</code> - Staging</li>
<li><code>PRODUCTION</code> - Production</li>
</ul>
",
            "key": "environment",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:EnvironmentEnum",
              },
              "type": "optional",
            },
          },
          Object {
            "description": "The type of model this deployment serves

* \`GENERATE\` - Generate
* \`CLASSIFY\` - Classify",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The type of model this deployment serves</p>
<ul>
<li><code>GENERATE</code> - Generate</li>
<li><code>CLASSIFY</code> - Classify</li>
</ul>
",
            "key": "model_type",
            "valueType": Object {
              "type": "id",
              "value": "type_:ModelTypeEnum",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "active_model_version_ids",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "list",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "last_deployed_on",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:DeploymentReadStatusEnum": Object {
      "description": "* \`ACTIVE\` - Active
* \`INACTIVE\` - Inactive
* \`ARCHIVED\` - Archived",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<ul>
<li><code>ACTIVE</code> - Active</li>
<li><code>INACTIVE</code> - Inactive</li>
<li><code>ARCHIVED</code> - Archived</li>
</ul>
",
      "name": "DeploymentReadStatusEnum",
      "shape": Object {
        "type": "enum",
        "values": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "ACTIVE",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "INACTIVE",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "ARCHIVED",
          },
        ],
      },
    },
    "type_:Document": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "Document",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The ID of the document.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The ID of the document.</p>
",
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "The human-readable name for the document. <span style=\\"white-space: nowrap\\">\`<= 1000 characters\`</span> ",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The human-readable name for the document. <span style=\\"white-space: nowrap\\"><code>&lt;= 1000 characters</code></span> </p>
",
            "key": "label",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "The unique ID of the document as represented in an external system and specified when it was originally uploaded.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The unique ID of the document as represented in an external system and specified when it was originally uploaded.</p>
",
            "key": "external_id",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:DocumentDocumentToDocumentIndex": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "DocumentDocumentToDocumentIndex",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "Vellum-generated ID that uniquely identifies this link.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Vellum-generated ID that uniquely identifies this link.</p>
",
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "Vellum-generated ID that uniquely identifies the index this document is included in.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Vellum-generated ID that uniquely identifies the index this document is included in.</p>
",
            "key": "document_index_id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "An enum value representing where this document is along its indexing lifecycle for this index.

* \`AWAITING_PROCESSING\` - Awaiting Processing
* \`QUEUED\` - Queued
* \`INDEXING\` - Indexing
* \`INDEXED\` - Indexed
* \`FAILED\` - Failed",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>An enum value representing where this document is along its indexing lifecycle for this index.</p>
<ul>
<li><code>AWAITING_PROCESSING</code> - Awaiting Processing</li>
<li><code>QUEUED</code> - Queued</li>
<li><code>INDEXING</code> - Indexing</li>
<li><code>INDEXED</code> - Indexed</li>
<li><code>FAILED</code> - Failed</li>
</ul>
",
            "key": "indexing_state",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:IndexingStateEnum",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:DocumentIndexRead": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "DocumentIndexRead",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "created",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "A human-readable label for the document index <span style=\\"white-space: nowrap\\">\`<= 150 characters\`</span> ",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>A human-readable label for the document index <span style=\\"white-space: nowrap\\"><code>&lt;= 150 characters</code></span> </p>
",
            "key": "label",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "A name that uniquely identifies this index within its workspace <span style=\\"white-space: nowrap\\">\`<= 150 characters\`</span> ",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>A name that uniquely identifies this index within its workspace <span style=\\"white-space: nowrap\\"><code>&lt;= 150 characters</code></span> </p>
",
            "key": "name",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "The current status of the document index

* \`ACTIVE\` - Active
* \`ARCHIVED\` - Archived",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The current status of the document index</p>
<ul>
<li><code>ACTIVE</code> - Active</li>
<li><code>ARCHIVED</code> - Archived</li>
</ul>
",
            "key": "status",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:DocumentIndexStatus",
              },
              "type": "optional",
            },
          },
          Object {
            "description": "The environment this document index is used in

* \`DEVELOPMENT\` - Development
* \`STAGING\` - Staging
* \`PRODUCTION\` - Production",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The environment this document index is used in</p>
<ul>
<li><code>DEVELOPMENT</code> - Development</li>
<li><code>STAGING</code> - Staging</li>
<li><code>PRODUCTION</code> - Production</li>
</ul>
",
            "key": "environment",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:EnvironmentEnum",
              },
              "type": "optional",
            },
          },
          Object {
            "description": "Configuration representing how documents should be indexed",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Configuration representing how documents should be indexed</p>
",
            "key": "indexing_config",
            "valueType": Object {
              "keyType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "map",
              "valueType": Object {
                "type": "unknown",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:DocumentIndexStatus": Object {
      "description": "* \`ACTIVE\` - Active
* \`ARCHIVED\` - Archived",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<ul>
<li><code>ACTIVE</code> - Active</li>
<li><code>ARCHIVED</code> - Archived</li>
</ul>
",
      "name": "DocumentIndexStatus",
      "shape": Object {
        "type": "enum",
        "values": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "ACTIVE",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "ARCHIVED",
          },
        ],
      },
    },
    "type_:EnrichedNormalizedCompletion": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "EnrichedNormalizedCompletion",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The Vellum-generated ID of the completion.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The Vellum-generated ID of the completion.</p>
",
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "The external ID that was originally provided along with the generation request, which uniquely identifies this generation in an external system.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The external ID that was originally provided along with the generation request, which uniquely identifies this generation in an external system.</p>
",
            "key": "external_id",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": "The text generated by the LLM.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The text generated by the LLM.</p>
",
            "key": "text",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "The reason the generation finished.

* \`LENGTH\` - LENGTH
* \`STOP\` - STOP
* \`UNKNOWN\` - UNKNOWN",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The reason the generation finished.</p>
<ul>
<li><code>LENGTH</code> - LENGTH</li>
<li><code>STOP</code> - STOP</li>
<li><code>UNKNOWN</code> - UNKNOWN</li>
</ul>
",
            "key": "finish_reason",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:FinishReasonEnum",
              },
              "type": "optional",
            },
          },
          Object {
            "description": "The logprobs of the completion. Only present if specified in the original request options.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The logprobs of the completion. Only present if specified in the original request options.</p>
",
            "key": "logprobs",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:NormalizedLogProbs",
              },
              "type": "optional",
            },
          },
          Object {
            "description": "The ID of the model version used to generate this completion.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The ID of the model version used to generate this completion.</p>
",
            "key": "model_version_id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "type",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:ContentType",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:EnvironmentEnum": Object {
      "description": "* \`DEVELOPMENT\` - Development
* \`STAGING\` - Staging
* \`PRODUCTION\` - Production",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<ul>
<li><code>DEVELOPMENT</code> - Development</li>
<li><code>STAGING</code> - Staging</li>
<li><code>PRODUCTION</code> - Production</li>
</ul>
",
      "name": "EnvironmentEnum",
      "shape": Object {
        "type": "enum",
        "values": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "DEVELOPMENT",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "STAGING",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "PRODUCTION",
          },
        ],
      },
    },
    "type_:EvaluationParams": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "EvaluationParams",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The target value to compare the LLM output against. Typically what you expect or desire the LLM output to be.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The target value to compare the LLM output against. Typically what you expect or desire the LLM output to be.</p>
",
            "key": "target",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:EvaluationParamsRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "EvaluationParamsRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The target value to compare the LLM output against. Typically what you expect or desire the LLM output to be.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The target value to compare the LLM output against. Typically what you expect or desire the LLM output to be.</p>
",
            "key": "target",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:FinishReasonEnum": Object {
      "description": "* \`LENGTH\` - LENGTH
* \`STOP\` - STOP
* \`UNKNOWN\` - UNKNOWN",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<ul>
<li><code>LENGTH</code> - LENGTH</li>
<li><code>STOP</code> - STOP</li>
<li><code>UNKNOWN</code> - UNKNOWN</li>
</ul>
",
      "name": "FinishReasonEnum",
      "shape": Object {
        "type": "enum",
        "values": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "LENGTH",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "STOP",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "UNKNOWN",
          },
        ],
      },
    },
    "type_:GenerateErrorResponse": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "GenerateErrorResponse",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "Details about why the request failed.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Details about why the request failed.</p>
",
            "key": "detail",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateOptionsRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "GenerateOptionsRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "Which logprobs to include, if any. Defaults to NONE.

* \`ALL\` - ALL
* \`NONE\` - NONE",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Which logprobs to include, if any. Defaults to NONE.</p>
<ul>
<li><code>ALL</code> - ALL</li>
<li><code>NONE</code> - NONE</li>
</ul>
",
            "key": "logprobs",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:LogprobsEnum",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "GenerateRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "Key/value pairs for each template variable defined in the deployment's prompt.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Key/value pairs for each template variable defined in the deployment&#39;s prompt.</p>
",
            "key": "input_values",
            "valueType": Object {
              "keyType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "map",
              "valueType": Object {
                "type": "unknown",
              },
            },
          },
          Object {
            "description": "Optionally provide a list of chat messages that'll be used in place of the special {$chat_history} variable, if included in the prompt.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Optionally provide a list of chat messages that&#39;ll be used in place of the special {$chat_history} variable, if included in the prompt.</p>
",
            "key": "chat_history",
            "valueType": Object {
              "itemType": Object {
                "itemType": Object {
                  "type": "id",
                  "value": "type_:ChatMessageRequest",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          Object {
            "description": "Optionally include a unique identifier for each generation, as represented outside of Vellum. Note that this should generally be a list of length one.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Optionally include a unique identifier for each generation, as represented outside of Vellum. Note that this should generally be a list of length one.</p>
",
            "key": "external_ids",
            "valueType": Object {
              "itemType": Object {
                "itemType": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateResponse": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "GenerateResponse",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The results of each generation request.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The results of each generation request.</p>
",
            "key": "results",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:GenerateResult",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateResult": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "GenerateResult",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "An object containing the resulting generation. This key will be absent if the LLM provider experienced an error.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>An object containing the resulting generation. This key will be absent if the LLM provider experienced an error.</p>
",
            "key": "data",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:GenerateResultData",
              },
              "type": "optional",
            },
          },
          Object {
            "description": "An object containing details about the error that occurred. This key will be absent if the LLM provider did not experience an error.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>An object containing details about the error that occurred. This key will be absent if the LLM provider did not experience an error.</p>
",
            "key": "error",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:GenerateResultError",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateResultData": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "GenerateResultData",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The generated completions. This will generally be a list of length one.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The generated completions. This will generally be a list of length one.</p>
",
            "key": "completions",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:EnrichedNormalizedCompletion",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateResultError": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "GenerateResultError",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The error message returned by the LLM provider.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The error message returned by the LLM provider.</p>
",
            "key": "message",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateStreamResponse": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "GenerateStreamResponse",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "delta",
            "valueType": Object {
              "type": "id",
              "value": "type_:GenerateStreamResult",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateStreamResult": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "GenerateStreamResult",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "request_index",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "integer",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "data",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:GenerateStreamResultData",
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "error",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:GenerateResultError",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateStreamResultData": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "GenerateStreamResultData",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "completion_index",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "integer",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "completion",
            "valueType": Object {
              "type": "id",
              "value": "type_:EnrichedNormalizedCompletion",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:IndexingStateEnum": Object {
      "description": "* \`AWAITING_PROCESSING\` - Awaiting Processing
* \`QUEUED\` - Queued
* \`INDEXING\` - Indexing
* \`INDEXED\` - Indexed
* \`FAILED\` - Failed",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<ul>
<li><code>AWAITING_PROCESSING</code> - Awaiting Processing</li>
<li><code>QUEUED</code> - Queued</li>
<li><code>INDEXING</code> - Indexing</li>
<li><code>INDEXED</code> - Indexed</li>
<li><code>FAILED</code> - Failed</li>
</ul>
",
      "name": "IndexingStateEnum",
      "shape": Object {
        "type": "enum",
        "values": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "AWAITING_PROCESSING",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "QUEUED",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "INDEXING",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "INDEXED",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "FAILED",
          },
        ],
      },
    },
    "type_:LogprobsEnum": Object {
      "description": "* \`ALL\` - ALL
* \`NONE\` - NONE",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<ul>
<li><code>ALL</code> - ALL</li>
<li><code>NONE</code> - NONE</li>
</ul>
",
      "name": "LogprobsEnum",
      "shape": Object {
        "type": "enum",
        "values": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "ALL",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "NONE",
          },
        ],
      },
    },
    "type_:ModelTypeEnum": Object {
      "description": "* \`GENERATE\` - Generate
* \`CLASSIFY\` - Classify",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<ul>
<li><code>GENERATE</code> - Generate</li>
<li><code>CLASSIFY</code> - Classify</li>
</ul>
",
      "name": "ModelTypeEnum",
      "shape": Object {
        "type": "enum",
        "values": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "GENERATE",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "CLASSIFY",
          },
        ],
      },
    },
    "type_:ModelVersionBuildConfig": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "ModelVersionBuildConfig",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The name of the base model used to create this model version, as identified by the LLM provider.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The name of the base model used to create this model version, as identified by the LLM provider.</p>
",
            "key": "base_model",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "Information about the sandbox snapshot that was used to create this model version, if applicable.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Information about the sandbox snapshot that was used to create this model version, if applicable.</p>
",
            "key": "sandbox_snapshot",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:ModelVersionSandboxSnapshot",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ModelVersionCompilePromptResponse": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "ModelVersionCompilePromptResponse",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "Information about the compiled prompt.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Information about the compiled prompt.</p>
",
            "key": "prompt",
            "valueType": Object {
              "type": "id",
              "value": "type_:ModelVersionCompiledPrompt",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ModelVersionCompiledPrompt": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "ModelVersionCompiledPrompt",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The fully compiled prompt in normalized ChatML syntax after all variable substitutions and templating functions are applied.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The fully compiled prompt in normalized ChatML syntax after all variable substitutions and templating functions are applied.</p>
",
            "key": "text",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "The approximate number of tokens used by the compiled prompt.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The approximate number of tokens used by the compiled prompt.</p>
",
            "key": "num_tokens",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ModelVersionExecConfig": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "ModelVersionExecConfig",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The generation parameters that are passed to the LLM provider at runtime.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The generation parameters that are passed to the LLM provider at runtime.</p>
",
            "key": "parameters",
            "valueType": Object {
              "type": "id",
              "value": "type_:ModelVersionExecConfigParameters",
            },
          },
          Object {
            "description": "Names of the input variables specified in the prompt template.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Names of the input variables specified in the prompt template.</p>
",
            "key": "input_variables",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:PromptTemplateInputVariable",
              },
              "type": "list",
            },
          },
          Object {
            "description": "The template used to generate prompts for this model version.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The template used to generate prompts for this model version.</p>
",
            "key": "prompt_template",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "prompt_block_data",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:PromptTemplateBlockData",
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "prompt_syntax_version",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ModelVersionExecConfigParameters": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "ModelVersionExecConfigParameters",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "temperature",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "max_tokens",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "integer",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "top_p",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "frequency_penalty",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "presence_penalty",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "logit_bias",
            "valueType": Object {
              "itemType": Object {
                "keyType": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": Object {
                  "itemType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "double",
                    },
                  },
                  "type": "optional",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "stop",
            "valueType": Object {
              "itemType": Object {
                "itemType": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "top_k",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ModelVersionRead": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "ModelVersionRead",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "Vellum-generated ID that uniquely identifies this model version.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Vellum-generated ID that uniquely identifies this model version.</p>
",
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "Timestamp of when this model version was created.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Timestamp of when this model version was created.</p>
",
            "key": "created",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "Human-friendly name for this model version. <span style=\\"white-space: nowrap\\">\`<= 150 characters\`</span> ",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Human-friendly name for this model version. <span style=\\"white-space: nowrap\\"><code>&lt;= 150 characters</code></span> </p>
",
            "key": "label",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "The type of task this model is used for.

* \`GENERATE\` - Generate
* \`CLASSIFY\` - Classify",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The type of task this model is used for.</p>
<ul>
<li><code>GENERATE</code> - Generate</li>
<li><code>CLASSIFY</code> - Classify</li>
</ul>
",
            "key": "model_type",
            "valueType": Object {
              "type": "id",
              "value": "type_:ModelTypeEnum",
            },
          },
          Object {
            "description": "Which LLM provider this model version is associated with.

* \`ANTHROPIC\` - Anthropic
* \`COHERE\` - Cohere
* \`GOOGLE\` - Google
* \`HOSTED\` - Hosted
* \`MOSAICML\` - MosaicML
* \`OPENAI\` - OpenAI
* \`PYQ\` - Pyq",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Which LLM provider this model version is associated with.</p>
<ul>
<li><code>ANTHROPIC</code> - Anthropic</li>
<li><code>COHERE</code> - Cohere</li>
<li><code>GOOGLE</code> - Google</li>
<li><code>HOSTED</code> - Hosted</li>
<li><code>MOSAICML</code> - MosaicML</li>
<li><code>OPENAI</code> - OpenAI</li>
<li><code>PYQ</code> - Pyq</li>
</ul>
",
            "key": "provider",
            "valueType": Object {
              "type": "id",
              "value": "type_:ProviderEnum",
            },
          },
          Object {
            "description": "The unique id of this model version as it exists in the above provider's system. <span style=\\"white-space: nowrap\\">\`<= 250 characters\`</span> ",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The unique id of this model version as it exists in the above provider&#39;s system. <span style=\\"white-space: nowrap\\"><code>&lt;= 250 characters</code></span> </p>
",
            "key": "external_id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "Configuration used to build this model version.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Configuration used to build this model version.</p>
",
            "key": "build_config",
            "valueType": Object {
              "type": "id",
              "value": "type_:ModelVersionBuildConfig",
            },
          },
          Object {
            "description": "Configuration used to execute this model version.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Configuration used to execute this model version.</p>
",
            "key": "exec_config",
            "valueType": Object {
              "type": "id",
              "value": "type_:ModelVersionExecConfig",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "status",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:ModelVersionReadStatusEnum",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ModelVersionReadStatusEnum": Object {
      "description": "* \`CREATING\` - Creating
* \`READY\` - Ready
* \`CREATION_FAILED\` - Creation Failed
* \`DISABLED\` - Disabled",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<ul>
<li><code>CREATING</code> - Creating</li>
<li><code>READY</code> - Ready</li>
<li><code>CREATION_FAILED</code> - Creation Failed</li>
<li><code>DISABLED</code> - Disabled</li>
</ul>
",
      "name": "ModelVersionReadStatusEnum",
      "shape": Object {
        "type": "enum",
        "values": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "CREATING",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "READY",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "CREATION_FAILED",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "DISABLED",
          },
        ],
      },
    },
    "type_:ModelVersionSandboxSnapshot": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "ModelVersionSandboxSnapshot",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The ID of the sandbox snapshot.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The ID of the sandbox snapshot.</p>
",
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "The index of the prompt in the sandbox snapshot.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The index of the prompt in the sandbox snapshot.</p>
",
            "key": "prompt_index",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": "The id of the prompt in the sandbox snapshot.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The id of the prompt in the sandbox snapshot.</p>
",
            "key": "prompt_id",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "sandbox_id",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:NormalizedLogProbs": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "NormalizedLogProbs",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "tokens",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:NormalizedTokenLogProbs",
              },
              "type": "list",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "likelihood",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:NormalizedTokenLogProbs": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "NormalizedTokenLogProbs",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "token",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "logprob",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "top_logprobs",
            "valueType": Object {
              "itemType": Object {
                "keyType": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": Object {
                  "itemType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "double",
                    },
                  },
                  "type": "optional",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "text_offset",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PaginatedSlimDocumentList": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "PaginatedSlimDocumentList",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "count",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "next",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "previous",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "results",
            "valueType": Object {
              "itemType": Object {
                "itemType": Object {
                  "type": "id",
                  "value": "type_:SlimDocument",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ProcessingFailureReasonEnum": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "ProcessingFailureReasonEnum",
      "shape": Object {
        "type": "alias",
        "value": Object {
          "type": "literal",
          "value": Object {
            "type": "stringLiteral",
            "value": "EXCEEDED_CHARACTER_LIMIT",
          },
        },
      },
    },
    "type_:ProcessingStateEnum": Object {
      "description": "* \`QUEUED\` - Queued
* \`PROCESSING\` - Processing
* \`PROCESSED\` - Processed
* \`FAILED\` - Failed",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<ul>
<li><code>QUEUED</code> - Queued</li>
<li><code>PROCESSING</code> - Processing</li>
<li><code>PROCESSED</code> - Processed</li>
<li><code>FAILED</code> - Failed</li>
</ul>
",
      "name": "ProcessingStateEnum",
      "shape": Object {
        "type": "enum",
        "values": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "QUEUED",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "PROCESSING",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "PROCESSED",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "FAILED",
          },
        ],
      },
    },
    "type_:PromptTemplateBlock": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "PromptTemplateBlock",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "block_type",
            "valueType": Object {
              "type": "id",
              "value": "type_:BlockTypeEnum",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "properties",
            "valueType": Object {
              "type": "id",
              "value": "type_:PromptTemplateBlockProperties",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PromptTemplateBlockData": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "PromptTemplateBlockData",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "version",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "integer",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "blocks",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:PromptTemplateBlock",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PromptTemplateBlockDataRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "PromptTemplateBlockDataRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "version",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "integer",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "blocks",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:PromptTemplateBlockRequest",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PromptTemplateBlockProperties": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "PromptTemplateBlockProperties",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "chat_role",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:ChatMessageRole",
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "chat_message_unterminated",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "template",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "template_type",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:ContentType",
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "function_name",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "function_description",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "function_parameters",
            "valueType": Object {
              "itemType": Object {
                "keyType": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": Object {
                  "type": "unknown",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "blocks",
            "valueType": Object {
              "itemType": Object {
                "itemType": Object {
                  "type": "id",
                  "value": "type_:PromptTemplateBlock",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PromptTemplateBlockPropertiesRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "PromptTemplateBlockPropertiesRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "chat_role",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:ChatMessageRole",
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "chat_message_unterminated",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "template",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "template_type",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:ContentType",
              },
              "type": "optional",
            },
          },
          Object {
            "description": "<span style=\\"white-space: nowrap\\">\`non-empty\`</span>",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p><span style=\\"white-space: nowrap\\"><code>non-empty</code></span></p>
",
            "key": "function_name",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": "<span style=\\"white-space: nowrap\\">\`non-empty\`</span>",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p><span style=\\"white-space: nowrap\\"><code>non-empty</code></span></p>
",
            "key": "function_description",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "function_parameters",
            "valueType": Object {
              "itemType": Object {
                "keyType": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": Object {
                  "type": "unknown",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "blocks",
            "valueType": Object {
              "itemType": Object {
                "itemType": Object {
                  "type": "id",
                  "value": "type_:PromptTemplateBlockRequest",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PromptTemplateBlockRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "PromptTemplateBlockRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "<span style=\\"white-space: nowrap\\">\`non-empty\`</span>",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p><span style=\\"white-space: nowrap\\"><code>non-empty</code></span></p>
",
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "block_type",
            "valueType": Object {
              "type": "id",
              "value": "type_:BlockTypeEnum",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "properties",
            "valueType": Object {
              "type": "id",
              "value": "type_:PromptTemplateBlockPropertiesRequest",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PromptTemplateInputVariable": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "PromptTemplateInputVariable",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The name of the input variable.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The name of the input variable.</p>
",
            "key": "key",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PromptTemplateInputVariableRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "PromptTemplateInputVariableRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The name of the input variable. <span style=\\"white-space: nowrap\\">\`non-empty\`</span> ",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The name of the input variable. <span style=\\"white-space: nowrap\\"><code>non-empty</code></span> </p>
",
            "key": "key",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ProviderEnum": Object {
      "description": "* \`ANTHROPIC\` - Anthropic
* \`COHERE\` - Cohere
* \`GOOGLE\` - Google
* \`HOSTED\` - Hosted
* \`MOSAICML\` - MosaicML
* \`OPENAI\` - OpenAI
* \`PYQ\` - Pyq",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<ul>
<li><code>ANTHROPIC</code> - Anthropic</li>
<li><code>COHERE</code> - Cohere</li>
<li><code>GOOGLE</code> - Google</li>
<li><code>HOSTED</code> - Hosted</li>
<li><code>MOSAICML</code> - MosaicML</li>
<li><code>OPENAI</code> - OpenAI</li>
<li><code>PYQ</code> - Pyq</li>
</ul>
",
      "name": "ProviderEnum",
      "shape": Object {
        "type": "enum",
        "values": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "ANTHROPIC",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "COHERE",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "GOOGLE",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "HOSTED",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "MOSAICML",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "OPENAI",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "PYQ",
          },
        ],
      },
    },
    "type_:RegisterPromptErrorResponse": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "RegisterPromptErrorResponse",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "Details about why the request failed.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Details about why the request failed.</p>
",
            "key": "detail",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisterPromptModelParametersRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "RegisterPromptModelParametersRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "temperature",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "max_tokens",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "integer",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "stop",
            "valueType": Object {
              "itemType": Object {
                "itemType": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "top_p",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "top_k",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "frequency_penalty",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "presence_penalty",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "logit_bias",
            "valueType": Object {
              "itemType": Object {
                "keyType": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": Object {
                  "itemType": Object {
                    "type": "primitive",
                    "value": Object {
                      "type": "double",
                    },
                  },
                  "type": "optional",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisterPromptPrompt": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "RegisterPromptPrompt",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The ID of the generated prompt.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The ID of the generated prompt.</p>
",
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "A human-friendly label for the generated prompt.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>A human-friendly label for the generated prompt.</p>
",
            "key": "label",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisterPromptPromptInfoRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "RegisterPromptPromptInfoRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "prompt_syntax_version",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "prompt_block_data",
            "valueType": Object {
              "type": "id",
              "value": "type_:PromptTemplateBlockDataRequest",
            },
          },
          Object {
            "description": "Names of the input variables specified in the prompt template.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Names of the input variables specified in the prompt template.</p>
",
            "key": "input_variables",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:PromptTemplateInputVariableRequest",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisterPromptResponse": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "RegisterPromptResponse",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "Information about the generated prompt",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Information about the generated prompt</p>
",
            "key": "prompt",
            "valueType": Object {
              "type": "id",
              "value": "type_:RegisterPromptPrompt",
            },
          },
          Object {
            "description": "Information about the generated sandbox snapshot",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Information about the generated sandbox snapshot</p>
",
            "key": "sandbox_snapshot",
            "valueType": Object {
              "type": "id",
              "value": "type_:RegisteredPromptSandboxSnapshot",
            },
          },
          Object {
            "description": "Information about the generated sandbox",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Information about the generated sandbox</p>
",
            "key": "sandbox",
            "valueType": Object {
              "type": "id",
              "value": "type_:RegisteredPromptSandbox",
            },
          },
          Object {
            "description": "Information about the generated model version",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Information about the generated model version</p>
",
            "key": "model_version",
            "valueType": Object {
              "type": "id",
              "value": "type_:RegisteredPromptModelVersion",
            },
          },
          Object {
            "description": "Information about the generated deployment",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Information about the generated deployment</p>
",
            "key": "deployment",
            "valueType": Object {
              "type": "id",
              "value": "type_:RegisteredPromptDeployment",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisteredPromptDeployment": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "RegisteredPromptDeployment",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The ID of the generated deployment.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The ID of the generated deployment.</p>
",
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "A uniquely-identifying name for generated deployment.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>A uniquely-identifying name for generated deployment.</p>
",
            "key": "name",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "A human-friendly label for the generated deployment.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>A human-friendly label for the generated deployment.</p>
",
            "key": "label",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisteredPromptModelVersion": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "RegisteredPromptModelVersion",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The ID of the generated model version.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The ID of the generated model version.</p>
",
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "A human-friendly label for the generated model version.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>A human-friendly label for the generated model version.</p>
",
            "key": "label",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisteredPromptSandbox": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "RegisteredPromptSandbox",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The ID of the generated sandbox.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The ID of the generated sandbox.</p>
",
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "A human-friendly label for the generated sandbox.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>A human-friendly label for the generated sandbox.</p>
",
            "key": "label",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisteredPromptSandboxSnapshot": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "RegisteredPromptSandboxSnapshot",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The ID of the generated sandbox snapshot.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The ID of the generated sandbox snapshot.</p>
",
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SandboxMetricInputParams": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "SandboxMetricInputParams",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "params",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:EvaluationParams",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SandboxMetricInputParamsRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "SandboxMetricInputParamsRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "params",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:EvaluationParamsRequest",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SandboxScenario": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "SandboxScenario",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "label",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": "The inputs for the scenario",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The inputs for the scenario</p>
",
            "key": "inputs",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:ScenarioInput",
              },
              "type": "list",
            },
          },
          Object {
            "description": "The id of the scenario",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The id of the scenario</p>
",
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "metric_input_params",
            "valueType": Object {
              "type": "id",
              "value": "type_:SandboxMetricInputParams",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ScenarioInput": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "ScenarioInput",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "key",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "type",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:ScenarioInputTypeEnum",
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "value",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "chat_history",
            "valueType": Object {
              "itemType": Object {
                "itemType": Object {
                  "type": "id",
                  "value": "type_:ChatMessage",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ScenarioInputRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "ScenarioInputRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "<span style=\\"white-space: nowrap\\">\`non-empty\`</span>",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p><span style=\\"white-space: nowrap\\"><code>non-empty</code></span></p>
",
            "key": "key",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "type",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:ScenarioInputTypeEnum",
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "value",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "chat_history",
            "valueType": Object {
              "itemType": Object {
                "itemType": Object {
                  "type": "id",
                  "value": "type_:ChatMessageRequest",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ScenarioInputTypeEnum": Object {
      "description": "* \`TEXT\` - Text
* \`CHAT_HISTORY\` - Chat History",
      "descriptionContainsMarkdown": true,
      "htmlDescription": "<ul>
<li><code>TEXT</code> - Text</li>
<li><code>CHAT_HISTORY</code> - Chat History</li>
</ul>
",
      "name": "ScenarioInputTypeEnum",
      "shape": Object {
        "type": "enum",
        "values": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "TEXT",
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "value": "CHAT_HISTORY",
          },
        ],
      },
    },
    "type_:SearchErrorResponse": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "SearchErrorResponse",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "Details about why the request failed.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Details about why the request failed.</p>
",
            "key": "detail",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SearchFiltersRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "SearchFiltersRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The document external IDs to filter by",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The document external IDs to filter by</p>
",
            "key": "external_ids",
            "valueType": Object {
              "itemType": Object {
                "itemType": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SearchRequestOptionsRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "SearchRequestOptionsRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The maximum number of results to return.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The maximum number of results to return.</p>
",
            "key": "limit",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": "The weights to use for the search. Must add up to 1.0.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The weights to use for the search. Must add up to 1.0.</p>
",
            "key": "weights",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:SearchWeightsRequest",
              },
              "type": "optional",
            },
          },
          Object {
            "description": "The configuration for merging results.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The configuration for merging results.</p>
",
            "key": "result_merging",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:SearchResultMergingRequest",
              },
              "type": "optional",
            },
          },
          Object {
            "description": "The filters to apply to the search.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The filters to apply to the search.</p>
",
            "key": "filters",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:SearchFiltersRequest",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SearchResponse": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "SearchResponse",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The results of the search. Each result represents a chunk that matches the search query.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The results of the search. Each result represents a chunk that matches the search query.</p>
",
            "key": "results",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:SearchResult",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SearchResult": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "SearchResult",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The document that contains the chunk that matched the search query.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The document that contains the chunk that matched the search query.</p>
",
            "key": "document",
            "valueType": Object {
              "type": "id",
              "value": "type_:Document",
            },
          },
          Object {
            "description": "The text of the chunk that matched the search query.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The text of the chunk that matched the search query.</p>
",
            "key": "text",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "keywords",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "list",
            },
          },
          Object {
            "description": "A score representing how well the chunk matches the search query.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>A score representing how well the chunk matches the search query.</p>
",
            "key": "score",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SearchResultMergingRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "SearchResultMergingRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "Whether to enable merging results",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Whether to enable merging results</p>
",
            "key": "enabled",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "boolean",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SearchWeightsRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "SearchWeightsRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The relative weight to give to semantic similarity",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The relative weight to give to semantic similarity</p>
",
            "key": "semantic_similarity",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
          Object {
            "description": "The relative weight to give to keyword matches",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The relative weight to give to keyword matches</p>
",
            "key": "keywords",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "double",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SlimDocument": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "SlimDocument",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "Vellum-generated ID that uniquely identifies this document.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Vellum-generated ID that uniquely identifies this document.</p>
",
            "key": "id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "The external ID that was originally provided when uploading the document.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The external ID that was originally provided when uploading the document.</p>
",
            "key": "external_id",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": "A timestamp representing when this document was most recently uploaded.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>A timestamp representing when this document was most recently uploaded.</p>
",
            "key": "last_uploaded_at",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "Human-friendly name for this document. <span style=\\"white-space: nowrap\\">\`<= 1000 characters\`</span> ",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Human-friendly name for this document. <span style=\\"white-space: nowrap\\"><code>&lt;= 1000 characters</code></span> </p>
",
            "key": "label",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
          Object {
            "description": "An enum value representing where this document is along its processing lifecycle. Note that this is different than its indexing lifecycle.

* \`QUEUED\` - Queued
* \`PROCESSING\` - Processing
* \`PROCESSED\` - Processed
* \`FAILED\` - Failed",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>An enum value representing where this document is along its processing lifecycle. Note that this is different than its indexing lifecycle.</p>
<ul>
<li><code>QUEUED</code> - Queued</li>
<li><code>PROCESSING</code> - Processing</li>
<li><code>PROCESSED</code> - Processed</li>
<li><code>FAILED</code> - Failed</li>
</ul>
",
            "key": "processing_state",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:ProcessingStateEnum",
              },
              "type": "optional",
            },
          },
          Object {
            "description": "An enum value representing why the document could not be processed. Is null unless processing_state is FAILED.

* \`EXCEEDED_CHARACTER_LIMIT\` - Exceeded Character Limit",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>An enum value representing why the document could not be processed. Is null unless processing_state is FAILED.</p>
<ul>
<li><code>EXCEEDED_CHARACTER_LIMIT</code> - Exceeded Character Limit</li>
</ul>
",
            "key": "processing_failure_reason",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:ProcessingFailureReasonEnum",
              },
              "type": "optional",
            },
          },
          Object {
            "description": "The document's current status.

* \`ACTIVE\` - Active",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The document&#39;s current status.</p>
<ul>
<li><code>ACTIVE</code> - Active</li>
</ul>
",
            "key": "status",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:SlimDocumentStatusEnum",
              },
              "type": "optional",
            },
          },
          Object {
            "description": "A list of keywords associated with this document. Originally provided when uploading the document.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>A list of keywords associated with this document. Originally provided when uploading the document.</p>
",
            "key": "keywords",
            "valueType": Object {
              "itemType": Object {
                "itemType": Object {
                  "type": "primitive",
                  "value": Object {
                    "type": "string",
                  },
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "document_to_document_indexes",
            "valueType": Object {
              "itemType": Object {
                "type": "id",
                "value": "type_:DocumentDocumentToDocumentIndex",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SlimDocumentStatusEnum": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "SlimDocumentStatusEnum",
      "shape": Object {
        "type": "alias",
        "value": Object {
          "type": "literal",
          "value": Object {
            "type": "stringLiteral",
            "value": "ACTIVE",
          },
        },
      },
    },
    "type_:SubmitCompletionActualRequest": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "SubmitCompletionActualRequest",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The Vellum-generated ID of a previously generated completion. Must provide either this or external_id.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The Vellum-generated ID of a previously generated completion. Must provide either this or external_id.</p>
",
            "key": "id",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": "The external ID that was originally provided when generating the completion that you'd now like to submit actuals for. Must provide either this or id.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The external ID that was originally provided when generating the completion that you&#39;d now like to submit actuals for. Must provide either this or id.</p>
",
            "key": "external_id",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": "Text representing what the completion _should_ have been.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Text representing what the completion <em>should</em> have been.</p>
",
            "key": "text",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": "A number between 0 and 1 representing the quality of the completion. 0 is the worst, 1 is the best.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>A number between 0 and 1 representing the quality of the completion. 0 is the worst, 1 is the best.</p>
",
            "key": "quality",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": "Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.</p>
",
            "key": "timestamp",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SubmitCompletionActualsErrorResponse": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "SubmitCompletionActualsErrorResponse",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "detail",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:TestSuiteTestCase": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "TestSuiteTestCase",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The id of the test case to update. If none is provided, an id will be generated and a new test case will be appended.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The id of the test case to update. If none is provided, an id will be generated and a new test case will be appended.</p>
",
            "key": "test_case_id",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": "A human-friendly label for the test case.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>A human-friendly label for the test case.</p>
",
            "key": "label",
            "valueType": Object {
              "itemType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          Object {
            "description": "Key/value pairs for each input variable that the Test Suite expects.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Key/value pairs for each input variable that the Test Suite expects.</p>
",
            "key": "input_values",
            "valueType": Object {
              "keyType": Object {
                "type": "primitive",
                "value": Object {
                  "type": "string",
                },
              },
              "type": "map",
              "valueType": Object {
                "type": "unknown",
              },
            },
          },
          Object {
            "description": "Parameters to use when evaluating the test case, specific to the test suite's evaluation metric.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>Parameters to use when evaluating the test case, specific to the test suite&#39;s evaluation metric.</p>
",
            "key": "evaluation_params",
            "valueType": Object {
              "type": "id",
              "value": "type_:EvaluationParams",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:UploadDocumentErrorResponse": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "UploadDocumentErrorResponse",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": undefined,
            "descriptionContainsMarkdown": false,
            "htmlDescription": undefined,
            "key": "detail",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:UploadDocumentResponse": Object {
      "description": undefined,
      "descriptionContainsMarkdown": false,
      "htmlDescription": undefined,
      "name": "UploadDocumentResponse",
      "shape": Object {
        "extends": Array [],
        "properties": Array [
          Object {
            "description": "The ID of the newly created document.",
            "descriptionContainsMarkdown": true,
            "htmlDescription": "<p>The ID of the newly created document.</p>
",
            "key": "document_id",
            "valueType": Object {
              "type": "primitive",
              "value": Object {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
  },
}
`;
