name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: prj_QX3venU6jwRUmdt8ArfL8AU5r1d4
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: "buildwithfern"

on:
  push:
    tags:
      - ui@*

concurrency:
  group: app.buildwithfern.com

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && github.event_name == 'push'
    environment: Production - app.buildwithfern.com
    steps:
      - uses: actions/checkout@v4

      - name: Install
        uses: ./.github/actions/install
        with:
          install: false

      - name: Build & Deploy to Vercel
        id: deploy
        run: |
          pnpm install --global vercel@latest
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          DEPLOYMENT_URL="$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})"
          echo "::set-output name=deployment_url::$DEPLOYMENT_URL"

      - name: Revalidate all
        uses: ./.github/workflows/revalidate-all
        with:
          deployment_url: ${{ steps.deploy.outputs.deployment_url }}

      - name: Upload domains.txt for playwright tests
        uses: actions/upload-artifact@v3
        with:
          name: domains
          path: domains.txt

  smoke-test:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Smoke Test
        env:
          NPM_TOKEN: ${{ secrets.FERN_NPM_TOKEN }}
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
        run: |
          cd smoke-test
          npm install -g fern-api
          fern generate --docs --instance https://fern-platform-test.docs.buildwithfern.com
          VALUE=$(curl https://fern-platform-test.docs.buildwithfern.com/api-reference/imdb/create-movie)
          length=${#VALUE}
          # Assert that length is over 1000
          if [ $length -gt 1000 ]; then
              echo "Length is greater than 1000"
          else
              exit 1
          fi

  healthchecks:
    needs: deploy
    uses: ./.github/workflows/healthcheck.yml
    secrets: inherit
