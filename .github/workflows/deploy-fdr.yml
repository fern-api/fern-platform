name: Deploy FDR

on:
  push:
    branches: [master]
    tags: ["*"]
  # TODO: remove before merging
  pull_request:
    types: [opened, synchronize]

env:
  PACKAGE_NAME: "@fern-platform/fdr"
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: "buildwithfern"

jobs:
  deploy_dev:
    runs-on: ubuntu-latest
    # Only run on main push
    # TODO: uncomment before merging
    # if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - name: Install
        uses: ./.github/actions/install

      - name: ðŸ”Ž Has changed
        id: has-changed
        # if there are changes, npx turbo-ignore returns a failure exit code
        # which makes steps.has-changed.outputs.RESULT = 'true'
        run: npx turbo-ignore ${{ env.PACKAGE_NAME }} || echo "RESULT=true" >> $GITHUB_OUTPUT

      - name: Generate Fern SDKs
        run: |
          npm install -g fern-api
          fern generate --local --group local --log-level debug

      - name: Build and test
        run: pnpm turbo build lint test --filter=${{ env.PACKAGE_NAME }}

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: cdk deploy
        run: |
          git_version="$(scripts/git-version.sh)"
          pnpm run docker:dev "${git_version}"
          npm install -g aws-cdk
          pnpm install
          VERSION="${git_version}" pnpm --filter=@fern-platform=fdr-deploy deploy:dev

  deploy_prod:
    runs-on: ubuntu-latest
    # Only run on tag push
    if: github.ref_type == 'tag' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - name: Install
        uses: ./.github/actions/install

      - name: Generate Fern SDKs
        run: |
          npm install -g fern-api
          fern generate --local --group local --log-level debug

      - name: Build and test
        run: pnpm turbo build lint test --filter=${{ env.PACKAGE_NAME }}

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: cdk deploy
        run: |
          git_version="$(scripts/git-version.sh)"
          pnpm run docker:prod "${git_version}"
          npm install -g aws-cdk
          pnpm install
          cd apps/fdr-deploy
          VERSION="${git_version}" pnpm --filter=@fern-platform=fdr-deploy deploy:prod
