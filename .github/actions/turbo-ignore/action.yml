name: Turbo Ignore
description: Ignore unchanged files in a Vercel deployment

inputs:
  token:
    description: "The Vercel token to use for the deployment"
    required: true
  project:
    description: "The project to check for changes"
    required: true
  environment:
    description: "The environment that turbo-ignore is checking against"
    default: "preview"
  package:
    description: "The package to check for changes"
    required: true
  branch:
    description: "The branch to check for changes"
    required: false

outputs:
  continue:
    value: ${{ steps.ignore.outputs.continue }}
    description: "Whether to continue with the deployment or not"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
        fetch-depth: 10

    - uses: ./.github/actions/install

    - name: Ignore unchanged files
      shell: bash
      id: ignore
      run: |
        # if ${{ inputs.branch }} is present, then we change the script to --branch=${{ inputs.branch }}

        if [ -n "${{ inputs.branch }}" ]; then
          pnpm vercel-scripts last-deploy.txt ${{ inputs.project }} --token=${{ inputs.token }} --environment=${{ inputs.environment }} --branch=${{ inputs.branch }}
        else
          pnpm vercel-scripts last-deploy.txt ${{ inputs.project }} --token=${{ inputs.token }} --environment=${{ inputs.environment }}
        fi

        if [ ! -f last-deploy.txt ]; then
          FALLBACK="main"
        else
          FALLBACK=$(cat last-deploy.txt)
        fi

        set +e
        pnpx turbo-ignore ${{ inputs.package }} --fallback=$FALLBACK
        echo "continue=$?" >> $GITHUB_OUTPUT
