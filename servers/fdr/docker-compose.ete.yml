version: "3.8" # optional since v1.27.0
services:
  fern-definition-registry:
    image: fern-definition-registry:local
    ports:
      - 8080:8080
    environment:
      VENUS_URL: dummy
      AWS_ACCESS_KEY_ID: dummy
      AWS_SECRET_ACCESS_KEY: dummy
      PUBLIC_S3_BUCKET_NAME: dummy
      PUBLIC_S3_BUCKET_REGION: dummy
      PRIVATE_S3_BUCKET_NAME: dummy
      PRIVATE_S3_BUCKET_REGION: dummy
      API_DEFINITION_SOURCE_BUCKET_NAME: dummy
      API_DEFINITION_SOURCE_BUCKET_REGION: dummy
      DOMAIN_SUFFIX: dummy
      ALGOLIA_APP_ID: dummy
      ALGOLIA_ADMIN_API_KEY: dummy
      ALGOLIA_SEARCH_INDEX: dummy
      ALGOLIA_SEARCH_API_KEY: dummy
      SLACK_TOKEN: dummy
      DOCS_CACHE_ENDPOINT: redis_0:6379
      ENABLE_CUSTOMER_NOTIFICATIONS: "false"
      REDIS_ENABLED: "true"
      REDIS_CLUSTERING_ENABLED: "true"
      APPLICATION_ENVIRONMENT: ete
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:10.3
    restart: always
    environment:
      - POSTGRES_USER=fdr
      - POSTGRES_PASSWORD=fdr1!
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5434:5432"
  s3-mock:
    image: adobe/s3mock
    ports:
      - 9090:9090
      - 9191:9191
    environment:
      initialBuckets: fdr

  redis_0:
    image: bitnami/redis-cluster:latest
    restart: unless-stopped
    ports:
      - 6379:6379
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_CLUSTER_CREATOR: "yes"
      REDIS_CLUSTER_REPLICAS: 1
      REDIS_NODES: redis_0 redis_1 redis_2 redis_3 redis_4 redis_5
    depends_on:
      - redis_1
      - redis_2
      - redis_3
      - redis_4
      - redis_5

  redis_1:
    image: bitnami/redis-cluster:latest
    restart: unless-stopped
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_NODES: redis_0 redis_1 redis_2 redis_3 redis_4 redis_5

  redis_2:
    image: bitnami/redis-cluster:latest
    restart: unless-stopped
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_NODES: redis_0 redis_1 redis_2 redis_3 redis_4 redis_5

  redis_3:
    image: bitnami/redis-cluster:latest
    restart: unless-stopped
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_NODES: redis_0 redis_1 redis_2 redis_3 redis_4 redis_5

  redis_4:
    image: bitnami/redis-cluster:latest
    restart: unless-stopped
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_NODES: redis_0 redis_1 redis_2 redis_3 redis_4 redis_5

  redis_5:
    image: bitnami/redis-cluster:latest
    restart: unless-stopped
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_NODES: redis_0 redis_1 redis_2 redis_3 redis_4 redis_5
