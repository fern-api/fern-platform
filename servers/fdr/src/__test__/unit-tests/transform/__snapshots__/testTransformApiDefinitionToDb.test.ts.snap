// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transformApiDefinitionToDb {"name":"candid"} 1`] = `
{
  "auth": {
    "tokenName": "token",
    "type": "bearerAuth",
  },
  "globalHeaders": undefined,
  "hasMultipleBaseUrls": false,
  "id": "id",
  "navigation": undefined,
  "rootPackage": {
    "endpoints": [],
    "pointsTo": undefined,
    "subpackages": [
      "subpackage_auth",
      "subpackage_bulk-claim-actions",
      "subpackage_chargemasters",
      "subpackage_claim",
      "subpackage_encounter-providers",
      "subpackage_encounter-summaries",
      "subpackage_encounters-internal",
      "subpackage_encounters",
      "subpackage_expected-network-status-tia",
      "subpackage_expected-network-status",
      "subpackage_exports",
      "subpackage_fee-schedules",
      "subpackage_guarantor",
      "subpackage_insurance-adjustments",
      "subpackage_internal-api-testing",
      "subpackage_managed-emr-configs",
      "subpackage_organization-providers",
      "subpackage_patient-payments",
      "subpackage_remits",
      "subpackage_secondary-submission",
      "subpackage_service-line-ledgers",
      "subpackage_service-lines",
      "subpackage_tasks",
      "subpackage_users",
      "subpackage_work-queues",
      "subpackage_x12",
      "subpackage_adjustments",
      "subpackage_billing-notes",
      "subpackage_claim-submission",
      "subpackage_claims",
      "subpackage_cms-1500",
      "subpackage_commons",
      "subpackage_configurable-rules-types",
      "subpackage_configurable-rules-variables",
      "subpackage_configurable-rules",
      "subpackage_contracts",
      "subpackage_credentialing",
      "subpackage_dashboards",
      "subpackage_diagnoses",
      "subpackage_encounter_timeline",
      "subpackage_enrollments",
      "subpackage_era",
      "subpackage_identifiers",
      "subpackage_individual",
      "subpackage_insurance-card",
      "subpackage_invoices",
      "subpackage_organization-payers",
      "subpackage_organization-tags",
      "subpackage_page-sessions",
      "subpackage_patient-payment-configs",
      "subpackage_patients",
      "subpackage_payers",
      "subpackage_payment-account-configs",
      "subpackage_permissions",
      "subpackage_pipeline-commons",
      "subpackage_pipeline-configuration",
      "subpackage_rules_engine_types",
      "subpackage_service-facility",
      "subpackage_tags",
      "subpackage_test-fern",
      "subpackage_upload-validation",
    ],
    "types": [],
    "webhooks": [],
    "websockets": [],
  },
  "subpackages": {
    "subpackage_adjustments": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Returns all adjustments satisfying the search_terms AND whose organization_id matches
the current organization_id of the authenticated user
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/adjustments/v1",
              "pathParameters": {},
              "queryParameters": {
                "encounter_id": undefined,
                "limit": 0,
                "page_token": undefined,
                "patient_external_id": "string",
                "service_line_id": undefined,
                "sort": undefined,
                "source": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "adjustment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "adjustment_note": "string",
                    "amount_cents": 0,
                    "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "source": "ERA",
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "adjustment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "adjustment_note": "string",
                      "amount_cents": 0,
                      "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "source": "ERA",
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "getAll",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get All",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/adjustments/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "patient_external_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PatientExternalId",
                },
                "type": "optional",
              },
            },
            {
              "key": "encounter_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
                "type": "optional",
              },
            },
            {
              "key": "service_line_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:ServiceLineId",
                },
                "type": "optional",
              },
            },
            {
              "key": "source",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_adjustments:AdjustmentSource",
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to adjustment_timestamp_desc",
              "key": "sort",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_adjustments:AdjustmentSortOptions",
                },
                "type": "optional",
              },
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_adjustments:AdjustmentsPage",
              },
            },
          },
          "urlSlug": "get-all",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Returns the adjustment for the provided adjustment_id.
If the adjustment's organization_id does not match the current organization_id of the
authenticated user, then response code of 403 will be returned
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/adjustments/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "adjustment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "adjustment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "adjustment_note": "string",
                "amount_cents": 0,
                "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "source": "ERA",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "adjustment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "adjustment_note": "string",
                  "amount_cents": 0,
                  "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "source": "ERA",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/adjustments/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "adjustment_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "adjustment_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:AdjustmentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_adjustments:Adjustment",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Creates a new adjustment record and returns the newly created Adjustment object.
It is expected that the organization_id of the input adjustment object will match
the current organization_id of the auathenticated user. Otherwise, response code of 400 will be returned.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/adjustments/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "amount_cents": 0,
                "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "source": "ERA",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "amount_cents": 0,
                  "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "source": "ERA",
                },
              },
              "responseBody": {
                "adjustment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "adjustment_note": "string",
                "amount_cents": 0,
                "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "source": "ERA",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "adjustment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "adjustment_note": "string",
                  "amount_cents": 0,
                  "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "source": "ERA",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/adjustments/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_adjustments:AdjustmentCreate",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_adjustments:Adjustment",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Updates the adjustment record matching the provided adjustment_id.
If the matching record's organization_id does not match the authenticated user's
current organization_id, then a response code of \`403\` will be returned.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/adjustments/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "adjustment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "adjustment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "adjustment_note": "string",
                "amount_cents": 0,
                "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "source": "ERA",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "adjustment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "adjustment_note": "string",
                  "amount_cents": 0,
                  "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "source": "ERA",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/adjustments/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "adjustment_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "adjustment_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:AdjustmentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_adjustments:AdjustmentUpdate",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_adjustments:Adjustment",
              },
            },
          },
          "urlSlug": "update",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Deletes the adjustment record matching the provided adjustment_id.
If the matching record's organization_id does not match the authenticated user's
current organization_id, then a response code of \`403\` will be returned.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/adjustments/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "adjustment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "delete",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/adjustments/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "adjustment_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "adjustment_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:AdjustmentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete",
        },
      ],
      "name": "adjustments",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_adjustments",
      "subpackages": [],
      "types": [
        "type_adjustments:AdjustmentSortOptions",
        "type_adjustments:AdjustmentSource",
        "type_adjustments:AdjustmentCreate",
        "type_adjustments:AdjustmentUpdate",
        "type_adjustments:Adjustment",
        "type_adjustments:AdjustmentsPage",
      ],
      "urlSlug": "adjustments",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_auth": {
      "description": undefined,
      "endpoints": [],
      "name": "auth",
      "parent": undefined,
      "pointsTo": "subpackage_auth/v2",
      "subpackageId": "subpackage_auth",
      "subpackages": [
        "subpackage_auth/v2",
      ],
      "types": [],
      "urlSlug": "auth",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_auth/v2": {
      "description": undefined,
      "endpoints": [
        {
          "authed": false,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 429,
              "type": {
                "type": "id",
                "value": "type_auth/v2:TooManyRequestsErrorType",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Too Many Requests Error",
              "statusCode": 429,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "TooManyRequestsError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_auth/v2:TooManyRequestsErrorType",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/auth/v2/token",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "client_id": "string",
                "client_secret": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "client_id": "string",
                  "client_secret": "string",
                },
              },
              "responseBody": {
                "access_token": "string",
                "expires_in": 0,
                "token_type": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "access_token": "string",
                  "expires_in": 0,
                  "token_type": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/auth/v2/token",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "client_id": "string",
                "client_secret": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "client_id": "string",
                  "client_secret": "string",
                },
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "TooManyRequestsError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "TooManyRequestsError",
                },
              },
              "responseStatusCode": 429,
            },
          ],
          "headers": [],
          "id": "get_token",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Token",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/auth/v2",
              },
              {
                "type": "literal",
                "value": "/token",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_auth/v2:AuthGetTokenRequest",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_auth/v2:AuthGetTokenResponse",
              },
            },
          },
          "urlSlug": "get-token",
        },
      ],
      "name": "v2",
      "parent": "subpackage_auth",
      "pointsTo": undefined,
      "subpackageId": "subpackage_auth/v2",
      "subpackages": [],
      "types": [
        "type_auth/v2:AuthGetTokenRequest",
        "type_auth/v2:AuthGetTokenResponse",
        "type_auth/v2:TooManyRequestsErrorType",
      ],
      "urlSlug": "v-2",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_billing-notes": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/billing_notes/v2",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "text": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "text": "string",
                },
              },
              "responseBody": {
                "author_auth0_id": "string",
                "author_name": "string",
                "billing_note_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "created_at": "2023-01-01T00:00:00Z",
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "text": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "author_auth0_id": "string",
                  "author_name": "string",
                  "billing_note_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "created_at": "2023-01-01T00:00:00Z",
                  "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "text": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": [
            "create-billing-note",
          ],
          "name": "Create billing note",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/billing_notes/v2",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [
                "type_billing-notes:BillingNoteBase",
              ],
              "properties": [
                {
                  "key": "encounter_id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:EncounterId",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_billing-notes:BillingNote",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/billing_notes/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "billing_note_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "delete",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/billing_notes/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "billing_note_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "billing_note_id",
                "type": {
                  "type": "id",
                  "value": "type_billing-notes:BillingNoteId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete",
        },
      ],
      "name": "billing-notes",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_billing-notes",
      "subpackages": [],
      "types": [
        "type_billing-notes:BillingNoteId",
        "type_billing-notes:BillingNoteBase",
        "type_billing-notes:BillingNote",
      ],
      "urlSlug": "billing-notes",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_bulk-claim-actions": {
      "description": undefined,
      "endpoints": [],
      "name": "bulk-claim-actions",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_bulk-claim-actions",
      "subpackages": [
        "subpackage_bulk-claim-actions/v1",
      ],
      "types": [],
      "urlSlug": "bulk-claim-actions",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_bulk-claim-actions/v1": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/bulk-claim-actions/v1/execute",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "action": {
                  "type": "void",
                },
                "claims": {
                  "claim_ids": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                  "type": "claim_id_set",
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "action": {
                    "type": "void",
                  },
                  "claims": {
                    "claim_ids": [
                      "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    ],
                    "type": "claim_id_set",
                  },
                },
              },
              "responseBody": {
                "results": [
                  {
                    "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "claim_metadata": {
                      "date_of_service": "2023-01-01",
                      "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "patient_first_name": "string",
                      "patient_last_name": "string",
                    },
                    "type": "success",
                  },
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "claim_metadata": {
                        "date_of_service": "2023-01-01",
                        "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "patient_first_name": "string",
                        "patient_last_name": "string",
                      },
                      "type": "success",
                    },
                  ],
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "execute",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Execute",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/bulk-claim-actions/v1",
              },
              {
                "type": "literal",
                "value": "/execute",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "action",
                  "valueType": {
                    "type": "id",
                    "value": "type_bulk-claim-actions/v1:BulkClaimAction",
                  },
                },
                {
                  "key": "claims",
                  "valueType": {
                    "type": "id",
                    "value": "type_bulk-claim-actions/v1:ClaimCollection",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_bulk-claim-actions/v1:BulkClaimActionExecutionResponse",
              },
            },
          },
          "urlSlug": "execute",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/bulk-claim-actions/v1/validate",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "action": {
                  "type": "void",
                },
                "claims": {
                  "claim_ids": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                  "type": "claim_id_set",
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "action": {
                    "type": "void",
                  },
                  "claims": {
                    "claim_ids": [
                      "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    ],
                    "type": "claim_id_set",
                  },
                },
              },
              "responseBody": {
                "results": [
                  {
                    "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "claim_metadata": {
                      "date_of_service": "2023-01-01",
                      "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "patient_first_name": "string",
                      "patient_last_name": "string",
                    },
                    "type": "success",
                  },
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "claim_metadata": {
                        "date_of_service": "2023-01-01",
                        "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "patient_first_name": "string",
                        "patient_last_name": "string",
                      },
                      "type": "success",
                    },
                  ],
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "validate",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Validate",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/bulk-claim-actions/v1",
              },
              {
                "type": "literal",
                "value": "/validate",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "action",
                  "valueType": {
                    "type": "id",
                    "value": "type_bulk-claim-actions/v1:BulkClaimAction",
                  },
                },
                {
                  "key": "claims",
                  "valueType": {
                    "type": "id",
                    "value": "type_bulk-claim-actions/v1:ClaimCollection",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_bulk-claim-actions/v1:BulkClaimActionValidationResponse",
              },
            },
          },
          "urlSlug": "validate",
        },
      ],
      "name": "v1",
      "parent": "subpackage_bulk-claim-actions",
      "pointsTo": undefined,
      "subpackageId": "subpackage_bulk-claim-actions/v1",
      "subpackages": [],
      "types": [
        "type_bulk-claim-actions/v1:ClaimIdSet",
        "type_bulk-claim-actions/v1:ClaimCollection",
        "type_bulk-claim-actions/v1:BulkClaimActionMetadata",
        "type_bulk-claim-actions/v1:NotImplementedError",
        "type_bulk-claim-actions/v1:NoPayerGeneratedControlNumberError",
        "type_bulk-claim-actions/v1:TaskRequiredForWorkQueueError",
        "type_bulk-claim-actions/v1:GenericWorkQueueError",
        "type_bulk-claim-actions/v1:UserNotAuthorizedForResubmitError",
        "type_bulk-claim-actions/v1:UserNotAuthorizedToCloseAllOpenTasksError",
        "type_bulk-claim-actions/v1:ExecutionError",
        "type_bulk-claim-actions/v1:CreateTaskConfig",
        "type_bulk-claim-actions/v1:BulkVoidClaimAction",
        "type_bulk-claim-actions/v1:BulkResubmitFreshClaimAction",
        "type_bulk-claim-actions/v1:BulkResubmitCorrectedClaimAction",
        "type_bulk-claim-actions/v1:BulkCloseTasksAndProcessClaimAction",
        "type_bulk-claim-actions/v1:MoveToWorkQueueClaimAction",
        "type_bulk-claim-actions/v1:BulkClaimAction",
        "type_bulk-claim-actions/v1:BulkClaimActionValidationErrorContents",
        "type_bulk-claim-actions/v1:BulkClaimActionValidationError",
        "type_bulk-claim-actions/v1:BulkClaimActionValidationResultBase",
        "type_bulk-claim-actions/v1:BulkClaimActionValidationSuccess",
        "type_bulk-claim-actions/v1:BulkClaimActionValidationFailure",
        "type_bulk-claim-actions/v1:BulkClaimActionValidationResult",
        "type_bulk-claim-actions/v1:BulkClaimActionValidationResponse",
        "type_bulk-claim-actions/v1:BulkClaimActionExecutionErrorContents",
        "type_bulk-claim-actions/v1:BulkClaimActionExecutionError",
        "type_bulk-claim-actions/v1:BulkClaimActionExecutionResultBase",
        "type_bulk-claim-actions/v1:BulkClaimActionExecutionSuccess",
        "type_bulk-claim-actions/v1:BulkClaimActionExecutionFailure",
        "type_bulk-claim-actions/v1:BulkClaimActionExecutionResult",
        "type_bulk-claim-actions/v1:BulkClaimActionExecutionResponse",
      ],
      "urlSlug": "v-1",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_chargemasters": {
      "description": undefined,
      "endpoints": [],
      "name": "chargemasters",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_chargemasters",
      "subpackages": [
        "subpackage_chargemasters/v2",
      ],
      "types": [],
      "urlSlug": "chargemasters",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_chargemasters/v2": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Delete all chargemasters",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/chargemasters/v2",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "chargemaster_ids": [
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "chargemaster_ids": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "delete_all",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete All",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/chargemasters/v2",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_chargemasters/v2:DeleteAllChargemastersResponse",
              },
            },
          },
          "urlSlug": "delete-all",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Delete a set of chargemaster entries by entry ids",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/chargemasters/v2/entries",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "chargemaster_entry_ids": [
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                ],
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "chargemaster_entry_ids": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                },
              },
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "delete_entries_by_ids",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete Entries By Ids",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/chargemasters/v2",
              },
              {
                "type": "literal",
                "value": "/entries",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_chargemasters/v2:DeleteChargemasterEntriesByIdsRequest",
              },
            },
          },
          "response": undefined,
          "urlSlug": "delete-entries-by-ids",
        },
      ],
      "name": "v2",
      "parent": "subpackage_chargemasters",
      "pointsTo": undefined,
      "subpackageId": "subpackage_chargemasters/v2",
      "subpackages": [],
      "types": [
        "type_chargemasters/v2:ChargemasterId",
        "type_chargemasters/v2:ChargemasterEntryId",
        "type_chargemasters/v2:DeleteAllChargemastersResponse",
        "type_chargemasters/v2:DeleteChargemasterEntriesByIdsRequest",
      ],
      "urlSlug": "v-2",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_claim": {
      "description": undefined,
      "endpoints": [],
      "name": "claim",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_claim",
      "subpackages": [
        "subpackage_claim/v2",
      ],
      "types": [],
      "urlSlug": "claim",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_claim-submission": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/claim-submission/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "claim_submission_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "box_10_patient_condition_related_to": {
                    "box_10_a_employment": true,
                    "box_10_b_auto_accident": true,
                    "box_10_b_auto_accident_state": "string",
                    "box_10_c_other_accident": true,
                    "box_10_d_claim_codes": "string",
                  },
                  "box_11_insured": {
                    "box_11_a_date_of_birth": {
                      "day": "string",
                      "month": "string",
                      "year": "string",
                    },
                    "box_11_a_sex": "M",
                    "box_11_b_other_claim_id_number": "string",
                    "box_11_b_other_claim_id_qual": "string",
                    "box_11_c_insurance_plan_or_program_name": "string",
                    "box_11_d_another_health_benefit_plan": true,
                    "box_11_policy_group_or_feca_number": "string",
                  },
                  "box_12_patient_or_authorized_signature": {
                    "date": "string",
                    "signature": "string",
                  },
                  "box_13_insured_or_authorized_signature": "string",
                  "box_14_date_of_current_condition": {
                    "date": {
                      "day": "string",
                      "month": "string",
                      "year": "string",
                    },
                    "qual": "string",
                  },
                  "box_15_other_date": {
                    "date": {
                      "day": "string",
                      "month": "string",
                      "year": "string",
                    },
                    "qual": "string",
                  },
                  "box_16_dates_patient_unable_to_work": {
                    "from": {
                      "day": "string",
                      "month": "string",
                      "year": "string",
                    },
                    "to": {
                      "day": "string",
                      "month": "string",
                      "year": "string",
                    },
                  },
                  "box_17_referring_provider": {
                    "box_17_a_id_number": "string",
                    "box_17_a_id_qual": "string",
                    "box_17_b_npi": "string",
                    "box_17_name": "string",
                    "box_17_qual": "string",
                  },
                  "box_18_hospitalization_dates": {
                    "from": {
                      "day": "string",
                      "month": "string",
                      "year": "string",
                    },
                    "to": {
                      "day": "string",
                      "month": "string",
                      "year": "string",
                    },
                  },
                  "box_19_additional_claim_info": "string",
                  "box_1_a_insured_id_number": "string",
                  "box_1_insurance_type": "MEDICARE",
                  "box_20_outside_lab": {
                    "charges": "string",
                    "outside_lab": true,
                  },
                  "box_21_diagnoses": {
                    "box_21_a": "string",
                    "box_21_b": "string",
                    "box_21_c": "string",
                    "box_21_d": "string",
                    "box_21_e": "string",
                    "box_21_f": "string",
                    "box_21_g": "string",
                    "box_21_h": "string",
                    "box_21_i": "string",
                    "box_21_j": "string",
                    "box_21_k": "string",
                    "box_21_l": "string",
                    "icd_ind": "string",
                  },
                  "box_22_resubmission": {
                    "code": "string",
                    "original_ref_no": "string",
                  },
                  "box_23_prior_authorization_number": "string",
                  "box_24_service_lines": {
                    "service_line_1": {
                      "box_24_a_from": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "box_24_a_to": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "box_24_b_place_of_service": "string",
                      "box_24_c_emg": "string",
                      "box_24_d_modifier": {
                        "modifier_1": "string",
                        "modifier_2": "string",
                        "modifier_3": "string",
                        "modifier_4": "string",
                      },
                      "box_24_d_procedure_code": "string",
                      "box_24_e_diagnosis_pointer": "string",
                      "box_24_f_charges": "string",
                      "box_24_g_days_or_units": "string",
                      "box_24_h_epsdt": "string",
                      "box_24_h_family_plan": "string",
                      "box_24_i_id_qual": "string",
                      "box_24_j_id_number": "string",
                      "box_24_j_rendering_provider_npi": "string",
                      "box_24_suppl": "string",
                    },
                    "service_line_2": {
                      "box_24_a_from": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "box_24_a_to": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "box_24_b_place_of_service": "string",
                      "box_24_c_emg": "string",
                      "box_24_d_modifier": {
                        "modifier_1": "string",
                        "modifier_2": "string",
                        "modifier_3": "string",
                        "modifier_4": "string",
                      },
                      "box_24_d_procedure_code": "string",
                      "box_24_e_diagnosis_pointer": "string",
                      "box_24_f_charges": "string",
                      "box_24_g_days_or_units": "string",
                      "box_24_h_epsdt": "string",
                      "box_24_h_family_plan": "string",
                      "box_24_i_id_qual": "string",
                      "box_24_j_id_number": "string",
                      "box_24_j_rendering_provider_npi": "string",
                      "box_24_suppl": "string",
                    },
                    "service_line_3": {
                      "box_24_a_from": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "box_24_a_to": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "box_24_b_place_of_service": "string",
                      "box_24_c_emg": "string",
                      "box_24_d_modifier": {
                        "modifier_1": "string",
                        "modifier_2": "string",
                        "modifier_3": "string",
                        "modifier_4": "string",
                      },
                      "box_24_d_procedure_code": "string",
                      "box_24_e_diagnosis_pointer": "string",
                      "box_24_f_charges": "string",
                      "box_24_g_days_or_units": "string",
                      "box_24_h_epsdt": "string",
                      "box_24_h_family_plan": "string",
                      "box_24_i_id_qual": "string",
                      "box_24_j_id_number": "string",
                      "box_24_j_rendering_provider_npi": "string",
                      "box_24_suppl": "string",
                    },
                    "service_line_4": {
                      "box_24_a_from": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "box_24_a_to": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "box_24_b_place_of_service": "string",
                      "box_24_c_emg": "string",
                      "box_24_d_modifier": {
                        "modifier_1": "string",
                        "modifier_2": "string",
                        "modifier_3": "string",
                        "modifier_4": "string",
                      },
                      "box_24_d_procedure_code": "string",
                      "box_24_e_diagnosis_pointer": "string",
                      "box_24_f_charges": "string",
                      "box_24_g_days_or_units": "string",
                      "box_24_h_epsdt": "string",
                      "box_24_h_family_plan": "string",
                      "box_24_i_id_qual": "string",
                      "box_24_j_id_number": "string",
                      "box_24_j_rendering_provider_npi": "string",
                      "box_24_suppl": "string",
                    },
                    "service_line_5": {
                      "box_24_a_from": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "box_24_a_to": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "box_24_b_place_of_service": "string",
                      "box_24_c_emg": "string",
                      "box_24_d_modifier": {
                        "modifier_1": "string",
                        "modifier_2": "string",
                        "modifier_3": "string",
                        "modifier_4": "string",
                      },
                      "box_24_d_procedure_code": "string",
                      "box_24_e_diagnosis_pointer": "string",
                      "box_24_f_charges": "string",
                      "box_24_g_days_or_units": "string",
                      "box_24_h_epsdt": "string",
                      "box_24_h_family_plan": "string",
                      "box_24_i_id_qual": "string",
                      "box_24_j_id_number": "string",
                      "box_24_j_rendering_provider_npi": "string",
                      "box_24_suppl": "string",
                    },
                    "service_line_6": {
                      "box_24_a_from": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "box_24_a_to": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "box_24_b_place_of_service": "string",
                      "box_24_c_emg": "string",
                      "box_24_d_modifier": {
                        "modifier_1": "string",
                        "modifier_2": "string",
                        "modifier_3": "string",
                        "modifier_4": "string",
                      },
                      "box_24_d_procedure_code": "string",
                      "box_24_e_diagnosis_pointer": "string",
                      "box_24_f_charges": "string",
                      "box_24_g_days_or_units": "string",
                      "box_24_h_epsdt": "string",
                      "box_24_h_family_plan": "string",
                      "box_24_i_id_qual": "string",
                      "box_24_j_id_number": "string",
                      "box_24_j_rendering_provider_npi": "string",
                      "box_24_suppl": "string",
                    },
                  },
                  "box_25_federal_tax_id_number": {
                    "id_number": "string",
                    "id_qual": "SSN",
                  },
                  "box_26_patient_account_no": "string",
                  "box_27_accepts_assignment": true,
                  "box_28_total_charge": {
                    "total_charges": "string",
                    "two_seventy_six": true,
                  },
                  "box_29_amount_paid": "string",
                  "box_2_patient_name": "string",
                  "box_31_physician_or_supplier_signature": {
                    "date": "string",
                    "signature": "string",
                  },
                  "box_32_service_facility_info": {
                    "box_32": {
                      "address": "string",
                      "city_state_zip": "string",
                      "name": "string",
                    },
                    "box_32_a_npi": "string",
                    "box_32_b_other_id_number": "string",
                  },
                  "box_33_billing_provider_info": {
                    "box_33": {
                      "address": "string",
                      "city_state_zip": "string",
                      "name": "string",
                    },
                    "box_33_a_npi": "string",
                    "box_33_b_other_id_number": "string",
                    "phone_number": {
                      "area_code": "string",
                      "prefix_and_line_number": "string",
                    },
                  },
                  "box_3_patient": {
                    "date_of_birth": {
                      "day": "string",
                      "month": "string",
                      "year": "string",
                    },
                    "sex": "M",
                  },
                  "box_4_insured_name": "string",
                  "box_5_patient_address": {
                    "address": "string",
                    "city": "string",
                    "state": "string",
                    "telephone": {
                      "area_code": "string",
                      "prefix_and_line_number": "string",
                    },
                    "zip_code": "string",
                  },
                  "box_6_patient_relationship_to_insured": "SELF",
                  "box_7_insured_address": {
                    "address": "string",
                    "city": "string",
                    "state": "string",
                    "telephone": {
                      "area_code": "string",
                      "prefix_and_line_number": "string",
                    },
                    "zip_code": "string",
                  },
                  "box_8_reserved_for_nucc_use": "string",
                  "box_9_other_insured": {
                    "box_9_a_policy_or_group_number": "string",
                    "box_9_b_reserved_for_nucc_use": "string",
                    "box_9_c_reserved_for_nucc_use": "string",
                    "box_9_d_insurance_plan_or_program_name": "string",
                    "box_9_name": "string",
                  },
                  "header_insurance_info": {
                    "address_1": "string",
                    "address_2": "string",
                    "city_state_zip": "string",
                    "name": "string",
                  },
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "box_10_patient_condition_related_to": {
                      "box_10_a_employment": true,
                      "box_10_b_auto_accident": true,
                      "box_10_b_auto_accident_state": "string",
                      "box_10_c_other_accident": true,
                      "box_10_d_claim_codes": "string",
                    },
                    "box_11_insured": {
                      "box_11_a_date_of_birth": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "box_11_a_sex": "M",
                      "box_11_b_other_claim_id_number": "string",
                      "box_11_b_other_claim_id_qual": "string",
                      "box_11_c_insurance_plan_or_program_name": "string",
                      "box_11_d_another_health_benefit_plan": true,
                      "box_11_policy_group_or_feca_number": "string",
                    },
                    "box_12_patient_or_authorized_signature": {
                      "date": "string",
                      "signature": "string",
                    },
                    "box_13_insured_or_authorized_signature": "string",
                    "box_14_date_of_current_condition": {
                      "date": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "qual": "string",
                    },
                    "box_15_other_date": {
                      "date": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "qual": "string",
                    },
                    "box_16_dates_patient_unable_to_work": {
                      "from": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "to": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                    },
                    "box_17_referring_provider": {
                      "box_17_a_id_number": "string",
                      "box_17_a_id_qual": "string",
                      "box_17_b_npi": "string",
                      "box_17_name": "string",
                      "box_17_qual": "string",
                    },
                    "box_18_hospitalization_dates": {
                      "from": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "to": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                    },
                    "box_19_additional_claim_info": "string",
                    "box_1_a_insured_id_number": "string",
                    "box_1_insurance_type": "MEDICARE",
                    "box_20_outside_lab": {
                      "charges": "string",
                      "outside_lab": true,
                    },
                    "box_21_diagnoses": {
                      "box_21_a": "string",
                      "box_21_b": "string",
                      "box_21_c": "string",
                      "box_21_d": "string",
                      "box_21_e": "string",
                      "box_21_f": "string",
                      "box_21_g": "string",
                      "box_21_h": "string",
                      "box_21_i": "string",
                      "box_21_j": "string",
                      "box_21_k": "string",
                      "box_21_l": "string",
                      "icd_ind": "string",
                    },
                    "box_22_resubmission": {
                      "code": "string",
                      "original_ref_no": "string",
                    },
                    "box_23_prior_authorization_number": "string",
                    "box_24_service_lines": {
                      "service_line_1": {
                        "box_24_a_from": {
                          "day": "string",
                          "month": "string",
                          "year": "string",
                        },
                        "box_24_a_to": {
                          "day": "string",
                          "month": "string",
                          "year": "string",
                        },
                        "box_24_b_place_of_service": "string",
                        "box_24_c_emg": "string",
                        "box_24_d_modifier": {
                          "modifier_1": "string",
                          "modifier_2": "string",
                          "modifier_3": "string",
                          "modifier_4": "string",
                        },
                        "box_24_d_procedure_code": "string",
                        "box_24_e_diagnosis_pointer": "string",
                        "box_24_f_charges": "string",
                        "box_24_g_days_or_units": "string",
                        "box_24_h_epsdt": "string",
                        "box_24_h_family_plan": "string",
                        "box_24_i_id_qual": "string",
                        "box_24_j_id_number": "string",
                        "box_24_j_rendering_provider_npi": "string",
                        "box_24_suppl": "string",
                      },
                      "service_line_2": {
                        "box_24_a_from": {
                          "day": "string",
                          "month": "string",
                          "year": "string",
                        },
                        "box_24_a_to": {
                          "day": "string",
                          "month": "string",
                          "year": "string",
                        },
                        "box_24_b_place_of_service": "string",
                        "box_24_c_emg": "string",
                        "box_24_d_modifier": {
                          "modifier_1": "string",
                          "modifier_2": "string",
                          "modifier_3": "string",
                          "modifier_4": "string",
                        },
                        "box_24_d_procedure_code": "string",
                        "box_24_e_diagnosis_pointer": "string",
                        "box_24_f_charges": "string",
                        "box_24_g_days_or_units": "string",
                        "box_24_h_epsdt": "string",
                        "box_24_h_family_plan": "string",
                        "box_24_i_id_qual": "string",
                        "box_24_j_id_number": "string",
                        "box_24_j_rendering_provider_npi": "string",
                        "box_24_suppl": "string",
                      },
                      "service_line_3": {
                        "box_24_a_from": {
                          "day": "string",
                          "month": "string",
                          "year": "string",
                        },
                        "box_24_a_to": {
                          "day": "string",
                          "month": "string",
                          "year": "string",
                        },
                        "box_24_b_place_of_service": "string",
                        "box_24_c_emg": "string",
                        "box_24_d_modifier": {
                          "modifier_1": "string",
                          "modifier_2": "string",
                          "modifier_3": "string",
                          "modifier_4": "string",
                        },
                        "box_24_d_procedure_code": "string",
                        "box_24_e_diagnosis_pointer": "string",
                        "box_24_f_charges": "string",
                        "box_24_g_days_or_units": "string",
                        "box_24_h_epsdt": "string",
                        "box_24_h_family_plan": "string",
                        "box_24_i_id_qual": "string",
                        "box_24_j_id_number": "string",
                        "box_24_j_rendering_provider_npi": "string",
                        "box_24_suppl": "string",
                      },
                      "service_line_4": {
                        "box_24_a_from": {
                          "day": "string",
                          "month": "string",
                          "year": "string",
                        },
                        "box_24_a_to": {
                          "day": "string",
                          "month": "string",
                          "year": "string",
                        },
                        "box_24_b_place_of_service": "string",
                        "box_24_c_emg": "string",
                        "box_24_d_modifier": {
                          "modifier_1": "string",
                          "modifier_2": "string",
                          "modifier_3": "string",
                          "modifier_4": "string",
                        },
                        "box_24_d_procedure_code": "string",
                        "box_24_e_diagnosis_pointer": "string",
                        "box_24_f_charges": "string",
                        "box_24_g_days_or_units": "string",
                        "box_24_h_epsdt": "string",
                        "box_24_h_family_plan": "string",
                        "box_24_i_id_qual": "string",
                        "box_24_j_id_number": "string",
                        "box_24_j_rendering_provider_npi": "string",
                        "box_24_suppl": "string",
                      },
                      "service_line_5": {
                        "box_24_a_from": {
                          "day": "string",
                          "month": "string",
                          "year": "string",
                        },
                        "box_24_a_to": {
                          "day": "string",
                          "month": "string",
                          "year": "string",
                        },
                        "box_24_b_place_of_service": "string",
                        "box_24_c_emg": "string",
                        "box_24_d_modifier": {
                          "modifier_1": "string",
                          "modifier_2": "string",
                          "modifier_3": "string",
                          "modifier_4": "string",
                        },
                        "box_24_d_procedure_code": "string",
                        "box_24_e_diagnosis_pointer": "string",
                        "box_24_f_charges": "string",
                        "box_24_g_days_or_units": "string",
                        "box_24_h_epsdt": "string",
                        "box_24_h_family_plan": "string",
                        "box_24_i_id_qual": "string",
                        "box_24_j_id_number": "string",
                        "box_24_j_rendering_provider_npi": "string",
                        "box_24_suppl": "string",
                      },
                      "service_line_6": {
                        "box_24_a_from": {
                          "day": "string",
                          "month": "string",
                          "year": "string",
                        },
                        "box_24_a_to": {
                          "day": "string",
                          "month": "string",
                          "year": "string",
                        },
                        "box_24_b_place_of_service": "string",
                        "box_24_c_emg": "string",
                        "box_24_d_modifier": {
                          "modifier_1": "string",
                          "modifier_2": "string",
                          "modifier_3": "string",
                          "modifier_4": "string",
                        },
                        "box_24_d_procedure_code": "string",
                        "box_24_e_diagnosis_pointer": "string",
                        "box_24_f_charges": "string",
                        "box_24_g_days_or_units": "string",
                        "box_24_h_epsdt": "string",
                        "box_24_h_family_plan": "string",
                        "box_24_i_id_qual": "string",
                        "box_24_j_id_number": "string",
                        "box_24_j_rendering_provider_npi": "string",
                        "box_24_suppl": "string",
                      },
                    },
                    "box_25_federal_tax_id_number": {
                      "id_number": "string",
                      "id_qual": "SSN",
                    },
                    "box_26_patient_account_no": "string",
                    "box_27_accepts_assignment": true,
                    "box_28_total_charge": {
                      "total_charges": "string",
                      "two_seventy_six": true,
                    },
                    "box_29_amount_paid": "string",
                    "box_2_patient_name": "string",
                    "box_31_physician_or_supplier_signature": {
                      "date": "string",
                      "signature": "string",
                    },
                    "box_32_service_facility_info": {
                      "box_32": {
                        "address": "string",
                        "city_state_zip": "string",
                        "name": "string",
                      },
                      "box_32_a_npi": "string",
                      "box_32_b_other_id_number": "string",
                    },
                    "box_33_billing_provider_info": {
                      "box_33": {
                        "address": "string",
                        "city_state_zip": "string",
                        "name": "string",
                      },
                      "box_33_a_npi": "string",
                      "box_33_b_other_id_number": "string",
                      "phone_number": {
                        "area_code": "string",
                        "prefix_and_line_number": "string",
                      },
                    },
                    "box_3_patient": {
                      "date_of_birth": {
                        "day": "string",
                        "month": "string",
                        "year": "string",
                      },
                      "sex": "M",
                    },
                    "box_4_insured_name": "string",
                    "box_5_patient_address": {
                      "address": "string",
                      "city": "string",
                      "state": "string",
                      "telephone": {
                        "area_code": "string",
                        "prefix_and_line_number": "string",
                      },
                      "zip_code": "string",
                    },
                    "box_6_patient_relationship_to_insured": "SELF",
                    "box_7_insured_address": {
                      "address": "string",
                      "city": "string",
                      "state": "string",
                      "telephone": {
                        "area_code": "string",
                        "prefix_and_line_number": "string",
                      },
                      "zip_code": "string",
                    },
                    "box_8_reserved_for_nucc_use": "string",
                    "box_9_other_insured": {
                      "box_9_a_policy_or_group_number": "string",
                      "box_9_b_reserved_for_nucc_use": "string",
                      "box_9_c_reserved_for_nucc_use": "string",
                      "box_9_d_insurance_plan_or_program_name": "string",
                      "box_9_name": "string",
                    },
                    "header_insurance_info": {
                      "address_1": "string",
                      "address_2": "string",
                      "city_state_zip": "string",
                      "name": "string",
                    },
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/claim-submission/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "claim_submission_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/claim-submission/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "claim_submission_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/claim-submission/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "claim_submission_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "claim_submission_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:ClaimSubmissionId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_claim-submission:ClaimSubmission",
              },
            },
          },
          "urlSlug": "get",
        },
      ],
      "name": "claim-submission",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_claim-submission",
      "subpackages": [],
      "types": [
        "type_claim-submission:ClaimSubmission",
        "type_claim-submission:ClaimSubmissionStatus",
        "type_claim-submission:ClaimFrequencyTypeCode",
      ],
      "urlSlug": "claim-submission",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_claim/v2": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/claims/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "service_line_adjudication_details": {
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                    "adjudication_match_results": {
                      "type": "adjudication_match_results",
                      "value": {
                        "type": "no_adjudication_details",
                      },
                    },
                    "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "service_line_adjudication_details": {
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                      "adjudication_match_results": {
                        "type": "adjudication_match_results",
                        "value": {
                          "type": "no_adjudication_details",
                        },
                      },
                      "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    },
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/claims/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/claims/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
          ],
          "headers": [],
          "id": "get_service_line_adjudication_details",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Service Line Adjudication Details",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/claims/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "claim_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "claim_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:ClaimId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_claim/v2:ServiceLineAdjudicationDetailsResponse",
              },
            },
          },
          "urlSlug": "get-service-line-adjudication-details",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/claims/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/statuses",
              "pathParameters": {
                "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": [
                {
                  "description": "string",
                  "disabled": true,
                  "disabled_explanation": "string",
                  "status": "biller_received",
                },
              ],
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "description": "string",
                    "disabled": true,
                    "disabled_explanation": "string",
                    "status": "biller_received",
                  },
                ],
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/claims/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/statuses",
              "pathParameters": {
                "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/claims/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/statuses",
              "pathParameters": {
                "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
          ],
          "headers": [],
          "id": "get_statuses",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Statuses",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/claims/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "claim_id",
              },
              {
                "type": "literal",
                "value": "/statuses",
              },
            ],
            "pathParameters": [
              {
                "key": "claim_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:ClaimId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "itemType": {
                  "type": "id",
                  "value": "type_claim/v2:ClaimStatusMetadata",
                },
                "type": "list",
              },
            },
          },
          "urlSlug": "get-statuses",
        },
      ],
      "name": "v2",
      "parent": "subpackage_claim",
      "pointsTo": undefined,
      "subpackageId": "subpackage_claim/v2",
      "subpackages": [],
      "types": [
        "type_claim/v2:FeeScheduleEntryId",
        "type_claim/v2:BoundFeeScheduleId",
        "type_claim/v2:FeeScheduleId",
        "type_claim/v2:ServiceLineAdjudicationDetailsResponse",
        "type_claim/v2:ServiceLineAdjudicationDetail",
        "type_claim/v2:LegacyMatchResults",
        "type_claim/v2:AdjudicationMatchResultsUnion",
        "type_claim/v2:AdjudicationMatchResults",
        "type_claim/v2:PotentialMatches",
        "type_claim/v2:MatchResult",
        "type_claim/v2:ClaimStatusMetadata",
      ],
      "urlSlug": "v-2",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_claims": {
      "description": undefined,
      "endpoints": [],
      "name": "claims",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_claims",
      "subpackages": [],
      "types": [
        "type_claims:Claim",
        "type_claims:ClaimStatus",
      ],
      "urlSlug": "claims",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_cms-1500": {
      "description": undefined,
      "endpoints": [],
      "name": "cms-1500",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_cms-1500",
      "subpackages": [],
      "types": [
        "type_cms-1500:CMS1500Content",
        "type_cms-1500:AddressBox",
        "type_cms-1500:AddressBox3Line",
        "type_cms-1500:DateBox",
        "type_cms-1500:PhoneNumberBox",
        "type_cms-1500:SignatureDateBox",
        "type_cms-1500:FederalTaxIdNumberType",
        "type_cms-1500:InsuranceType",
        "type_cms-1500:PatientRelationshipToInsured",
        "type_cms-1500:Sex",
        "type_cms-1500:InsuranceInfo",
        "type_cms-1500:Box3Patient",
        "type_cms-1500:Box9OtherInsured",
        "type_cms-1500:Box10PatientConditionRelatedTo",
        "type_cms-1500:Box11Insured",
        "type_cms-1500:Box14DateOfCurrentCondition",
        "type_cms-1500:Box15OtherDate",
        "type_cms-1500:Box16DatesPatientUnableToWork",
        "type_cms-1500:Box17ReferringProvider",
        "type_cms-1500:Box18HospitalizationDates",
        "type_cms-1500:Box20OutsideLab",
        "type_cms-1500:Box21Diagnoses",
        "type_cms-1500:Box22Resubmission",
        "type_cms-1500:Box24ServiceLines",
        "type_cms-1500:ServiceLineBox",
        "type_cms-1500:ModifiersBox",
        "type_cms-1500:Box25FederalTaxIdNumber",
        "type_cms-1500:Box28TotalCharge",
        "type_cms-1500:Box32ServiceFacilityInfo",
        "type_cms-1500:Box33BillingProviderInfo",
      ],
      "urlSlug": "cms-1500",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_commons": {
      "description": undefined,
      "endpoints": [],
      "name": "commons",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_commons",
      "subpackages": [],
      "types": [
        "type_commons:EncounterId",
        "type_commons:OrganizationId",
        "type_commons:ClaimId",
        "type_commons:ServiceLineId",
        "type_commons:AdjustmentId",
        "type_commons:PatientExternalId",
        "type_commons:EncounterExternalId",
        "type_commons:Auth0Id",
        "type_commons:ClaimSubmissionId",
        "type_commons:RaRunId",
        "type_commons:Npi",
        "type_commons:WorkQueueId",
        "type_commons:UserId",
        "type_commons:TaskId",
        "type_commons:LinkUrl",
        "type_commons:ContentDownloadUrl",
        "type_commons:ContentDownloadUrlWithExpiration",
        "type_commons:PageToken",
        "type_commons:SortDirection",
        "type_commons:Date",
        "type_commons:DateRangeRequiredEnd",
        "type_commons:DateRangeOptionalEnd",
        "type_commons:Decimal",
        "type_commons:RemovableDateRangeOptionalEnd",
        "type_commons:ResourcePage",
        "type_commons:StreetAddressBase",
        "type_commons:StreetAddressShortZip",
        "type_commons:StreetAddressLongZip",
        "type_commons:Regions",
        "type_commons:RegionStates",
        "type_commons:RegionNational",
        "type_commons:State",
        "type_commons:SourceOfPaymentCode",
        "type_commons:FacilityTypeCode",
        "type_commons:PatientRelationshipToInsuredCodeAll",
        "type_commons:ProcedureModifier",
        "type_commons:ServiceLineUnits",
        "type_commons:InsuranceTypeCode",
        "type_commons:ClaimAdjustmentGroupCodes",
        "type_commons:ClaimSubmissionPayerResponsibilityType",
        "type_commons:EmrPayerCrosswalk",
        "type_commons:ErrorMessage",
        "type_commons:EntityNotFoundErrorMessage",
        "type_commons:UnauthorizedErrorMessage",
        "type_commons:EntityConflictErrorMessage",
        "type_commons:UnprocessableEntityErrorMessage",
        "type_commons:RequestValidationError",
        "type_commons:PhoneNumber",
        "type_commons:PhoneNumberType",
        "type_commons:Email",
      ],
      "urlSlug": "commons",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_configurable-rules": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 500,
              "type": {
                "type": "id",
                "value": "type_configurable-rules:ConfigForScopeComputationError",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_configurable-rules:UnknownScopeError",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_configurable-rules:RuleValidationFailure",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Config For Scope Computation Http Error",
              "statusCode": 500,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "ConfigForScopeComputationHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules:ConfigForScopeComputationError",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Scope Does Not Support Configurable Rules Http Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "ScopeDoesNotSupportConfigurableRulesHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unknown Scope Http Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnknownScopeHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules:UnknownScopeError",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Rule Validation Http Failure",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "RuleValidationHttpFailure",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules:RuleValidationFailure",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "name": "string",
                "scope": {
                  "phase_id": "string",
                  "pipeline_id": "string",
                  "step_id": "string",
                  "type": "step_locator",
                },
                "statement": {
                  "action": {
                    "type": "hold_claim",
                  },
                  "condition": {
                    "conditions": [],
                    "type": "and",
                  },
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "string",
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                  "statement": {
                    "action": {
                      "type": "hold_claim",
                    },
                    "condition": {
                      "conditions": [],
                      "type": "and",
                    },
                  },
                },
              },
              "responseBody": {
                "description": "string",
                "is_enabled": true,
                "name": "string",
                "rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "scope": {
                  "phase_id": "string",
                  "pipeline_id": "string",
                  "step_id": "string",
                  "type": "step_locator",
                },
                "statement": {
                  "action": {
                    "type": "hold_claim",
                  },
                  "condition": {
                    "conditions": [],
                    "type": "and",
                  },
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "description": "string",
                  "is_enabled": true,
                  "name": "string",
                  "rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                  "statement": {
                    "action": {
                      "type": "hold_claim",
                    },
                    "condition": {
                      "conditions": [],
                      "type": "and",
                    },
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "name": "string",
                "scope": {
                  "phase_id": "string",
                  "pipeline_id": "string",
                  "step_id": "string",
                  "type": "step_locator",
                },
                "statement": {
                  "action": {
                    "type": "hold_claim",
                  },
                  "condition": {
                    "conditions": [],
                    "type": "and",
                  },
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "string",
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                  "statement": {
                    "action": {
                      "type": "hold_claim",
                    },
                    "condition": {
                      "conditions": [],
                      "type": "and",
                    },
                  },
                },
              },
              "responseBody": {
                "content": {
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                },
                "errorName": "ConfigForScopeComputationHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "scope": {
                      "phase_id": "string",
                      "pipeline_id": "string",
                      "step_id": "string",
                      "type": "step_locator",
                    },
                  },
                  "errorName": "ConfigForScopeComputationHttpError",
                },
              },
              "responseStatusCode": 500,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "name": "string",
                "scope": {
                  "phase_id": "string",
                  "pipeline_id": "string",
                  "step_id": "string",
                  "type": "step_locator",
                },
                "statement": {
                  "action": {
                    "type": "hold_claim",
                  },
                  "condition": {
                    "conditions": [],
                    "type": "and",
                  },
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "string",
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                  "statement": {
                    "action": {
                      "type": "hold_claim",
                    },
                    "condition": {
                      "conditions": [],
                      "type": "and",
                    },
                  },
                },
              },
              "responseBody": {
                "content": {
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                },
                "errorName": "ScopeDoesNotSupportConfigurableRulesHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "scope": {
                      "phase_id": "string",
                      "pipeline_id": "string",
                      "step_id": "string",
                      "type": "step_locator",
                    },
                  },
                  "errorName": "ScopeDoesNotSupportConfigurableRulesHttpError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "name": "string",
                "scope": {
                  "phase_id": "string",
                  "pipeline_id": "string",
                  "step_id": "string",
                  "type": "step_locator",
                },
                "statement": {
                  "action": {
                    "type": "hold_claim",
                  },
                  "condition": {
                    "conditions": [],
                    "type": "and",
                  },
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "string",
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                  "statement": {
                    "action": {
                      "type": "hold_claim",
                    },
                    "condition": {
                      "conditions": [],
                      "type": "and",
                    },
                  },
                },
              },
              "responseBody": {
                "content": {
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                },
                "errorName": "UnknownScopeHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "scope": {
                      "phase_id": "string",
                      "pipeline_id": "string",
                      "step_id": "string",
                      "type": "step_locator",
                    },
                  },
                  "errorName": "UnknownScopeHttpError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "name": "string",
                "scope": {
                  "phase_id": "string",
                  "pipeline_id": "string",
                  "step_id": "string",
                  "type": "step_locator",
                },
                "statement": {
                  "action": {
                    "type": "hold_claim",
                  },
                  "condition": {
                    "conditions": [],
                    "type": "and",
                  },
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "string",
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                  "statement": {
                    "action": {
                      "type": "hold_claim",
                    },
                    "condition": {
                      "conditions": [],
                      "type": "and",
                    },
                  },
                },
              },
              "responseBody": {
                "content": {
                  "errors": [
                    {
                      "type": "invalid_statement",
                      "value": {
                        "available_actions": [
                          {
                            "action": {
                              "type": "hold_claim_available_action",
                            },
                            "description": "string",
                            "display_name": "string",
                          },
                        ],
                        "provided_action": {
                          "type": "hold_claim",
                        },
                        "type": "action_not_available_error",
                      },
                    },
                  ],
                },
                "errorName": "RuleValidationHttpFailure",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "errors": [
                      {
                        "type": "invalid_statement",
                        "value": {
                          "available_actions": [
                            {
                              "action": {
                                "type": "hold_claim_available_action",
                              },
                              "description": "string",
                              "display_name": "string",
                            },
                          ],
                          "provided_action": {
                            "type": "hold_claim",
                          },
                          "type": "action_not_available_error",
                        },
                      },
                    ],
                  },
                  "errorName": "RuleValidationHttpFailure",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/configurable-rules/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "key": "description",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "scope",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules:Scope",
                  },
                },
                {
                  "key": "statement",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules-types:Statement",
                  },
                },
                {
                  "key": "is_enabled",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                      },
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_configurable-rules:ConfigurableRule",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/comparisons",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "supported_comparisons": [
                  {
                    "comparator": {
                      "comparator": "IS_EQUAL_TO",
                      "display_name": "string",
                    },
                    "lhs": {
                      "type": "primitive",
                      "value": {
                        "type": "native_primitive",
                        "value": "INTEGER",
                      },
                    },
                    "rhs": {
                      "type": "primitive",
                      "value": {
                        "type": "native_primitive",
                        "value": "INTEGER",
                      },
                    },
                  },
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "supported_comparisons": [
                    {
                      "comparator": {
                        "comparator": "IS_EQUAL_TO",
                        "display_name": "string",
                      },
                      "lhs": {
                        "type": "primitive",
                        "value": {
                          "type": "native_primitive",
                          "value": "INTEGER",
                        },
                      },
                      "rhs": {
                        "type": "primitive",
                        "value": {
                          "type": "native_primitive",
                          "value": "INTEGER",
                        },
                      },
                    },
                  ],
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "getLegalComparisons",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Legal Comparisons",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/configurable-rules/v1",
              },
              {
                "type": "literal",
                "value": "/comparisons",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_configurable-rules:LegalComparisonsResponse",
              },
            },
          },
          "urlSlug": "get-legal-comparisons",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_configurable-rules:RuleNotFoundError",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Rule Not Found Http Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "RuleNotFoundHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules:RuleNotFoundError",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "configurable_rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "description": "string",
                "is_enabled": true,
                "name": "string",
                "rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "scope": {
                  "phase_id": "string",
                  "pipeline_id": "string",
                  "step_id": "string",
                  "type": "step_locator",
                },
                "statement": {
                  "action": {
                    "type": "hold_claim",
                  },
                  "condition": {
                    "conditions": [],
                    "type": "and",
                  },
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "description": "string",
                  "is_enabled": true,
                  "name": "string",
                  "rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                  "statement": {
                    "action": {
                      "type": "hold_claim",
                    },
                    "condition": {
                      "conditions": [],
                      "type": "and",
                    },
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "configurable_rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
                "errorName": "RuleNotFoundHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "errorName": "RuleNotFoundHttpError",
                },
              },
              "responseStatusCode": 404,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/configurable-rules/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "configurable_rule_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "configurable_rule_id",
                "type": {
                  "type": "id",
                  "value": "type_pipeline-commons:ConfigurableRuleId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_configurable-rules:ConfigurableRule",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_configurable-rules:RuleNotFoundError",
              },
            },
            {
              "statusCode": 500,
              "type": {
                "type": "id",
                "value": "type_configurable-rules:ConfigForScopeComputationError",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_configurable-rules:UnknownScopeError",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_configurable-rules:RuleValidationFailure",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Rule Not Found Http Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "RuleNotFoundHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules:RuleNotFoundError",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Config For Scope Computation Http Error",
              "statusCode": 500,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "ConfigForScopeComputationHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules:ConfigForScopeComputationError",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Scope Does Not Support Configurable Rules Http Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "ScopeDoesNotSupportConfigurableRulesHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unknown Scope Http Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnknownScopeHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules:UnknownScopeError",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Rule Validation Http Failure",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "RuleValidationHttpFailure",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules:RuleValidationFailure",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "configurable_rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "description": "string",
                "is_enabled": true,
                "name": "string",
                "rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "scope": {
                  "phase_id": "string",
                  "pipeline_id": "string",
                  "step_id": "string",
                  "type": "step_locator",
                },
                "statement": {
                  "action": {
                    "type": "hold_claim",
                  },
                  "condition": {
                    "conditions": [],
                    "type": "and",
                  },
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "description": "string",
                  "is_enabled": true,
                  "name": "string",
                  "rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                  "statement": {
                    "action": {
                      "type": "hold_claim",
                    },
                    "condition": {
                      "conditions": [],
                      "type": "and",
                    },
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "configurable_rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
                "errorName": "RuleNotFoundHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "errorName": "RuleNotFoundHttpError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "configurable_rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                },
                "errorName": "ConfigForScopeComputationHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "scope": {
                      "phase_id": "string",
                      "pipeline_id": "string",
                      "step_id": "string",
                      "type": "step_locator",
                    },
                  },
                  "errorName": "ConfigForScopeComputationHttpError",
                },
              },
              "responseStatusCode": 500,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "configurable_rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                },
                "errorName": "ScopeDoesNotSupportConfigurableRulesHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "scope": {
                      "phase_id": "string",
                      "pipeline_id": "string",
                      "step_id": "string",
                      "type": "step_locator",
                    },
                  },
                  "errorName": "ScopeDoesNotSupportConfigurableRulesHttpError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "configurable_rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                },
                "errorName": "UnknownScopeHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "scope": {
                      "phase_id": "string",
                      "pipeline_id": "string",
                      "step_id": "string",
                      "type": "step_locator",
                    },
                  },
                  "errorName": "UnknownScopeHttpError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "configurable_rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "errors": [
                    {
                      "type": "invalid_statement",
                      "value": {
                        "available_actions": [
                          {
                            "action": {
                              "type": "hold_claim_available_action",
                            },
                            "description": "string",
                            "display_name": "string",
                          },
                        ],
                        "provided_action": {
                          "type": "hold_claim",
                        },
                        "type": "action_not_available_error",
                      },
                    },
                  ],
                },
                "errorName": "RuleValidationHttpFailure",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "errors": [
                      {
                        "type": "invalid_statement",
                        "value": {
                          "available_actions": [
                            {
                              "action": {
                                "type": "hold_claim_available_action",
                              },
                              "description": "string",
                              "display_name": "string",
                            },
                          ],
                          "provided_action": {
                            "type": "hold_claim",
                          },
                          "type": "action_not_available_error",
                        },
                      },
                    ],
                  },
                  "errorName": "RuleValidationHttpFailure",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/configurable-rules/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "configurable_rule_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "configurable_rule_id",
                "type": {
                  "type": "id",
                  "value": "type_pipeline-commons:ConfigurableRuleId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "description",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "statement",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_configurable-rules-types:Statement",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "is_enabled",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                      },
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_configurable-rules:ConfigurableRule",
              },
            },
          },
          "urlSlug": "update",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_configurable-rules:RuleNotFoundError",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Rule Not Found Http Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "RuleNotFoundHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules:RuleNotFoundError",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "configurable_rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "configurable_rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
                "errorName": "RuleNotFoundHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "rule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "errorName": "RuleNotFoundHttpError",
                },
              },
              "responseStatusCode": 404,
            },
          ],
          "headers": [],
          "id": "delete",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/configurable-rules/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "configurable_rule_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "configurable_rule_id",
                "type": {
                  "type": "id",
                  "value": "type_pipeline-commons:ConfigurableRuleId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 500,
              "type": {
                "type": "id",
                "value": "type_configurable-rules:ConfigForScopeComputationError",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_configurable-rules:UnknownScopeError",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Config For Scope Computation Http Error",
              "statusCode": 500,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "ConfigForScopeComputationHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules:ConfigForScopeComputationError",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Scope Does Not Support Configurable Rules Http Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "ScopeDoesNotSupportConfigurableRulesHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unknown Scope Http Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnknownScopeHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules:UnknownScopeError",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/config-for-scope",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "scope": {
                  "phase_id": "string",
                  "pipeline_id": "string",
                  "step_id": "string",
                  "type": "step_locator",
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                },
              },
              "responseBody": {
                "available_actions": [
                  {
                    "action": {
                      "type": "hold_claim_available_action",
                    },
                    "description": "string",
                    "display_name": "string",
                  },
                ],
                "inputs": {
                  "description": "string",
                  "display_name": "string",
                  "field_type": {
                    "type": "primitive",
                    "value": {
                      "type": "native_primitive",
                      "value": "INTEGER",
                    },
                  },
                  "name": "string",
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "available_actions": [
                    {
                      "action": {
                        "type": "hold_claim_available_action",
                      },
                      "description": "string",
                      "display_name": "string",
                    },
                  ],
                  "inputs": {
                    "description": "string",
                    "display_name": "string",
                    "field_type": {
                      "type": "primitive",
                      "value": {
                        "type": "native_primitive",
                        "value": "INTEGER",
                      },
                    },
                    "name": "string",
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/config-for-scope",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "scope": {
                  "phase_id": "string",
                  "pipeline_id": "string",
                  "step_id": "string",
                  "type": "step_locator",
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                },
              },
              "responseBody": {
                "content": {
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                },
                "errorName": "ConfigForScopeComputationHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "scope": {
                      "phase_id": "string",
                      "pipeline_id": "string",
                      "step_id": "string",
                      "type": "step_locator",
                    },
                  },
                  "errorName": "ConfigForScopeComputationHttpError",
                },
              },
              "responseStatusCode": 500,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/config-for-scope",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "scope": {
                  "phase_id": "string",
                  "pipeline_id": "string",
                  "step_id": "string",
                  "type": "step_locator",
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                },
              },
              "responseBody": {
                "content": {
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                },
                "errorName": "ScopeDoesNotSupportConfigurableRulesHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "scope": {
                      "phase_id": "string",
                      "pipeline_id": "string",
                      "step_id": "string",
                      "type": "step_locator",
                    },
                  },
                  "errorName": "ScopeDoesNotSupportConfigurableRulesHttpError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/config-for-scope",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "scope": {
                  "phase_id": "string",
                  "pipeline_id": "string",
                  "step_id": "string",
                  "type": "step_locator",
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                },
              },
              "responseBody": {
                "content": {
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                },
                "errorName": "UnknownScopeHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "scope": {
                      "phase_id": "string",
                      "pipeline_id": "string",
                      "step_id": "string",
                      "type": "step_locator",
                    },
                  },
                  "errorName": "UnknownScopeHttpError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "resolveConfigForScope",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Resolve Config For Scope",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/configurable-rules/v1",
              },
              {
                "type": "literal",
                "value": "/config-for-scope",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "scope",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules:Scope",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_configurable-rules:ConfigForScopeResponse",
              },
            },
          },
          "urlSlug": "resolve-config-for-scope",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 500,
              "type": {
                "type": "id",
                "value": "type_configurable-rules:ConfigForScopeComputationError",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Config For Scope Computation Http Error",
              "statusCode": 500,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "ConfigForScopeComputationHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules:ConfigForScopeComputationError",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/validate",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "name": "string",
                "scope": {
                  "phase_id": "string",
                  "pipeline_id": "string",
                  "step_id": "string",
                  "type": "step_locator",
                },
                "statement": {
                  "action": {
                    "type": "hold_claim",
                  },
                  "condition": {
                    "conditions": [],
                    "type": "and",
                  },
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "string",
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                  "statement": {
                    "action": {
                      "type": "hold_claim",
                    },
                    "condition": {
                      "conditions": [],
                      "type": "and",
                    },
                  },
                },
              },
              "responseBody": {
                "result": {
                  "type": "success",
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "result": {
                    "type": "success",
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules/v1/validate",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "name": "string",
                "scope": {
                  "phase_id": "string",
                  "pipeline_id": "string",
                  "step_id": "string",
                  "type": "step_locator",
                },
                "statement": {
                  "action": {
                    "type": "hold_claim",
                  },
                  "condition": {
                    "conditions": [],
                    "type": "and",
                  },
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "string",
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                  "statement": {
                    "action": {
                      "type": "hold_claim",
                    },
                    "condition": {
                      "conditions": [],
                      "type": "and",
                    },
                  },
                },
              },
              "responseBody": {
                "content": {
                  "scope": {
                    "phase_id": "string",
                    "pipeline_id": "string",
                    "step_id": "string",
                    "type": "step_locator",
                  },
                },
                "errorName": "ConfigForScopeComputationHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "scope": {
                      "phase_id": "string",
                      "pipeline_id": "string",
                      "step_id": "string",
                      "type": "step_locator",
                    },
                  },
                  "errorName": "ConfigForScopeComputationHttpError",
                },
              },
              "responseStatusCode": 500,
            },
          ],
          "headers": [],
          "id": "validateRule",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Validate Rule",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/configurable-rules/v1",
              },
              {
                "type": "literal",
                "value": "/validate",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "key": "description",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "scope",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules:Scope",
                  },
                },
                {
                  "key": "statement",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules-types:Statement",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_configurable-rules:ValidateRuleResponse",
              },
            },
          },
          "urlSlug": "validate-rule",
        },
      ],
      "name": "configurable-rules",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_configurable-rules",
      "subpackages": [],
      "types": [
        "type_configurable-rules:ConfigurableRule",
        "type_configurable-rules:ConfigForScopeResponse",
        "type_configurable-rules:Scope",
        "type_configurable-rules:StepLocator",
        "type_configurable-rules:LegalComparisonsResponse",
        "type_configurable-rules:ValidateRuleResponse",
        "type_configurable-rules:RuleRunResult",
        "type_configurable-rules:RuleValidationResult",
        "type_configurable-rules:RuleValidationFailure",
        "type_configurable-rules:RuleValidationError",
        "type_configurable-rules:InvalidStatementError",
        "type_configurable-rules:ActionNotAvailableError",
        "type_configurable-rules:CovariantListLiteralError",
        "type_configurable-rules:DuplicateObjectFieldNamesError",
        "type_configurable-rules:EmptyListLiteralError",
        "type_configurable-rules:IncorrectTypeForPathElementError",
        "type_configurable-rules:MismatchedTypesForComparatorError",
        "type_configurable-rules:MissingObjectFieldError",
        "type_configurable-rules:IllegalIndexForNthItemError",
        "type_configurable-rules:WorkQueueNotFoundError",
        "type_configurable-rules:WorkQueueNotInScopeError",
        "type_configurable-rules:RuleWithNameAlreadyExistsError",
        "type_configurable-rules:RuleNotFoundError",
        "type_configurable-rules:ConfigForScopeComputationError",
        "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError",
        "type_configurable-rules:ScopeNotEnabledForOrgError",
        "type_configurable-rules:UnknownScopeError",
      ],
      "urlSlug": "configurable-rules",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_configurable-rules-types": {
      "description": undefined,
      "endpoints": [],
      "name": "configurable-rules-types",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_configurable-rules-types",
      "subpackages": [],
      "types": [
        "type_configurable-rules-types:FieldName",
        "type_configurable-rules-types:VariableId",
        "type_configurable-rules-types:FieldType",
        "type_configurable-rules-types:PrimitiveType",
        "type_configurable-rules-types:NativePrimitiveType",
        "type_configurable-rules-types:AliasedPrimitiveType",
        "type_configurable-rules-types:ObjectType",
        "type_configurable-rules-types:ContainerType",
        "type_configurable-rules-types:ContainerWrapperType",
        "type_configurable-rules-types:Field",
        "type_configurable-rules-types:Comparator",
        "type_configurable-rules-types:ComparatorWithMetadata",
        "type_configurable-rules-types:ValidComparison",
        "type_configurable-rules-types:FieldValue",
        "type_configurable-rules-types:PrimitiveValue",
        "type_configurable-rules-types:ObjectValue",
        "type_configurable-rules-types:ObjectFieldValue",
        "type_configurable-rules-types:ContainerValue",
        "type_configurable-rules-types:Statement",
        "type_configurable-rules-types:Condition",
        "type_configurable-rules-types:AndCondition",
        "type_configurable-rules-types:OrCondition",
        "type_configurable-rules-types:EvaluateComparatorCondition",
        "type_configurable-rules-types:Comparable",
        "type_configurable-rules-types:FieldReference",
        "type_configurable-rules-types:VariableReference",
        "type_configurable-rules-types:Path",
        "type_configurable-rules-types:PathElement",
        "type_configurable-rules-types:ListElement",
        "type_configurable-rules-types:OptionalElement",
        "type_configurable-rules-types:Action",
        "type_configurable-rules-types:HoldClaimAction",
        "type_configurable-rules-types:HoldReadyToSubmitClaimAction",
        "type_configurable-rules-types:HoldClaimAvailableAction",
        "type_configurable-rules-types:HoldReadyToSubmitClaimAvailableAction",
        "type_configurable-rules-types:HoldClaimExecutedAction",
        "type_configurable-rules-types:HoldReadyToSubmitClaimExecutedAction",
        "type_configurable-rules-types:CreateTaskAction",
        "type_configurable-rules-types:CreateTaskV2Action",
        "type_configurable-rules-types:CustomerDataRequestTaskAction",
        "type_configurable-rules-types:OtherTaskAction",
        "type_configurable-rules-types:OtherTaskType",
        "type_configurable-rules-types:CreateTaskAvailableAction",
        "type_configurable-rules-types:CreateTaskV2AvailableAction",
        "type_configurable-rules-types:CreateTaskExecutedAction",
        "type_configurable-rules-types:CreateTaskV2ExecutedAction",
        "type_configurable-rules-types:ThenValidateOrElseAction",
        "type_configurable-rules-types:ThenValidateOrElseAvailableAction",
        "type_configurable-rules-types:ThenValidateOrElseExecutedAction",
        "type_configurable-rules-types:RouteToWorkQueueAction",
        "type_configurable-rules-types:RouteToWorkQueueAvailableAction",
        "type_configurable-rules-types:RouteToWorkQueueExecutedAction",
        "type_configurable-rules-types:AvailableActionWithMetadata",
        "type_configurable-rules-types:AvailableAction",
        "type_configurable-rules-types:ExecutedAction",
      ],
      "urlSlug": "configurable-rules-types",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_configurable-rules-variables": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_configurable-rules-variables:TypeDoesNotMatchValueError",
              },
            },
            {
              "statusCode": 409,
              "type": {
                "type": "id",
                "value": "type_configurable-rules-variables:VariableWithNameAlreadyExistsError",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Type Does Not Match Value Http Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "TypeDoesNotMatchValueHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules-variables:TypeDoesNotMatchValueError",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Variable With Name Already Exists Http Error",
              "statusCode": 409,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "VariableWithNameAlreadyExistsHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules-variables:VariableWithNameAlreadyExistsError",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules-variables/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "name": "string",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "native_primitive",
                    "value": "INTEGER",
                  },
                },
                "value": {
                  "type": "primitive_value",
                  "value": {
                    "type": "integer",
                    "value": 0,
                  },
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "string",
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "native_primitive",
                      "value": "INTEGER",
                    },
                  },
                  "value": {
                    "type": "primitive_value",
                    "value": {
                      "type": "integer",
                      "value": 0,
                    },
                  },
                },
              },
              "responseBody": {
                "description": "string",
                "name": "string",
                "rules_used_in": [
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                ],
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "native_primitive",
                    "value": "INTEGER",
                  },
                },
                "value": {
                  "type": "primitive_value",
                  "value": {
                    "type": "integer",
                    "value": 0,
                  },
                },
                "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "description": "string",
                  "name": "string",
                  "rules_used_in": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "native_primitive",
                      "value": "INTEGER",
                    },
                  },
                  "value": {
                    "type": "primitive_value",
                    "value": {
                      "type": "integer",
                      "value": 0,
                    },
                  },
                  "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules-variables/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "name": "string",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "native_primitive",
                    "value": "INTEGER",
                  },
                },
                "value": {
                  "type": "primitive_value",
                  "value": {
                    "type": "integer",
                    "value": 0,
                  },
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "string",
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "native_primitive",
                      "value": "INTEGER",
                    },
                  },
                  "value": {
                    "type": "primitive_value",
                    "value": {
                      "type": "integer",
                      "value": 0,
                    },
                  },
                },
              },
              "responseBody": {
                "content": {
                  "provided_type": {
                    "type": "primitive",
                    "value": {
                      "type": "native_primitive",
                      "value": "INTEGER",
                    },
                  },
                  "provided_value": {
                    "type": "primitive_value",
                    "value": {
                      "type": "integer",
                      "value": 0,
                    },
                  },
                },
                "errorName": "TypeDoesNotMatchValueHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "provided_type": {
                      "type": "primitive",
                      "value": {
                        "type": "native_primitive",
                        "value": "INTEGER",
                      },
                    },
                    "provided_value": {
                      "type": "primitive_value",
                      "value": {
                        "type": "integer",
                        "value": 0,
                      },
                    },
                  },
                  "errorName": "TypeDoesNotMatchValueHttpError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules-variables/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "name": "string",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "native_primitive",
                    "value": "INTEGER",
                  },
                },
                "value": {
                  "type": "primitive_value",
                  "value": {
                    "type": "integer",
                    "value": 0,
                  },
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "string",
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "native_primitive",
                      "value": "INTEGER",
                    },
                  },
                  "value": {
                    "type": "primitive_value",
                    "value": {
                      "type": "integer",
                      "value": 0,
                    },
                  },
                },
              },
              "responseBody": {
                "content": {
                  "name": "string",
                },
                "errorName": "VariableWithNameAlreadyExistsHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "name": "string",
                  },
                  "errorName": "VariableWithNameAlreadyExistsHttpError",
                },
              },
              "responseStatusCode": 409,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/configurable-rules-variables/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "key": "description",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules-types:FieldType",
                  },
                },
                {
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules-types:FieldValue",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_configurable-rules-variables:Variable",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules-variables/v1/summaries",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": [
                {
                  "description": "string",
                  "name": "string",
                  "rules_used_in": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "native_primitive",
                      "value": "INTEGER",
                    },
                  },
                  "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
              ],
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "description": "string",
                    "name": "string",
                    "rules_used_in": [
                      "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    ],
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "native_primitive",
                        "value": "INTEGER",
                      },
                    },
                    "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                ],
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "getAllVariableSummaries",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get All Variable Summaries",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/configurable-rules-variables/v1",
              },
              {
                "type": "literal",
                "value": "/summaries",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "itemType": {
                  "type": "id",
                  "value": "type_configurable-rules-variables:VariableSummary",
                },
                "type": "list",
              },
            },
          },
          "urlSlug": "get-all-variable-summaries",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_configurable-rules-variables:VariableNotFoundError",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Variable Not Found Http Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "VariableNotFoundHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules-variables:VariableNotFoundError",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules-variables/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "description": "string",
                "name": "string",
                "rules_used_in": [
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                ],
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "native_primitive",
                    "value": "INTEGER",
                  },
                },
                "value": {
                  "type": "primitive_value",
                  "value": {
                    "type": "integer",
                    "value": 0,
                  },
                },
                "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "description": "string",
                  "name": "string",
                  "rules_used_in": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "native_primitive",
                      "value": "INTEGER",
                    },
                  },
                  "value": {
                    "type": "primitive_value",
                    "value": {
                      "type": "integer",
                      "value": 0,
                    },
                  },
                  "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules-variables/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
                "errorName": "VariableNotFoundHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "errorName": "VariableNotFoundHttpError",
                },
              },
              "responseStatusCode": 404,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/configurable-rules-variables/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "variable_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "variable_id",
                "type": {
                  "type": "id",
                  "value": "type_configurable-rules-types:VariableId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_configurable-rules-variables:Variable",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_configurable-rules-variables:TypeDoesNotMatchValueError",
              },
            },
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_configurable-rules-variables:VariableNotFoundError",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_configurable-rules-variables:VariableTypeChangeNotAllowedError",
              },
            },
            {
              "statusCode": 409,
              "type": {
                "type": "id",
                "value": "type_configurable-rules-variables:VariableWithNameAlreadyExistsError",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Type Does Not Match Value Http Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "TypeDoesNotMatchValueHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules-variables:TypeDoesNotMatchValueError",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Variable Not Found Http Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "VariableNotFoundHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules-variables:VariableNotFoundError",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Variable Type Change Not Allowed Http Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "VariableTypeChangeNotAllowedHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules-variables:VariableTypeChangeNotAllowedError",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Variable With Name Already Exists Http Error",
              "statusCode": 409,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "VariableWithNameAlreadyExistsHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules-variables:VariableWithNameAlreadyExistsError",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules-variables/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "description": "string",
                "name": "string",
                "rules_used_in": [
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                ],
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "native_primitive",
                    "value": "INTEGER",
                  },
                },
                "value": {
                  "type": "primitive_value",
                  "value": {
                    "type": "integer",
                    "value": 0,
                  },
                },
                "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "description": "string",
                  "name": "string",
                  "rules_used_in": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "native_primitive",
                      "value": "INTEGER",
                    },
                  },
                  "value": {
                    "type": "primitive_value",
                    "value": {
                      "type": "integer",
                      "value": 0,
                    },
                  },
                  "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules-variables/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "provided_type": {
                    "type": "primitive",
                    "value": {
                      "type": "native_primitive",
                      "value": "INTEGER",
                    },
                  },
                  "provided_value": {
                    "type": "primitive_value",
                    "value": {
                      "type": "integer",
                      "value": 0,
                    },
                  },
                },
                "errorName": "TypeDoesNotMatchValueHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "provided_type": {
                      "type": "primitive",
                      "value": {
                        "type": "native_primitive",
                        "value": "INTEGER",
                      },
                    },
                    "provided_value": {
                      "type": "primitive_value",
                      "value": {
                        "type": "integer",
                        "value": 0,
                      },
                    },
                  },
                  "errorName": "TypeDoesNotMatchValueHttpError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules-variables/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
                "errorName": "VariableNotFoundHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "errorName": "VariableNotFoundHttpError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules-variables/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "existing_type": {
                    "type": "primitive",
                    "value": {
                      "type": "native_primitive",
                      "value": "INTEGER",
                    },
                  },
                  "new_type": {
                    "type": "primitive",
                    "value": {
                      "type": "native_primitive",
                      "value": "INTEGER",
                    },
                  },
                  "rules_used_in": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                },
                "errorName": "VariableTypeChangeNotAllowedHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "existing_type": {
                      "type": "primitive",
                      "value": {
                        "type": "native_primitive",
                        "value": "INTEGER",
                      },
                    },
                    "new_type": {
                      "type": "primitive",
                      "value": {
                        "type": "native_primitive",
                        "value": "INTEGER",
                      },
                    },
                    "rules_used_in": [
                      "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    ],
                  },
                  "errorName": "VariableTypeChangeNotAllowedHttpError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules-variables/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "name": "string",
                },
                "errorName": "VariableWithNameAlreadyExistsHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "name": "string",
                  },
                  "errorName": "VariableWithNameAlreadyExistsHttpError",
                },
              },
              "responseStatusCode": 409,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/configurable-rules-variables/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "variable_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "variable_id",
                "type": {
                  "type": "id",
                  "value": "type_configurable-rules-types:VariableId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "description",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "type",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_configurable-rules-types:FieldType",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "value",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_configurable-rules-types:FieldValue",
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_configurable-rules-variables:Variable",
              },
            },
          },
          "urlSlug": "update",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_configurable-rules-variables:VariableInUseError",
              },
            },
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_configurable-rules-variables:VariableNotFoundError",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Variable In Use Http Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "VariableInUseHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules-variables:VariableInUseError",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Variable Not Found Http Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "VariableNotFoundHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_configurable-rules-variables:VariableNotFoundError",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules-variables/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules-variables/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "rules_used_in": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                  "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
                "errorName": "VariableInUseHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "rules_used_in": [
                      "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    ],
                    "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "errorName": "VariableInUseHttpError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules-variables/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
                "errorName": "VariableNotFoundHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "errorName": "VariableNotFoundHttpError",
                },
              },
              "responseStatusCode": 404,
            },
          ],
          "headers": [],
          "id": "delete",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/configurable-rules-variables/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "variable_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "variable_id",
                "type": {
                  "type": "id",
                  "value": "type_configurable-rules-types:VariableId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/configurable-rules-variables/v1",
              "pathParameters": {},
              "queryParameters": {
                "limit": 0,
                "page_token": "string",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "description": "string",
                    "name": "string",
                    "rules_used_in": [
                      "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    ],
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "native_primitive",
                        "value": "INTEGER",
                      },
                    },
                    "value": {
                      "type": "primitive_value",
                      "value": {
                        "type": "integer",
                        "value": 0,
                      },
                    },
                    "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "description": "string",
                      "name": "string",
                      "rules_used_in": [
                        "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      ],
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "native_primitive",
                          "value": "INTEGER",
                        },
                      },
                      "value": {
                        "type": "primitive_value",
                        "value": {
                          "type": "integer",
                          "value": 0,
                        },
                      },
                      "variable_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "getAllVariablesPaged",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get All Variables Paged",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/configurable-rules-variables/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_configurable-rules-variables:VariablesPage",
              },
            },
          },
          "urlSlug": "get-all-variables-paged",
        },
      ],
      "name": "configurable-rules-variables",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_configurable-rules-variables",
      "subpackages": [],
      "types": [
        "type_configurable-rules-variables:Variable",
        "type_configurable-rules-variables:VariablesPage",
        "type_configurable-rules-variables:VariableSummary",
        "type_configurable-rules-variables:TypeDoesNotMatchValueError",
        "type_configurable-rules-variables:VariableInUseError",
        "type_configurable-rules-variables:VariableNotFoundError",
        "type_configurable-rules-variables:VariableTypeChangeNotAllowedError",
        "type_configurable-rules-variables:VariableWithNameAlreadyExistsError",
      ],
      "urlSlug": "configurable-rules-variables",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_contracts": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/contracts/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "contract_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "authorized_signatory": {
                  "email": "string",
                  "fax": "string",
                  "first_name": "string",
                  "last_name": "string",
                  "phone": "string",
                  "title": "string",
                },
                "contract_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "contract_status": "pending",
                "contracting_provider": {
                  "addresses": [
                    {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "address_type": "DEFAULT",
                    },
                  ],
                  "employment_start_date": "string",
                  "employment_status": "ACTIVE",
                  "employment_termination_date": "string",
                  "first_name": "string",
                  "is_billing": true,
                  "is_rendering": true,
                  "last_name": "string",
                  "license_type": "MD",
                  "medicaid_provider_id": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "provider_type": "INDIVIDUAL",
                  "ptan": "string",
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
                "effective_date": "string",
                "expiration_date": "string",
                "payer": {
                  "payer_id": "string",
                  "payer_name": "string",
                  "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
                "regions": {
                  "states": [
                    "AA",
                  ],
                  "type": "states",
                },
                "rendering_providers": {
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                    "addresses": [
                      {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "address_type": "DEFAULT",
                      },
                    ],
                    "employment_start_date": "string",
                    "employment_status": "ACTIVE",
                    "employment_termination_date": "string",
                    "first_name": "string",
                    "is_billing": true,
                    "is_rendering": true,
                    "last_name": "string",
                    "license_type": "MD",
                    "medicaid_provider_id": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "provider_type": "INDIVIDUAL",
                    "ptan": "string",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "authorized_signatory": {
                    "email": "string",
                    "fax": "string",
                    "first_name": "string",
                    "last_name": "string",
                    "phone": "string",
                    "title": "string",
                  },
                  "contract_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "contract_status": "pending",
                  "contracting_provider": {
                    "addresses": [
                      {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "address_type": "DEFAULT",
                      },
                    ],
                    "employment_start_date": "string",
                    "employment_status": "ACTIVE",
                    "employment_termination_date": "string",
                    "first_name": "string",
                    "is_billing": true,
                    "is_rendering": true,
                    "last_name": "string",
                    "license_type": "MD",
                    "medicaid_provider_id": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "provider_type": "INDIVIDUAL",
                    "ptan": "string",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                  "effective_date": "string",
                  "expiration_date": "string",
                  "payer": {
                    "payer_id": "string",
                    "payer_name": "string",
                    "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "regions": {
                    "states": [
                      "AA",
                    ],
                    "type": "states",
                  },
                  "rendering_providers": {
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                      "addresses": [
                        {
                          "address": {
                            "address1": "string",
                            "address2": "string",
                            "city": "string",
                            "state": "AA",
                            "zip_code": "string",
                            "zip_plus_four_code": "string",
                          },
                          "address_type": "DEFAULT",
                        },
                      ],
                      "employment_start_date": "string",
                      "employment_status": "ACTIVE",
                      "employment_termination_date": "string",
                      "first_name": "string",
                      "is_billing": true,
                      "is_rendering": true,
                      "last_name": "string",
                      "license_type": "MD",
                      "medicaid_provider_id": "string",
                      "npi": "string",
                      "organization_name": "string",
                      "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "provider_type": "INDIVIDUAL",
                      "ptan": "string",
                      "tax_id": "string",
                      "taxonomy_code": "string",
                    },
                  },
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/contracts/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "contract_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "contract_id",
                "type": {
                  "type": "id",
                  "value": "type_contracts:ContractId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_contracts:Contract",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/contracts/v2",
              "pathParameters": {},
              "queryParameters": {
                "contract_status": undefined,
                "contracting_provider_id": undefined,
                "limit": 0,
                "payer_names": undefined,
                "rendering_provider_ids": undefined,
                "skip": 0,
                "states": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": [
                {
                  "authorized_signatory": {
                    "email": "string",
                    "fax": "string",
                    "first_name": "string",
                    "last_name": "string",
                    "phone": "string",
                    "title": "string",
                  },
                  "contract_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "contract_status": "pending",
                  "contracting_provider": {
                    "addresses": [
                      {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "address_type": "DEFAULT",
                      },
                    ],
                    "employment_start_date": "string",
                    "employment_status": "ACTIVE",
                    "employment_termination_date": "string",
                    "first_name": "string",
                    "is_billing": true,
                    "is_rendering": true,
                    "last_name": "string",
                    "license_type": "MD",
                    "medicaid_provider_id": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "provider_type": "INDIVIDUAL",
                    "ptan": "string",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                  "effective_date": "string",
                  "expiration_date": "string",
                  "payer": {
                    "payer_id": "string",
                    "payer_name": "string",
                    "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "regions": {
                    "states": [
                      "AA",
                    ],
                    "type": "states",
                  },
                  "rendering_providers": {
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                      "addresses": [
                        {
                          "address": {
                            "address1": "string",
                            "address2": "string",
                            "city": "string",
                            "state": "AA",
                            "zip_code": "string",
                            "zip_plus_four_code": "string",
                          },
                          "address_type": "DEFAULT",
                        },
                      ],
                      "employment_start_date": "string",
                      "employment_status": "ACTIVE",
                      "employment_termination_date": "string",
                      "first_name": "string",
                      "is_billing": true,
                      "is_rendering": true,
                      "last_name": "string",
                      "license_type": "MD",
                      "medicaid_provider_id": "string",
                      "npi": "string",
                      "organization_name": "string",
                      "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "provider_type": "INDIVIDUAL",
                      "ptan": "string",
                      "tax_id": "string",
                      "taxonomy_code": "string",
                    },
                  },
                },
              ],
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "authorized_signatory": {
                      "email": "string",
                      "fax": "string",
                      "first_name": "string",
                      "last_name": "string",
                      "phone": "string",
                      "title": "string",
                    },
                    "contract_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "contract_status": "pending",
                    "contracting_provider": {
                      "addresses": [
                        {
                          "address": {
                            "address1": "string",
                            "address2": "string",
                            "city": "string",
                            "state": "AA",
                            "zip_code": "string",
                            "zip_plus_four_code": "string",
                          },
                          "address_type": "DEFAULT",
                        },
                      ],
                      "employment_start_date": "string",
                      "employment_status": "ACTIVE",
                      "employment_termination_date": "string",
                      "first_name": "string",
                      "is_billing": true,
                      "is_rendering": true,
                      "last_name": "string",
                      "license_type": "MD",
                      "medicaid_provider_id": "string",
                      "npi": "string",
                      "organization_name": "string",
                      "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "provider_type": "INDIVIDUAL",
                      "ptan": "string",
                      "tax_id": "string",
                      "taxonomy_code": "string",
                    },
                    "effective_date": "string",
                    "expiration_date": "string",
                    "payer": {
                      "payer_id": "string",
                      "payer_name": "string",
                      "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    },
                    "regions": {
                      "states": [
                        "AA",
                      ],
                      "type": "states",
                    },
                    "rendering_providers": {
                      "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                        "addresses": [
                          {
                            "address": {
                              "address1": "string",
                              "address2": "string",
                              "city": "string",
                              "state": "AA",
                              "zip_code": "string",
                              "zip_plus_four_code": "string",
                            },
                            "address_type": "DEFAULT",
                          },
                        ],
                        "employment_start_date": "string",
                        "employment_status": "ACTIVE",
                        "employment_termination_date": "string",
                        "first_name": "string",
                        "is_billing": true,
                        "is_rendering": true,
                        "last_name": "string",
                        "license_type": "MD",
                        "medicaid_provider_id": "string",
                        "npi": "string",
                        "organization_name": "string",
                        "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "provider_type": "INDIVIDUAL",
                        "ptan": "string",
                        "tax_id": "string",
                        "taxonomy_code": "string",
                      },
                    },
                  },
                ],
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "getAll",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get All",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/contracts/v2",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "Number of contracts to offset in the returned result. Defaults to 0.",
              "key": "skip",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Max number of contracts returned. Defaults to 100. Max is 1000.",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "contracting_provider_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_contracts:ContractingProviderId",
                },
                "type": "optional",
              },
            },
            {
              "key": "rendering_provider_ids",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_contracts:RenderingProviderid",
                },
                "type": "optional",
              },
            },
            {
              "description": "Filter to contracts that include any of the included payer names.",
              "key": "payer_names",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "states",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:State",
                },
                "type": "optional",
              },
            },
            {
              "description": "The status of the contract. Defaults to \`pending\`",
              "key": "contract_status",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_contracts:ContractStatus",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "itemType": {
                  "type": "id",
                  "value": "type_contracts:Contract",
                },
                "type": "list",
              },
            },
          },
          "urlSlug": "get-all",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Creates a new contract within the user's current organization",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/contracts/v2",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "contracting_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "effective_date": "string",
                "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "regions": {
                  "states": [
                    "AA",
                  ],
                  "type": "states",
                },
                "rendering_provider_ids": [
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                ],
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "contracting_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "effective_date": "string",
                  "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "regions": {
                    "states": [
                      "AA",
                    ],
                    "type": "states",
                  },
                  "rendering_provider_ids": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                },
              },
              "responseBody": {
                "authorized_signatory": {
                  "email": "string",
                  "fax": "string",
                  "first_name": "string",
                  "last_name": "string",
                  "phone": "string",
                  "title": "string",
                },
                "contract_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "contract_status": "pending",
                "contracting_provider": {
                  "addresses": [
                    {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "address_type": "DEFAULT",
                    },
                  ],
                  "employment_start_date": "string",
                  "employment_status": "ACTIVE",
                  "employment_termination_date": "string",
                  "first_name": "string",
                  "is_billing": true,
                  "is_rendering": true,
                  "last_name": "string",
                  "license_type": "MD",
                  "medicaid_provider_id": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "provider_type": "INDIVIDUAL",
                  "ptan": "string",
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
                "effective_date": "string",
                "expiration_date": "string",
                "payer": {
                  "payer_id": "string",
                  "payer_name": "string",
                  "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
                "regions": {
                  "states": [
                    "AA",
                  ],
                  "type": "states",
                },
                "rendering_providers": {
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                    "addresses": [
                      {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "address_type": "DEFAULT",
                      },
                    ],
                    "employment_start_date": "string",
                    "employment_status": "ACTIVE",
                    "employment_termination_date": "string",
                    "first_name": "string",
                    "is_billing": true,
                    "is_rendering": true,
                    "last_name": "string",
                    "license_type": "MD",
                    "medicaid_provider_id": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "provider_type": "INDIVIDUAL",
                    "ptan": "string",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "authorized_signatory": {
                    "email": "string",
                    "fax": "string",
                    "first_name": "string",
                    "last_name": "string",
                    "phone": "string",
                    "title": "string",
                  },
                  "contract_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "contract_status": "pending",
                  "contracting_provider": {
                    "addresses": [
                      {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "address_type": "DEFAULT",
                      },
                    ],
                    "employment_start_date": "string",
                    "employment_status": "ACTIVE",
                    "employment_termination_date": "string",
                    "first_name": "string",
                    "is_billing": true,
                    "is_rendering": true,
                    "last_name": "string",
                    "license_type": "MD",
                    "medicaid_provider_id": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "provider_type": "INDIVIDUAL",
                    "ptan": "string",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                  "effective_date": "string",
                  "expiration_date": "string",
                  "payer": {
                    "payer_id": "string",
                    "payer_name": "string",
                    "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "regions": {
                    "states": [
                      "AA",
                    ],
                    "type": "states",
                  },
                  "rendering_providers": {
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                      "addresses": [
                        {
                          "address": {
                            "address1": "string",
                            "address2": "string",
                            "city": "string",
                            "state": "AA",
                            "zip_code": "string",
                            "zip_plus_four_code": "string",
                          },
                          "address_type": "DEFAULT",
                        },
                      ],
                      "employment_start_date": "string",
                      "employment_status": "ACTIVE",
                      "employment_termination_date": "string",
                      "first_name": "string",
                      "is_billing": true,
                      "is_rendering": true,
                      "last_name": "string",
                      "license_type": "MD",
                      "medicaid_provider_id": "string",
                      "npi": "string",
                      "organization_name": "string",
                      "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "provider_type": "INDIVIDUAL",
                      "ptan": "string",
                      "tax_id": "string",
                      "taxonomy_code": "string",
                    },
                  },
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/contracts/v2",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [
                "type_contracts:ContractBase",
              ],
              "properties": [
                {
                  "description": "The UUID of the provider under agreement to the contract",
                  "key": "contracting_provider_id",
                  "valueType": {
                    "type": "id",
                    "value": "type_contracts:ContractingProviderId",
                  },
                },
                {
                  "description": "A rendering provider isn't contracted directly with the payer but can render
services under the contract held by the contracting provider.
Max items is 100.
",
                  "key": "rendering_provider_ids",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_contracts:RenderingProviderid",
                    },
                    "type": "set",
                  },
                },
                {
                  "description": "The UUID of the insurance company under agreement to the contract",
                  "key": "payer_uuid",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid",
                    },
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_contracts:Contract",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/contracts/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "contract_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "delete",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/contracts/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "contract_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "contract_id",
                "type": {
                  "type": "id",
                  "value": "type_contracts:ContractId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/contracts/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "contract_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "authorized_signatory": {
                  "email": "string",
                  "fax": "string",
                  "first_name": "string",
                  "last_name": "string",
                  "phone": "string",
                  "title": "string",
                },
                "contract_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "contract_status": "pending",
                "contracting_provider": {
                  "addresses": [
                    {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "address_type": "DEFAULT",
                    },
                  ],
                  "employment_start_date": "string",
                  "employment_status": "ACTIVE",
                  "employment_termination_date": "string",
                  "first_name": "string",
                  "is_billing": true,
                  "is_rendering": true,
                  "last_name": "string",
                  "license_type": "MD",
                  "medicaid_provider_id": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "provider_type": "INDIVIDUAL",
                  "ptan": "string",
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
                "effective_date": "string",
                "expiration_date": "string",
                "payer": {
                  "payer_id": "string",
                  "payer_name": "string",
                  "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
                "regions": {
                  "states": [
                    "AA",
                  ],
                  "type": "states",
                },
                "rendering_providers": {
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                    "addresses": [
                      {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "address_type": "DEFAULT",
                      },
                    ],
                    "employment_start_date": "string",
                    "employment_status": "ACTIVE",
                    "employment_termination_date": "string",
                    "first_name": "string",
                    "is_billing": true,
                    "is_rendering": true,
                    "last_name": "string",
                    "license_type": "MD",
                    "medicaid_provider_id": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "provider_type": "INDIVIDUAL",
                    "ptan": "string",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "authorized_signatory": {
                    "email": "string",
                    "fax": "string",
                    "first_name": "string",
                    "last_name": "string",
                    "phone": "string",
                    "title": "string",
                  },
                  "contract_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "contract_status": "pending",
                  "contracting_provider": {
                    "addresses": [
                      {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "address_type": "DEFAULT",
                      },
                    ],
                    "employment_start_date": "string",
                    "employment_status": "ACTIVE",
                    "employment_termination_date": "string",
                    "first_name": "string",
                    "is_billing": true,
                    "is_rendering": true,
                    "last_name": "string",
                    "license_type": "MD",
                    "medicaid_provider_id": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "provider_type": "INDIVIDUAL",
                    "ptan": "string",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                  "effective_date": "string",
                  "expiration_date": "string",
                  "payer": {
                    "payer_id": "string",
                    "payer_name": "string",
                    "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "regions": {
                    "states": [
                      "AA",
                    ],
                    "type": "states",
                  },
                  "rendering_providers": {
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                      "addresses": [
                        {
                          "address": {
                            "address1": "string",
                            "address2": "string",
                            "city": "string",
                            "state": "AA",
                            "zip_code": "string",
                            "zip_plus_four_code": "string",
                          },
                          "address_type": "DEFAULT",
                        },
                      ],
                      "employment_start_date": "string",
                      "employment_status": "ACTIVE",
                      "employment_termination_date": "string",
                      "first_name": "string",
                      "is_billing": true,
                      "is_rendering": true,
                      "last_name": "string",
                      "license_type": "MD",
                      "medicaid_provider_id": "string",
                      "npi": "string",
                      "organization_name": "string",
                      "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "provider_type": "INDIVIDUAL",
                      "ptan": "string",
                      "tax_id": "string",
                      "taxonomy_code": "string",
                    },
                  },
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/contracts/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "contract_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "contract_id",
                "type": {
                  "type": "id",
                  "value": "type_contracts:ContractId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "description": "A rendering provider isn't contracted directly with the payer but can render
services under the contract held by the contracting provider.
Max items is 100.
",
                  "key": "rendering_provider_ids",
                  "valueType": {
                    "itemType": {
                      "itemType": {
                        "type": "id",
                        "value": "type_contracts:RenderingProviderid",
                      },
                      "type": "set",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "The starting day upon which the contract is effective",
                  "key": "effective_date",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Date",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "An optional end day upon which the contract expires",
                  "key": "expiration_date",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Date",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "If present, the contract's rendering providers will be patched to this exact
value, overriding what was set before.
",
                  "key": "regions",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Regions",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "contract_status",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_contracts:ContractStatus",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "authorized_signatory",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_contracts:AuthorizedSignatory",
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_contracts:Contract",
              },
            },
          },
          "urlSlug": "update",
        },
      ],
      "name": "contracts",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_contracts",
      "subpackages": [],
      "types": [
        "type_contracts:ContractId",
        "type_contracts:ContractingProviderId",
        "type_contracts:RenderingProviderid",
        "type_contracts:ContractBase",
        "type_contracts:Contract",
        "type_contracts:ContractStatus",
        "type_contracts:AuthorizedSignatory",
      ],
      "urlSlug": "contracts",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_credentialing": {
      "description": undefined,
      "endpoints": [],
      "name": "credentialing",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_credentialing",
      "subpackages": [],
      "types": [
        "type_credentialing:ProviderCredentialingSpanId",
        "type_credentialing:EncounterCredentialingStatusResult",
        "type_credentialing:CredentialedEncounterStatusResult",
        "type_credentialing:ProviderCredentialingSpanBase",
        "type_credentialing:ProviderCredentialingSpan",
        "type_credentialing:CredentialingSpanDates",
        "type_credentialing:RequiredCredentialingDates",
        "type_credentialing:NonRequiredCredentialingDates",
        "type_credentialing:CredentialingSpanStatus",
      ],
      "urlSlug": "credentialing",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_dashboards": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/dashboards/v2",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "groups": [
                  {
                    "dashboards": [
                      {
                        "dashboard_id": "string",
                        "description": "string",
                        "display_name": "string",
                        "icon": "bullseye-arrow",
                        "learn_more_link": "string",
                      },
                    ],
                    "description": "string",
                    "learn_more_link": "string",
                    "type": "CLAIMS",
                  },
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "groups": [
                    {
                      "dashboards": [
                        {
                          "dashboard_id": "string",
                          "description": "string",
                          "display_name": "string",
                          "icon": "bullseye-arrow",
                          "learn_more_link": "string",
                        },
                      ],
                      "description": "string",
                      "learn_more_link": "string",
                      "type": "CLAIMS",
                    },
                  ],
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get_multi",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Multi",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/dashboards/v2",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_dashboards:GetAllDashboardGroupsResponse",
              },
            },
          },
          "urlSlug": "get-multi",
        },
      ],
      "name": "dashboards",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_dashboards",
      "subpackages": [],
      "types": [
        "type_dashboards:DashboardId",
        "type_dashboards:FontAwesomeIconName",
        "type_dashboards:DashboardGroupType",
        "type_dashboards:Dashboard",
        "type_dashboards:DashboardGroup",
        "type_dashboards:GetAllDashboardGroupsResponse",
      ],
      "urlSlug": "dashboards",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_diagnoses": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/diagnoses/v2",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "code": "string",
                "code_type": "ABF",
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "code": "string",
                  "code_type": "ABF",
                  "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
              },
              "responseBody": {
                "code": "string",
                "code_type": "ABF",
                "created_at": "2023-01-01T00:00:00Z",
                "diagnosis_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "name": "string",
                "updated_at": "2023-01-01T00:00:00Z",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "code": "string",
                  "code_type": "ABF",
                  "created_at": "2023-01-01T00:00:00Z",
                  "diagnosis_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "name": "string",
                  "updated_at": "2023-01-01T00:00:00Z",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/diagnoses/v2",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_diagnoses:StandaloneDiagnosisCreate",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_diagnoses:Diagnosis",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/diagnoses/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "diagnosis_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "code": "string",
                "code_type": "ABF",
                "created_at": "2023-01-01T00:00:00Z",
                "diagnosis_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "name": "string",
                "updated_at": "2023-01-01T00:00:00Z",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "code": "string",
                  "code_type": "ABF",
                  "created_at": "2023-01-01T00:00:00Z",
                  "diagnosis_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "name": "string",
                  "updated_at": "2023-01-01T00:00:00Z",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/diagnoses/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "diagnosis_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "diagnosis_id",
                "type": {
                  "type": "id",
                  "value": "type_diagnoses:DiagnosisId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "description": "Empty string not allowed.",
                  "key": "name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "Typically, providers submitting claims to Candid are using ICD-10 diagnosis codes. If you are using ICD-10 codes, the primary diagnosis code listed on the claim should use the ABK code_type. If more than one diagnosis is being submitted on a claim, please use ABF for the rest of the listed diagnoses. If you are using ICD-9 diagnosis codes, use BK and BF for the principal and following diagnosis code(s) respectively.
",
                  "key": "code_type",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_diagnoses:DiagnosisTypeCode",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "Empty string not allowed.
Should be of the appropriate format for the provided \`code_type\`.
Must obey the ICD-10 format if an ICD-10 code_type is provided, specifically:
  - Letter
  - Digit
  - Digit or the letter \`A\` or \`B\`
  - (Optional) Period \`.\`
  - Up to 4 (or as few as 0) letters and digits
",
                  "key": "code",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_diagnoses:Diagnosis",
              },
            },
          },
          "urlSlug": "update",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/diagnoses/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "diagnosis_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "delete",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/diagnoses/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "diagnosis_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "diagnosis_id",
                "type": {
                  "type": "id",
                  "value": "type_diagnoses:DiagnosisId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete",
        },
      ],
      "name": "diagnoses",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_diagnoses",
      "subpackages": [],
      "types": [
        "type_diagnoses:DiagnosisId",
        "type_diagnoses:DiagnosisCreate",
        "type_diagnoses:StandaloneDiagnosisCreate",
        "type_diagnoses:DiagnosisTypeCode",
        "type_diagnoses:Diagnosis",
      ],
      "urlSlug": "diagnoses",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_encounter-providers": {
      "description": undefined,
      "endpoints": [],
      "name": "encounter-providers",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_encounter-providers",
      "subpackages": [
        "subpackage_encounter-providers/v2",
      ],
      "types": [],
      "urlSlug": "encounter-providers",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_encounter-providers/v2": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounter-providers/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "address": {
                  "address1": "string",
                  "address2": "string",
                  "city": "string",
                  "state": "AA",
                  "zip_code": "string",
                  "zip_plus_four_code": "string",
                },
                "first_name": "string",
                "last_name": "string",
                "npi": "string",
                "organization_name": "string",
                "taxonomy_code": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "first_name": "string",
                  "last_name": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "taxonomy_code": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounter-providers/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "update_referring_provider",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Update Referring Provider",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/encounter-providers/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_encounter-providers/v2:ReferringProviderUpdate",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_encounter-providers/v2:ReferringProvider",
              },
            },
          },
          "urlSlug": "update-referring-provider",
        },
      ],
      "name": "v2",
      "parent": "subpackage_encounter-providers",
      "pointsTo": undefined,
      "subpackageId": "subpackage_encounter-providers/v2",
      "subpackages": [],
      "types": [
        "type_encounter-providers/v2:EncounterProviderBase",
        "type_encounter-providers/v2:RenderingProvider",
        "type_encounter-providers/v2:ReferringProvider",
        "type_encounter-providers/v2:ReferringProviderUpdate",
        "type_encounter-providers/v2:BillingProvider",
        "type_encounter-providers/v2:ProviderId",
        "type_encounter-providers/v2:EncounterProvider",
      ],
      "urlSlug": "v-2",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_encounter-summaries": {
      "description": undefined,
      "endpoints": [],
      "name": "encounter-summaries",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_encounter-summaries",
      "subpackages": [
        "subpackage_encounter-summaries/v1",
      ],
      "types": [],
      "urlSlug": "encounter-summaries",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_encounter-summaries/v1": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounter-summaries/v1",
              "pathParameters": {},
              "queryParameters": {
                "billable_status": undefined,
                "billing_provider_npis": undefined,
                "billing_provider_tins": undefined,
                "carcs": undefined,
                "claim_status": "biller_received",
                "date_of_service_max": undefined,
                "date_of_service_min": undefined,
                "denial_reasons": undefined,
                "diagnoses_updated_since": undefined,
                "encounter_external_id": undefined,
                "limit": 0,
                "owner_of_next_action": undefined,
                "page_token": undefined,
                "primary_payer_ids": undefined,
                "primary_payer_names": undefined,
                "procedure_codes": undefined,
                "procedure_modifiers": undefined,
                "rarcs": undefined,
                "rejection_reasons": undefined,
                "rendering_provider_npis": undefined,
                "rendering_provider_tins": undefined,
                "responsible_party": undefined,
                "search_term": undefined,
                "sort": undefined,
                "sort_direction": undefined,
                "sort_field": undefined,
                "sum_allowed_amount_cents_max": undefined,
                "sum_allowed_amount_cents_min": undefined,
                "sum_charge_amount_cents_max": undefined,
                "sum_charge_amount_cents_min": undefined,
                "sum_paid_amount_cents_max": undefined,
                "sum_paid_amount_cents_min": undefined,
                "sum_patient_responsibility_cents_max": undefined,
                "sum_patient_responsibility_cents_min": undefined,
                "tag_ids": undefined,
                "work_queue_id": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "billable_status": "BILLABLE",
                    "billing_provider_name": "string",
                    "billing_provider_npi": "string",
                    "billing_provider_tin": "string",
                    "carcs": [
                      "string",
                    ],
                    "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "claim_status": "biller_received",
                    "date_of_service": "2023-01-01",
                    "denial_reasons": [
                      "Authorization Required",
                    ],
                    "diagnosis_codes": [
                      "string",
                    ],
                    "encounter_external_id": "string",
                    "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "end_date_of_service": "2023-01-01",
                    "owner_of_next_action": "CANDID",
                    "patient_first_name": "string",
                    "patient_last_name": "string",
                    "primary_insurance_paid_cents": 0,
                    "primary_payer_id": "string",
                    "primary_payer_name": "string",
                    "procedure_codes": [
                      "string",
                    ],
                    "procedure_modifiers": [
                      "22",
                    ],
                    "rarcs": [
                      "string",
                    ],
                    "rejection_reason": "string",
                    "rendering_provider_name": "string",
                    "rendering_provider_npi": "string",
                    "rendering_provider_tin": "string",
                    "responsible_party": "INSURANCE_PAY",
                    "secondary_insurance_paid_cents": 0,
                    "service_facility": {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "organization_name": "string",
                      "service_facility_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    },
                    "sum_allowed_amount_cents": 0,
                    "sum_charge_amount_cents": 0,
                    "sum_insurance_adjustment_amount_cents": 0,
                    "sum_insurance_balance_amount_cents": 0,
                    "sum_paid_amount_cents": 0,
                    "sum_patient_balance_amount_cents": 0,
                    "sum_patient_paid_amount_cents": 0,
                    "sum_patient_responsibility_cents": 0,
                    "sum_total_balance_amount_cents": 0,
                    "tag_ids": [
                      "string",
                    ],
                    "tertiary_insurance_paid_cents": 0,
                    "work_queue_id": "string",
                    "work_queue_membership_activated_at": "2023-01-01T00:00:00Z",
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "billable_status": "BILLABLE",
                      "billing_provider_name": "string",
                      "billing_provider_npi": "string",
                      "billing_provider_tin": "string",
                      "carcs": [
                        "string",
                      ],
                      "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "claim_status": "biller_received",
                      "date_of_service": "2023-01-01",
                      "denial_reasons": [
                        "Authorization Required",
                      ],
                      "diagnosis_codes": [
                        "string",
                      ],
                      "encounter_external_id": "string",
                      "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "end_date_of_service": "2023-01-01",
                      "owner_of_next_action": "CANDID",
                      "patient_first_name": "string",
                      "patient_last_name": "string",
                      "primary_insurance_paid_cents": 0,
                      "primary_payer_id": "string",
                      "primary_payer_name": "string",
                      "procedure_codes": [
                        "string",
                      ],
                      "procedure_modifiers": [
                        "22",
                      ],
                      "rarcs": [
                        "string",
                      ],
                      "rejection_reason": "string",
                      "rendering_provider_name": "string",
                      "rendering_provider_npi": "string",
                      "rendering_provider_tin": "string",
                      "responsible_party": "INSURANCE_PAY",
                      "secondary_insurance_paid_cents": 0,
                      "service_facility": {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "organization_name": "string",
                        "service_facility_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      },
                      "sum_allowed_amount_cents": 0,
                      "sum_charge_amount_cents": 0,
                      "sum_insurance_adjustment_amount_cents": 0,
                      "sum_insurance_balance_amount_cents": 0,
                      "sum_paid_amount_cents": 0,
                      "sum_patient_balance_amount_cents": 0,
                      "sum_patient_paid_amount_cents": 0,
                      "sum_patient_responsibility_cents": 0,
                      "sum_total_balance_amount_cents": 0,
                      "tag_ids": [
                        "string",
                      ],
                      "tertiary_insurance_paid_cents": 0,
                      "work_queue_id": "string",
                      "work_queue_membership_activated_at": "2023-01-01T00:00:00Z",
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "getSummaries",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Summaries",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/encounter-summaries/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "claim_status",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_claims:ClaimStatus",
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to created_at:desc",
              "key": "sort",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounters/v4:EncounterSortOptions",
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to created_at",
              "key": "sort_field",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounter-summaries/v1:EncounterSortableFields",
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to descending",
              "key": "sort_direction",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounter-summaries/v1:EncounterSortDirections",
                },
                "type": "optional",
              },
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
            {
              "key": "date_of_service_min",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "date",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "date_of_service_max",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "date",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "sum_charge_amount_cents_min",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "sum_charge_amount_cents_max",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "sum_allowed_amount_cents_min",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "sum_allowed_amount_cents_max",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "sum_paid_amount_cents_min",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "sum_paid_amount_cents_max",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "sum_patient_responsibility_cents_min",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "sum_patient_responsibility_cents_max",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "primary_payer_ids",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_payers:PayerId",
                },
                "type": "optional",
              },
            },
            {
              "description": "Comma delimited string",
              "key": "primary_payer_names",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Filter by any of the following fields: encounter_id, claim_id, patient external_id,
patient date of birth, patient first name, patient last name,
or encounter external id.
",
              "key": "search_term",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Filter to an exact match on encounter external_id, if one exists",
              "key": "encounter_external_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:EncounterExternalId",
                },
                "type": "optional",
              },
            },
            {
              "description": "ISO 8601 timestamp; ideally in UTC (although not required): 2019-08-24T14:15:22Z
",
              "key": "diagnoses_updated_since",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "tag_ids",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_tags:TagId",
                },
                "type": "optional",
              },
            },
            {
              "key": "carcs",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "rarcs",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "denial_reasons",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_service-lines/v2:DenialReasonContent",
                },
                "type": "optional",
              },
            },
            {
              "key": "rejection_reasons",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "procedure_codes",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "procedure_modifiers",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:ProcedureModifier",
                },
                "type": "optional",
              },
            },
            {
              "key": "billing_provider_npis",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:Npi",
                },
                "type": "optional",
              },
            },
            {
              "key": "billing_provider_tins",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "rendering_provider_npis",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:Npi",
                },
                "type": "optional",
              },
            },
            {
              "key": "rendering_provider_tins",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "billable_status",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounters/v4:BillableStatusType",
                },
                "type": "optional",
              },
            },
            {
              "key": "responsible_party",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounters/v4:ResponsiblePartyType",
                },
                "type": "optional",
              },
            },
            {
              "key": "work_queue_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:WorkQueueId",
                },
                "type": "optional",
              },
            },
            {
              "key": "owner_of_next_action",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounters/v4:EncounterOwnerOfNextActionType",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_encounter-summaries/v1:EncounterSummaryPage",
              },
            },
          },
          "urlSlug": "get-summaries",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounter-summaries/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "billable_status": "BILLABLE",
                "billing_provider_name": "string",
                "billing_provider_npi": "string",
                "billing_provider_tin": "string",
                "carcs": [
                  "string",
                ],
                "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "claim_status": "biller_received",
                "date_of_service": "2023-01-01",
                "denial_reasons": [
                  "Authorization Required",
                ],
                "diagnosis_codes": [
                  "string",
                ],
                "encounter_external_id": "string",
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "end_date_of_service": "2023-01-01",
                "owner_of_next_action": "CANDID",
                "patient_first_name": "string",
                "patient_last_name": "string",
                "primary_insurance_paid_cents": 0,
                "primary_payer_id": "string",
                "primary_payer_name": "string",
                "procedure_codes": [
                  "string",
                ],
                "procedure_modifiers": [
                  "22",
                ],
                "rarcs": [
                  "string",
                ],
                "rejection_reason": "string",
                "rendering_provider_name": "string",
                "rendering_provider_npi": "string",
                "rendering_provider_tin": "string",
                "responsible_party": "INSURANCE_PAY",
                "secondary_insurance_paid_cents": 0,
                "service_facility": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "organization_name": "string",
                  "service_facility_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
                "sum_allowed_amount_cents": 0,
                "sum_charge_amount_cents": 0,
                "sum_insurance_adjustment_amount_cents": 0,
                "sum_insurance_balance_amount_cents": 0,
                "sum_paid_amount_cents": 0,
                "sum_patient_balance_amount_cents": 0,
                "sum_patient_paid_amount_cents": 0,
                "sum_patient_responsibility_cents": 0,
                "sum_total_balance_amount_cents": 0,
                "tag_ids": [
                  "string",
                ],
                "tertiary_insurance_paid_cents": 0,
                "work_queue_id": "string",
                "work_queue_membership_activated_at": "2023-01-01T00:00:00Z",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "billable_status": "BILLABLE",
                  "billing_provider_name": "string",
                  "billing_provider_npi": "string",
                  "billing_provider_tin": "string",
                  "carcs": [
                    "string",
                  ],
                  "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "claim_status": "biller_received",
                  "date_of_service": "2023-01-01",
                  "denial_reasons": [
                    "Authorization Required",
                  ],
                  "diagnosis_codes": [
                    "string",
                  ],
                  "encounter_external_id": "string",
                  "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "end_date_of_service": "2023-01-01",
                  "owner_of_next_action": "CANDID",
                  "patient_first_name": "string",
                  "patient_last_name": "string",
                  "primary_insurance_paid_cents": 0,
                  "primary_payer_id": "string",
                  "primary_payer_name": "string",
                  "procedure_codes": [
                    "string",
                  ],
                  "procedure_modifiers": [
                    "22",
                  ],
                  "rarcs": [
                    "string",
                  ],
                  "rejection_reason": "string",
                  "rendering_provider_name": "string",
                  "rendering_provider_npi": "string",
                  "rendering_provider_tin": "string",
                  "responsible_party": "INSURANCE_PAY",
                  "secondary_insurance_paid_cents": 0,
                  "service_facility": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "organization_name": "string",
                    "service_facility_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "sum_allowed_amount_cents": 0,
                  "sum_charge_amount_cents": 0,
                  "sum_insurance_adjustment_amount_cents": 0,
                  "sum_insurance_balance_amount_cents": 0,
                  "sum_paid_amount_cents": 0,
                  "sum_patient_balance_amount_cents": 0,
                  "sum_patient_paid_amount_cents": 0,
                  "sum_patient_responsibility_cents": 0,
                  "sum_total_balance_amount_cents": 0,
                  "tag_ids": [
                    "string",
                  ],
                  "tertiary_insurance_paid_cents": 0,
                  "work_queue_id": "string",
                  "work_queue_membership_activated_at": "2023-01-01T00:00:00Z",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounter-summaries/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
          ],
          "headers": [],
          "id": "getSummary",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Summary",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/encounter-summaries/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_encounter-summaries/v1:EncounterSummary",
              },
            },
          },
          "urlSlug": "get-summary",
        },
      ],
      "name": "v1",
      "parent": "subpackage_encounter-summaries",
      "pointsTo": undefined,
      "subpackageId": "subpackage_encounter-summaries/v1",
      "subpackages": [],
      "types": [
        "type_encounter-summaries/v1:EncounterSortableFields",
        "type_encounter-summaries/v1:EncounterSortDirections",
        "type_encounter-summaries/v1:EncounterSummary",
        "type_encounter-summaries/v1:EncounterSummaryPage",
      ],
      "urlSlug": "v-1",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_encounter_timeline": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounter-timeline/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "events": [
                  {
                    "description": "string",
                    "occurred_at": "2023-01-01T00:00:00Z",
                    "secondary_text": "string",
                    "type": "encounter_received",
                  },
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "events": [
                    {
                      "description": "string",
                      "occurred_at": "2023-01-01T00:00:00Z",
                      "secondary_text": "string",
                      "type": "encounter_received",
                    },
                  ],
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounter-timeline/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounter-timeline/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/encounter-timeline/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_encounter_timeline:EncounterTimelineResponse",
              },
            },
          },
          "urlSlug": "get",
        },
      ],
      "name": "encounter_timeline",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_encounter_timeline",
      "subpackages": [],
      "types": [
        "type_encounter_timeline:TimelineEventData",
        "type_encounter_timeline:GenericTimelineEventData",
        "type_encounter_timeline:GenericNamedTimelineEventData",
        "type_encounter_timeline:TimelineEvent",
        "type_encounter_timeline:EncounterTimelineResponse",
        "type_encounter_timeline:ClaimSubmissionTimelineEvent",
      ],
      "urlSlug": "encounter-timeline",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_encounters": {
      "description": undefined,
      "endpoints": [],
      "name": "encounters",
      "parent": undefined,
      "pointsTo": "subpackage_encounters/v4",
      "subpackageId": "subpackage_encounters",
      "subpackages": [
        "subpackage_encounters/v4",
      ],
      "types": [],
      "urlSlug": "encounters",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_encounters-internal": {
      "description": undefined,
      "endpoints": [],
      "name": "encounters-internal",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_encounters-internal",
      "subpackages": [
        "subpackage_encounters-internal/v1",
      ],
      "types": [],
      "urlSlug": "encounters-internal",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_encounters-internal/v1": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters-internal/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/reverse-remit/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "remit_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "remit_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "remit_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters-internal/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/reverse-remit/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "remit_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters-internal/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/reverse-remit/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "remit_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "reverse_manual_insurance_adjustment_remit",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Reverse Manual Insurance Adjustment Remit",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/encounters-internal/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "/reverse-remit/",
              },
              {
                "type": "pathParameter",
                "value": "remit_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
              {
                "key": "remit_id",
                "type": {
                  "type": "id",
                  "value": "type_remits/v1:RemitId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_encounters-internal/v1:RemitReversalResponse",
              },
            },
          },
          "urlSlug": "reverse-manual-insurance-adjustment-remit",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters-internal/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/financial-information",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "financial_information_by_payer_responsibility_response": {
                  "claim_balance_cents": 0,
                  "primary_financial_information": {
                    "insurance_adjustment_cents": 0,
                    "insurance_balance_cents": 0,
                    "insurance_paid_cents": 0,
                  },
                  "type": "only_primary",
                },
                "total_allowed_amount_cents": 0,
                "total_billed_amount_cents": 0,
                "total_insurance_financial_information": {
                  "insurance_adjustment_cents": 0,
                  "insurance_balance_cents": 0,
                  "insurance_paid_cents": 0,
                },
                "total_patient_balance_cents": 0,
                "total_patient_paid_cents": 0,
                "total_patient_responsibility_cents": 0,
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "financial_information_by_payer_responsibility_response": {
                    "claim_balance_cents": 0,
                    "primary_financial_information": {
                      "insurance_adjustment_cents": 0,
                      "insurance_balance_cents": 0,
                      "insurance_paid_cents": 0,
                    },
                    "type": "only_primary",
                  },
                  "total_allowed_amount_cents": 0,
                  "total_billed_amount_cents": 0,
                  "total_insurance_financial_information": {
                    "insurance_adjustment_cents": 0,
                    "insurance_balance_cents": 0,
                    "insurance_paid_cents": 0,
                  },
                  "total_patient_balance_cents": 0,
                  "total_patient_paid_cents": 0,
                  "total_patient_responsibility_cents": 0,
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters-internal/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/financial-information",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
          ],
          "headers": [],
          "id": "calculate_financial_information",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Calculate Financial Information",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/encounters-internal/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "/financial-information",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_encounters-internal/v1:EncounterFinancialInformationResponse",
              },
            },
          },
          "urlSlug": "calculate-financial-information",
        },
      ],
      "name": "v1",
      "parent": "subpackage_encounters-internal",
      "pointsTo": undefined,
      "subpackageId": "subpackage_encounters-internal/v1",
      "subpackages": [],
      "types": [
        "type_encounters-internal/v1:RemitReversalResponse",
        "type_encounters-internal/v1:EncounterFinancialInformation",
        "type_encounters-internal/v1:PrimaryEncounterFinancialInformation",
        "type_encounters-internal/v1:MultiplePayerResponsibilityEncounterFinancialInformation",
        "type_encounters-internal/v1:EncounterFinancialInformationByPayerResponsibilityResponse",
        "type_encounters-internal/v1:EncounterFinancialInformationResponse",
      ],
      "urlSlug": "v-1",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_encounters/v4": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4",
              "pathParameters": {},
              "queryParameters": {
                "billable_status": undefined,
                "claim_status": "biller_received",
                "date_of_service_max": undefined,
                "date_of_service_min": undefined,
                "diagnoses_updated_since": undefined,
                "external_id": undefined,
                "limit": 0,
                "owner_of_next_action": undefined,
                "page_token": undefined,
                "primary_payer_names": undefined,
                "responsible_party": undefined,
                "search_term": undefined,
                "sort": undefined,
                "tag_ids": undefined,
                "work_queue_id": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "appointment_type": "string",
                    "benefits_assigned_to_provider": true,
                    "billable_status": "BILLABLE",
                    "billing_notes": [
                      {
                        "author_auth0_id": "string",
                        "author_name": "string",
                        "billing_note_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "created_at": "2023-01-01T00:00:00Z",
                        "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "text": "string",
                      },
                    ],
                    "billing_provider": {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "first_name": "string",
                      "last_name": "string",
                      "npi": "string",
                      "organization_name": "string",
                      "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "tax_id": "string",
                      "taxonomy_code": "string",
                    },
                    "claims": [
                      {
                        "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "clearinghouse": "string",
                        "clearinghouse_claim_id": "string",
                        "eras": [
                          {
                            "check_date": "string",
                            "check_number": "string",
                            "era_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          },
                        ],
                        "payer_claim_id": "string",
                        "service_lines": [
                          {
                            "allowed_amount_cents": 0,
                            "charge_amount_cents": 0,
                            "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            "date_of_service_range": {
                              "end_date": "string",
                              "start_date": "string",
                            },
                            "denial_reason": {
                              "reason": "Authorization Required",
                            },
                            "diagnosis_id_one": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            "diagnosis_id_three": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            "diagnosis_id_two": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            "diagnosis_id_zero": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            "insurance_balance_cents": 0,
                            "modifiers": [
                              "22",
                            ],
                            "paid_amount_cents": 0,
                            "patient_balance_cents": 0,
                            "patient_responsibility_cents": 0,
                            "place_of_service_code": "01",
                            "procedure_code": "string",
                            "quantity": "string",
                            "related_invoices": [
                              {
                                "created_at": "2023-01-01T00:00:00Z",
                                "customer_invoice_url": "string",
                                "due_date": "string",
                                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "items": [
                                  {
                                    "amount_cents": 0,
                                    "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  },
                                ],
                                "note": "string",
                                "organzation_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "patient_external_id": "string",
                                "source_customer_id": "string",
                                "source_id": "string",
                                "status": "draft",
                                "updated_at": "2023-01-01T00:00:00Z",
                                "url": "string",
                              },
                            ],
                            "service_line_era_data": {
                              "remittance_advice_remark_codes": [
                                "string",
                              ],
                              "service_line_adjustments": [
                                {
                                  "adjustment_amount_cents": 0,
                                  "adjustment_group_code": "string",
                                  "adjustment_note": "string",
                                  "adjustment_reason_code": "string",
                                  "created_at": "2023-01-01T00:00:00Z",
                                },
                              ],
                            },
                            "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            "service_line_manual_adjustments": [
                              {
                                "adjustment_amount_cents": 0,
                                "adjustment_group_code": "string",
                                "adjustment_note": "string",
                                "adjustment_reason_code": "string",
                                "created_at": "2023-01-01T00:00:00Z",
                              },
                            ],
                            "units": "MJ",
                          },
                        ],
                        "status": "biller_received",
                      },
                    ],
                    "clinical_notes": [
                      {
                        "category": "clinical",
                        "notes": [
                          "string",
                        ],
                        "notes_structured": [
                          {
                            "author_name": "string",
                            "author_npi": "string",
                            "text": "string",
                            "timestamp": "2023-01-01T00:00:00Z",
                          },
                        ],
                      },
                    ],
                    "coding_attribution": "CANDID",
                    "date_of_service": "string",
                    "diagnoses": [
                      {
                        "code": "string",
                        "code_type": "ABF",
                        "created_at": "2023-01-01T00:00:00Z",
                        "diagnosis_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "name": "string",
                        "updated_at": "2023-01-01T00:00:00Z",
                      },
                    ],
                    "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "end_date_of_service": "string",
                    "existing_medications": [
                      {
                        "as_needed": true,
                        "dosage": "string",
                        "dosage_form": "string",
                        "frequency": "string",
                        "name": "string",
                        "rx_cui": "string",
                      },
                    ],
                    "external_id": "string",
                    "guarantor": {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "date_of_birth": "2023-01-01",
                      "email": "string",
                      "email_consent": true,
                      "external_id": "string",
                      "first_name": "string",
                      "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "last_name": "string",
                      "phone_consent": true,
                      "phone_numbers": [
                        {
                          "number": "string",
                          "type": "Home",
                        },
                      ],
                    },
                    "interventions": [
                      {
                        "category": "allopathic",
                        "description": "string",
                        "labs": [
                          {
                            "code": "string",
                            "code_type": "quest",
                            "name": "string",
                          },
                        ],
                        "medication": {
                          "as_needed": true,
                          "dosage": "string",
                          "dosage_form": "string",
                          "frequency": "string",
                          "name": "string",
                          "rx_cui": "string",
                        },
                        "name": "string",
                      },
                    ],
                    "owner_of_next_action": "CANDID",
                    "patient": {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "date_of_birth": "string",
                      "email": "string",
                      "email_consent": true,
                      "external_id": "string",
                      "first_name": "string",
                      "gender": "male",
                      "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "last_name": "string",
                      "phone_consent": true,
                      "phone_numbers": [
                        {
                          "number": "string",
                          "type": "Home",
                        },
                      ],
                    },
                    "patient_authorized_release": true,
                    "patient_histories": [
                      {
                        "category": "present_illness",
                        "questions": [
                          {
                            "id": "string",
                            "responses": [
                              {
                                "follow_ups": [
                                  {
                                    "id": "string",
                                    "response": "string",
                                    "text": "string",
                                  },
                                ],
                                "response": "string",
                              },
                            ],
                            "text": "string",
                          },
                        ],
                      },
                    ],
                    "patient_payments": [
                      {
                        "amount_cents": 0,
                        "encounter_external_id": "string",
                        "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "patient_external_id": "string",
                        "patient_payment_id": "string",
                        "payment_name": "string",
                        "payment_note": "string",
                        "payment_timestamp": "2023-01-01T00:00:00Z",
                        "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "source": "MANUAL_ENTRY",
                        "source_internal_id": "string",
                        "status": "PENDING",
                      },
                    ],
                    "pay_to_address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "place_of_service_code": "01",
                    "place_of_service_code_as_submitted": "01",
                    "prior_authorization_number": "string",
                    "provider_accepts_assignment": true,
                    "referring_provider": {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "first_name": "string",
                      "last_name": "string",
                      "npi": "string",
                      "organization_name": "string",
                      "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "tax_id": "string",
                      "taxonomy_code": "string",
                    },
                    "rendering_provider": {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "first_name": "string",
                      "last_name": "string",
                      "npi": "string",
                      "organization_name": "string",
                      "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "tax_id": "string",
                      "taxonomy_code": "string",
                    },
                    "responsible_party": "INSURANCE_PAY",
                    "service_facility": {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "organization_name": "string",
                      "service_facility_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    },
                    "subscriber_primary": {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "date_of_birth": "string",
                      "first_name": "string",
                      "gender": "male",
                      "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "insurance_card": {
                        "group_number": "string",
                        "image_url_back": "string",
                        "image_url_front": "string",
                        "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "insurance_type": "01",
                        "member_id": "string",
                        "payer_id": "string",
                        "payer_name": "string",
                        "plan_name": "string",
                        "plan_type": "09",
                        "rx_bin": "string",
                        "rx_pcn": "string",
                      },
                      "last_name": "string",
                      "patient_relationship_to_subscriber_code": "01",
                    },
                    "subscriber_secondary": {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "date_of_birth": "string",
                      "first_name": "string",
                      "gender": "male",
                      "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "insurance_card": {
                        "group_number": "string",
                        "image_url_back": "string",
                        "image_url_front": "string",
                        "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "insurance_type": "01",
                        "member_id": "string",
                        "payer_id": "string",
                        "payer_name": "string",
                        "plan_name": "string",
                        "plan_type": "09",
                        "rx_bin": "string",
                        "rx_pcn": "string",
                      },
                      "last_name": "string",
                      "patient_relationship_to_subscriber_code": "01",
                    },
                    "synchronicity": "Synchronous",
                    "tags": [
                      {
                        "color": "black",
                        "creator_id": "string",
                        "description": "string",
                        "tag_id": "string",
                      },
                    ],
                    "url": "string",
                    "vitals": {
                      "blood_pressure_diastolic_mmhg": 0,
                      "blood_pressure_systolic_mmhg": 0,
                      "body_temperature_f": 1,
                      "height_in": 0,
                      "weight_lbs": 0,
                    },
                    "work_queue_id": "string",
                    "work_queue_membership_activated_at": "2023-01-01T00:00:00Z",
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "appointment_type": "string",
                      "benefits_assigned_to_provider": true,
                      "billable_status": "BILLABLE",
                      "billing_notes": [
                        {
                          "author_auth0_id": "string",
                          "author_name": "string",
                          "billing_note_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "created_at": "2023-01-01T00:00:00Z",
                          "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "text": "string",
                        },
                      ],
                      "billing_provider": {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "first_name": "string",
                        "last_name": "string",
                        "npi": "string",
                        "organization_name": "string",
                        "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "tax_id": "string",
                        "taxonomy_code": "string",
                      },
                      "claims": [
                        {
                          "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "clearinghouse": "string",
                          "clearinghouse_claim_id": "string",
                          "eras": [
                            {
                              "check_date": "string",
                              "check_number": "string",
                              "era_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            },
                          ],
                          "payer_claim_id": "string",
                          "service_lines": [
                            {
                              "allowed_amount_cents": 0,
                              "charge_amount_cents": 0,
                              "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "date_of_service_range": {
                                "end_date": "string",
                                "start_date": "string",
                              },
                              "denial_reason": {
                                "reason": "Authorization Required",
                              },
                              "diagnosis_id_one": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "diagnosis_id_three": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "diagnosis_id_two": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "diagnosis_id_zero": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "insurance_balance_cents": 0,
                              "modifiers": [
                                "22",
                              ],
                              "paid_amount_cents": 0,
                              "patient_balance_cents": 0,
                              "patient_responsibility_cents": 0,
                              "place_of_service_code": "01",
                              "procedure_code": "string",
                              "quantity": "string",
                              "related_invoices": [
                                {
                                  "created_at": "2023-01-01T00:00:00Z",
                                  "customer_invoice_url": "string",
                                  "due_date": "string",
                                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "items": [
                                    {
                                      "amount_cents": 0,
                                      "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                    },
                                  ],
                                  "note": "string",
                                  "organzation_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "patient_external_id": "string",
                                  "source_customer_id": "string",
                                  "source_id": "string",
                                  "status": "draft",
                                  "updated_at": "2023-01-01T00:00:00Z",
                                  "url": "string",
                                },
                              ],
                              "service_line_era_data": {
                                "remittance_advice_remark_codes": [
                                  "string",
                                ],
                                "service_line_adjustments": [
                                  {
                                    "adjustment_amount_cents": 0,
                                    "adjustment_group_code": "string",
                                    "adjustment_note": "string",
                                    "adjustment_reason_code": "string",
                                    "created_at": "2023-01-01T00:00:00Z",
                                  },
                                ],
                              },
                              "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "service_line_manual_adjustments": [
                                {
                                  "adjustment_amount_cents": 0,
                                  "adjustment_group_code": "string",
                                  "adjustment_note": "string",
                                  "adjustment_reason_code": "string",
                                  "created_at": "2023-01-01T00:00:00Z",
                                },
                              ],
                              "units": "MJ",
                            },
                          ],
                          "status": "biller_received",
                        },
                      ],
                      "clinical_notes": [
                        {
                          "category": "clinical",
                          "notes": [
                            "string",
                          ],
                          "notes_structured": [
                            {
                              "author_name": "string",
                              "author_npi": "string",
                              "text": "string",
                              "timestamp": "2023-01-01T00:00:00Z",
                            },
                          ],
                        },
                      ],
                      "coding_attribution": "CANDID",
                      "date_of_service": "string",
                      "diagnoses": [
                        {
                          "code": "string",
                          "code_type": "ABF",
                          "created_at": "2023-01-01T00:00:00Z",
                          "diagnosis_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "name": "string",
                          "updated_at": "2023-01-01T00:00:00Z",
                        },
                      ],
                      "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "end_date_of_service": "string",
                      "existing_medications": [
                        {
                          "as_needed": true,
                          "dosage": "string",
                          "dosage_form": "string",
                          "frequency": "string",
                          "name": "string",
                          "rx_cui": "string",
                        },
                      ],
                      "external_id": "string",
                      "guarantor": {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "date_of_birth": "2023-01-01",
                        "email": "string",
                        "email_consent": true,
                        "external_id": "string",
                        "first_name": "string",
                        "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "last_name": "string",
                        "phone_consent": true,
                        "phone_numbers": [
                          {
                            "number": "string",
                            "type": "Home",
                          },
                        ],
                      },
                      "interventions": [
                        {
                          "category": "allopathic",
                          "description": "string",
                          "labs": [
                            {
                              "code": "string",
                              "code_type": "quest",
                              "name": "string",
                            },
                          ],
                          "medication": {
                            "as_needed": true,
                            "dosage": "string",
                            "dosage_form": "string",
                            "frequency": "string",
                            "name": "string",
                            "rx_cui": "string",
                          },
                          "name": "string",
                        },
                      ],
                      "owner_of_next_action": "CANDID",
                      "patient": {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "date_of_birth": "string",
                        "email": "string",
                        "email_consent": true,
                        "external_id": "string",
                        "first_name": "string",
                        "gender": "male",
                        "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "last_name": "string",
                        "phone_consent": true,
                        "phone_numbers": [
                          {
                            "number": "string",
                            "type": "Home",
                          },
                        ],
                      },
                      "patient_authorized_release": true,
                      "patient_histories": [
                        {
                          "category": "present_illness",
                          "questions": [
                            {
                              "id": "string",
                              "responses": [
                                {
                                  "follow_ups": [
                                    {
                                      "id": "string",
                                      "response": "string",
                                      "text": "string",
                                    },
                                  ],
                                  "response": "string",
                                },
                              ],
                              "text": "string",
                            },
                          ],
                        },
                      ],
                      "patient_payments": [
                        {
                          "amount_cents": 0,
                          "encounter_external_id": "string",
                          "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "patient_external_id": "string",
                          "patient_payment_id": "string",
                          "payment_name": "string",
                          "payment_note": "string",
                          "payment_timestamp": "2023-01-01T00:00:00Z",
                          "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "source": "MANUAL_ENTRY",
                          "source_internal_id": "string",
                          "status": "PENDING",
                        },
                      ],
                      "pay_to_address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "place_of_service_code": "01",
                      "place_of_service_code_as_submitted": "01",
                      "prior_authorization_number": "string",
                      "provider_accepts_assignment": true,
                      "referring_provider": {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "first_name": "string",
                        "last_name": "string",
                        "npi": "string",
                        "organization_name": "string",
                        "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "tax_id": "string",
                        "taxonomy_code": "string",
                      },
                      "rendering_provider": {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "first_name": "string",
                        "last_name": "string",
                        "npi": "string",
                        "organization_name": "string",
                        "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "tax_id": "string",
                        "taxonomy_code": "string",
                      },
                      "responsible_party": "INSURANCE_PAY",
                      "service_facility": {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "organization_name": "string",
                        "service_facility_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      },
                      "subscriber_primary": {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "date_of_birth": "string",
                        "first_name": "string",
                        "gender": "male",
                        "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "insurance_card": {
                          "group_number": "string",
                          "image_url_back": "string",
                          "image_url_front": "string",
                          "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "insurance_type": "01",
                          "member_id": "string",
                          "payer_id": "string",
                          "payer_name": "string",
                          "plan_name": "string",
                          "plan_type": "09",
                          "rx_bin": "string",
                          "rx_pcn": "string",
                        },
                        "last_name": "string",
                        "patient_relationship_to_subscriber_code": "01",
                      },
                      "subscriber_secondary": {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "date_of_birth": "string",
                        "first_name": "string",
                        "gender": "male",
                        "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "insurance_card": {
                          "group_number": "string",
                          "image_url_back": "string",
                          "image_url_front": "string",
                          "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "insurance_type": "01",
                          "member_id": "string",
                          "payer_id": "string",
                          "payer_name": "string",
                          "plan_name": "string",
                          "plan_type": "09",
                          "rx_bin": "string",
                          "rx_pcn": "string",
                        },
                        "last_name": "string",
                        "patient_relationship_to_subscriber_code": "01",
                      },
                      "synchronicity": "Synchronous",
                      "tags": [
                        {
                          "color": "black",
                          "creator_id": "string",
                          "description": "string",
                          "tag_id": "string",
                        },
                      ],
                      "url": "string",
                      "vitals": {
                        "blood_pressure_diastolic_mmhg": 0,
                        "blood_pressure_systolic_mmhg": 0,
                        "body_temperature_f": 1,
                        "height_in": 0,
                        "weight_lbs": 0,
                      },
                      "work_queue_id": "string",
                      "work_queue_membership_activated_at": "2023-01-01T00:00:00Z",
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "getAll",
          "method": "GET",
          "migratedFromUrlSlugs": [
            "get-all-encounters",
          ],
          "name": "Get all encounters",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/encounters/v4",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "claim_status",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_claims:ClaimStatus",
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to created_at:desc",
              "key": "sort",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounters/v4:EncounterSortOptions",
                },
                "type": "optional",
              },
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
            {
              "key": "date_of_service_min",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:Date",
                },
                "type": "optional",
              },
            },
            {
              "key": "date_of_service_max",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:Date",
                },
                "type": "optional",
              },
            },
            {
              "description": "Comma delimited string",
              "key": "primary_payer_names",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Filter by any of the following fields: encounter_id, claim_id, patient external_id,
patient date of birth, patient first name, patient last name,
or encounter external id.
",
              "key": "search_term",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Filter to an exact match on encounter external_id, if one exists",
              "key": "external_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:EncounterExternalId",
                },
                "type": "optional",
              },
            },
            {
              "description": "ISO 8601 timestamp; ideally in UTC (although not required): 2019-08-24T14:15:22Z
",
              "key": "diagnoses_updated_since",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "tag_ids",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_tags:TagId",
                },
                "type": "optional",
              },
            },
            {
              "key": "work_queue_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:WorkQueueId",
                },
                "type": "optional",
              },
            },
            {
              "key": "billable_status",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounters/v4:BillableStatusType",
                },
                "type": "optional",
              },
            },
            {
              "key": "responsible_party",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounters/v4:ResponsiblePartyType",
                },
                "type": "optional",
              },
            },
            {
              "key": "owner_of_next_action",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounters/v4:EncounterOwnerOfNextActionType",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_encounters/v4:EncounterPage",
              },
            },
          },
          "urlSlug": "get-all",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "appointment_type": "string",
                "benefits_assigned_to_provider": true,
                "billable_status": "BILLABLE",
                "billing_notes": [
                  {
                    "author_auth0_id": "string",
                    "author_name": "string",
                    "billing_note_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "created_at": "2023-01-01T00:00:00Z",
                    "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "text": "string",
                  },
                ],
                "billing_provider": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "first_name": "string",
                  "last_name": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
                "claims": [
                  {
                    "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "clearinghouse": "string",
                    "clearinghouse_claim_id": "string",
                    "eras": [
                      {
                        "check_date": "string",
                        "check_number": "string",
                        "era_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      },
                    ],
                    "payer_claim_id": "string",
                    "service_lines": [
                      {
                        "allowed_amount_cents": 0,
                        "charge_amount_cents": 0,
                        "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "date_of_service_range": {
                          "end_date": "string",
                          "start_date": "string",
                        },
                        "denial_reason": {
                          "reason": "Authorization Required",
                        },
                        "diagnosis_id_one": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "diagnosis_id_three": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "diagnosis_id_two": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "diagnosis_id_zero": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "insurance_balance_cents": 0,
                        "modifiers": [
                          "22",
                        ],
                        "paid_amount_cents": 0,
                        "patient_balance_cents": 0,
                        "patient_responsibility_cents": 0,
                        "place_of_service_code": "01",
                        "procedure_code": "string",
                        "quantity": "string",
                        "related_invoices": [
                          {
                            "created_at": "2023-01-01T00:00:00Z",
                            "customer_invoice_url": "string",
                            "due_date": "string",
                            "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            "items": [
                              {
                                "amount_cents": 0,
                                "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              },
                            ],
                            "note": "string",
                            "organzation_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            "patient_external_id": "string",
                            "source_customer_id": "string",
                            "source_id": "string",
                            "status": "draft",
                            "updated_at": "2023-01-01T00:00:00Z",
                            "url": "string",
                          },
                        ],
                        "service_line_era_data": {
                          "remittance_advice_remark_codes": [
                            "string",
                          ],
                          "service_line_adjustments": [
                            {
                              "adjustment_amount_cents": 0,
                              "adjustment_group_code": "string",
                              "adjustment_note": "string",
                              "adjustment_reason_code": "string",
                              "created_at": "2023-01-01T00:00:00Z",
                            },
                          ],
                        },
                        "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "service_line_manual_adjustments": [
                          {
                            "adjustment_amount_cents": 0,
                            "adjustment_group_code": "string",
                            "adjustment_note": "string",
                            "adjustment_reason_code": "string",
                            "created_at": "2023-01-01T00:00:00Z",
                          },
                        ],
                        "units": "MJ",
                      },
                    ],
                    "status": "biller_received",
                  },
                ],
                "clinical_notes": [
                  {
                    "category": "clinical",
                    "notes": [
                      "string",
                    ],
                    "notes_structured": [
                      {
                        "author_name": "string",
                        "author_npi": "string",
                        "text": "string",
                        "timestamp": "2023-01-01T00:00:00Z",
                      },
                    ],
                  },
                ],
                "coding_attribution": "CANDID",
                "date_of_service": "string",
                "diagnoses": [
                  {
                    "code": "string",
                    "code_type": "ABF",
                    "created_at": "2023-01-01T00:00:00Z",
                    "diagnosis_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "name": "string",
                    "updated_at": "2023-01-01T00:00:00Z",
                  },
                ],
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "end_date_of_service": "string",
                "existing_medications": [
                  {
                    "as_needed": true,
                    "dosage": "string",
                    "dosage_form": "string",
                    "frequency": "string",
                    "name": "string",
                    "rx_cui": "string",
                  },
                ],
                "external_id": "string",
                "guarantor": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "2023-01-01",
                  "email": "string",
                  "email_consent": true,
                  "external_id": "string",
                  "first_name": "string",
                  "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "last_name": "string",
                  "phone_consent": true,
                  "phone_numbers": [
                    {
                      "number": "string",
                      "type": "Home",
                    },
                  ],
                },
                "interventions": [
                  {
                    "category": "allopathic",
                    "description": "string",
                    "labs": [
                      {
                        "code": "string",
                        "code_type": "quest",
                        "name": "string",
                      },
                    ],
                    "medication": {
                      "as_needed": true,
                      "dosage": "string",
                      "dosage_form": "string",
                      "frequency": "string",
                      "name": "string",
                      "rx_cui": "string",
                    },
                    "name": "string",
                  },
                ],
                "owner_of_next_action": "CANDID",
                "patient": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "string",
                  "email": "string",
                  "email_consent": true,
                  "external_id": "string",
                  "first_name": "string",
                  "gender": "male",
                  "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "last_name": "string",
                  "phone_consent": true,
                  "phone_numbers": [
                    {
                      "number": "string",
                      "type": "Home",
                    },
                  ],
                },
                "patient_authorized_release": true,
                "patient_histories": [
                  {
                    "category": "present_illness",
                    "questions": [
                      {
                        "id": "string",
                        "responses": [
                          {
                            "follow_ups": [
                              {
                                "id": "string",
                                "response": "string",
                                "text": "string",
                              },
                            ],
                            "response": "string",
                          },
                        ],
                        "text": "string",
                      },
                    ],
                  },
                ],
                "patient_payments": [
                  {
                    "amount_cents": 0,
                    "encounter_external_id": "string",
                    "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "patient_external_id": "string",
                    "patient_payment_id": "string",
                    "payment_name": "string",
                    "payment_note": "string",
                    "payment_timestamp": "2023-01-01T00:00:00Z",
                    "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "source": "MANUAL_ENTRY",
                    "source_internal_id": "string",
                    "status": "PENDING",
                  },
                ],
                "pay_to_address": {
                  "address1": "string",
                  "address2": "string",
                  "city": "string",
                  "state": "AA",
                  "zip_code": "string",
                  "zip_plus_four_code": "string",
                },
                "place_of_service_code": "01",
                "place_of_service_code_as_submitted": "01",
                "prior_authorization_number": "string",
                "provider_accepts_assignment": true,
                "referring_provider": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "first_name": "string",
                  "last_name": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
                "rendering_provider": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "first_name": "string",
                  "last_name": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
                "responsible_party": "INSURANCE_PAY",
                "service_facility": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "organization_name": "string",
                  "service_facility_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
                "subscriber_primary": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "string",
                  "first_name": "string",
                  "gender": "male",
                  "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "insurance_card": {
                    "group_number": "string",
                    "image_url_back": "string",
                    "image_url_front": "string",
                    "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_type": "01",
                    "member_id": "string",
                    "payer_id": "string",
                    "payer_name": "string",
                    "plan_name": "string",
                    "plan_type": "09",
                    "rx_bin": "string",
                    "rx_pcn": "string",
                  },
                  "last_name": "string",
                  "patient_relationship_to_subscriber_code": "01",
                },
                "subscriber_secondary": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "string",
                  "first_name": "string",
                  "gender": "male",
                  "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "insurance_card": {
                    "group_number": "string",
                    "image_url_back": "string",
                    "image_url_front": "string",
                    "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_type": "01",
                    "member_id": "string",
                    "payer_id": "string",
                    "payer_name": "string",
                    "plan_name": "string",
                    "plan_type": "09",
                    "rx_bin": "string",
                    "rx_pcn": "string",
                  },
                  "last_name": "string",
                  "patient_relationship_to_subscriber_code": "01",
                },
                "synchronicity": "Synchronous",
                "tags": [
                  {
                    "color": "black",
                    "creator_id": "string",
                    "description": "string",
                    "tag_id": "string",
                  },
                ],
                "url": "string",
                "vitals": {
                  "blood_pressure_diastolic_mmhg": 0,
                  "blood_pressure_systolic_mmhg": 0,
                  "body_temperature_f": 1,
                  "height_in": 0,
                  "weight_lbs": 0,
                },
                "work_queue_id": "string",
                "work_queue_membership_activated_at": "2023-01-01T00:00:00Z",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "appointment_type": "string",
                  "benefits_assigned_to_provider": true,
                  "billable_status": "BILLABLE",
                  "billing_notes": [
                    {
                      "author_auth0_id": "string",
                      "author_name": "string",
                      "billing_note_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "created_at": "2023-01-01T00:00:00Z",
                      "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "text": "string",
                    },
                  ],
                  "billing_provider": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "first_name": "string",
                    "last_name": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                  "claims": [
                    {
                      "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "clearinghouse": "string",
                      "clearinghouse_claim_id": "string",
                      "eras": [
                        {
                          "check_date": "string",
                          "check_number": "string",
                          "era_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        },
                      ],
                      "payer_claim_id": "string",
                      "service_lines": [
                        {
                          "allowed_amount_cents": 0,
                          "charge_amount_cents": 0,
                          "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "date_of_service_range": {
                            "end_date": "string",
                            "start_date": "string",
                          },
                          "denial_reason": {
                            "reason": "Authorization Required",
                          },
                          "diagnosis_id_one": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "diagnosis_id_three": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "diagnosis_id_two": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "diagnosis_id_zero": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "insurance_balance_cents": 0,
                          "modifiers": [
                            "22",
                          ],
                          "paid_amount_cents": 0,
                          "patient_balance_cents": 0,
                          "patient_responsibility_cents": 0,
                          "place_of_service_code": "01",
                          "procedure_code": "string",
                          "quantity": "string",
                          "related_invoices": [
                            {
                              "created_at": "2023-01-01T00:00:00Z",
                              "customer_invoice_url": "string",
                              "due_date": "string",
                              "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "items": [
                                {
                                  "amount_cents": 0,
                                  "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                },
                              ],
                              "note": "string",
                              "organzation_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "patient_external_id": "string",
                              "source_customer_id": "string",
                              "source_id": "string",
                              "status": "draft",
                              "updated_at": "2023-01-01T00:00:00Z",
                              "url": "string",
                            },
                          ],
                          "service_line_era_data": {
                            "remittance_advice_remark_codes": [
                              "string",
                            ],
                            "service_line_adjustments": [
                              {
                                "adjustment_amount_cents": 0,
                                "adjustment_group_code": "string",
                                "adjustment_note": "string",
                                "adjustment_reason_code": "string",
                                "created_at": "2023-01-01T00:00:00Z",
                              },
                            ],
                          },
                          "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "service_line_manual_adjustments": [
                            {
                              "adjustment_amount_cents": 0,
                              "adjustment_group_code": "string",
                              "adjustment_note": "string",
                              "adjustment_reason_code": "string",
                              "created_at": "2023-01-01T00:00:00Z",
                            },
                          ],
                          "units": "MJ",
                        },
                      ],
                      "status": "biller_received",
                    },
                  ],
                  "clinical_notes": [
                    {
                      "category": "clinical",
                      "notes": [
                        "string",
                      ],
                      "notes_structured": [
                        {
                          "author_name": "string",
                          "author_npi": "string",
                          "text": "string",
                          "timestamp": "2023-01-01T00:00:00Z",
                        },
                      ],
                    },
                  ],
                  "coding_attribution": "CANDID",
                  "date_of_service": "string",
                  "diagnoses": [
                    {
                      "code": "string",
                      "code_type": "ABF",
                      "created_at": "2023-01-01T00:00:00Z",
                      "diagnosis_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "name": "string",
                      "updated_at": "2023-01-01T00:00:00Z",
                    },
                  ],
                  "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "end_date_of_service": "string",
                  "existing_medications": [
                    {
                      "as_needed": true,
                      "dosage": "string",
                      "dosage_form": "string",
                      "frequency": "string",
                      "name": "string",
                      "rx_cui": "string",
                    },
                  ],
                  "external_id": "string",
                  "guarantor": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "date_of_birth": "2023-01-01",
                    "email": "string",
                    "email_consent": true,
                    "external_id": "string",
                    "first_name": "string",
                    "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "last_name": "string",
                    "phone_consent": true,
                    "phone_numbers": [
                      {
                        "number": "string",
                        "type": "Home",
                      },
                    ],
                  },
                  "interventions": [
                    {
                      "category": "allopathic",
                      "description": "string",
                      "labs": [
                        {
                          "code": "string",
                          "code_type": "quest",
                          "name": "string",
                        },
                      ],
                      "medication": {
                        "as_needed": true,
                        "dosage": "string",
                        "dosage_form": "string",
                        "frequency": "string",
                        "name": "string",
                        "rx_cui": "string",
                      },
                      "name": "string",
                    },
                  ],
                  "owner_of_next_action": "CANDID",
                  "patient": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "date_of_birth": "string",
                    "email": "string",
                    "email_consent": true,
                    "external_id": "string",
                    "first_name": "string",
                    "gender": "male",
                    "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "last_name": "string",
                    "phone_consent": true,
                    "phone_numbers": [
                      {
                        "number": "string",
                        "type": "Home",
                      },
                    ],
                  },
                  "patient_authorized_release": true,
                  "patient_histories": [
                    {
                      "category": "present_illness",
                      "questions": [
                        {
                          "id": "string",
                          "responses": [
                            {
                              "follow_ups": [
                                {
                                  "id": "string",
                                  "response": "string",
                                  "text": "string",
                                },
                              ],
                              "response": "string",
                            },
                          ],
                          "text": "string",
                        },
                      ],
                    },
                  ],
                  "patient_payments": [
                    {
                      "amount_cents": 0,
                      "encounter_external_id": "string",
                      "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "patient_external_id": "string",
                      "patient_payment_id": "string",
                      "payment_name": "string",
                      "payment_note": "string",
                      "payment_timestamp": "2023-01-01T00:00:00Z",
                      "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "source": "MANUAL_ENTRY",
                      "source_internal_id": "string",
                      "status": "PENDING",
                    },
                  ],
                  "pay_to_address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "place_of_service_code": "01",
                  "place_of_service_code_as_submitted": "01",
                  "prior_authorization_number": "string",
                  "provider_accepts_assignment": true,
                  "referring_provider": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "first_name": "string",
                    "last_name": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                  "rendering_provider": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "first_name": "string",
                    "last_name": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                  "responsible_party": "INSURANCE_PAY",
                  "service_facility": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "organization_name": "string",
                    "service_facility_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "subscriber_primary": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "date_of_birth": "string",
                    "first_name": "string",
                    "gender": "male",
                    "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_card": {
                      "group_number": "string",
                      "image_url_back": "string",
                      "image_url_front": "string",
                      "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "insurance_type": "01",
                      "member_id": "string",
                      "payer_id": "string",
                      "payer_name": "string",
                      "plan_name": "string",
                      "plan_type": "09",
                      "rx_bin": "string",
                      "rx_pcn": "string",
                    },
                    "last_name": "string",
                    "patient_relationship_to_subscriber_code": "01",
                  },
                  "subscriber_secondary": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "date_of_birth": "string",
                    "first_name": "string",
                    "gender": "male",
                    "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_card": {
                      "group_number": "string",
                      "image_url_back": "string",
                      "image_url_front": "string",
                      "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "insurance_type": "01",
                      "member_id": "string",
                      "payer_id": "string",
                      "payer_name": "string",
                      "plan_name": "string",
                      "plan_type": "09",
                      "rx_bin": "string",
                      "rx_pcn": "string",
                    },
                    "last_name": "string",
                    "patient_relationship_to_subscriber_code": "01",
                  },
                  "synchronicity": "Synchronous",
                  "tags": [
                    {
                      "color": "black",
                      "creator_id": "string",
                      "description": "string",
                      "tag_id": "string",
                    },
                  ],
                  "url": "string",
                  "vitals": {
                    "blood_pressure_diastolic_mmhg": 0,
                    "blood_pressure_systolic_mmhg": 0,
                    "body_temperature_f": 1,
                    "height_in": 0,
                    "weight_lbs": 0,
                  },
                  "work_queue_id": "string",
                  "work_queue_membership_activated_at": "2023-01-01T00:00:00Z",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": [
            "get-encounter",
          ],
          "name": "Get encounter",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/encounters/v4",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_encounters/v4:Encounter",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_encounters/v4:EncounterExternalIdUniquenessErrorType",
              },
            },
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_encounters/v4:EncounterGuarantorMissingContactInfoErrorType",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:RequestValidationError",
                },
                "type": "list",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_encounters/v4:CashPayPayerErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Encounter External Id Uniqueness Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EncounterExternalIdUniquenessError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_encounters/v4:EncounterExternalIdUniquenessErrorType",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Encounter Guarantor Missing Contact Info Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EncounterGuarantorMissingContactInfoError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_encounters/v4:EncounterGuarantorMissingContactInfoErrorType",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Http Request Validations Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "HttpRequestValidationsError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:RequestValidationError",
                      },
                      "type": "list",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Cash Pay Payer Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "CashPayPayerError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_encounters/v4:CashPayPayerErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "benefits_assigned_to_provider": true,
                "billable_status": "BILLABLE",
                "billing_provider": {
                  "address": {
                    "address1": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "npi": "string",
                  "tax_id": "string",
                },
                "date_of_service": "string",
                "diagnoses": [
                  {
                    "code": "string",
                    "code_type": "ABF",
                  },
                ],
                "external_id": "string",
                "patient": {
                  "address": {
                    "address1": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                  },
                  "date_of_birth": "string",
                  "external_id": "string",
                  "first_name": "string",
                  "gender": "male",
                  "last_name": "string",
                },
                "patient_authorized_release": true,
                "place_of_service_code": "01",
                "provider_accepts_assignment": true,
                "rendering_provider": {
                  "npi": "string",
                },
                "responsible_party": "INSURANCE_PAY",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "benefits_assigned_to_provider": true,
                  "billable_status": "BILLABLE",
                  "billing_provider": {
                    "address": {
                      "address1": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "npi": "string",
                    "tax_id": "string",
                  },
                  "date_of_service": "string",
                  "diagnoses": [
                    {
                      "code": "string",
                      "code_type": "ABF",
                    },
                  ],
                  "external_id": "string",
                  "patient": {
                    "address": {
                      "address1": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                    },
                    "date_of_birth": "string",
                    "external_id": "string",
                    "first_name": "string",
                    "gender": "male",
                    "last_name": "string",
                  },
                  "patient_authorized_release": true,
                  "place_of_service_code": "01",
                  "provider_accepts_assignment": true,
                  "rendering_provider": {
                    "npi": "string",
                  },
                  "responsible_party": "INSURANCE_PAY",
                },
              },
              "responseBody": {
                "appointment_type": "string",
                "benefits_assigned_to_provider": true,
                "billable_status": "BILLABLE",
                "billing_notes": [
                  {
                    "author_auth0_id": "string",
                    "author_name": "string",
                    "billing_note_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "created_at": "2023-01-01T00:00:00Z",
                    "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "text": "string",
                  },
                ],
                "billing_provider": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "first_name": "string",
                  "last_name": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
                "claims": [
                  {
                    "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "clearinghouse": "string",
                    "clearinghouse_claim_id": "string",
                    "eras": [
                      {
                        "check_date": "string",
                        "check_number": "string",
                        "era_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      },
                    ],
                    "payer_claim_id": "string",
                    "service_lines": [
                      {
                        "allowed_amount_cents": 0,
                        "charge_amount_cents": 0,
                        "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "date_of_service_range": {
                          "end_date": "string",
                          "start_date": "string",
                        },
                        "denial_reason": {
                          "reason": "Authorization Required",
                        },
                        "diagnosis_id_one": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "diagnosis_id_three": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "diagnosis_id_two": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "diagnosis_id_zero": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "insurance_balance_cents": 0,
                        "modifiers": [
                          "22",
                        ],
                        "paid_amount_cents": 0,
                        "patient_balance_cents": 0,
                        "patient_responsibility_cents": 0,
                        "place_of_service_code": "01",
                        "procedure_code": "string",
                        "quantity": "string",
                        "related_invoices": [
                          {
                            "created_at": "2023-01-01T00:00:00Z",
                            "customer_invoice_url": "string",
                            "due_date": "string",
                            "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            "items": [
                              {
                                "amount_cents": 0,
                                "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              },
                            ],
                            "note": "string",
                            "organzation_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            "patient_external_id": "string",
                            "source_customer_id": "string",
                            "source_id": "string",
                            "status": "draft",
                            "updated_at": "2023-01-01T00:00:00Z",
                            "url": "string",
                          },
                        ],
                        "service_line_era_data": {
                          "remittance_advice_remark_codes": [
                            "string",
                          ],
                          "service_line_adjustments": [
                            {
                              "adjustment_amount_cents": 0,
                              "adjustment_group_code": "string",
                              "adjustment_note": "string",
                              "adjustment_reason_code": "string",
                              "created_at": "2023-01-01T00:00:00Z",
                            },
                          ],
                        },
                        "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "service_line_manual_adjustments": [
                          {
                            "adjustment_amount_cents": 0,
                            "adjustment_group_code": "string",
                            "adjustment_note": "string",
                            "adjustment_reason_code": "string",
                            "created_at": "2023-01-01T00:00:00Z",
                          },
                        ],
                        "units": "MJ",
                      },
                    ],
                    "status": "biller_received",
                  },
                ],
                "clinical_notes": [
                  {
                    "category": "clinical",
                    "notes": [
                      "string",
                    ],
                    "notes_structured": [
                      {
                        "author_name": "string",
                        "author_npi": "string",
                        "text": "string",
                        "timestamp": "2023-01-01T00:00:00Z",
                      },
                    ],
                  },
                ],
                "coding_attribution": "CANDID",
                "date_of_service": "string",
                "diagnoses": [
                  {
                    "code": "string",
                    "code_type": "ABF",
                    "created_at": "2023-01-01T00:00:00Z",
                    "diagnosis_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "name": "string",
                    "updated_at": "2023-01-01T00:00:00Z",
                  },
                ],
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "end_date_of_service": "string",
                "existing_medications": [
                  {
                    "as_needed": true,
                    "dosage": "string",
                    "dosage_form": "string",
                    "frequency": "string",
                    "name": "string",
                    "rx_cui": "string",
                  },
                ],
                "external_id": "string",
                "guarantor": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "2023-01-01",
                  "email": "string",
                  "email_consent": true,
                  "external_id": "string",
                  "first_name": "string",
                  "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "last_name": "string",
                  "phone_consent": true,
                  "phone_numbers": [
                    {
                      "number": "string",
                      "type": "Home",
                    },
                  ],
                },
                "interventions": [
                  {
                    "category": "allopathic",
                    "description": "string",
                    "labs": [
                      {
                        "code": "string",
                        "code_type": "quest",
                        "name": "string",
                      },
                    ],
                    "medication": {
                      "as_needed": true,
                      "dosage": "string",
                      "dosage_form": "string",
                      "frequency": "string",
                      "name": "string",
                      "rx_cui": "string",
                    },
                    "name": "string",
                  },
                ],
                "owner_of_next_action": "CANDID",
                "patient": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "string",
                  "email": "string",
                  "email_consent": true,
                  "external_id": "string",
                  "first_name": "string",
                  "gender": "male",
                  "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "last_name": "string",
                  "phone_consent": true,
                  "phone_numbers": [
                    {
                      "number": "string",
                      "type": "Home",
                    },
                  ],
                },
                "patient_authorized_release": true,
                "patient_histories": [
                  {
                    "category": "present_illness",
                    "questions": [
                      {
                        "id": "string",
                        "responses": [
                          {
                            "follow_ups": [
                              {
                                "id": "string",
                                "response": "string",
                                "text": "string",
                              },
                            ],
                            "response": "string",
                          },
                        ],
                        "text": "string",
                      },
                    ],
                  },
                ],
                "patient_payments": [
                  {
                    "amount_cents": 0,
                    "encounter_external_id": "string",
                    "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "patient_external_id": "string",
                    "patient_payment_id": "string",
                    "payment_name": "string",
                    "payment_note": "string",
                    "payment_timestamp": "2023-01-01T00:00:00Z",
                    "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "source": "MANUAL_ENTRY",
                    "source_internal_id": "string",
                    "status": "PENDING",
                  },
                ],
                "pay_to_address": {
                  "address1": "string",
                  "address2": "string",
                  "city": "string",
                  "state": "AA",
                  "zip_code": "string",
                  "zip_plus_four_code": "string",
                },
                "place_of_service_code": "01",
                "place_of_service_code_as_submitted": "01",
                "prior_authorization_number": "string",
                "provider_accepts_assignment": true,
                "referring_provider": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "first_name": "string",
                  "last_name": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
                "rendering_provider": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "first_name": "string",
                  "last_name": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
                "responsible_party": "INSURANCE_PAY",
                "service_facility": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "organization_name": "string",
                  "service_facility_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
                "subscriber_primary": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "string",
                  "first_name": "string",
                  "gender": "male",
                  "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "insurance_card": {
                    "group_number": "string",
                    "image_url_back": "string",
                    "image_url_front": "string",
                    "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_type": "01",
                    "member_id": "string",
                    "payer_id": "string",
                    "payer_name": "string",
                    "plan_name": "string",
                    "plan_type": "09",
                    "rx_bin": "string",
                    "rx_pcn": "string",
                  },
                  "last_name": "string",
                  "patient_relationship_to_subscriber_code": "01",
                },
                "subscriber_secondary": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "string",
                  "first_name": "string",
                  "gender": "male",
                  "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "insurance_card": {
                    "group_number": "string",
                    "image_url_back": "string",
                    "image_url_front": "string",
                    "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_type": "01",
                    "member_id": "string",
                    "payer_id": "string",
                    "payer_name": "string",
                    "plan_name": "string",
                    "plan_type": "09",
                    "rx_bin": "string",
                    "rx_pcn": "string",
                  },
                  "last_name": "string",
                  "patient_relationship_to_subscriber_code": "01",
                },
                "synchronicity": "Synchronous",
                "tags": [
                  {
                    "color": "black",
                    "creator_id": "string",
                    "description": "string",
                    "tag_id": "string",
                  },
                ],
                "url": "string",
                "vitals": {
                  "blood_pressure_diastolic_mmhg": 0,
                  "blood_pressure_systolic_mmhg": 0,
                  "body_temperature_f": 1,
                  "height_in": 0,
                  "weight_lbs": 0,
                },
                "work_queue_id": "string",
                "work_queue_membership_activated_at": "2023-01-01T00:00:00Z",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "appointment_type": "string",
                  "benefits_assigned_to_provider": true,
                  "billable_status": "BILLABLE",
                  "billing_notes": [
                    {
                      "author_auth0_id": "string",
                      "author_name": "string",
                      "billing_note_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "created_at": "2023-01-01T00:00:00Z",
                      "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "text": "string",
                    },
                  ],
                  "billing_provider": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "first_name": "string",
                    "last_name": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                  "claims": [
                    {
                      "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "clearinghouse": "string",
                      "clearinghouse_claim_id": "string",
                      "eras": [
                        {
                          "check_date": "string",
                          "check_number": "string",
                          "era_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        },
                      ],
                      "payer_claim_id": "string",
                      "service_lines": [
                        {
                          "allowed_amount_cents": 0,
                          "charge_amount_cents": 0,
                          "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "date_of_service_range": {
                            "end_date": "string",
                            "start_date": "string",
                          },
                          "denial_reason": {
                            "reason": "Authorization Required",
                          },
                          "diagnosis_id_one": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "diagnosis_id_three": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "diagnosis_id_two": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "diagnosis_id_zero": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "insurance_balance_cents": 0,
                          "modifiers": [
                            "22",
                          ],
                          "paid_amount_cents": 0,
                          "patient_balance_cents": 0,
                          "patient_responsibility_cents": 0,
                          "place_of_service_code": "01",
                          "procedure_code": "string",
                          "quantity": "string",
                          "related_invoices": [
                            {
                              "created_at": "2023-01-01T00:00:00Z",
                              "customer_invoice_url": "string",
                              "due_date": "string",
                              "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "items": [
                                {
                                  "amount_cents": 0,
                                  "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                },
                              ],
                              "note": "string",
                              "organzation_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "patient_external_id": "string",
                              "source_customer_id": "string",
                              "source_id": "string",
                              "status": "draft",
                              "updated_at": "2023-01-01T00:00:00Z",
                              "url": "string",
                            },
                          ],
                          "service_line_era_data": {
                            "remittance_advice_remark_codes": [
                              "string",
                            ],
                            "service_line_adjustments": [
                              {
                                "adjustment_amount_cents": 0,
                                "adjustment_group_code": "string",
                                "adjustment_note": "string",
                                "adjustment_reason_code": "string",
                                "created_at": "2023-01-01T00:00:00Z",
                              },
                            ],
                          },
                          "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "service_line_manual_adjustments": [
                            {
                              "adjustment_amount_cents": 0,
                              "adjustment_group_code": "string",
                              "adjustment_note": "string",
                              "adjustment_reason_code": "string",
                              "created_at": "2023-01-01T00:00:00Z",
                            },
                          ],
                          "units": "MJ",
                        },
                      ],
                      "status": "biller_received",
                    },
                  ],
                  "clinical_notes": [
                    {
                      "category": "clinical",
                      "notes": [
                        "string",
                      ],
                      "notes_structured": [
                        {
                          "author_name": "string",
                          "author_npi": "string",
                          "text": "string",
                          "timestamp": "2023-01-01T00:00:00Z",
                        },
                      ],
                    },
                  ],
                  "coding_attribution": "CANDID",
                  "date_of_service": "string",
                  "diagnoses": [
                    {
                      "code": "string",
                      "code_type": "ABF",
                      "created_at": "2023-01-01T00:00:00Z",
                      "diagnosis_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "name": "string",
                      "updated_at": "2023-01-01T00:00:00Z",
                    },
                  ],
                  "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "end_date_of_service": "string",
                  "existing_medications": [
                    {
                      "as_needed": true,
                      "dosage": "string",
                      "dosage_form": "string",
                      "frequency": "string",
                      "name": "string",
                      "rx_cui": "string",
                    },
                  ],
                  "external_id": "string",
                  "guarantor": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "date_of_birth": "2023-01-01",
                    "email": "string",
                    "email_consent": true,
                    "external_id": "string",
                    "first_name": "string",
                    "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "last_name": "string",
                    "phone_consent": true,
                    "phone_numbers": [
                      {
                        "number": "string",
                        "type": "Home",
                      },
                    ],
                  },
                  "interventions": [
                    {
                      "category": "allopathic",
                      "description": "string",
                      "labs": [
                        {
                          "code": "string",
                          "code_type": "quest",
                          "name": "string",
                        },
                      ],
                      "medication": {
                        "as_needed": true,
                        "dosage": "string",
                        "dosage_form": "string",
                        "frequency": "string",
                        "name": "string",
                        "rx_cui": "string",
                      },
                      "name": "string",
                    },
                  ],
                  "owner_of_next_action": "CANDID",
                  "patient": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "date_of_birth": "string",
                    "email": "string",
                    "email_consent": true,
                    "external_id": "string",
                    "first_name": "string",
                    "gender": "male",
                    "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "last_name": "string",
                    "phone_consent": true,
                    "phone_numbers": [
                      {
                        "number": "string",
                        "type": "Home",
                      },
                    ],
                  },
                  "patient_authorized_release": true,
                  "patient_histories": [
                    {
                      "category": "present_illness",
                      "questions": [
                        {
                          "id": "string",
                          "responses": [
                            {
                              "follow_ups": [
                                {
                                  "id": "string",
                                  "response": "string",
                                  "text": "string",
                                },
                              ],
                              "response": "string",
                            },
                          ],
                          "text": "string",
                        },
                      ],
                    },
                  ],
                  "patient_payments": [
                    {
                      "amount_cents": 0,
                      "encounter_external_id": "string",
                      "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "patient_external_id": "string",
                      "patient_payment_id": "string",
                      "payment_name": "string",
                      "payment_note": "string",
                      "payment_timestamp": "2023-01-01T00:00:00Z",
                      "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "source": "MANUAL_ENTRY",
                      "source_internal_id": "string",
                      "status": "PENDING",
                    },
                  ],
                  "pay_to_address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "place_of_service_code": "01",
                  "place_of_service_code_as_submitted": "01",
                  "prior_authorization_number": "string",
                  "provider_accepts_assignment": true,
                  "referring_provider": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "first_name": "string",
                    "last_name": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                  "rendering_provider": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "first_name": "string",
                    "last_name": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                  "responsible_party": "INSURANCE_PAY",
                  "service_facility": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "organization_name": "string",
                    "service_facility_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "subscriber_primary": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "date_of_birth": "string",
                    "first_name": "string",
                    "gender": "male",
                    "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_card": {
                      "group_number": "string",
                      "image_url_back": "string",
                      "image_url_front": "string",
                      "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "insurance_type": "01",
                      "member_id": "string",
                      "payer_id": "string",
                      "payer_name": "string",
                      "plan_name": "string",
                      "plan_type": "09",
                      "rx_bin": "string",
                      "rx_pcn": "string",
                    },
                    "last_name": "string",
                    "patient_relationship_to_subscriber_code": "01",
                  },
                  "subscriber_secondary": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "date_of_birth": "string",
                    "first_name": "string",
                    "gender": "male",
                    "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_card": {
                      "group_number": "string",
                      "image_url_back": "string",
                      "image_url_front": "string",
                      "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "insurance_type": "01",
                      "member_id": "string",
                      "payer_id": "string",
                      "payer_name": "string",
                      "plan_name": "string",
                      "plan_type": "09",
                      "rx_bin": "string",
                      "rx_pcn": "string",
                    },
                    "last_name": "string",
                    "patient_relationship_to_subscriber_code": "01",
                  },
                  "synchronicity": "Synchronous",
                  "tags": [
                    {
                      "color": "black",
                      "creator_id": "string",
                      "description": "string",
                      "tag_id": "string",
                    },
                  ],
                  "url": "string",
                  "vitals": {
                    "blood_pressure_diastolic_mmhg": 0,
                    "blood_pressure_systolic_mmhg": 0,
                    "body_temperature_f": 1,
                    "height_in": 0,
                    "weight_lbs": 0,
                  },
                  "work_queue_id": "string",
                  "work_queue_membership_activated_at": "2023-01-01T00:00:00Z",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "benefits_assigned_to_provider": true,
                "billable_status": "BILLABLE",
                "billing_provider": {
                  "address": {
                    "address1": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "npi": "string",
                  "tax_id": "string",
                },
                "date_of_service": "string",
                "diagnoses": [
                  {
                    "code": "string",
                    "code_type": "ABF",
                  },
                ],
                "external_id": "string",
                "patient": {
                  "address": {
                    "address1": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                  },
                  "date_of_birth": "string",
                  "external_id": "string",
                  "first_name": "string",
                  "gender": "male",
                  "last_name": "string",
                },
                "patient_authorized_release": true,
                "place_of_service_code": "01",
                "provider_accepts_assignment": true,
                "rendering_provider": {
                  "npi": "string",
                },
                "responsible_party": "INSURANCE_PAY",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "benefits_assigned_to_provider": true,
                  "billable_status": "BILLABLE",
                  "billing_provider": {
                    "address": {
                      "address1": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "npi": "string",
                    "tax_id": "string",
                  },
                  "date_of_service": "string",
                  "diagnoses": [
                    {
                      "code": "string",
                      "code_type": "ABF",
                    },
                  ],
                  "external_id": "string",
                  "patient": {
                    "address": {
                      "address1": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                    },
                    "date_of_birth": "string",
                    "external_id": "string",
                    "first_name": "string",
                    "gender": "male",
                    "last_name": "string",
                  },
                  "patient_authorized_release": true,
                  "place_of_service_code": "01",
                  "provider_accepts_assignment": true,
                  "rendering_provider": {
                    "npi": "string",
                  },
                  "responsible_party": "INSURANCE_PAY",
                },
              },
              "responseBody": {
                "content": {
                  "external_id": "string",
                },
                "errorName": "EncounterExternalIdUniquenessError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "external_id": "string",
                  },
                  "errorName": "EncounterExternalIdUniquenessError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "benefits_assigned_to_provider": true,
                "billable_status": "BILLABLE",
                "billing_provider": {
                  "address": {
                    "address1": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "npi": "string",
                  "tax_id": "string",
                },
                "date_of_service": "string",
                "diagnoses": [
                  {
                    "code": "string",
                    "code_type": "ABF",
                  },
                ],
                "external_id": "string",
                "patient": {
                  "address": {
                    "address1": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                  },
                  "date_of_birth": "string",
                  "external_id": "string",
                  "first_name": "string",
                  "gender": "male",
                  "last_name": "string",
                },
                "patient_authorized_release": true,
                "place_of_service_code": "01",
                "provider_accepts_assignment": true,
                "rendering_provider": {
                  "npi": "string",
                },
                "responsible_party": "INSURANCE_PAY",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "benefits_assigned_to_provider": true,
                  "billable_status": "BILLABLE",
                  "billing_provider": {
                    "address": {
                      "address1": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "npi": "string",
                    "tax_id": "string",
                  },
                  "date_of_service": "string",
                  "diagnoses": [
                    {
                      "code": "string",
                      "code_type": "ABF",
                    },
                  ],
                  "external_id": "string",
                  "patient": {
                    "address": {
                      "address1": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                    },
                    "date_of_birth": "string",
                    "external_id": "string",
                    "first_name": "string",
                    "gender": "male",
                    "last_name": "string",
                  },
                  "patient_authorized_release": true,
                  "place_of_service_code": "01",
                  "provider_accepts_assignment": true,
                  "rendering_provider": {
                    "npi": "string",
                  },
                  "responsible_party": "INSURANCE_PAY",
                },
              },
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "benefits_assigned_to_provider": true,
                "billable_status": "BILLABLE",
                "billing_provider": {
                  "address": {
                    "address1": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "npi": "string",
                  "tax_id": "string",
                },
                "date_of_service": "string",
                "diagnoses": [
                  {
                    "code": "string",
                    "code_type": "ABF",
                  },
                ],
                "external_id": "string",
                "patient": {
                  "address": {
                    "address1": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                  },
                  "date_of_birth": "string",
                  "external_id": "string",
                  "first_name": "string",
                  "gender": "male",
                  "last_name": "string",
                },
                "patient_authorized_release": true,
                "place_of_service_code": "01",
                "provider_accepts_assignment": true,
                "rendering_provider": {
                  "npi": "string",
                },
                "responsible_party": "INSURANCE_PAY",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "benefits_assigned_to_provider": true,
                  "billable_status": "BILLABLE",
                  "billing_provider": {
                    "address": {
                      "address1": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "npi": "string",
                    "tax_id": "string",
                  },
                  "date_of_service": "string",
                  "diagnoses": [
                    {
                      "code": "string",
                      "code_type": "ABF",
                    },
                  ],
                  "external_id": "string",
                  "patient": {
                    "address": {
                      "address1": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                    },
                    "date_of_birth": "string",
                    "external_id": "string",
                    "first_name": "string",
                    "gender": "male",
                    "last_name": "string",
                  },
                  "patient_authorized_release": true,
                  "place_of_service_code": "01",
                  "provider_accepts_assignment": true,
                  "rendering_provider": {
                    "npi": "string",
                  },
                  "responsible_party": "INSURANCE_PAY",
                },
              },
              "responseBody": {
                "content": {
                  "missing_fields": [
                    "string",
                  ],
                },
                "errorName": "EncounterGuarantorMissingContactInfoError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "missing_fields": [
                      "string",
                    ],
                  },
                  "errorName": "EncounterGuarantorMissingContactInfoError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "benefits_assigned_to_provider": true,
                "billable_status": "BILLABLE",
                "billing_provider": {
                  "address": {
                    "address1": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "npi": "string",
                  "tax_id": "string",
                },
                "date_of_service": "string",
                "diagnoses": [
                  {
                    "code": "string",
                    "code_type": "ABF",
                  },
                ],
                "external_id": "string",
                "patient": {
                  "address": {
                    "address1": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                  },
                  "date_of_birth": "string",
                  "external_id": "string",
                  "first_name": "string",
                  "gender": "male",
                  "last_name": "string",
                },
                "patient_authorized_release": true,
                "place_of_service_code": "01",
                "provider_accepts_assignment": true,
                "rendering_provider": {
                  "npi": "string",
                },
                "responsible_party": "INSURANCE_PAY",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "benefits_assigned_to_provider": true,
                  "billable_status": "BILLABLE",
                  "billing_provider": {
                    "address": {
                      "address1": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "npi": "string",
                    "tax_id": "string",
                  },
                  "date_of_service": "string",
                  "diagnoses": [
                    {
                      "code": "string",
                      "code_type": "ABF",
                    },
                  ],
                  "external_id": "string",
                  "patient": {
                    "address": {
                      "address1": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                    },
                    "date_of_birth": "string",
                    "external_id": "string",
                    "first_name": "string",
                    "gender": "male",
                    "last_name": "string",
                  },
                  "patient_authorized_release": true,
                  "place_of_service_code": "01",
                  "provider_accepts_assignment": true,
                  "rendering_provider": {
                    "npi": "string",
                  },
                  "responsible_party": "INSURANCE_PAY",
                },
              },
              "responseBody": {
                "content": [
                  {
                    "fieldName": "string",
                    "humanReadableMessage": "string",
                  },
                ],
                "errorName": "HttpRequestValidationsError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": [
                    {
                      "fieldName": "string",
                      "humanReadableMessage": "string",
                    },
                  ],
                  "errorName": "HttpRequestValidationsError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "benefits_assigned_to_provider": true,
                "billable_status": "BILLABLE",
                "billing_provider": {
                  "address": {
                    "address1": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "npi": "string",
                  "tax_id": "string",
                },
                "date_of_service": "string",
                "diagnoses": [
                  {
                    "code": "string",
                    "code_type": "ABF",
                  },
                ],
                "external_id": "string",
                "patient": {
                  "address": {
                    "address1": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                  },
                  "date_of_birth": "string",
                  "external_id": "string",
                  "first_name": "string",
                  "gender": "male",
                  "last_name": "string",
                },
                "patient_authorized_release": true,
                "place_of_service_code": "01",
                "provider_accepts_assignment": true,
                "rendering_provider": {
                  "npi": "string",
                },
                "responsible_party": "INSURANCE_PAY",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "benefits_assigned_to_provider": true,
                  "billable_status": "BILLABLE",
                  "billing_provider": {
                    "address": {
                      "address1": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "npi": "string",
                    "tax_id": "string",
                  },
                  "date_of_service": "string",
                  "diagnoses": [
                    {
                      "code": "string",
                      "code_type": "ABF",
                    },
                  ],
                  "external_id": "string",
                  "patient": {
                    "address": {
                      "address1": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                    },
                    "date_of_birth": "string",
                    "external_id": "string",
                    "first_name": "string",
                    "gender": "male",
                    "last_name": "string",
                  },
                  "patient_authorized_release": true,
                  "place_of_service_code": "01",
                  "provider_accepts_assignment": true,
                  "rendering_provider": {
                    "npi": "string",
                  },
                  "responsible_party": "INSURANCE_PAY",
                },
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "CashPayPayerError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "CashPayPayerError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": [
            "create-encounter",
          ],
          "name": "Create encounter",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/encounters/v4",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [
                "type_encounters/v4:EncounterBase",
              ],
              "properties": [
                {
                  "key": "patient",
                  "valueType": {
                    "type": "id",
                    "value": "type_individual:PatientCreate",
                  },
                },
                {
                  "key": "billing_provider",
                  "valueType": {
                    "type": "id",
                    "value": "type_encounter-providers/v2:BillingProvider",
                  },
                },
                {
                  "key": "rendering_provider",
                  "valueType": {
                    "type": "id",
                    "value": "type_encounter-providers/v2:RenderingProvider",
                  },
                },
                {
                  "description": "The provider who referred the services that were rendered.
All physicians who order services or refer Medicare beneficiaries must
report this data.
If a claim involves multiple referring physicians, create a separate
encounter for each physician.
",
                  "key": "referring_provider",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_encounter-providers/v2:ReferringProvider",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "service_facility",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_service-facility:EncounterServiceFacilityBase",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "Subscriber_primary is required when responsible_party is INSURANCE_PAY (i.e. when the claim should be billed to insurance).
These are not required fields when responsible_party is SELF_PAY (i.e. when the claim should be billed to the patient).
However, if you collect this for patients, even self-pay, we recommend including it when sending encounters to Candid.
Note: Cash Pay is no longer a valid payer_id in v4, please use responsible party to define self-pay claims
",
                  "key": "subscriber_primary",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_individual:SubscriberCreate",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "Please always include this when you have it, even for self-pay claims
",
                  "key": "subscriber_secondary",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_individual:SubscriberCreate",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "Ideally, this field should contain no more than 12 diagnoses. However, more diagnoses
may be submitted at this time, and coders will later prioritize the 12 that will be
submitted to the payor.
",
                  "key": "diagnoses",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_diagnoses:DiagnosisCreate",
                    },
                    "type": "list",
                  },
                },
                {
                  "key": "clinical_notes",
                  "valueType": {
                    "itemType": {
                      "itemType": {
                        "type": "id",
                        "value": "type_encounters/v4:ClinicalNoteCategoryCreate",
                      },
                      "type": "list",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "Spot to store misc, human-readable, notes about this encounter to be used
in the billing process.
",
                  "key": "billing_notes",
                  "valueType": {
                    "itemType": {
                      "itemType": {
                        "type": "id",
                        "value": "type_billing-notes:BillingNoteBase",
                      },
                      "type": "list",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "place_of_service_code",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:FacilityTypeCode",
                  },
                },
                {
                  "key": "patient_histories",
                  "valueType": {
                    "itemType": {
                      "itemType": {
                        "type": "id",
                        "value": "type_encounters/v4:PatientHistoryCategory",
                      },
                      "type": "list",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "Each service line must be linked to a diagnosis. Concretely,
\`service_line.diagnosis_pointers\`must contain at least one entry which should be
in bounds of the diagnoses list field
",
                  "key": "service_lines",
                  "valueType": {
                    "itemType": {
                      "itemType": {
                        "type": "id",
                        "value": "type_service-lines/v2:ServiceLineCreate",
                      },
                      "type": "list",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "Personal and contact info for the guarantor of the patient responsibility.
",
                  "key": "guarantor",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_guarantor/v1:GuarantorCreate",
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_encounters/v4:Encounter",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_encounters/v4:EncounterExternalIdUniquenessErrorType",
              },
            },
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:RequestValidationError",
                },
                "type": "list",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Encounter External Id Uniqueness Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EncounterExternalIdUniquenessError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_encounters/v4:EncounterExternalIdUniquenessErrorType",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Http Request Validations Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "HttpRequestValidationsError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:RequestValidationError",
                      },
                      "type": "list",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "appointment_type": "string",
                "benefits_assigned_to_provider": true,
                "billable_status": "BILLABLE",
                "billing_notes": [
                  {
                    "author_auth0_id": "string",
                    "author_name": "string",
                    "billing_note_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "created_at": "2023-01-01T00:00:00Z",
                    "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "text": "string",
                  },
                ],
                "billing_provider": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "first_name": "string",
                  "last_name": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
                "claims": [
                  {
                    "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "clearinghouse": "string",
                    "clearinghouse_claim_id": "string",
                    "eras": [
                      {
                        "check_date": "string",
                        "check_number": "string",
                        "era_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      },
                    ],
                    "payer_claim_id": "string",
                    "service_lines": [
                      {
                        "allowed_amount_cents": 0,
                        "charge_amount_cents": 0,
                        "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "date_of_service_range": {
                          "end_date": "string",
                          "start_date": "string",
                        },
                        "denial_reason": {
                          "reason": "Authorization Required",
                        },
                        "diagnosis_id_one": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "diagnosis_id_three": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "diagnosis_id_two": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "diagnosis_id_zero": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "insurance_balance_cents": 0,
                        "modifiers": [
                          "22",
                        ],
                        "paid_amount_cents": 0,
                        "patient_balance_cents": 0,
                        "patient_responsibility_cents": 0,
                        "place_of_service_code": "01",
                        "procedure_code": "string",
                        "quantity": "string",
                        "related_invoices": [
                          {
                            "created_at": "2023-01-01T00:00:00Z",
                            "customer_invoice_url": "string",
                            "due_date": "string",
                            "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            "items": [
                              {
                                "amount_cents": 0,
                                "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              },
                            ],
                            "note": "string",
                            "organzation_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            "patient_external_id": "string",
                            "source_customer_id": "string",
                            "source_id": "string",
                            "status": "draft",
                            "updated_at": "2023-01-01T00:00:00Z",
                            "url": "string",
                          },
                        ],
                        "service_line_era_data": {
                          "remittance_advice_remark_codes": [
                            "string",
                          ],
                          "service_line_adjustments": [
                            {
                              "adjustment_amount_cents": 0,
                              "adjustment_group_code": "string",
                              "adjustment_note": "string",
                              "adjustment_reason_code": "string",
                              "created_at": "2023-01-01T00:00:00Z",
                            },
                          ],
                        },
                        "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "service_line_manual_adjustments": [
                          {
                            "adjustment_amount_cents": 0,
                            "adjustment_group_code": "string",
                            "adjustment_note": "string",
                            "adjustment_reason_code": "string",
                            "created_at": "2023-01-01T00:00:00Z",
                          },
                        ],
                        "units": "MJ",
                      },
                    ],
                    "status": "biller_received",
                  },
                ],
                "clinical_notes": [
                  {
                    "category": "clinical",
                    "notes": [
                      "string",
                    ],
                    "notes_structured": [
                      {
                        "author_name": "string",
                        "author_npi": "string",
                        "text": "string",
                        "timestamp": "2023-01-01T00:00:00Z",
                      },
                    ],
                  },
                ],
                "coding_attribution": "CANDID",
                "date_of_service": "string",
                "diagnoses": [
                  {
                    "code": "string",
                    "code_type": "ABF",
                    "created_at": "2023-01-01T00:00:00Z",
                    "diagnosis_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "name": "string",
                    "updated_at": "2023-01-01T00:00:00Z",
                  },
                ],
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "end_date_of_service": "string",
                "existing_medications": [
                  {
                    "as_needed": true,
                    "dosage": "string",
                    "dosage_form": "string",
                    "frequency": "string",
                    "name": "string",
                    "rx_cui": "string",
                  },
                ],
                "external_id": "string",
                "guarantor": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "2023-01-01",
                  "email": "string",
                  "email_consent": true,
                  "external_id": "string",
                  "first_name": "string",
                  "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "last_name": "string",
                  "phone_consent": true,
                  "phone_numbers": [
                    {
                      "number": "string",
                      "type": "Home",
                    },
                  ],
                },
                "interventions": [
                  {
                    "category": "allopathic",
                    "description": "string",
                    "labs": [
                      {
                        "code": "string",
                        "code_type": "quest",
                        "name": "string",
                      },
                    ],
                    "medication": {
                      "as_needed": true,
                      "dosage": "string",
                      "dosage_form": "string",
                      "frequency": "string",
                      "name": "string",
                      "rx_cui": "string",
                    },
                    "name": "string",
                  },
                ],
                "owner_of_next_action": "CANDID",
                "patient": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "string",
                  "email": "string",
                  "email_consent": true,
                  "external_id": "string",
                  "first_name": "string",
                  "gender": "male",
                  "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "last_name": "string",
                  "phone_consent": true,
                  "phone_numbers": [
                    {
                      "number": "string",
                      "type": "Home",
                    },
                  ],
                },
                "patient_authorized_release": true,
                "patient_histories": [
                  {
                    "category": "present_illness",
                    "questions": [
                      {
                        "id": "string",
                        "responses": [
                          {
                            "follow_ups": [
                              {
                                "id": "string",
                                "response": "string",
                                "text": "string",
                              },
                            ],
                            "response": "string",
                          },
                        ],
                        "text": "string",
                      },
                    ],
                  },
                ],
                "patient_payments": [
                  {
                    "amount_cents": 0,
                    "encounter_external_id": "string",
                    "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "patient_external_id": "string",
                    "patient_payment_id": "string",
                    "payment_name": "string",
                    "payment_note": "string",
                    "payment_timestamp": "2023-01-01T00:00:00Z",
                    "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "source": "MANUAL_ENTRY",
                    "source_internal_id": "string",
                    "status": "PENDING",
                  },
                ],
                "pay_to_address": {
                  "address1": "string",
                  "address2": "string",
                  "city": "string",
                  "state": "AA",
                  "zip_code": "string",
                  "zip_plus_four_code": "string",
                },
                "place_of_service_code": "01",
                "place_of_service_code_as_submitted": "01",
                "prior_authorization_number": "string",
                "provider_accepts_assignment": true,
                "referring_provider": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "first_name": "string",
                  "last_name": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
                "rendering_provider": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "first_name": "string",
                  "last_name": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
                "responsible_party": "INSURANCE_PAY",
                "service_facility": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "organization_name": "string",
                  "service_facility_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
                "subscriber_primary": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "string",
                  "first_name": "string",
                  "gender": "male",
                  "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "insurance_card": {
                    "group_number": "string",
                    "image_url_back": "string",
                    "image_url_front": "string",
                    "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_type": "01",
                    "member_id": "string",
                    "payer_id": "string",
                    "payer_name": "string",
                    "plan_name": "string",
                    "plan_type": "09",
                    "rx_bin": "string",
                    "rx_pcn": "string",
                  },
                  "last_name": "string",
                  "patient_relationship_to_subscriber_code": "01",
                },
                "subscriber_secondary": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "string",
                  "first_name": "string",
                  "gender": "male",
                  "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "insurance_card": {
                    "group_number": "string",
                    "image_url_back": "string",
                    "image_url_front": "string",
                    "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_type": "01",
                    "member_id": "string",
                    "payer_id": "string",
                    "payer_name": "string",
                    "plan_name": "string",
                    "plan_type": "09",
                    "rx_bin": "string",
                    "rx_pcn": "string",
                  },
                  "last_name": "string",
                  "patient_relationship_to_subscriber_code": "01",
                },
                "synchronicity": "Synchronous",
                "tags": [
                  {
                    "color": "black",
                    "creator_id": "string",
                    "description": "string",
                    "tag_id": "string",
                  },
                ],
                "url": "string",
                "vitals": {
                  "blood_pressure_diastolic_mmhg": 0,
                  "blood_pressure_systolic_mmhg": 0,
                  "body_temperature_f": 1,
                  "height_in": 0,
                  "weight_lbs": 0,
                },
                "work_queue_id": "string",
                "work_queue_membership_activated_at": "2023-01-01T00:00:00Z",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "appointment_type": "string",
                  "benefits_assigned_to_provider": true,
                  "billable_status": "BILLABLE",
                  "billing_notes": [
                    {
                      "author_auth0_id": "string",
                      "author_name": "string",
                      "billing_note_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "created_at": "2023-01-01T00:00:00Z",
                      "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "text": "string",
                    },
                  ],
                  "billing_provider": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "first_name": "string",
                    "last_name": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                  "claims": [
                    {
                      "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "clearinghouse": "string",
                      "clearinghouse_claim_id": "string",
                      "eras": [
                        {
                          "check_date": "string",
                          "check_number": "string",
                          "era_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        },
                      ],
                      "payer_claim_id": "string",
                      "service_lines": [
                        {
                          "allowed_amount_cents": 0,
                          "charge_amount_cents": 0,
                          "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "date_of_service_range": {
                            "end_date": "string",
                            "start_date": "string",
                          },
                          "denial_reason": {
                            "reason": "Authorization Required",
                          },
                          "diagnosis_id_one": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "diagnosis_id_three": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "diagnosis_id_two": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "diagnosis_id_zero": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "insurance_balance_cents": 0,
                          "modifiers": [
                            "22",
                          ],
                          "paid_amount_cents": 0,
                          "patient_balance_cents": 0,
                          "patient_responsibility_cents": 0,
                          "place_of_service_code": "01",
                          "procedure_code": "string",
                          "quantity": "string",
                          "related_invoices": [
                            {
                              "created_at": "2023-01-01T00:00:00Z",
                              "customer_invoice_url": "string",
                              "due_date": "string",
                              "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "items": [
                                {
                                  "amount_cents": 0,
                                  "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                },
                              ],
                              "note": "string",
                              "organzation_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "patient_external_id": "string",
                              "source_customer_id": "string",
                              "source_id": "string",
                              "status": "draft",
                              "updated_at": "2023-01-01T00:00:00Z",
                              "url": "string",
                            },
                          ],
                          "service_line_era_data": {
                            "remittance_advice_remark_codes": [
                              "string",
                            ],
                            "service_line_adjustments": [
                              {
                                "adjustment_amount_cents": 0,
                                "adjustment_group_code": "string",
                                "adjustment_note": "string",
                                "adjustment_reason_code": "string",
                                "created_at": "2023-01-01T00:00:00Z",
                              },
                            ],
                          },
                          "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "service_line_manual_adjustments": [
                            {
                              "adjustment_amount_cents": 0,
                              "adjustment_group_code": "string",
                              "adjustment_note": "string",
                              "adjustment_reason_code": "string",
                              "created_at": "2023-01-01T00:00:00Z",
                            },
                          ],
                          "units": "MJ",
                        },
                      ],
                      "status": "biller_received",
                    },
                  ],
                  "clinical_notes": [
                    {
                      "category": "clinical",
                      "notes": [
                        "string",
                      ],
                      "notes_structured": [
                        {
                          "author_name": "string",
                          "author_npi": "string",
                          "text": "string",
                          "timestamp": "2023-01-01T00:00:00Z",
                        },
                      ],
                    },
                  ],
                  "coding_attribution": "CANDID",
                  "date_of_service": "string",
                  "diagnoses": [
                    {
                      "code": "string",
                      "code_type": "ABF",
                      "created_at": "2023-01-01T00:00:00Z",
                      "diagnosis_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "name": "string",
                      "updated_at": "2023-01-01T00:00:00Z",
                    },
                  ],
                  "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "end_date_of_service": "string",
                  "existing_medications": [
                    {
                      "as_needed": true,
                      "dosage": "string",
                      "dosage_form": "string",
                      "frequency": "string",
                      "name": "string",
                      "rx_cui": "string",
                    },
                  ],
                  "external_id": "string",
                  "guarantor": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "date_of_birth": "2023-01-01",
                    "email": "string",
                    "email_consent": true,
                    "external_id": "string",
                    "first_name": "string",
                    "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "last_name": "string",
                    "phone_consent": true,
                    "phone_numbers": [
                      {
                        "number": "string",
                        "type": "Home",
                      },
                    ],
                  },
                  "interventions": [
                    {
                      "category": "allopathic",
                      "description": "string",
                      "labs": [
                        {
                          "code": "string",
                          "code_type": "quest",
                          "name": "string",
                        },
                      ],
                      "medication": {
                        "as_needed": true,
                        "dosage": "string",
                        "dosage_form": "string",
                        "frequency": "string",
                        "name": "string",
                        "rx_cui": "string",
                      },
                      "name": "string",
                    },
                  ],
                  "owner_of_next_action": "CANDID",
                  "patient": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "date_of_birth": "string",
                    "email": "string",
                    "email_consent": true,
                    "external_id": "string",
                    "first_name": "string",
                    "gender": "male",
                    "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "last_name": "string",
                    "phone_consent": true,
                    "phone_numbers": [
                      {
                        "number": "string",
                        "type": "Home",
                      },
                    ],
                  },
                  "patient_authorized_release": true,
                  "patient_histories": [
                    {
                      "category": "present_illness",
                      "questions": [
                        {
                          "id": "string",
                          "responses": [
                            {
                              "follow_ups": [
                                {
                                  "id": "string",
                                  "response": "string",
                                  "text": "string",
                                },
                              ],
                              "response": "string",
                            },
                          ],
                          "text": "string",
                        },
                      ],
                    },
                  ],
                  "patient_payments": [
                    {
                      "amount_cents": 0,
                      "encounter_external_id": "string",
                      "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "patient_external_id": "string",
                      "patient_payment_id": "string",
                      "payment_name": "string",
                      "payment_note": "string",
                      "payment_timestamp": "2023-01-01T00:00:00Z",
                      "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "source": "MANUAL_ENTRY",
                      "source_internal_id": "string",
                      "status": "PENDING",
                    },
                  ],
                  "pay_to_address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "place_of_service_code": "01",
                  "place_of_service_code_as_submitted": "01",
                  "prior_authorization_number": "string",
                  "provider_accepts_assignment": true,
                  "referring_provider": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "first_name": "string",
                    "last_name": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                  "rendering_provider": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "first_name": "string",
                    "last_name": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                  "responsible_party": "INSURANCE_PAY",
                  "service_facility": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "organization_name": "string",
                    "service_facility_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "subscriber_primary": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "date_of_birth": "string",
                    "first_name": "string",
                    "gender": "male",
                    "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_card": {
                      "group_number": "string",
                      "image_url_back": "string",
                      "image_url_front": "string",
                      "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "insurance_type": "01",
                      "member_id": "string",
                      "payer_id": "string",
                      "payer_name": "string",
                      "plan_name": "string",
                      "plan_type": "09",
                      "rx_bin": "string",
                      "rx_pcn": "string",
                    },
                    "last_name": "string",
                    "patient_relationship_to_subscriber_code": "01",
                  },
                  "subscriber_secondary": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "date_of_birth": "string",
                    "first_name": "string",
                    "gender": "male",
                    "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_card": {
                      "group_number": "string",
                      "image_url_back": "string",
                      "image_url_front": "string",
                      "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "insurance_type": "01",
                      "member_id": "string",
                      "payer_id": "string",
                      "payer_name": "string",
                      "plan_name": "string",
                      "plan_type": "09",
                      "rx_bin": "string",
                      "rx_pcn": "string",
                    },
                    "last_name": "string",
                    "patient_relationship_to_subscriber_code": "01",
                  },
                  "synchronicity": "Synchronous",
                  "tags": [
                    {
                      "color": "black",
                      "creator_id": "string",
                      "description": "string",
                      "tag_id": "string",
                    },
                  ],
                  "url": "string",
                  "vitals": {
                    "blood_pressure_diastolic_mmhg": 0,
                    "blood_pressure_systolic_mmhg": 0,
                    "body_temperature_f": 1,
                    "height_in": 0,
                    "weight_lbs": 0,
                  },
                  "work_queue_id": "string",
                  "work_queue_membership_activated_at": "2023-01-01T00:00:00Z",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "external_id": "string",
                },
                "errorName": "EncounterExternalIdUniquenessError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "external_id": "string",
                  },
                  "errorName": "EncounterExternalIdUniquenessError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": [
                  {
                    "fieldName": "string",
                    "humanReadableMessage": "string",
                  },
                ],
                "errorName": "HttpRequestValidationsError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": [
                    {
                      "fieldName": "string",
                      "humanReadableMessage": "string",
                    },
                  ],
                  "errorName": "HttpRequestValidationsError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PATCH",
          "migratedFromUrlSlugs": [
            "update-encounter",
          ],
          "name": "Update encounter",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/encounters/v4",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "description": "Box 23 on the CMS-1500 claim form.",
                  "key": "prior_authorization_number",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_encounters/v4:PriorAuthorizationNumber",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "A client-specified unique ID to associate with this encounter;
for example, your internal encounter ID or a Dr. Chrono encounter ID.
This field should not contain PHI.
",
                  "key": "external_id",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:EncounterExternalId",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "Date formatted as YYYY-MM-DD; eg: 2019-08-24.
This date must be the local date in the timezone where the service occurred.
Box 24a on the CMS-1500 claim form.
If service occurred over a range of dates, this should be the start date.
",
                  "key": "date_of_service",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Date",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "Ideally, this field should contain no more than 12 diagnoses. However, more diagnoses
may be submitted at this time, and coders will later prioritize the 12 that will be
submitted to the payor.
",
                  "key": "diagnosis_ids",
                  "valueType": {
                    "itemType": {
                      "itemType": {
                        "type": "id",
                        "value": "type_diagnoses:DiagnosisId",
                      },
                      "type": "list",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "tag_ids",
                  "valueType": {
                    "itemType": {
                      "itemType": {
                        "type": "id",
                        "value": "type_tags:TagId",
                      },
                      "type": "list",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "clinical_notes",
                  "valueType": {
                    "itemType": {
                      "itemType": {
                        "type": "id",
                        "value": "type_encounters/v4:ClinicalNoteCategoryCreate",
                      },
                      "type": "list",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "pay_to_address",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:StreetAddressLongZip",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "billable_status",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_encounters/v4:BillableStatusType",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "responsible_party",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_encounters/v4:ResponsiblePartyType",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "provider_accepts_assignment",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "benefits_assigned_to_provider",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "synchronicity",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_encounters/v4:SynchronicityType",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "place_of_service_code",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:FacilityTypeCode",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "appointment_type",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "end_date_of_service",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Date",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "subscriber_secondary",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_individual:SubscriberCreate",
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_encounters/v4:Encounter",
              },
            },
          },
          "urlSlug": "update",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/attachments",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": [
                {
                  "attachment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "attachment_type": "DOCUMENTATION",
                  "authed_url": "string",
                  "content_type": "string",
                  "description": "string",
                  "file_name": "string",
                },
              ],
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "attachment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "attachment_type": "DOCUMENTATION",
                    "authed_url": "string",
                    "content_type": "string",
                    "description": "string",
                    "file_name": "string",
                  },
                ],
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "getAttachments",
          "method": "GET",
          "migratedFromUrlSlugs": [
            "get-attachments-for-encounter",
          ],
          "name": "Get attachments for encounter",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/encounters/v4",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "/attachments",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounters/v4:EncounterAttachment",
                },
                "type": "list",
              },
            },
          },
          "urlSlug": "get-attachments",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/clinical-notes-pdf/generate",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "download_link": "string",
                "result": "success",
                "ttl_seconds": 1,
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "download_link": "string",
                  "result": "success",
                  "ttl_seconds": 1,
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "generateClinicalNotesPdf",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Generate clinical notes PDF",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/encounters/v4",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "/clinical-notes-pdf/generate",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_encounters/v4:GenerateClinicalNotesPdfResponse",
              },
            },
          },
          "urlSlug": "generate-clinical-notes-pdf",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Initiates a re-calculation of the contracting status",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/network-status-results",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "contracting_status_result": {
                  "contracting_status": "out_of_network",
                  "out_of_network_reason": "no_effective_contract",
                },
                "credentialing_status_result": {
                  "credentialing_spans": [
                    {
                      "contracting_provider": {
                        "addresses": [
                          {
                            "address": {
                              "address1": "string",
                              "address2": "string",
                              "city": "string",
                              "state": "AA",
                              "zip_code": "string",
                              "zip_plus_four_code": "string",
                            },
                            "address_type": "DEFAULT",
                          },
                        ],
                        "employment_start_date": "string",
                        "employment_status": "ACTIVE",
                        "employment_termination_date": "string",
                        "first_name": "string",
                        "is_billing": true,
                        "is_rendering": true,
                        "last_name": "string",
                        "license_type": "MD",
                        "medicaid_provider_id": "string",
                        "npi": "string",
                        "organization_name": "string",
                        "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "provider_type": "INDIVIDUAL",
                        "ptan": "string",
                        "tax_id": "string",
                        "taxonomy_code": "string",
                      },
                      "credentialing_status": "work_in_progress",
                      "dates": {
                        "end_date": "string",
                        "start_date": "string",
                        "type": "required_dates",
                      },
                      "payer": {
                        "payer_id": "string",
                        "payer_name": "string",
                        "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      },
                      "payer_loaded_date": "string",
                      "provider_credentialing_span_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "regions": {
                        "states": [
                          "AA",
                        ],
                        "type": "states",
                      },
                      "rendering_provider": {
                        "addresses": [
                          {
                            "address": {
                              "address1": "string",
                              "address2": "string",
                              "city": "string",
                              "state": "AA",
                              "zip_code": "string",
                              "zip_plus_four_code": "string",
                            },
                            "address_type": "DEFAULT",
                          },
                        ],
                        "employment_start_date": "string",
                        "employment_status": "ACTIVE",
                        "employment_termination_date": "string",
                        "first_name": "string",
                        "is_billing": true,
                        "is_rendering": true,
                        "last_name": "string",
                        "license_type": "MD",
                        "medicaid_provider_id": "string",
                        "npi": "string",
                        "organization_name": "string",
                        "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "provider_type": "INDIVIDUAL",
                        "ptan": "string",
                        "tax_id": "string",
                        "taxonomy_code": "string",
                      },
                      "submitted_date": "string",
                    },
                  ],
                  "type": "credentialed",
                },
                "network_status": "in_network",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "contracting_status_result": {
                    "contracting_status": "out_of_network",
                    "out_of_network_reason": "no_effective_contract",
                  },
                  "credentialing_status_result": {
                    "credentialing_spans": [
                      {
                        "contracting_provider": {
                          "addresses": [
                            {
                              "address": {
                                "address1": "string",
                                "address2": "string",
                                "city": "string",
                                "state": "AA",
                                "zip_code": "string",
                                "zip_plus_four_code": "string",
                              },
                              "address_type": "DEFAULT",
                            },
                          ],
                          "employment_start_date": "string",
                          "employment_status": "ACTIVE",
                          "employment_termination_date": "string",
                          "first_name": "string",
                          "is_billing": true,
                          "is_rendering": true,
                          "last_name": "string",
                          "license_type": "MD",
                          "medicaid_provider_id": "string",
                          "npi": "string",
                          "organization_name": "string",
                          "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "provider_type": "INDIVIDUAL",
                          "ptan": "string",
                          "tax_id": "string",
                          "taxonomy_code": "string",
                        },
                        "credentialing_status": "work_in_progress",
                        "dates": {
                          "end_date": "string",
                          "start_date": "string",
                          "type": "required_dates",
                        },
                        "payer": {
                          "payer_id": "string",
                          "payer_name": "string",
                          "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        },
                        "payer_loaded_date": "string",
                        "provider_credentialing_span_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "regions": {
                          "states": [
                            "AA",
                          ],
                          "type": "states",
                        },
                        "rendering_provider": {
                          "addresses": [
                            {
                              "address": {
                                "address1": "string",
                                "address2": "string",
                                "city": "string",
                                "state": "AA",
                                "zip_code": "string",
                                "zip_plus_four_code": "string",
                              },
                              "address_type": "DEFAULT",
                            },
                          ],
                          "employment_start_date": "string",
                          "employment_status": "ACTIVE",
                          "employment_termination_date": "string",
                          "first_name": "string",
                          "is_billing": true,
                          "is_rendering": true,
                          "last_name": "string",
                          "license_type": "MD",
                          "medicaid_provider_id": "string",
                          "npi": "string",
                          "organization_name": "string",
                          "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "provider_type": "INDIVIDUAL",
                          "ptan": "string",
                          "tax_id": "string",
                          "taxonomy_code": "string",
                        },
                        "submitted_date": "string",
                      },
                    ],
                    "type": "credentialed",
                  },
                  "network_status": "in_network",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "recomputeNetworkStatusResults",
          "method": "PUT",
          "migratedFromUrlSlugs": [
            "recompute-encounter-network-status",
          ],
          "name": "Recompute encounter network status",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/encounters/v4",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "/network-status-results",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_encounters/v4:NetworkStatusComputationResults",
              },
            },
          },
          "urlSlug": "recompute-network-status-results",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/encounters/v4/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/mark-as-not-billable",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "closed_task_ids": [
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "closed_task_ids": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "markAsNotBillable",
          "method": "PUT",
          "migratedFromUrlSlugs": [
            "mark-encounter-not-billable",
          ],
          "name": "Mark encounter not billable",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/encounters/v4",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "/mark-as-not-billable",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_encounters/v4:MarkAsNotBillableResponse",
              },
            },
          },
          "urlSlug": "mark-as-not-billable",
        },
      ],
      "name": "v4",
      "parent": "subpackage_encounters",
      "pointsTo": undefined,
      "subpackageId": "subpackage_encounters/v4",
      "subpackages": [],
      "types": [
        "type_encounters/v4:EncounterBase",
        "type_encounters/v4:Encounter",
        "type_encounters/v4:EncounterSortOptions",
        "type_encounters/v4:Medication",
        "type_encounters/v4:Vitals",
        "type_encounters/v4:Intervention",
        "type_encounters/v4:InterventionCategory",
        "type_encounters/v4:Lab",
        "type_encounters/v4:LabCodeType",
        "type_encounters/v4:PatientHistoryCategory",
        "type_encounters/v4:PatientHistoryCategoryEnum",
        "type_encounters/v4:IntakeQuestion",
        "type_encounters/v4:IntakeResponseAndFollowUps",
        "type_encounters/v4:IntakeFollowUp",
        "type_encounters/v4:ClinicalNoteCategoryCreate",
        "type_encounters/v4:ClinicalNoteCategory",
        "type_encounters/v4:NoteCategory",
        "type_encounters/v4:ClinicalNote",
        "type_encounters/v4:ResponsiblePartyType",
        "type_encounters/v4:BillableStatusType",
        "type_encounters/v4:EncounterOwnerOfNextActionType",
        "type_encounters/v4:SynchronicityType",
        "type_encounters/v4:CodingAttributionType",
        "type_encounters/v4:AttachmentId",
        "type_encounters/v4:BaseAttachment",
        "type_encounters/v4:EncounterAttachment",
        "type_encounters/v4:EncounterAttachmentType",
        "type_encounters/v4:GenerateClinicalNotesPdfResponse",
        "type_encounters/v4:SuccessfulGenerateClinicalNotesPdfResponse",
        "type_encounters/v4:NetworkStatusComputationResults",
        "type_encounters/v4:AttributableContractingStatusResult",
        "type_encounters/v4:OutOfNetworkContractingStatusResult",
        "type_encounters/v4:ContractingOutOfOfNetworkReason",
        "type_encounters/v4:InNetworkContractingStatusResult",
        "type_encounters/v4:NetworkStatus",
        "type_encounters/v4:MarkAsNotBillableResponse",
        "type_encounters/v4:EncounterPage",
        "type_encounters/v4:PriorAuthorizationNumber",
        "type_encounters/v4:RxCui",
        "type_encounters/v4:IntakeQuestionId",
        "type_encounters/v4:IntakeFollowUpId",
        "type_encounters/v4:EncounterExternalIdUniquenessErrorType",
        "type_encounters/v4:EncounterGuarantorMissingContactInfoErrorType",
        "type_encounters/v4:CashPayPayerErrorMessage",
      ],
      "urlSlug": "v-4",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_enrollments": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/enrollments/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "assignee": {
                  "auth0_id": "string",
                  "type": "individual_assignee",
                },
                "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "enrollment_type": "CLAIMS",
                "last_updated_at": "2023-01-01T00:00:00Z",
                "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "payer_id": "string",
                "payer_name": "string",
                "priority": "HIGH_PRIORITY",
                "provider_npi": "string",
                "source": {
                  "cpid": "string",
                  "date_completed": "string",
                  "date_mailed": "string",
                  "date_received": "string",
                  "doc_handle": "string",
                  "doc_type": "Claim Status",
                  "follow_up_date": "string",
                  "idm_username": "string",
                  "notes": "string",
                  "npi_number": "string",
                  "payer_id": "string",
                  "payer_name": "string",
                  "provider": "string",
                  "provider_num": "string",
                  "provider_status": "string",
                  "reference_id": "string",
                  "sap_id": "string",
                  "status": "AUTHORIZED",
                  "submitter_id": "string",
                  "tax_id": "string",
                  "type": "change_healthcare",
                },
                "status": "SUBMITTED",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "assignee": {
                    "auth0_id": "string",
                    "type": "individual_assignee",
                  },
                  "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "enrollment_type": "CLAIMS",
                  "last_updated_at": "2023-01-01T00:00:00Z",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "payer_id": "string",
                  "payer_name": "string",
                  "priority": "HIGH_PRIORITY",
                  "provider_npi": "string",
                  "source": {
                    "cpid": "string",
                    "date_completed": "string",
                    "date_mailed": "string",
                    "date_received": "string",
                    "doc_handle": "string",
                    "doc_type": "Claim Status",
                    "follow_up_date": "string",
                    "idm_username": "string",
                    "notes": "string",
                    "npi_number": "string",
                    "payer_id": "string",
                    "payer_name": "string",
                    "provider": "string",
                    "provider_num": "string",
                    "provider_status": "string",
                    "reference_id": "string",
                    "sap_id": "string",
                    "status": "AUTHORIZED",
                    "submitter_id": "string",
                    "tax_id": "string",
                    "type": "change_healthcare",
                  },
                  "status": "SUBMITTED",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/enrollments/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "enrollment_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "enrollment_id",
                "type": {
                  "type": "id",
                  "value": "type_enrollments:EnrollmentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_enrollments:Enrollment",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/enrollments/v2",
              "pathParameters": {},
              "queryParameters": {
                "assignee_id": undefined,
                "enrollment_types": "CLAIMS",
                "include_hidden": undefined,
                "limit": undefined,
                "organization_provider_id": undefined,
                "page_token": undefined,
                "payer_search_term": undefined,
                "priority": undefined,
                "provider_npi": undefined,
                "statuses": "SUBMITTED",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "assignee": {
                      "auth0_id": "string",
                      "type": "individual_assignee",
                    },
                    "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "enrollment_type": "CLAIMS",
                    "last_updated_at": "2023-01-01T00:00:00Z",
                    "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "payer_id": "string",
                    "payer_name": "string",
                    "priority": "HIGH_PRIORITY",
                    "provider_npi": "string",
                    "source": {
                      "cpid": "string",
                      "date_completed": "string",
                      "date_mailed": "string",
                      "date_received": "string",
                      "doc_handle": "string",
                      "doc_type": "Claim Status",
                      "follow_up_date": "string",
                      "idm_username": "string",
                      "notes": "string",
                      "npi_number": "string",
                      "payer_id": "string",
                      "payer_name": "string",
                      "provider": "string",
                      "provider_num": "string",
                      "provider_status": "string",
                      "reference_id": "string",
                      "sap_id": "string",
                      "status": "AUTHORIZED",
                      "submitter_id": "string",
                      "tax_id": "string",
                      "type": "change_healthcare",
                    },
                    "status": "SUBMITTED",
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "assignee": {
                        "auth0_id": "string",
                        "type": "individual_assignee",
                      },
                      "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "enrollment_type": "CLAIMS",
                      "last_updated_at": "2023-01-01T00:00:00Z",
                      "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "payer_id": "string",
                      "payer_name": "string",
                      "priority": "HIGH_PRIORITY",
                      "provider_npi": "string",
                      "source": {
                        "cpid": "string",
                        "date_completed": "string",
                        "date_mailed": "string",
                        "date_received": "string",
                        "doc_handle": "string",
                        "doc_type": "Claim Status",
                        "follow_up_date": "string",
                        "idm_username": "string",
                        "notes": "string",
                        "npi_number": "string",
                        "payer_id": "string",
                        "payer_name": "string",
                        "provider": "string",
                        "provider_num": "string",
                        "provider_status": "string",
                        "reference_id": "string",
                        "sap_id": "string",
                        "status": "AUTHORIZED",
                        "submitter_id": "string",
                        "tax_id": "string",
                        "type": "change_healthcare",
                      },
                      "status": "SUBMITTED",
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get_multi",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Multi",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/enrollments/v2",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "key": "statuses",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_enrollments:EnrollmentStatus",
                },
                "type": "optional",
              },
            },
            {
              "key": "enrollment_types",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_enrollments:EnrollmentType",
                },
                "type": "optional",
              },
            },
            {
              "key": "payer_search_term",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "provider_npi",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_enrollments:ProviderNpi",
                },
                "type": "optional",
              },
            },
            {
              "key": "include_hidden",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "organization_provider_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_organization-providers/v2:OrganizationProviderId",
                },
                "type": "optional",
              },
            },
            {
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "priority",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_enrollments:EnrollmentPriority",
                },
                "type": "optional",
              },
            },
            {
              "key": "assignee_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_enrollments:AssigneeId",
                },
                "type": "optional",
              },
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_enrollments:EnrollmentPage",
              },
            },
          },
          "urlSlug": "get-multi",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/enrollments/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "delete",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/enrollments/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "enrollment_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "enrollment_id",
                "type": {
                  "type": "id",
                  "value": "type_enrollments:EnrollmentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/enrollments/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "assignee": {
                  "auth0_id": "string",
                  "type": "individual_assignee",
                },
                "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "enrollment_type": "CLAIMS",
                "last_updated_at": "2023-01-01T00:00:00Z",
                "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "payer_id": "string",
                "payer_name": "string",
                "priority": "HIGH_PRIORITY",
                "provider_npi": "string",
                "source": {
                  "cpid": "string",
                  "date_completed": "string",
                  "date_mailed": "string",
                  "date_received": "string",
                  "doc_handle": "string",
                  "doc_type": "Claim Status",
                  "follow_up_date": "string",
                  "idm_username": "string",
                  "notes": "string",
                  "npi_number": "string",
                  "payer_id": "string",
                  "payer_name": "string",
                  "provider": "string",
                  "provider_num": "string",
                  "provider_status": "string",
                  "reference_id": "string",
                  "sap_id": "string",
                  "status": "AUTHORIZED",
                  "submitter_id": "string",
                  "tax_id": "string",
                  "type": "change_healthcare",
                },
                "status": "SUBMITTED",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "assignee": {
                    "auth0_id": "string",
                    "type": "individual_assignee",
                  },
                  "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "enrollment_type": "CLAIMS",
                  "last_updated_at": "2023-01-01T00:00:00Z",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "payer_id": "string",
                  "payer_name": "string",
                  "priority": "HIGH_PRIORITY",
                  "provider_npi": "string",
                  "source": {
                    "cpid": "string",
                    "date_completed": "string",
                    "date_mailed": "string",
                    "date_received": "string",
                    "doc_handle": "string",
                    "doc_type": "Claim Status",
                    "follow_up_date": "string",
                    "idm_username": "string",
                    "notes": "string",
                    "npi_number": "string",
                    "payer_id": "string",
                    "payer_name": "string",
                    "provider": "string",
                    "provider_num": "string",
                    "provider_status": "string",
                    "reference_id": "string",
                    "sap_id": "string",
                    "status": "AUTHORIZED",
                    "submitter_id": "string",
                    "tax_id": "string",
                    "type": "change_healthcare",
                  },
                  "status": "SUBMITTED",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/enrollments/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "enrollment_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "enrollment_id",
                "type": {
                  "type": "id",
                  "value": "type_enrollments:EnrollmentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_enrollments:EnrollmentStatus",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "priority",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_enrollments:EnrollmentPriority",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "assignee",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_enrollments:RemovableAssignee",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "is_hidden",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                      },
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_enrollments:Enrollment",
              },
            },
          },
          "urlSlug": "update",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/enrollments/v2",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "enrollment_type": "CLAIMS",
                "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "priority": "HIGH_PRIORITY",
                "provider_npi": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "enrollment_type": "CLAIMS",
                  "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "priority": "HIGH_PRIORITY",
                  "provider_npi": "string",
                },
              },
              "responseBody": {
                "assignee": {
                  "auth0_id": "string",
                  "type": "individual_assignee",
                },
                "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "enrollment_type": "CLAIMS",
                "last_updated_at": "2023-01-01T00:00:00Z",
                "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "payer_id": "string",
                "payer_name": "string",
                "priority": "HIGH_PRIORITY",
                "provider_npi": "string",
                "source": {
                  "cpid": "string",
                  "date_completed": "string",
                  "date_mailed": "string",
                  "date_received": "string",
                  "doc_handle": "string",
                  "doc_type": "Claim Status",
                  "follow_up_date": "string",
                  "idm_username": "string",
                  "notes": "string",
                  "npi_number": "string",
                  "payer_id": "string",
                  "payer_name": "string",
                  "provider": "string",
                  "provider_num": "string",
                  "provider_status": "string",
                  "reference_id": "string",
                  "sap_id": "string",
                  "status": "AUTHORIZED",
                  "submitter_id": "string",
                  "tax_id": "string",
                  "type": "change_healthcare",
                },
                "status": "SUBMITTED",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "assignee": {
                    "auth0_id": "string",
                    "type": "individual_assignee",
                  },
                  "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "enrollment_type": "CLAIMS",
                  "last_updated_at": "2023-01-01T00:00:00Z",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "payer_id": "string",
                  "payer_name": "string",
                  "priority": "HIGH_PRIORITY",
                  "provider_npi": "string",
                  "source": {
                    "cpid": "string",
                    "date_completed": "string",
                    "date_mailed": "string",
                    "date_received": "string",
                    "doc_handle": "string",
                    "doc_type": "Claim Status",
                    "follow_up_date": "string",
                    "idm_username": "string",
                    "notes": "string",
                    "npi_number": "string",
                    "payer_id": "string",
                    "payer_name": "string",
                    "provider": "string",
                    "provider_num": "string",
                    "provider_status": "string",
                    "reference_id": "string",
                    "sap_id": "string",
                    "status": "AUTHORIZED",
                    "submitter_id": "string",
                    "tax_id": "string",
                    "type": "change_healthcare",
                  },
                  "status": "SUBMITTED",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/enrollments/v2",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "enrollment_type": "CLAIMS",
                "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "priority": "HIGH_PRIORITY",
                "provider_npi": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "enrollment_type": "CLAIMS",
                  "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "priority": "HIGH_PRIORITY",
                  "provider_npi": "string",
                },
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/enrollments/v2",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "payer_uuid",
                  "valueType": {
                    "type": "id",
                    "value": "type_payers:PayerUuid",
                  },
                },
                {
                  "key": "provider_npi",
                  "valueType": {
                    "type": "id",
                    "value": "type_enrollments:ProviderNpi",
                  },
                },
                {
                  "key": "enrollment_type",
                  "valueType": {
                    "type": "id",
                    "value": "type_enrollments:EnrollmentType",
                  },
                },
                {
                  "key": "priority",
                  "valueType": {
                    "type": "id",
                    "value": "type_enrollments:EnrollmentPriority",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_enrollments:Enrollment",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/enrollments/v2/change-import/latest-import-datetime",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "import_datetime": "2023-01-01T00:00:00Z",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "import_datetime": "2023-01-01T00:00:00Z",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get_latest_change_enrollment_import_datetime",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Latest Change Enrollment Import Datetime",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/enrollments/v2",
              },
              {
                "type": "literal",
                "value": "/change-import/latest-import-datetime",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_enrollments:LatestImportDatetimeResponse",
              },
            },
          },
          "urlSlug": "get-latest-change-enrollment-import-datetime",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/enrollments/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/attachments/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "attachment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "signed_download_url": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "signed_download_url": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "download_attachment",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Download Attachment",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/enrollments/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "enrollment_id",
              },
              {
                "type": "literal",
                "value": "/attachments/",
              },
              {
                "type": "pathParameter",
                "value": "attachment_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "enrollment_id",
                "type": {
                  "type": "id",
                  "value": "type_enrollments:EnrollmentId",
                },
              },
              {
                "key": "attachment_id",
                "type": {
                  "type": "id",
                  "value": "type_enrollments:EnrollmentAttachmentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_enrollments:EnrollmentAttachmentResponse",
              },
            },
          },
          "urlSlug": "download-attachment",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/enrollments/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/attachments",
              "pathParameters": {
                "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": [
                {
                  "attachment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "file_name": "string",
                  "storage_uri": "string",
                },
              ],
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "attachment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "file_name": "string",
                    "storage_uri": "string",
                  },
                ],
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "list_attachments",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "List Attachments",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/enrollments/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "enrollment_id",
              },
              {
                "type": "literal",
                "value": "/attachments",
              },
            ],
            "pathParameters": [
              {
                "key": "enrollment_id",
                "type": {
                  "type": "id",
                  "value": "type_enrollments:EnrollmentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "itemType": {
                  "type": "id",
                  "value": "type_enrollments:EnrollmentAttachment",
                },
                "type": "list",
              },
            },
          },
          "urlSlug": "list-attachments",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/enrollments/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/attachments",
              "pathParameters": {
                "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "responseBodyV3": {
                "type": "json",
                "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "upload_attachment",
          "method": "PUT",
          "migratedFromUrlSlugs": undefined,
          "name": "Upload Attachment",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/enrollments/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "enrollment_id",
              },
              {
                "type": "literal",
                "value": "/attachments",
              },
            ],
            "pathParameters": [
              {
                "key": "enrollment_id",
                "type": {
                  "type": "id",
                  "value": "type_enrollments:EnrollmentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_enrollments:EnrollmentAttachmentId",
              },
            },
          },
          "urlSlug": "upload-attachment",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/enrollments/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/attachments/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "attachment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "enrollment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "delete_attachment",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete Attachment",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/enrollments/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "enrollment_id",
              },
              {
                "type": "literal",
                "value": "/attachments/",
              },
              {
                "type": "pathParameter",
                "value": "attachment_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "enrollment_id",
                "type": {
                  "type": "id",
                  "value": "type_enrollments:EnrollmentId",
                },
              },
              {
                "key": "attachment_id",
                "type": {
                  "type": "id",
                  "value": "type_enrollments:EnrollmentAttachmentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete-attachment",
        },
      ],
      "name": "enrollments",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_enrollments",
      "subpackages": [],
      "types": [
        "type_enrollments:EnrollmentId",
        "type_enrollments:EnrollmentAttachmentId",
        "type_enrollments:EnrollmentAttachmentResponse",
        "type_enrollments:EnrollmentAttachmentBase",
        "type_enrollments:EnrollmentAttachment",
        "type_enrollments:EnrollmentAttachmentCreate",
        "type_enrollments:EnrollmentStatus",
        "type_enrollments:IndividualAssignee",
        "type_enrollments:OrganizationAssignee",
        "type_enrollments:AssigneeId",
        "type_enrollments:Assignee",
        "type_enrollments:EnrollmentType",
        "type_enrollments:ProviderNpi",
        "type_enrollments:ChangeEnrollmentStatus",
        "type_enrollments:ChangeEnrollmentDocType",
        "type_enrollments:EnrollmentPriority",
        "type_enrollments:ChangeEnrollmentBase",
        "type_enrollments:EnrollmentSource",
        "type_enrollments:RemovableAssignee",
        "type_enrollments:Enrollment",
        "type_enrollments:LatestImportDatetimeResponse",
        "type_enrollments:EnrollmentFilters",
        "type_enrollments:EnrollmentPage",
      ],
      "urlSlug": "enrollments",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_era": {
      "description": undefined,
      "endpoints": [],
      "name": "era",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_era",
      "subpackages": [],
      "types": [
        "type_era:EraId",
        "type_era:ERABase",
        "type_era:ERA",
      ],
      "urlSlug": "era",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_expected-network-status": {
      "description": undefined,
      "endpoints": [],
      "name": "expected-network-status",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_expected-network-status",
      "subpackages": [
        "subpackage_expected-network-status/v1",
      ],
      "types": [],
      "urlSlug": "expected-network-status",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_expected-network-status-tia": {
      "description": undefined,
      "endpoints": [],
      "name": "expected-network-status-tia",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_expected-network-status-tia",
      "subpackages": [
        "subpackage_expected-network-status-tia/v1",
      ],
      "types": [],
      "urlSlug": "expected-network-status-tia",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_expected-network-status-tia/v1": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/expected-network-status-tia/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "contracted_state": "AA",
                "date_of_service": "2023-01-01",
                "market": "san_francisco",
                "rendering_provider_npi": "string",
                "service_facility_state": "AA",
                "service_facility_zip_code": "string",
                "subscriber_member_id": "string",
                "subscriber_payer_id": "string",
                "subscriber_payer_name": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "contracted_state": "AA",
                  "date_of_service": "2023-01-01",
                  "market": "san_francisco",
                  "rendering_provider_npi": "string",
                  "service_facility_state": "AA",
                  "service_facility_zip_code": "string",
                  "subscriber_member_id": "string",
                  "subscriber_payer_id": "string",
                  "subscriber_payer_name": "string",
                },
              },
              "responseBody": {
                "contract_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "expected_network_status": "in_network",
                "explanation": "string",
                "routed_billing_provider_npi": "string",
                "routed_billing_provider_tin": "string",
                "routed_payer_id": "string",
                "routed_payer_name": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "contract_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "expected_network_status": "in_network",
                  "explanation": "string",
                  "routed_billing_provider_npi": "string",
                  "routed_billing_provider_tin": "string",
                  "routed_payer_id": "string",
                  "routed_payer_name": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/expected-network-status-tia/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "contracted_state": "AA",
                "date_of_service": "2023-01-01",
                "market": "san_francisco",
                "rendering_provider_npi": "string",
                "service_facility_state": "AA",
                "service_facility_zip_code": "string",
                "subscriber_member_id": "string",
                "subscriber_payer_id": "string",
                "subscriber_payer_name": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "contracted_state": "AA",
                  "date_of_service": "2023-01-01",
                  "market": "san_francisco",
                  "rendering_provider_npi": "string",
                  "service_facility_state": "AA",
                  "service_facility_zip_code": "string",
                  "subscriber_member_id": "string",
                  "subscriber_payer_id": "string",
                  "subscriber_payer_name": "string",
                },
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/expected-network-status-tia/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "contracted_state": "AA",
                "date_of_service": "2023-01-01",
                "market": "san_francisco",
                "rendering_provider_npi": "string",
                "service_facility_state": "AA",
                "service_facility_zip_code": "string",
                "subscriber_member_id": "string",
                "subscriber_payer_id": "string",
                "subscriber_payer_name": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "contracted_state": "AA",
                  "date_of_service": "2023-01-01",
                  "market": "san_francisco",
                  "rendering_provider_npi": "string",
                  "service_facility_state": "AA",
                  "service_facility_zip_code": "string",
                  "subscriber_member_id": "string",
                  "subscriber_payer_id": "string",
                  "subscriber_payer_name": "string",
                },
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "compute",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Compute",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/expected-network-status-tia/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "external_patient_id",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "subscriber_payer_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "key": "subscriber_payer_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "key": "subscriber_insurance_type",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:InsuranceTypeCode",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "subscriber_plan_name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "subscriber_member_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "key": "rendering_provider_npi",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:Npi",
                  },
                },
                {
                  "key": "contracted_state",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:State",
                  },
                },
                {
                  "key": "date_of_service",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date",
                    },
                  },
                },
                {
                  "key": "market",
                  "valueType": {
                    "type": "id",
                    "value": "type_expected-network-status-tia/v1:Market",
                  },
                },
                {
                  "key": "service_facility_zip_code",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "key": "service_facility_state",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:State",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_expected-network-status-tia/v1:TiaExpectedNetworkStatusResponse",
              },
            },
          },
          "urlSlug": "compute",
        },
      ],
      "name": "v1",
      "parent": "subpackage_expected-network-status-tia",
      "pointsTo": undefined,
      "subpackageId": "subpackage_expected-network-status-tia/v1",
      "subpackages": [],
      "types": [
        "type_expected-network-status-tia/v1:Market",
        "type_expected-network-status-tia/v1:TiaExpectedNetworkStatusResponse",
      ],
      "urlSlug": "v-1",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_expected-network-status/v1": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/expected-network-status/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "billing_provider_npi": "string",
                "billing_provider_tin": "string",
                "contracted_state": "AA",
                "date_of_service": "string",
                "rendering_provider_npi": "string",
                "subscriber_payer_id": "string",
                "subscriber_payer_name": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "billing_provider_npi": "string",
                  "billing_provider_tin": "string",
                  "contracted_state": "AA",
                  "date_of_service": "string",
                  "rendering_provider_npi": "string",
                  "subscriber_payer_id": "string",
                  "subscriber_payer_name": "string",
                },
              },
              "responseBody": {
                "contract_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "expected_network_status": "in_network",
                "explanation": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "contract_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "expected_network_status": "in_network",
                  "explanation": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "compute",
          "method": "POST",
          "migratedFromUrlSlugs": [
            "compute-network-status",
          ],
          "name": "Compute network status",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/expected-network-status/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "external_patient_id",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "subscriber_payer_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "key": "subscriber_payer_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "key": "subscriber_insurance_type",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:InsuranceTypeCode",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "subscriber_plan_name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "billing_provider_npi",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "key": "billing_provider_tin",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "key": "rendering_provider_npi",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "key": "contracted_state",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:State",
                  },
                },
                {
                  "key": "date_of_service",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:Date",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_expected-network-status/v1:ExpectedNetworkStatusResponse",
              },
            },
          },
          "urlSlug": "compute",
        },
      ],
      "name": "v1",
      "parent": "subpackage_expected-network-status",
      "pointsTo": undefined,
      "subpackageId": "subpackage_expected-network-status/v1",
      "subpackages": [],
      "types": [
        "type_expected-network-status/v1:ExpectedNetworkStatus",
        "type_expected-network-status/v1:ExpectedNetworkStatusResponse",
      ],
      "urlSlug": "v-1",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_exports": {
      "description": undefined,
      "endpoints": [],
      "name": "exports",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_exports",
      "subpackages": [
        "subpackage_exports/v3",
      ],
      "types": [],
      "urlSlug": "exports",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_exports/v3": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:RequestValidationError",
                },
                "type": "list",
              },
            },
            {
              "statusCode": 503,
              "type": {
                "type": "id",
                "value": "type_commons:ErrorMessage",
              },
            },
            {
              "statusCode": 503,
              "type": {
                "type": "id",
                "value": "type_commons:ErrorMessage",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:ErrorMessage",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:ErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Http Request Validations Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "HttpRequestValidationsError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:RequestValidationError",
                      },
                      "type": "list",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Export Files Unavailable Error",
              "statusCode": 503,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "ExportFilesUnavailableError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:ErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Missing Daily Incremental Export File Error",
              "statusCode": 503,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "MissingDailyIncrementalExportFileError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:ErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Export Not Yet Available Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "ExportNotYetAvailableError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:ErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Export Date Too Early Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "ExportDateTooEarlyError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:ErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/exports/v3",
              "pathParameters": {},
              "queryParameters": {
                "end_date": "2023-01-01",
                "start_date": "2023-01-01",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "authenticated_download_url": "string",
                "authenticated_download_url_expiration": "2023-01-01T00:00:00Z",
                "created_at": "2023-01-01T00:00:00Z",
                "name": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "authenticated_download_url": "string",
                  "authenticated_download_url_expiration": "2023-01-01T00:00:00Z",
                  "created_at": "2023-01-01T00:00:00Z",
                  "name": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/exports/v3",
              "pathParameters": {},
              "queryParameters": {
                "end_date": "2023-01-01",
                "start_date": "2023-01-01",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": [
                  {
                    "fieldName": "string",
                    "humanReadableMessage": "string",
                  },
                ],
                "errorName": "HttpRequestValidationsError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": [
                    {
                      "fieldName": "string",
                      "humanReadableMessage": "string",
                    },
                  ],
                  "errorName": "HttpRequestValidationsError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/exports/v3",
              "pathParameters": {},
              "queryParameters": {
                "end_date": "2023-01-01",
                "start_date": "2023-01-01",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": "string",
                "errorName": "ExportFilesUnavailableError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": "string",
                  "errorName": "ExportFilesUnavailableError",
                },
              },
              "responseStatusCode": 503,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/exports/v3",
              "pathParameters": {},
              "queryParameters": {
                "end_date": "2023-01-01",
                "start_date": "2023-01-01",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": "string",
                "errorName": "MissingDailyIncrementalExportFileError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": "string",
                  "errorName": "MissingDailyIncrementalExportFileError",
                },
              },
              "responseStatusCode": 503,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/exports/v3",
              "pathParameters": {},
              "queryParameters": {
                "end_date": "2023-01-01",
                "start_date": "2023-01-01",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": "string",
                "errorName": "ExportNotYetAvailableError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": "string",
                  "errorName": "ExportNotYetAvailableError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/exports/v3",
              "pathParameters": {},
              "queryParameters": {
                "end_date": "2023-01-01",
                "start_date": "2023-01-01",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": "string",
                "errorName": "ExportDateTooEarlyError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": "string",
                  "errorName": "ExportDateTooEarlyError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "get_exports",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Exports",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/exports/v3",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "Beginning date of claim versions returned in the export, ISO 8601 date e.g. 2019-08-24.
Must be at least 1 calendar day in the past. Cannot be earlier than 2022-10-07.
",
              "key": "start_date",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "date",
                },
              },
            },
            {
              "description": "Ending date of claim versions returned in the export, ISO 8601 date; e.g. 2019-08-24.
Must be within 30 days of start_date.
",
              "key": "end_date",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "date",
                },
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_exports/v3:GetExportsResponse",
              },
            },
          },
          "urlSlug": "get-exports",
        },
      ],
      "name": "v3",
      "parent": "subpackage_exports",
      "pointsTo": undefined,
      "subpackageId": "subpackage_exports/v3",
      "subpackages": [],
      "types": [
        "type_exports/v3:GetExportsResponse",
      ],
      "urlSlug": "v-3",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_fee-schedules": {
      "description": undefined,
      "endpoints": [],
      "name": "fee-schedules",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_fee-schedules",
      "subpackages": [
        "subpackage_fee-schedules/v1",
        "subpackage_fee-schedules/v2",
      ],
      "types": [],
      "urlSlug": "fee-schedules",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_fee-schedules/v1": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/fee-schedules/v1",
              "pathParameters": {},
              "queryParameters": {
                "limit": undefined,
                "modifiers": undefined,
                "network_types": undefined,
                "page_token": undefined,
                "payer_uuids": undefined,
                "procedure_code_search_term": "string",
                "procedure_codes": "string",
                "sort_field": undefined,
                "sort_order": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "allowed_amount_cents": 0,
                    "fee_schedule_entry_config_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "modifier": {
                      "type": "modifier",
                      "value": "string",
                    },
                    "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "payer": {
                      "payer_id": "string",
                      "payer_name": "string",
                      "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    },
                    "payer_plan": "string",
                    "procedure_code": "string",
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "allowed_amount_cents": 0,
                      "fee_schedule_entry_config_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "modifier": {
                        "type": "modifier",
                        "value": "string",
                      },
                      "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "payer": {
                        "payer_id": "string",
                        "payer_name": "string",
                        "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      },
                      "payer_plan": "string",
                      "procedure_code": "string",
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/fee-schedules/v1",
              "pathParameters": {},
              "queryParameters": {
                "limit": undefined,
                "modifiers": undefined,
                "network_types": undefined,
                "page_token": undefined,
                "payer_uuids": undefined,
                "procedure_code_search_term": "string",
                "procedure_codes": "string",
                "sort_field": undefined,
                "sort_order": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/fee-schedules/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "key": "procedure_code_search_term",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "procedure_codes",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "modifiers",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "payer_uuids",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_payers:PayerUuid",
                },
                "type": "optional",
              },
            },
            {
              "key": "network_types",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_fee-schedules/v1:NetworkType",
                },
                "type": "optional",
              },
            },
            {
              "key": "sort_order",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:SortDirection",
                },
                "type": "optional",
              },
            },
            {
              "key": "sort_field",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_fee-schedules/v1:FeeScheduleConfigSortFields",
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to 100. The value must be greater than 0 and less than 1000.",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_fee-schedules/v1:FeeScheduleEntryConfigPage",
              },
            },
          },
          "urlSlug": "get",
        },
      ],
      "name": "v1",
      "parent": "subpackage_fee-schedules",
      "pointsTo": undefined,
      "subpackageId": "subpackage_fee-schedules/v1",
      "subpackages": [],
      "types": [
        "type_fee-schedules/v1:FeeScheduleEntryConfigId",
        "type_fee-schedules/v1:FacilityType",
        "type_fee-schedules/v1:Modifier",
        "type_fee-schedules/v1:FeeScheduleConfigModifier",
        "type_fee-schedules/v1:NetworkType",
        "type_fee-schedules/v1:FeeScheduleEntryConfigBase",
        "type_fee-schedules/v1:FeeScheduleEntryConfig",
        "type_fee-schedules/v1:FeeScheduleConfigSortFields",
        "type_fee-schedules/v1:FeeScheduleConfigFilters",
        "type_fee-schedules/v1:FeeScheduleEntryConfigPage",
      ],
      "urlSlug": "v-1",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_fee-schedules/v2": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Gets which fee schedule configuration mechanism the current organization is using.",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/fee-schedules/v2/fee-schedule-configuration-mechanism",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "mechanism": "legacy",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "mechanism": "legacy",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get_fee_schedule_configuration_mechanism",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Fee Schedule Configuration Mechanism",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/fee-schedules/v2",
              },
              {
                "type": "literal",
                "value": "/fee-schedule-configuration-mechanism",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_fee-schedules/v2:GetFeeScheduleConfigurationMechanismResponse",
              },
            },
          },
          "urlSlug": "get-fee-schedule-configuration-mechanism",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Gets bound fee schedules for a given payer grouped by billing provider NPI.
This is intended for Candid App usage, different from a get_multi endpoint that
doesn't data wrangle the modeling into the presentation shape.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:RequestValidationError",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Http Request Validation Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "HttpRequestValidationError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:RequestValidationError",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/fee-schedules/v2/grouped",
              "pathParameters": {},
              "queryParameters": {
                "geographies": "AA",
                "license_types": "MD",
                "limit": undefined,
                "networks": undefined,
                "page_token": undefined,
                "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "page": {
                  "items": [
                    {
                      "billing_npi": "string",
                      "bound_fee_schedules": [
                        {
                          "bound_fee_schedule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "effective_date_range": {
                            "end_date": "string",
                            "start_date": "string",
                          },
                          "fee_schedule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "geography_coverage": {
                            "type": "all",
                          },
                          "license_type_coverage": {
                            "type": "all",
                          },
                          "network_coverage": {
                            "type": "all",
                          },
                          "place_of_service_coverage": {
                            "type": "all",
                          },
                          "reference_fee_schedule": {
                            "percentage": 0,
                            "reference_name": "string",
                          },
                        },
                      ],
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "page": {
                    "items": [
                      {
                        "billing_npi": "string",
                        "bound_fee_schedules": [
                          {
                            "bound_fee_schedule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            "effective_date_range": {
                              "end_date": "string",
                              "start_date": "string",
                            },
                            "fee_schedule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            "geography_coverage": {
                              "type": "all",
                            },
                            "license_type_coverage": {
                              "type": "all",
                            },
                            "network_coverage": {
                              "type": "all",
                            },
                            "place_of_service_coverage": {
                              "type": "all",
                            },
                            "reference_fee_schedule": {
                              "percentage": 0,
                              "reference_name": "string",
                            },
                          },
                        ],
                      },
                    ],
                    "next_page_token": "string",
                    "prev_page_token": "string",
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/fee-schedules/v2/grouped",
              "pathParameters": {},
              "queryParameters": {
                "geographies": "AA",
                "license_types": "MD",
                "limit": undefined,
                "networks": undefined,
                "page_token": undefined,
                "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "fieldName": "string",
                  "humanReadableMessage": "string",
                },
                "errorName": "HttpRequestValidationError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "fieldName": "string",
                    "humanReadableMessage": "string",
                  },
                  "errorName": "HttpRequestValidationError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "get_grouped_fee_schedules_for_payer",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Grouped Fee Schedules For Payer",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/fee-schedules/v2",
              },
              {
                "type": "literal",
                "value": "/grouped",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "The payer",
              "key": "payer_uuid",
              "type": {
                "type": "id",
                "value": "type_payers:PayerUuid",
              },
            },
            {
              "key": "license_types",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_organization-providers/v2:LicenseType",
                },
                "type": "optional",
              },
            },
            {
              "key": "geographies",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:State",
                },
                "type": "optional",
              },
            },
            {
              "key": "networks",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_fee-schedules/v2:Network",
                },
                "type": "optional",
              },
            },
            {
              "description": "Limit the number of results returned. Defaults to 100.",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "The page token to continue paging through a previous request",
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_fee-schedules/v2:GetGroupedFeeSchedulesForPayerResponse",
              },
            },
          },
          "urlSlug": "get-grouped-fee-schedules-for-payer",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Get the unpaginated fee schedule entries for a provided bound fee schedule.",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/fee-schedules/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "bound_fee_schedule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "fee_schedule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "bound_fee_schedule": {
                  "bound_fee_schedule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "effective_date_range": {
                    "end_date": "string",
                    "start_date": "string",
                  },
                  "fee_schedule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "geography_coverage": {
                    "type": "all",
                  },
                  "license_type_coverage": {
                    "type": "all",
                  },
                  "network_coverage": {
                    "type": "all",
                  },
                  "place_of_service_coverage": {
                    "type": "all",
                  },
                  "reference_fee_schedule": {
                    "percentage": 0,
                    "reference_name": "string",
                  },
                },
                "entries": [
                  {
                    "contracted_rate_cents": 0,
                    "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "modifier": "string",
                    "procedure_code": "string",
                  },
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "bound_fee_schedule": {
                    "bound_fee_schedule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "effective_date_range": {
                      "end_date": "string",
                      "start_date": "string",
                    },
                    "fee_schedule_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "geography_coverage": {
                      "type": "all",
                    },
                    "license_type_coverage": {
                      "type": "all",
                    },
                    "network_coverage": {
                      "type": "all",
                    },
                    "place_of_service_coverage": {
                      "type": "all",
                    },
                    "reference_fee_schedule": {
                      "percentage": 0,
                      "reference_name": "string",
                    },
                  },
                  "entries": [
                    {
                      "contracted_rate_cents": 0,
                      "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "modifier": "string",
                      "procedure_code": "string",
                    },
                  ],
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get_bound_fee_schedule",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Bound Fee Schedule",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/fee-schedules/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "fee_schedule_id",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "bound_fee_schedule_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "fee_schedule_id",
                "type": {
                  "type": "id",
                  "value": "type_fee-schedules/v2:FeeScheduleId",
                },
              },
              {
                "key": "bound_fee_schedule_id",
                "type": {
                  "type": "id",
                  "value": "type_fee-schedules/v2:BoundFeeScheduleId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_fee-schedules/v2:GetBoundFeeScheduleResponse",
              },
            },
          },
          "urlSlug": "get-bound-fee-schedule",
        },
      ],
      "name": "v2",
      "parent": "subpackage_fee-schedules",
      "pointsTo": undefined,
      "subpackageId": "subpackage_fee-schedules/v2",
      "subpackages": [],
      "types": [
        "type_fee-schedules/v2:FeeScheduleId",
        "type_fee-schedules/v2:BoundFeeScheduleId",
        "type_fee-schedules/v2:FeeScheduleEntryId",
        "type_fee-schedules/v2:Network",
        "type_fee-schedules/v2:PlaceOfServiceCategory",
        "type_fee-schedules/v2:FeeScheduleGeography",
        "type_fee-schedules/v2:LicenseTypeCoverage",
        "type_fee-schedules/v2:NetworkCoverage",
        "type_fee-schedules/v2:GeographyCoverage",
        "type_fee-schedules/v2:PlaceOfServiceCoverage",
        "type_fee-schedules/v2:FeeScheduleConfigurationMechanism",
        "type_fee-schedules/v2:GetFeeScheduleConfigurationMechanismResponse",
        "type_fee-schedules/v2:ReferenceFeeScheduleMetadata",
        "type_fee-schedules/v2:BoundFeeSchedule",
        "type_fee-schedules/v2:GroupedFeeSchedules",
        "type_fee-schedules/v2:GetGroupedFeeSchedulesForPayerPage",
        "type_fee-schedules/v2:GetGroupedFeeSchedulesForPayerResponse",
        "type_fee-schedules/v2:FeeScheduleEntry",
        "type_fee-schedules/v2:GetBoundFeeScheduleResponse",
      ],
      "urlSlug": "v-2",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_guarantor": {
      "description": undefined,
      "endpoints": [],
      "name": "guarantor",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_guarantor",
      "subpackages": [
        "subpackage_guarantor/v1",
      ],
      "types": [],
      "urlSlug": "guarantor",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_guarantor/v1": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 409,
              "type": {
                "type": "id",
                "value": "type_guarantor/v1:EncounterHasExistingGuarantorErrorType",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Encounter Has Existing Guarantor Error",
              "statusCode": 409,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EncounterHasExistingGuarantorError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_guarantor/v1:EncounterHasExistingGuarantorErrorType",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/guarantors/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {
                "external_id": "string",
                "first_name": "string",
                "last_name": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "external_id": "string",
                  "first_name": "string",
                  "last_name": "string",
                },
              },
              "responseBody": {
                "address": {
                  "address1": "string",
                  "address2": "string",
                  "city": "string",
                  "state": "AA",
                  "zip_code": "string",
                  "zip_plus_four_code": "string",
                },
                "date_of_birth": "2023-01-01",
                "email": "string",
                "email_consent": true,
                "external_id": "string",
                "first_name": "string",
                "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "last_name": "string",
                "phone_consent": true,
                "phone_numbers": [
                  {
                    "number": "string",
                    "type": "Home",
                  },
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "2023-01-01",
                  "email": "string",
                  "email_consent": true,
                  "external_id": "string",
                  "first_name": "string",
                  "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "last_name": "string",
                  "phone_consent": true,
                  "phone_numbers": [
                    {
                      "number": "string",
                      "type": "Home",
                    },
                  ],
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/guarantors/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {
                "external_id": "string",
                "first_name": "string",
                "last_name": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "external_id": "string",
                  "first_name": "string",
                  "last_name": "string",
                },
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "EncounterHasExistingGuarantorError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "EncounterHasExistingGuarantorError",
                },
              },
              "responseStatusCode": 409,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/guarantors/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_guarantor/v1:GuarantorCreate",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_guarantor/v1:Guarantor",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/guarantors/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "address": {
                  "address1": "string",
                  "address2": "string",
                  "city": "string",
                  "state": "AA",
                  "zip_code": "string",
                  "zip_plus_four_code": "string",
                },
                "date_of_birth": "2023-01-01",
                "email": "string",
                "email_consent": true,
                "external_id": "string",
                "first_name": "string",
                "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "last_name": "string",
                "phone_consent": true,
                "phone_numbers": [
                  {
                    "number": "string",
                    "type": "Home",
                  },
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "2023-01-01",
                  "email": "string",
                  "email_consent": true,
                  "external_id": "string",
                  "first_name": "string",
                  "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "last_name": "string",
                  "phone_consent": true,
                  "phone_numbers": [
                    {
                      "number": "string",
                      "type": "Home",
                    },
                  ],
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/guarantors/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "guarantor_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "guarantor_id",
                "type": {
                  "type": "id",
                  "value": "type_guarantor/v1:GuarantorId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_guarantor/v1:Guarantor",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/guarantors/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "address": {
                  "address1": "string",
                  "address2": "string",
                  "city": "string",
                  "state": "AA",
                  "zip_code": "string",
                  "zip_plus_four_code": "string",
                },
                "date_of_birth": "2023-01-01",
                "email": "string",
                "email_consent": true,
                "external_id": "string",
                "first_name": "string",
                "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "last_name": "string",
                "phone_consent": true,
                "phone_numbers": [
                  {
                    "number": "string",
                    "type": "Home",
                  },
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "2023-01-01",
                  "email": "string",
                  "email_consent": true,
                  "external_id": "string",
                  "first_name": "string",
                  "guarantor_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "last_name": "string",
                  "phone_consent": true,
                  "phone_numbers": [
                    {
                      "number": "string",
                      "type": "Home",
                    },
                  ],
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/guarantors/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "guarantor_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "guarantor_id",
                "type": {
                  "type": "id",
                  "value": "type_guarantor/v1:GuarantorId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "first_name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "last_name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "external_id",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "date_of_birth",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "date",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "address",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:StreetAddressShortZip",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "phone_numbers",
                  "valueType": {
                    "itemType": {
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:PhoneNumber",
                      },
                      "type": "list",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "phone_consent",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "email",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Email",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "email_consent",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                      },
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_guarantor/v1:Guarantor",
              },
            },
          },
          "urlSlug": "update",
        },
      ],
      "name": "v1",
      "parent": "subpackage_guarantor",
      "pointsTo": undefined,
      "subpackageId": "subpackage_guarantor/v1",
      "subpackages": [],
      "types": [
        "type_guarantor/v1:GuarantorId",
        "type_guarantor/v1:GuarantorBase",
        "type_guarantor/v1:Guarantor",
        "type_guarantor/v1:GuarantorCreate",
        "type_guarantor/v1:EncounterHasExistingGuarantorErrorType",
      ],
      "urlSlug": "v-1",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_identifiers": {
      "description": undefined,
      "endpoints": [],
      "name": "identifiers",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_identifiers",
      "subpackages": [],
      "types": [
        "type_identifiers:IdentifierCode",
        "type_identifiers:IdentifierId",
        "type_identifiers:MedicareProviderIdentifier",
        "type_identifiers:MedicaidProviderIdentifier",
        "type_identifiers:IdentifierValue",
        "type_identifiers:IdentifierBase",
        "type_identifiers:Identifier",
        "type_identifiers:IdentifierCreate",
        "type_identifiers:IdentifierUpdate",
        "type_identifiers:UpdatableIdentifier",
      ],
      "urlSlug": "identifiers",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_individual": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/individuals/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "address": {
                  "address1": "string",
                  "address2": "string",
                  "city": "string",
                  "state": "AA",
                  "zip_code": "string",
                  "zip_plus_four_code": "string",
                },
                "date_of_birth": "string",
                "external_id": "string",
                "first_name": "string",
                "gender": "male",
                "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "last_name": "string",
                "patient_relationship_to_subscriber_code": "01",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "string",
                  "external_id": "string",
                  "first_name": "string",
                  "gender": "male",
                  "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "last_name": "string",
                  "patient_relationship_to_subscriber_code": "01",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/individuals/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "individual_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "individual_id",
                "type": {
                  "type": "id",
                  "value": "type_individual:IndividualId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "first_name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "last_name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "external_id",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "date_of_birth",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Date",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "gender",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_individual:Gender",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "patient_relationship_to_subscriber_code",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:PatientRelationshipToInsuredCodeAll",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "address",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:StreetAddressShortZip",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "phone_numbers",
                  "valueType": {
                    "itemType": {
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:PhoneNumber",
                      },
                      "type": "list",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "phone_consent",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "email",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Email",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "email_consent",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                      },
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_individual:Individual",
              },
            },
          },
          "urlSlug": "update",
        },
      ],
      "name": "individual",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_individual",
      "subpackages": [],
      "types": [
        "type_individual:IndividualId",
        "type_individual:IndividualBase",
        "type_individual:Individual",
        "type_individual:SubscriberBase",
        "type_individual:SubscriberCreate",
        "type_individual:Subscriber",
        "type_individual:PatientCreate",
        "type_individual:PatientBase",
        "type_individual:Patient",
        "type_individual:Gender",
      ],
      "urlSlug": "individual",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_insurance-adjustments": {
      "description": undefined,
      "endpoints": [],
      "name": "insurance-adjustments",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_insurance-adjustments",
      "subpackages": [
        "subpackage_insurance-adjustments/v1",
      ],
      "types": [],
      "urlSlug": "insurance-adjustments",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_insurance-adjustments/v1": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Validate an insurance adjustment before creating it. This endpoint also instructs the client on what the adjustment and other PR amounts should be.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentFieldsErrorsType",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Validate Insurance Adjustment Fields Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "ValidateInsuranceAdjustmentFieldsError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentFieldsErrorsType",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/insurance-adjustments/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/validate",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {
                "service_lines": {
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                    "carcs": [
                      {
                        "amount_cents": 0,
                        "group_code": "CO",
                        "reason_code": "1",
                      },
                    ],
                    "rarcs": [
                      {
                        "reason_code": "M1",
                      },
                    ],
                  },
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "service_lines": {
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                      "carcs": [
                        {
                          "amount_cents": 0,
                          "group_code": "CO",
                          "reason_code": "1",
                        },
                      ],
                      "rarcs": [
                        {
                          "reason_code": "M1",
                        },
                      ],
                    },
                  },
                },
              },
              "responseBody": {
                "service_lines": {
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                    "insurance_adjustment_cents": 0,
                    "other_patient_responsibility_cents": 0,
                  },
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "service_lines": {
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                      "insurance_adjustment_cents": 0,
                      "other_patient_responsibility_cents": 0,
                    },
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/insurance-adjustments/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/validate",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {
                "service_lines": {
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                    "carcs": [
                      {
                        "amount_cents": 0,
                        "group_code": "CO",
                        "reason_code": "1",
                      },
                    ],
                    "rarcs": [
                      {
                        "reason_code": "M1",
                      },
                    ],
                  },
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "service_lines": {
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                      "carcs": [
                        {
                          "amount_cents": 0,
                          "group_code": "CO",
                          "reason_code": "1",
                        },
                      ],
                      "rarcs": [
                        {
                          "reason_code": "M1",
                        },
                      ],
                    },
                  },
                },
              },
              "responseBody": {
                "content": {
                  "errors": {
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": [
                      {
                        "index": 0,
                        "property_error": {
                          "type": "group_code_error",
                          "value": {
                            "human_readable_description": "string",
                            "type": "other",
                          },
                        },
                        "type": "carc_error",
                      },
                    ],
                  },
                },
                "errorName": "ValidateInsuranceAdjustmentFieldsError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "errors": {
                      "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": [
                        {
                          "index": 0,
                          "property_error": {
                            "type": "group_code_error",
                            "value": {
                              "human_readable_description": "string",
                              "type": "other",
                            },
                          },
                          "type": "carc_error",
                        },
                      ],
                    },
                  },
                  "errorName": "ValidateInsuranceAdjustmentFieldsError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "validate_insurance_adjustment",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Validate Insurance Adjustment",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/insurance-adjustments/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "/validate",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentRequest",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentResponse",
              },
            },
          },
          "urlSlug": "validate-insurance-adjustment",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_insurance-adjustments/v1:CreateInsuranceAdjustmentFieldsErrorsType",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Create Insurance Adjustment Fields Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "CreateInsuranceAdjustmentFieldsError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_insurance-adjustments/v1:CreateInsuranceAdjustmentFieldsErrorsType",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/insurance-adjustments/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/create",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {
                "check_date": "2023-01-01",
                "payer_claim_number": "string",
                "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "service_lines": {
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                    "carcs": [
                      {
                        "amount_cents": 0,
                        "group_code": "CO",
                        "reason_code": "1",
                      },
                    ],
                    "rarcs": [
                      {
                        "reason_code": "M1",
                      },
                    ],
                  },
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "check_date": "2023-01-01",
                  "payer_claim_number": "string",
                  "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "service_lines": {
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                      "carcs": [
                        {
                          "amount_cents": 0,
                          "group_code": "CO",
                          "reason_code": "1",
                        },
                      ],
                      "rarcs": [
                        {
                          "reason_code": "M1",
                        },
                      ],
                    },
                  },
                },
              },
              "responseBody": {
                "adjustment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "adjustment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/insurance-adjustments/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/create",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {
                "check_date": "2023-01-01",
                "payer_claim_number": "string",
                "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "service_lines": {
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                    "carcs": [
                      {
                        "amount_cents": 0,
                        "group_code": "CO",
                        "reason_code": "1",
                      },
                    ],
                    "rarcs": [
                      {
                        "reason_code": "M1",
                      },
                    ],
                  },
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "check_date": "2023-01-01",
                  "payer_claim_number": "string",
                  "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "service_lines": {
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                      "carcs": [
                        {
                          "amount_cents": 0,
                          "group_code": "CO",
                          "reason_code": "1",
                        },
                      ],
                      "rarcs": [
                        {
                          "reason_code": "M1",
                        },
                      ],
                    },
                  },
                },
              },
              "responseBody": {
                "content": {
                  "errors": {
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": [
                      {
                        "type": "denial_reason_error",
                        "value": {
                          "type": "at_least_one_denial_carc_required",
                        },
                      },
                    ],
                  },
                },
                "errorName": "CreateInsuranceAdjustmentFieldsError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "errors": {
                      "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": [
                        {
                          "type": "denial_reason_error",
                          "value": {
                            "type": "at_least_one_denial_carc_required",
                          },
                        },
                      ],
                    },
                  },
                  "errorName": "CreateInsuranceAdjustmentFieldsError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "create_insurance_adjustment",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create Insurance Adjustment",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/insurance-adjustments/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "/create",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_insurance-adjustments/v1:CreateInsuranceAdjustmentRequest",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_insurance-adjustments/v1:CreateInsuranceAdjustmentResponse",
              },
            },
          },
          "urlSlug": "create-insurance-adjustment",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Upload an attachment to an insurance adjustment. This endpoint should remain internal only until Fern can support file uploads
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/insurance-adjustments/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/attachments/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "insurance_adjustment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "responseBodyV3": {
                "type": "json",
                "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/insurance-adjustments/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/attachments/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "insurance_adjustment_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
          ],
          "headers": [],
          "id": "upload_attachment",
          "method": "PUT",
          "migratedFromUrlSlugs": undefined,
          "name": "Upload Attachment",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/insurance-adjustments/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "/attachments/",
              },
              {
                "type": "pathParameter",
                "value": "insurance_adjustment_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
              {
                "key": "insurance_adjustment_id",
                "type": {
                  "type": "id",
                  "value": "type_insurance-adjustments/v1:InsuranceAdjustmentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_insurance-adjustments/v1:InsuranceAdjustmentAttachmentId",
              },
            },
          },
          "urlSlug": "upload-attachment",
        },
      ],
      "name": "v1",
      "parent": "subpackage_insurance-adjustments",
      "pointsTo": undefined,
      "subpackageId": "subpackage_insurance-adjustments/v1",
      "subpackages": [],
      "types": [
        "type_insurance-adjustments/v1:InsuranceAdjustmentId",
        "type_insurance-adjustments/v1:ClaimAdjustmentReasonCode",
        "type_insurance-adjustments/v1:RemittanceAdviceRemarkCode",
        "type_insurance-adjustments/v1:InsuranceAdjustmentAttachmentId",
        "type_insurance-adjustments/v1:InsuranceAdjustmentAttachmentResponse",
        "type_insurance-adjustments/v1:ServiceLineAdjustmentRequest",
        "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentRequest",
        "type_insurance-adjustments/v1:ValidateServiceLineAdjustmentResponse",
        "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentResponse",
        "type_insurance-adjustments/v1:CreateInsuranceAdjustmentRequest",
        "type_insurance-adjustments/v1:CreateInsuranceAdjustmentResponse",
        "type_insurance-adjustments/v1:OtherFieldError",
        "type_insurance-adjustments/v1:CarcGroupCodeError",
        "type_insurance-adjustments/v1:CarcReasonCodeError",
        "type_insurance-adjustments/v1:CarcAmountError",
        "type_insurance-adjustments/v1:CarcPropertyFieldError",
        "type_insurance-adjustments/v1:RarcReasonCodeError",
        "type_insurance-adjustments/v1:RarcPropertyFieldError",
        "type_insurance-adjustments/v1:DenialReasonFieldError",
        "type_insurance-adjustments/v1:InsuranceAllowedFieldError",
        "type_insurance-adjustments/v1:InsurancePaidFieldError",
        "type_insurance-adjustments/v1:DeductibleFieldError",
        "type_insurance-adjustments/v1:CoinsuranceFieldError",
        "type_insurance-adjustments/v1:CopayFieldError",
        "type_insurance-adjustments/v1:CarcFieldError",
        "type_insurance-adjustments/v1:RarcFieldError",
        "type_insurance-adjustments/v1:InvalidDeniedAdjustmentAmountError",
        "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentFieldError",
        "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentFieldsErrorsType",
        "type_insurance-adjustments/v1:CreateInsuranceAdjustmentFieldError",
        "type_insurance-adjustments/v1:CreateInsuranceAdjustmentFieldsErrorsType",
      ],
      "urlSlug": "v-1",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_insurance-card": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/insurance_cards/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "group_number": "string",
                "image_url_back": "string",
                "image_url_front": "string",
                "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "insurance_type": "01",
                "member_id": "string",
                "payer_id": "string",
                "payer_name": "string",
                "plan_name": "string",
                "plan_type": "09",
                "rx_bin": "string",
                "rx_pcn": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "group_number": "string",
                  "image_url_back": "string",
                  "image_url_front": "string",
                  "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "insurance_type": "01",
                  "member_id": "string",
                  "payer_id": "string",
                  "payer_name": "string",
                  "plan_name": "string",
                  "plan_type": "09",
                  "rx_bin": "string",
                  "rx_pcn": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/insurance_cards/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "insurance_card_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "insurance_card_id",
                "type": {
                  "type": "id",
                  "value": "type_insurance-card:InsuranceCardId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [
                "type_insurance-card:InsuranceCardBase",
              ],
              "properties": [
                {
                  "key": "member_id",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "payer_name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "payer_id",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_insurance-card:InsuranceCard",
              },
            },
          },
          "urlSlug": "update",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/insurance_cards/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/images",
              "pathParameters": {
                "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "signed_image_url_back": "string",
                "signed_image_url_front": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "signed_image_url_back": "string",
                  "signed_image_url_front": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get_images",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Images",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/insurance_cards/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "insurance_card_id",
              },
              {
                "type": "literal",
                "value": "/images",
              },
            ],
            "pathParameters": [
              {
                "key": "insurance_card_id",
                "type": {
                  "type": "id",
                  "value": "type_insurance-card:InsuranceCardId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_insurance-card:InsuranceCardImages",
              },
            },
          },
          "urlSlug": "get-images",
        },
      ],
      "name": "insurance-card",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_insurance-card",
      "subpackages": [],
      "types": [
        "type_insurance-card:InsuranceCardId",
        "type_insurance-card:InsuranceCardBase",
        "type_insurance-card:InsuranceCardCreate",
        "type_insurance-card:InsuranceCard",
        "type_insurance-card:InsuranceCardImages",
      ],
      "urlSlug": "insurance-card",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_internal-api-testing": {
      "description": undefined,
      "endpoints": [],
      "name": "internal-api-testing",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_internal-api-testing",
      "subpackages": [
        "subpackage_internal-api-testing/v1",
      ],
      "types": [],
      "urlSlug": "internal-api-testing",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_internal-api-testing/v1": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 409,
              "type": {
                "type": "id",
                "value": "type_commons:EntityConflictErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Conflict Error",
              "statusCode": 409,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityConflictError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityConflictErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/internal-api-testing/v1/movies",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "director": {
                  "name": "string",
                },
                "name": "string",
                "year_of_release": 0,
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "director": {
                    "name": "string",
                  },
                  "name": "string",
                  "year_of_release": 0,
                },
              },
              "responseBody": {
                "director": {
                  "name": "string",
                },
                "name": "string",
                "year_of_release": 0,
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "director": {
                    "name": "string",
                  },
                  "name": "string",
                  "year_of_release": 0,
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/internal-api-testing/v1/movies",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "director": {
                  "name": "string",
                },
                "name": "string",
                "year_of_release": 0,
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "director": {
                    "name": "string",
                  },
                  "name": "string",
                  "year_of_release": 0,
                },
              },
              "responseBody": {
                "content": {
                  "entity_name": "string",
                },
                "errorName": "EntityConflictError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "entity_name": "string",
                  },
                  "errorName": "EntityConflictError",
                },
              },
              "responseStatusCode": 409,
            },
          ],
          "headers": [],
          "id": "create_movie",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create Movie",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/internal-api-testing/v1",
              },
              {
                "type": "literal",
                "value": "/movies",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_internal-api-testing/v1:MovieCreate",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_internal-api-testing/v1:Movie",
              },
            },
          },
          "urlSlug": "create-movie",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/internal-api-testing/v1/movies/:movie_name",
              "pathParameters": {
                "movie_name": ":movie_name",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "director": {
                  "name": "string",
                },
                "name": "string",
                "year_of_release": 0,
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "director": {
                    "name": "string",
                  },
                  "name": "string",
                  "year_of_release": 0,
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/internal-api-testing/v1/movies/:movie_name",
              "pathParameters": {
                "movie_name": ":movie_name",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
          ],
          "headers": [],
          "id": "get_movie",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Movie",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/internal-api-testing/v1",
              },
              {
                "type": "literal",
                "value": "/movies/",
              },
              {
                "type": "pathParameter",
                "value": "movie_name",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "movie_name",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_internal-api-testing/v1:Movie",
              },
            },
          },
          "urlSlug": "get-movie",
        },
      ],
      "name": "v1",
      "parent": "subpackage_internal-api-testing",
      "pointsTo": undefined,
      "subpackageId": "subpackage_internal-api-testing/v1",
      "subpackages": [],
      "types": [
        "type_internal-api-testing/v1:Movie",
        "type_internal-api-testing/v1:Director",
        "type_internal-api-testing/v1:MovieCreate",
      ],
      "urlSlug": "v-1",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_invoices": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Returns Invoice identified by the id.
If the given id is not found, then 404 response will be returned.
If the authenticated user does not have permission to view the Invoice
identified by the id, then 403 response will be returned
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/invoices/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "created_at": "2023-01-01T00:00:00Z",
                "customer_invoice_url": "string",
                "due_date": "string",
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "items": [
                  {
                    "amount_cents": 0,
                    "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                ],
                "note": "string",
                "organzation_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "patient_external_id": "string",
                "source_customer_id": "string",
                "source_id": "string",
                "status": "draft",
                "updated_at": "2023-01-01T00:00:00Z",
                "url": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "created_at": "2023-01-01T00:00:00Z",
                  "customer_invoice_url": "string",
                  "due_date": "string",
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "items": [
                    {
                      "amount_cents": 0,
                      "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    },
                  ],
                  "note": "string",
                  "organzation_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "patient_external_id": "string",
                  "source_customer_id": "string",
                  "source_id": "string",
                  "status": "draft",
                  "updated_at": "2023-01-01T00:00:00Z",
                  "url": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/invoices/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/invoices/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/invoices/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "description": "InvoiceId to be returned",
                "key": "id",
                "type": {
                  "type": "id",
                  "value": "type_invoices:InvoiceId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_invoices:Invoice",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Returns all Invoices for the authenticated user's organziation.
If optional patient_external_id is provided in query string, then the result
will be limited to only those invoices that belong to the patient_external_id
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/invoices/v1",
              "pathParameters": {},
              "queryParameters": {
                "due_date_after": undefined,
                "due_date_before": undefined,
                "limit": undefined,
                "note": "string",
                "page_token": undefined,
                "patient_external_id": "string",
                "sort": undefined,
                "sort_direction": undefined,
                "status": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "created_at": "2023-01-01T00:00:00Z",
                    "customer_invoice_url": "string",
                    "due_date": "string",
                    "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "items": [
                      {
                        "amount_cents": 0,
                        "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      },
                    ],
                    "note": "string",
                    "organzation_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "patient_external_id": "string",
                    "source_customer_id": "string",
                    "source_id": "string",
                    "status": "draft",
                    "updated_at": "2023-01-01T00:00:00Z",
                    "url": "string",
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "created_at": "2023-01-01T00:00:00Z",
                      "customer_invoice_url": "string",
                      "due_date": "string",
                      "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "items": [
                        {
                          "amount_cents": 0,
                          "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        },
                      ],
                      "note": "string",
                      "organzation_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "patient_external_id": "string",
                      "source_customer_id": "string",
                      "source_id": "string",
                      "status": "draft",
                      "updated_at": "2023-01-01T00:00:00Z",
                      "url": "string",
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "search",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Search",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/invoices/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "key": "patient_external_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PatientExternalId",
                },
                "type": "optional",
              },
            },
            {
              "description": "partial match supported",
              "key": "note",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "all invoices whose due date is before this due date",
              "key": "due_date_before",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:Date",
                },
                "type": "optional",
              },
            },
            {
              "description": "all invoices whose due date is after this due date",
              "key": "due_date_after",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:Date",
                },
                "type": "optional",
              },
            },
            {
              "key": "status",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_invoices:InvoiceStatus",
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to created_at",
              "key": "sort",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_invoices:InvoiceSortField",
                },
                "type": "optional",
              },
            },
            {
              "description": "Sort direction",
              "key": "sort_direction",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:SortDirection",
                },
                "type": "optional",
              },
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_invoices:PagedInvoices",
              },
            },
          },
          "urlSlug": "search",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Create invoices and return the newly created Invoices.
Please note that single InvoiceCreate can result in multiple Invoices being created due to the
fact that the InvoiceCreate's claims could belong to multiple billing providers's payment processor
accounts, thereby requiring creation of multiple invoices.
If the optional query parameter should_send is provided, then the behavior of whether to send
the invoice to the customer will depend on the value. Default behavior is to send the invoice
upon creation of the invoice.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 409,
              "type": {
                "type": "id",
                "value": "type_commons:EntityConflictErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Conflict Error",
              "statusCode": 409,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityConflictError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityConflictErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/invoices/v1",
              "pathParameters": {},
              "queryParameters": {
                "preview_mode": true,
                "should_send": true,
              },
              "requestBody": {
                "due_date": "string",
                "items": [
                  {
                    "amount_cents": 0,
                    "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                ],
                "patient_external_id": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "due_date": "string",
                  "items": [
                    {
                      "amount_cents": 0,
                      "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    },
                  ],
                  "patient_external_id": "string",
                },
              },
              "responseBody": [
                {
                  "created_at": "2023-01-01T00:00:00Z",
                  "customer_invoice_url": "string",
                  "due_date": "string",
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "items": [
                    {
                      "amount_cents": 0,
                      "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    },
                  ],
                  "note": "string",
                  "organzation_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "patient_external_id": "string",
                  "source_customer_id": "string",
                  "source_id": "string",
                  "status": "draft",
                  "type": "invoice",
                  "updated_at": "2023-01-01T00:00:00Z",
                  "url": "string",
                },
              ],
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "created_at": "2023-01-01T00:00:00Z",
                    "customer_invoice_url": "string",
                    "due_date": "string",
                    "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "items": [
                      {
                        "amount_cents": 0,
                        "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      },
                    ],
                    "note": "string",
                    "organzation_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "patient_external_id": "string",
                    "source_customer_id": "string",
                    "source_id": "string",
                    "status": "draft",
                    "type": "invoice",
                    "updated_at": "2023-01-01T00:00:00Z",
                    "url": "string",
                  },
                ],
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/invoices/v1",
              "pathParameters": {},
              "queryParameters": {
                "preview_mode": true,
                "should_send": true,
              },
              "requestBody": {
                "due_date": "string",
                "items": [
                  {
                    "amount_cents": 0,
                    "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                ],
                "patient_external_id": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "due_date": "string",
                  "items": [
                    {
                      "amount_cents": 0,
                      "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    },
                  ],
                  "patient_external_id": "string",
                },
              },
              "responseBody": {
                "content": {
                  "entity_name": "string",
                },
                "errorName": "EntityConflictError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "entity_name": "string",
                  },
                  "errorName": "EntityConflictError",
                },
              },
              "responseStatusCode": 409,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/invoices/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "If true, invoices will not be created in stripe. Default = False",
              "key": "preview_mode",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "If the invoice should be sent to the customer. Default = True",
              "key": "should_send",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                  },
                },
                "type": "optional",
              },
            },
          ],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "patient_external_id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:PatientExternalId",
                  },
                },
                {
                  "key": "note",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "due_date",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:Date",
                  },
                },
                {
                  "key": "items",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_invoices:InvoiceItem",
                    },
                    "type": "list",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "itemType": {
                  "type": "id",
                  "value": "type_invoices:CreatedInvoice",
                },
                "type": "list",
              },
            },
          },
          "urlSlug": "create",
        },
      ],
      "name": "invoices",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_invoices",
      "subpackages": [],
      "types": [
        "type_invoices:InvoiceId",
        "type_invoices:PagedInvoices",
        "type_invoices:InvoiceSortField",
        "type_invoices:CreatedInvoice",
        "type_invoices:InvoiceFilter",
        "type_invoices:Invoice",
        "type_invoices:InvoicePreview",
        "type_invoices:InvoiceItem",
        "type_invoices:InvoiceStatus",
      ],
      "urlSlug": "invoices",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_managed-emr-configs": {
      "description": undefined,
      "endpoints": [],
      "name": "managed-emr-configs",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_managed-emr-configs",
      "subpackages": [
        "subpackage_managed-emr-configs/v1",
      ],
      "types": [],
      "urlSlug": "managed-emr-configs",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_managed-emr-configs/v1": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/managed-emr-configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "managed_emr_config_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "additional_details": {
                  "auth_base_url": "string",
                  "base_url": "string",
                  "candid_practitioner_id": "string",
                  "canvas_export_organization_name": "string",
                  "customer_task_owner": "string",
                  "type": "canvas",
                },
                "billing_start_date": "2023-01-01",
                "create_tasks_for_non_billable_encounters": true,
                "enabled": true,
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "process_updates_for_existing_encounters": true,
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "additional_details": {
                    "auth_base_url": "string",
                    "base_url": "string",
                    "candid_practitioner_id": "string",
                    "canvas_export_organization_name": "string",
                    "customer_task_owner": "string",
                    "type": "canvas",
                  },
                  "billing_start_date": "2023-01-01",
                  "create_tasks_for_non_billable_encounters": true,
                  "enabled": true,
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "process_updates_for_existing_encounters": true,
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/managed-emr-configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "managed_emr_config_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "getById",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get By Id",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/managed-emr-configs/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "managed_emr_config_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "managed_emr_config_id",
                "type": {
                  "type": "id",
                  "value": "type_managed-emr-configs/v1:ManagedEmrConfigId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_managed-emr-configs/v1:ManagedEmrConfig",
              },
            },
          },
          "urlSlug": "get-by-id",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/managed-emr-configs/v1",
              "pathParameters": {},
              "queryParameters": {
                "enabled": true,
                "limit": undefined,
                "page_token": "string",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "additional_details": {
                      "auth_base_url": "string",
                      "base_url": "string",
                      "candid_practitioner_id": "string",
                      "canvas_export_organization_name": "string",
                      "customer_task_owner": "string",
                      "type": "canvas",
                    },
                    "billing_start_date": "2023-01-01",
                    "create_tasks_for_non_billable_encounters": true,
                    "enabled": true,
                    "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "process_updates_for_existing_encounters": true,
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "additional_details": {
                        "auth_base_url": "string",
                        "base_url": "string",
                        "candid_practitioner_id": "string",
                        "canvas_export_organization_name": "string",
                        "customer_task_owner": "string",
                        "type": "canvas",
                      },
                      "billing_start_date": "2023-01-01",
                      "create_tasks_for_non_billable_encounters": true,
                      "enabled": true,
                      "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "process_updates_for_existing_encounters": true,
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/managed-emr-configs/v1",
              "pathParameters": {},
              "queryParameters": {
                "enabled": true,
                "limit": undefined,
                "page_token": "string",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "getMulti",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Multi",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/managed-emr-configs/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "key": "enabled",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
            {
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_managed-emr-configs/v1:ManagedEmrConfigPage",
              },
            },
          },
          "urlSlug": "get-multi",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 409,
              "type": {
                "type": "id",
                "value": "type_commons:EntityConflictErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Conflict Error",
              "statusCode": 409,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityConflictError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityConflictErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/managed-emr-configs/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "additional_details": {
                  "auth_base_url": "string",
                  "canvas_client_id": "string",
                  "canvas_client_secret": "string",
                  "canvas_export_organization_name": "string",
                  "type": "canvas",
                },
                "create_tasks_for_non_billable_encounters": true,
                "enabled": true,
                "process_updates_for_existing_encounters": true,
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "additional_details": {
                    "auth_base_url": "string",
                    "canvas_client_id": "string",
                    "canvas_client_secret": "string",
                    "canvas_export_organization_name": "string",
                    "type": "canvas",
                  },
                  "create_tasks_for_non_billable_encounters": true,
                  "enabled": true,
                  "process_updates_for_existing_encounters": true,
                },
              },
              "responseBody": {
                "additional_details": {
                  "auth_base_url": "string",
                  "base_url": "string",
                  "candid_practitioner_id": "string",
                  "canvas_export_organization_name": "string",
                  "customer_task_owner": "string",
                  "type": "canvas",
                },
                "billing_start_date": "2023-01-01",
                "create_tasks_for_non_billable_encounters": true,
                "enabled": true,
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "process_updates_for_existing_encounters": true,
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "additional_details": {
                    "auth_base_url": "string",
                    "base_url": "string",
                    "candid_practitioner_id": "string",
                    "canvas_export_organization_name": "string",
                    "customer_task_owner": "string",
                    "type": "canvas",
                  },
                  "billing_start_date": "2023-01-01",
                  "create_tasks_for_non_billable_encounters": true,
                  "enabled": true,
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "process_updates_for_existing_encounters": true,
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/managed-emr-configs/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "additional_details": {
                  "auth_base_url": "string",
                  "canvas_client_id": "string",
                  "canvas_client_secret": "string",
                  "canvas_export_organization_name": "string",
                  "type": "canvas",
                },
                "create_tasks_for_non_billable_encounters": true,
                "enabled": true,
                "process_updates_for_existing_encounters": true,
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "additional_details": {
                    "auth_base_url": "string",
                    "canvas_client_id": "string",
                    "canvas_client_secret": "string",
                    "canvas_export_organization_name": "string",
                    "type": "canvas",
                  },
                  "create_tasks_for_non_billable_encounters": true,
                  "enabled": true,
                  "process_updates_for_existing_encounters": true,
                },
              },
              "responseBody": {
                "content": {
                  "entity_name": "string",
                },
                "errorName": "EntityConflictError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "entity_name": "string",
                  },
                  "errorName": "EntityConflictError",
                },
              },
              "responseStatusCode": 409,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/managed-emr-configs/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_managed-emr-configs/v1:ManagedEmrConfigCreate",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_managed-emr-configs/v1:ManagedEmrConfig",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/managed-emr-configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "managed_emr_config_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "additional_details": {
                  "auth_base_url": "string",
                  "base_url": "string",
                  "candid_practitioner_id": "string",
                  "canvas_export_organization_name": "string",
                  "customer_task_owner": "string",
                  "type": "canvas",
                },
                "billing_start_date": "2023-01-01",
                "create_tasks_for_non_billable_encounters": true,
                "enabled": true,
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "process_updates_for_existing_encounters": true,
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "additional_details": {
                    "auth_base_url": "string",
                    "base_url": "string",
                    "candid_practitioner_id": "string",
                    "canvas_export_organization_name": "string",
                    "customer_task_owner": "string",
                    "type": "canvas",
                  },
                  "billing_start_date": "2023-01-01",
                  "create_tasks_for_non_billable_encounters": true,
                  "enabled": true,
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "process_updates_for_existing_encounters": true,
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/managed-emr-configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "managed_emr_config_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PUT",
          "migratedFromUrlSlugs": undefined,
          "name": "Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/managed-emr-configs/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "managed_emr_config_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "managed_emr_config_id",
                "type": {
                  "type": "id",
                  "value": "type_managed-emr-configs/v1:ManagedEmrConfigId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_managed-emr-configs/v1:ManagedEmrConfigUpdate",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_managed-emr-configs/v1:ManagedEmrConfig",
              },
            },
          },
          "urlSlug": "update",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/managed-emr-configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "managed_emr_config_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/managed-emr-configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "managed_emr_config_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "delete",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/managed-emr-configs/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "managed_emr_config_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "managed_emr_config_id",
                "type": {
                  "type": "id",
                  "value": "type_managed-emr-configs/v1:ManagedEmrConfigId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete",
        },
      ],
      "name": "v1",
      "parent": "subpackage_managed-emr-configs",
      "pointsTo": undefined,
      "subpackageId": "subpackage_managed-emr-configs/v1",
      "subpackages": [],
      "types": [
        "type_managed-emr-configs/v1:ManagedEmrConfigPage",
        "type_managed-emr-configs/v1:ManagedEmrConfigId",
        "type_managed-emr-configs/v1:ManagedEmrConfigAdditionalDetails",
        "type_managed-emr-configs/v1:ManagedEmrConfig",
        "type_managed-emr-configs/v1:ManagedEmrConfigCreateAdditionalDetails",
        "type_managed-emr-configs/v1:ManagedEmrConfigCreate",
        "type_managed-emr-configs/v1:ManagedEmrConfigUpdateAdditionalDetails",
        "type_managed-emr-configs/v1:ManagedEmrConfigUpdate",
        "type_managed-emr-configs/v1:CanvasEmrConfig",
        "type_managed-emr-configs/v1:CanvasEmrConfigCreate",
        "type_managed-emr-configs/v1:CanvasEmrConfigUpdate",
        "type_managed-emr-configs/v1:IntegrationLevelElationServiceFacilityRoutingMetadata",
        "type_managed-emr-configs/v1:RuleLevelElationServiceFacilityRoutingMetadata",
        "type_managed-emr-configs/v1:FilterActionLevelElationServiceFacilityRoutingMetadata",
        "type_managed-emr-configs/v1:ElationServiceFacilityRoutingMetadata",
        "type_managed-emr-configs/v1:ElationEmrConfig",
        "type_managed-emr-configs/v1:ElationEmrConfigCreate",
        "type_managed-emr-configs/v1:ElationEmrConfigUpdate",
      ],
      "urlSlug": "v-1",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_organization-payers": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Search for the payer given a payer uuid.",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-payers/v1/search",
              "pathParameters": {},
              "queryParameters": {
                "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "search_result": {
                  "payer": {
                    "payer_id": "string",
                    "payer_name": "string",
                    "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "summary": {
                    "fee_schedule_count": 0,
                  },
                  "type": "match",
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "search_result": {
                    "payer": {
                      "payer_id": "string",
                      "payer_name": "string",
                      "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    },
                    "summary": {
                      "fee_schedule_count": 0,
                    },
                    "type": "match",
                  },
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "search",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Search",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/organization-payers/v1",
              },
              {
                "type": "literal",
                "value": "/search",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "key": "payer_uuid",
              "type": {
                "type": "id",
                "value": "type_payers:PayerUuid",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-payers:SearchOrganizationPayerResponse",
              },
            },
          },
          "urlSlug": "search",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Get the payers affiliated with the current organization.",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-payers/v1",
              "pathParameters": {},
              "queryParameters": {
                "limit": 0,
                "page_token": "string",
                "payer_search_term": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "page": {
                  "items": [
                    {
                      "payer": {
                        "payer_id": "string",
                        "payer_name": "string",
                        "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      },
                      "summary": {
                        "fee_schedule_count": 0,
                      },
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "page": {
                    "items": [
                      {
                        "payer": {
                          "payer_id": "string",
                          "payer_name": "string",
                          "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        },
                        "summary": {
                          "fee_schedule_count": 0,
                        },
                      },
                    ],
                    "next_page_token": "string",
                    "prev_page_token": "string",
                  },
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get_multi",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Multi",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/organization-payers/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
            {
              "key": "payer_search_term",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-payers:GetMultiOrganizationPayersResponse",
              },
            },
          },
          "urlSlug": "get-multi",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Associate a payer with the current organization. If the payer is already associated, nothing is done.",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-payers/v1/add",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
              },
              "responseBody": {
                "payer": {
                  "payer_id": "string",
                  "payer_name": "string",
                  "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
                "summary": {
                  "fee_schedule_count": 0,
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "payer": {
                    "payer_id": "string",
                    "payer_name": "string",
                    "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                  "summary": {
                    "fee_schedule_count": 0,
                  },
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "add_organization_payer",
          "method": "PUT",
          "migratedFromUrlSlugs": undefined,
          "name": "Add Organization Payer",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/organization-payers/v1",
              },
              {
                "type": "literal",
                "value": "/add",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-payers:AddOrganizationPayerRequest",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-payers:AddOrganizationPayerResponse",
              },
            },
          },
          "urlSlug": "add-organization-payer",
        },
      ],
      "name": "organization-payers",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_organization-payers",
      "subpackages": [],
      "types": [
        "type_organization-payers:OrganizationPayerSummary",
        "type_organization-payers:OrganizationPayer",
        "type_organization-payers:OrganizationPayersPage",
        "type_organization-payers:GetMultiOrganizationPayersResponse",
        "type_organization-payers:AddOrganizationPayerRequest",
        "type_organization-payers:AddOrganizationPayerResponse",
        "type_organization-payers:SearchOrganizationPayerSearchResult",
        "type_organization-payers:SearchOrganizationPayerResponse",
      ],
      "urlSlug": "organization-payers",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_organization-providers": {
      "description": undefined,
      "endpoints": [],
      "name": "organization-providers",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_organization-providers",
      "subpackages": [
        "subpackage_organization-providers/v2",
        "subpackage_organization-providers/v3",
      ],
      "types": [],
      "urlSlug": "organization-providers",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_organization-providers/v2": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization_providers/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "addresses": [
                  {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "address_type": "DEFAULT",
                  },
                ],
                "employment_start_date": "string",
                "employment_status": "ACTIVE",
                "employment_termination_date": "string",
                "first_name": "string",
                "is_billing": true,
                "is_rendering": true,
                "last_name": "string",
                "license_type": "MD",
                "medicaid_provider_id": "string",
                "npi": "string",
                "organization_name": "string",
                "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "provider_type": "INDIVIDUAL",
                "ptan": "string",
                "tax_id": "string",
                "taxonomy_code": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "addresses": [
                    {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "address_type": "DEFAULT",
                    },
                  ],
                  "employment_start_date": "string",
                  "employment_status": "ACTIVE",
                  "employment_termination_date": "string",
                  "first_name": "string",
                  "is_billing": true,
                  "is_rendering": true,
                  "last_name": "string",
                  "license_type": "MD",
                  "medicaid_provider_id": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "provider_type": "INDIVIDUAL",
                  "ptan": "string",
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/organization_providers/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "organization_provider_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "organization_provider_id",
                "type": {
                  "type": "id",
                  "value": "type_organization-providers/v2:OrganizationProviderId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-providers/v2:OrganizationProvider",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization_providers/v2",
              "pathParameters": {},
              "queryParameters": {
                "is_billing": undefined,
                "is_rendering": undefined,
                "limit": 0,
                "npi": undefined,
                "page_token": undefined,
                "search_term": "string",
                "sort": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "addresses": [
                      {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "address_type": "DEFAULT",
                      },
                    ],
                    "employment_start_date": "string",
                    "employment_status": "ACTIVE",
                    "employment_termination_date": "string",
                    "first_name": "string",
                    "is_billing": true,
                    "is_rendering": true,
                    "last_name": "string",
                    "license_type": "MD",
                    "medicaid_provider_id": "string",
                    "npi": "string",
                    "organization_name": "string",
                    "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "provider_type": "INDIVIDUAL",
                    "ptan": "string",
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "addresses": [
                        {
                          "address": {
                            "address1": "string",
                            "address2": "string",
                            "city": "string",
                            "state": "AA",
                            "zip_code": "string",
                            "zip_plus_four_code": "string",
                          },
                          "address_type": "DEFAULT",
                        },
                      ],
                      "employment_start_date": "string",
                      "employment_status": "ACTIVE",
                      "employment_termination_date": "string",
                      "first_name": "string",
                      "is_billing": true,
                      "is_rendering": true,
                      "last_name": "string",
                      "license_type": "MD",
                      "medicaid_provider_id": "string",
                      "npi": "string",
                      "organization_name": "string",
                      "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "provider_type": "INDIVIDUAL",
                      "ptan": "string",
                      "tax_id": "string",
                      "taxonomy_code": "string",
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "getAll",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get All",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/organization_providers/v2",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "Limit the number of results returned. Defaults to 100.",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Filter to a name or a part of a name",
              "key": "search_term",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Filter to a specific NPI",
              "key": "npi",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Filter to only rendering providers",
              "key": "is_rendering",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Filter to only billing providers",
              "key": "is_billing",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "The page token to continue paging through a previous request",
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to PROVIDER_NAME_ASC",
              "key": "sort",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_organization-providers/v2:OrganizationProviderSortOptions",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-providers/v2:OrganizationProviderPage",
              },
            },
          },
          "urlSlug": "get-all",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization_providers/v2",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "is_billing": true,
                "is_rendering": true,
                "license_type": "MD",
                "npi": "string",
                "provider_type": "INDIVIDUAL",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "is_billing": true,
                  "is_rendering": true,
                  "license_type": "MD",
                  "npi": "string",
                  "provider_type": "INDIVIDUAL",
                },
              },
              "responseBody": {
                "addresses": [
                  {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "address_type": "DEFAULT",
                  },
                ],
                "employment_start_date": "string",
                "employment_status": "ACTIVE",
                "employment_termination_date": "string",
                "first_name": "string",
                "is_billing": true,
                "is_rendering": true,
                "last_name": "string",
                "license_type": "MD",
                "medicaid_provider_id": "string",
                "npi": "string",
                "organization_name": "string",
                "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "provider_type": "INDIVIDUAL",
                "ptan": "string",
                "tax_id": "string",
                "taxonomy_code": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "addresses": [
                    {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "address_type": "DEFAULT",
                    },
                  ],
                  "employment_start_date": "string",
                  "employment_status": "ACTIVE",
                  "employment_termination_date": "string",
                  "first_name": "string",
                  "is_billing": true,
                  "is_rendering": true,
                  "last_name": "string",
                  "license_type": "MD",
                  "medicaid_provider_id": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "provider_type": "INDIVIDUAL",
                  "ptan": "string",
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/organization_providers/v2",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [
                "type_organization-providers/v2:OrganizationProviderBase",
              ],
              "properties": [
                {
                  "description": "The employment status for the provider.",
                  "key": "employment_status",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_organization-providers/v2:EmploymentStatus",
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-providers/v2:OrganizationProvider",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization_providers/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "addresses": [
                  {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "address_type": "DEFAULT",
                  },
                ],
                "employment_start_date": "string",
                "employment_status": "ACTIVE",
                "employment_termination_date": "string",
                "first_name": "string",
                "is_billing": true,
                "is_rendering": true,
                "last_name": "string",
                "license_type": "MD",
                "medicaid_provider_id": "string",
                "npi": "string",
                "organization_name": "string",
                "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "provider_type": "INDIVIDUAL",
                "ptan": "string",
                "tax_id": "string",
                "taxonomy_code": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "addresses": [
                    {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "address_type": "DEFAULT",
                    },
                  ],
                  "employment_start_date": "string",
                  "employment_status": "ACTIVE",
                  "employment_termination_date": "string",
                  "first_name": "string",
                  "is_billing": true,
                  "is_rendering": true,
                  "last_name": "string",
                  "license_type": "MD",
                  "medicaid_provider_id": "string",
                  "npi": "string",
                  "organization_name": "string",
                  "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "provider_type": "INDIVIDUAL",
                  "ptan": "string",
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/organization_providers/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "organization_provider_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "organization_provider_id",
                "type": {
                  "type": "id",
                  "value": "type_organization-providers/v2:OrganizationProviderId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "description": "The NPI of the provider. This must be all digits [0-9] and exactly 10 characters long.",
                  "key": "npi",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "Whether the provider can be used to render services.",
                  "key": "is_rendering",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "Whether the provider can be used to bill services.",
                  "key": "is_billing",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "The first name of the provider, if the provider is an individual.",
                  "key": "first_name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "The last name of the provider, if the provider is an individual.",
                  "key": "last_name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "The name of the provider, if the provider is an organization.",
                  "key": "organization_name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "Whether the provider is an individual (NPPES Type 1) or organization (NPPES Type 2) provider.
",
                  "key": "provider_type",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_organization-providers/v2:ProviderType",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.
",
                  "key": "tax_id",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "A code designating classification and specialization.",
                  "key": "taxonomy_code",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "The type of license that the provider holds.",
                  "key": "license_type",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_organization-providers/v2:LicenseType",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "The Provider Transaction Access Number for the provider.",
                  "key": "ptan",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "The medicaid provider ID for the provider.",
                  "key": "medicaid_provider_id",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "The addresses associated with this provider.",
                  "key": "addresses",
                  "valueType": {
                    "itemType": {
                      "itemType": {
                        "type": "id",
                        "value": "type_organization-providers/v2:OrganizationProviderAddress",
                      },
                      "type": "list",
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-providers/v2:OrganizationProvider",
              },
            },
          },
          "urlSlug": "update",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization_providers/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "delete",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/organization_providers/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "organization_provider_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "organization_provider_id",
                "type": {
                  "type": "id",
                  "value": "type_organization-providers/v2:OrganizationProviderId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete",
        },
      ],
      "name": "v2",
      "parent": "subpackage_organization-providers",
      "pointsTo": undefined,
      "subpackageId": "subpackage_organization-providers/v2",
      "subpackages": [],
      "types": [
        "type_organization-providers/v2:OrganizationProviderId",
        "type_organization-providers/v2:OrganizationProviderBase",
        "type_organization-providers/v2:OrganizationProvider",
        "type_organization-providers/v2:OrganizationProviderPage",
        "type_organization-providers/v2:OrganizationProviderSortOptions",
        "type_organization-providers/v2:ProviderType",
        "type_organization-providers/v2:LicenseType",
        "type_organization-providers/v2:EmploymentStatus",
        "type_organization-providers/v2:OrganizationProviderAddress",
        "type_organization-providers/v2:AddressType",
      ],
      "urlSlug": "v-2",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_organization-providers/v3": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-providers/v3/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "addresses": [
                  {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "address_type": "DEFAULT",
                  },
                ],
                "employment_start_date": "2023-01-01",
                "employment_termination_date": "2023-01-01",
                "first_name": "string",
                "is_billing": true,
                "is_rendering": true,
                "last_name": "string",
                "license_type": "MD",
                "npi": "string",
                "organization_name": "string",
                "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "provider_type": "INDIVIDUAL",
                "qualifications": [
                  {
                    "identifier_code": "MCR",
                    "identifier_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "identifier_value": {
                      "provider_number": "string",
                      "state": "AA",
                      "type": "medicare_provider_identifier",
                    },
                    "period": {
                      "end_date": "string",
                      "start_date": "string",
                    },
                  },
                ],
                "tax_id": "string",
                "taxonomy_code": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "addresses": [
                    {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "address_type": "DEFAULT",
                    },
                  ],
                  "employment_start_date": "2023-01-01",
                  "employment_termination_date": "2023-01-01",
                  "first_name": "string",
                  "is_billing": true,
                  "is_rendering": true,
                  "last_name": "string",
                  "license_type": "MD",
                  "npi": "string",
                  "organization_name": "string",
                  "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "provider_type": "INDIVIDUAL",
                  "qualifications": [
                    {
                      "identifier_code": "MCR",
                      "identifier_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "identifier_value": {
                        "provider_number": "string",
                        "state": "AA",
                        "type": "medicare_provider_identifier",
                      },
                      "period": {
                        "end_date": "string",
                        "start_date": "string",
                      },
                    },
                  ],
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/organization-providers/v3",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "organization_provider_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "organization_provider_id",
                "type": {
                  "type": "id",
                  "value": "type_organization-providers/v2:OrganizationProviderId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-providers/v3:OrganizationProviderV2",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-providers/v3",
              "pathParameters": {},
              "queryParameters": {
                "is_billing": undefined,
                "is_rendering": undefined,
                "limit": 0,
                "npi": undefined,
                "page_token": undefined,
                "search_term": "string",
                "sort": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "addresses": [
                      {
                        "address": {
                          "address1": "string",
                          "address2": "string",
                          "city": "string",
                          "state": "AA",
                          "zip_code": "string",
                          "zip_plus_four_code": "string",
                        },
                        "address_type": "DEFAULT",
                      },
                    ],
                    "employment_start_date": "2023-01-01",
                    "employment_termination_date": "2023-01-01",
                    "first_name": "string",
                    "is_billing": true,
                    "is_rendering": true,
                    "last_name": "string",
                    "license_type": "MD",
                    "npi": "string",
                    "organization_name": "string",
                    "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "provider_type": "INDIVIDUAL",
                    "qualifications": [
                      {
                        "identifier_code": "MCR",
                        "identifier_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "identifier_value": {
                          "provider_number": "string",
                          "state": "AA",
                          "type": "medicare_provider_identifier",
                        },
                        "period": {
                          "end_date": "string",
                          "start_date": "string",
                        },
                      },
                    ],
                    "tax_id": "string",
                    "taxonomy_code": "string",
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "addresses": [
                        {
                          "address": {
                            "address1": "string",
                            "address2": "string",
                            "city": "string",
                            "state": "AA",
                            "zip_code": "string",
                            "zip_plus_four_code": "string",
                          },
                          "address_type": "DEFAULT",
                        },
                      ],
                      "employment_start_date": "2023-01-01",
                      "employment_termination_date": "2023-01-01",
                      "first_name": "string",
                      "is_billing": true,
                      "is_rendering": true,
                      "last_name": "string",
                      "license_type": "MD",
                      "npi": "string",
                      "organization_name": "string",
                      "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "provider_type": "INDIVIDUAL",
                      "qualifications": [
                        {
                          "identifier_code": "MCR",
                          "identifier_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "identifier_value": {
                            "provider_number": "string",
                            "state": "AA",
                            "type": "medicare_provider_identifier",
                          },
                          "period": {
                            "end_date": "string",
                            "start_date": "string",
                          },
                        },
                      ],
                      "tax_id": "string",
                      "taxonomy_code": "string",
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get_multi",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Multi",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/organization-providers/v3",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "Limit the number of results returned. Defaults to 100.",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Filter to a name or a part of a name",
              "key": "search_term",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Filter to a specific NPI",
              "key": "npi",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Filter to only rendering providers",
              "key": "is_rendering",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Filter to only billing providers",
              "key": "is_billing",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "The page token to continue paging through a previous request",
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to PROVIDER_NAME_ASC",
              "key": "sort",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_organization-providers/v2:OrganizationProviderSortOptions",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-providers/v3:OrganizationProviderPageV2",
              },
            },
          },
          "urlSlug": "get-multi",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:RequestValidationError",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Http Request Validation Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "HttpRequestValidationError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:RequestValidationError",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-providers/v3",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "is_billing": true,
                "is_rendering": true,
                "license_type": "MD",
                "npi": "string",
                "provider_type": "INDIVIDUAL",
                "qualifications": [
                  {
                    "identifier_code": "MCR",
                    "identifier_value": {
                      "provider_number": "string",
                      "state": "AA",
                      "type": "medicare_provider_identifier",
                    },
                  },
                ],
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "is_billing": true,
                  "is_rendering": true,
                  "license_type": "MD",
                  "npi": "string",
                  "provider_type": "INDIVIDUAL",
                  "qualifications": [
                    {
                      "identifier_code": "MCR",
                      "identifier_value": {
                        "provider_number": "string",
                        "state": "AA",
                        "type": "medicare_provider_identifier",
                      },
                    },
                  ],
                },
              },
              "responseBody": {
                "addresses": [
                  {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "address_type": "DEFAULT",
                  },
                ],
                "employment_start_date": "2023-01-01",
                "employment_termination_date": "2023-01-01",
                "first_name": "string",
                "is_billing": true,
                "is_rendering": true,
                "last_name": "string",
                "license_type": "MD",
                "npi": "string",
                "organization_name": "string",
                "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "provider_type": "INDIVIDUAL",
                "qualifications": [
                  {
                    "identifier_code": "MCR",
                    "identifier_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "identifier_value": {
                      "provider_number": "string",
                      "state": "AA",
                      "type": "medicare_provider_identifier",
                    },
                    "period": {
                      "end_date": "string",
                      "start_date": "string",
                    },
                  },
                ],
                "tax_id": "string",
                "taxonomy_code": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "addresses": [
                    {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "address_type": "DEFAULT",
                    },
                  ],
                  "employment_start_date": "2023-01-01",
                  "employment_termination_date": "2023-01-01",
                  "first_name": "string",
                  "is_billing": true,
                  "is_rendering": true,
                  "last_name": "string",
                  "license_type": "MD",
                  "npi": "string",
                  "organization_name": "string",
                  "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "provider_type": "INDIVIDUAL",
                  "qualifications": [
                    {
                      "identifier_code": "MCR",
                      "identifier_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "identifier_value": {
                        "provider_number": "string",
                        "state": "AA",
                        "type": "medicare_provider_identifier",
                      },
                      "period": {
                        "end_date": "string",
                        "start_date": "string",
                      },
                    },
                  ],
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-providers/v3",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "is_billing": true,
                "is_rendering": true,
                "license_type": "MD",
                "npi": "string",
                "provider_type": "INDIVIDUAL",
                "qualifications": [
                  {
                    "identifier_code": "MCR",
                    "identifier_value": {
                      "provider_number": "string",
                      "state": "AA",
                      "type": "medicare_provider_identifier",
                    },
                  },
                ],
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "is_billing": true,
                  "is_rendering": true,
                  "license_type": "MD",
                  "npi": "string",
                  "provider_type": "INDIVIDUAL",
                  "qualifications": [
                    {
                      "identifier_code": "MCR",
                      "identifier_value": {
                        "provider_number": "string",
                        "state": "AA",
                        "type": "medicare_provider_identifier",
                      },
                    },
                  ],
                },
              },
              "responseBody": {
                "content": {
                  "fieldName": "string",
                  "humanReadableMessage": "string",
                },
                "errorName": "HttpRequestValidationError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "fieldName": "string",
                    "humanReadableMessage": "string",
                  },
                  "errorName": "HttpRequestValidationError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/organization-providers/v3",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-providers/v3:OrganizationProviderCreateV2",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-providers/v3:OrganizationProviderV2",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:RequestValidationError",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Http Request Validation Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "HttpRequestValidationError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:RequestValidationError",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-providers/v3/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "addresses": [
                  {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "address_type": "DEFAULT",
                  },
                ],
                "employment_start_date": "2023-01-01",
                "employment_termination_date": "2023-01-01",
                "first_name": "string",
                "is_billing": true,
                "is_rendering": true,
                "last_name": "string",
                "license_type": "MD",
                "npi": "string",
                "organization_name": "string",
                "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "provider_type": "INDIVIDUAL",
                "qualifications": [
                  {
                    "identifier_code": "MCR",
                    "identifier_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "identifier_value": {
                      "provider_number": "string",
                      "state": "AA",
                      "type": "medicare_provider_identifier",
                    },
                    "period": {
                      "end_date": "string",
                      "start_date": "string",
                    },
                  },
                ],
                "tax_id": "string",
                "taxonomy_code": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "addresses": [
                    {
                      "address": {
                        "address1": "string",
                        "address2": "string",
                        "city": "string",
                        "state": "AA",
                        "zip_code": "string",
                        "zip_plus_four_code": "string",
                      },
                      "address_type": "DEFAULT",
                    },
                  ],
                  "employment_start_date": "2023-01-01",
                  "employment_termination_date": "2023-01-01",
                  "first_name": "string",
                  "is_billing": true,
                  "is_rendering": true,
                  "last_name": "string",
                  "license_type": "MD",
                  "npi": "string",
                  "organization_name": "string",
                  "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "provider_type": "INDIVIDUAL",
                  "qualifications": [
                    {
                      "identifier_code": "MCR",
                      "identifier_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "identifier_value": {
                        "provider_number": "string",
                        "state": "AA",
                        "type": "medicare_provider_identifier",
                      },
                      "period": {
                        "end_date": "string",
                        "start_date": "string",
                      },
                    },
                  ],
                  "tax_id": "string",
                  "taxonomy_code": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-providers/v3/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "organization_provider_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "fieldName": "string",
                  "humanReadableMessage": "string",
                },
                "errorName": "HttpRequestValidationError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "fieldName": "string",
                    "humanReadableMessage": "string",
                  },
                  "errorName": "HttpRequestValidationError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/organization-providers/v3",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "organization_provider_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "organization_provider_id",
                "type": {
                  "type": "id",
                  "value": "type_organization-providers/v2:OrganizationProviderId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-providers/v3:OrganizationProviderUpdateV2",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-providers/v3:OrganizationProviderV2",
              },
            },
          },
          "urlSlug": "update",
        },
      ],
      "name": "v3",
      "parent": "subpackage_organization-providers",
      "pointsTo": undefined,
      "subpackageId": "subpackage_organization-providers/v3",
      "subpackages": [],
      "types": [
        "type_organization-providers/v3:OrganizationProviderV2",
        "type_organization-providers/v3:OrganizationProviderCreateV2",
        "type_organization-providers/v3:OrganizationProviderUpdateV2",
        "type_organization-providers/v3:OrganizationProviderPageV2",
      ],
      "urlSlug": "v-3",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_organization-tags": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-tags/v1",
              "pathParameters": {},
              "queryParameters": {
                "limit": 0,
                "page_token": "string",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "description": "string",
                    "tag_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "tag_name": "string",
                    "tag_type": "system",
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "description": "string",
                      "tag_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "tag_name": "string",
                      "tag_type": "system",
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-tags/v1",
              "pathParameters": {},
              "queryParameters": {
                "limit": 0,
                "page_token": "string",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "getAll",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get All",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/organization-tags/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-tags:OrganizationTagsPage",
              },
            },
          },
          "urlSlug": "get-all",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
            {
              "statusCode": 409,
              "type": {
                "type": "id",
                "value": "type_commons:EntityConflictErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Entity Conflict Error",
              "statusCode": 409,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityConflictError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityConflictErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-tags/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "description": "string",
                "tag_name": "string",
                "tag_type": "system",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "description": "string",
                  "tag_name": "string",
                  "tag_type": "system",
                },
              },
              "responseBody": {
                "description": "string",
                "tag_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "tag_name": "string",
                "tag_type": "system",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "description": "string",
                  "tag_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "tag_name": "string",
                  "tag_type": "system",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-tags/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "description": "string",
                "tag_name": "string",
                "tag_type": "system",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "description": "string",
                  "tag_name": "string",
                  "tag_type": "system",
                },
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-tags/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "description": "string",
                "tag_name": "string",
                "tag_type": "system",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "description": "string",
                  "tag_name": "string",
                  "tag_type": "system",
                },
              },
              "responseBody": {
                "content": {
                  "entity_name": "string",
                },
                "errorName": "EntityConflictError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "entity_name": "string",
                  },
                  "errorName": "EntityConflictError",
                },
              },
              "responseStatusCode": 409,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/organization-tags/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-tags:OrganizationTagCreate",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_organization-tags:OrganizationTag",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-tags/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "organization_tag_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-tags/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "organization_tag_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/organization-tags/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "organization_tag_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "delete",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/organization-tags/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "organization_tag_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "organization_tag_id",
                "type": {
                  "type": "id",
                  "value": "type_organization-tags:OrganizationTagId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete",
        },
      ],
      "name": "organization-tags",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_organization-tags",
      "subpackages": [],
      "types": [
        "type_organization-tags:OrganizationTagId",
        "type_organization-tags:OrganizationTagCreate",
        "type_organization-tags:OrganizationTag",
        "type_organization-tags:OrganizationTagsPage",
        "type_organization-tags:TagTypeEnum",
      ],
      "urlSlug": "organization-tags",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_page-sessions": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/page-sessions/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "app_session_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "end_datetime": "2023-01-01T00:00:00Z",
                "end_reason": "organization_switch",
                "route": "string",
                "start_datetime": "2023-01-01T00:00:00Z",
                "start_reason": "browser_load",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "app_session_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "end_datetime": "2023-01-01T00:00:00Z",
                  "end_reason": "organization_switch",
                  "route": "string",
                  "start_datetime": "2023-01-01T00:00:00Z",
                  "start_reason": "browser_load",
                },
              },
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/page-sessions/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_page-sessions:CreatePageSessionRequest",
              },
            },
          },
          "response": undefined,
          "urlSlug": "create",
        },
      ],
      "name": "page-sessions",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_page-sessions",
      "subpackages": [],
      "types": [
        "type_page-sessions:AppSessionId",
        "type_page-sessions:PageSessionStartReason",
        "type_page-sessions:PageSessionEndReason",
        "type_page-sessions:CreatePageSessionRequest",
      ],
      "urlSlug": "page-sessions",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_patient-payment-configs": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Returns PatientPaymentConfig identified by the id.
If the given id is not found, then 404 response will be returned.
If the authenticated user does not have permission to view the PatientPaymentConfig
identified by the id, then 403 response will be returned
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient_payment_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "auto_collect": true,
                "auto_collect_threshold_cents": 0,
                "auto_invoice": true,
                "days_until_due": 0,
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "patient_external_id": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "auto_collect": true,
                  "auto_collect_threshold_cents": 0,
                  "auto_invoice": true,
                  "days_until_due": 0,
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "patient_external_id": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient_payment_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient_payment_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patient_payment_configs/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "description": "PatientPaymentConfigId to be returned",
                "key": "id",
                "type": {
                  "type": "id",
                  "value": "type_patient-payment-configs:PatientPaymentConfigId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patient-payment-configs:PatientPaymentConfig",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Returns all PatientPaymentConfig for the authenticated user's organization",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient_payment_configs/v1",
              "pathParameters": {},
              "queryParameters": {
                "limit": 0,
                "page_token": undefined,
                "patient_external_id": "string",
                "sort": undefined,
                "sort_direction": "asc",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "auto_collect": true,
                    "auto_collect_threshold_cents": 0,
                    "auto_invoice": true,
                    "days_until_due": 0,
                    "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "patient_external_id": "string",
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "auto_collect": true,
                      "auto_collect_threshold_cents": 0,
                      "auto_invoice": true,
                      "days_until_due": 0,
                      "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "patient_external_id": "string",
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "search",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Search",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patient_payment_configs/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "limit the PatientPaymentConfig to those belonging to the patient_external_id",
              "key": "patient_external_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PatientExternalId",
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to patient_external_id",
              "key": "sort",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_patient-payment-configs:PatientPaymentConfigSortField",
                },
                "type": "optional",
              },
            },
            {
              "description": "Sort direction",
              "key": "sort_direction",
              "type": {
                "type": "id",
                "value": "type_commons:SortDirection",
              },
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patient-payment-configs:PagedPatientPaymentConfig",
              },
            },
          },
          "urlSlug": "search",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Creates the given PatientPaymentConfig, and returns the newly created PatientPaymentConfig.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 409,
              "type": {
                "type": "id",
                "value": "type_commons:EntityConflictErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Conflict Error",
              "statusCode": 409,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityConflictError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityConflictErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient_payment_configs/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "auto_collect": true,
                "auto_collect_threshold_cents": 0,
                "auto_invoice": true,
                "days_until_due": 0,
                "patient_external_id": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "auto_collect": true,
                  "auto_collect_threshold_cents": 0,
                  "auto_invoice": true,
                  "days_until_due": 0,
                  "patient_external_id": "string",
                },
              },
              "responseBody": {
                "auto_collect": true,
                "auto_collect_threshold_cents": 0,
                "auto_invoice": true,
                "days_until_due": 0,
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "patient_external_id": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "auto_collect": true,
                  "auto_collect_threshold_cents": 0,
                  "auto_invoice": true,
                  "days_until_due": 0,
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "patient_external_id": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient_payment_configs/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "auto_collect": true,
                "auto_collect_threshold_cents": 0,
                "auto_invoice": true,
                "days_until_due": 0,
                "patient_external_id": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "auto_collect": true,
                  "auto_collect_threshold_cents": 0,
                  "auto_invoice": true,
                  "days_until_due": 0,
                  "patient_external_id": "string",
                },
              },
              "responseBody": {
                "content": {
                  "entity_name": "string",
                },
                "errorName": "EntityConflictError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "entity_name": "string",
                  },
                  "errorName": "EntityConflictError",
                },
              },
              "responseStatusCode": 409,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patient_payment_configs/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patient-payment-configs:PatientPaymentConfigCreate",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patient-payment-configs:PatientPaymentConfig",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Patch PatientPaymentConfig identified the id.
If PatientPaymentConfig is not found by the provided id, then 404 will be returned.
If the authenticated user does not have the permission to update the PatientPaymentConfig identified.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient_payment_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "auto_collect": true,
                "auto_collect_threshold_cents": 0,
                "auto_invoice": true,
                "days_until_due": 0,
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "patient_external_id": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "auto_collect": true,
                  "auto_collect_threshold_cents": 0,
                  "auto_invoice": true,
                  "days_until_due": 0,
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "patient_external_id": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient_payment_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient_payment_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
          ],
          "headers": [],
          "id": "patch",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Patch",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patient_payment_configs/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "description": "PatientPaymentConfigId to be patched",
                "key": "id",
                "type": {
                  "type": "id",
                  "value": "type_patient-payment-configs:PatientPaymentConfigId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patient-payment-configs:PatientPaymentConfigPatch",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patient-payment-configs:PatientPaymentConfig",
              },
            },
          },
          "urlSlug": "patch",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Deletes the PatientPaymentConfigId identified by the id.
If PatientPaymentConfigId is not found by the provided id, then 404 will be returned.
If the authenticated user does not have the permission to update the PatientPaymentConfig identified
by the id, then 403 will be returned
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient_payment_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient_payment_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient_payment_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
          ],
          "headers": [],
          "id": "delete",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patient_payment_configs/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "description": "PatientPaymentConfigId to be deleted",
                "key": "id",
                "type": {
                  "type": "id",
                  "value": "type_patient-payment-configs:PatientPaymentConfigId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete",
        },
      ],
      "name": "patient-payment-configs",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_patient-payment-configs",
      "subpackages": [],
      "types": [
        "type_patient-payment-configs:PatientPaymentConfigId",
        "type_patient-payment-configs:PagedPatientPaymentConfig",
        "type_patient-payment-configs:PatientPaymentConfigSortField",
        "type_patient-payment-configs:PatientPaymentConfigFilter",
        "type_patient-payment-configs:PatientPaymentConfig",
        "type_patient-payment-configs:PatientPaymentConfigCreate",
        "type_patient-payment-configs:PatientPaymentConfigPatch",
      ],
      "urlSlug": "patient-payment-configs",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_patient-payments": {
      "description": undefined,
      "endpoints": [],
      "name": "patient-payments",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_patient-payments",
      "subpackages": [
        "subpackage_patient-payments/v2",
        "subpackage_patient-payments/v3",
      ],
      "types": [],
      "urlSlug": "patient-payments",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_patient-payments/v2": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Returns all patient payments satisfying the search criteria AND whose organization_id matches the current organization_id of the authenticated user.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v2",
              "pathParameters": {},
              "queryParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "limit": 0,
                "page_token": undefined,
                "sort": undefined,
                "sort_direction": undefined,
                "sources": undefined,
                "statuses": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "amount_cents": 0,
                    "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "patient_external_id": "string",
                    "patient_payment_id": "string",
                    "payment_name": "string",
                    "payment_note": "string",
                    "payment_timestamp": "2023-01-01T00:00:00Z",
                    "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "source": "MANUAL_ENTRY",
                    "source_internal_id": "string",
                    "status": "PENDING",
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "amount_cents": 0,
                      "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "patient_external_id": "string",
                      "patient_payment_id": "string",
                      "payment_name": "string",
                      "payment_note": "string",
                      "payment_timestamp": "2023-01-01T00:00:00Z",
                      "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "source": "MANUAL_ENTRY",
                      "source_internal_id": "string",
                      "status": "PENDING",
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v2",
              "pathParameters": {},
              "queryParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "limit": 0,
                "page_token": undefined,
                "sort": undefined,
                "sort_direction": undefined,
                "sources": undefined,
                "statuses": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "search",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Search",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patient-payments/v2",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "Defaults to 100. The value must be greater than 0 and less than 1000.",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "encounter_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
                "type": "optional",
              },
            },
            {
              "key": "sources",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_patient-payments/v2:PatientPaymentSource",
                },
                "type": "optional",
              },
            },
            {
              "key": "statuses",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_patient-payments/v2:PatientPaymentStatus",
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to payment_timestamp",
              "key": "sort",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_patient-payments/v2:PatientPaymentSortField",
                },
                "type": "optional",
              },
            },
            {
              "description": "Sort direction. Defaults to descending order if not provided.",
              "key": "sort_direction",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:SortDirection",
                },
                "type": "optional",
              },
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patient-payments/v2:PatientPaymentsPage",
              },
            },
          },
          "urlSlug": "search",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Returns the patient payment for the provided patient_payment_id. If the patient payment's organization_id does not match the current organization_id of the authenticated user, then response code of 403 will be returned.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v2/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "amount_cents": 0,
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "patient_external_id": "string",
                "patient_payment_id": "string",
                "payment_name": "string",
                "payment_note": "string",
                "payment_timestamp": "2023-01-01T00:00:00Z",
                "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "source": "MANUAL_ENTRY",
                "source_internal_id": "string",
                "status": "PENDING",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "amount_cents": 0,
                  "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "patient_external_id": "string",
                  "patient_payment_id": "string",
                  "payment_name": "string",
                  "payment_note": "string",
                  "payment_timestamp": "2023-01-01T00:00:00Z",
                  "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "source": "MANUAL_ENTRY",
                  "source_internal_id": "string",
                  "status": "PENDING",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v2/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v2/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patient-payments/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "patient_payment_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "patient_payment_id",
                "type": {
                  "type": "id",
                  "value": "type_patient-payments/v2:PatientPaymentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patient-payments/v2:PatientPayment",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Creates a new patient payment record and returns the newly created PatientPayment object. It is expected that the organization_id of the input patient_payment object will match the current organization_id of the auathenticated user. Otherwise, response code of 400 will be returned.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v2",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "amount_cents": 0,
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "amount_cents": 0,
                },
              },
              "responseBody": {
                "amount_cents": 0,
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "patient_external_id": "string",
                "patient_payment_id": "string",
                "payment_name": "string",
                "payment_note": "string",
                "payment_timestamp": "2023-01-01T00:00:00Z",
                "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "source": "MANUAL_ENTRY",
                "source_internal_id": "string",
                "status": "PENDING",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "amount_cents": 0,
                  "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "patient_external_id": "string",
                  "patient_payment_id": "string",
                  "payment_name": "string",
                  "payment_note": "string",
                  "payment_timestamp": "2023-01-01T00:00:00Z",
                  "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "source": "MANUAL_ENTRY",
                  "source_internal_id": "string",
                  "status": "PENDING",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patient-payments/v2",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "amount_cents",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                    },
                  },
                },
                {
                  "key": "payment_timestamp",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "status",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_patient-payments/v2:PatientPaymentStatus",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "payment_name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "payment_note",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "patient_external_id",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:PatientExternalId",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "encounter_id",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:EncounterId",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "service_line_id",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:ServiceLineId",
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patient-payments/v2:PatientPayment",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Updates the patient payment record matching the provided patient_payment_id. If the matching record's organization_id does not match the authenticated user's current organization_id, then a response code of \`403\` will be returned.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v2/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "amount_cents": 0,
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "patient_external_id": "string",
                "patient_payment_id": "string",
                "payment_name": "string",
                "payment_note": "string",
                "payment_timestamp": "2023-01-01T00:00:00Z",
                "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "source": "MANUAL_ENTRY",
                "source_internal_id": "string",
                "status": "PENDING",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "amount_cents": 0,
                  "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "patient_external_id": "string",
                  "patient_payment_id": "string",
                  "payment_name": "string",
                  "payment_note": "string",
                  "payment_timestamp": "2023-01-01T00:00:00Z",
                  "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "source": "MANUAL_ENTRY",
                  "source_internal_id": "string",
                  "status": "PENDING",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v2/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v2/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v2/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patient-payments/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "patient_payment_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "patient_payment_id",
                "type": {
                  "type": "id",
                  "value": "type_patient-payments/v2:PatientPaymentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "amount_cents",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "payment_timestamp",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "status",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_patient-payments/v2:PatientPaymentStatus",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "payment_name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "payment_note",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patient-payments/v2:PatientPayment",
              },
            },
          },
          "urlSlug": "update",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Deletes the patient payment record matching the provided patient_payment_id. If the matching record's organization_id does not match the authenticated user's current organization_id, then a response code of \`403\` will be returned.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v2/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v2/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v2/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v2/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "delete",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patient-payments/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "patient_payment_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "patient_payment_id",
                "type": {
                  "type": "id",
                  "value": "type_patient-payments/v2:PatientPaymentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete",
        },
      ],
      "name": "v2",
      "parent": "subpackage_patient-payments",
      "pointsTo": undefined,
      "subpackageId": "subpackage_patient-payments/v2",
      "subpackages": [],
      "types": [
        "type_patient-payments/v2:PatientPaymentId",
        "type_patient-payments/v2:PatientPaymentSortField",
        "type_patient-payments/v2:PatientPaymentSource",
        "type_patient-payments/v2:PatientPayment",
        "type_patient-payments/v2:PatientPaymentsPage",
        "type_patient-payments/v2:PatientPaymentStatus",
      ],
      "urlSlug": "v-2",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_patient-payments/v3": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Returns all patient payments satisfying the search criteria AND whose organization_id matches
the current organization_id of the authenticated user.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3",
              "pathParameters": {},
              "queryParameters": {
                "encounter_external_id": undefined,
                "limit": 0,
                "page_token": undefined,
                "patient_external_id": "string",
                "service_line_id": undefined,
                "sort": undefined,
                "sort_direction": undefined,
                "sources": undefined,
                "statuses": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "amount_cents": 0,
                    "encounter_external_id": "string",
                    "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "patient_external_id": "string",
                    "patient_payment_id": "string",
                    "payment_name": "string",
                    "payment_note": "string",
                    "payment_timestamp": "2023-01-01T00:00:00Z",
                    "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "source": "MANUAL_ENTRY",
                    "source_internal_id": "string",
                    "status": "PENDING",
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "amount_cents": 0,
                      "encounter_external_id": "string",
                      "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "patient_external_id": "string",
                      "patient_payment_id": "string",
                      "payment_name": "string",
                      "payment_note": "string",
                      "payment_timestamp": "2023-01-01T00:00:00Z",
                      "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "source": "MANUAL_ENTRY",
                      "source_internal_id": "string",
                      "status": "PENDING",
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3",
              "pathParameters": {},
              "queryParameters": {
                "encounter_external_id": undefined,
                "limit": 0,
                "page_token": undefined,
                "patient_external_id": "string",
                "service_line_id": undefined,
                "sort": undefined,
                "sort_direction": undefined,
                "sources": undefined,
                "statuses": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "search",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Search",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patient-payments/v3",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "Defaults to 100. The value must be greater than 0 and less than 1000.",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "patient_external_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PatientExternalId",
                },
                "type": "optional",
              },
            },
            {
              "key": "encounter_external_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:EncounterExternalId",
                },
                "type": "optional",
              },
            },
            {
              "key": "service_line_id",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:ServiceLineId",
                },
                "type": "optional",
              },
            },
            {
              "key": "sources",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_patient-payments/v3:PatientPaymentSource",
                },
                "type": "optional",
              },
            },
            {
              "key": "statuses",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_patient-payments/v3:PatientPaymentStatus",
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to payment_timestamp",
              "key": "sort",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_patient-payments/v3:PatientPaymentSortField",
                },
                "type": "optional",
              },
            },
            {
              "description": "Sort direction. Defaults to descending order if not provided.",
              "key": "sort_direction",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:SortDirection",
                },
                "type": "optional",
              },
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patient-payments/v3:PatientPaymentsPage",
              },
            },
          },
          "urlSlug": "search",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Returns the patient payment for the provided patient_payment_id.
If the patient payment's organization_id does not match the current organization_id of the
authenticated user, then response code of 403 will be returned.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "amount_cents": 0,
                "encounter_external_id": "string",
                "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "patient_external_id": "string",
                "patient_payment_id": "string",
                "payment_name": "string",
                "payment_note": "string",
                "payment_timestamp": "2023-01-01T00:00:00Z",
                "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "source": "MANUAL_ENTRY",
                "source_internal_id": "string",
                "status": "PENDING",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "amount_cents": 0,
                  "encounter_external_id": "string",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "patient_external_id": "string",
                  "patient_payment_id": "string",
                  "payment_name": "string",
                  "payment_note": "string",
                  "payment_timestamp": "2023-01-01T00:00:00Z",
                  "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "source": "MANUAL_ENTRY",
                  "source_internal_id": "string",
                  "status": "PENDING",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patient-payments/v3",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "patient_payment_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "patient_payment_id",
                "type": {
                  "type": "id",
                  "value": "type_patient-payments/v3:PatientPaymentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patient-payments/v3:PatientPayment",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Creates a new patient payment record and returns the newly created PatientPayment object.
It is expected that the organization_id of the input patient_payment object will match
the current organization_id of the auathenticated user. Otherwise, response code of 403 will be returned.
It is also expected that one of \`patient_external_id\`, \`encounter_external_id\`, or \`service_line_id\` is provided.
If more than one of \`patient_external_id\`, \`encounter_external_id\`, or \`service_line_id\` are provided, then the most
specific property will be used.
The order of specificity from the most specific to least specific is \`service_line_id\`, \`encounter_external_id\`, and
\`patient_external_id\`.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "amount_cents": 0,
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "amount_cents": 0,
                },
              },
              "responseBody": {
                "amount_cents": 0,
                "encounter_external_id": "string",
                "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "patient_external_id": "string",
                "patient_payment_id": "string",
                "payment_name": "string",
                "payment_note": "string",
                "payment_timestamp": "2023-01-01T00:00:00Z",
                "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "source": "MANUAL_ENTRY",
                "source_internal_id": "string",
                "status": "PENDING",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "amount_cents": 0,
                  "encounter_external_id": "string",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "patient_external_id": "string",
                  "patient_payment_id": "string",
                  "payment_name": "string",
                  "payment_note": "string",
                  "payment_timestamp": "2023-01-01T00:00:00Z",
                  "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "source": "MANUAL_ENTRY",
                  "source_internal_id": "string",
                  "status": "PENDING",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "amount_cents": 0,
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "amount_cents": 0,
                },
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "amount_cents": 0,
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "amount_cents": 0,
                },
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patient-payments/v3",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "amount_cents",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                    },
                  },
                },
                {
                  "key": "payment_timestamp",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "status",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_patient-payments/v3:PatientPaymentStatus",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "payment_name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "payment_note",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "patient_external_id",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:PatientExternalId",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "encounter_external_id",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:EncounterExternalId",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "service_line_id",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:ServiceLineId",
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patient-payments/v3:PatientPayment",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Updates the patient payment record matching the provided patient_payment_id.
If the matching record's organization_id does not match the authenticated user's
current organization_id, then a response code of \`403\` will be returned.
If more than one of \`patient_external_id\`, \`encounter_external_id\`, or \`service_line_id\` are provided, then the most
specific property will be used.
The order of specificity from the most specific to least specific is \`service_line_id\`, \`encounter_external_id\`, and
\`patient_external_id\`.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "amount_cents": 0,
                "encounter_external_id": "string",
                "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "patient_external_id": "string",
                "patient_payment_id": "string",
                "payment_name": "string",
                "payment_note": "string",
                "payment_timestamp": "2023-01-01T00:00:00Z",
                "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "source": "MANUAL_ENTRY",
                "source_internal_id": "string",
                "status": "PENDING",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "amount_cents": 0,
                  "encounter_external_id": "string",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "patient_external_id": "string",
                  "patient_payment_id": "string",
                  "payment_name": "string",
                  "payment_note": "string",
                  "payment_timestamp": "2023-01-01T00:00:00Z",
                  "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "source": "MANUAL_ENTRY",
                  "source_internal_id": "string",
                  "status": "PENDING",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patient-payments/v3",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "patient_payment_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "patient_payment_id",
                "type": {
                  "type": "id",
                  "value": "type_patient-payments/v3:PatientPaymentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "amount_cents",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "payment_timestamp",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "status",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_patient-payments/v3:PatientPaymentStatus",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "payment_name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "payment_note",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "patient_external_id",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:PatientExternalId",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "encounter_external_id",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:EncounterExternalId",
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "service_line_id",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:ServiceLineId",
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patient-payments/v3:PatientPayment",
              },
            },
          },
          "urlSlug": "update",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Deletes the patient payment record matching the provided patient_payment_id.
If the matching record's organization_id does not match the authenticated user's
current organization_id, then a response code of \`403\` will be returned.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patient-payments/v3/:patient_payment_id",
              "pathParameters": {
                "patient_payment_id": ":patient_payment_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "delete",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patient-payments/v3",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "patient_payment_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "patient_payment_id",
                "type": {
                  "type": "id",
                  "value": "type_patient-payments/v3:PatientPaymentId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete",
        },
      ],
      "name": "v3",
      "parent": "subpackage_patient-payments",
      "pointsTo": undefined,
      "subpackageId": "subpackage_patient-payments/v3",
      "subpackages": [],
      "types": [
        "type_patient-payments/v3:PatientPaymentId",
        "type_patient-payments/v3:PatientPaymentSortField",
        "type_patient-payments/v3:PatientPaymentSource",
        "type_patient-payments/v3:PatientPayment",
        "type_patient-payments/v3:PatientPaymentsPage",
        "type_patient-payments/v3:PatientPaymentStatus",
      ],
      "urlSlug": "v-3",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_patients": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patients/v1",
              "pathParameters": {},
              "queryParameters": {
                "date_of_birth": undefined,
                "has_secondary_insurance": undefined,
                "limit": 0,
                "multi_field_search_string": "string",
                "page_token": undefined,
                "sort": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "date_of_birth": "string",
                    "days_since_last_invoice": 0,
                    "encounter_count": 0,
                    "first_name": "string",
                    "has_secondary_insurance": true,
                    "insurance_payment_total_cents": 0,
                    "last_name": "string",
                    "manual_adjustments_total_cents": 0,
                    "most_recent_date_of_service": "string",
                    "most_recent_encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "patient": "string",
                    "patient_balance_excluding_open_invoice_total_cents": 0,
                    "patient_balance_total_cents": 0,
                    "patient_payment_total_cents": 0,
                    "pending_invoice_count": 0,
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "date_of_birth": "string",
                      "days_since_last_invoice": 0,
                      "encounter_count": 0,
                      "first_name": "string",
                      "has_secondary_insurance": true,
                      "insurance_payment_total_cents": 0,
                      "last_name": "string",
                      "manual_adjustments_total_cents": 0,
                      "most_recent_date_of_service": "string",
                      "most_recent_encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "patient": "string",
                      "patient_balance_excluding_open_invoice_total_cents": 0,
                      "patient_balance_total_cents": 0,
                      "patient_payment_total_cents": 0,
                      "pending_invoice_count": 0,
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "getAll",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get All",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patients/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "multi_field_search_string",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "date_of_birth",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:Date",
                },
                "type": "optional",
              },
            },
            {
              "key": "has_secondary_insurance",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to most recent date of service desc",
              "key": "sort",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_patients:PatientRollupSummarySortOptions",
                },
                "type": "optional",
              },
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patients:PatientRollupSummariesPage",
              },
            },
          },
          "urlSlug": "get-all",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_patients:MissingPrimarySubscriberErrorMessage",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_patients:InvalidBase64EncodingErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Missing Primary Subscriber Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "MissingPrimarySubscriberError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_patients:MissingPrimarySubscriberErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Invalid Base 64 Encoding Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "InvalidBase64EncodingError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_patients:InvalidBase64EncodingErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patients/v1/:patient_external_id",
              "pathParameters": {
                "patient_external_id": ":patient_external_id",
              },
              "queryParameters": {
                "encoded": true,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "insurance_payment_total_cents": 0,
                "manual_adjustments_total_cents": 0,
                "ordered_adjustment_ids": [
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                ],
                "ordered_encounter_ids": [
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                ],
                "ordered_patient_payment_ids": [
                  "string",
                ],
                "patient": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "string",
                  "email": "string",
                  "email_consent": true,
                  "external_id": "string",
                  "first_name": "string",
                  "gender": "male",
                  "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "last_name": "string",
                  "phone_consent": true,
                  "phone_numbers": [
                    {
                      "number": "string",
                      "type": "Home",
                    },
                  ],
                },
                "patient_balance_excluding_open_invoice_total_cents": 0,
                "patient_balance_total_cents": 0,
                "patient_payment_total_cents": 0,
                "subscriber_primary": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "string",
                  "first_name": "string",
                  "gender": "male",
                  "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "insurance_card": {
                    "group_number": "string",
                    "image_url_back": "string",
                    "image_url_front": "string",
                    "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_type": "01",
                    "member_id": "string",
                    "payer_id": "string",
                    "payer_name": "string",
                    "plan_name": "string",
                    "plan_type": "09",
                    "rx_bin": "string",
                    "rx_pcn": "string",
                  },
                  "last_name": "string",
                  "patient_relationship_to_subscriber_code": "01",
                },
                "subscriber_secondary": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "date_of_birth": "string",
                  "first_name": "string",
                  "gender": "male",
                  "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "insurance_card": {
                    "group_number": "string",
                    "image_url_back": "string",
                    "image_url_front": "string",
                    "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_type": "01",
                    "member_id": "string",
                    "payer_id": "string",
                    "payer_name": "string",
                    "plan_name": "string",
                    "plan_type": "09",
                    "rx_bin": "string",
                    "rx_pcn": "string",
                  },
                  "last_name": "string",
                  "patient_relationship_to_subscriber_code": "01",
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "insurance_payment_total_cents": 0,
                  "manual_adjustments_total_cents": 0,
                  "ordered_adjustment_ids": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                  "ordered_encounter_ids": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                  "ordered_patient_payment_ids": [
                    "string",
                  ],
                  "patient": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "date_of_birth": "string",
                    "email": "string",
                    "email_consent": true,
                    "external_id": "string",
                    "first_name": "string",
                    "gender": "male",
                    "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "last_name": "string",
                    "phone_consent": true,
                    "phone_numbers": [
                      {
                        "number": "string",
                        "type": "Home",
                      },
                    ],
                  },
                  "patient_balance_excluding_open_invoice_total_cents": 0,
                  "patient_balance_total_cents": 0,
                  "patient_payment_total_cents": 0,
                  "subscriber_primary": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "date_of_birth": "string",
                    "first_name": "string",
                    "gender": "male",
                    "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_card": {
                      "group_number": "string",
                      "image_url_back": "string",
                      "image_url_front": "string",
                      "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "insurance_type": "01",
                      "member_id": "string",
                      "payer_id": "string",
                      "payer_name": "string",
                      "plan_name": "string",
                      "plan_type": "09",
                      "rx_bin": "string",
                      "rx_pcn": "string",
                    },
                    "last_name": "string",
                    "patient_relationship_to_subscriber_code": "01",
                  },
                  "subscriber_secondary": {
                    "address": {
                      "address1": "string",
                      "address2": "string",
                      "city": "string",
                      "state": "AA",
                      "zip_code": "string",
                      "zip_plus_four_code": "string",
                    },
                    "date_of_birth": "string",
                    "first_name": "string",
                    "gender": "male",
                    "individual_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "insurance_card": {
                      "group_number": "string",
                      "image_url_back": "string",
                      "image_url_front": "string",
                      "insurance_card_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "insurance_type": "01",
                      "member_id": "string",
                      "payer_id": "string",
                      "payer_name": "string",
                      "plan_name": "string",
                      "plan_type": "09",
                      "rx_bin": "string",
                      "rx_pcn": "string",
                    },
                    "last_name": "string",
                    "patient_relationship_to_subscriber_code": "01",
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patients/v1/:patient_external_id",
              "pathParameters": {
                "patient_external_id": ":patient_external_id",
              },
              "queryParameters": {
                "encoded": true,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "MissingPrimarySubscriberError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "MissingPrimarySubscriberError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/patients/v1/:patient_external_id",
              "pathParameters": {
                "patient_external_id": ":patient_external_id",
              },
              "queryParameters": {
                "encoded": true,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "InvalidBase64EncodingError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "InvalidBase64EncodingError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/patients/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "patient_external_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "patient_external_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:PatientExternalId",
                },
              },
            ],
          },
          "queryParameters": [
            {
              "description": "Denotes whether the patient_external_id is base64 encoded. This can be used to
enable sending patient_external_ids which have otherwise illegal characters like
slashes.
",
              "key": "encoded",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                  },
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_patients:PatientRollup",
              },
            },
          },
          "urlSlug": "get",
        },
      ],
      "name": "patients",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_patients",
      "subpackages": [],
      "types": [
        "type_patients:PatientRollupSummariesPage",
        "type_patients:PatientRollupSummarySortOptions",
        "type_patients:PatientRollupSummary",
        "type_patients:PatientRollup",
        "type_patients:MissingPrimarySubscriberErrorMessage",
        "type_patients:BaseErrorMessage",
        "type_patients:InvalidBase64EncodingErrorMessage",
      ],
      "urlSlug": "patients",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_payers": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payers/v3/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "payer_id": "string",
                "payer_name": "string",
                "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "payer_id": "string",
                  "payer_name": "string",
                  "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": [
            "get-payer",
          ],
          "name": "Get payer",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/payers/v3",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "payer_uuid",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "payer_uuid",
                "type": {
                  "type": "id",
                  "value": "type_payers:PayerUuid",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_payers:Payer",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payers/v3",
              "pathParameters": {},
              "queryParameters": {
                "limit": 0,
                "page_token": undefined,
                "search_term": "string",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "payer_id": "string",
                    "payer_name": "string",
                    "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "payer_id": "string",
                      "payer_name": "string",
                      "payer_uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "getAll",
          "method": "GET",
          "migratedFromUrlSlugs": [
            "get-all-payers",
          ],
          "name": "Get all payers",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/payers/v3",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "search_term",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_payers:PayerPage",
              },
            },
          },
          "urlSlug": "get-all",
        },
      ],
      "name": "payers",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_payers",
      "subpackages": [],
      "types": [
        "type_payers:PayerUuid",
        "type_payers:PayerId",
        "type_payers:PayerName",
        "type_payers:PayerPage",
        "type_payers:Payer",
      ],
      "urlSlug": "payers",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_payment-account-configs": {
      "description": "PaymentAccountConfig reprents a configuration record for integration with third party payment processors.
If an organization has some or all of their billing providers with their own third party payment processor
accounts, then an instance of PaymentAccountConfig must be created for each billing provider npi with their own third
party payment processor account. There must not be any overlap of such PaymentAccountConfig records with respect to the
billing provider npi, i.e., there must be only one PaymentAccountConfig identified by the billing provider npi.
The only exception is the default billing provider npi, represented as "*". The PaymentAccountConfig containing the default
billing provider npi ("*") will be used in case the billing provider npi cannot be matched to a PaymentAccountConfig.
If all of the billing providers for an organization share the same third party payment processor account, then simple ["*"]
as the billing_provider_npis should suffice.
",
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Returns PaymentAccountConfig identified by the id.
If the given id is not found, then 404 response will be returned.
If the authenticated user does not have permission to view the PaymentAccountConfig
identified by the id, then 403 response will be returned
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "account_name": "string",
                "billing_provider_npis": [
                  "string",
                ],
                "description": "string",
                "enabled": true,
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "site": "string",
                "type": "chargebee",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "account_name": "string",
                  "billing_provider_npis": [
                    "string",
                  ],
                  "description": "string",
                  "enabled": true,
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "site": "string",
                  "type": "chargebee",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/payment_account_configs/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "description": "PaymentAccountConfigId to be returned",
                "key": "id",
                "type": {
                  "type": "id",
                  "value": "type_payment-account-configs:PaymentAccountConfigId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_payment-account-configs:PaymentAccountConfig",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Returns all PaymentAccountConfigs for the authenticated user's organization",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": [
                {
                  "account_name": "string",
                  "billing_provider_npis": [
                    "string",
                  ],
                  "description": "string",
                  "enabled": true,
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "site": "string",
                  "type": "chargebee",
                },
              ],
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "account_name": "string",
                    "billing_provider_npis": [
                      "string",
                    ],
                    "description": "string",
                    "enabled": true,
                    "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "site": "string",
                    "type": "chargebee",
                  },
                ],
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "getAll",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get All",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/payment_account_configs/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "itemType": {
                  "type": "id",
                  "value": "type_payment-account-configs:PaymentAccountConfig",
                },
                "type": "list",
              },
            },
          },
          "urlSlug": "get-all",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Creates the given PaymentAccountConfig, and returns the newly created PaymentAccountConfig.
If the provided PaymentAccountApiToken is either invalid or does not have all of the requried permissions, then 422 response will be returned.
If there already exists a PaymentAccountConfig for the organization with the same npi, then 422 response will be returned.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
            {
              "statusCode": 409,
              "type": {
                "type": "id",
                "value": "type_commons:EntityConflictErrorMessage",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_payment-account-configs:PaymentAccountConfigNameAlreadyExistsErrorContent",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Entity Conflict Error",
              "statusCode": 409,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityConflictError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityConflictErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Payment Account Config Name Already Exists Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "PaymentAccountConfigNameAlreadyExistsError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_payment-account-configs:PaymentAccountConfigNameAlreadyExistsErrorContent",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "account_name": "string",
                "api_token": "string",
                "billing_provider_npis": [
                  "string",
                ],
                "enabled": true,
                "type": "chargebee",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "account_name": "string",
                  "api_token": "string",
                  "billing_provider_npis": [
                    "string",
                  ],
                  "enabled": true,
                  "type": "chargebee",
                },
              },
              "responseBody": {
                "account_name": "string",
                "billing_provider_npis": [
                  "string",
                ],
                "description": "string",
                "enabled": true,
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "site": "string",
                "type": "chargebee",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "account_name": "string",
                  "billing_provider_npis": [
                    "string",
                  ],
                  "description": "string",
                  "enabled": true,
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "site": "string",
                  "type": "chargebee",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "account_name": "string",
                "api_token": "string",
                "billing_provider_npis": [
                  "string",
                ],
                "enabled": true,
                "type": "chargebee",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "account_name": "string",
                  "api_token": "string",
                  "billing_provider_npis": [
                    "string",
                  ],
                  "enabled": true,
                  "type": "chargebee",
                },
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "account_name": "string",
                "api_token": "string",
                "billing_provider_npis": [
                  "string",
                ],
                "enabled": true,
                "type": "chargebee",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "account_name": "string",
                  "api_token": "string",
                  "billing_provider_npis": [
                    "string",
                  ],
                  "enabled": true,
                  "type": "chargebee",
                },
              },
              "responseBody": {
                "content": {
                  "entity_name": "string",
                },
                "errorName": "EntityConflictError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "entity_name": "string",
                  },
                  "errorName": "EntityConflictError",
                },
              },
              "responseStatusCode": 409,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "account_name": "string",
                "api_token": "string",
                "billing_provider_npis": [
                  "string",
                ],
                "enabled": true,
                "type": "chargebee",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "account_name": "string",
                  "api_token": "string",
                  "billing_provider_npis": [
                    "string",
                  ],
                  "enabled": true,
                  "type": "chargebee",
                },
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "PaymentAccountConfigNameAlreadyExistsError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "PaymentAccountConfigNameAlreadyExistsError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/payment_account_configs/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_payment-account-configs:PaymentAccountConfigCreate",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_payment-account-configs:PaymentAccountConfig",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Patch PaymentAccountConfig identified the id.
If PaymentAccountConfig is not found by the provided id, then 404 will be returned.
If the authenticated user does not have the permission to update the PaymentAccountConfig identified by the id, then 403 will be returned.
If the provided PaymentAccountApiToken is either invalid or does not have all of teh requried permissions, then 422 response will be returned.
If there already exists a PaymentAccountConfig for the organization with the same npi, then 422 response will be returned.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_payment-account-configs:PaymentAccountConfigNameAlreadyExistsErrorContent",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Payment Account Config Name Already Exists Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "PaymentAccountConfigNameAlreadyExistsError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_payment-account-configs:PaymentAccountConfigNameAlreadyExistsErrorContent",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {
                "type": "chargebee",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "type": "chargebee",
                },
              },
              "responseBody": {
                "account_name": "string",
                "billing_provider_npis": [
                  "string",
                ],
                "description": "string",
                "enabled": true,
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "site": "string",
                "type": "chargebee",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "account_name": "string",
                  "billing_provider_npis": [
                    "string",
                  ],
                  "description": "string",
                  "enabled": true,
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "site": "string",
                  "type": "chargebee",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {
                "type": "chargebee",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "type": "chargebee",
                },
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {
                "type": "chargebee",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "type": "chargebee",
                },
              },
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {
                "type": "chargebee",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "type": "chargebee",
                },
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {
                "type": "chargebee",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "type": "chargebee",
                },
              },
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "PaymentAccountConfigNameAlreadyExistsError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "PaymentAccountConfigNameAlreadyExistsError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "patch",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Patch",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/payment_account_configs/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "description": "PaymentAccountConfigId to be patched",
                "key": "id",
                "type": {
                  "type": "id",
                  "value": "type_payment-account-configs:PaymentAccountConfigId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_payment-account-configs:PaymentAccountConfigPatch",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_payment-account-configs:PaymentAccountConfig",
              },
            },
          },
          "urlSlug": "patch",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Deletes the PaymentAccountConfig identified by the id.
If PaymentAccountConfig is not found by the provided id, then 404 will be returned.
If the authenticated user does not have the permission to update the PaymentAccountConfig identified
by the id, then 403 will be returned
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
          ],
          "headers": [],
          "id": "delete",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/payment_account_configs/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "description": "PaymentAccountConfigId to be deleted",
                "key": "id",
                "type": {
                  "type": "id",
                  "value": "type_payment-account-configs:PaymentAccountConfigId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Verify that the provided claims can be invoiced for the provided patient_external_id.
Invoice creation requires that there exists a valid PaymentAccountConfig for the claim's billing provider npi
and the third party payment processor's customer can be identified by the patient_external_id.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1/verify_can_invoice",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "claim_ids": [
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                ],
                "patient_external_id": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "claim_ids": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                  "patient_external_id": "string",
                },
              },
              "responseBody": {
                "items": [
                  {
                    "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "customer_url": "string",
                    "patient_external_id": "string",
                    "result": "Success",
                  },
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "customer_url": "string",
                      "patient_external_id": "string",
                      "result": "Success",
                    },
                  ],
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1/verify_can_invoice",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "claim_ids": [
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                ],
                "patient_external_id": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "claim_ids": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                  "patient_external_id": "string",
                },
              },
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
          ],
          "headers": [],
          "id": "verifyCanInvoice",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Verify Can Invoice",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/payment_account_configs/v1",
              },
              {
                "type": "literal",
                "value": "/verify_can_invoice",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_payment-account-configs:VerifyCanInvoiceRequest",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_payment-account-configs:VerifyCanInvoiceResponse",
              },
            },
          },
          "urlSlug": "verify-can-invoice",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Verify that the provided PaymentAccountApiToken is a valid token.
Verification includes that the provided token has all of the appropriate permissions.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1/verify_api_token",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": "string",
              "requestBodyV3": {
                "type": "json",
                "value": "string",
              },
              "responseBody": true,
              "responseBodyV3": {
                "type": "json",
                "value": true,
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "verifyApiToken",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Verify Api Token",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/payment_account_configs/v1",
              },
              {
                "type": "literal",
                "value": "/verify_api_token",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_payment-account-configs:PaymentAccountApiToken",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
            },
          },
          "urlSlug": "verify-api-token",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Verifies that the provided PatientExternalId is associated with a third party payment processor's customer.
If the customer exists, then the URL for the customer specific page will be return. Otherwise, the URL for the general
customer page will be returned (this generally is a page listing the existing customers).
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/payment_account_configs/v1/verify_customer_exists",
              "pathParameters": {},
              "queryParameters": {
                "billing_provider_npi": "string",
                "check_email_exists": true,
                "patient_external_id": "string",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "customer_url": "string",
                "result": "Success",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "customer_url": "string",
                  "result": "Success",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "verifyCustomerExists",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Verify Customer Exists",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/payment_account_configs/v1",
              },
              {
                "type": "literal",
                "value": "/verify_customer_exists",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "PatientExternalId to lookup",
              "key": "patient_external_id",
              "type": {
                "type": "id",
                "value": "type_commons:PatientExternalId",
              },
            },
            {
              "description": "If provided, the API token associated with the BillingProviderNpi will be used to verify",
              "key": "billing_provider_npi",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_payment-account-configs:BillingProviderNpi",
                },
                "type": "optional",
              },
            },
            {
              "description": "If provided, then will also check to see if customer has email. If not, then return false. Default = True",
              "key": "check_email_exists",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                  },
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_payment-account-configs:VerifyCustomerExistsResponse",
              },
            },
          },
          "urlSlug": "verify-customer-exists",
        },
      ],
      "name": "payment-account-configs",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_payment-account-configs",
      "subpackages": [],
      "types": [
        "type_payment-account-configs:PaymentAccountConfigId",
        "type_payment-account-configs:PaymentAccountApiToken",
        "type_payment-account-configs:BillingProviderNpi",
        "type_payment-account-configs:PaymentAccountType",
        "type_payment-account-configs:PaymentAccountConfig",
        "type_payment-account-configs:ChargebeePaymentAccountConfig",
        "type_payment-account-configs:CedarPaymentAccountConfig",
        "type_payment-account-configs:SquarePaymentAccountConfig",
        "type_payment-account-configs:StripePaymentAccountConfig",
        "type_payment-account-configs:PaymentAccountConfigCreate",
        "type_payment-account-configs:ChargebeePaymentAccountConfigCreate",
        "type_payment-account-configs:SquarePaymentAccountConfigCreate",
        "type_payment-account-configs:StripePaymentAccountConfigCreate",
        "type_payment-account-configs:PaymentAccountConfigPatch",
        "type_payment-account-configs:ChargebeePaymentAccountConfigPatch",
        "type_payment-account-configs:SquarePaymentAccountConfigPatch",
        "type_payment-account-configs:StripePaymentAccountConfigPatch",
        "type_payment-account-configs:VerifyCanInvoiceResultType",
        "type_payment-account-configs:VerifyCanInvoiceRequest",
        "type_payment-account-configs:VerifyCanInvoiceResponse",
        "type_payment-account-configs:VerifyCanInvoiceResponseItem",
        "type_payment-account-configs:VerifyCustomerExistsResponse",
        "type_payment-account-configs:PaymentAccountConfigNameAlreadyExistsErrorContent",
      ],
      "urlSlug": "payment-account-configs",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_permissions": {
      "description": undefined,
      "endpoints": [],
      "name": "permissions",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_permissions",
      "subpackages": [],
      "types": [
        "type_permissions:PermissionsEnum",
      ],
      "urlSlug": "permissions",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_pipeline-commons": {
      "description": undefined,
      "endpoints": [],
      "name": "pipeline-commons",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_pipeline-commons",
      "subpackages": [],
      "types": [
        "type_pipeline-commons:PipelineId",
        "type_pipeline-commons:PhaseId",
        "type_pipeline-commons:StepId",
        "type_pipeline-commons:RuleId",
        "type_pipeline-commons:ConfigurableRuleId",
      ],
      "urlSlug": "pipeline-commons",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_pipeline-configuration": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/pipeline-configuration/v2",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "pipelines": [
                  {
                    "description": "string",
                    "id": "string",
                    "name": "string",
                    "phases": [
                      {
                        "description": "string",
                        "id": "string",
                        "name": "string",
                        "steps": [
                          {
                            "description": "string",
                            "id": "string",
                            "name": "string",
                            "rules": [
                              {
                                "description": "string",
                                "id": "string",
                                "name": "string",
                                "type": "ordinary_rule",
                              },
                            ],
                            "supports_configurable_rules": true,
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pipelines": [
                    {
                      "description": "string",
                      "id": "string",
                      "name": "string",
                      "phases": [
                        {
                          "description": "string",
                          "id": "string",
                          "name": "string",
                          "steps": [
                            {
                              "description": "string",
                              "id": "string",
                              "name": "string",
                              "rules": [
                                {
                                  "description": "string",
                                  "id": "string",
                                  "name": "string",
                                  "type": "ordinary_rule",
                                },
                              ],
                              "supports_configurable_rules": true,
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get_pipeline_configurations",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Pipeline Configurations",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/pipeline-configuration/v2",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_pipeline-configuration:PipelineConfiguration",
              },
            },
          },
          "urlSlug": "get-pipeline-configurations",
        },
      ],
      "name": "pipeline-configuration",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_pipeline-configuration",
      "subpackages": [],
      "types": [
        "type_pipeline-configuration:PipelineConfiguration",
        "type_pipeline-configuration:Pipeline",
        "type_pipeline-configuration:Phase",
        "type_pipeline-configuration:Step",
        "type_pipeline-configuration:OrdinaryRule",
        "type_pipeline-configuration:ConfigurableRuleSummary",
        "type_pipeline-configuration:Rule",
      ],
      "urlSlug": "pipeline-configuration",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_remits": {
      "description": undefined,
      "endpoints": [],
      "name": "remits",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_remits",
      "subpackages": [
        "subpackage_remits/v1",
      ],
      "types": [],
      "urlSlug": "remits",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_remits/v1": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": "Returns all remits for the claim_id.
",
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/remits/v1",
              "pathParameters": {},
              "queryParameters": {
                "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "sort": "payer_name",
                "sort_direction": "asc",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": [
                {
                  "adjudication_date": "string",
                  "check_amount_cents": 0,
                  "check_date": "2023-01-01",
                  "check_image_download_url": {
                    "expiration_time_seconds": 0,
                    "url": "string",
                  },
                  "check_number": "string",
                  "claim_status_code": "processed_as_primary",
                  "content_edi": {
                    "claim_section": {
                      "begin_line_number": 0,
                      "end_line_number": 0,
                    },
                    "content": {
                      "type": "content_string",
                      "value": "string",
                    },
                    "service_line_sections": {
                      "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                        "begin_line_number": 0,
                        "end_line_number": 0,
                      },
                    },
                  },
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "included_claims_count": 0,
                  "payer_identifier": "string",
                  "payer_name": "string",
                  "posted_datetime": "2023-01-01T00:00:00Z",
                  "source": {
                    "type": "clearinghouse",
                  },
                },
              ],
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "adjudication_date": "string",
                    "check_amount_cents": 0,
                    "check_date": "2023-01-01",
                    "check_image_download_url": {
                      "expiration_time_seconds": 0,
                      "url": "string",
                    },
                    "check_number": "string",
                    "claim_status_code": "processed_as_primary",
                    "content_edi": {
                      "claim_section": {
                        "begin_line_number": 0,
                        "end_line_number": 0,
                      },
                      "content": {
                        "type": "content_string",
                        "value": "string",
                      },
                      "service_line_sections": {
                        "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                          "begin_line_number": 0,
                          "end_line_number": 0,
                        },
                      },
                    },
                    "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "included_claims_count": 0,
                    "payer_identifier": "string",
                    "payer_name": "string",
                    "posted_datetime": "2023-01-01T00:00:00Z",
                    "source": {
                      "type": "clearinghouse",
                    },
                  },
                ],
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/remits/v1",
              "pathParameters": {},
              "queryParameters": {
                "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "sort": "payer_name",
                "sort_direction": "asc",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/remits/v1",
              "pathParameters": {},
              "queryParameters": {
                "claim_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "sort": "payer_name",
                "sort_direction": "asc",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
          ],
          "headers": [],
          "id": "get_multi",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Multi",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/remits/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "Retrieve all remits for the given claim_id.",
              "key": "claim_id",
              "type": {
                "type": "id",
                "value": "type_commons:ClaimId",
              },
            },
            {
              "description": "Defaults to adjudication_date",
              "key": "sort",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_remits/v1:RemitSortField",
                },
                "type": "optional",
              },
            },
            {
              "description": "Sort direction. Defaults to descending order if not provided.",
              "key": "sort_direction",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:SortDirection",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "itemType": {
                  "type": "id",
                  "value": "type_remits/v1:Remit",
                },
                "type": "list",
              },
            },
          },
          "urlSlug": "get-multi",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/remits/v1/paged",
              "pathParameters": {},
              "queryParameters": {
                "check_amount_cents": undefined,
                "check_number": undefined,
                "limit": 0,
                "page_token": "string",
                "payer_uuid": undefined,
                "post_status": undefined,
                "sort": undefined,
                "sort_direction": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "page": {
                  "items": [
                    {
                      "adjudication_date": "string",
                      "check_amount_cents": 0,
                      "check_date": "2023-01-01",
                      "check_image_download_url": {
                        "expiration_time_seconds": 0,
                        "url": "string",
                      },
                      "check_number": "string",
                      "claim_status_code": "processed_as_primary",
                      "content_edi": {
                        "claim_section": {
                          "begin_line_number": 0,
                          "end_line_number": 0,
                        },
                        "content": {
                          "type": "content_string",
                          "value": "string",
                        },
                        "service_line_sections": {
                          "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                            "begin_line_number": 0,
                            "end_line_number": 0,
                          },
                        },
                      },
                      "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "included_claims_count": 0,
                      "payer_identifier": "string",
                      "payer_name": "string",
                      "posted_datetime": "2023-01-01T00:00:00Z",
                      "source": {
                        "type": "clearinghouse",
                      },
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "page": {
                    "items": [
                      {
                        "adjudication_date": "string",
                        "check_amount_cents": 0,
                        "check_date": "2023-01-01",
                        "check_image_download_url": {
                          "expiration_time_seconds": 0,
                          "url": "string",
                        },
                        "check_number": "string",
                        "claim_status_code": "processed_as_primary",
                        "content_edi": {
                          "claim_section": {
                            "begin_line_number": 0,
                            "end_line_number": 0,
                          },
                          "content": {
                            "type": "content_string",
                            "value": "string",
                          },
                          "service_line_sections": {
                            "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                              "begin_line_number": 0,
                              "end_line_number": 0,
                            },
                          },
                        },
                        "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "included_claims_count": 0,
                        "payer_identifier": "string",
                        "payer_name": "string",
                        "posted_datetime": "2023-01-01T00:00:00Z",
                        "source": {
                          "type": "clearinghouse",
                        },
                      },
                    ],
                    "next_page_token": "string",
                    "prev_page_token": "string",
                  },
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get_multi_paged",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Multi Paged",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/remits/v1",
              },
              {
                "type": "literal",
                "value": "/paged",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
            {
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Retrieve only remits for the given post_status.",
              "key": "post_status",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_remits/v1:RemitPostStatus",
                },
                "type": "optional",
              },
            },
            {
              "description": "Retrieve only remits that include the given check_number.",
              "key": "check_number",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Retrieve only remits that include a check with the exact amount in cents.",
              "key": "check_amount_cents",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Retrieve only remits that refer to the given payer.",
              "key": "payer_uuid",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_payers:PayerUuid",
                },
                "type": "optional",
              },
            },
            {
              "description": "Defaults to check_date",
              "key": "sort",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_remits/v1:GetMultiRemitsPagedSortField",
                },
                "type": "optional",
              },
            },
            {
              "description": "Sort direction. Defaults to descending order if not provided.",
              "key": "sort_direction",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:SortDirection",
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_remits/v1:GetMultiRemitsPagedResponse",
              },
            },
          },
          "urlSlug": "get-multi-paged",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
            {
              "statusCode": 409,
              "type": {
                "type": "id",
                "value": "type_commons:EntityConflictErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Entity Conflict Error",
              "statusCode": 409,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityConflictError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityConflictErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/remits/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/post",
              "pathParameters": {
                "remit_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "remit": {
                  "adjudication_date": "string",
                  "check_amount_cents": 0,
                  "check_date": "2023-01-01",
                  "check_image_download_url": {
                    "expiration_time_seconds": 0,
                    "url": "string",
                  },
                  "check_number": "string",
                  "claim_status_code": "processed_as_primary",
                  "content_edi": {
                    "claim_section": {
                      "begin_line_number": 0,
                      "end_line_number": 0,
                    },
                    "content": {
                      "type": "content_string",
                      "value": "string",
                    },
                    "service_line_sections": {
                      "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                        "begin_line_number": 0,
                        "end_line_number": 0,
                      },
                    },
                  },
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "included_claims_count": 0,
                  "payer_identifier": "string",
                  "payer_name": "string",
                  "posted_datetime": "2023-01-01T00:00:00Z",
                  "source": {
                    "type": "clearinghouse",
                  },
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "remit": {
                    "adjudication_date": "string",
                    "check_amount_cents": 0,
                    "check_date": "2023-01-01",
                    "check_image_download_url": {
                      "expiration_time_seconds": 0,
                      "url": "string",
                    },
                    "check_number": "string",
                    "claim_status_code": "processed_as_primary",
                    "content_edi": {
                      "claim_section": {
                        "begin_line_number": 0,
                        "end_line_number": 0,
                      },
                      "content": {
                        "type": "content_string",
                        "value": "string",
                      },
                      "service_line_sections": {
                        "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                          "begin_line_number": 0,
                          "end_line_number": 0,
                        },
                      },
                    },
                    "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "included_claims_count": 0,
                    "payer_identifier": "string",
                    "payer_name": "string",
                    "posted_datetime": "2023-01-01T00:00:00Z",
                    "source": {
                      "type": "clearinghouse",
                    },
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/remits/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/post",
              "pathParameters": {
                "remit_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/remits/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/post",
              "pathParameters": {
                "remit_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/remits/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/post",
              "pathParameters": {
                "remit_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "entity_name": "string",
                },
                "errorName": "EntityConflictError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "entity_name": "string",
                  },
                  "errorName": "EntityConflictError",
                },
              },
              "responseStatusCode": 409,
            },
          ],
          "headers": [],
          "id": "post_remit",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Post Remit",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/remits/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "remit_id",
              },
              {
                "type": "literal",
                "value": "/post",
              },
            ],
            "pathParameters": [
              {
                "key": "remit_id",
                "type": {
                  "type": "id",
                  "value": "type_remits/v1:RemitId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_remits/v1:PostRemitResponse",
              },
            },
          },
          "urlSlug": "post-remit",
        },
      ],
      "name": "v1",
      "parent": "subpackage_remits",
      "pointsTo": undefined,
      "subpackageId": "subpackage_remits/v1",
      "subpackages": [],
      "types": [
        "type_remits/v1:RemitId",
        "type_remits/v1:RemitPostStatus",
        "type_remits/v1:RemitSource",
        "type_remits/v1:RemitSortField",
        "type_remits/v1:ContentContainer",
        "type_remits/v1:ContentSection",
        "type_remits/v1:Content",
        "type_remits/v1:ContentString",
        "type_remits/v1:Remit",
        "type_remits/v1:GetMultiRemitsPagedSortField",
        "type_remits/v1:RemitPage",
        "type_remits/v1:GetMultiRemitsPagedResponse",
        "type_remits/v1:PostRemitResponse",
      ],
      "urlSlug": "v-1",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_rules_engine_types": {
      "description": undefined,
      "endpoints": [],
      "name": "rules_engine_types",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_rules_engine_types",
      "subpackages": [],
      "types": [
        "type_rules_engine_types:RaResult",
        "type_rules_engine_types:RulesEnginePipelineType",
        "type_rules_engine_types:RulesEngineProcessFailure",
        "type_rules_engine_types:RulesEngineProcessSuccess",
        "type_rules_engine_types:RulesEngineProcessSuccessSync",
        "type_rules_engine_types:RulesEngineProcessSuccessAsync",
        "type_rules_engine_types:RulesEngineProcessResult",
        "type_rules_engine_types:RulesEngineCheckFailure",
        "type_rules_engine_types:RulesEngineCheckResponse",
      ],
      "urlSlug": "rules-engine-types",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_secondary-submission": {
      "description": undefined,
      "endpoints": [],
      "name": "secondary-submission",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_secondary-submission",
      "subpackages": [
        "subpackage_secondary-submission/v1",
      ],
      "types": [],
      "urlSlug": "secondary-submission",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_secondary-submission/v1": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/secondary-submission/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {
                "other_payer_adjudication_details": {
                  "check_date": "string",
                  "paid_amount_cents": 0,
                  "patient_responsibility_cents": 0,
                  "service_adjustments": [
                    {
                      "adjustment_amount_cents": 0,
                      "adjustment_group_code": "CO",
                    },
                  ],
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "other_payer_adjudication_details": {
                    "check_date": "string",
                    "paid_amount_cents": 0,
                    "patient_responsibility_cents": 0,
                    "service_adjustments": [
                      {
                        "adjustment_amount_cents": 0,
                        "adjustment_group_code": "CO",
                      },
                    ],
                  },
                },
              },
              "responseBody": {
                "result": {
                  "reason": "string",
                  "type": "failure",
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "result": {
                    "reason": "string",
                    "type": "failure",
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/secondary-submission/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {
                "other_payer_adjudication_details": {
                  "check_date": "string",
                  "paid_amount_cents": 0,
                  "patient_responsibility_cents": 0,
                  "service_adjustments": [
                    {
                      "adjustment_amount_cents": 0,
                      "adjustment_group_code": "CO",
                    },
                  ],
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "other_payer_adjudication_details": {
                    "check_date": "string",
                    "paid_amount_cents": 0,
                    "patient_responsibility_cents": 0,
                    "service_adjustments": [
                      {
                        "adjustment_amount_cents": 0,
                        "adjustment_group_code": "CO",
                      },
                    ],
                  },
                },
              },
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/secondary-submission/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_secondary-submission/v1:SecondarySubmissionCreate",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_secondary-submission/v1:SecondarySubmissionResponse",
              },
            },
          },
          "urlSlug": "create",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/secondary-submission/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/validate",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "response": {
                  "type": "success",
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "response": {
                    "type": "success",
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/secondary-submission/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/validate",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
          ],
          "headers": [],
          "id": "validate",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Validate",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/secondary-submission/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "/validate",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_secondary-submission/v1:SecondarySubmissionCheckResponse",
              },
            },
          },
          "urlSlug": "validate",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/secondary-submission/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/pre-populate",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "check_date": "string",
                "paid_amount_cents": 0,
                "patient_responsibility_cents": 0,
                "service_adjustments": [
                  {
                    "adjustment_amount_cents": 0,
                    "adjustment_group_code": "CO",
                    "adjustment_reason_code": "string",
                  },
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "check_date": "string",
                  "paid_amount_cents": 0,
                  "patient_responsibility_cents": 0,
                  "service_adjustments": [
                    {
                      "adjustment_amount_cents": 0,
                      "adjustment_group_code": "CO",
                      "adjustment_reason_code": "string",
                    },
                  ],
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/secondary-submission/v1/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/pre-populate",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
          ],
          "headers": [],
          "id": "prepopulate",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Prepopulate",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/secondary-submission/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "/pre-populate",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "itemType": {
                  "type": "id",
                  "value": "type_secondary-submission/v1:OtherPayerAdjudicationDetails",
                },
                "type": "optional",
              },
            },
          },
          "urlSlug": "prepopulate",
        },
      ],
      "name": "v1",
      "parent": "subpackage_secondary-submission",
      "pointsTo": undefined,
      "subpackageId": "subpackage_secondary-submission/v1",
      "subpackages": [],
      "types": [
        "type_secondary-submission/v1:ServiceAdjustment",
        "type_secondary-submission/v1:OtherPayerAdjudicationDetails",
        "type_secondary-submission/v1:SecondarySubmissionCreate",
        "type_secondary-submission/v1:SecondarySubmissionResponse",
        "type_secondary-submission/v1:SecondarySubmissionCheckResponse",
      ],
      "urlSlug": "v-1",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_service-facility": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/service_facility/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "service_facility_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "address": {
                  "address1": "string",
                  "address2": "string",
                  "city": "string",
                  "state": "AA",
                  "zip_code": "string",
                  "zip_plus_four_code": "string",
                },
                "organization_name": "string",
                "service_facility_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "address": {
                    "address1": "string",
                    "address2": "string",
                    "city": "string",
                    "state": "AA",
                    "zip_code": "string",
                    "zip_plus_four_code": "string",
                  },
                  "organization_name": "string",
                  "service_facility_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "update",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/service_facility/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "service_facility_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "service_facility_id",
                "type": {
                  "type": "id",
                  "value": "type_service-facility:ServiceFacilityId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "organization_name",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "address",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:StreetAddressLongZip",
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_service-facility:EncounterServiceFacility",
              },
            },
          },
          "urlSlug": "update",
        },
      ],
      "name": "service-facility",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_service-facility",
      "subpackages": [],
      "types": [
        "type_service-facility:ServiceFacilityId",
        "type_service-facility:EncounterServiceFacilityBase",
        "type_service-facility:EncounterServiceFacility",
      ],
      "urlSlug": "service-facility",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_service-line-ledgers": {
      "description": undefined,
      "endpoints": [],
      "name": "service-line-ledgers",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_service-line-ledgers",
      "subpackages": [
        "subpackage_service-line-ledgers/v1",
      ],
      "types": [],
      "urlSlug": "service-line-ledgers",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_service-line-ledgers/v1": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
            {
              "statusCode": 403,
              "type": {
                "type": "id",
                "value": "type_commons:UnauthorizedErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "name": "Unauthorized Error",
              "statusCode": 403,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnauthorizedError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnauthorizedErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/service-line-ledgers/v1/table/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "service_line_tables": {
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                    "rows": [
                      {
                        "description": "string",
                        "details": {
                          "billed_amount_cents": 0,
                          "claim_submission_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                          "type": "charge_row",
                        },
                        "event_date": "2023-01-01T00:00:00Z",
                        "event_locator": "string",
                      },
                    ],
                    "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  },
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "service_line_tables": {
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                      "rows": [
                        {
                          "description": "string",
                          "details": {
                            "billed_amount_cents": 0,
                            "claim_submission_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                            "type": "charge_row",
                          },
                          "event_date": "2023-01-01T00:00:00Z",
                          "event_locator": "string",
                        },
                      ],
                      "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    },
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/service-line-ledgers/v1/table/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/service-line-ledgers/v1/table/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "encounter_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnauthorizedError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnauthorizedError",
                },
              },
              "responseStatusCode": 403,
            },
          ],
          "headers": [],
          "id": "get_ledger_tables",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Ledger Tables",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/service-line-ledgers/v1",
              },
              {
                "type": "literal",
                "value": "/table/",
              },
              {
                "type": "pathParameter",
                "value": "encounter_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:EncounterId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_service-line-ledgers/v1:GetLedgerTablesResponse",
              },
            },
          },
          "urlSlug": "get-ledger-tables",
        },
      ],
      "name": "v1",
      "parent": "subpackage_service-line-ledgers",
      "pointsTo": undefined,
      "subpackageId": "subpackage_service-line-ledgers/v1",
      "subpackages": [],
      "types": [
        "type_service-line-ledgers/v1:GetLedgerTablesResponse",
        "type_service-line-ledgers/v1:ServiceLineLedgerTable",
        "type_service-line-ledgers/v1:LedgerTableRowDetails",
        "type_service-line-ledgers/v1:LedgerRowId",
        "type_service-line-ledgers/v1:EventLocator",
        "type_service-line-ledgers/v1:LedgerTableRow",
        "type_service-line-ledgers/v1:ChargeRow",
        "type_service-line-ledgers/v1:RemitRow",
        "type_service-line-ledgers/v1:CarcPopoverDetails",
        "type_service-line-ledgers/v1:RarcPopoverDetails",
        "type_service-line-ledgers/v1:Check",
        "type_service-line-ledgers/v1:RemitRowFinancialInformation",
        "type_service-line-ledgers/v1:RemitRowPayerInformation",
        "type_service-line-ledgers/v1:EraPayer",
        "type_service-line-ledgers/v1:PatientPaymentRow",
        "type_service-line-ledgers/v1:WriteOffRow",
      ],
      "urlSlug": "v-1",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_service-lines": {
      "description": undefined,
      "endpoints": [],
      "name": "service-lines",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_service-lines",
      "subpackages": [
        "subpackage_service-lines/v2",
      ],
      "types": [],
      "urlSlug": "service-lines",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_service-lines/v2": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/service-lines/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/financial-information",
              "pathParameters": {
                "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "allowed_amount_cents": 0,
                "billed_amount_cents": 0,
                "financial_information_by_payer_responsibility_response": {
                  "primary": {
                    "insurance_adjustment_cents": 0,
                    "insurance_balance_cents": 0,
                    "insurance_paid_cents": 0,
                  },
                  "secondary": {
                    "insurance_adjustment_cents": 0,
                    "insurance_balance_cents": 0,
                    "insurance_paid_cents": 0,
                  },
                },
                "insurance_financial_information": {
                  "insurance_adjustment_cents": 0,
                  "insurance_balance_cents": 0,
                  "insurance_paid_cents": 0,
                },
                "patient_balance_cents": 0,
                "patient_paid_cents": 0,
                "patient_responsibility_cents": 0,
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "allowed_amount_cents": 0,
                  "billed_amount_cents": 0,
                  "financial_information_by_payer_responsibility_response": {
                    "primary": {
                      "insurance_adjustment_cents": 0,
                      "insurance_balance_cents": 0,
                      "insurance_paid_cents": 0,
                    },
                    "secondary": {
                      "insurance_adjustment_cents": 0,
                      "insurance_balance_cents": 0,
                      "insurance_paid_cents": 0,
                    },
                  },
                  "insurance_financial_information": {
                    "insurance_adjustment_cents": 0,
                    "insurance_balance_cents": 0,
                    "insurance_paid_cents": 0,
                  },
                  "patient_balance_cents": 0,
                  "patient_paid_cents": 0,
                  "patient_responsibility_cents": 0,
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/service-lines/v2/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/financial-information",
              "pathParameters": {
                "service_line_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
          ],
          "headers": [],
          "id": "calculate_financial_information",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Calculate Financial Information",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/service-lines/v2",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "service_line_id",
              },
              {
                "type": "literal",
                "value": "/financial-information",
              },
            ],
            "pathParameters": [
              {
                "key": "service_line_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:ServiceLineId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_service-lines/v2:ServiceLineFinancialInformationResponse",
              },
            },
          },
          "urlSlug": "calculate-financial-information",
        },
      ],
      "name": "v2",
      "parent": "subpackage_service-lines",
      "pointsTo": undefined,
      "subpackageId": "subpackage_service-lines/v2",
      "subpackages": [],
      "types": [
        "type_service-lines/v2:ServiceLineFinancialInformation",
        "type_service-lines/v2:ServiceLineFinancialInformationByPayerResponsibilityResponse",
        "type_service-lines/v2:ServiceLineFinancialInformationResponse",
        "type_service-lines/v2:ServiceLineCreate",
        "type_service-lines/v2:ServiceLineCreateStandalone",
        "type_service-lines/v2:ServiceLineUpdate",
        "type_service-lines/v2:ServiceLine",
        "type_service-lines/v2:ServiceLineERAData",
        "type_service-lines/v2:ServiceLineAdjustment",
        "type_service-lines/v2:ServiceLineDenialReason",
        "type_service-lines/v2:DenialReasonContent",
        "type_service-lines/v2:DrugIdentification",
        "type_service-lines/v2:ServiceIdQualifier",
        "type_service-lines/v2:MeasurementUnitCode",
      ],
      "urlSlug": "v-2",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_tags": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/tags/v3",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": [
                {
                  "color": "black",
                  "creator_id": "string",
                  "description": "string",
                  "tag_id": "string",
                },
              ],
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "color": "black",
                    "creator_id": "string",
                    "description": "string",
                    "tag_id": "string",
                  },
                ],
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "getAll",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get All",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/tags",
              },
              {
                "type": "literal",
                "value": "/v3",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "itemType": {
                  "type": "id",
                  "value": "type_tags:Tag",
                },
                "type": "list",
              },
            },
          },
          "urlSlug": "get-all",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/tags/v3",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "color": "black",
                "description": "string",
                "tag_id": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "color": "black",
                  "description": "string",
                  "tag_id": "string",
                },
              },
              "responseBody": {
                "color": "black",
                "creator_id": "string",
                "description": "string",
                "tag_id": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "color": "black",
                  "creator_id": "string",
                  "description": "string",
                  "tag_id": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/tags",
              },
              {
                "type": "literal",
                "value": "/v3",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_tags:TagCreate",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_tags:Tag",
              },
            },
          },
          "urlSlug": "create",
        },
      ],
      "name": "tags",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_tags",
      "subpackages": [],
      "types": [
        "type_tags:TagId",
        "type_tags:TagCreate",
        "type_tags:Tag",
        "type_tags:TagColorEnum",
      ],
      "urlSlug": "tags",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_tasks": {
      "description": undefined,
      "endpoints": [],
      "name": "tasks",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_tasks",
      "subpackages": [
        "subpackage_tasks/v3",
        "subpackage_tasks/commons",
      ],
      "types": [],
      "urlSlug": "tasks",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_tasks/commons": {
      "description": undefined,
      "endpoints": [],
      "name": "commons",
      "parent": "subpackage_tasks",
      "pointsTo": undefined,
      "subpackageId": "subpackage_tasks/commons",
      "subpackages": [],
      "types": [
        "type_tasks/commons:TaskType",
        "type_tasks/commons:TaskCategory",
      ],
      "urlSlug": "commons",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_tasks/v3": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/tasks/v3/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/actions",
              "pathParameters": {
                "task_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "actions": [
                  {
                    "display_name": "string",
                    "execution_method": {
                      "type": "close_task",
                    },
                  },
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "actions": [
                    {
                      "display_name": "string",
                      "execution_method": {
                        "type": "close_task",
                      },
                    },
                  ],
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get_actions",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Actions",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/tasks/v3",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "task_id",
              },
              {
                "type": "literal",
                "value": "/actions",
              },
            ],
            "pathParameters": [
              {
                "key": "task_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:TaskId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_tasks/v3:TaskActions",
              },
            },
          },
          "urlSlug": "get-actions",
        },
      ],
      "name": "v3",
      "parent": "subpackage_tasks",
      "pointsTo": undefined,
      "subpackageId": "subpackage_tasks/v3",
      "subpackages": [],
      "types": [
        "type_tasks/v3:TaskActionExecutionMethod",
        "type_tasks/v3:TaskActions",
        "type_tasks/v3:TaskAction",
      ],
      "urlSlug": "v-3",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_test-fern": {
      "description": undefined,
      "endpoints": [],
      "name": "test-fern",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_test-fern",
      "subpackages": [],
      "types": [
        "type_test-fern:ParentPatch",
        "type_test-fern:UnionParentPatch",
        "type_test-fern:ChildPatch",
      ],
      "urlSlug": "test-fern",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_upload-validation": {
      "description": undefined,
      "endpoints": [],
      "name": "upload-validation",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_upload-validation",
      "subpackages": [],
      "types": [
        "type_upload-validation:FailedValidationResultType",
        "type_upload-validation:FailedValidationResult",
        "type_upload-validation:ValidationResults",
        "type_upload-validation:IngestResults",
        "type_upload-validation:UploadResults",
      ],
      "urlSlug": "upload-validation",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_users": {
      "description": undefined,
      "endpoints": [],
      "name": "users",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_users",
      "subpackages": [
        "subpackage_users/v2",
      ],
      "types": [],
      "urlSlug": "users",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_users/v2": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/users/v2/internal-enrollment-assignees",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "assignees": [
                  {
                    "auth0_id": "string",
                    "first_name": "string",
                    "last_name": "string",
                  },
                ],
                "default_assignee": {
                  "auth0_id": "string",
                  "first_name": "string",
                  "last_name": "string",
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "assignees": [
                    {
                      "auth0_id": "string",
                      "first_name": "string",
                      "last_name": "string",
                    },
                  ],
                  "default_assignee": {
                    "auth0_id": "string",
                    "first_name": "string",
                    "last_name": "string",
                  },
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get_internal_enrollment_assignees",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Internal Enrollment Assignees",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/users/v2",
              },
              {
                "type": "literal",
                "value": "/internal-enrollment-assignees",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_users/v2:InternalEnrollmentAssignees",
              },
            },
          },
          "urlSlug": "get-internal-enrollment-assignees",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/users/v2/assignable-users",
              "pathParameters": {},
              "queryParameters": {
                "limit": 0,
                "page_token": "string",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "accessible_organization_ids": [
                      "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    ],
                    "idp_metadata": [
                      {
                        "auth0_id": "string",
                        "type": "auth_zero_metadata",
                      },
                    ],
                    "primary_organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "user_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "user_metadata": {
                      "name": "string",
                      "type": "machine_user_metadata",
                    },
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "accessible_organization_ids": [
                        "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      ],
                      "idp_metadata": [
                        {
                          "auth0_id": "string",
                          "type": "auth_zero_metadata",
                        },
                      ],
                      "primary_organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "user_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "user_metadata": {
                        "name": "string",
                        "type": "machine_user_metadata",
                      },
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/users/v2/assignable-users",
              "pathParameters": {},
              "queryParameters": {
                "limit": 0,
                "page_token": "string",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "get_assignable_users",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Assignable Users",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/users/v2",
              },
              {
                "type": "literal",
                "value": "/assignable-users",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
            {
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_users/v2:UserV2Page",
              },
            },
          },
          "urlSlug": "get-assignable-users",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 422,
              "type": {
                "type": "id",
                "value": "type_commons:UnprocessableEntityErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Unprocessable Entity Error",
              "statusCode": 422,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "UnprocessableEntityError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/users/v2",
              "pathParameters": {},
              "queryParameters": {
                "limit": 0,
                "page_token": "string",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "items": [
                  {
                    "accessible_organization_ids": [
                      "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    ],
                    "idp_metadata": [
                      {
                        "auth0_id": "string",
                        "type": "auth_zero_metadata",
                      },
                    ],
                    "primary_organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "user_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "user_metadata": {
                      "name": "string",
                      "type": "machine_user_metadata",
                    },
                  },
                ],
                "next_page_token": "string",
                "prev_page_token": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "accessible_organization_ids": [
                        "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      ],
                      "idp_metadata": [
                        {
                          "auth0_id": "string",
                          "type": "auth_zero_metadata",
                        },
                      ],
                      "primary_organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "user_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "user_metadata": {
                        "name": "string",
                        "type": "machine_user_metadata",
                      },
                    },
                  ],
                  "next_page_token": "string",
                  "prev_page_token": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/users/v2",
              "pathParameters": {},
              "queryParameters": {
                "limit": 0,
                "page_token": "string",
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "message": "string",
                },
                "errorName": "UnprocessableEntityError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "message": "string",
                  },
                  "errorName": "UnprocessableEntityError",
                },
              },
              "responseStatusCode": 422,
            },
          ],
          "headers": [],
          "id": "get_multi",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Multi",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/users/v2",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PageToken",
                },
                "type": "optional",
              },
            },
            {
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_users/v2:UserV2Page",
              },
            },
          },
          "urlSlug": "get-multi",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/users/v2/assignable-users-unpaginated",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": [
                {
                  "accessible_organization_ids": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                  "idp_metadata": [
                    {
                      "auth0_id": "string",
                      "type": "auth_zero_metadata",
                    },
                  ],
                  "primary_organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "user_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "user_metadata": {
                    "name": "string",
                    "type": "machine_user_metadata",
                  },
                },
              ],
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "accessible_organization_ids": [
                      "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    ],
                    "idp_metadata": [
                      {
                        "auth0_id": "string",
                        "type": "auth_zero_metadata",
                      },
                    ],
                    "primary_organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "user_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "user_metadata": {
                      "name": "string",
                      "type": "machine_user_metadata",
                    },
                  },
                ],
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get_assignable_users_unpaginated",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get Assignable Users Unpaginated",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/users/v2",
              },
              {
                "type": "literal",
                "value": "/assignable-users-unpaginated",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "itemType": {
                  "type": "id",
                  "value": "type_users/v2:UserV2",
                },
                "type": "list",
              },
            },
          },
          "urlSlug": "get-assignable-users-unpaginated",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_commons:EntityNotFoundErrorMessage",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Entity Not Found Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "EntityNotFoundError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_commons:EntityNotFoundErrorMessage",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/users/v2/external-id/:external_id",
              "pathParameters": {
                "external_id": ":external_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "accessible_organization_ids": [
                  "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                ],
                "idp_metadata": [
                  {
                    "auth0_id": "string",
                    "type": "auth_zero_metadata",
                  },
                ],
                "primary_organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "user_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "user_metadata": {
                  "name": "string",
                  "type": "machine_user_metadata",
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "accessible_organization_ids": [
                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  ],
                  "idp_metadata": [
                    {
                      "auth0_id": "string",
                      "type": "auth_zero_metadata",
                    },
                  ],
                  "primary_organization_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "user_id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "user_metadata": {
                    "name": "string",
                    "type": "machine_user_metadata",
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/users/v2/external-id/:external_id",
              "pathParameters": {
                "external_id": ":external_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "id": "string",
                },
                "errorName": "EntityNotFoundError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "id": "string",
                  },
                  "errorName": "EntityNotFoundError",
                },
              },
              "responseStatusCode": 404,
            },
          ],
          "headers": [],
          "id": "get_by_external_id",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get By External Id",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/users/v2",
              },
              {
                "type": "literal",
                "value": "/external-id/",
              },
              {
                "type": "pathParameter",
                "value": "external_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "external_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_users/v2:UserV2",
              },
            },
          },
          "urlSlug": "get-by-external-id",
        },
      ],
      "name": "v2",
      "parent": "subpackage_users",
      "pointsTo": undefined,
      "subpackageId": "subpackage_users/v2",
      "subpackages": [],
      "types": [
        "type_users/v2:User",
        "type_users/v2:HumanUserMetadata",
        "type_users/v2:MachineUserMetadata",
        "type_users/v2:UserMetadata",
        "type_users/v2:InternalEnrollmentAssignees",
        "type_users/v2:AuthZeroMetadata",
        "type_users/v2:GoogleAppsMetadata",
        "type_users/v2:OtherIdpMetadata",
        "type_users/v2:IdpUserMetadata",
        "type_users/v2:UserV2",
        "type_users/v2:UserV2Page",
      ],
      "urlSlug": "v-2",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_work-queues": {
      "description": undefined,
      "endpoints": [],
      "name": "work-queues",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_work-queues",
      "subpackages": [
        "subpackage_work-queues/v1",
      ],
      "types": [],
      "urlSlug": "work-queues",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_work-queues/v1": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [
            {
              "statusCode": 404,
              "type": {
                "type": "id",
                "value": "type_work-queues/v1:WorkQueueNotFoundError",
              },
            },
          ],
          "errorsV2": [
            {
              "name": "Work Queue Not Found Http Error",
              "statusCode": 404,
              "type": {
                "extends": [],
                "properties": [
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "errorName",
                    "valueType": {
                      "type": "literal",
                      "value": {
                        "type": "stringLiteral",
                        "value": "WorkQueueNotFoundHttpError",
                      },
                    },
                  },
                  {
                    "availability": undefined,
                    "description": undefined,
                    "key": "content",
                    "valueType": {
                      "type": "id",
                      "value": "type_work-queues/v1:WorkQueueNotFoundError",
                    },
                  },
                ],
                "type": "object",
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/work-queues/v1/:work_queue_id",
              "pathParameters": {
                "work_queue_id": ":work_queue_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "work_queue": {
                  "category": {
                    "description": "string",
                    "display_name": "string",
                    "type": "PRE_SUBMISSION",
                  },
                  "created_at": "2023-01-01T00:00:00Z",
                  "created_by": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "description": "string",
                  "display_name": "string",
                  "work_queue_id": "string",
                },
                "work_queue_statistics": {
                  "num_claims": 0,
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "work_queue": {
                    "category": {
                      "description": "string",
                      "display_name": "string",
                      "type": "PRE_SUBMISSION",
                    },
                    "created_at": "2023-01-01T00:00:00Z",
                    "created_by": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "description": "string",
                    "display_name": "string",
                    "work_queue_id": "string",
                  },
                  "work_queue_statistics": {
                    "num_claims": 0,
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/work-queues/v1/:work_queue_id",
              "pathParameters": {
                "work_queue_id": ":work_queue_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "content": {
                  "work_queue_id": "string",
                },
                "errorName": "WorkQueueNotFoundHttpError",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "content": {
                    "work_queue_id": "string",
                  },
                  "errorName": "WorkQueueNotFoundHttpError",
                },
              },
              "responseStatusCode": 404,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/work-queues/v1",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "work_queue_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "work_queue_id",
                "type": {
                  "type": "id",
                  "value": "type_commons:WorkQueueId",
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_work-queues/v1:WorkQueueResponse",
              },
            },
          },
          "urlSlug": "get",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.joincandidhealth.com",
              "id": "production",
            },
            {
              "baseUrl": "https://api-staging.joincandidhealth.com",
              "id": "staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/api/work-queues/v1",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "work_queues": [
                  {
                    "work_queue": {
                      "category": {
                        "description": "string",
                        "display_name": "string",
                        "type": "PRE_SUBMISSION",
                      },
                      "created_at": "2023-01-01T00:00:00Z",
                      "created_by": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "description": "string",
                      "display_name": "string",
                      "work_queue_id": "string",
                    },
                    "work_queue_statistics": {
                      "num_claims": 0,
                    },
                  },
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "work_queues": [
                    {
                      "work_queue": {
                        "category": {
                          "description": "string",
                          "display_name": "string",
                          "type": "PRE_SUBMISSION",
                        },
                        "created_at": "2023-01-01T00:00:00Z",
                        "created_by": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                        "description": "string",
                        "display_name": "string",
                        "work_queue_id": "string",
                      },
                      "work_queue_statistics": {
                        "num_claims": 0,
                      },
                    },
                  ],
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "getAllWorkQueues",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Get All Work Queues",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/api/work-queues/v1",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_work-queues/v1:GetAllWorkQueuesResponse",
              },
            },
          },
          "urlSlug": "get-all-work-queues",
        },
      ],
      "name": "v1",
      "parent": "subpackage_work-queues",
      "pointsTo": undefined,
      "subpackageId": "subpackage_work-queues/v1",
      "subpackages": [],
      "types": [
        "type_work-queues/v1:WorkQueueCategoryType",
        "type_work-queues/v1:WorkQueueCategory",
        "type_work-queues/v1:WorkQueue",
        "type_work-queues/v1:WorkQueueStatistics",
        "type_work-queues/v1:WorkQueueResponse",
        "type_work-queues/v1:GetAllWorkQueuesResponse",
        "type_work-queues/v1:WorkQueueNotFoundError",
      ],
      "urlSlug": "v-1",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_x12": {
      "description": undefined,
      "endpoints": [],
      "name": "x12",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_x12",
      "subpackages": [
        "subpackage_x12/v1",
      ],
      "types": [],
      "urlSlug": "x-12",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_x12/v1": {
      "description": undefined,
      "endpoints": [],
      "name": "v1",
      "parent": "subpackage_x12",
      "pointsTo": undefined,
      "subpackageId": "subpackage_x12/v1",
      "subpackages": [],
      "types": [
        "type_x12/v1:ClaimStatusCodeEnum",
        "type_x12/v1:Carc",
        "type_x12/v1:Rarc",
      ],
      "urlSlug": "v-1",
      "webhooks": [],
      "websockets": [],
    },
  },
  "types": {
    "type_adjustments:Adjustment": {
      "availability": undefined,
      "description": undefined,
      "name": "Adjustment",
      "shape": {
        "extends": [
          "type_adjustments:AdjustmentCreate",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "adjustment_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:AdjustmentId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_adjustments:AdjustmentCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "AdjustmentCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ServiceLineId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "adjustment_note",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_adjustments:AdjustmentSource",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_adjustments:AdjustmentSortOptions": {
      "availability": undefined,
      "description": undefined,
      "name": "AdjustmentSortOptions",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "adjustment_timestamp_asc",
          },
          {
            "description": undefined,
            "value": "adjustment_timestamp_desc",
          },
        ],
      },
    },
    "type_adjustments:AdjustmentSource": {
      "availability": undefined,
      "description": undefined,
      "name": "AdjustmentSource",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "ERA",
          },
          {
            "description": undefined,
            "value": "MANUAL",
          },
        ],
      },
    },
    "type_adjustments:AdjustmentUpdate": {
      "availability": undefined,
      "description": undefined,
      "name": "AdjustmentUpdate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "adjustment_note",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_adjustments:AdjustmentsPage": {
      "availability": undefined,
      "description": undefined,
      "name": "AdjustmentsPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_adjustments:Adjustment",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_auth/v2:AuthGetTokenRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "AuthGetTokenRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "client_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "client_secret",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_auth/v2:AuthGetTokenResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "AuthGetTokenResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "access_token",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "expires_in",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "token_type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_auth/v2:TooManyRequestsErrorType": {
      "availability": undefined,
      "description": undefined,
      "name": "TooManyRequestsErrorType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_billing-notes:BillingNote": {
      "availability": undefined,
      "description": undefined,
      "name": "BillingNote",
      "shape": {
        "extends": [
          "type_billing-notes:BillingNoteBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_note_id",
            "valueType": {
              "type": "id",
              "value": "type_billing-notes:BillingNoteId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "encounter_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:EncounterId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "author_auth0_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "author_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_billing-notes:BillingNoteBase": {
      "availability": undefined,
      "description": undefined,
      "name": "BillingNoteBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Empty string not allowed.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_billing-notes:BillingNoteId": {
      "availability": undefined,
      "description": undefined,
      "name": "BillingNoteId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimAction": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkClaimAction",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:BulkVoidClaimAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "void",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:BulkResubmitFreshClaimAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "resubmit_fresh",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:BulkResubmitCorrectedClaimAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "resubmit_corrected",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:BulkCloseTasksAndProcessClaimAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "close_and_process",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:MoveToWorkQueueClaimAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "move_to_work_queue",
          },
        ],
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimActionExecutionError": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkClaimActionExecutionError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "contents",
            "valueType": {
              "type": "id",
              "value": "type_bulk-claim-actions/v1:BulkClaimActionExecutionErrorContents",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "summary",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimActionExecutionErrorContents": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkClaimActionExecutionErrorContents",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:NotImplementedError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "not_implemented_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:NoPayerGeneratedControlNumberError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "no_payer_generated_control_number_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:TaskRequiredForWorkQueueError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "task_required_for_work_queue_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:GenericWorkQueueError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "generic_work_queue_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:UserNotAuthorizedForResubmitError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "user_not_authorized_for_resubmit_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:UserNotAuthorizedToCloseAllOpenTasksError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "user_not_authorized_to_close_all_open_tasks_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:ExecutionError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "execution_error",
          },
        ],
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimActionExecutionFailure": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkClaimActionExecutionFailure",
      "shape": {
        "extends": [
          "type_bulk-claim-actions/v1:BulkClaimActionExecutionResultBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "errors",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_bulk-claim-actions/v1:BulkClaimActionExecutionError",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimActionExecutionResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkClaimActionExecutionResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "results",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_bulk-claim-actions/v1:BulkClaimActionExecutionResult",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimActionExecutionResult": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkClaimActionExecutionResult",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:BulkClaimActionExecutionSuccess",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "success",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:BulkClaimActionExecutionFailure",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "failure",
          },
        ],
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimActionExecutionResultBase": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkClaimActionExecutionResultBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_metadata",
            "valueType": {
              "type": "id",
              "value": "type_bulk-claim-actions/v1:BulkClaimActionMetadata",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimActionExecutionSuccess": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkClaimActionExecutionSuccess",
      "shape": {
        "extends": [
          "type_bulk-claim-actions/v1:BulkClaimActionExecutionResultBase",
        ],
        "properties": [],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimActionMetadata": {
      "availability": undefined,
      "description": "Useful properties for bulk claim actions related to a particular claim",
      "name": "BulkClaimActionMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "encounter_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:EncounterId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_first_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_last_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "date_of_service",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "date",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimActionValidationError": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkClaimActionValidationError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "contents",
            "valueType": {
              "type": "id",
              "value": "type_bulk-claim-actions/v1:BulkClaimActionValidationErrorContents",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "summary",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimActionValidationErrorContents": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkClaimActionValidationErrorContents",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:NotImplementedError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "not_implemented_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:NoPayerGeneratedControlNumberError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "no_payer_generated_control_number_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:TaskRequiredForWorkQueueError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "task_required_for_work_queue_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:GenericWorkQueueError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "generic_work_queue_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:UserNotAuthorizedForResubmitError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "user_not_authorized_for_resubmit_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:UserNotAuthorizedToCloseAllOpenTasksError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "user_not_authorized_to_close_all_open_tasks_error",
          },
        ],
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimActionValidationFailure": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkClaimActionValidationFailure",
      "shape": {
        "extends": [
          "type_bulk-claim-actions/v1:BulkClaimActionValidationResultBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "errors",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_bulk-claim-actions/v1:BulkClaimActionValidationError",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimActionValidationResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkClaimActionValidationResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "results",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_bulk-claim-actions/v1:BulkClaimActionValidationResult",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimActionValidationResult": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkClaimActionValidationResult",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:BulkClaimActionValidationSuccess",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "success",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:BulkClaimActionValidationFailure",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "failure",
          },
        ],
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimActionValidationResultBase": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkClaimActionValidationResultBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_metadata",
            "valueType": {
              "type": "id",
              "value": "type_bulk-claim-actions/v1:BulkClaimActionMetadata",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:BulkClaimActionValidationSuccess": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkClaimActionValidationSuccess",
      "shape": {
        "extends": [
          "type_bulk-claim-actions/v1:BulkClaimActionValidationResultBase",
        ],
        "properties": [],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:BulkCloseTasksAndProcessClaimAction": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkCloseTasksAndProcessClaimAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:BulkResubmitCorrectedClaimAction": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkResubmitCorrectedClaimAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "correction_reason",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:BulkResubmitFreshClaimAction": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkResubmitFreshClaimAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:BulkVoidClaimAction": {
      "availability": undefined,
      "description": undefined,
      "name": "BulkVoidClaimAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:ClaimCollection": {
      "availability": undefined,
      "description": undefined,
      "name": "ClaimCollection",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_bulk-claim-actions/v1:ClaimIdSet",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "claim_id_set",
          },
        ],
      },
    },
    "type_bulk-claim-actions/v1:ClaimIdSet": {
      "availability": undefined,
      "description": "A set of Claim IDs (limit 5)",
      "name": "ClaimIdSet",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_ids",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:ClaimId",
              },
              "type": "set",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:CreateTaskConfig": {
      "availability": undefined,
      "description": undefined,
      "name": "CreateTaskConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "category",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_tasks/commons:TaskCategory",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "task_type",
            "valueType": {
              "type": "id",
              "value": "type_tasks/commons:TaskType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "assignee",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:UserId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "context",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "action_required",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:ExecutionError": {
      "availability": undefined,
      "description": "Error while executing action",
      "name": "ExecutionError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:GenericWorkQueueError": {
      "availability": undefined,
      "description": "An error has occurred which prevents the claim from being routed to the work queue",
      "name": "GenericWorkQueueError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:MoveToWorkQueueClaimAction": {
      "availability": undefined,
      "description": undefined,
      "name": "MoveToWorkQueueClaimAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queue_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:WorkQueueId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "create_task_config",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_bulk-claim-actions/v1:CreateTaskConfig",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:NoPayerGeneratedControlNumberError": {
      "availability": undefined,
      "description": "Claim does not have an associated payer-generated control number when one is required",
      "name": "NoPayerGeneratedControlNumberError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:NotImplementedError": {
      "availability": undefined,
      "description": "Bulk action is not yet implemented",
      "name": "NotImplementedError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:TaskRequiredForWorkQueueError": {
      "availability": undefined,
      "description": "A task is required to move a claim to a work queue",
      "name": "TaskRequiredForWorkQueueError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:UserNotAuthorizedForResubmitError": {
      "availability": undefined,
      "description": "User is not authorized for resubmission",
      "name": "UserNotAuthorizedForResubmitError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_bulk-claim-actions/v1:UserNotAuthorizedToCloseAllOpenTasksError": {
      "availability": undefined,
      "description": "User is not authorized to close all open tasks",
      "name": "UserNotAuthorizedToCloseAllOpenTasksError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_chargemasters/v2:ChargemasterEntryId": {
      "availability": undefined,
      "description": undefined,
      "name": "ChargemasterEntryId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_chargemasters/v2:ChargemasterId": {
      "availability": undefined,
      "description": undefined,
      "name": "ChargemasterId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_chargemasters/v2:DeleteAllChargemastersResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "DeleteAllChargemastersResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "chargemaster_ids",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_chargemasters/v2:ChargemasterId",
              },
              "type": "set",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_chargemasters/v2:DeleteChargemasterEntriesByIdsRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "DeleteChargemasterEntriesByIdsRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "chargemaster_entry_ids",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_chargemasters/v2:ChargemasterEntryId",
              },
              "type": "set",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_claim-submission:ClaimFrequencyTypeCode": {
      "availability": undefined,
      "description": undefined,
      "name": "ClaimFrequencyTypeCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "1",
          },
          {
            "description": undefined,
            "value": "6",
          },
          {
            "description": undefined,
            "value": "7",
          },
          {
            "description": undefined,
            "value": "8",
          },
        ],
      },
    },
    "type_claim-submission:ClaimSubmission": {
      "availability": undefined,
      "description": undefined,
      "name": "ClaimSubmission",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "content",
            "valueType": {
              "type": "id",
              "value": "type_cms-1500:CMS1500Content",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_claim-submission:ClaimSubmissionStatus": {
      "availability": undefined,
      "description": undefined,
      "name": "ClaimSubmissionStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "SUBMITTED",
          },
          {
            "description": undefined,
            "value": "PENDING_SUBMISSION",
          },
          {
            "description": undefined,
            "value": "REJECTED",
          },
          {
            "description": undefined,
            "value": "ERROR",
          },
        ],
      },
    },
    "type_claim/v2:AdjudicationMatchResults": {
      "availability": undefined,
      "description": undefined,
      "name": "AdjudicationMatchResults",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "no_adjudication_details",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "no_match",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_claim/v2:PotentialMatches",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "potential_matches",
          },
        ],
      },
    },
    "type_claim/v2:AdjudicationMatchResultsUnion": {
      "availability": undefined,
      "description": undefined,
      "name": "AdjudicationMatchResultsUnion",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_claim/v2:AdjudicationMatchResults",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "adjudication_match_results",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_claim/v2:LegacyMatchResults",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "legacy_match_results",
          },
        ],
      },
    },
    "type_claim/v2:BoundFeeScheduleId": {
      "availability": undefined,
      "description": undefined,
      "name": "BoundFeeScheduleId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_claim/v2:ClaimStatusMetadata": {
      "availability": undefined,
      "description": undefined,
      "name": "ClaimStatusMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_claims:ClaimStatus",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "disabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "disabled_explanation",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_claim/v2:FeeScheduleEntryId": {
      "availability": undefined,
      "description": undefined,
      "name": "FeeScheduleEntryId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_claim/v2:FeeScheduleId": {
      "availability": undefined,
      "description": undefined,
      "name": "FeeScheduleId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_claim/v2:LegacyMatchResults": {
      "availability": undefined,
      "description": "Legacy fee schedule matches return a list of amount cents because we can't represent plan or license type",
      "name": "LegacyMatchResults",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "expected_amounts_cents_list",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_claim/v2:MatchResult": {
      "availability": undefined,
      "description": undefined,
      "name": "MatchResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "fee_schedule_entry_id",
            "valueType": {
              "type": "id",
              "value": "type_claim/v2:FeeScheduleEntryId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "bound_fee_schedule_id",
            "valueType": {
              "type": "id",
              "value": "type_claim/v2:BoundFeeScheduleId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "fee_schedule_id",
            "valueType": {
              "type": "id",
              "value": "type_claim/v2:FeeScheduleId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "score",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_uuid",
            "valueType": {
              "type": "id",
              "value": "type_payers:PayerUuid",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "expected_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_claim/v2:PotentialMatches": {
      "availability": undefined,
      "description": undefined,
      "name": "PotentialMatches",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_claim/v2:MatchResult",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_claim/v2:ServiceLineAdjudicationDetail": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLineAdjudicationDetail",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ServiceLineId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "adjudication_match_results",
            "valueType": {
              "type": "id",
              "value": "type_claim/v2:AdjudicationMatchResultsUnion",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_claim/v2:ServiceLineAdjudicationDetailsResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLineAdjudicationDetailsResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_adjudication_details",
            "valueType": {
              "keyType": {
                "type": "id",
                "value": "type_commons:ServiceLineId",
              },
              "type": "map",
              "valueType": {
                "type": "id",
                "value": "type_claim/v2:ServiceLineAdjudicationDetail",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_claims:Claim": {
      "availability": undefined,
      "description": undefined,
      "name": "Claim",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_claims:ClaimStatus",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "clearinghouse",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "clearinghouse_claim_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_claim_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_lines",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-lines/v2:ServiceLine",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "eras",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_era:ERA",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_claims:ClaimStatus": {
      "availability": undefined,
      "description": undefined,
      "name": "ClaimStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "biller_received",
          },
          {
            "description": undefined,
            "value": "coded",
          },
          {
            "description": undefined,
            "value": "submitted_to_payer",
          },
          {
            "description": undefined,
            "value": "missing_information",
          },
          {
            "description": undefined,
            "value": "not_billable",
          },
          {
            "description": undefined,
            "value": "waiting_for_provider",
          },
          {
            "description": undefined,
            "value": "era_received",
          },
          {
            "description": undefined,
            "value": "rejected",
          },
          {
            "description": undefined,
            "value": "denied",
          },
          {
            "description": undefined,
            "value": "paid",
          },
          {
            "description": undefined,
            "value": "paid_incorrectly",
          },
          {
            "description": undefined,
            "value": "finalized_paid",
          },
          {
            "description": undefined,
            "value": "finalized_denied",
          },
          {
            "description": undefined,
            "value": "held_by_customer",
          },
        ],
      },
    },
    "type_cms-1500:AddressBox": {
      "availability": undefined,
      "description": undefined,
      "name": "AddressBox",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "address",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "city",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "state",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "zip_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "telephone",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:PhoneNumberBox",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:AddressBox3Line": {
      "availability": undefined,
      "description": undefined,
      "name": "AddressBox3Line",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "address",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "city_state_zip",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box10PatientConditionRelatedTo": {
      "availability": undefined,
      "description": undefined,
      "name": "Box10PatientConditionRelatedTo",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_10_a_employment",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_10_b_auto_accident",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_10_b_auto_accident_state",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_10_c_other_accident",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_10_d_claim_codes",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box11Insured": {
      "availability": undefined,
      "description": undefined,
      "name": "Box11Insured",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_11_policy_group_or_feca_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_11_a_date_of_birth",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:DateBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_11_a_sex",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Sex",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_11_b_other_claim_id_qual",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_11_b_other_claim_id_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_11_c_insurance_plan_or_program_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_11_d_another_health_benefit_plan",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box14DateOfCurrentCondition": {
      "availability": undefined,
      "description": undefined,
      "name": "Box14DateOfCurrentCondition",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "date",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:DateBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "qual",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box15OtherDate": {
      "availability": undefined,
      "description": undefined,
      "name": "Box15OtherDate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "qual",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "date",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:DateBox",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box16DatesPatientUnableToWork": {
      "availability": undefined,
      "description": undefined,
      "name": "Box16DatesPatientUnableToWork",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "from",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:DateBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "to",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:DateBox",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box17ReferringProvider": {
      "availability": undefined,
      "description": undefined,
      "name": "Box17ReferringProvider",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_17_qual",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_17_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_17_a_id_qual",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_17_a_id_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_17_b_npi",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box18HospitalizationDates": {
      "availability": undefined,
      "description": undefined,
      "name": "Box18HospitalizationDates",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "from",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:DateBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "to",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:DateBox",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box20OutsideLab": {
      "availability": undefined,
      "description": undefined,
      "name": "Box20OutsideLab",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "outside_lab",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "charges",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box21Diagnoses": {
      "availability": undefined,
      "description": undefined,
      "name": "Box21Diagnoses",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "icd_ind",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_21_a",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_21_b",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_21_c",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_21_d",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_21_e",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_21_f",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_21_g",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_21_h",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_21_i",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_21_j",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_21_k",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_21_l",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box22Resubmission": {
      "availability": undefined,
      "description": undefined,
      "name": "Box22Resubmission",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "original_ref_no",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box24ServiceLines": {
      "availability": undefined,
      "description": undefined,
      "name": "Box24ServiceLines",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_1",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:ServiceLineBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_2",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:ServiceLineBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_3",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:ServiceLineBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_4",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:ServiceLineBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_5",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:ServiceLineBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_6",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:ServiceLineBox",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box25FederalTaxIdNumber": {
      "availability": undefined,
      "description": undefined,
      "name": "Box25FederalTaxIdNumber",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "id_qual",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:FederalTaxIdNumberType",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box28TotalCharge": {
      "availability": undefined,
      "description": undefined,
      "name": "Box28TotalCharge",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "total_charges",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "two_seventy_six",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box32ServiceFacilityInfo": {
      "availability": undefined,
      "description": undefined,
      "name": "Box32ServiceFacilityInfo",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_32",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:AddressBox3Line",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_32_a_npi",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_32_b_other_id_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box33BillingProviderInfo": {
      "availability": undefined,
      "description": undefined,
      "name": "Box33BillingProviderInfo",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "phone_number",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:PhoneNumberBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_33",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:AddressBox3Line",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_33_a_npi",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_33_b_other_id_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box3Patient": {
      "availability": undefined,
      "description": undefined,
      "name": "Box3Patient",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "date_of_birth",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:DateBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sex",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Sex",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Box9OtherInsured": {
      "availability": undefined,
      "description": undefined,
      "name": "Box9OtherInsured",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_9_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_9_a_policy_or_group_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_9_b_reserved_for_nucc_use",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_9_c_reserved_for_nucc_use",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_9_d_insurance_plan_or_program_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:CMS1500Content": {
      "availability": undefined,
      "description": undefined,
      "name": "CMS1500Content",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "header_insurance_info",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:InsuranceInfo",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_1_insurance_type",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:InsuranceType",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_1_a_insured_id_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_2_patient_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_3_patient",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box3Patient",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_4_insured_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_5_patient_address",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:AddressBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_6_patient_relationship_to_insured",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:PatientRelationshipToInsured",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_7_insured_address",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:AddressBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_8_reserved_for_nucc_use",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_9_other_insured",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box9OtherInsured",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_10_patient_condition_related_to",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box10PatientConditionRelatedTo",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_11_insured",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box11Insured",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_12_patient_or_authorized_signature",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:SignatureDateBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_13_insured_or_authorized_signature",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_14_date_of_current_condition",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box14DateOfCurrentCondition",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_15_other_date",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box15OtherDate",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_16_dates_patient_unable_to_work",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box16DatesPatientUnableToWork",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_17_referring_provider",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box17ReferringProvider",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_18_hospitalization_dates",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box18HospitalizationDates",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_19_additional_claim_info",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_20_outside_lab",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box20OutsideLab",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_21_diagnoses",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box21Diagnoses",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_22_resubmission",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box22Resubmission",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_23_prior_authorization_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_service_lines",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box24ServiceLines",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_25_federal_tax_id_number",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box25FederalTaxIdNumber",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_26_patient_account_no",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_27_accepts_assignment",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_28_total_charge",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box28TotalCharge",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_29_amount_paid",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_31_physician_or_supplier_signature",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:SignatureDateBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_32_service_facility_info",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box32ServiceFacilityInfo",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_33_billing_provider_info",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:Box33BillingProviderInfo",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:DateBox": {
      "availability": undefined,
      "description": undefined,
      "name": "DateBox",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "mm format",
            "key": "month",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "dd format",
            "key": "day",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "yy format",
            "key": "year",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:FederalTaxIdNumberType": {
      "availability": undefined,
      "description": undefined,
      "name": "FederalTaxIdNumberType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "SSN",
          },
          {
            "description": undefined,
            "value": "EIN",
          },
        ],
      },
    },
    "type_cms-1500:InsuranceInfo": {
      "availability": undefined,
      "description": undefined,
      "name": "InsuranceInfo",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "address_1",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "address_2",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "city_state_zip",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:InsuranceType": {
      "availability": undefined,
      "description": undefined,
      "name": "InsuranceType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "MEDICARE",
          },
          {
            "description": undefined,
            "value": "MEDICAID",
          },
          {
            "description": undefined,
            "value": "TRICARE",
          },
          {
            "description": undefined,
            "value": "CHAMPVA",
          },
          {
            "description": undefined,
            "value": "GROUP_HEALTH_PLAN",
          },
          {
            "description": undefined,
            "value": "FECA_BLK_LUNG",
          },
          {
            "description": undefined,
            "value": "OTHER",
          },
        ],
      },
    },
    "type_cms-1500:ModifiersBox": {
      "availability": undefined,
      "description": undefined,
      "name": "ModifiersBox",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "modifier_1",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "modifier_2",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "modifier_3",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "modifier_4",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:PatientRelationshipToInsured": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientRelationshipToInsured",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "SELF",
          },
          {
            "description": undefined,
            "value": "SPOUSE",
          },
          {
            "description": undefined,
            "value": "CHILD",
          },
          {
            "description": undefined,
            "value": "OTHER",
          },
        ],
      },
    },
    "type_cms-1500:PhoneNumberBox": {
      "availability": undefined,
      "description": undefined,
      "name": "PhoneNumberBox",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "area_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "prefix_and_line_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:ServiceLineBox": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLineBox",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_a_from",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:DateBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_a_to",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:DateBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_b_place_of_service",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_c_emg",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_d_procedure_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_d_modifier",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_cms-1500:ModifiersBox",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_e_diagnosis_pointer",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_f_charges",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_g_days_or_units",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_h_epsdt",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_h_family_plan",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_i_id_qual",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_j_id_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_j_rendering_provider_npi",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "box_24_suppl",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_cms-1500:Sex": {
      "availability": undefined,
      "description": undefined,
      "name": "Sex",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "M",
          },
          {
            "description": undefined,
            "value": "F",
          },
        ],
      },
    },
    "type_cms-1500:SignatureDateBox": {
      "availability": undefined,
      "description": undefined,
      "name": "SignatureDateBox",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "signature",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "date",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_commons:AdjustmentId": {
      "availability": undefined,
      "description": undefined,
      "name": "AdjustmentId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_commons:Auth0Id": {
      "availability": undefined,
      "description": undefined,
      "name": "Auth0Id",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_commons:ClaimAdjustmentGroupCodes": {
      "availability": undefined,
      "description": undefined,
      "name": "ClaimAdjustmentGroupCodes",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "CO",
          },
          {
            "description": undefined,
            "value": "CR",
          },
          {
            "description": undefined,
            "value": "DE",
          },
          {
            "description": undefined,
            "value": "MA",
          },
          {
            "description": undefined,
            "value": "OA",
          },
          {
            "description": undefined,
            "value": "PI",
          },
          {
            "description": undefined,
            "value": "PR",
          },
          {
            "description": undefined,
            "value": "RR",
          },
          {
            "description": undefined,
            "value": "NC",
          },
        ],
      },
    },
    "type_commons:ClaimId": {
      "availability": undefined,
      "description": undefined,
      "name": "ClaimId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_commons:ClaimSubmissionId": {
      "availability": undefined,
      "description": undefined,
      "name": "ClaimSubmissionId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_commons:ClaimSubmissionPayerResponsibilityType": {
      "availability": undefined,
      "description": undefined,
      "name": "ClaimSubmissionPayerResponsibilityType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "primary",
          },
          {
            "description": undefined,
            "value": "secondary",
          },
        ],
      },
    },
    "type_commons:ContentDownloadUrl": {
      "availability": undefined,
      "description": undefined,
      "name": "ContentDownloadUrl",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_commons:ContentDownloadUrlWithExpiration": {
      "availability": undefined,
      "description": undefined,
      "name": "ContentDownloadUrlWithExpiration",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "url",
            "valueType": {
              "type": "id",
              "value": "type_commons:ContentDownloadUrl",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "expiration_time_seconds",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_commons:Date": {
      "availability": undefined,
      "description": "ISO 8601 date; formatted YYYY-MM-DD (i.e. 2012-02-01)",
      "name": "Date",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_commons:DateRangeOptionalEnd": {
      "availability": undefined,
      "description": undefined,
      "name": "DateRangeOptionalEnd",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "start_date",
            "valueType": {
              "type": "id",
              "value": "type_commons:Date",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "end_date",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_commons:DateRangeRequiredEnd": {
      "availability": undefined,
      "description": undefined,
      "name": "DateRangeRequiredEnd",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "start_date",
            "valueType": {
              "type": "id",
              "value": "type_commons:Date",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "end_date",
            "valueType": {
              "type": "id",
              "value": "type_commons:Date",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_commons:Decimal": {
      "availability": undefined,
      "description": "String representation of a Decimal that can be parsed by most libraries.",
      "name": "Decimal",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_commons:Email": {
      "availability": undefined,
      "description": undefined,
      "name": "Email",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_commons:EmrPayerCrosswalk": {
      "availability": undefined,
      "description": undefined,
      "name": "EmrPayerCrosswalk",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "HEALTHIE",
          },
          {
            "description": undefined,
            "value": "CANVAS",
          },
        ],
      },
    },
    "type_commons:EncounterExternalId": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterExternalId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_commons:EncounterId": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_commons:EntityConflictErrorMessage": {
      "availability": undefined,
      "description": undefined,
      "name": "EntityConflictErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "entity_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_commons:EntityNotFoundErrorMessage": {
      "availability": undefined,
      "description": undefined,
      "name": "EntityNotFoundErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_commons:ErrorMessage": {
      "availability": undefined,
      "description": undefined,
      "name": "ErrorMessage",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_commons:FacilityTypeCode": {
      "availability": undefined,
      "description": "Box 24B on the CMS-1500 claim form. Line-level place of service is not currently supported.
02 for telemedicine, 11 for in-person. Full list here:
https://www.cms.gov/Medicare/Coding/place-of-service-codes/Place_of_Service_Code_Set
",
      "name": "FacilityTypeCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "01",
          },
          {
            "description": undefined,
            "value": "02",
          },
          {
            "description": undefined,
            "value": "03",
          },
          {
            "description": undefined,
            "value": "04",
          },
          {
            "description": undefined,
            "value": "05",
          },
          {
            "description": undefined,
            "value": "06",
          },
          {
            "description": undefined,
            "value": "07",
          },
          {
            "description": undefined,
            "value": "08",
          },
          {
            "description": undefined,
            "value": "09",
          },
          {
            "description": undefined,
            "value": "10",
          },
          {
            "description": undefined,
            "value": "11",
          },
          {
            "description": undefined,
            "value": "12",
          },
          {
            "description": undefined,
            "value": "13",
          },
          {
            "description": undefined,
            "value": "14",
          },
          {
            "description": undefined,
            "value": "15",
          },
          {
            "description": undefined,
            "value": "16",
          },
          {
            "description": undefined,
            "value": "17",
          },
          {
            "description": undefined,
            "value": "18",
          },
          {
            "description": undefined,
            "value": "19",
          },
          {
            "description": undefined,
            "value": "20",
          },
          {
            "description": undefined,
            "value": "21",
          },
          {
            "description": undefined,
            "value": "22",
          },
          {
            "description": undefined,
            "value": "23",
          },
          {
            "description": undefined,
            "value": "24",
          },
          {
            "description": undefined,
            "value": "25",
          },
          {
            "description": undefined,
            "value": "26",
          },
          {
            "description": undefined,
            "value": "31",
          },
          {
            "description": undefined,
            "value": "32",
          },
          {
            "description": undefined,
            "value": "33",
          },
          {
            "description": undefined,
            "value": "34",
          },
          {
            "description": undefined,
            "value": "41",
          },
          {
            "description": undefined,
            "value": "42",
          },
          {
            "description": undefined,
            "value": "49",
          },
          {
            "description": undefined,
            "value": "50",
          },
          {
            "description": undefined,
            "value": "51",
          },
          {
            "description": undefined,
            "value": "52",
          },
          {
            "description": undefined,
            "value": "53",
          },
          {
            "description": undefined,
            "value": "54",
          },
          {
            "description": undefined,
            "value": "55",
          },
          {
            "description": undefined,
            "value": "56",
          },
          {
            "description": undefined,
            "value": "57",
          },
          {
            "description": undefined,
            "value": "58",
          },
          {
            "description": undefined,
            "value": "60",
          },
          {
            "description": undefined,
            "value": "61",
          },
          {
            "description": undefined,
            "value": "62",
          },
          {
            "description": undefined,
            "value": "65",
          },
          {
            "description": undefined,
            "value": "71",
          },
          {
            "description": undefined,
            "value": "72",
          },
          {
            "description": undefined,
            "value": "81",
          },
          {
            "description": undefined,
            "value": "99",
          },
        ],
      },
    },
    "type_commons:InsuranceTypeCode": {
      "availability": undefined,
      "description": "Code identifying the type of insurance policy within a specific insurance program (X12 008020 Element 1336)",
      "name": "InsuranceTypeCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "Short Term Insurance",
            "value": "01",
          },
          {
            "description": "Medicare Secondary Working Aged Beneficiary or Spouse with Employer Group Health Plan",
            "value": "12",
          },
          {
            "description": "Medicare Secondary End-Stage Renal Disease Beneficiary in the Mandated Coordination Period with an Employer's Group Health Plan",
            "value": "13",
          },
          {
            "description": "Medicare Secondary, No-fault Insurance including Auto is Primary",
            "value": "14",
          },
          {
            "description": "Medicare Secondary Worker's Compensation",
            "value": "15",
          },
          {
            "description": "Medicare Secondary Public Health Service (PHS) or Other Federal Agency",
            "value": "16",
          },
          {
            "description": "Dental",
            "value": "17",
          },
          {
            "description": "Vision",
            "value": "18",
          },
          {
            "description": "Prescription Drugs",
            "value": "19",
          },
          {
            "description": "Medicare Secondary Black Lung",
            "value": "41",
          },
          {
            "description": "Medicare Secondary Veteran's Administration",
            "value": "42",
          },
          {
            "description": "Medicare Secondary Disabled Beneficiary Under Age 65 with Large Group Health Plan (LGHP)",
            "value": "43",
          },
          {
            "description": "Medicare Secondary, Other Liability Insurance is Primary",
            "value": "47",
          },
          {
            "description": "Auto Insurance Policy",
            "value": "AP",
          },
          {
            "description": "Commercial",
            "value": "C1",
          },
          {
            "description": "Consolidated Omnibus Budget Reconciliation Act (COBRA)",
            "value": "CO",
          },
          {
            "description": "Medicare Conditionally Primary",
            "value": "CP",
          },
          {
            "description": "Disability - Provides periodic payments to replace income when an insured person is unable to work as a result of illness, injury or disease",
            "value": "D",
          },
          {
            "description": "Disability Benefits",
            "value": "DB",
          },
          {
            "description": "Medicare - Point of Service (POS)",
            "value": "E",
          },
          {
            "description": "Exclusive Provider Organization - Gives subscriber a choice of providers from an approved/contracted payer list; there are fixed dollar co-payments for most covered services in return for using plan providers",
            "value": "EP",
          },
          {
            "description": "Family or Friends",
            "value": "FF",
          },
          {
            "description": "Group Policy - Two or more people who are part of complete unit who enter into an insurance contract with an insurance company",
            "value": "GP",
          },
          {
            "description": "Health Insurance Exchange (HIX) Silver",
            "value": "HA",
          },
          {
            "description": "Health Insurance Exchange (HIX) Bronze",
            "value": "HB",
          },
          {
            "description": "High Deductible Health Plan",
            "value": "HD",
          },
          {
            "description": "Health Insurance Exchange (HIX) Gold",
            "value": "HG",
          },
          {
            "description": "Health Maintenance Organization (HMO)",
            "value": "HM",
          },
          {
            "description": "Health Maintenance Organization (HMO) - Medicare Risk",
            "value": "HN",
          },
          {
            "description": "Health Insurance Exchange (HIX) Platinum",
            "value": "HP",
          },
          {
            "description": "Special Low Income Medicare Beneficiary - An individual eligible for Medicare for whom Medicaid pays only Medicare premiums",
            "value": "HS",
          },
          {
            "description": "Indemnity - Gives a subscriber the choice to select any provider.  Payment is fixed percentage of the cost for covered care after satisfying an annual deductible",
            "value": "IN",
          },
          {
            "description": "Individual Policy",
            "value": "IP",
          },
          {
            "description": "Long Term Care - Coverage designed to help pay for some or all long term care costs, reducing the risk that a policy-holder would need to deplete all of his or her assets to pay for long term care",
            "value": "LC",
          },
          {
            "description": "Long Term Policy",
            "value": "LD",
          },
          {
            "description": "Life Insurance",
            "value": "LI",
          },
          {
            "description": "Litigation",
            "value": "LT",
          },
          {
            "description": "Medicare Advantage Point of Service (POS) Plan that excludes Part D coverage",
            "value": "M",
          },
          {
            "description": "Medicare Part A",
            "value": "MA",
          },
          {
            "description": "Medicare Part B",
            "value": "MB",
          },
          {
            "description": "Medicaid - Program of health care services made available to medically indigent and other needy persons, regardless of age, under terms of a 1965 amendment to the U.S. Social Security Act",
            "value": "MC",
          },
          {
            "description": "Medicare Part D",
            "value": "MD",
          },
          {
            "description": "Medicare Advantage Preferred Provider Organization (PPO) Plan that excludes Part D Coverage",
            "value": "ME",
          },
          {
            "description": "Medicare Advantage Private Fee for Service",
            "value": "MF",
          },
          {
            "description": "Medigap Part A - Health insurance policy intended to cover the non-covered portion of expenses eligible for Medicare Part A reimbursement which must be paid by a Medicare beneficiary for health care services and/or supplies received",
            "value": "MH",
          },
          {
            "description": "Medigap Part B - Health insurance policy intended to cover the non-covered portion of expenses eligible for Medicare Part B reimbursement which must be paid by a Medicare beneficiary for health care services and/or supplies received",
            "value": "MI",
          },
          {
            "description": "Medicare Advantage Health Maintenance Organization (HMO) Plan that includes Part D Coverage",
            "value": "MJ",
          },
          {
            "description": "Medicare Advantage Health Maintenance Organization (HMO) Risk Plan that includes Part D Coverage",
            "value": "MK",
          },
          {
            "description": "Medicare Advantage Indemnity Plan that includes Part D Coverage",
            "value": "ML",
          },
          {
            "description": "Medicare Advantage Preferred Provider Organization (PPO) Plan that includes Part D Coverage",
            "value": "MM",
          },
          {
            "description": "Medicare Advantage Indemnity Plan that excludes Part D coverage",
            "value": "MN",
          },
          {
            "description": "Medicare Advantage Point of Service (POS) Plan that includes Part D Coverage",
            "value": "MO",
          },
          {
            "description": "Medicare Primary - Medicare has the primary responsibility to pay for health care services and/or supplies received by a covered beneficiary (a person entitled to Medicare benefits)",
            "value": "MP",
          },
          {
            "description": "Medicare Advantage Health Maintenance Organization (HMO) Risk Plan that excludes Part D coverage",
            "value": "MR",
          },
          {
            "description": "Medicare Advantage Health Maintenance Organization (HMO) Plan that excludes Part D coverage",
            "value": "MT",
          },
          {
            "description": "Medicare Advantage",
            "value": "MV",
          },
          {
            "description": "Open Access Point of Service Plan",
            "value": "OA",
          },
          {
            "description": "Other",
            "value": "OT",
          },
          {
            "description": "Property Insurance - Personal",
            "value": "PE",
          },
          {
            "description": "Personal",
            "value": "PL",
          },
          {
            "description": "Personal Payment (Cash - No Insurance)",
            "value": "PP",
          },
          {
            "description": "Preferred Provider Organization (PPO)",
            "value": "PR",
          },
          {
            "description": "Point of Service (POS)",
            "value": "PS",
          },
          {
            "description": "Qualified Medicare Beneficiary - Coverage for a Medicare eligible individual for whom Medicaid pays only for Medicare premiums, co-insurance, and deductibles",
            "value": "QM",
          },
          {
            "description": "Property Insurance - Real",
            "value": "RP",
          },
          {
            "description": "Supplemental Policy - An insurance policy intended to cover non-covered charges of another insurance policy",
            "value": "SP",
          },
          {
            "description": "Tax Equity Fiscal Responsibility Act (TEFRA)",
            "value": "TF",
          },
          {
            "description": "Multiple Options Health Plan",
            "value": "U",
          },
          {
            "description": "Workers Compensation - Coverage provides medical treatment, rehabilitation, lost wages and related expenses arising from a job related injury or disease",
            "value": "WC",
          },
          {
            "description": "Wrap Up Policy - A Workers Compensation Policy written for a specific job site, which will include or cover more than one insured",
            "value": "WU",
          },
        ],
      },
    },
    "type_commons:LinkUrl": {
      "availability": undefined,
      "description": undefined,
      "name": "LinkUrl",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_commons:Npi": {
      "availability": undefined,
      "description": undefined,
      "name": "Npi",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_commons:OrganizationId": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_commons:PageToken": {
      "availability": undefined,
      "description": undefined,
      "name": "PageToken",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_commons:PatientExternalId": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientExternalId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_commons:PatientRelationshipToInsuredCodeAll": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientRelationshipToInsuredCodeAll",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "01",
          },
          {
            "description": undefined,
            "value": "04",
          },
          {
            "description": undefined,
            "value": "05",
          },
          {
            "description": undefined,
            "value": "07",
          },
          {
            "description": undefined,
            "value": "10",
          },
          {
            "description": undefined,
            "value": "15",
          },
          {
            "description": undefined,
            "value": "17",
          },
          {
            "description": undefined,
            "value": "18",
          },
          {
            "description": undefined,
            "value": "19",
          },
          {
            "description": undefined,
            "value": "20",
          },
          {
            "description": undefined,
            "value": "21",
          },
          {
            "description": undefined,
            "value": "22",
          },
          {
            "description": undefined,
            "value": "23",
          },
          {
            "description": undefined,
            "value": "24",
          },
          {
            "description": undefined,
            "value": "29",
          },
          {
            "description": undefined,
            "value": "32",
          },
          {
            "description": undefined,
            "value": "33",
          },
          {
            "description": undefined,
            "value": "36",
          },
          {
            "description": undefined,
            "value": "39",
          },
          {
            "description": undefined,
            "value": "40",
          },
          {
            "description": undefined,
            "value": "41",
          },
          {
            "description": undefined,
            "value": "43",
          },
          {
            "description": undefined,
            "value": "53",
          },
          {
            "description": undefined,
            "value": "G8",
          },
        ],
      },
    },
    "type_commons:PhoneNumber": {
      "availability": undefined,
      "description": undefined,
      "name": "PhoneNumber",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "number",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_commons:PhoneNumberType",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_commons:PhoneNumberType": {
      "availability": undefined,
      "description": undefined,
      "name": "PhoneNumberType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "Home",
          },
          {
            "description": undefined,
            "value": "Mobile",
          },
          {
            "description": undefined,
            "value": "Work",
          },
        ],
      },
    },
    "type_commons:ProcedureModifier": {
      "availability": undefined,
      "description": undefined,
      "name": "ProcedureModifier",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "Increased Procedural Services",
            "value": "22",
          },
          {
            "description": "Unusual Anesthesia",
            "value": "23",
          },
          {
            "description": "Unrelated Evaluation and Management Service by the Same Physician or Other Qualified Health Care Professional During a Postoperative Period",
            "value": "24",
          },
          {
            "description": "Significant, Separately Identifiable Evaluation and Management Service by the Same Physician or Other Qualified Health Care Professional on the Same Day of the Procedure or Other Service",
            "value": "25",
          },
          {
            "description": "Professional Component",
            "value": "26",
          },
          {
            "description": "Multiple Outpatient Hospital E/M Encounters on the Same Date",
            "value": "27",
          },
          {
            "description": "Mandated Services",
            "value": "32",
          },
          {
            "description": "Preventive Services",
            "value": "33",
          },
          {
            "description": "Anesthesia by Surgeon",
            "value": "47",
          },
          {
            "description": "Bilateral Procedure",
            "value": "50",
          },
          {
            "description": "Multiple Procedures",
            "value": "51",
          },
          {
            "description": "Reduced Services",
            "value": "52",
          },
          {
            "description": "Discontinued Procedure",
            "value": "53",
          },
          {
            "description": "Surgical Care Only",
            "value": "54",
          },
          {
            "description": "Postoperative Management Only",
            "value": "55",
          },
          {
            "description": "Preoperative Management Only",
            "value": "56",
          },
          {
            "description": "Decision for Surgery",
            "value": "57",
          },
          {
            "description": "Staged or Related Procedure or Service by the Same Physician or Other Qualified Health Care Professional During the Postoperative Period",
            "value": "58",
          },
          {
            "description": "Distinct Procedural Service",
            "value": "59",
          },
          {
            "description": "Two Surgeons",
            "value": "62",
          },
          {
            "description": "Procedure Performed on Infants less than 4 kg",
            "value": "63",
          },
          {
            "description": "Surgical Team",
            "value": "66",
          },
          {
            "description": "Discontinued Outpatient Hospital/Ambulatory Surgery Center (ASC) Procedure After Administration of Anesthesia",
            "value": "74",
          },
          {
            "description": "Repeat Procedure or Service by Same Physician or Other Qualified Health Care Professional",
            "value": "76",
          },
          {
            "description": "Repeat Procedure by Another Physician or Other Qualified Health Care Professional",
            "value": "77",
          },
          {
            "description": "Unplanned Return to the Operating/Procedure Room by the Same Physician or Other Qualified Health Care Professional Following Initial Procedure for a Related Procedure During the Postoperative Period",
            "value": "78",
          },
          {
            "description": "Unrelated Procedure or Service by the Same Physician or Other Qualified Health Care Professional During the Postoperative Period",
            "value": "79",
          },
          {
            "description": "Assistant Surgeon",
            "value": "80",
          },
          {
            "description": "Minimum Assistant Surgeon",
            "value": "81",
          },
          {
            "description": "Assistant Surgeon (when qualified resident surgeon not available)",
            "value": "82",
          },
          {
            "description": "Reference (Outside) Laboratory",
            "value": "90",
          },
          {
            "description": "Repeat Clinical Diagnostic Laboratory Test",
            "value": "91",
          },
          {
            "description": "Alternative Laboratory Platform Testing",
            "value": "92",
          },
          {
            "description": "Synchronous Telemedicine Service Rendered Via Telephone or Other Real-Time Interactive Audio-Only Telecommunications System",
            "value": "93",
          },
          {
            "description": "Synchronous Telemedicine Service Rendered via a Real-Time Interactive Audio and Video Telecommunications System",
            "value": "95",
          },
          {
            "description": "Habilitative Services",
            "value": "96",
          },
          {
            "description": "Rehabilitative Services",
            "value": "97",
          },
          {
            "description": "Multiple Modifiers",
            "value": "99",
          },
          {
            "description": "Dressing for one wound",
            "value": "A1",
          },
          {
            "description": "Dressing for two wounds",
            "value": "A2",
          },
          {
            "description": "Dressing for three wounds",
            "value": "A3",
          },
          {
            "description": "Dressing for four wounds",
            "value": "A4",
          },
          {
            "description": "Dressing for five wounds",
            "value": "A5",
          },
          {
            "description": "Dressing for six wounds",
            "value": "A6",
          },
          {
            "description": "Dressing for seven wounds",
            "value": "A7",
          },
          {
            "description": "Dressing for eight wounds",
            "value": "A8",
          },
          {
            "description": "Dressing for nine wounds",
            "value": "A9",
          },
          {
            "description": "Anesthesia services performed personally by anesthesiologist",
            "value": "AA",
          },
          {
            "description": "Audiology service furnished personally by an audiologist without a physician/npp order for non-acute hearing assessment ...
",
            "value": "AB",
          },
          {
            "description": "Medical supervision by a physician: more than four concurrent anesthesia procedures
",
            "value": "AD",
          },
          {
            "description": "Registered dietician",
            "value": "AE",
          },
          {
            "description": "Specialty physician",
            "value": "AF",
          },
          {
            "description": "Primary physician",
            "value": "AG",
          },
          {
            "description": "Clinical psychologist",
            "value": "AH",
          },
          {
            "description": "Principal physician of record",
            "value": "AI",
          },
          {
            "description": "Clinical social worker",
            "value": "AJ",
          },
          {
            "description": "Non participating physician",
            "value": "AK",
          },
          {
            "description": "Physician, team member service",
            "value": "AM",
          },
          {
            "description": "Alternate payment method declined by provider of service",
            "value": "AO",
          },
          {
            "description": "Determination of refractive state was not performed in the course of diagnostic ophthalmological examination",
            "value": "AP",
          },
          {
            "description": "Physician providing a service in an unlisted health professional shortage area (hpsa)",
            "value": "AQ",
          },
          {
            "description": "Physician provider services in a physician scarcity area",
            "value": "AR",
          },
          {
            "description": "Physician assistant, nurse practitioner, or clinical nurse specialist services for assistant at surgery",
            "value": "AS",
          },
          {
            "description": "Acute treatment",
            "value": "AT",
          },
          {
            "description": "Physician providing a service in a dental health professional shortage area for the purpose of an EHR incentive payment",
            "value": "AZ",
          },
          {
            "description": "Item furnished in conjunction with parenteral enteral nutrition (pen) services",
            "value": "BA",
          },
          {
            "description": "Special acquisition of blood and blood products",
            "value": "BL",
          },
          {
            "description": "Orally administered nutrition, not by feeding tube",
            "value": "BO",
          },
          {
            "description": "The beneficiary has been informed of the purchase and rental options and has elected to purchase the item",
            "value": "BP",
          },
          {
            "description": "The beneficiary has been informed of the purchase and rental options and has elected to rent the item",
            "value": "BR",
          },
          {
            "description": "The beneficiary has been informed of the purchase and rental options and after 30 days has not informed the supplier",
            "value": "BU",
          },
          {
            "description": "Procedure payable only in the inpatient setting when performed emergently on an outpatient who expires prior to admission",
            "value": "CA",
          },
          {
            "description": "Service ordered by a renal dialysis facility (rdf) physician as part of the ESRD beneficiary's dialysis benefit",
            "value": "CB",
          },
          {
            "description": "Procedure code change",
            "value": "CC",
          },
          {
            "description": "Amcc test has been ordered by an ESRD facility or MCP physician that is not separately billable",
            "value": "CD",
          },
          {
            "description": "Amcc test has been ordered by an esrd facility or mcp physician that is beyond the normal frequency covered",
            "value": "CE",
          },
          {
            "description": "Amcc test has been ordered by an esrd facility or mcp physician that is separately billable",
            "value": "CF",
          },
          {
            "description": "Policy criteria applied",
            "value": "CG",
          },
          {
            "description": "0 percent impaired, limited or restricted",
            "value": "CH",
          },
          {
            "description": "At least 1 percent but less than 20 percent impaired, limited or restricted",
            "value": "CI",
          },
          {
            "description": "At least 20 percent but less than 40 percent impaired, limited or restricted",
            "value": "CJ",
          },
          {
            "description": "At least 40 percent but less than 60 percent impaired, limited or restricted",
            "value": "CK",
          },
          {
            "description": "At least 60 percent but less than 80 percent impaired, limited or restricted",
            "value": "CL",
          },
          {
            "description": "At least 80 percent but less than 100 percent impaired, limited or restricted",
            "value": "CM",
          },
          {
            "description": "100 percent impaired, limited or restricted",
            "value": "CN",
          },
          {
            "description": "Catastrophe/disaster related",
            "value": "CR",
          },
          {
            "description": "Cost sharing for COVID-19 testing",
            "value": "CS",
          },
          {
            "description": "Computed tomography services furnished using equipment that does not meet xr-29-2013 standard",
            "value": "CT",
          },
          {
            "description": "Outpatient physical therapy services furnished in whole or in part by a occupational therapist assistant",
            "value": "CO",
          },
          {
            "description": "Outpatient physical therapy services furnished in whole or in part by a physical therapist assistant",
            "value": "CQ",
          },
          {
            "description": "Upper left, eyelid",
            "value": "E1",
          },
          {
            "description": "Lower left, eyelid",
            "value": "E2",
          },
          {
            "description": "Upper right, eyelid",
            "value": "E3",
          },
          {
            "description": "Lower right, eyelid",
            "value": "E4",
          },
          {
            "description": "Erythropoetic stimulating agent (esa) administered to treat anemia due to anti-cancer chemotherapy",
            "value": "EA",
          },
          {
            "description": "Erythropoetic stimulating agent (esa) administered to treat anemia due to anti-cancer radiotherapy",
            "value": "EB",
          },
          {
            "description": "Erythropoetic stimulating agent (esa) administered to treat anemia not due to anti-cancer radiotherapy or chemotherapy",
            "value": "EC",
          },
          {
            "description": "Hematocrit level has exceeded 39% (or hemoglobin level has exceeded 13.0 g/dl) for 3 or more consecutive billing cycles",
            "value": "ED",
          },
          {
            "description": "Hematocrit level has not exceeded 39% (or hemoglobin level has not exceeded 13.0 g/dl) for 3 or more billing cycles",
            "value": "EE",
          },
          {
            "description": "Subsequent claims for a defined course of therapy, e.g., epo, sodium hyaluronate, infliximab",
            "value": "EJ",
          },
          {
            "description": "Emergency reserve supply (for esrd benefit only)",
            "value": "EM",
          },
          {
            "description": "Service provided as part of medicaid early periodic screening diagnosis and treatment (epsdt) program",
            "value": "EP",
          },
          {
            "description": "Items and services furnished by a provider-based, off-campus emergency department",
            "value": "ER",
          },
          {
            "description": "Emergency services",
            "value": "ET",
          },
          {
            "description": "Expatriate beneficiary",
            "value": "EX",
          },
          {
            "description": "No physician or other licensed health care provider order for this item or service",
            "value": "EY",
          },
          {
            "description": "Left hand, second digit",
            "value": "F1",
          },
          {
            "description": "Left hand, third digit",
            "value": "F2",
          },
          {
            "description": "Left hand, fourth digit",
            "value": "F3",
          },
          {
            "description": "Left hand, fifth digit",
            "value": "F4",
          },
          {
            "description": "Right hand, thumb",
            "value": "F5",
          },
          {
            "description": "Right hand, second digit",
            "value": "F6",
          },
          {
            "description": "Right hand, third digit",
            "value": "F7",
          },
          {
            "description": "Right hand, fourth digit",
            "value": "F8",
          },
          {
            "description": "Right hand, fifth digit",
            "value": "F9",
          },
          {
            "description": "Right hand, thumb",
            "value": "FA",
          },
          {
            "description": "Item provided without cost to provider, supplier or practitioner, or full credit received for replaced device",
            "value": "FB",
          },
          {
            "description": "Partial credit received for replaced device",
            "value": "FC",
          },
          {
            "description": "Service provided as part of family planning program",
            "value": "FP",
          },
          {
            "description": "Telehealth service furnished using real-time audio-only communication technology.",
            "value": "FQ",
          },
          {
            "description": "A supervising practitioner was present through a real-time two-way, audio/video communication technology.",
            "value": "FR",
          },
          {
            "description": "Split (or shared) evaluation and management visit.",
            "value": "FS",
          },
          {
            "description": "Unrelated evaluation and management (e/m) visit on the same day as another e/m visit or during a global procedure",
            "value": "FT",
          },
          {
            "description": "X-ray taken using film",
            "value": "FX",
          },
          {
            "description": "X-ray taken using computed radiography technology/cassette-based imaging",
            "value": "FY",
          },
          {
            "description": "Telehealth Services For Diagnosis, Evaluation, Or Treatment, Of Symptoms Of An Acute Stroke",
            "value": "G0",
          },
          {
            "description": "Most recent urr reading of less than 60",
            "value": "G1",
          },
          {
            "description": "Most recent urr reading of 60 to 64.9",
            "value": "G2",
          },
          {
            "description": "Most recent urr reading of 65 to 69.9",
            "value": "G3",
          },
          {
            "description": "Most recent urr reading of 70 to 74.9",
            "value": "G4",
          },
          {
            "description": "Most recent urr reading of 75 or greater",
            "value": "G5",
          },
          {
            "description": "ESRD patient for whom less than six dialysis sessions have been provided in a month",
            "value": "G6",
          },
          {
            "description": "Pregnancy resulted from rape or incest or pregnancy certified by physician as life threatening",
            "value": "G7",
          },
          {
            "description": "Monitored anesthesia care (mac) for deep complex, complicated, or markedly invasive surgical procedure",
            "value": "G8",
          },
          {
            "description": "Monitored anesthesia care for patient who has history of severe cardio-pulmonary condition",
            "value": "G9",
          },
          {
            "description": "Waiver of liability statement issued as required by payer policy, individual case",
            "value": "GA",
          },
          {
            "description": "Claim being re-submitted for payment because it is no longer covered under a global payment demonstration",
            "value": "GB",
          },
          {
            "description": "This service has been performed in part by a resident under the direction of a teaching physician",
            "value": "GC",
          },
          {
            "description": "This service has been performed by a resident without the presence of a teaching physician under the primary care exception",
            "value": "GE",
          },
          {
            "description": "Non-physician (e.g. nurse practitioner (np), certified registered nurse anesthetist (crna), certified registered nurse (crn), clinical nurse specialist (cns), physician assistant (pa)) services in a critical access hospital",
            "value": "GF",
          },
          {
            "description": "Performance and payment of a screening mammogram and diagnostic mammogram on the same patient, same day",
            "value": "GG",
          },
          {
            "description": "Diagnostic mammogram converted from screening mammogram on same day",
            "value": "GH",
          },
          {
            "description": "opt out physician or practitioner emergency or urgent service",
            "value": "GJ",
          },
          {
            "description": "Reasonable and necessary item/service associated with a ga or gz modifier",
            "value": "GK",
          },
          {
            "description": "Medically unnecessary upgrade provided instead of non-upgraded item, no charge, no advance beneficiary notice (abn)",
            "value": "GL",
          },
          {
            "description": "Multiple patients on one ambulance trip",
            "value": "GM",
          },
          {
            "description": "Services delivered under an outpatient speech-language pathology plan of care",
            "value": "GN",
          },
          {
            "description": "Service delivered personally by an occupational therapist or under an outpatient occupational therapy plan of care",
            "value": "GO",
          },
          {
            "description": "Service delivered personally by a physical therapist or under an outpatient physical therapy plan of care",
            "value": "GP",
          },
          {
            "description": "Services provided via an asynchronous telecommunications system",
            "value": "GQ",
          },
          {
            "description": "This service was performed in whole or in part by a resident in a department of veterans affairs medical center or clinic, supervised in accordance with va policy",
            "value": "GR",
          },
          {
            "description": "Dosage of erythropoietin stimulating agent has been reduced and maintained in response to hematocrit or hemoglobin level",
            "value": "GS",
          },
          {
            "description": "Services took place via an interactive audio and video telecommunications system",
            "value": "GT",
          },
          {
            "description": "Waiver of liability statement issued as required by payer policy, routine notice",
            "value": "GU",
          },
          {
            "description": "Attending physician not employed or paid under arrangement by the patient's hospice provider",
            "value": "GV",
          },
          {
            "description": "Service not related to the hospice patient's terminal condition",
            "value": "GW",
          },
          {
            "description": "Notice of liability issued, voluntary under payer policy",
            "value": "GX",
          },
          {
            "description": "Not a covered benefit",
            "value": "GY",
          },
          {
            "description": "Item or service expected to be denied as not reasonable and necessary",
            "value": "GZ",
          },
          {
            "description": "Child/adolescent program",
            "value": "HA",
          },
          {
            "description": "Adult program, non geriatric",
            "value": "HB",
          },
          {
            "description": "Adult program, geriatric",
            "value": "HC",
          },
          {
            "description": "Pregnant/parenting women's program",
            "value": "HD",
          },
          {
            "description": "Mental health program",
            "value": "HE",
          },
          {
            "description": "Substance abuse program",
            "value": "HF",
          },
          {
            "description": "Opioid addiction treatment program",
            "value": "HG",
          },
          {
            "description": "Integrated mental health/substance abuse program",
            "value": "HH",
          },
          {
            "description": "Integrated mental health and intellectual disability/developmental disabilities program",
            "value": "HI",
          },
          {
            "description": "Employee assistance program",
            "value": "HJ",
          },
          {
            "description": "Specialized mental health programs for high-risk populations",
            "value": "HK",
          },
          {
            "description": "Intern",
            "value": "HL",
          },
          {
            "description": "The rendering provider has a highest educational attainment of less than a bachelor's degree",
            "value": "HM",
          },
          {
            "description": "The rendering provider has a highest educational attainment of a bachelor's degree",
            "value": "HN",
          },
          {
            "description": "The rendering provider has a highest educational attainment of a master's degree",
            "value": "HO",
          },
          {
            "description": "The rendering provider has a highest educational attainment of a doctoral degree",
            "value": "HP",
          },
          {
            "description": "Group setting",
            "value": "HQ",
          },
          {
            "description": "Family/couple with client present",
            "value": "HR",
          },
          {
            "description": "Family/couple without client present",
            "value": "HS",
          },
          {
            "description": "Multi-disciplinary team",
            "value": "HT",
          },
          {
            "description": "Funded by child welfare agency",
            "value": "HU",
          },
          {
            "description": "Funded by state addictions agency",
            "value": "HV",
          },
          {
            "description": "Funded by state mental health agency",
            "value": "HW",
          },
          {
            "description": "Funded by county/local agency",
            "value": "HX",
          },
          {
            "description": "Funded by juvenile justice agency",
            "value": "HY",
          },
          {
            "description": "Funded by criminal justice agency",
            "value": "HZ",
          },
          {
            "description": "Competitive acquisition program no-pay submission for a prescription number",
            "value": "J1",
          },
          {
            "description": "Competitive acquisition program, restocking of emergency drugs after emergency administration",
            "value": "J2",
          },
          {
            "description": "Competitive acquisition program (cap) reimbursed under average sales price methodology",
            "value": "J3",
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program that is furnished by a hospital upon discharge",
            "value": "J4",
          },
          {
            "description": "Off-the-shelf orthotic subject to DMEPOS competitive bidding program",
            "value": "J5",
          },
          {
            "description": "Administered intravenously",
            "value": "JA",
          },
          {
            "description": "Administered subcutaneously",
            "value": "JB",
          },
          {
            "description": "Skin substitute used as a graft",
            "value": "JC",
          },
          {
            "description": "Skin substitute not used as a graft",
            "value": "JD",
          },
          {
            "description": "Administered via dialysate",
            "value": "JE",
          },
          {
            "description": "Drug or biological acquired with 340b drug pricing program discount",
            "value": "JG",
          },
          {
            "description": "Drug amount discarded/not administered to any patient",
            "value": "JW",
          },
          {
            "description": "Zero drug amount discarded/not administered to any patient",
            "value": "JZ",
          },
          {
            "description": "Lower extremity prosthesis functional level 0",
            "value": "K0",
          },
          {
            "description": "Lower extremity prosthesis functional level 1",
            "value": "K1",
          },
          {
            "description": "Lower extremity prosthesis functional level 2",
            "value": "K2",
          },
          {
            "description": "Lower extremity prosthesis functional level 3",
            "value": "K3",
          },
          {
            "description": "Lower extremity prosthesis functional level 4",
            "value": "K4",
          },
          {
            "description": "Add on option/accessory for wheelchair",
            "value": "KA",
          },
          {
            "description": "Beneficiary requested upgrade for abn, more than 4 modifiers identified on claim",
            "value": "KB",
          },
          {
            "description": "Replacement of special power wheelchair interface",
            "value": "KC",
          },
          {
            "description": "Drug or biological infused through DME",
            "value": "KD",
          },
          {
            "description": "Bid under round one of the DMEPOS competitive bidding program",
            "value": "KE",
          },
          {
            "description": "Item designated by FDA as class III device",
            "value": "KF",
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program number 1",
            "value": "KG",
          },
          {
            "description": "DMEPOS item, initial claim, purchase or first month rental",
            "value": "KH",
          },
          {
            "description": "DMEPOS item, second or third month rental",
            "value": "KI",
          },
          {
            "description": "DMEPOS item, parenteral enteral nutrition (pen) pump or capped rental, months four to fifteen",
            "value": "KJ",
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program number 2",
            "value": "KK",
          },
          {
            "description": "DMEPOS item delivered via mail",
            "value": "KL",
          },
          {
            "description": "Replacement of facial prosthesis including new impression/moulage",
            "value": "KM",
          },
          {
            "description": "Replacement of facial prosthesis using previous master model",
            "value": "KN",
          },
          {
            "description": "Single drug unit dose formulation",
            "value": "KO",
          },
          {
            "description": "First drug of a multiple drug unit dose formulation",
            "value": "KP",
          },
          {
            "description": "Second or subsequent drug of a multiple drug unit dose formulation",
            "value": "KQ",
          },
          {
            "description": "Rental item, billing for partial month",
            "value": "KR",
          },
          {
            "description": "Glucose monitor supply for diabetic beneficiary not treated with insulin",
            "value": "KS",
          },
          {
            "description": "Beneficiary resides in a competitive bidding area and travels outside that competitive bidding area",
            "value": "KT",
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program number 3",
            "value": "KU",
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program that is furnished as part of a professional service",
            "value": "KV",
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program number 4",
            "value": "KW",
          },
          {
            "description": "Requirements specified in the medical policy have been met",
            "value": "KX",
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program number 5",
            "value": "KY",
          },
          {
            "description": "New coverage not implemented by managed care",
            "value": "KZ",
          },
          {
            "description": "Left circumflex coronary artery",
            "value": "LC",
          },
          {
            "description": "Left anterior descending coronary artery",
            "value": "LD",
          },
          {
            "description": "Lease/rental",
            "value": "LL",
          },
          {
            "description": "Left main coronary artery",
            "value": "LM",
          },
          {
            "description": "Laboratory round trip",
            "value": "LR",
          },
          {
            "description": "FDA-monitored intraocular lens implant",
            "value": "LS",
          },
          {
            "description": "Left side (used to identify procedures performed on the left side of the body)",
            "value": "LT",
          },
          {
            "description": "Fractionated payment of CAR-T therapy",
            "value": "LU",
          },
          {
            "description": "Medicare secondary payer",
            "value": "M2",
          },
          {
            "description": "Not required to consult clinical decision support... for patient with a suspected or confirmed emergency medical condition",
            "value": "MA",
          },
          {
            "description": "Not required to consult clinical decision support mechanism due to insufficient internet access",
            "value": "MB",
          },
          {
            "description": "Not required to consult clinical decision support mechanism due to electronic health record vendor issues",
            "value": "MC",
          },
          {
            "description": "Not required to consult clinical decision support mechanism due to extreme/uncontrollable circumstances",
            "value": "MD",
          },
          {
            "description": "Adheres to appropriate use criteria in the clinical decision support mechanism consulted by the ordering professional",
            "value": "ME",
          },
          {
            "description": "Does not adhere to the criteria in the clinical decision support mechanism consulted by the ordering professional",
            "value": "MF",
          },
          {
            "description": "Does not have appropriate use criteria in the clinical decision support mechanism consulted by the ordering professional",
            "value": "MG",
          },
          {
            "description": "Unknown if ordering professional consulted a clinical decision support mechanism for this service",
            "value": "MH",
          },
          {
            "description": "Six month maintenance and servicing fee for parts and labor, not covered under any manufacturer or supplier warranty",
            "value": "MS",
          },
          {
            "description": "Group 1 oxygen coverage criteria met",
            "value": "N1",
          },
          {
            "description": "Group 2 oxygen coverage criteria met",
            "value": "N2",
          },
          {
            "description": "Group 3 oxygen coverage criteria met",
            "value": "N3",
          },
          {
            "description": "Nebulizer system, any type, FDA-cleared for use with specific drug",
            "value": "NB",
          },
          {
            "description": "New when rented",
            "value": "NR",
          },
          {
            "description": "New durable medical equipment purchase",
            "value": "NU",
          },
          {
            "description": "A normal healthy patient",
            "value": "P1",
          },
          {
            "description": "A patient with a mild systemic disease",
            "value": "P2",
          },
          {
            "description": "A patient with severe systemic disease",
            "value": "P3",
          },
          {
            "description": "A patient with severe systemic disease that is a constant threat to life",
            "value": "P4",
          },
          {
            "description": "A moribund patient who is not expected to survive without the operation",
            "value": "P5",
          },
          {
            "description": "A declared brain-dead patient whose organs are being removed for donor purposes",
            "value": "P6",
          },
          {
            "description": "Surgical or other invasive procedure on wrong body part",
            "value": "PA",
          },
          {
            "description": "Surgical or other invasive procedure on wrong patient",
            "value": "PB",
          },
          {
            "description": "Wrong surgery or other invasive procedure on patient",
            "value": "PC",
          },
          {
            "description": "Diagnostic or related non diagnostic item or service provided in a wholly owned or operated entity to a patient who is admitted as an inpatient within 3 days",
            "value": "PD",
          },
          {
            "description": "Positron emission tomography (PET) or PET/computed tomography (CT)",
            "value": "PI",
          },
          {
            "description": "Progressive addition lenses",
            "value": "PL",
          },
          {
            "description": "Post-mortem",
            "value": "PM",
          },
          {
            "description": "Non-excepted service provided at an off-campus, outpatient, provider-based department of a hospital",
            "value": "PN",
          },
          {
            "description": "Excepted service provided at an off-campus, outpatient, provider-based department of a hospital",
            "value": "PO",
          },
          {
            "description": "Positron emission tomography (PET) or pet/computed tomography (CT) to inform the treatment strategy of cancerous tumors",
            "value": "PS",
          },
          {
            "description": "Colorectal cancer screening test; converted to diagnostic test or other procedure",
            "value": "PT",
          },
          {
            "description": "Investigational clinical service provided in a clinical research study that is in an approved clinical research study",
            "value": "Q0",
          },
          {
            "description": "Routine clinical service provided in a clinical research study that is in an approved clinical research study",
            "value": "Q1",
          },
          {
            "description": "Demonstration procedure/service",
            "value": "Q2",
          },
          {
            "description": "Live kidney donor surgery and related services",
            "value": "Q3",
          },
          {
            "description": "Service for ordering/referring physician qualifies as a service exemption",
            "value": "Q4",
          },
          {
            "description": "Service furnished under a reciprocal billing arrangement by a substitute physician; or by a substitute physical therapist furnishing outpatient physical therapy services in a health professional shortage area, a medically underserved area, or a rural area",
            "value": "Q5",
          },
          {
            "description": "Service furnished under a fee-for-time compensation arrangement by a substitute physician; or by a substitute physical therapist furnishing outpatient physical therapy services in a health professional shortage area, a medically underserved area, or a rural area",
            "value": "Q6",
          },
          {
            "description": "One Class A finding",
            "value": "Q7",
          },
          {
            "description": "Two Class A findings",
            "value": "Q8",
          },
          {
            "description": "One Class B and two Class C findings",
            "value": "Q9",
          },
          {
            "description": "Prescribed amounts of stationary oxygen for daytime use differ ... <1 liter per minute",
            "value": "QA",
          },
          {
            "description": "Prescribed amounts of stationary oxygen for daytime use differ ... >4 liters per minute",
            "value": "QB",
          },
          {
            "description": "Single channel monitoring",
            "value": "QC",
          },
          {
            "description": "Recording and storage in solid state memory by a digital recorder",
            "value": "QD",
          },
          {
            "description": "Prescribed amount of stationary oxygen while at rest is less than 1 liter per minute (lpm)",
            "value": "QE",
          },
          {
            "description": "Prescribed amount of stationary oxygen while at rest exceeds 4 liters per minute (lpm) and portable oxygen is prescribed",
            "value": "QF",
          },
          {
            "description": "Prescribed amount of stationary oxygen while at rest is greater than 4 liters per minute (lpm)",
            "value": "QG",
          },
          {
            "description": "Oxygen conserving device is being used with an oxygen delivery system",
            "value": "QH",
          },
          {
            "description": "Services/items provided to a prisoner or patient in state or local custody, however the state or local government, as applicable, meets the requirements in 42 cfr 411.4 (b)",
            "value": "QJ",
          },
          {
            "description": "Medical direction of two, three, or four concurrent anesthesia procedure involving qualified individuals",
            "value": "QK",
          },
          {
            "description": "Patient pronounced dead after ambulance called",
            "value": "QL",
          },
          {
            "description": "Ambulance service provided under arrangement by a provider of services",
            "value": "QM",
          },
          {
            "description": "Ambulance service furnished directly by a provider of services",
            "value": "QN",
          },
          {
            "description": "Laboratory test(s) was ordered individually or ordered as a cpt-recognized panel other than automated profile codes",
            "value": "QP",
          },
          {
            "description": "Ordering professional consulted a qualified clinical decision support mechanism for this service",
            "value": "QQ",
          },
          {
            "description": "Amounts of stationary oxygen for daytime use and nighttime use differ; average of the amounts >4 liters per minute",
            "value": "QR",
          },
          {
            "description": "Monitored anesthesia care service",
            "value": "QS",
          },
          {
            "description": "Recording and storage on tape by an analog tape recorder",
            "value": "QT",
          },
          {
            "description": "CLIA waived",
            "value": "QW",
          },
          {
            "description": "CRNA service: with medical direction by a physician
",
            "value": "QX",
          },
          {
            "description": "Medical direction of one certified registered nurse anesthetist (CRNA) by an anesthesiologist",
            "value": "QY",
          },
          {
            "description": "CRNA service: without medical direction by a physician
",
            "value": "QZ",
          },
          {
            "description": "Replacement of a DME, orthotic or prosthetic item",
            "value": "RA",
          },
          {
            "description": "Replacement of a part of a DME, orthotic or prosthetic item",
            "value": "RB",
          },
          {
            "description": "Right coronary artery",
            "value": "RC",
          },
          {
            "description": "Drug provided to beneficiary, but not administered 'incident-to'",
            "value": "RD",
          },
          {
            "description": "Furnished in full compliance with FDA-mandated risk evaluation and mitigation strategy (REMS)",
            "value": "RE",
          },
          {
            "description": "Ramus intermedius coronary artery",
            "value": "RI",
          },
          {
            "description": "Rental (Use this ‘RR' modifier when DME is to be rented)",
            "value": "RR",
          },
          {
            "description": "Right side (used to identify procedures performed on the right side of the body)",
            "value": "RT",
          },
          {
            "description": "Physician assistant, nurse practitioner, or clinical nurse specialist services for non-surgical services",
            "value": "SA",
          },
          {
            "description": "Nurse midwife",
            "value": "SB",
          },
          {
            "description": "Medically necessary service or supply",
            "value": "SC",
          },
          {
            "description": "Services provided by registered nurse with specialized, highly technical home infusion training",
            "value": "SD",
          },
          {
            "description": "State- and/or federally-funded programs/services",
            "value": "SE",
          },
          {
            "description": "Second opinion ordered by a professional review organization (PRO) per section 9401, p.l. 99-272",
            "value": "SF",
          },
          {
            "description": "Ambulatory surgical center (ASC) facility service",
            "value": "SG",
          },
          {
            "description": "Second concurrently administered infusion therapy",
            "value": "SH",
          },
          {
            "description": "Third or more concurrently administered infusion therapy",
            "value": "SJ",
          },
          {
            "description": "Addresses reimbursement guidelines for vaccines provided at no cost to the provider by a state or federal agency",
            "value": "SL",
          },
          {
            "description": "Second surgical opinion",
            "value": "SM",
          },
          {
            "description": "Third surgical opinion",
            "value": "SN",
          },
          {
            "description": "Item ordered by home health",
            "value": "SQ",
          },
          {
            "description": "Home infusion services provided in the infusion suite of the IV therapy provider",
            "value": "SS",
          },
          {
            "description": "Related to trauma or injury",
            "value": "ST",
          },
          {
            "description": "Procedure performed in physician's office (to denote use of facility and equipment)",
            "value": "SU",
          },
          {
            "description": "Pharamceuticals delivered to patient's home but not utilized",
            "value": "SV",
          },
          {
            "description": "Services provided by a certified diabetic educator",
            "value": "SW",
          },
          {
            "description": "Persons who are in close contact with member of high-risk population (use only with codes for immunization)",
            "value": "SY",
          },
          {
            "description": "Left foot, second digit",
            "value": "T1",
          },
          {
            "description": "Left foot, third digit",
            "value": "T2",
          },
          {
            "description": "Left foot, fourth digit",
            "value": "T3",
          },
          {
            "description": "Left foot, fifth digit",
            "value": "T4",
          },
          {
            "description": "Right foot, great toe",
            "value": "T5",
          },
          {
            "description": "Right foot, second digit",
            "value": "T6",
          },
          {
            "description": "Right foot, third digit",
            "value": "T7",
          },
          {
            "description": "Right foot, fourth digit",
            "value": "T8",
          },
          {
            "description": "Right foot, fifth digit",
            "value": "T9",
          },
          {
            "description": "Left foot, great toe",
            "value": "TA",
          },
          {
            "description": "Drug or biological acquired with 340b drug pricing program discount, reported for informational purposes",
            "value": "TB",
          },
          {
            "description": "Technical Component",
            "value": "TC",
          },
          {
            "description": "Registered nurse (RN)",
            "value": "TD",
          },
          {
            "description": "Licensed vocational nurse (LVN) or licensed practical nurse (LPN)",
            "value": "TE",
          },
          {
            "description": "Intermediate level of care",
            "value": "TF",
          },
          {
            "description": "Complex/high tech level of care",
            "value": "TG",
          },
          {
            "description": "Obstetrical treatment/services, prenatal or postpart",
            "value": "TH",
          },
          {
            "description": "Program group, child and/or adolescent",
            "value": "TJ",
          },
          {
            "description": "Extra patient or passenger, non-ambulance",
            "value": "TK",
          },
          {
            "description": "Early Intervention/Individualized Family Service Plan",
            "value": "TL",
          },
          {
            "description": "Individualized education program (IEP)",
            "value": "TM",
          },
          {
            "description": "Rural/outside providers' customary service area",
            "value": "TN",
          },
          {
            "description": "Medical transport, unloaded vehicle",
            "value": "TP",
          },
          {
            "description": "Basic life support transport by a volunteer ambulance provider",
            "value": "TQ",
          },
          {
            "description": "School-based individualized education program (IEP) services provided outside the public school district",
            "value": "TR",
          },
          {
            "description": "Follow-up service",
            "value": "TS",
          },
          {
            "description": "Individualized service provided to more than one patient in same setting",
            "value": "TT",
          },
          {
            "description": "Special payment rate, overtime",
            "value": "TU",
          },
          {
            "description": "Special payment rates, holidays/weekends",
            "value": "TV",
          },
          {
            "description": "Back-up equipment",
            "value": "TW",
          },
          {
            "description": "Medicaid level of care 1, as defined by each state",
            "value": "U1",
          },
          {
            "description": "Medicaid level of care 2, as defined by each state",
            "value": "U2",
          },
          {
            "description": "Medicaid level of care 3, as defined by each state",
            "value": "U3",
          },
          {
            "description": "Medicaid level of care 4, as defined by each state",
            "value": "U4",
          },
          {
            "description": "Medicaid level of care 5, as defined by each state",
            "value": "U5",
          },
          {
            "description": "Medicaid level of care 6, as defined by each state",
            "value": "U6",
          },
          {
            "description": "Medicaid level of care 7, as defined by each state",
            "value": "U7",
          },
          {
            "description": "Medicaid level of care 8, as defined by each state",
            "value": "U8",
          },
          {
            "description": "Medicaid level of care 9, as defined by each state",
            "value": "U9",
          },
          {
            "description": "Medicaid level of care 10, as defined by each state",
            "value": "UA",
          },
          {
            "description": "Medicaid level of care 11, as defined by each state",
            "value": "UB",
          },
          {
            "description": "Medicaid level of care 12, as defined by each state",
            "value": "UC",
          },
          {
            "description": "Medicaid level of care 13, as defined by each state",
            "value": "UD",
          },
          {
            "description": "Used durable medical equipment",
            "value": "UE",
          },
          {
            "description": "Services provided in the morning",
            "value": "UF",
          },
          {
            "description": "Services provided in the afternoon",
            "value": "UG",
          },
          {
            "description": "Services provided in the evening",
            "value": "UH",
          },
          {
            "description": "Services provided at night",
            "value": "UJ",
          },
          {
            "description": "Services provided on behalf of the client to someone other than the client (collateral relationship)",
            "value": "UK",
          },
          {
            "description": "Two patients served",
            "value": "UN",
          },
          {
            "description": "Three patients served",
            "value": "UP",
          },
          {
            "description": "Four patients served",
            "value": "UQ",
          },
          {
            "description": "Five patients served",
            "value": "UR",
          },
          {
            "description": "Six patients served",
            "value": "US",
          },
          {
            "description": "One patient visit in a month",
            "value": "V1",
          },
          {
            "description": "Two patient visits in a month",
            "value": "V2",
          },
          {
            "description": "Three patient visits in a month",
            "value": "V3",
          },
        ],
      },
    },
    "type_commons:RaRunId": {
      "availability": undefined,
      "description": undefined,
      "name": "RaRunId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_commons:RegionNational": {
      "availability": undefined,
      "description": undefined,
      "name": "RegionNational",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_commons:RegionStates": {
      "availability": undefined,
      "description": undefined,
      "name": "RegionStates",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "states",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:State",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_commons:Regions": {
      "availability": undefined,
      "description": undefined,
      "name": "Regions",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_commons:RegionStates",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "states",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_commons:RegionNational",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "national",
          },
        ],
      },
    },
    "type_commons:RemovableDateRangeOptionalEnd": {
      "availability": undefined,
      "description": undefined,
      "name": "RemovableDateRangeOptionalEnd",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_commons:DateRangeOptionalEnd",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "date_range",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "remove",
          },
        ],
      },
    },
    "type_commons:RequestValidationError": {
      "availability": undefined,
      "description": undefined,
      "name": "RequestValidationError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "fieldName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "humanReadableMessage",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_commons:ResourcePage": {
      "availability": undefined,
      "description": undefined,
      "name": "ResourcePage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "prev_page_token",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:PageToken",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "next_page_token",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:PageToken",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_commons:ServiceLineId": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLineId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_commons:ServiceLineUnits": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLineUnits",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "MJ",
          },
          {
            "description": undefined,
            "value": "UN",
          },
        ],
      },
    },
    "type_commons:SortDirection": {
      "availability": undefined,
      "description": undefined,
      "name": "SortDirection",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "asc",
          },
          {
            "description": undefined,
            "value": "desc",
          },
        ],
      },
    },
    "type_commons:SourceOfPaymentCode": {
      "availability": undefined,
      "description": undefined,
      "name": "SourceOfPaymentCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "Self-pay",
            "value": "09",
          },
          {
            "description": "Other Non-Federal Programs",
            "value": "11",
          },
          {
            "description": "Preferred Provider Organization (PPO)",
            "value": "12",
          },
          {
            "description": "Point of Service (POS)",
            "value": "13",
          },
          {
            "description": "Exclusive Provider Organization (EPO)",
            "value": "14",
          },
          {
            "description": "Indemnity Insurance",
            "value": "15",
          },
          {
            "description": "Health Maintenance Organization (HMO) Medicare Risk",
            "value": "16",
          },
          {
            "description": "Dental Maintenance Organization",
            "value": "17",
          },
          {
            "description": "Automobile Medical",
            "value": "AM",
          },
          {
            "description": "Blue Cross/Blue Shield",
            "value": "BL",
          },
          {
            "description": "CHAMPUS",
            "value": "CH",
          },
          {
            "description": "Commercial Insurance Co.",
            "value": "CI",
          },
          {
            "description": "Disability",
            "value": "DS",
          },
          {
            "description": "Federal Employees Program",
            "value": "FI",
          },
          {
            "description": "Health Maintenance Organization (HMO)",
            "value": "HM",
          },
          {
            "description": "Liability Medical",
            "value": "LM",
          },
          {
            "description": "Medicare Part A",
            "value": "MA",
          },
          {
            "description": "Medicare Part B",
            "value": "MB",
          },
          {
            "description": "Medicaid",
            "value": "MC",
          },
          {
            "description": "Other Federal Program",
            "value": "OF",
          },
          {
            "description": "Title V",
            "value": "TV",
          },
          {
            "description": "Veterans Affairs Plan",
            "value": "VA",
          },
          {
            "description": "Workers' Compensation Health Claim",
            "value": "WC",
          },
        ],
      },
    },
    "type_commons:State": {
      "availability": undefined,
      "description": undefined,
      "name": "State",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "AA",
          },
          {
            "description": undefined,
            "value": "AE",
          },
          {
            "description": undefined,
            "value": "AP",
          },
          {
            "description": undefined,
            "value": "AL",
          },
          {
            "description": undefined,
            "value": "AK",
          },
          {
            "description": undefined,
            "value": "AZ",
          },
          {
            "description": undefined,
            "value": "AR",
          },
          {
            "description": undefined,
            "value": "CA",
          },
          {
            "description": undefined,
            "value": "CO",
          },
          {
            "description": undefined,
            "value": "CT",
          },
          {
            "description": undefined,
            "value": "DC",
          },
          {
            "description": undefined,
            "value": "DE",
          },
          {
            "description": undefined,
            "value": "FL",
          },
          {
            "description": undefined,
            "value": "GA",
          },
          {
            "description": undefined,
            "value": "HI",
          },
          {
            "description": undefined,
            "value": "ID",
          },
          {
            "description": undefined,
            "value": "IL",
          },
          {
            "description": undefined,
            "value": "IN",
          },
          {
            "description": undefined,
            "value": "IA",
          },
          {
            "description": undefined,
            "value": "KS",
          },
          {
            "description": undefined,
            "value": "KY",
          },
          {
            "description": undefined,
            "value": "LA",
          },
          {
            "description": undefined,
            "value": "ME",
          },
          {
            "description": undefined,
            "value": "MD",
          },
          {
            "description": undefined,
            "value": "MA",
          },
          {
            "description": undefined,
            "value": "MI",
          },
          {
            "description": undefined,
            "value": "MN",
          },
          {
            "description": undefined,
            "value": "MS",
          },
          {
            "description": undefined,
            "value": "MO",
          },
          {
            "description": undefined,
            "value": "MT",
          },
          {
            "description": undefined,
            "value": "NE",
          },
          {
            "description": undefined,
            "value": "NV",
          },
          {
            "description": undefined,
            "value": "NH",
          },
          {
            "description": undefined,
            "value": "NJ",
          },
          {
            "description": undefined,
            "value": "NM",
          },
          {
            "description": undefined,
            "value": "NY",
          },
          {
            "description": undefined,
            "value": "NC",
          },
          {
            "description": undefined,
            "value": "ND",
          },
          {
            "description": undefined,
            "value": "OH",
          },
          {
            "description": undefined,
            "value": "OK",
          },
          {
            "description": undefined,
            "value": "OR",
          },
          {
            "description": undefined,
            "value": "PA",
          },
          {
            "description": undefined,
            "value": "PR",
          },
          {
            "description": undefined,
            "value": "RI",
          },
          {
            "description": undefined,
            "value": "SC",
          },
          {
            "description": undefined,
            "value": "SD",
          },
          {
            "description": undefined,
            "value": "TN",
          },
          {
            "description": undefined,
            "value": "TX",
          },
          {
            "description": undefined,
            "value": "UT",
          },
          {
            "description": undefined,
            "value": "VT",
          },
          {
            "description": undefined,
            "value": "VA",
          },
          {
            "description": undefined,
            "value": "WA",
          },
          {
            "description": undefined,
            "value": "WV",
          },
          {
            "description": undefined,
            "value": "WI",
          },
          {
            "description": undefined,
            "value": "WY",
          },
        ],
      },
    },
    "type_commons:StreetAddressBase": {
      "availability": undefined,
      "description": undefined,
      "name": "StreetAddressBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "address1",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "address2",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "city",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "state",
            "valueType": {
              "type": "id",
              "value": "type_commons:State",
            },
          },
          {
            "availability": undefined,
            "description": "5-digit zip code",
            "key": "zip_code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_commons:StreetAddressLongZip": {
      "availability": undefined,
      "description": undefined,
      "name": "StreetAddressLongZip",
      "shape": {
        "extends": [
          "type_commons:StreetAddressBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": "4-digit zip add-on code https://en.wikipedia.org/wiki/ZIP_Code#ZIP+4",
            "key": "zip_plus_four_code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_commons:StreetAddressShortZip": {
      "availability": undefined,
      "description": undefined,
      "name": "StreetAddressShortZip",
      "shape": {
        "extends": [
          "type_commons:StreetAddressBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": "4-digit zip add-on code https://en.wikipedia.org/wiki/ZIP_Code#ZIP+4",
            "key": "zip_plus_four_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_commons:TaskId": {
      "availability": undefined,
      "description": undefined,
      "name": "TaskId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_commons:UnauthorizedErrorMessage": {
      "availability": undefined,
      "description": undefined,
      "name": "UnauthorizedErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "message",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_commons:UnprocessableEntityErrorMessage": {
      "availability": undefined,
      "description": undefined,
      "name": "UnprocessableEntityErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "message",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_commons:UserId": {
      "availability": undefined,
      "description": undefined,
      "name": "UserId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_commons:WorkQueueId": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkQueueId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_configurable-rules-types:Action": {
      "availability": undefined,
      "description": undefined,
      "name": "Action",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:HoldClaimAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "hold_claim",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:HoldReadyToSubmitClaimAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "hold_ready_to_submit_claim",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules-types:CreateTaskAction",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "create_task",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:CreateTaskV2Action",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "create_task_v2",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:ThenValidateOrElseAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "then_validate_or_else",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:RouteToWorkQueueAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "route_to_work_queue",
          },
        ],
      },
    },
    "type_configurable-rules-types:AliasedPrimitiveType": {
      "availability": undefined,
      "description": undefined,
      "name": "AliasedPrimitiveType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "native_primitive",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:NativePrimitiveType",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:AndCondition": {
      "availability": undefined,
      "description": undefined,
      "name": "AndCondition",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "conditions",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_configurable-rules-types:Condition",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:AvailableAction": {
      "availability": undefined,
      "description": undefined,
      "name": "AvailableAction",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:HoldClaimAvailableAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "hold_claim_available_action",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:HoldReadyToSubmitClaimAvailableAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "hold_ready_to_submit_claim_available_action",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:CreateTaskAvailableAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "create_task_available_action",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:CreateTaskV2AvailableAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "create_task_v2_available_action",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:ThenValidateOrElseAvailableAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "then_validate_or_else_available_action",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:RouteToWorkQueueAvailableAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "route_to_work_queue_available_action",
          },
        ],
      },
    },
    "type_configurable-rules-types:AvailableActionWithMetadata": {
      "availability": undefined,
      "description": undefined,
      "name": "AvailableActionWithMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "display_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "action",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:AvailableAction",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:Comparable": {
      "availability": undefined,
      "description": undefined,
      "name": "Comparable",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:FieldReference",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "field",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules-types:FieldValue",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "literal",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:VariableReference",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "variable",
          },
        ],
      },
    },
    "type_configurable-rules-types:Comparator": {
      "availability": undefined,
      "description": undefined,
      "name": "Comparator",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "IS_EQUAL_TO",
          },
          {
            "description": undefined,
            "value": "IS_NOT_EQUAL_TO",
          },
          {
            "description": undefined,
            "value": "IS_GREATER_THAN",
          },
          {
            "description": undefined,
            "value": "IS_GREATER_THAN_OR_EQUAL_TO",
          },
          {
            "description": undefined,
            "value": "IS_LESS_THAN",
          },
          {
            "description": undefined,
            "value": "IS_LESS_THAN_OR_EQUAL_TO",
          },
          {
            "description": undefined,
            "value": "IS_IN",
          },
          {
            "description": undefined,
            "value": "IS_NOT_IN",
          },
          {
            "description": undefined,
            "value": "CONTAINS",
          },
          {
            "description": undefined,
            "value": "CONTAINS_IGNORING_CASE",
          },
          {
            "description": undefined,
            "value": "DOES_NOT_CONTAIN",
          },
          {
            "description": undefined,
            "value": "DOES_NOT_CONTAIN_IGNORING_CASE",
          },
          {
            "description": undefined,
            "value": "STARTS_WITH",
          },
          {
            "description": undefined,
            "value": "STARTS_WITH_IGNORING_CASE",
          },
          {
            "description": undefined,
            "value": "UNSET",
          },
        ],
      },
    },
    "type_configurable-rules-types:ComparatorWithMetadata": {
      "availability": undefined,
      "description": undefined,
      "name": "ComparatorWithMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "comparator",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Comparator",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "display_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:Condition": {
      "availability": undefined,
      "description": undefined,
      "name": "Condition",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:AndCondition",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "and",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:OrCondition",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "or",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:EvaluateComparatorCondition",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "evaluate_comparator",
          },
        ],
      },
    },
    "type_configurable-rules-types:ContainerType": {
      "availability": undefined,
      "description": undefined,
      "name": "ContainerType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "container",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:ContainerWrapperType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "contained_type",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldType",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:ContainerValue": {
      "availability": undefined,
      "description": undefined,
      "name": "ContainerValue",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_configurable-rules-types:FieldValue",
                    },
                    "type": "list",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "list",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_configurable-rules-types:FieldValue",
                    },
                    "type": "optional",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "optional",
          },
        ],
      },
    },
    "type_configurable-rules-types:ContainerWrapperType": {
      "availability": undefined,
      "description": undefined,
      "name": "ContainerWrapperType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "LIST",
          },
          {
            "description": undefined,
            "value": "OPTIONAL",
          },
        ],
      },
    },
    "type_configurable-rules-types:CreateTaskAction": {
      "availability": undefined,
      "description": undefined,
      "name": "CreateTaskAction",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:CustomerDataRequestTaskAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "customer_data_request_task",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:OtherTaskAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "other_task",
          },
        ],
      },
    },
    "type_configurable-rules-types:CreateTaskAvailableAction": {
      "availability": undefined,
      "description": undefined,
      "name": "CreateTaskAvailableAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_configurable-rules-types:CreateTaskExecutedAction": {
      "availability": undefined,
      "description": undefined,
      "name": "CreateTaskExecutedAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:CreateTaskV2Action": {
      "availability": undefined,
      "description": undefined,
      "name": "CreateTaskV2Action",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "category",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_tasks/commons:TaskCategory",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "task_type",
            "valueType": {
              "type": "id",
              "value": "type_tasks/commons:TaskType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "assignee",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:UserId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queue_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:WorkQueueId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "context",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "action_required",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:CreateTaskV2AvailableAction": {
      "availability": undefined,
      "description": undefined,
      "name": "CreateTaskV2AvailableAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "available_work_queue_ids",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:WorkQueueId",
              },
              "type": "set",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:CreateTaskV2ExecutedAction": {
      "availability": undefined,
      "description": undefined,
      "name": "CreateTaskV2ExecutedAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queue_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:WorkQueueId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:CustomerDataRequestTaskAction": {
      "availability": undefined,
      "description": undefined,
      "name": "CustomerDataRequestTaskAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "category",
            "valueType": {
              "type": "id",
              "value": "type_tasks/commons:TaskCategory",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "context",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "action_required",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:EvaluateComparatorCondition": {
      "availability": undefined,
      "description": undefined,
      "name": "EvaluateComparatorCondition",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "lhs",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Comparable",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "comparator",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Comparator",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rhs",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Comparable",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:ExecutedAction": {
      "availability": undefined,
      "description": undefined,
      "name": "ExecutedAction",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:HoldClaimExecutedAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "hold_claim_executed_action",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:HoldReadyToSubmitClaimExecutedAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "hold_ready_to_submit_claim_executed_action",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:CreateTaskExecutedAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "create_task_executed_action",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:CreateTaskV2ExecutedAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "create_task_v2_executed_action",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:ThenValidateOrElseExecutedAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "then_validate_or_else_executed_action",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:RouteToWorkQueueExecutedAction",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "route_to_work_queue_executed_action",
          },
        ],
      },
    },
    "type_configurable-rules-types:Field": {
      "availability": undefined,
      "description": undefined,
      "name": "Field",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldName",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "display_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "field_type",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldType",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:FieldName": {
      "availability": undefined,
      "description": undefined,
      "name": "FieldName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_configurable-rules-types:FieldReference": {
      "availability": undefined,
      "description": "The path to extract the field from the inputs.",
      "name": "FieldReference",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "path",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Path",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:FieldType": {
      "availability": undefined,
      "description": undefined,
      "name": "FieldType",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules-types:PrimitiveType",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "primitive",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:ObjectType",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "object",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:ContainerType",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "container",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": "For conveying that a type is unknown. Unknown types are considered compatible with all other types.
For internal use only within the framework, e.g. an unknown container type is compatible with any expected container type.
Not for external use, e.g. the framework will never allow unknown literals to be provided by a client.
",
            "discriminantValue": "unknown",
          },
        ],
      },
    },
    "type_configurable-rules-types:FieldValue": {
      "availability": undefined,
      "description": undefined,
      "name": "FieldValue",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules-types:PrimitiveValue",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "primitive_value",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:ObjectValue",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "object_value",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules-types:ContainerValue",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "container_value",
          },
        ],
      },
    },
    "type_configurable-rules-types:HoldClaimAction": {
      "availability": undefined,
      "description": "Hold the claim.",
      "name": "HoldClaimAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_configurable-rules-types:HoldClaimAvailableAction": {
      "availability": undefined,
      "description": undefined,
      "name": "HoldClaimAvailableAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_configurable-rules-types:HoldClaimExecutedAction": {
      "availability": undefined,
      "description": undefined,
      "name": "HoldClaimExecutedAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:HoldReadyToSubmitClaimAction": {
      "availability": undefined,
      "description": "Hold the claim, but also indicate that it is ready for submission.",
      "name": "HoldReadyToSubmitClaimAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_configurable-rules-types:HoldReadyToSubmitClaimAvailableAction": {
      "availability": undefined,
      "description": undefined,
      "name": "HoldReadyToSubmitClaimAvailableAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_configurable-rules-types:HoldReadyToSubmitClaimExecutedAction": {
      "availability": undefined,
      "description": undefined,
      "name": "HoldReadyToSubmitClaimExecutedAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:ListElement": {
      "availability": undefined,
      "description": "Extract the underlying type from a list.
E.g., using any of these on a list<optional<object>> will evaluate the remainder of the Statement on the underlying optional<object>.
The exception to this is the count element, which returns an integer primitive type.
",
      "name": "ListElement",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": "Evaluate that the Statement is true for any item.
Short-circuit if any item evaluates to false.
",
            "discriminantValue": "all_items",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": "Evaluate that the Statement is true for any item.
Short-circuit if any item evaluates to true.
",
            "discriminantValue": "any_items",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": "Evaluate the Statement for the first item.
Evaluates to false if there are no items in the list.
",
            "discriminantValue": "first_item",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": "Evaluate the Statement for the last item.
Evaluates to false if there are no items in the list.
",
            "discriminantValue": "last_item",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                    },
                  },
                },
              ],
            },
            "availability": undefined,
            "description": "Evaluate the Statement for the nth item (1-indexed).
Raises a runtime error if the index is out of the bounds of the list.
",
            "discriminantValue": "nth_item",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": "Evaluate the Statement against the number of items in the List (an integer).",
            "discriminantValue": "count",
          },
        ],
      },
    },
    "type_configurable-rules-types:NativePrimitiveType": {
      "availability": undefined,
      "description": undefined,
      "name": "NativePrimitiveType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "INTEGER",
          },
          {
            "description": undefined,
            "value": "DOUBLE",
          },
          {
            "description": undefined,
            "value": "STRING",
          },
          {
            "description": undefined,
            "value": "BOOLEAN",
          },
          {
            "description": undefined,
            "value": "DATETIME",
          },
          {
            "description": undefined,
            "value": "DATE",
          },
          {
            "description": undefined,
            "value": "DECIMAL",
          },
          {
            "description": undefined,
            "value": "EMPTY",
          },
        ],
      },
    },
    "type_configurable-rules-types:ObjectFieldValue": {
      "availability": undefined,
      "description": undefined,
      "name": "ObjectFieldValue",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldName",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldValue",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:ObjectType": {
      "availability": undefined,
      "description": undefined,
      "name": "ObjectType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "fields",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_configurable-rules-types:Field",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:ObjectValue": {
      "availability": undefined,
      "description": undefined,
      "name": "ObjectValue",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "members",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_configurable-rules-types:ObjectFieldValue",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:OptionalElement": {
      "availability": undefined,
      "description": "Extract the underlying type from an optional.
E.g., using any of these on an optional<list<string>> will evaluate the remainder of the Statement on the underlying list<string>.
",
      "name": "OptionalElement",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": "Continue to evaluate the Statement on the contained item if present, else evaluate to False (or abort an Action).",
            "discriminantValue": "if_present",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": "Evaluate the Statement on the contained item if present, else fail the Statement.",
            "discriminantValue": "or_else_fail",
          },
        ],
      },
    },
    "type_configurable-rules-types:OrCondition": {
      "availability": undefined,
      "description": undefined,
      "name": "OrCondition",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "conditions",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_configurable-rules-types:Condition",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:OtherTaskAction": {
      "availability": undefined,
      "description": undefined,
      "name": "OtherTaskAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "task_type",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:OtherTaskType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "assignee",
            "valueType": {
              "type": "id",
              "value": "type_commons:Auth0Id",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "context",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "action_required",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:OtherTaskType": {
      "availability": undefined,
      "description": undefined,
      "name": "OtherTaskType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "CLAIM_SUBMISSION_RUN_VALIDATIONS_FAILURE",
          },
          {
            "description": undefined,
            "value": "CLAIM_SUBMISSION_SUBMIT_CLAIM_FAILURE",
          },
          {
            "description": undefined,
            "value": "CLAIM_SUBMISSION_TRANSFORM_FAILURE",
          },
          {
            "description": undefined,
            "value": "CODE_CLAIM",
          },
          {
            "description": undefined,
            "value": "CODE_CLAIM_REVIEW",
          },
          {
            "description": undefined,
            "value": "ELIGIBILITY",
          },
          {
            "description": undefined,
            "value": "CLAIM_FOLLOW_UP",
          },
          {
            "description": undefined,
            "value": "REJECTION_RESOLUTION",
          },
          {
            "description": undefined,
            "value": "PAYER_CONFIGURATION_ERROR",
          },
          {
            "description": undefined,
            "value": "DENIAL_RESOLUTION",
          },
        ],
      },
    },
    "type_configurable-rules-types:Path": {
      "availability": undefined,
      "description": "An ordered list of path elements to locate a (nested) Field. Elements are evaluated in order.",
      "name": "Path",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "elements",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_configurable-rules-types:PathElement",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:PathElement": {
      "availability": undefined,
      "description": "Extract the underlying type of an ObjectType or ContainerType Field.",
      "name": "PathElement",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules-types:FieldName",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": "Extract an object field by name.
E.g. providing FieldName("bar") here on object foo with string field foo.bar will extract a string field (bar).
",
            "discriminantValue": "object_element",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules-types:ListElement",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": "Extract the underlying type from a list.",
            "discriminantValue": "list_element",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules-types:OptionalElement",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": "Extract the underlying type from an optional.",
            "discriminantValue": "optional_element",
          },
        ],
      },
    },
    "type_configurable-rules-types:PrimitiveType": {
      "availability": undefined,
      "description": undefined,
      "name": "PrimitiveType",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules-types:NativePrimitiveType",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "native_primitive",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-types:AliasedPrimitiveType",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "aliased_primitive",
          },
        ],
      },
    },
    "type_configurable-rules-types:PrimitiveValue": {
      "availability": undefined,
      "description": undefined,
      "name": "PrimitiveValue",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                    },
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "integer",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double",
                    },
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "double",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "string",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                    },
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "boolean",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                    },
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "datetime",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:Date",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "date",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:Decimal",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "decimal",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "empty",
          },
        ],
      },
    },
    "type_configurable-rules-types:RouteToWorkQueueAction": {
      "availability": undefined,
      "description": undefined,
      "name": "RouteToWorkQueueAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queue_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:WorkQueueId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:RouteToWorkQueueAvailableAction": {
      "availability": undefined,
      "description": undefined,
      "name": "RouteToWorkQueueAvailableAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_configurable-rules-types:RouteToWorkQueueExecutedAction": {
      "availability": undefined,
      "description": undefined,
      "name": "RouteToWorkQueueExecutedAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queue_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:WorkQueueId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:Statement": {
      "availability": undefined,
      "description": undefined,
      "name": "Statement",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "condition",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Condition",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "action",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Action",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:ThenValidateOrElseAction": {
      "availability": undefined,
      "description": "Evaluate the provided Condition. If the result is false, then apply the Action.",
      "name": "ThenValidateOrElseAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "then_validate",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Condition",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "or_else",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Action",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:ThenValidateOrElseAvailableAction": {
      "availability": undefined,
      "description": undefined,
      "name": "ThenValidateOrElseAvailableAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_configurable-rules-types:ThenValidateOrElseExecutedAction": {
      "availability": undefined,
      "description": undefined,
      "name": "ThenValidateOrElseExecutedAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "or_else_executed_action",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_configurable-rules-types:ExecutedAction",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:ValidComparison": {
      "availability": undefined,
      "description": undefined,
      "name": "ValidComparison",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "lhs",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "comparator",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:ComparatorWithMetadata",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rhs",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldType",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-types:VariableId": {
      "availability": undefined,
      "description": undefined,
      "name": "VariableId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_configurable-rules-types:VariableReference": {
      "availability": undefined,
      "description": undefined,
      "name": "VariableReference",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "variable_id",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:VariableId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-variables:TypeDoesNotMatchValueError": {
      "availability": undefined,
      "description": undefined,
      "name": "TypeDoesNotMatchValueError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "provided_type",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "provided_value",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldValue",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-variables:Variable": {
      "availability": undefined,
      "description": undefined,
      "name": "Variable",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "variable_id",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:VariableId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldValue",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rules_used_in",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_pipeline-commons:ConfigurableRuleId",
              },
              "type": "set",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-variables:VariableInUseError": {
      "availability": undefined,
      "description": undefined,
      "name": "VariableInUseError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "variable_id",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:VariableId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rules_used_in",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_pipeline-commons:ConfigurableRuleId",
              },
              "type": "set",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-variables:VariableNotFoundError": {
      "availability": undefined,
      "description": undefined,
      "name": "VariableNotFoundError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "variable_id",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:VariableId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-variables:VariableSummary": {
      "availability": undefined,
      "description": "A Variable payload small enough to fetch all at once. In practice, Variable sans value.",
      "name": "VariableSummary",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "variable_id",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:VariableId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rules_used_in",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_pipeline-commons:ConfigurableRuleId",
              },
              "type": "set",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-variables:VariableTypeChangeNotAllowedError": {
      "availability": undefined,
      "description": "Variable types cannot change if they are actively used in rules.",
      "name": "VariableTypeChangeNotAllowedError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "existing_type",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "new_type",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rules_used_in",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_pipeline-commons:ConfigurableRuleId",
              },
              "type": "set",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-variables:VariableWithNameAlreadyExistsError": {
      "availability": undefined,
      "description": undefined,
      "name": "VariableWithNameAlreadyExistsError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules-variables:VariablesPage": {
      "availability": undefined,
      "description": undefined,
      "name": "VariablesPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_configurable-rules-variables:Variable",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:ActionNotAvailableError": {
      "availability": undefined,
      "description": undefined,
      "name": "ActionNotAvailableError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "provided_action",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Action",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "available_actions",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_configurable-rules-types:AvailableActionWithMetadata",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:ConfigForScopeComputationError": {
      "availability": undefined,
      "description": undefined,
      "name": "ConfigForScopeComputationError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "scope",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules:Scope",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:ConfigForScopeResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "ConfigForScopeResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "inputs",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Field",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "available_actions",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_configurable-rules-types:AvailableActionWithMetadata",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:ConfigurableRule": {
      "availability": undefined,
      "description": undefined,
      "name": "ConfigurableRule",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "rule_id",
            "valueType": {
              "type": "id",
              "value": "type_pipeline-commons:ConfigurableRuleId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "scope",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules:Scope",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "statement",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Statement",
            },
          },
          {
            "availability": undefined,
            "description": "Whether the configurable rule is turned on to run.",
            "key": "is_enabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:CovariantListLiteralError": {
      "availability": undefined,
      "description": undefined,
      "name": "CovariantListLiteralError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "provided_list",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_configurable-rules-types:FieldValue",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "contained_types",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_configurable-rules-types:FieldType",
              },
              "type": "set",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:DuplicateObjectFieldNamesError": {
      "availability": undefined,
      "description": undefined,
      "name": "DuplicateObjectFieldNamesError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "conflicting_fields",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_configurable-rules-types:ObjectFieldValue",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:EmptyListLiteralError": {
      "availability": undefined,
      "description": undefined,
      "name": "EmptyListLiteralError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_configurable-rules:IllegalIndexForNthItemError": {
      "availability": undefined,
      "description": undefined,
      "name": "IllegalIndexForNthItemError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "error_location",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Path",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "index",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:IncorrectTypeForPathElementError": {
      "availability": undefined,
      "description": undefined,
      "name": "IncorrectTypeForPathElementError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "error_location",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Path",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "field_type_at_error_location",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "requested_path_element",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:PathElement",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:InvalidStatementError": {
      "availability": undefined,
      "description": undefined,
      "name": "InvalidStatementError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules:ActionNotAvailableError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "action_not_available_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules:CovariantListLiteralError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "covariant_list_literal_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules:DuplicateObjectFieldNamesError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "duplicate_object_field_names",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules:EmptyListLiteralError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "empty_list_literal_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules:IncorrectTypeForPathElementError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "incorrect_type_for_path_element_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules:MismatchedTypesForComparatorError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "mismatched_types_for_comparator_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules:MissingObjectFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "missing_object_field_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules-variables:VariableNotFoundError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "variable_not_found_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules:IllegalIndexForNthItemError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "illegal_index_for_nth_item_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules:WorkQueueNotFoundError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "work_queue_not_found_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules:WorkQueueNotInScopeError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "work_queue_not_in_scope_error",
          },
        ],
      },
    },
    "type_configurable-rules:LegalComparisonsResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "LegalComparisonsResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "supported_comparisons",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_configurable-rules-types:ValidComparison",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:MismatchedTypesForComparatorError": {
      "availability": undefined,
      "description": undefined,
      "name": "MismatchedTypesForComparatorError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "provided_lhs",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Comparable",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "resolved_lhs_type",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "comparator",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Comparator",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "provided_rhs",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Comparable",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "resolved_rhs_type",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldType",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:MissingObjectFieldError": {
      "availability": undefined,
      "description": undefined,
      "name": "MissingObjectFieldError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "error_location",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Path",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "requested_field_name",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:FieldName",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "available_field_names",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_configurable-rules-types:FieldName",
              },
              "type": "set",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:RuleNotFoundError": {
      "availability": undefined,
      "description": undefined,
      "name": "RuleNotFoundError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "rule_id",
            "valueType": {
              "type": "id",
              "value": "type_pipeline-commons:ConfigurableRuleId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:RuleRunResult": {
      "availability": undefined,
      "description": undefined,
      "name": "RuleRunResult",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules-types:ExecutedAction",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "action_performed",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "no_action_performed",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "unexpected_error",
          },
        ],
      },
    },
    "type_configurable-rules:RuleValidationError": {
      "availability": undefined,
      "description": undefined,
      "name": "RuleValidationError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_configurable-rules:InvalidStatementError",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "invalid_statement",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules:RuleWithNameAlreadyExistsError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "rule_with_name_already_exists",
          },
        ],
      },
    },
    "type_configurable-rules:RuleValidationFailure": {
      "availability": undefined,
      "description": undefined,
      "name": "RuleValidationFailure",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "errors",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_configurable-rules:RuleValidationError",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:RuleValidationResult": {
      "availability": undefined,
      "description": undefined,
      "name": "RuleValidationResult",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "success",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "scope_does_not_support_configurable_rules_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules:UnknownScopeError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "unknown_scope_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules:RuleValidationFailure",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "validation_failure",
          },
        ],
      },
    },
    "type_configurable-rules:RuleWithNameAlreadyExistsError": {
      "availability": undefined,
      "description": undefined,
      "name": "RuleWithNameAlreadyExistsError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:Scope": {
      "availability": undefined,
      "description": undefined,
      "name": "Scope",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_configurable-rules:StepLocator",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "step_locator",
          },
        ],
      },
    },
    "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError": {
      "availability": undefined,
      "description": undefined,
      "name": "ScopeDoesNotSupportConfigurableRulesError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "scope",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules:Scope",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:ScopeNotEnabledForOrgError": {
      "availability": undefined,
      "description": undefined,
      "name": "ScopeNotEnabledForOrgError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "organization_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:OrganizationId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "scope",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules:Scope",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:StepLocator": {
      "availability": undefined,
      "description": undefined,
      "name": "StepLocator",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "pipeline_id",
            "valueType": {
              "type": "id",
              "value": "type_pipeline-commons:PipelineId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "phase_id",
            "valueType": {
              "type": "id",
              "value": "type_pipeline-commons:PhaseId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "step_id",
            "valueType": {
              "type": "id",
              "value": "type_pipeline-commons:StepId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:UnknownScopeError": {
      "availability": undefined,
      "description": undefined,
      "name": "UnknownScopeError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "scope",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules:Scope",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:ValidateRuleResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "ValidateRuleResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "result",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules:RuleValidationResult",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:WorkQueueNotFoundError": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkQueueNotFoundError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queue_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:WorkQueueId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_configurable-rules:WorkQueueNotInScopeError": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkQueueNotInScopeError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queue_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:WorkQueueId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_contracts:AuthorizedSignatory": {
      "availability": undefined,
      "description": undefined,
      "name": "AuthorizedSignatory",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "first_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "last_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "title",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "email",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "phone",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "fax",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_contracts:Contract": {
      "availability": undefined,
      "description": undefined,
      "name": "Contract",
      "shape": {
        "extends": [
          "type_contracts:ContractBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "contract_id",
            "valueType": {
              "type": "id",
              "value": "type_contracts:ContractId",
            },
          },
          {
            "availability": undefined,
            "description": "The provider under contract",
            "key": "contracting_provider",
            "valueType": {
              "type": "id",
              "value": "type_organization-providers/v2:OrganizationProvider",
            },
          },
          {
            "availability": undefined,
            "description": "The providers who can render medical services under the contract",
            "key": "rendering_providers",
            "valueType": {
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "uuid",
                },
              },
              "type": "map",
              "valueType": {
                "type": "id",
                "value": "type_organization-providers/v2:OrganizationProvider",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The insurance company under contract",
            "key": "payer",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_payers:Payer",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_contracts:ContractBase": {
      "availability": undefined,
      "description": undefined,
      "name": "ContractBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The starting day upon which the contract is effective",
            "key": "effective_date",
            "valueType": {
              "type": "id",
              "value": "type_commons:Date",
            },
          },
          {
            "availability": undefined,
            "description": "An optional end day upon which the contract expires",
            "key": "expiration_date",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The state(s) to which the contract's coverage extends.
It may also be set to "national" for the entirety of the US.
",
            "key": "regions",
            "valueType": {
              "type": "id",
              "value": "type_commons:Regions",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "contract_status",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_contracts:ContractStatus",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "authorized_signatory",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_contracts:AuthorizedSignatory",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_contracts:ContractId": {
      "availability": undefined,
      "description": undefined,
      "name": "ContractId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_contracts:ContractStatus": {
      "availability": undefined,
      "description": undefined,
      "name": "ContractStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "Contract is still in the works and has not been signed and counter-signed yet
",
            "value": "pending",
          },
          {
            "description": "Contract is active and in effect (claims will need to
be submitted under effective contracts)
",
            "value": "effective",
          },
          {
            "description": "Contract is no longer effective but kept around for historical documentation
",
            "value": "cancelled",
          },
        ],
      },
    },
    "type_contracts:ContractingProviderId": {
      "availability": undefined,
      "description": undefined,
      "name": "ContractingProviderId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_contracts:RenderingProviderid": {
      "availability": undefined,
      "description": undefined,
      "name": "RenderingProviderid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_credentialing:CredentialedEncounterStatusResult": {
      "availability": undefined,
      "description": undefined,
      "name": "CredentialedEncounterStatusResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "credentialing_spans",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_credentialing:ProviderCredentialingSpan",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_credentialing:CredentialingSpanDates": {
      "availability": undefined,
      "description": undefined,
      "name": "CredentialingSpanDates",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_credentialing:RequiredCredentialingDates",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "required_dates",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_credentialing:NonRequiredCredentialingDates",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "non_required_dates",
          },
        ],
      },
    },
    "type_credentialing:CredentialingSpanStatus": {
      "availability": undefined,
      "description": "Stage of a credentialing span in the credentialing workflow.",
      "name": "CredentialingSpanStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "work_in_progress",
          },
          {
            "description": undefined,
            "value": "pending",
          },
          {
            "description": undefined,
            "value": "effective",
          },
          {
            "description": undefined,
            "value": "expired",
          },
        ],
      },
    },
    "type_credentialing:EncounterCredentialingStatusResult": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterCredentialingStatusResult",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_credentialing:CredentialedEncounterStatusResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "credentialed",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "not_credentialed",
          },
        ],
      },
    },
    "type_credentialing:NonRequiredCredentialingDates": {
      "availability": undefined,
      "description": undefined,
      "name": "NonRequiredCredentialingDates",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "start_date",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "end_date",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_credentialing:ProviderCredentialingSpan": {
      "availability": undefined,
      "description": undefined,
      "name": "ProviderCredentialingSpan",
      "shape": {
        "extends": [
          "type_credentialing:ProviderCredentialingSpanBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "provider_credentialing_span_id",
            "valueType": {
              "type": "id",
              "value": "type_credentialing:ProviderCredentialingSpanId",
            },
          },
          {
            "availability": undefined,
            "description": "The rendering provider covered by the credentialing span.",
            "key": "rendering_provider",
            "valueType": {
              "type": "id",
              "value": "type_organization-providers/v2:OrganizationProvider",
            },
          },
          {
            "availability": undefined,
            "description": "The practice location at which the rendering provider is covered by the credentialing span.
",
            "key": "contracting_provider",
            "valueType": {
              "type": "id",
              "value": "type_organization-providers/v2:OrganizationProvider",
            },
          },
          {
            "availability": undefined,
            "description": "The payer doing the credentialing.",
            "key": "payer",
            "valueType": {
              "type": "id",
              "value": "type_payers:Payer",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "dates",
            "valueType": {
              "type": "id",
              "value": "type_credentialing:CredentialingSpanDates",
            },
          },
          {
            "availability": undefined,
            "description": "Date that the credential paperwork was submitted.",
            "key": "submitted_date",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Status of the credentialing span.",
            "key": "credentialing_status",
            "valueType": {
              "type": "id",
              "value": "type_credentialing:CredentialingSpanStatus",
            },
          },
          {
            "availability": undefined,
            "description": "Date that the payer loaded the credentialing span into their system.",
            "key": "payer_loaded_date",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_credentialing:ProviderCredentialingSpanBase": {
      "availability": undefined,
      "description": undefined,
      "name": "ProviderCredentialingSpanBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The states covered by the credentialing span. A span may be national and cover all states.
",
            "key": "regions",
            "valueType": {
              "type": "id",
              "value": "type_commons:Regions",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_credentialing:ProviderCredentialingSpanId": {
      "availability": undefined,
      "description": undefined,
      "name": "ProviderCredentialingSpanId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_credentialing:RequiredCredentialingDates": {
      "availability": undefined,
      "description": undefined,
      "name": "RequiredCredentialingDates",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "start_date",
            "valueType": {
              "type": "id",
              "value": "type_commons:Date",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "end_date",
            "valueType": {
              "type": "id",
              "value": "type_commons:Date",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_dashboards:Dashboard": {
      "availability": undefined,
      "description": undefined,
      "name": "Dashboard",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "dashboard_id",
            "valueType": {
              "type": "id",
              "value": "type_dashboards:DashboardId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "display_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "icon",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_dashboards:FontAwesomeIconName",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "learn_more_link",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:LinkUrl",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_dashboards:DashboardGroup": {
      "availability": undefined,
      "description": undefined,
      "name": "DashboardGroup",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_dashboards:DashboardGroupType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "learn_more_link",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:LinkUrl",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "dashboards",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_dashboards:Dashboard",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_dashboards:DashboardGroupType": {
      "availability": undefined,
      "description": undefined,
      "name": "DashboardGroupType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "CLAIMS",
          },
          {
            "description": undefined,
            "value": "WORKFLOW",
          },
          {
            "description": undefined,
            "value": "FINANCIAL",
          },
          {
            "description": undefined,
            "value": "PLATFORM",
          },
          {
            "description": undefined,
            "value": "EXPORTS",
          },
        ],
      },
    },
    "type_dashboards:DashboardId": {
      "availability": undefined,
      "description": undefined,
      "name": "DashboardId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_dashboards:FontAwesomeIconName": {
      "availability": undefined,
      "description": undefined,
      "name": "FontAwesomeIconName",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "bullseye-arrow",
          },
          {
            "description": undefined,
            "value": "telescope",
          },
          {
            "description": undefined,
            "value": "chart-line-down",
          },
          {
            "description": undefined,
            "value": "chart-line-up",
          },
          {
            "description": undefined,
            "value": "inbox-out",
          },
          {
            "description": undefined,
            "value": "hourglass-end",
          },
          {
            "description": undefined,
            "value": "circle-pause",
          },
          {
            "description": undefined,
            "value": "thumbs-down",
          },
          {
            "description": undefined,
            "value": "ban",
          },
          {
            "description": undefined,
            "value": "sack-dollar",
          },
          {
            "description": undefined,
            "value": "alarm-clock",
          },
          {
            "description": undefined,
            "value": "list-check",
          },
          {
            "description": undefined,
            "value": "id-card",
          },
          {
            "description": undefined,
            "value": "globe",
          },
          {
            "description": undefined,
            "value": "phone",
          },
          {
            "description": undefined,
            "value": "staff-snake",
          },
          {
            "description": undefined,
            "value": "trophy",
          },
          {
            "description": undefined,
            "value": "building",
          },
          {
            "description": undefined,
            "value": "square-heart",
          },
          {
            "description": undefined,
            "value": "money-bill-wave",
          },
          {
            "description": undefined,
            "value": "abacus",
          },
          {
            "description": undefined,
            "value": "crystal-ball",
          },
          {
            "description": undefined,
            "value": "magnifying-glass",
          },
          {
            "description": undefined,
            "value": "laptop-medical",
          },
          {
            "description": undefined,
            "value": "scale-balanced",
          },
          {
            "description": undefined,
            "value": "cabinet-filing",
          },
          {
            "description": undefined,
            "value": "hospital",
          },
          {
            "description": undefined,
            "value": "stethoscope",
          },
          {
            "description": undefined,
            "value": "folders",
          },
          {
            "description": undefined,
            "value": "folder-open",
          },
          {
            "description": undefined,
            "value": "file-export",
          },
        ],
      },
    },
    "type_dashboards:GetAllDashboardGroupsResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "GetAllDashboardGroupsResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "groups",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_dashboards:DashboardGroup",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_diagnoses:Diagnosis": {
      "availability": undefined,
      "description": undefined,
      "name": "Diagnosis",
      "shape": {
        "extends": [
          "type_diagnoses:StandaloneDiagnosisCreate",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "diagnosis_id",
            "valueType": {
              "type": "id",
              "value": "type_diagnoses:DiagnosisId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_diagnoses:DiagnosisCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "DiagnosisCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Empty string not allowed.",
            "key": "name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Typically, providers submitting claims to Candid are using ICD-10 diagnosis codes. If you are using ICD-10 codes, the primary diagnosis code listed on the claim should use the ABK code_type. If more than one diagnosis is being submitted on a claim, please use ABF for the rest of the listed diagnoses. If you are using ICD-9 diagnosis codes, use BK and BF for the principal and following diagnosis code(s) respectively.
",
            "key": "code_type",
            "valueType": {
              "type": "id",
              "value": "type_diagnoses:DiagnosisTypeCode",
            },
          },
          {
            "availability": undefined,
            "description": "Empty string not allowed.
Should be of the appropriate format for the provided \`code_type\`.
Must obey the ICD-10 format if an ICD-10 code_type is provided, specifically:
  - Letter
  - Digit
  - Digit or the letter \`A\` or \`B\`
  - (Optional) Period \`.\`
  - Up to 4 (or as few as 0) letters and digits
",
            "key": "code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_diagnoses:DiagnosisId": {
      "availability": undefined,
      "description": undefined,
      "name": "DiagnosisId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_diagnoses:DiagnosisTypeCode": {
      "availability": undefined,
      "description": undefined,
      "name": "DiagnosisTypeCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "ICD-10 Diagnosis",
            "value": "ABF",
          },
          {
            "description": "ICD-10 Admitting Diagnosis",
            "value": "ABJ",
          },
          {
            "description": "ICD-10 Principal Diagnosis",
            "value": "ABK",
          },
          {
            "description": "ICD-10 Patient Reason for Visit",
            "value": "APR",
          },
          {
            "description": "ICD-9 Diagnosis",
            "value": "BF",
          },
          {
            "description": "ICD-9 Admitting Diagnosis",
            "value": "BJ",
          },
          {
            "description": "ICD-9 Principal Diagnosis",
            "value": "BK",
          },
          {
            "description": "ICD-9 Patient Reason for Visit",
            "value": "PR",
          },
          {
            "description": "Diagnosis Related Group (DRG)",
            "value": "DR",
          },
          {
            "description": "Logical Observation Identifier Names and Codes (LOINC<190>) Codes",
            "value": "LOI",
          },
        ],
      },
    },
    "type_diagnoses:StandaloneDiagnosisCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "StandaloneDiagnosisCreate",
      "shape": {
        "extends": [
          "type_diagnoses:DiagnosisCreate",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "encounter_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:EncounterId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounter-providers/v2:BillingProvider": {
      "availability": undefined,
      "description": "The billing provider is the provider or business entity submitting the claim.
Billing provider may be, but is not necessarily, the same person/NPI as the rendering provider.
From a payer's perspective, this represents the person or entity being reimbursed.
When a contract exists with the target payer, the billing provider should be the entity contracted with the payer.
In some circumstances, this will be an individual provider. In that case, submit that provider's NPI and the
tax ID (TIN) that the provider gave to the payer during contracting.
In other cases, the billing entity will be a medical group. If so, submit the group NPI and the group's tax ID.
Box 33 on the CMS-1500 claim form.
",
      "name": "BillingProvider",
      "shape": {
        "extends": [
          "type_encounter-providers/v2:EncounterProviderBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "address",
            "valueType": {
              "type": "id",
              "value": "type_commons:StreetAddressLongZip",
            },
          },
          {
            "availability": undefined,
            "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.
",
            "key": "tax_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "npi",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounter-providers/v2:EncounterProvider": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterProvider",
      "shape": {
        "extends": [
          "type_encounter-providers/v2:EncounterProviderBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "provider_id",
            "valueType": {
              "type": "id",
              "value": "type_encounter-providers/v2:ProviderId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "address",
            "valueType": {
              "type": "id",
              "value": "type_commons:StreetAddressLongZip",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "npi",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounter-providers/v2:EncounterProviderBase": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterProviderBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "If the provider is an individual, this should be set instead of organization name
",
            "key": "first_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "If the provider is an individual, this should be set instead of organization name
",
            "key": "last_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "If the provider is an organization, this should be set instead of first + last name
",
            "key": "organization_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounter-providers/v2:ProviderId": {
      "availability": undefined,
      "description": undefined,
      "name": "ProviderId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_encounter-providers/v2:ReferringProvider": {
      "availability": undefined,
      "description": undefined,
      "name": "ReferringProvider",
      "shape": {
        "extends": [
          "type_encounter-providers/v2:EncounterProviderBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": "A National Provider Identifier is a unique 10-digit identification
number issued to health care providers in the United States
",
            "key": "npi",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "address",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:StreetAddressLongZip",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounter-providers/v2:ReferringProviderUpdate": {
      "availability": undefined,
      "description": undefined,
      "name": "ReferringProviderUpdate",
      "shape": {
        "extends": [
          "type_encounter-providers/v2:EncounterProviderBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": "A National Provider Identifier is a unique 10-digit identification
number issued to health care providers in the United States
",
            "key": "npi",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "address",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:StreetAddressLongZip",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounter-providers/v2:RenderingProvider": {
      "availability": undefined,
      "description": undefined,
      "name": "RenderingProvider",
      "shape": {
        "extends": [
          "type_encounter-providers/v2:EncounterProviderBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "address",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:StreetAddressLongZip",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "A National Provider Identifier is a unique 10-digit identification
number issued to health care providers in the United States
",
            "key": "npi",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounter-summaries/v1:EncounterSortDirections": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterSortDirections",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "desc",
          },
          {
            "description": undefined,
            "value": "asc",
          },
        ],
      },
    },
    "type_encounter-summaries/v1:EncounterSortableFields": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterSortableFields",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "created_at",
          },
          {
            "description": undefined,
            "value": "date_of_service",
          },
          {
            "description": undefined,
            "value": "payer_name",
          },
          {
            "description": undefined,
            "value": "payer_id",
          },
          {
            "description": undefined,
            "value": "status",
          },
          {
            "description": undefined,
            "value": "patient_name",
          },
          {
            "description": undefined,
            "value": "billing_provider_tax_id",
          },
          {
            "description": undefined,
            "value": "billing_provider_npi",
          },
          {
            "description": undefined,
            "value": "rendering_provider_npi",
          },
        ],
      },
    },
    "type_encounter-summaries/v1:EncounterSummary": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterSummary",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "encounter_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:EncounterId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_status",
            "valueType": {
              "type": "id",
              "value": "type_claims:ClaimStatus",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_provider_npi",
            "valueType": {
              "type": "id",
              "value": "type_commons:Npi",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_provider_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_provider_tin",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rendering_provider_npi",
            "valueType": {
              "type": "id",
              "value": "type_commons:Npi",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rendering_provider_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rendering_provider_tin",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_first_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_last_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "primary_payer_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_payers:PayerId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "primary_payer_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sum_allowed_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sum_charge_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sum_paid_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "primary_insurance_paid_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "secondary_insurance_paid_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "tertiary_insurance_paid_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sum_patient_responsibility_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sum_insurance_balance_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sum_insurance_adjustment_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sum_patient_paid_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sum_patient_balance_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sum_total_balance_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "procedure_codes",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "set",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "procedure_modifiers",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:ProcedureModifier",
              },
              "type": "set",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "carcs",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "set",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rarcs",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "set",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "denial_reasons",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_service-lines/v2:DenialReasonContent",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rejection_reason",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "tag_ids",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_tags:TagId",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "date_of_service",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "date",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "end_date_of_service",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "date",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_facility",
            "valueType": {
              "type": "id",
              "value": "type_service-facility:EncounterServiceFacility",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "diagnosis_codes",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "set",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "encounter_external_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "billable_status",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:BillableStatusType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "responsible_party",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:ResponsiblePartyType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queue_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:WorkQueueId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queue_membership_activated_at",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "owner_of_next_action",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:EncounterOwnerOfNextActionType",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounter-summaries/v1:EncounterSummaryPage": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterSummaryPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounter-summaries/v1:EncounterSummary",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounter_timeline:ClaimSubmissionTimelineEvent": {
      "availability": undefined,
      "description": undefined,
      "name": "ClaimSubmissionTimelineEvent",
      "shape": {
        "extends": [
          "type_encounter_timeline:TimelineEventData",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_submission_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimSubmissionId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_frequency_code",
            "valueType": {
              "type": "id",
              "value": "type_claim-submission:ClaimFrequencyTypeCode",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_submission_status",
            "valueType": {
              "type": "id",
              "value": "type_claim-submission:ClaimSubmissionStatus",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "submission_destination",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_generated_control_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_note",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_responsibility",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:ClaimSubmissionPayerResponsibilityType",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounter_timeline:EncounterTimelineResponse": {
      "availability": undefined,
      "description": "Response with a list of ordered events that have occurred on an encounter.
Events are ordered in ascending order (oldest first).
",
      "name": "EncounterTimelineResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "events",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounter_timeline:TimelineEvent",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounter_timeline:GenericNamedTimelineEventData": {
      "availability": undefined,
      "description": "A truly generic timeline event which also contains its name.
Useful for adding a new event that can be displayed in the UI without adding a tailored type to the TimelineEvent union.
",
      "name": "GenericNamedTimelineEventData",
      "shape": {
        "extends": [
          "type_encounter_timeline:GenericTimelineEventData",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounter_timeline:GenericTimelineEventData": {
      "availability": undefined,
      "description": "Generic TimelineEvent data with a catch-all field for additional text.",
      "name": "GenericTimelineEventData",
      "shape": {
        "extends": [
          "type_encounter_timeline:TimelineEventData",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "secondary_text",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounter_timeline:TimelineEvent": {
      "availability": undefined,
      "description": undefined,
      "name": "TimelineEvent",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_encounter_timeline:GenericTimelineEventData",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "encounter_received",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_encounter_timeline:GenericTimelineEventData",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "claim_submission",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_encounter_timeline:GenericTimelineEventData",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "claim_submission_failure",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_encounter_timeline:ClaimSubmissionTimelineEvent",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "claim_submission_v2",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_encounter_timeline:GenericTimelineEventData",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "era_posted",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_encounter_timeline:GenericTimelineEventData",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "payer_check",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_encounter_timeline:GenericTimelineEventData",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "claim_status_change",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_encounter_timeline:GenericTimelineEventData",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "patient_payment",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_encounter_timeline:GenericNamedTimelineEventData",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "generic",
          },
        ],
      },
    },
    "type_encounter_timeline:TimelineEventData": {
      "availability": undefined,
      "description": "Data common to all TimelineEvents",
      "name": "TimelineEventData",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "occurred_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters-internal/v1:EncounterFinancialInformation": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterFinancialInformation",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_adjustment_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_balance_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_paid_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters-internal/v1:EncounterFinancialInformationByPayerResponsibilityResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterFinancialInformationByPayerResponsibilityResponse",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_encounters-internal/v1:PrimaryEncounterFinancialInformation",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "only_primary",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_encounters-internal/v1:MultiplePayerResponsibilityEncounterFinancialInformation",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "multiple_payer_responsibility_financial_information",
          },
        ],
      },
    },
    "type_encounters-internal/v1:EncounterFinancialInformationResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterFinancialInformationResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "financial_information_by_payer_responsibility_response",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounters-internal/v1:EncounterFinancialInformationByPayerResponsibilityResponse",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "total_patient_balance_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "total_patient_responsibility_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "total_patient_paid_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "total_allowed_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "total_billed_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "total_insurance_financial_information",
            "valueType": {
              "type": "id",
              "value": "type_encounters-internal/v1:EncounterFinancialInformation",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters-internal/v1:MultiplePayerResponsibilityEncounterFinancialInformation": {
      "availability": undefined,
      "description": "Claim balance is not available when the claim has multiple payer responsibilities.",
      "name": "MultiplePayerResponsibilityEncounterFinancialInformation",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "primary_financial_information",
            "valueType": {
              "type": "id",
              "value": "type_encounters-internal/v1:EncounterFinancialInformation",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "secondary_financial_information",
            "valueType": {
              "type": "id",
              "value": "type_encounters-internal/v1:EncounterFinancialInformation",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters-internal/v1:PrimaryEncounterFinancialInformation": {
      "availability": undefined,
      "description": "Claim balance is only available when the payer responsibility is primary.",
      "name": "PrimaryEncounterFinancialInformation",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "primary_financial_information",
            "valueType": {
              "type": "id",
              "value": "type_encounters-internal/v1:EncounterFinancialInformation",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_balance_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters-internal/v1:RemitReversalResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "RemitReversalResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "remit_id",
            "valueType": {
              "type": "id",
              "value": "type_remits/v1:RemitId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:AttachmentId": {
      "availability": undefined,
      "description": undefined,
      "name": "AttachmentId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_encounters/v4:AttributableContractingStatusResult": {
      "availability": undefined,
      "description": undefined,
      "name": "AttributableContractingStatusResult",
      "shape": {
        "discriminant": "contracting_status",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_encounters/v4:OutOfNetworkContractingStatusResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "out_of_network",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_encounters/v4:InNetworkContractingStatusResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "in_network",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "unknown",
          },
        ],
      },
    },
    "type_encounters/v4:BaseAttachment": {
      "availability": undefined,
      "description": undefined,
      "name": "BaseAttachment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "attachment_id",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:AttachmentId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "file_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "content_type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "authed_url",
            "valueType": {
              "type": "id",
              "value": "type_commons:LinkUrl",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:BillableStatusType": {
      "availability": undefined,
      "description": undefined,
      "name": "BillableStatusType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "BILLABLE",
          },
          {
            "description": undefined,
            "value": "NOT_BILLABLE",
          },
        ],
      },
    },
    "type_encounters/v4:CashPayPayerErrorMessage": {
      "availability": undefined,
      "description": undefined,
      "name": "CashPayPayerErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:ClinicalNote": {
      "availability": undefined,
      "description": undefined,
      "name": "ClinicalNote",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "author_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "author_npi",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Npi",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "timestamp",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:ClinicalNoteCategory": {
      "availability": undefined,
      "description": undefined,
      "name": "ClinicalNoteCategory",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "category",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:NoteCategory",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "notes",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "notes_structured",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounters/v4:ClinicalNote",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:ClinicalNoteCategoryCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "ClinicalNoteCategoryCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "category",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:NoteCategory",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "notes",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounters/v4:ClinicalNote",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:CodingAttributionType": {
      "availability": undefined,
      "description": undefined,
      "name": "CodingAttributionType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "CANDID",
          },
          {
            "description": undefined,
            "value": "CUSTOMER",
          },
          {
            "description": undefined,
            "value": "TCN",
          },
          {
            "description": undefined,
            "value": "PJF",
          },
        ],
      },
    },
    "type_encounters/v4:ContractingOutOfOfNetworkReason": {
      "availability": undefined,
      "description": undefined,
      "name": "ContractingOutOfOfNetworkReason",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "no_effective_contract",
          },
          {
            "description": undefined,
            "value": "missing_contract_linkage",
          },
        ],
      },
    },
    "type_encounters/v4:Encounter": {
      "availability": undefined,
      "description": undefined,
      "name": "Encounter",
      "shape": {
        "extends": [
          "type_encounters/v4:EncounterBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "encounter_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:EncounterId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "claims",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_claims:Claim",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient",
            "valueType": {
              "type": "id",
              "value": "type_individual:Patient",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "guarantor",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_guarantor/v1:Guarantor",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_provider",
            "valueType": {
              "type": "id",
              "value": "type_encounter-providers/v2:EncounterProvider",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rendering_provider",
            "valueType": {
              "type": "id",
              "value": "type_encounter-providers/v2:EncounterProvider",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "referring_provider",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounter-providers/v2:EncounterProvider",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_facility",
            "valueType": {
              "type": "id",
              "value": "type_service-facility:EncounterServiceFacility",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "subscriber_primary",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_individual:Subscriber",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "subscriber_secondary",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_individual:Subscriber",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "URL that links directly to the claim created in Candid",
            "key": "url",
            "valueType": {
              "type": "id",
              "value": "type_commons:LinkUrl",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "diagnoses",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_diagnoses:Diagnosis",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "clinical_notes",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounters/v4:ClinicalNoteCategory",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": "Spot to store misc, human-readable, notes about this encounter to be
used in the billing process.
",
            "key": "billing_notes",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_billing-notes:BillingNote",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "place_of_service_code",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:FacilityTypeCode",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "place_of_service_code_as_submitted",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:FacilityTypeCode",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_histories",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounters/v4:PatientHistoryCategory",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_payments",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_patient-payments/v3:PatientPayment",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "tags",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_tags:Tag",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "coding_attribution",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounters/v4:CodingAttributionType",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queue_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:WorkQueueId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queue_membership_activated_at",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The party who is responsible for taking the next action on an Encounter, as defined by ownership of open Tasks.",
            "key": "owner_of_next_action",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:EncounterOwnerOfNextActionType",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:EncounterAttachment": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterAttachment",
      "shape": {
        "extends": [
          "type_encounters/v4:BaseAttachment",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "attachment_type",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:EncounterAttachmentType",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:EncounterAttachmentType": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterAttachmentType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "DOCUMENTATION",
          },
        ],
      },
    },
    "type_encounters/v4:EncounterBase": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "A client-specified unique ID to associate with this encounter;
for example, your internal encounter ID or a Dr. Chrono encounter ID.
This field should not contain PHI.
",
            "key": "external_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:EncounterExternalId",
            },
          },
          {
            "availability": undefined,
            "description": "Date formatted as YYYY-MM-DD; eg: 2019-08-24.
This date must be the local date in the timezone where the service occurred.
Box 24a on the CMS-1500 claim form.
If service occurred over a range of dates, this should be the start date.
",
            "key": "date_of_service",
            "valueType": {
              "type": "id",
              "value": "type_commons:Date",
            },
          },
          {
            "availability": undefined,
            "description": "Date formatted as YYYY-MM-DD; eg: 2019-08-25.
This date must be the local date in the timezone where the service occurred.
If omitted, the Encounter is assumed to be for a single day.
Must not be temporally before the date_of_service field.
",
            "key": "end_date_of_service",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Box 23 on the CMS-1500 claim form.",
            "key": "prior_authorization_number",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounters/v4:PriorAuthorizationNumber",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Whether this patient has authorized the release of medical information
for billing purpose.
Box 12 on the CMS-1500 claim form.
",
            "key": "patient_authorized_release",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Whether this patient has authorized insurance payments to be made to you,
not them. If false, patient may receive reimbursement.
Box 13 on the CMS-1500 claim form.
",
            "key": "benefits_assigned_to_provider",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Whether you have accepted the patient's authorization for insurance payments
to be made to you, not them.
Box 27 on the CMS-1500 claim form.
",
            "key": "provider_accepts_assignment",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Human-readable description of the appointment type (ex: "Acupuncture - Headaches")
",
            "key": "appointment_type",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "existing_medications",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounters/v4:Medication",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "vitals",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounters/v4:Vitals",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "interventions",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounters/v4:Intervention",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "pay_to_address",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:StreetAddressLongZip",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Whether or not this was a synchronous or asynchronous encounter.
Asynchronous encounters occur when providers and patients communicate online using
forms, instant messaging, or other pre-recorded digital mediums.
Synchronous encounters occur in live, real-time settings where the patient interacts
directly with the provider, such as over video or a phone call.
",
            "key": "synchronicity",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounters/v4:SynchronicityType",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Defines if the Encounter is to be billed by Candid to the responsible_party.
Examples for when this should be set to NOT_BILLABLE include
if the Encounter has not occurred yet or if there is no intention of ever billing the responsible_party.
",
            "key": "billable_status",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:BillableStatusType",
            },
          },
          {
            "availability": undefined,
            "description": "Defines the party to be billed with the initial balance owed on the claim.
",
            "key": "responsible_party",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:ResponsiblePartyType",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:EncounterExternalIdUniquenessErrorType": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterExternalIdUniquenessErrorType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "external_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:EncounterExternalId",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:EncounterGuarantorMissingContactInfoErrorType": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterGuarantorMissingContactInfoErrorType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "missing_fields",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:EncounterOwnerOfNextActionType": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterOwnerOfNextActionType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "CANDID",
          },
          {
            "description": undefined,
            "value": "CUSTOMER",
          },
          {
            "description": undefined,
            "value": "CODER",
          },
          {
            "description": undefined,
            "value": "NONE",
          },
        ],
      },
    },
    "type_encounters/v4:EncounterPage": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounters/v4:Encounter",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:EncounterSortOptions": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterSortOptions",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "created_at:asc",
          },
          {
            "description": undefined,
            "value": "created_at:desc",
          },
          {
            "description": undefined,
            "value": "date_of_service:asc",
          },
          {
            "description": undefined,
            "value": "date_of_service:desc",
          },
        ],
      },
    },
    "type_encounters/v4:GenerateClinicalNotesPdfResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "GenerateClinicalNotesPdfResponse",
      "shape": {
        "discriminant": "result",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_encounters/v4:SuccessfulGenerateClinicalNotesPdfResponse",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "success",
          },
        ],
      },
    },
    "type_encounters/v4:InNetworkContractingStatusResult": {
      "availability": undefined,
      "description": undefined,
      "name": "InNetworkContractingStatusResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "applicable_contracts",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_contracts:Contract",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:IntakeFollowUp": {
      "availability": undefined,
      "description": undefined,
      "name": "IntakeFollowUp",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:IntakeFollowUpId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "response",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:IntakeFollowUpId": {
      "availability": undefined,
      "description": undefined,
      "name": "IntakeFollowUpId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_encounters/v4:IntakeQuestion": {
      "availability": undefined,
      "description": undefined,
      "name": "IntakeQuestion",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:IntakeQuestionId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "responses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounters/v4:IntakeResponseAndFollowUps",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:IntakeQuestionId": {
      "availability": undefined,
      "description": undefined,
      "name": "IntakeQuestionId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_encounters/v4:IntakeResponseAndFollowUps": {
      "availability": undefined,
      "description": undefined,
      "name": "IntakeResponseAndFollowUps",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "response",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "follow_ups",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounters/v4:IntakeFollowUp",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:Intervention": {
      "availability": undefined,
      "description": undefined,
      "name": "Intervention",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "category",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:InterventionCategory",
            },
          },
          {
            "availability": undefined,
            "description": ""Examples: 'Birth Control LAC', 'Tracking', 'Stress Management', 'Supplement', 'Labs'"
",
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Required when \`type\` is \`allopathic\`",
            "key": "medication",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounters/v4:Medication",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Required when \`type\` is \`tests\`",
            "key": "labs",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_encounters/v4:Lab",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:InterventionCategory": {
      "availability": undefined,
      "description": undefined,
      "name": "InterventionCategory",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "allopathic",
          },
          {
            "description": undefined,
            "value": "naturopathic",
          },
          {
            "description": undefined,
            "value": "tests",
          },
          {
            "description": undefined,
            "value": "lifestyle",
          },
        ],
      },
    },
    "type_encounters/v4:Lab": {
      "availability": undefined,
      "description": undefined,
      "name": "Lab",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "code_type",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounters/v4:LabCodeType",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:LabCodeType": {
      "availability": undefined,
      "description": undefined,
      "name": "LabCodeType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "quest",
          },
          {
            "description": undefined,
            "value": "labcorp",
          },
        ],
      },
    },
    "type_encounters/v4:MarkAsNotBillableResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "MarkAsNotBillableResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "closed_task_ids",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:TaskId",
              },
              "type": "set",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:Medication": {
      "availability": undefined,
      "description": undefined,
      "name": "Medication",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rx_cui",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounters/v4:RxCui",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "dosage",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "dosage_form",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "frequency",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "as_needed",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:NetworkStatus": {
      "availability": undefined,
      "description": undefined,
      "name": "NetworkStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "in_network",
          },
          {
            "description": undefined,
            "value": "out_of_network",
          },
          {
            "description": undefined,
            "value": "unknown",
          },
          {
            "description": undefined,
            "value": "not_adjudicated",
          },
        ],
      },
    },
    "type_encounters/v4:NetworkStatusComputationResults": {
      "availability": undefined,
      "description": undefined,
      "name": "NetworkStatusComputationResults",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "contracting_status_result",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:AttributableContractingStatusResult",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "credentialing_status_result",
            "valueType": {
              "type": "id",
              "value": "type_credentialing:EncounterCredentialingStatusResult",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "network_status",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:NetworkStatus",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:NoteCategory": {
      "availability": undefined,
      "description": undefined,
      "name": "NoteCategory",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "clinical",
          },
          {
            "description": undefined,
            "value": "care_plan",
          },
          {
            "description": undefined,
            "value": "diagnoses",
          },
          {
            "description": undefined,
            "value": "vitals",
          },
          {
            "description": undefined,
            "value": "physical_exam",
          },
          {
            "description": undefined,
            "value": "review_of_systems",
          },
          {
            "description": undefined,
            "value": "medical_decisions",
          },
          {
            "description": undefined,
            "value": "history_of_present_illness",
          },
          {
            "description": undefined,
            "value": "patient_info",
          },
          {
            "description": undefined,
            "value": "chief_complaint",
          },
          {
            "description": undefined,
            "value": "health_record",
          },
          {
            "description": undefined,
            "value": "consent",
          },
          {
            "description": undefined,
            "value": "procedure",
          },
          {
            "description": undefined,
            "value": "time_in_appointment",
          },
        ],
      },
    },
    "type_encounters/v4:OutOfNetworkContractingStatusResult": {
      "availability": undefined,
      "description": undefined,
      "name": "OutOfNetworkContractingStatusResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "out_of_network_reason",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:ContractingOutOfOfNetworkReason",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:PatientHistoryCategory": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientHistoryCategory",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "category",
            "valueType": {
              "type": "id",
              "value": "type_encounters/v4:PatientHistoryCategoryEnum",
            },
          },
          {
            "availability": undefined,
            "description": "Must contain at least one item.",
            "key": "questions",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_encounters/v4:IntakeQuestion",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:PatientHistoryCategoryEnum": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientHistoryCategoryEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "present_illness",
          },
          {
            "description": undefined,
            "value": "medical",
          },
          {
            "description": undefined,
            "value": "family",
          },
          {
            "description": undefined,
            "value": "social",
          },
        ],
      },
    },
    "type_encounters/v4:PriorAuthorizationNumber": {
      "availability": undefined,
      "description": undefined,
      "name": "PriorAuthorizationNumber",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_encounters/v4:ResponsiblePartyType": {
      "availability": undefined,
      "description": undefined,
      "name": "ResponsiblePartyType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "INSURANCE_PAY",
          },
          {
            "description": undefined,
            "value": "SELF_PAY",
          },
          {
            "description": undefined,
            "value": "UNKNOWN",
          },
        ],
      },
    },
    "type_encounters/v4:RxCui": {
      "availability": undefined,
      "description": undefined,
      "name": "RxCui",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_encounters/v4:SuccessfulGenerateClinicalNotesPdfResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "SuccessfulGenerateClinicalNotesPdfResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "download_link",
            "valueType": {
              "type": "id",
              "value": "type_commons:ContentDownloadUrl",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "ttl_seconds",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_encounters/v4:SynchronicityType": {
      "availability": undefined,
      "description": undefined,
      "name": "SynchronicityType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "Synchronous",
          },
          {
            "description": undefined,
            "value": "Asynchronous",
          },
        ],
      },
    },
    "type_encounters/v4:Vitals": {
      "availability": undefined,
      "description": undefined,
      "name": "Vitals",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "height_in",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "weight_lbs",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "blood_pressure_systolic_mmhg",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "blood_pressure_diastolic_mmhg",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "body_temperature_f",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_enrollments:Assignee": {
      "availability": undefined,
      "description": undefined,
      "name": "Assignee",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_enrollments:IndividualAssignee",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "individual_assignee",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_enrollments:OrganizationAssignee",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "organization_assignee",
          },
        ],
      },
    },
    "type_enrollments:AssigneeId": {
      "availability": undefined,
      "description": undefined,
      "name": "AssigneeId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_enrollments:ChangeEnrollmentBase": {
      "availability": undefined,
      "description": undefined,
      "name": "ChangeEnrollmentBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "doc_handle",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "notes",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "provider",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "submitter_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "cpid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "doc_type",
            "valueType": {
              "type": "id",
              "value": "type_enrollments:ChangeEnrollmentDocType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_enrollments:ChangeEnrollmentStatus",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "idm_username",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "npi_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "provider_num",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "provider_status",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "reference_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sap_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "date_received",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "follow_up_date",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "date_completed",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "date_mailed",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_enrollments:ChangeEnrollmentDocType": {
      "availability": undefined,
      "description": undefined,
      "name": "ChangeEnrollmentDocType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "Claim Status",
          },
          {
            "description": undefined,
            "value": "Claims",
          },
          {
            "description": undefined,
            "value": "Eligibility",
          },
          {
            "description": undefined,
            "value": "Remittance",
          },
        ],
      },
    },
    "type_enrollments:ChangeEnrollmentStatus": {
      "availability": undefined,
      "description": undefined,
      "name": "ChangeEnrollmentStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "AUTHORIZED",
          },
          {
            "description": undefined,
            "value": "CANCELED",
          },
          {
            "description": undefined,
            "value": "DENIED-PAYOR",
          },
          {
            "description": undefined,
            "value": "DENIED-PENDING",
          },
          {
            "description": undefined,
            "value": "DENIED-REJECTED",
          },
          {
            "description": undefined,
            "value": "DENIED-PENDING EXPIRED",
          },
          {
            "description": undefined,
            "value": "EXPIRED",
          },
          {
            "description": undefined,
            "value": "NEEDS-TEST",
          },
          {
            "description": undefined,
            "value": "OPEN",
          },
          {
            "description": undefined,
            "value": "PENDING RECEIPT",
          },
          {
            "description": undefined,
            "value": "RECEIVED",
          },
        ],
      },
    },
    "type_enrollments:Enrollment": {
      "availability": undefined,
      "description": undefined,
      "name": "Enrollment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "enrollment_id",
            "valueType": {
              "type": "id",
              "value": "type_enrollments:EnrollmentId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "organization_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:OrganizationId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "last_updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_enrollments:EnrollmentStatus",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "assignee",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_enrollments:Assignee",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "enrollment_type",
            "valueType": {
              "type": "id",
              "value": "type_enrollments:EnrollmentType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_id",
            "valueType": {
              "type": "id",
              "value": "type_payers:PayerId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_name",
            "valueType": {
              "type": "id",
              "value": "type_payers:PayerName",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "provider_npi",
            "valueType": {
              "type": "id",
              "value": "type_enrollments:ProviderNpi",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "priority",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_enrollments:EnrollmentPriority",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "source",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_enrollments:EnrollmentSource",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_enrollments:EnrollmentAttachment": {
      "availability": undefined,
      "description": undefined,
      "name": "EnrollmentAttachment",
      "shape": {
        "extends": [
          "type_enrollments:EnrollmentAttachmentBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "attachment_id",
            "valueType": {
              "type": "id",
              "value": "type_enrollments:EnrollmentAttachmentId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_enrollments:EnrollmentAttachmentBase": {
      "availability": undefined,
      "description": undefined,
      "name": "EnrollmentAttachmentBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "enrollment_id",
            "valueType": {
              "type": "id",
              "value": "type_enrollments:EnrollmentId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "file_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "storage_uri",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_enrollments:EnrollmentAttachmentCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "EnrollmentAttachmentCreate",
      "shape": {
        "extends": [
          "type_enrollments:EnrollmentAttachmentBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "attachment_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_enrollments:EnrollmentAttachmentId",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_enrollments:EnrollmentAttachmentId": {
      "availability": undefined,
      "description": undefined,
      "name": "EnrollmentAttachmentId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_enrollments:EnrollmentAttachmentResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "EnrollmentAttachmentResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "signed_download_url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_enrollments:EnrollmentFilters": {
      "availability": undefined,
      "description": undefined,
      "name": "EnrollmentFilters",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "statuses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_enrollments:EnrollmentStatus",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "enrollment_types",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_enrollments:EnrollmentType",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_search_term",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "provider_npi",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_enrollments:ProviderNpi",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "limit",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "page_token",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:PageToken",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "organization_provider_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_organization-providers/v2:OrganizationProviderId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "priority",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_enrollments:EnrollmentPriority",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "assignee_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_enrollments:AssigneeId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "include_hidden",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_enrollments:EnrollmentId": {
      "availability": undefined,
      "description": undefined,
      "name": "EnrollmentId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_enrollments:EnrollmentPage": {
      "availability": undefined,
      "description": undefined,
      "name": "EnrollmentPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_enrollments:Enrollment",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_enrollments:EnrollmentPriority": {
      "availability": undefined,
      "description": undefined,
      "name": "EnrollmentPriority",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "HIGH_PRIORITY",
          },
          {
            "description": undefined,
            "value": "NORMAL_PRIORITY",
          },
        ],
      },
    },
    "type_enrollments:EnrollmentSource": {
      "availability": undefined,
      "description": undefined,
      "name": "EnrollmentSource",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_enrollments:ChangeEnrollmentBase",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "change_healthcare",
          },
        ],
      },
    },
    "type_enrollments:EnrollmentStatus": {
      "availability": undefined,
      "description": undefined,
      "name": "EnrollmentStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "SUBMITTED",
          },
          {
            "description": undefined,
            "value": "AUTHORIZED",
          },
          {
            "description": undefined,
            "value": "CANCELED",
          },
          {
            "description": undefined,
            "value": "DENIED",
          },
          {
            "description": undefined,
            "value": "ACTION_REQUIRED",
          },
          {
            "description": undefined,
            "value": "PENDING_SUBMISSION",
          },
          {
            "description": undefined,
            "value": "REQUIRES_INVESTIGATION",
          },
          {
            "description": undefined,
            "value": "ADDITIONAL_INFO_NEEDED",
          },
        ],
      },
    },
    "type_enrollments:EnrollmentType": {
      "availability": undefined,
      "description": undefined,
      "name": "EnrollmentType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "CLAIMS",
          },
          {
            "description": undefined,
            "value": "ELIGIBILITY",
          },
          {
            "description": undefined,
            "value": "CLAIM_STATUS",
          },
          {
            "description": undefined,
            "value": "REMITTANCE",
          },
          {
            "description": undefined,
            "value": "EFT",
          },
        ],
      },
    },
    "type_enrollments:IndividualAssignee": {
      "availability": undefined,
      "description": undefined,
      "name": "IndividualAssignee",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "auth0_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_enrollments:LatestImportDatetimeResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "LatestImportDatetimeResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "import_datetime",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_enrollments:OrganizationAssignee": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationAssignee",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "organization_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:OrganizationId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_enrollments:ProviderNpi": {
      "availability": undefined,
      "description": undefined,
      "name": "ProviderNpi",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_enrollments:RemovableAssignee": {
      "availability": undefined,
      "description": undefined,
      "name": "RemovableAssignee",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_enrollments:Assignee",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "assignee",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "remove",
          },
        ],
      },
    },
    "type_era:ERA": {
      "availability": undefined,
      "description": undefined,
      "name": "ERA",
      "shape": {
        "extends": [
          "type_era:ERABase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "era_id",
            "valueType": {
              "type": "id",
              "value": "type_era:EraId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_era:ERABase": {
      "availability": undefined,
      "description": undefined,
      "name": "ERABase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "check_number",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "check_date",
            "valueType": {
              "type": "id",
              "value": "type_commons:Date",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_era:EraId": {
      "availability": undefined,
      "description": undefined,
      "name": "EraId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_expected-network-status-tia/v1:Market": {
      "availability": undefined,
      "description": undefined,
      "name": "Market",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "san_francisco",
          },
          {
            "description": undefined,
            "value": "other",
          },
        ],
      },
    },
    "type_expected-network-status-tia/v1:TiaExpectedNetworkStatusResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "TiaExpectedNetworkStatusResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "expected_network_status",
            "valueType": {
              "type": "id",
              "value": "type_expected-network-status/v1:ExpectedNetworkStatus",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "explanation",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "contract_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_contracts:ContractId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "routed_payer_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "routed_payer_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "routed_billing_provider_npi",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "routed_billing_provider_tin",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_expected-network-status/v1:ExpectedNetworkStatus": {
      "availability": undefined,
      "description": undefined,
      "name": "ExpectedNetworkStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "in_network",
          },
          {
            "description": undefined,
            "value": "out_of_network",
          },
          {
            "description": undefined,
            "value": "unknown",
          },
        ],
      },
    },
    "type_expected-network-status/v1:ExpectedNetworkStatusResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "ExpectedNetworkStatusResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "expected_network_status",
            "valueType": {
              "type": "id",
              "value": "type_expected-network-status/v1:ExpectedNetworkStatus",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "explanation",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "contract_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_contracts:ContractId",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_exports/v3:GetExportsResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "GetExportsResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Report name; contains date strings representing the start and end date of the export.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Authenticated URL where a customer's report can be retrieved.",
            "key": "authenticated_download_url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Expiration datetime of the authenticated URL. URLs expire after 2 minutes.",
            "key": "authenticated_download_url_expiration",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_fee-schedules/v1:FacilityType": {
      "availability": undefined,
      "description": undefined,
      "name": "FacilityType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "FACILITY",
          },
          {
            "description": undefined,
            "value": "NON_FACILITY",
          },
        ],
      },
    },
    "type_fee-schedules/v1:FeeScheduleConfigFilters": {
      "availability": undefined,
      "description": undefined,
      "name": "FeeScheduleConfigFilters",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "procedure_code_search_term",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "procedure_codes",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "modifiers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_fee-schedules/v1:FeeScheduleConfigModifier",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_uuids",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_payers:PayerUuid",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "network_types",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_fee-schedules/v1:NetworkType",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sort_field",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_fee-schedules/v1:FeeScheduleConfigSortFields",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sort_order",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:SortDirection",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "page_token",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:PageToken",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "limit",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_fee-schedules/v1:FeeScheduleConfigModifier": {
      "availability": undefined,
      "description": undefined,
      "name": "FeeScheduleConfigModifier",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_fee-schedules/v1:Modifier",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "modifier",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "all_modifiers",
          },
        ],
      },
    },
    "type_fee-schedules/v1:FeeScheduleConfigSortFields": {
      "availability": undefined,
      "description": undefined,
      "name": "FeeScheduleConfigSortFields",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "procedure_code",
          },
          {
            "description": undefined,
            "value": "allowed_amount_cents",
          },
        ],
      },
    },
    "type_fee-schedules/v1:FeeScheduleEntryConfig": {
      "availability": undefined,
      "description": undefined,
      "name": "FeeScheduleEntryConfig",
      "shape": {
        "extends": [
          "type_fee-schedules/v1:FeeScheduleEntryConfigBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "fee_schedule_entry_config_id",
            "valueType": {
              "type": "id",
              "value": "type_fee-schedules/v1:FeeScheduleEntryConfigId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_fee-schedules/v1:FeeScheduleEntryConfigBase": {
      "availability": undefined,
      "description": undefined,
      "name": "FeeScheduleEntryConfigBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "organization_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:OrganizationId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "procedure_code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "modifier",
            "valueType": {
              "type": "id",
              "value": "type_fee-schedules/v1:FeeScheduleConfigModifier",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "allowed_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_plan",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer",
            "valueType": {
              "type": "id",
              "value": "type_payers:Payer",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_fee-schedules/v1:FeeScheduleEntryConfigId": {
      "availability": undefined,
      "description": undefined,
      "name": "FeeScheduleEntryConfigId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_fee-schedules/v1:FeeScheduleEntryConfigPage": {
      "availability": undefined,
      "description": undefined,
      "name": "FeeScheduleEntryConfigPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_fee-schedules/v1:FeeScheduleEntryConfig",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_fee-schedules/v1:Modifier": {
      "availability": undefined,
      "description": undefined,
      "name": "Modifier",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_fee-schedules/v1:NetworkType": {
      "availability": undefined,
      "description": undefined,
      "name": "NetworkType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "PPO",
          },
          {
            "description": undefined,
            "value": "HMO",
          },
          {
            "description": undefined,
            "value": "EPO",
          },
          {
            "description": undefined,
            "value": "POS",
          },
        ],
      },
    },
    "type_fee-schedules/v2:BoundFeeSchedule": {
      "availability": undefined,
      "description": undefined,
      "name": "BoundFeeSchedule",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "bound_fee_schedule_id",
            "valueType": {
              "type": "id",
              "value": "type_fee-schedules/v2:BoundFeeScheduleId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "fee_schedule_id",
            "valueType": {
              "type": "id",
              "value": "type_fee-schedules/v2:FeeScheduleId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "reference_fee_schedule",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_fee-schedules/v2:ReferenceFeeScheduleMetadata",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "license_type_coverage",
            "valueType": {
              "type": "id",
              "value": "type_fee-schedules/v2:LicenseTypeCoverage",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "network_coverage",
            "valueType": {
              "type": "id",
              "value": "type_fee-schedules/v2:NetworkCoverage",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "geography_coverage",
            "valueType": {
              "type": "id",
              "value": "type_fee-schedules/v2:GeographyCoverage",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "place_of_service_coverage",
            "valueType": {
              "type": "id",
              "value": "type_fee-schedules/v2:PlaceOfServiceCoverage",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "effective_date_range",
            "valueType": {
              "type": "id",
              "value": "type_commons:DateRangeRequiredEnd",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_fee-schedules/v2:BoundFeeScheduleId": {
      "availability": undefined,
      "description": undefined,
      "name": "BoundFeeScheduleId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_fee-schedules/v2:FeeScheduleConfigurationMechanism": {
      "availability": undefined,
      "description": undefined,
      "name": "FeeScheduleConfigurationMechanism",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "The hard-coded CSV fee schedule configuration without dimensionality.",
            "value": "legacy",
          },
          {
            "description": "The dimensioned fee schedules eventually managed via Candid App.",
            "value": "dimensioned",
          },
        ],
      },
    },
    "type_fee-schedules/v2:FeeScheduleEntry": {
      "availability": undefined,
      "description": undefined,
      "name": "FeeScheduleEntry",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_fee-schedules/v2:FeeScheduleEntryId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "procedure_code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "modifier",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "contracted_rate_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_fee-schedules/v2:FeeScheduleEntryId": {
      "availability": undefined,
      "description": undefined,
      "name": "FeeScheduleEntryId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_fee-schedules/v2:FeeScheduleGeography": {
      "availability": undefined,
      "description": undefined,
      "name": "FeeScheduleGeography",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "state",
            "valueType": {
              "type": "id",
              "value": "type_commons:State",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "county",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_fee-schedules/v2:FeeScheduleId": {
      "availability": undefined,
      "description": undefined,
      "name": "FeeScheduleId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_fee-schedules/v2:GeographyCoverage": {
      "availability": undefined,
      "description": undefined,
      "name": "GeographyCoverage",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "all",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_fee-schedules/v2:FeeScheduleGeography",
                    },
                    "type": "set",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "geography",
          },
        ],
      },
    },
    "type_fee-schedules/v2:GetBoundFeeScheduleResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "GetBoundFeeScheduleResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "bound_fee_schedule",
            "valueType": {
              "type": "id",
              "value": "type_fee-schedules/v2:BoundFeeSchedule",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "entries",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_fee-schedules/v2:FeeScheduleEntry",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_fee-schedules/v2:GetFeeScheduleConfigurationMechanismResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "GetFeeScheduleConfigurationMechanismResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "mechanism",
            "valueType": {
              "type": "id",
              "value": "type_fee-schedules/v2:FeeScheduleConfigurationMechanism",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_fee-schedules/v2:GetGroupedFeeSchedulesForPayerPage": {
      "availability": undefined,
      "description": undefined,
      "name": "GetGroupedFeeSchedulesForPayerPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_fee-schedules/v2:GroupedFeeSchedules",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_fee-schedules/v2:GetGroupedFeeSchedulesForPayerResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "GetGroupedFeeSchedulesForPayerResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "page",
            "valueType": {
              "type": "id",
              "value": "type_fee-schedules/v2:GetGroupedFeeSchedulesForPayerPage",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_fee-schedules/v2:GroupedFeeSchedules": {
      "availability": undefined,
      "description": undefined,
      "name": "GroupedFeeSchedules",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_npi",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "bound_fee_schedules",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_fee-schedules/v2:BoundFeeSchedule",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_fee-schedules/v2:LicenseTypeCoverage": {
      "availability": undefined,
      "description": undefined,
      "name": "LicenseTypeCoverage",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "all",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_organization-providers/v2:LicenseType",
                    },
                    "type": "set",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "license_types",
          },
        ],
      },
    },
    "type_fee-schedules/v2:Network": {
      "availability": undefined,
      "description": undefined,
      "name": "Network",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "Preferred Provider Organization (PPO)",
            "value": "12",
          },
          {
            "description": "Point of Service (POS)",
            "value": "13",
          },
          {
            "description": "Exclusive Provider Organization (EPO)",
            "value": "14",
          },
          {
            "description": "Indemnity Insurance",
            "value": "15",
          },
          {
            "description": "Health Maintenance Organization (HMO) Medicare Risk",
            "value": "16",
          },
          {
            "description": "Dental Maintenance Organization",
            "value": "17",
          },
          {
            "description": "Automobile Medical",
            "value": "AM",
          },
          {
            "description": "CHAMPUS",
            "value": "CH",
          },
          {
            "description": "Disability",
            "value": "DS",
          },
          {
            "description": "Health Maintenance Organization (HMO)",
            "value": "HM",
          },
          {
            "description": "Liability Medical",
            "value": "LM",
          },
          {
            "description": "Medicare Part A",
            "value": "MA",
          },
          {
            "description": "Medicare Part B",
            "value": "MB",
          },
          {
            "description": "Medicaid",
            "value": "MC",
          },
          {
            "description": "Other Federal Program",
            "value": "OF",
          },
          {
            "description": "Title V",
            "value": "TV",
          },
          {
            "description": "Veterans Affairs Plan",
            "value": "VA",
          },
          {
            "description": "Workers' Compensation Health Claim",
            "value": "WC",
          },
          {
            "description": "Mutually Defined",
            "value": "ZZ",
          },
        ],
      },
    },
    "type_fee-schedules/v2:NetworkCoverage": {
      "availability": undefined,
      "description": undefined,
      "name": "NetworkCoverage",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "all",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_fee-schedules/v2:Network",
                    },
                    "type": "set",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "networks",
          },
        ],
      },
    },
    "type_fee-schedules/v2:PlaceOfServiceCategory": {
      "availability": undefined,
      "description": undefined,
      "name": "PlaceOfServiceCategory",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "FACILITY",
          },
          {
            "description": undefined,
            "value": "NON_FACILITY",
          },
          {
            "description": undefined,
            "value": "NOT_APPLICABLE",
          },
        ],
      },
    },
    "type_fee-schedules/v2:PlaceOfServiceCoverage": {
      "availability": undefined,
      "description": undefined,
      "name": "PlaceOfServiceCoverage",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "all",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_fee-schedules/v2:PlaceOfServiceCategory",
                    },
                    "type": "set",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "place_of_services",
          },
        ],
      },
    },
    "type_fee-schedules/v2:ReferenceFeeScheduleMetadata": {
      "availability": undefined,
      "description": undefined,
      "name": "ReferenceFeeScheduleMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "percentage",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "reference_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_guarantor/v1:EncounterHasExistingGuarantorErrorType": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterHasExistingGuarantorErrorType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_guarantor/v1:Guarantor": {
      "availability": undefined,
      "description": undefined,
      "name": "Guarantor",
      "shape": {
        "extends": [
          "type_guarantor/v1:GuarantorBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "guarantor_id",
            "valueType": {
              "type": "id",
              "value": "type_guarantor/v1:GuarantorId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "phone_numbers",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:PhoneNumber",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "phone_consent",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "email",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Email",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "email_consent",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_guarantor/v1:GuarantorBase": {
      "availability": undefined,
      "description": undefined,
      "name": "GuarantorBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "first_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "last_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "external_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "date_of_birth",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "date",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "address",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:StreetAddressShortZip",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_guarantor/v1:GuarantorCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "GuarantorCreate",
      "shape": {
        "extends": [
          "type_guarantor/v1:GuarantorBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "phone_numbers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PhoneNumber",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Defaults to false",
            "key": "phone_consent",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "email",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Email",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Defaults to false",
            "key": "email_consent",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_guarantor/v1:GuarantorId": {
      "availability": undefined,
      "description": undefined,
      "name": "GuarantorId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_identifiers:Identifier": {
      "availability": undefined,
      "description": undefined,
      "name": "Identifier",
      "shape": {
        "extends": [
          "type_identifiers:IdentifierBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "identifier_id",
            "valueType": {
              "type": "id",
              "value": "type_identifiers:IdentifierId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_identifiers:IdentifierBase": {
      "availability": undefined,
      "description": undefined,
      "name": "IdentifierBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "period",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:DateRangeOptionalEnd",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "identifier_code",
            "valueType": {
              "type": "id",
              "value": "type_identifiers:IdentifierCode",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "identifier_value",
            "valueType": {
              "type": "id",
              "value": "type_identifiers:IdentifierValue",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_identifiers:IdentifierCode": {
      "availability": undefined,
      "description": undefined,
      "name": "IdentifierCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "MCR",
          },
          {
            "description": undefined,
            "value": "MCD",
          },
        ],
      },
    },
    "type_identifiers:IdentifierCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "IdentifierCreate",
      "shape": {
        "extends": [
          "type_identifiers:IdentifierBase",
        ],
        "properties": [],
        "type": "object",
      },
    },
    "type_identifiers:IdentifierId": {
      "availability": undefined,
      "description": undefined,
      "name": "IdentifierId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_identifiers:IdentifierUpdate": {
      "availability": undefined,
      "description": undefined,
      "name": "IdentifierUpdate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "identifier_id",
            "valueType": {
              "type": "id",
              "value": "type_identifiers:IdentifierId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "identifier_code",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_identifiers:IdentifierCode",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "identifier_value",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_identifiers:IdentifierValue",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "period",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:RemovableDateRangeOptionalEnd",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_identifiers:IdentifierValue": {
      "availability": undefined,
      "description": undefined,
      "name": "IdentifierValue",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_identifiers:MedicareProviderIdentifier",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "medicare_provider_identifier",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_identifiers:MedicaidProviderIdentifier",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "medicaid_provider_identifier",
          },
        ],
      },
    },
    "type_identifiers:MedicaidProviderIdentifier": {
      "availability": undefined,
      "description": undefined,
      "name": "MedicaidProviderIdentifier",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "state",
            "valueType": {
              "type": "id",
              "value": "type_commons:State",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "provider_number",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_identifiers:MedicareProviderIdentifier": {
      "availability": undefined,
      "description": undefined,
      "name": "MedicareProviderIdentifier",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "state",
            "valueType": {
              "type": "id",
              "value": "type_commons:State",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "provider_number",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_identifiers:UpdatableIdentifier": {
      "availability": undefined,
      "description": undefined,
      "name": "UpdatableIdentifier",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_identifiers:IdentifierCreate",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "add",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_identifiers:IdentifierUpdate",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "update",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_identifiers:IdentifierId",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "remove",
          },
        ],
      },
    },
    "type_individual:Gender": {
      "availability": undefined,
      "description": undefined,
      "name": "Gender",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "male",
          },
          {
            "description": undefined,
            "value": "female",
          },
          {
            "description": undefined,
            "value": "other",
          },
          {
            "description": undefined,
            "value": "not_given",
          },
          {
            "description": undefined,
            "value": "unknown",
          },
        ],
      },
    },
    "type_individual:Individual": {
      "availability": undefined,
      "description": undefined,
      "name": "Individual",
      "shape": {
        "extends": [
          "type_individual:IndividualBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "individual_id",
            "valueType": {
              "type": "id",
              "value": "type_individual:IndividualId",
            },
          },
          {
            "availability": undefined,
            "description": "Another ID you want to associate with this patient. For example, your internal patient ID or a Dr. Chrono patient ID.
",
            "key": "external_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_relationship_to_subscriber_code",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:PatientRelationshipToInsuredCodeAll",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "address",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:StreetAddressShortZip",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "date_of_birth",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_individual:IndividualBase": {
      "availability": undefined,
      "description": undefined,
      "name": "IndividualBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "first_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "last_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "gender",
            "valueType": {
              "type": "id",
              "value": "type_individual:Gender",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_individual:IndividualId": {
      "availability": undefined,
      "description": undefined,
      "name": "IndividualId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_individual:Patient": {
      "availability": undefined,
      "description": undefined,
      "name": "Patient",
      "shape": {
        "extends": [
          "type_individual:PatientBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "individual_id",
            "valueType": {
              "type": "id",
              "value": "type_individual:IndividualId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "phone_numbers",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:PhoneNumber",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "phone_consent",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "email",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Email",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "email_consent",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_individual:PatientBase": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientBase",
      "shape": {
        "extends": [
          "type_individual:IndividualBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": "Another ID you want to associate with this patient.
For example, your internal patient ID or a Dr. Chrono patient ID. Box 1a on the CMS-1500 claim form
",
            "key": "external_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Box 3 on the CMS-1500 claim form. The date format should be in ISO 8601 date; formatted YYYY-MM-DD (i.e. 2012-02-01)",
            "key": "date_of_birth",
            "valueType": {
              "type": "id",
              "value": "type_commons:Date",
            },
          },
          {
            "availability": undefined,
            "description": "Box 5 on the CMS-1500 claim form.",
            "key": "address",
            "valueType": {
              "type": "id",
              "value": "type_commons:StreetAddressShortZip",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_individual:PatientCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientCreate",
      "shape": {
        "extends": [
          "type_individual:PatientBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "phone_numbers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:PhoneNumber",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Defaults to false",
            "key": "phone_consent",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "email",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Email",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Defaults to false",
            "key": "email_consent",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_individual:Subscriber": {
      "availability": undefined,
      "description": undefined,
      "name": "Subscriber",
      "shape": {
        "extends": [
          "type_individual:SubscriberBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "individual_id",
            "valueType": {
              "type": "id",
              "value": "type_individual:IndividualId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_card",
            "valueType": {
              "type": "id",
              "value": "type_insurance-card:InsuranceCard",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_individual:SubscriberBase": {
      "availability": undefined,
      "description": undefined,
      "name": "SubscriberBase",
      "shape": {
        "extends": [
          "type_individual:IndividualBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_relationship_to_subscriber_code",
            "valueType": {
              "type": "id",
              "value": "type_commons:PatientRelationshipToInsuredCodeAll",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "date_of_birth",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "address",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:StreetAddressShortZip",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_individual:SubscriberCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "SubscriberCreate",
      "shape": {
        "extends": [
          "type_individual:SubscriberBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_card",
            "valueType": {
              "type": "id",
              "value": "type_insurance-card:InsuranceCardCreate",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-adjustments/v1:CarcAmountError": {
      "availability": undefined,
      "description": undefined,
      "name": "CarcAmountError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_insurance-adjustments/v1:OtherFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "other",
          },
        ],
      },
    },
    "type_insurance-adjustments/v1:CarcFieldError": {
      "availability": undefined,
      "description": undefined,
      "name": "CarcFieldError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "index",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "property_error",
            "valueType": {
              "type": "id",
              "value": "type_insurance-adjustments/v1:CarcPropertyFieldError",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-adjustments/v1:CarcGroupCodeError": {
      "availability": undefined,
      "description": undefined,
      "name": "CarcGroupCodeError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_insurance-adjustments/v1:OtherFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "other",
          },
        ],
      },
    },
    "type_insurance-adjustments/v1:CarcPropertyFieldError": {
      "availability": undefined,
      "description": undefined,
      "name": "CarcPropertyFieldError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_insurance-adjustments/v1:CarcGroupCodeError",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "group_code_error",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_insurance-adjustments/v1:CarcReasonCodeError",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "reason_code_error",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_insurance-adjustments/v1:CarcAmountError",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "amount_error",
          },
        ],
      },
    },
    "type_insurance-adjustments/v1:CarcReasonCodeError": {
      "availability": undefined,
      "description": undefined,
      "name": "CarcReasonCodeError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "only_denied_carc_code_on_denied_service_line",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "denial_code_used_without_denial_reason",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_insurance-adjustments/v1:OtherFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "other",
          },
        ],
      },
    },
    "type_insurance-adjustments/v1:ClaimAdjustmentReasonCode": {
      "availability": undefined,
      "description": undefined,
      "name": "ClaimAdjustmentReasonCode",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "group_code",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimAdjustmentGroupCodes",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "reason_code",
            "valueType": {
              "type": "id",
              "value": "type_x12/v1:Carc",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-adjustments/v1:CoinsuranceFieldError": {
      "availability": undefined,
      "description": undefined,
      "name": "CoinsuranceFieldError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_insurance-adjustments/v1:OtherFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "other",
          },
        ],
      },
    },
    "type_insurance-adjustments/v1:CopayFieldError": {
      "availability": undefined,
      "description": undefined,
      "name": "CopayFieldError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_insurance-adjustments/v1:OtherFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "other",
          },
        ],
      },
    },
    "type_insurance-adjustments/v1:CreateInsuranceAdjustmentFieldError": {
      "availability": undefined,
      "description": undefined,
      "name": "CreateInsuranceAdjustmentFieldError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_insurance-adjustments/v1:DenialReasonFieldError",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "denial_reason_error",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_insurance-adjustments/v1:InsuranceAllowedFieldError",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "insurance_allowed_error",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_insurance-adjustments/v1:InsurancePaidFieldError",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "insurance_paid_error",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_insurance-adjustments/v1:DeductibleFieldError",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "deductible_error",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_insurance-adjustments/v1:CoinsuranceFieldError",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "coinsurance_error",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_insurance-adjustments/v1:CopayFieldError",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "copay_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_insurance-adjustments/v1:CarcFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "carc_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_insurance-adjustments/v1:RarcFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "rarc_error",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_insurance-adjustments/v1:InvalidDeniedAdjustmentAmountError",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "invalid_denied_adjustment_amount_error",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "insurance_adjustment_amount_is_greater_than_allowed_amount",
          },
        ],
      },
    },
    "type_insurance-adjustments/v1:CreateInsuranceAdjustmentFieldsErrorsType": {
      "availability": undefined,
      "description": undefined,
      "name": "CreateInsuranceAdjustmentFieldsErrorsType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "errors",
            "valueType": {
              "keyType": {
                "type": "id",
                "value": "type_commons:ServiceLineId",
              },
              "type": "map",
              "valueType": {
                "itemType": {
                  "type": "id",
                  "value": "type_insurance-adjustments/v1:CreateInsuranceAdjustmentFieldError",
                },
                "type": "list",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-adjustments/v1:CreateInsuranceAdjustmentRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "CreateInsuranceAdjustmentRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_uuid",
            "valueType": {
              "type": "id",
              "value": "type_payers:PayerUuid",
            },
          },
          {
            "availability": undefined,
            "description": "Defaults to today",
            "key": "post_date",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "date",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_claim_number",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "check_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "check_date",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "date",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "note",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_lines",
            "valueType": {
              "keyType": {
                "type": "id",
                "value": "type_commons:ServiceLineId",
              },
              "type": "map",
              "valueType": {
                "type": "id",
                "value": "type_insurance-adjustments/v1:ServiceLineAdjustmentRequest",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-adjustments/v1:CreateInsuranceAdjustmentResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "CreateInsuranceAdjustmentResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "adjustment_id",
            "valueType": {
              "type": "id",
              "value": "type_insurance-adjustments/v1:InsuranceAdjustmentId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-adjustments/v1:DeductibleFieldError": {
      "availability": undefined,
      "description": undefined,
      "name": "DeductibleFieldError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_insurance-adjustments/v1:OtherFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "other",
          },
        ],
      },
    },
    "type_insurance-adjustments/v1:DenialReasonFieldError": {
      "availability": undefined,
      "description": undefined,
      "name": "DenialReasonFieldError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "at_least_one_denial_carc_required",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_insurance-adjustments/v1:OtherFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "other",
          },
        ],
      },
    },
    "type_insurance-adjustments/v1:InsuranceAdjustmentAttachmentId": {
      "availability": undefined,
      "description": undefined,
      "name": "InsuranceAdjustmentAttachmentId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_insurance-adjustments/v1:InsuranceAdjustmentAttachmentResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "InsuranceAdjustmentAttachmentResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "signed_download_url",
            "valueType": {
              "type": "id",
              "value": "type_commons:ContentDownloadUrl",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-adjustments/v1:InsuranceAdjustmentId": {
      "availability": undefined,
      "description": undefined,
      "name": "InsuranceAdjustmentId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_insurance-adjustments/v1:InsuranceAllowedFieldError": {
      "availability": undefined,
      "description": undefined,
      "name": "InsuranceAllowedFieldError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_insurance-adjustments/v1:OtherFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "other",
          },
        ],
      },
    },
    "type_insurance-adjustments/v1:InsurancePaidFieldError": {
      "availability": undefined,
      "description": undefined,
      "name": "InsurancePaidFieldError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_insurance-adjustments/v1:OtherFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "other",
          },
        ],
      },
    },
    "type_insurance-adjustments/v1:InvalidDeniedAdjustmentAmountError": {
      "availability": undefined,
      "description": undefined,
      "name": "InvalidDeniedAdjustmentAmountError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "denial_amount_is_not_equal_to_billed_amount",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_insurance-adjustments/v1:OtherFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "other",
          },
        ],
      },
    },
    "type_insurance-adjustments/v1:OtherFieldError": {
      "availability": undefined,
      "description": "A generic error that can be displayed on the targeted field with a user-facing description.",
      "name": "OtherFieldError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "human_readable_description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-adjustments/v1:RarcFieldError": {
      "availability": undefined,
      "description": undefined,
      "name": "RarcFieldError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "index",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "property_error",
            "valueType": {
              "type": "id",
              "value": "type_insurance-adjustments/v1:RarcPropertyFieldError",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-adjustments/v1:RarcPropertyFieldError": {
      "availability": undefined,
      "description": undefined,
      "name": "RarcPropertyFieldError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_insurance-adjustments/v1:RarcReasonCodeError",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "reason_code_error",
          },
        ],
      },
    },
    "type_insurance-adjustments/v1:RarcReasonCodeError": {
      "availability": undefined,
      "description": undefined,
      "name": "RarcReasonCodeError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "at_least_one_carc_required",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_insurance-adjustments/v1:OtherFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "other",
          },
        ],
      },
    },
    "type_insurance-adjustments/v1:RemittanceAdviceRemarkCode": {
      "availability": undefined,
      "description": undefined,
      "name": "RemittanceAdviceRemarkCode",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "reason_code",
            "valueType": {
              "type": "id",
              "value": "type_x12/v1:Rarc",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-adjustments/v1:ServiceLineAdjustmentRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLineAdjustmentRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Will be treated as a denial if present",
            "key": "denial_reason",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-lines/v2:DenialReasonContent",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_allowed_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_paid_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "deductible_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "coinsurance_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "copay_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "carcs",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_insurance-adjustments/v1:ClaimAdjustmentReasonCode",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rarcs",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_insurance-adjustments/v1:RemittanceAdviceRemarkCode",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentFieldError": {
      "availability": undefined,
      "description": undefined,
      "name": "ValidateInsuranceAdjustmentFieldError",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_insurance-adjustments/v1:CarcFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "carc_error",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_insurance-adjustments/v1:RarcFieldError",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "rarc_error",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_insurance-adjustments/v1:DenialReasonFieldError",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "denial_reason_error",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_insurance-adjustments/v1:InvalidDeniedAdjustmentAmountError",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "invalid_denied_adjustment_amount_error",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "insurance_adjustment_amount_is_greater_than_allowed_amount",
          },
        ],
      },
    },
    "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentFieldsErrorsType": {
      "availability": undefined,
      "description": undefined,
      "name": "ValidateInsuranceAdjustmentFieldsErrorsType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "errors",
            "valueType": {
              "keyType": {
                "type": "id",
                "value": "type_commons:ServiceLineId",
              },
              "type": "map",
              "valueType": {
                "itemType": {
                  "type": "id",
                  "value": "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentFieldError",
                },
                "type": "list",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "ValidateInsuranceAdjustmentRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_lines",
            "valueType": {
              "keyType": {
                "type": "id",
                "value": "type_commons:ServiceLineId",
              },
              "type": "map",
              "valueType": {
                "type": "id",
                "value": "type_insurance-adjustments/v1:ServiceLineAdjustmentRequest",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "ValidateInsuranceAdjustmentResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_lines",
            "valueType": {
              "keyType": {
                "type": "id",
                "value": "type_commons:ServiceLineId",
              },
              "type": "map",
              "valueType": {
                "type": "id",
                "value": "type_insurance-adjustments/v1:ValidateServiceLineAdjustmentResponse",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-adjustments/v1:ValidateServiceLineAdjustmentResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "ValidateServiceLineAdjustmentResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_adjustment_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "other_patient_responsibility_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-card:InsuranceCard": {
      "availability": undefined,
      "description": undefined,
      "name": "InsuranceCard",
      "shape": {
        "extends": [
          "type_insurance-card:InsuranceCardBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_card_id",
            "valueType": {
              "type": "id",
              "value": "type_insurance-card:InsuranceCardId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "member_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rx_bin",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rx_pcn",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "image_url_front",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "image_url_back",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-card:InsuranceCardBase": {
      "availability": undefined,
      "description": undefined,
      "name": "InsuranceCardBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Box 11 on the CMS-1500 claim form.",
            "key": "group_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Box 11c on the CMS-1500 claim form.",
            "key": "plan_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "plan_type",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:SourceOfPaymentCode",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_type",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:InsuranceTypeCode",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-card:InsuranceCardCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "InsuranceCardCreate",
      "shape": {
        "extends": [
          "type_insurance-card:InsuranceCardBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "member_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rx_bin",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rx_pcn",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "image_url_front",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "image_url_back",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "emr_payer_crosswalk",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:EmrPayerCrosswalk",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_insurance-card:InsuranceCardId": {
      "availability": undefined,
      "description": undefined,
      "name": "InsuranceCardId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_insurance-card:InsuranceCardImages": {
      "availability": undefined,
      "description": undefined,
      "name": "InsuranceCardImages",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "signed_image_url_front",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "signed_image_url_back",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_internal-api-testing/v1:Director": {
      "availability": undefined,
      "description": undefined,
      "name": "Director",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_internal-api-testing/v1:Movie": {
      "availability": undefined,
      "description": undefined,
      "name": "Movie",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "director",
            "valueType": {
              "type": "id",
              "value": "type_internal-api-testing/v1:Director",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "year_of_release",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_internal-api-testing/v1:MovieCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "MovieCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "director",
            "valueType": {
              "type": "id",
              "value": "type_internal-api-testing/v1:Director",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "year_of_release",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_invoices:CreatedInvoice": {
      "availability": undefined,
      "description": undefined,
      "name": "CreatedInvoice",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_invoices:Invoice",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "invoice",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_invoices:InvoicePreview",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "invoice_preview",
          },
        ],
      },
    },
    "type_invoices:Invoice": {
      "availability": undefined,
      "description": undefined,
      "name": "Invoice",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_invoices:InvoiceId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "organzation_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:OrganizationId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "source_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "source_customer_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_external_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:PatientExternalId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "note",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "due_date",
            "valueType": {
              "type": "id",
              "value": "type_commons:Date",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_invoices:InvoiceStatus",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "url",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "customer_invoice_url",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_invoices:InvoiceItem",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_invoices:InvoiceFilter": {
      "availability": undefined,
      "description": undefined,
      "name": "InvoiceFilter",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_external_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:PatientExternalId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "note",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "due_date_before",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "due_date_after",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "status",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_invoices:InvoiceStatus",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "limit",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sort",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_invoices:InvoiceSortField",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sort_direction",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:SortDirection",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "page_token",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:PageToken",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_invoices:InvoiceId": {
      "availability": undefined,
      "description": undefined,
      "name": "InvoiceId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_invoices:InvoiceItem": {
      "availability": undefined,
      "description": undefined,
      "name": "InvoiceItem",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ServiceLineId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_invoices:InvoicePreview": {
      "availability": undefined,
      "description": undefined,
      "name": "InvoicePreview",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "organzation_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:OrganizationId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "source_customer_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "source_customer_email",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "source_customer_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "source_customer_url",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_external_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:PatientExternalId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "note",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "due_date",
            "valueType": {
              "type": "id",
              "value": "type_commons:Date",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "status",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_invoices:InvoiceStatus",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_invoices:InvoiceItem",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_invoices:InvoiceSortField": {
      "availability": undefined,
      "description": undefined,
      "name": "InvoiceSortField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "created_at",
          },
          {
            "description": undefined,
            "value": "updated_at",
          },
          {
            "description": undefined,
            "value": "patient_external_id",
          },
          {
            "description": undefined,
            "value": "note",
          },
          {
            "description": undefined,
            "value": "due_date",
          },
          {
            "description": undefined,
            "value": "status",
          },
        ],
      },
    },
    "type_invoices:InvoiceStatus": {
      "availability": undefined,
      "description": undefined,
      "name": "InvoiceStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "draft",
          },
          {
            "description": undefined,
            "value": "open",
          },
          {
            "description": undefined,
            "value": "paid",
          },
          {
            "description": undefined,
            "value": "void",
          },
          {
            "description": undefined,
            "value": "uncollectible",
          },
        ],
      },
    },
    "type_invoices:PagedInvoices": {
      "availability": undefined,
      "description": undefined,
      "name": "PagedInvoices",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_invoices:Invoice",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_managed-emr-configs/v1:CanvasEmrConfig": {
      "availability": undefined,
      "description": undefined,
      "name": "CanvasEmrConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The name of the organization that the Canvas EMR integration is for",
            "key": "canvas_export_organization_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The base URL for the Canvas EMR integration",
            "key": "base_url",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The auth base URL for the Canvas EMR integration",
            "key": "auth_base_url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The candid practitioner ID for the Canvas EMR integration",
            "key": "candid_practitioner_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The customer task owner for the Canvas EMR integration",
            "key": "customer_task_owner",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_managed-emr-configs/v1:CanvasEmrConfigCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "CanvasEmrConfigCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The name of the organization that the Canvas EMR integration is for",
            "key": "canvas_export_organization_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The client ID for the Canvas EMR integration",
            "key": "canvas_client_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The client secret for the Canvas EMR integration",
            "key": "canvas_client_secret",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The base URL for the Canvas EMR integration",
            "key": "base_url",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The auth base URL for the Canvas EMR integration",
            "key": "auth_base_url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The candid practitioner ID for the Canvas EMR integration",
            "key": "candid_practitioner_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The customer task owner for the Canvas EMR integration",
            "key": "customer_task_owner",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_managed-emr-configs/v1:CanvasEmrConfigUpdate": {
      "availability": undefined,
      "description": undefined,
      "name": "CanvasEmrConfigUpdate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The name of the organization that the Canvas EMR integration is for",
            "key": "canvas_export_organization_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The client ID for the Canvas EMR integration",
            "key": "canvas_client_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The client secret for the Canvas EMR integration",
            "key": "canvas_client_secret",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The base URL for the Canvas EMR integration",
            "key": "base_url",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The auth base URL for the Canvas EMR integration",
            "key": "auth_base_url",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The candid practitioner ID for the Canvas EMR integration",
            "key": "candid_practitioner_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The customer task owner for the Canvas EMR integration",
            "key": "customer_task_owner",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_managed-emr-configs/v1:ElationEmrConfig": {
      "availability": undefined,
      "description": undefined,
      "name": "ElationEmrConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The username for the Elation EMR integration. This has been deprecated by Elation.",
            "key": "elation_username",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Whether to enable patient payment for the Elation EMR integration. This has been deprecated by Elation.",
            "key": "enable_patient_payment",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The service facility routing location for the Elation EMR integration",
            "key": "service_facility_routing_location",
            "valueType": {
              "type": "id",
              "value": "type_managed-emr-configs/v1:ElationServiceFacilityRoutingMetadata",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_managed-emr-configs/v1:ElationEmrConfigCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "ElationEmrConfigCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The client ID for the Elation EMR integration",
            "key": "elation_client_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The client secret for the Elation EMR integration",
            "key": "elation_client_secret",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The username for the Elation EMR integration. This has been deprecated by Elation.",
            "key": "elation_username",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The password for the Elation EMR integration",
            "key": "elation_password",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Whether to enable patient payment for the Elation EMR integration. This has been deprecated by Elation.",
            "key": "enable_patient_payment",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The service facility routing location for the Elation EMR integration",
            "key": "service_facility_routing_location",
            "valueType": {
              "type": "id",
              "value": "type_managed-emr-configs/v1:ElationServiceFacilityRoutingMetadata",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_managed-emr-configs/v1:ElationEmrConfigUpdate": {
      "availability": undefined,
      "description": undefined,
      "name": "ElationEmrConfigUpdate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The client ID for the Elation EMR integration",
            "key": "elation_client_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The client secret for the Elation EMR integration",
            "key": "elation_client_secret",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The username for the Elation EMR integration. This has been deprecated by Elation.",
            "key": "elation_username",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The password for the Elation EMR integration",
            "key": "elation_password",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Whether to enable patient payment for the Elation EMR integration. This has been deprecated by Elation.",
            "key": "enable_patient_payment",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The service facility routing location for the Elation EMR integration",
            "key": "service_facility_routing_location",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_managed-emr-configs/v1:ElationServiceFacilityRoutingMetadata",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_managed-emr-configs/v1:ElationServiceFacilityRoutingMetadata": {
      "availability": undefined,
      "description": undefined,
      "name": "ElationServiceFacilityRoutingMetadata",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_managed-emr-configs/v1:IntegrationLevelElationServiceFacilityRoutingMetadata",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "integration",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_managed-emr-configs/v1:RuleLevelElationServiceFacilityRoutingMetadata",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "rule",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_managed-emr-configs/v1:FilterActionLevelElationServiceFacilityRoutingMetadata",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "filter_action_rule",
          },
        ],
      },
    },
    "type_managed-emr-configs/v1:FilterActionLevelElationServiceFacilityRoutingMetadata": {
      "availability": undefined,
      "description": undefined,
      "name": "FilterActionLevelElationServiceFacilityRoutingMetadata",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_managed-emr-configs/v1:IntegrationLevelElationServiceFacilityRoutingMetadata": {
      "availability": undefined,
      "description": undefined,
      "name": "IntegrationLevelElationServiceFacilityRoutingMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The default service facility group name for the Elation EMR integration",
            "key": "default_service_facility_group_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_managed-emr-configs/v1:ManagedEmrConfig": {
      "availability": undefined,
      "description": undefined,
      "name": "ManagedEmrConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The ID of the Canvas EMR integration",
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_managed-emr-configs/v1:ManagedEmrConfigId",
            },
          },
          {
            "availability": undefined,
            "description": "The date that the integration is eligible for billing",
            "key": "billing_start_date",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "date",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Create tasks in the EMR system for encounters that are marked as \`DNB\` but fail to be ingested by our integration",
            "key": "create_tasks_for_non_billable_encounters",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Whether to process updates for existing encounters",
            "key": "process_updates_for_existing_encounters",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Whether the EMR integration is enabled",
            "key": "enabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Additional details for the EMR integration",
            "key": "additional_details",
            "valueType": {
              "type": "id",
              "value": "type_managed-emr-configs/v1:ManagedEmrConfigAdditionalDetails",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_managed-emr-configs/v1:ManagedEmrConfigAdditionalDetails": {
      "availability": undefined,
      "description": undefined,
      "name": "ManagedEmrConfigAdditionalDetails",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_managed-emr-configs/v1:CanvasEmrConfig",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "canvas",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_managed-emr-configs/v1:ElationEmrConfig",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "elation",
          },
        ],
      },
    },
    "type_managed-emr-configs/v1:ManagedEmrConfigCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "ManagedEmrConfigCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The date that the integration is eligible for billing",
            "key": "billing_start_date",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "date",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Create tasks in the EMR system for encounters that are marked as \`DNB\` but fail to be ingested by our integration",
            "key": "create_tasks_for_non_billable_encounters",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Whether to process updates for existing encounters",
            "key": "process_updates_for_existing_encounters",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Whether the EMR integration is enabled",
            "key": "enabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Additional details for the EMR integration",
            "key": "additional_details",
            "valueType": {
              "type": "id",
              "value": "type_managed-emr-configs/v1:ManagedEmrConfigCreateAdditionalDetails",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_managed-emr-configs/v1:ManagedEmrConfigCreateAdditionalDetails": {
      "availability": undefined,
      "description": undefined,
      "name": "ManagedEmrConfigCreateAdditionalDetails",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_managed-emr-configs/v1:CanvasEmrConfigCreate",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "canvas",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_managed-emr-configs/v1:ElationEmrConfigCreate",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "elation",
          },
        ],
      },
    },
    "type_managed-emr-configs/v1:ManagedEmrConfigId": {
      "availability": undefined,
      "description": "The ID of the Managed EMR Config",
      "name": "ManagedEmrConfigId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_managed-emr-configs/v1:ManagedEmrConfigPage": {
      "availability": undefined,
      "description": undefined,
      "name": "ManagedEmrConfigPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_managed-emr-configs/v1:ManagedEmrConfig",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_managed-emr-configs/v1:ManagedEmrConfigUpdate": {
      "availability": undefined,
      "description": undefined,
      "name": "ManagedEmrConfigUpdate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The date that the integration was turned on",
            "key": "billing_start_date",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "date",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Create tasks in the EMR system for encounters that are marked as \`DNB\` but fail to be ingested by our integration",
            "key": "create_tasks_for_non_billable_encounters",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Whether to process updates for existing encounters",
            "key": "process_updates_for_existing_encounters",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Whether the integration is enabled",
            "key": "enabled",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Additional details for the EMR integration",
            "key": "additional_details",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_managed-emr-configs/v1:ManagedEmrConfigUpdateAdditionalDetails",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_managed-emr-configs/v1:ManagedEmrConfigUpdateAdditionalDetails": {
      "availability": undefined,
      "description": undefined,
      "name": "ManagedEmrConfigUpdateAdditionalDetails",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_managed-emr-configs/v1:CanvasEmrConfigUpdate",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "canvas",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_managed-emr-configs/v1:ElationEmrConfigUpdate",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "elation",
          },
        ],
      },
    },
    "type_managed-emr-configs/v1:RuleLevelElationServiceFacilityRoutingMetadata": {
      "availability": undefined,
      "description": undefined,
      "name": "RuleLevelElationServiceFacilityRoutingMetadata",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object",
      },
    },
    "type_organization-payers:AddOrganizationPayerRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "AddOrganizationPayerRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_uuid",
            "valueType": {
              "type": "id",
              "value": "type_payers:PayerUuid",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-payers:AddOrganizationPayerResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "AddOrganizationPayerResponse",
      "shape": {
        "type": "alias",
        "value": {
          "type": "id",
          "value": "type_organization-payers:OrganizationPayer",
        },
      },
    },
    "type_organization-payers:GetMultiOrganizationPayersResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "GetMultiOrganizationPayersResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "page",
            "valueType": {
              "type": "id",
              "value": "type_organization-payers:OrganizationPayersPage",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-payers:OrganizationPayer": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationPayer",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer",
            "valueType": {
              "type": "id",
              "value": "type_payers:Payer",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "summary",
            "valueType": {
              "type": "id",
              "value": "type_organization-payers:OrganizationPayerSummary",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-payers:OrganizationPayerSummary": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationPayerSummary",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "fee_schedule_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-payers:OrganizationPayersPage": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationPayersPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_organization-payers:OrganizationPayer",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-payers:SearchOrganizationPayerResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "SearchOrganizationPayerResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "search_result",
            "valueType": {
              "type": "id",
              "value": "type_organization-payers:SearchOrganizationPayerSearchResult",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-payers:SearchOrganizationPayerSearchResult": {
      "availability": undefined,
      "description": undefined,
      "name": "SearchOrganizationPayerSearchResult",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_organization-payers:OrganizationPayer",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "match",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "no_match",
          },
        ],
      },
    },
    "type_organization-providers/v2:AddressType": {
      "availability": undefined,
      "description": undefined,
      "name": "AddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "DEFAULT",
          },
        ],
      },
    },
    "type_organization-providers/v2:EmploymentStatus": {
      "availability": undefined,
      "description": undefined,
      "name": "EmploymentStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "ACTIVE",
          },
          {
            "description": undefined,
            "value": "TERMINATED",
          },
        ],
      },
    },
    "type_organization-providers/v2:LicenseType": {
      "availability": undefined,
      "description": undefined,
      "name": "LicenseType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "MD",
          },
          {
            "description": undefined,
            "value": "NP",
          },
          {
            "description": undefined,
            "value": "PA",
          },
          {
            "description": undefined,
            "value": "LMFT",
          },
          {
            "description": undefined,
            "value": "LCPC",
          },
          {
            "description": undefined,
            "value": "LCSW",
          },
          {
            "description": undefined,
            "value": "PMHNP",
          },
          {
            "description": undefined,
            "value": "FNP",
          },
          {
            "description": undefined,
            "value": "LPCC",
          },
          {
            "description": undefined,
            "value": "DO",
          },
          {
            "description": undefined,
            "value": "RD",
          },
          {
            "description": undefined,
            "value": "SLP",
          },
          {
            "description": undefined,
            "value": "APRN",
          },
          {
            "description": undefined,
            "value": "LPC",
          },
          {
            "description": undefined,
            "value": "PHD",
          },
          {
            "description": undefined,
            "value": "PSYD",
          },
          {
            "description": undefined,
            "value": "LMSW",
          },
          {
            "description": undefined,
            "value": "LMHC",
          },
          {
            "description": undefined,
            "value": "OTHER_MASTERS",
          },
          {
            "description": undefined,
            "value": "BCBA",
          },
          {
            "description": undefined,
            "value": "UNKNOWN",
          },
          {
            "description": undefined,
            "value": "RPH",
          },
          {
            "description": undefined,
            "value": "PHT",
          },
          {
            "description": undefined,
            "value": "LAC",
          },
          {
            "description": undefined,
            "value": "LMT",
          },
          {
            "description": undefined,
            "value": "DC",
          },
          {
            "description": undefined,
            "value": "ND",
          },
          {
            "description": undefined,
            "value": "MA",
          },
          {
            "description": undefined,
            "value": "PT",
          },
          {
            "description": undefined,
            "value": "IBCLC",
          },
          {
            "description": undefined,
            "value": "RN",
          },
          {
            "description": undefined,
            "value": "DPT",
          },
          {
            "description": undefined,
            "value": "LCMHC",
          },
        ],
      },
    },
    "type_organization-providers/v2:OrganizationProvider": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationProvider",
      "shape": {
        "extends": [
          "type_organization-providers/v2:OrganizationProviderBase",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": "Auto-generated ID set on creation",
            "key": "organization_provider_id",
            "valueType": {
              "type": "id",
              "value": "type_organization-providers/v2:OrganizationProviderId",
            },
          },
          {
            "availability": undefined,
            "description": "The employment status for the provider.",
            "key": "employment_status",
            "valueType": {
              "type": "id",
              "value": "type_organization-providers/v2:EmploymentStatus",
            },
          },
          {
            "availability": undefined,
            "description": "The employment start date for the provider.",
            "key": "employment_start_date",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The employment termination date for the provider.",
            "key": "employment_termination_date",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-providers/v2:OrganizationProviderAddress": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationProviderAddress",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The address of the provider",
            "key": "address",
            "valueType": {
              "type": "id",
              "value": "type_commons:StreetAddressLongZip",
            },
          },
          {
            "availability": undefined,
            "description": "The address type of the provider",
            "key": "address_type",
            "valueType": {
              "type": "id",
              "value": "type_organization-providers/v2:AddressType",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-providers/v2:OrganizationProviderBase": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationProviderBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The NPI of the provider. This must be all digits [0-9] and exactly 10 characters long.",
            "key": "npi",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Whether the provider can be used to render services.",
            "key": "is_rendering",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Whether the provider can be used to bill services.",
            "key": "is_billing",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The first name of the provider, if the provider is an individual.",
            "key": "first_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The last name of the provider, if the provider is an individual.",
            "key": "last_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The name of the provider, if the provider is an organization.",
            "key": "organization_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Whether the provider is an individual (NPPES Type 1) or organization (NPPES Type 2) provider.
",
            "key": "provider_type",
            "valueType": {
              "type": "id",
              "value": "type_organization-providers/v2:ProviderType",
            },
          },
          {
            "availability": undefined,
            "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.
",
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "A code designating classification and specialization.",
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The type of license that the provider holds.",
            "key": "license_type",
            "valueType": {
              "type": "id",
              "value": "type_organization-providers/v2:LicenseType",
            },
          },
          {
            "availability": undefined,
            "description": "The Provider Transaction Access Number for the provider.",
            "key": "ptan",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The medicaid provider ID for the provider.",
            "key": "medicaid_provider_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The addresses associated with this provider.",
            "key": "addresses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_organization-providers/v2:OrganizationProviderAddress",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-providers/v2:OrganizationProviderId": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationProviderId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_organization-providers/v2:OrganizationProviderPage": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationProviderPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_organization-providers/v2:OrganizationProvider",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-providers/v2:OrganizationProviderSortOptions": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationProviderSortOptions",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "provider_name:asc",
          },
          {
            "description": undefined,
            "value": "provider_name:desc",
          },
          {
            "description": undefined,
            "value": "npi:asc",
          },
          {
            "description": undefined,
            "value": "npi:desc",
          },
        ],
      },
    },
    "type_organization-providers/v2:ProviderType": {
      "availability": undefined,
      "description": undefined,
      "name": "ProviderType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "INDIVIDUAL",
          },
          {
            "description": undefined,
            "value": "ORGANIZATION",
          },
        ],
      },
    },
    "type_organization-providers/v3:OrganizationProviderCreateV2": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationProviderCreateV2",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The NPI of the provider. This must be all digits [0-9] and exactly 10 characters long.",
            "key": "npi",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Whether the provider can be used to render services.",
            "key": "is_rendering",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Whether the provider can be used to bill services.",
            "key": "is_billing",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The first name of the provider, if the provider is an individual.",
            "key": "first_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The last name of the provider, if the provider is an individual.",
            "key": "last_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The name of the provider, if the provider is an organization.",
            "key": "organization_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Whether the provider is an individual (NPPES Type 1) or organization (NPPES Type 2) provider.
",
            "key": "provider_type",
            "valueType": {
              "type": "id",
              "value": "type_organization-providers/v2:ProviderType",
            },
          },
          {
            "availability": undefined,
            "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.
",
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "A code designating classification and specialization.",
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The type of license that the provider holds.",
            "key": "license_type",
            "valueType": {
              "type": "id",
              "value": "type_organization-providers/v2:LicenseType",
            },
          },
          {
            "availability": undefined,
            "description": "The addresses associated with this provider.",
            "key": "addresses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_organization-providers/v2:OrganizationProviderAddress",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The employment start date for the provider.",
            "key": "employment_start_date",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "date",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The employment termination date for the provider.",
            "key": "employment_termination_date",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "date",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "A provider's qualifications such as PTAN, Medicaid Provider Id, etc.",
            "key": "qualifications",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_identifiers:IdentifierCreate",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-providers/v3:OrganizationProviderPageV2": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationProviderPageV2",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_organization-providers/v3:OrganizationProviderV2",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-providers/v3:OrganizationProviderUpdateV2": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationProviderUpdateV2",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The NPI of the provider. This must be all digits [0-9] and exactly 10 characters long.",
            "key": "npi",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Whether the provider can be used to render services.",
            "key": "is_rendering",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Whether the provider can be used to bill services.",
            "key": "is_billing",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The first name of the provider, if the provider is an individual.",
            "key": "first_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The last name of the provider, if the provider is an individual.",
            "key": "last_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The name of the provider, if the provider is an organization.",
            "key": "organization_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Whether the provider is an individual (NPPES Type 1) or organization (NPPES Type 2) provider.
",
            "key": "provider_type",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_organization-providers/v2:ProviderType",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.
",
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "A code designating classification and specialization.",
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The type of license that the provider holds.",
            "key": "license_type",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_organization-providers/v2:LicenseType",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The addresses associated with this provider.",
            "key": "addresses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_organization-providers/v2:OrganizationProviderAddress",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The employment start date for the provider.",
            "key": "employment_start_date",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The employment termination date for the provider.",
            "key": "employment_termination_date",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Provider's qualifications (medicare provider number, medicaid provider number, etc.)",
            "key": "qualifications",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_identifiers:UpdatableIdentifier",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-providers/v3:OrganizationProviderV2": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationProviderV2",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The NPI of the provider. This must be all digits [0-9] and exactly 10 characters long.",
            "key": "npi",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Whether the provider can be used to render services.",
            "key": "is_rendering",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Whether the provider can be used to bill services.",
            "key": "is_billing",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The first name of the provider, if the provider is an individual.",
            "key": "first_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The last name of the provider, if the provider is an individual.",
            "key": "last_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The name of the provider, if the provider is an organization.",
            "key": "organization_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Whether the provider is an individual (NPPES Type 1) or organization (NPPES Type 2) provider.
",
            "key": "provider_type",
            "valueType": {
              "type": "id",
              "value": "type_organization-providers/v2:ProviderType",
            },
          },
          {
            "availability": undefined,
            "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.
",
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "A code designating classification and specialization.",
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The type of license that the provider holds.",
            "key": "license_type",
            "valueType": {
              "type": "id",
              "value": "type_organization-providers/v2:LicenseType",
            },
          },
          {
            "availability": undefined,
            "description": "The addresses associated with this provider.",
            "key": "addresses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_organization-providers/v2:OrganizationProviderAddress",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The employment start date for the provider.",
            "key": "employment_start_date",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "date",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The employment termination date for the provider.",
            "key": "employment_termination_date",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "date",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Auto-generated ID set on creation",
            "key": "organization_provider_id",
            "valueType": {
              "type": "id",
              "value": "type_organization-providers/v2:OrganizationProviderId",
            },
          },
          {
            "availability": undefined,
            "description": "Qualification given to a provider (PTAN, Medicaid Provider Id etc.)",
            "key": "qualifications",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_identifiers:Identifier",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-tags:OrganizationTag": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationTag",
      "shape": {
        "extends": [
          "type_organization-tags:OrganizationTagCreate",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "tag_id",
            "valueType": {
              "type": "id",
              "value": "type_organization-tags:OrganizationTagId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-tags:OrganizationTagCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationTagCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "tag_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "tag_type",
            "valueType": {
              "type": "id",
              "value": "type_organization-tags:TagTypeEnum",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-tags:OrganizationTagId": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationTagId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_organization-tags:OrganizationTagsPage": {
      "availability": undefined,
      "description": undefined,
      "name": "OrganizationTagsPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_organization-tags:OrganizationTag",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_organization-tags:TagTypeEnum": {
      "availability": undefined,
      "description": undefined,
      "name": "TagTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "system",
          },
          {
            "description": undefined,
            "value": "user",
          },
        ],
      },
    },
    "type_page-sessions:AppSessionId": {
      "availability": undefined,
      "description": undefined,
      "name": "AppSessionId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_page-sessions:CreatePageSessionRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "CreatePageSessionRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "app_session_id",
            "valueType": {
              "type": "id",
              "value": "type_page-sessions:AppSessionId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "start_reason",
            "valueType": {
              "type": "id",
              "value": "type_page-sessions:PageSessionStartReason",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "end_reason",
            "valueType": {
              "type": "id",
              "value": "type_page-sessions:PageSessionEndReason",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "route",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "start_datetime",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "end_datetime",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "user_agent",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "resolution_width",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "resolution_height",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "zoom_level",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_page-sessions:PageSessionEndReason": {
      "availability": undefined,
      "description": undefined,
      "name": "PageSessionEndReason",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "organization_switch",
          },
          {
            "description": undefined,
            "value": "route_change",
          },
          {
            "description": undefined,
            "value": "timeout",
          },
          {
            "description": undefined,
            "value": "user_close",
          },
          {
            "description": undefined,
            "value": "logout",
          },
        ],
      },
    },
    "type_page-sessions:PageSessionStartReason": {
      "availability": undefined,
      "description": undefined,
      "name": "PageSessionStartReason",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "browser_load",
          },
          {
            "description": undefined,
            "value": "organization_switch",
          },
          {
            "description": undefined,
            "value": "route_change",
          },
        ],
      },
    },
    "type_patient-payment-configs:PagedPatientPaymentConfig": {
      "availability": undefined,
      "description": undefined,
      "name": "PagedPatientPaymentConfig",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_patient-payment-configs:PatientPaymentConfig",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_patient-payment-configs:PatientPaymentConfig": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_patient-payment-configs:PatientPaymentConfigId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "organization_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:OrganizationId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_external_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:PatientExternalId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_collect",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_collect_threshold_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_invoice",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "days_until_due",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_patient-payment-configs:PatientPaymentConfigCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentConfigCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_external_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:PatientExternalId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_collect",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_collect_threshold_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_invoice",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "days_until_due",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_patient-payment-configs:PatientPaymentConfigFilter": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentConfigFilter",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_external_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:PatientExternalId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "limit",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sort",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_patient-payment-configs:PatientPaymentConfigSortField",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sort_direction",
            "valueType": {
              "type": "id",
              "value": "type_commons:SortDirection",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "page_token",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:PageToken",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_patient-payment-configs:PatientPaymentConfigId": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentConfigId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_patient-payment-configs:PatientPaymentConfigPatch": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentConfigPatch",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_external_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:PatientExternalId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_collect",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_collect_threshold_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_invoice",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "days_until_due",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_patient-payment-configs:PatientPaymentConfigSortField": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentConfigSortField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "patient_external_id",
          },
          {
            "description": undefined,
            "value": "auto_collect",
          },
          {
            "description": undefined,
            "value": "auto_collect_threshold_cents",
          },
          {
            "description": undefined,
            "value": "auto_invoice",
          },
          {
            "description": undefined,
            "value": "days_until_due",
          },
        ],
      },
    },
    "type_patient-payments/v2:PatientPayment": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPayment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_payment_id",
            "valueType": {
              "type": "id",
              "value": "type_patient-payments/v2:PatientPaymentId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "organization_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:OrganizationId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "source_internal_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_patient-payments/v2:PatientPaymentSource",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payment_timestamp",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "status",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_patient-payments/v2:PatientPaymentStatus",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payment_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payment_note",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_external_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:PatientExternalId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "encounter_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:EncounterId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:ServiceLineId",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_patient-payments/v2:PatientPaymentId": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_patient-payments/v2:PatientPaymentSortField": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentSortField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "source",
          },
          {
            "description": undefined,
            "value": "amount_cents",
          },
          {
            "description": undefined,
            "value": "payment_timestamp",
          },
          {
            "description": undefined,
            "value": "status",
          },
          {
            "description": undefined,
            "value": "payment_name",
          },
          {
            "description": undefined,
            "value": "payment_note",
          },
        ],
      },
    },
    "type_patient-payments/v2:PatientPaymentSource": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentSource",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "MANUAL_ENTRY",
          },
          {
            "description": undefined,
            "value": "CHARGEBEE_PAYMENTS",
          },
          {
            "description": undefined,
            "value": "CHARGEBEE MANUALLY VOIDED BY CANDID",
          },
          {
            "description": undefined,
            "value": "CHARGEBEE_REFUNDS",
          },
          {
            "description": undefined,
            "value": "SQUARE_REFUNDS",
          },
          {
            "description": undefined,
            "value": "SQUARE_PAYMENTS",
          },
          {
            "description": undefined,
            "value": "STRIPE_CHARGES",
          },
          {
            "description": undefined,
            "value": "STRIPE_REFUNDS",
          },
          {
            "description": undefined,
            "value": "ELATION_PAYMENTS",
          },
        ],
      },
    },
    "type_patient-payments/v2:PatientPaymentStatus": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "PENDING",
          },
          {
            "description": undefined,
            "value": "paid",
          },
          {
            "description": undefined,
            "value": "CANCELED",
          },
          {
            "description": undefined,
            "value": "voided",
          },
          {
            "description": undefined,
            "value": "FAILED",
          },
          {
            "description": undefined,
            "value": "COMPLETED",
          },
          {
            "description": undefined,
            "value": "succeeded",
          },
          {
            "description": undefined,
            "value": "pending",
          },
          {
            "description": undefined,
            "value": "failed",
          },
          {
            "description": undefined,
            "value": "requires_action",
          },
          {
            "description": undefined,
            "value": "canceled",
          },
        ],
      },
    },
    "type_patient-payments/v2:PatientPaymentsPage": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentsPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_patient-payments/v2:PatientPayment",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_patient-payments/v3:PatientPayment": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPayment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_payment_id",
            "valueType": {
              "type": "id",
              "value": "type_patient-payments/v3:PatientPaymentId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "organization_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:OrganizationId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "source_internal_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_patient-payments/v3:PatientPaymentSource",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payment_timestamp",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "status",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_patient-payments/v3:PatientPaymentStatus",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payment_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payment_note",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_external_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:PatientExternalId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "encounter_external_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:EncounterExternalId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_id",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:ServiceLineId",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_patient-payments/v3:PatientPaymentId": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_patient-payments/v3:PatientPaymentSortField": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentSortField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "source",
          },
          {
            "description": undefined,
            "value": "amount_cents",
          },
          {
            "description": undefined,
            "value": "payment_timestamp",
          },
          {
            "description": undefined,
            "value": "status",
          },
          {
            "description": undefined,
            "value": "payment_name",
          },
          {
            "description": undefined,
            "value": "payment_note",
          },
        ],
      },
    },
    "type_patient-payments/v3:PatientPaymentSource": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentSource",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "MANUAL_ENTRY",
          },
          {
            "description": undefined,
            "value": "CHARGEBEE_PAYMENTS",
          },
          {
            "description": undefined,
            "value": "CHARGEBEE MANUALLY VOIDED BY CANDID",
          },
          {
            "description": undefined,
            "value": "CHARGEBEE_REFUNDS",
          },
          {
            "description": undefined,
            "value": "SQUARE_REFUNDS",
          },
          {
            "description": undefined,
            "value": "SQUARE_PAYMENTS",
          },
          {
            "description": undefined,
            "value": "STRIPE_CHARGES",
          },
          {
            "description": undefined,
            "value": "STRIPE_REFUNDS",
          },
          {
            "description": undefined,
            "value": "ELATION_PAYMENTS",
          },
        ],
      },
    },
    "type_patient-payments/v3:PatientPaymentStatus": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "PENDING",
          },
          {
            "description": undefined,
            "value": "paid",
          },
          {
            "description": undefined,
            "value": "CANCELED",
          },
          {
            "description": undefined,
            "value": "voided",
          },
          {
            "description": undefined,
            "value": "FAILED",
          },
          {
            "description": undefined,
            "value": "COMPLETED",
          },
          {
            "description": undefined,
            "value": "succeeded",
          },
          {
            "description": undefined,
            "value": "pending",
          },
          {
            "description": undefined,
            "value": "failed",
          },
          {
            "description": undefined,
            "value": "requires_action",
          },
          {
            "description": undefined,
            "value": "canceled",
          },
        ],
      },
    },
    "type_patient-payments/v3:PatientPaymentsPage": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentsPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_patient-payments/v3:PatientPayment",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_patients:BaseErrorMessage": {
      "availability": undefined,
      "description": undefined,
      "name": "BaseErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "message",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_patients:InvalidBase64EncodingErrorMessage": {
      "availability": undefined,
      "description": undefined,
      "name": "InvalidBase64EncodingErrorMessage",
      "shape": {
        "extends": [
          "type_patients:BaseErrorMessage",
        ],
        "properties": [],
        "type": "object",
      },
    },
    "type_patients:MissingPrimarySubscriberErrorMessage": {
      "availability": undefined,
      "description": undefined,
      "name": "MissingPrimarySubscriberErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "message",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_patients:PatientRollup": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientRollup",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_payment_total_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_payment_total_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_balance_total_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_balance_excluding_open_invoice_total_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "manual_adjustments_total_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient",
            "valueType": {
              "type": "id",
              "value": "type_individual:Patient",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "subscriber_primary",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_individual:Subscriber",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "subscriber_secondary",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_individual:Subscriber",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "ordered_encounter_ids",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:EncounterId",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "ordered_adjustment_ids",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:AdjustmentId",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "ordered_patient_payment_ids",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_patient-payments/v2:PatientPaymentId",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_patients:PatientRollupSummariesPage": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientRollupSummariesPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_patients:PatientRollupSummary",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_patients:PatientRollupSummary": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientRollupSummary",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient",
            "valueType": {
              "type": "id",
              "value": "type_commons:PatientExternalId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "first_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "last_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "date_of_birth",
            "valueType": {
              "type": "id",
              "value": "type_commons:Date",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "most_recent_date_of_service",
            "valueType": {
              "type": "id",
              "value": "type_commons:Date",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "most_recent_encounter_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:EncounterId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "encounter_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_payment_total_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_payment_total_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_balance_total_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_balance_excluding_open_invoice_total_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "has_secondary_insurance",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "days_since_last_invoice",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "pending_invoice_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "manual_adjustments_total_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_patients:PatientRollupSummarySortOptions": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientRollupSummarySortOptions",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "most_recent_date_of_service_asc",
          },
          {
            "description": undefined,
            "value": "most_recent_date_of_service_desc",
          },
          {
            "description": undefined,
            "value": "last_name_asc",
          },
          {
            "description": undefined,
            "value": "last_name_desc",
          },
          {
            "description": undefined,
            "value": "insurance_payment_total_cents_asc",
          },
          {
            "description": undefined,
            "value": "insurance_payment_total_cents_desc",
          },
          {
            "description": undefined,
            "value": "patient_payment_total_cents_asc",
          },
          {
            "description": undefined,
            "value": "patient_payment_total_cents_desc",
          },
          {
            "description": undefined,
            "value": "patient_balance_total_cents_asc",
          },
          {
            "description": undefined,
            "value": "patient_balance_total_cents_desc",
          },
          {
            "description": undefined,
            "value": "patient_balance_excluding_open_invoice_total_cents_asc",
          },
          {
            "description": undefined,
            "value": "patient_balance_excluding_open_invoice_total_cents_desc",
          },
          {
            "description": undefined,
            "value": "days_since_last_invoice_asc",
          },
          {
            "description": undefined,
            "value": "days_since_last_invoice_desc",
          },
          {
            "description": undefined,
            "value": "pending_invoice_count_asc",
          },
          {
            "description": undefined,
            "value": "pending_invoice_count_desc",
          },
          {
            "description": undefined,
            "value": "manual_adjustments_total_cents_asc",
          },
          {
            "description": undefined,
            "value": "manual_adjustments_total_cents_desc",
          },
        ],
      },
    },
    "type_payers:Payer": {
      "availability": undefined,
      "description": undefined,
      "name": "Payer",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Auto-generated ID set on creation",
            "key": "payer_uuid",
            "valueType": {
              "type": "id",
              "value": "type_payers:PayerUuid",
            },
          },
          {
            "availability": undefined,
            "description": "The primary national payer ID of the payer",
            "key": "payer_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The primary display name of the payer",
            "key": "payer_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payers:PayerId": {
      "availability": undefined,
      "description": undefined,
      "name": "PayerId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_payers:PayerName": {
      "availability": undefined,
      "description": undefined,
      "name": "PayerName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_payers:PayerPage": {
      "availability": undefined,
      "description": undefined,
      "name": "PayerPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_payers:Payer",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payers:PayerUuid": {
      "availability": undefined,
      "description": undefined,
      "name": "PayerUuid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_payment-account-configs:BillingProviderNpi": {
      "availability": undefined,
      "description": undefined,
      "name": "BillingProviderNpi",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_payment-account-configs:CedarPaymentAccountConfig": {
      "availability": undefined,
      "description": undefined,
      "name": "CedarPaymentAccountConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_payment-account-configs:PaymentAccountConfigId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "organization_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:OrganizationId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_payment-account-configs:BillingProviderNpi",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "account_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "enabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payment-account-configs:ChargebeePaymentAccountConfig": {
      "availability": undefined,
      "description": undefined,
      "name": "ChargebeePaymentAccountConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_payment-account-configs:PaymentAccountConfigId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "organization_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:OrganizationId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_payment-account-configs:BillingProviderNpi",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "account_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "enabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "site",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payment-account-configs:ChargebeePaymentAccountConfigCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "ChargebeePaymentAccountConfigCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_payment-account-configs:BillingProviderNpi",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "account_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "api_token",
            "valueType": {
              "type": "id",
              "value": "type_payment-account-configs:PaymentAccountApiToken",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "enabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "site",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payment-account-configs:ChargebeePaymentAccountConfigPatch": {
      "availability": undefined,
      "description": undefined,
      "name": "ChargebeePaymentAccountConfigPatch",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_payment-account-configs:BillingProviderNpi",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "account_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "api_token",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_payment-account-configs:PaymentAccountApiToken",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "enabled",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "site",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payment-account-configs:PaymentAccountApiToken": {
      "availability": undefined,
      "description": undefined,
      "name": "PaymentAccountApiToken",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_payment-account-configs:PaymentAccountConfig": {
      "availability": undefined,
      "description": undefined,
      "name": "PaymentAccountConfig",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_payment-account-configs:ChargebeePaymentAccountConfig",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "chargebee",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_payment-account-configs:SquarePaymentAccountConfig",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "square",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_payment-account-configs:StripePaymentAccountConfig",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "stripe",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_payment-account-configs:CedarPaymentAccountConfig",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "cedar",
          },
        ],
      },
    },
    "type_payment-account-configs:PaymentAccountConfigCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "PaymentAccountConfigCreate",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_payment-account-configs:ChargebeePaymentAccountConfigCreate",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "chargebee",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_payment-account-configs:SquarePaymentAccountConfigCreate",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "square",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_payment-account-configs:StripePaymentAccountConfigCreate",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "stripe",
          },
        ],
      },
    },
    "type_payment-account-configs:PaymentAccountConfigId": {
      "availability": undefined,
      "description": undefined,
      "name": "PaymentAccountConfigId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_payment-account-configs:PaymentAccountConfigNameAlreadyExistsErrorContent": {
      "availability": undefined,
      "description": undefined,
      "name": "PaymentAccountConfigNameAlreadyExistsErrorContent",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payment-account-configs:PaymentAccountConfigPatch": {
      "availability": undefined,
      "description": undefined,
      "name": "PaymentAccountConfigPatch",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_payment-account-configs:ChargebeePaymentAccountConfigPatch",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "chargebee",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_payment-account-configs:SquarePaymentAccountConfigPatch",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "square",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_payment-account-configs:StripePaymentAccountConfigPatch",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "stripe",
          },
        ],
      },
    },
    "type_payment-account-configs:PaymentAccountType": {
      "availability": undefined,
      "description": undefined,
      "name": "PaymentAccountType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "Chargebee",
          },
          {
            "description": undefined,
            "value": "Square",
          },
          {
            "description": undefined,
            "value": "Stripe",
          },
          {
            "description": undefined,
            "value": "Cedar",
          },
        ],
      },
    },
    "type_payment-account-configs:SquarePaymentAccountConfig": {
      "availability": undefined,
      "description": undefined,
      "name": "SquarePaymentAccountConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_payment-account-configs:PaymentAccountConfigId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "organization_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:OrganizationId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_payment-account-configs:BillingProviderNpi",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "account_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "enabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "locations",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payment-account-configs:SquarePaymentAccountConfigCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "SquarePaymentAccountConfigCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_payment-account-configs:BillingProviderNpi",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "account_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "api_token",
            "valueType": {
              "type": "id",
              "value": "type_payment-account-configs:PaymentAccountApiToken",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "enabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "locations",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payment-account-configs:SquarePaymentAccountConfigPatch": {
      "availability": undefined,
      "description": undefined,
      "name": "SquarePaymentAccountConfigPatch",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_payment-account-configs:BillingProviderNpi",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "account_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "api_token",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_payment-account-configs:PaymentAccountApiToken",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "enabled",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "locations",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payment-account-configs:StripePaymentAccountConfig": {
      "availability": undefined,
      "description": undefined,
      "name": "StripePaymentAccountConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_payment-account-configs:PaymentAccountConfigId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "organization_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:OrganizationId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_payment-account-configs:BillingProviderNpi",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "account_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "enabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "connect_account",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "subscribe_to_connected_sub_account_events",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "encounter_external_id_key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_external_id_key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_collect",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_collect_threshold_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_invoice",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "days_until_due",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payment-account-configs:StripePaymentAccountConfigCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "StripePaymentAccountConfigCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_payment-account-configs:BillingProviderNpi",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "account_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "api_token",
            "valueType": {
              "type": "id",
              "value": "type_payment-account-configs:PaymentAccountApiToken",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "enabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "connect_account",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "subscribe_to_connected_sub_account_events",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "encounter_external_id_key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_external_id_key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_collect",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_collect_threshold_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_invoice",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "days_until_due",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payment-account-configs:StripePaymentAccountConfigPatch": {
      "availability": undefined,
      "description": undefined,
      "name": "StripePaymentAccountConfigPatch",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_payment-account-configs:BillingProviderNpi",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "account_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "api_token",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_payment-account-configs:PaymentAccountApiToken",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "enabled",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "connect_account",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "subscribe_to_connected_sub_account_events",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "encounter_external_id_key",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_external_id_key",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_collect",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_collect_threshold_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "auto_invoice",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "days_until_due",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payment-account-configs:VerifyCanInvoiceRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "VerifyCanInvoiceRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_ids",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:ClaimId",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_external_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:PatientExternalId",
            },
          },
          {
            "availability": undefined,
            "description": "whether to check the existence of customer email. Default=True",
            "key": "check_email_exists",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payment-account-configs:VerifyCanInvoiceResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "VerifyCanInvoiceResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_payment-account-configs:VerifyCanInvoiceResponseItem",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payment-account-configs:VerifyCanInvoiceResponseItem": {
      "availability": undefined,
      "description": undefined,
      "name": "VerifyCanInvoiceResponseItem",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_external_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:PatientExternalId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "result",
            "valueType": {
              "type": "id",
              "value": "type_payment-account-configs:VerifyCanInvoiceResultType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "customer_url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_payment-account-configs:VerifyCanInvoiceResultType": {
      "availability": undefined,
      "description": undefined,
      "name": "VerifyCanInvoiceResultType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "Success",
          },
          {
            "description": undefined,
            "value": "PaymentAccountConfigMissing",
          },
          {
            "description": undefined,
            "value": "CustomerNotFound",
          },
          {
            "description": undefined,
            "value": "CustomerEmailNotFound",
          },
        ],
      },
    },
    "type_payment-account-configs:VerifyCustomerExistsResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "VerifyCustomerExistsResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "result",
            "valueType": {
              "type": "id",
              "value": "type_payment-account-configs:VerifyCanInvoiceResultType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "customer_url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_permissions:PermissionsEnum": {
      "availability": undefined,
      "description": undefined,
      "name": "PermissionsEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "read:claims",
          },
          {
            "description": undefined,
            "value": "create:claims",
          },
          {
            "description": undefined,
            "value": "update:claims",
          },
          {
            "description": undefined,
            "value": "update:claim_status_ar_workflows",
          },
          {
            "description": undefined,
            "value": "write:claims_status_finalized",
          },
          {
            "description": undefined,
            "value": "delete:claims",
          },
          {
            "description": undefined,
            "value": "read:claim_submissions",
          },
          {
            "description": undefined,
            "value": "read:encounters",
          },
          {
            "description": undefined,
            "value": "create:encounters",
          },
          {
            "description": undefined,
            "value": "update:encounters",
          },
          {
            "description": undefined,
            "value": "delete:encounters",
          },
          {
            "description": undefined,
            "value": "create:eligibility",
          },
          {
            "description": undefined,
            "value": "create:users",
          },
          {
            "description": undefined,
            "value": "edit:users",
          },
          {
            "description": undefined,
            "value": "delete:users",
          },
          {
            "description": undefined,
            "value": "read:users",
          },
          {
            "description": undefined,
            "value": "read:payers",
          },
          {
            "description": undefined,
            "value": "create:tasks",
          },
          {
            "description": undefined,
            "value": "read:tasks",
          },
          {
            "description": undefined,
            "value": "update:tasks",
          },
          {
            "description": undefined,
            "value": "create:task_notes",
          },
          {
            "description": undefined,
            "value": "admin:task_notes",
          },
          {
            "description": undefined,
            "value": "read:analytics",
          },
          {
            "description": undefined,
            "value": "read:internal_analytics",
          },
          {
            "description": undefined,
            "value": "read:organization_analytics",
          },
          {
            "description": undefined,
            "value": "read:exports",
          },
          {
            "description": undefined,
            "value": "write:system_tags",
          },
          {
            "description": undefined,
            "value": "read:system_tags",
          },
          {
            "description": undefined,
            "value": "create:tags",
          },
          {
            "description": undefined,
            "value": "delete:tags",
          },
          {
            "description": undefined,
            "value": "read:tags",
          },
          {
            "description": undefined,
            "value": "read:managed_emr_configs",
          },
          {
            "description": undefined,
            "value": "write:managed_emr_configs",
          },
          {
            "description": undefined,
            "value": "read:fee_schedules",
          },
          {
            "description": undefined,
            "value": "write:fee_schedules",
          },
          {
            "description": undefined,
            "value": "docs:simple_eligibility",
          },
          {
            "description": undefined,
            "value": "docs:internal",
          },
          {
            "description": undefined,
            "value": "create:billing_notes",
          },
          {
            "description": undefined,
            "value": "delete:billing_notes",
          },
          {
            "description": undefined,
            "value": "create:comments",
          },
          {
            "description": undefined,
            "value": "read:comments",
          },
          {
            "description": undefined,
            "value": "update:comments",
          },
          {
            "description": undefined,
            "value": "delete:comments",
          },
          {
            "description": undefined,
            "value": "create:diagnoses",
          },
          {
            "description": undefined,
            "value": "update:diagnoses",
          },
          {
            "description": undefined,
            "value": "delete:diagnoses",
          },
          {
            "description": undefined,
            "value": "update:encounter_eligibility",
          },
          {
            "description": undefined,
            "value": "read:service_line_ledgers",
          },
          {
            "description": undefined,
            "value": "create:service_lines",
          },
          {
            "description": undefined,
            "value": "update:service_lines",
          },
          {
            "description": undefined,
            "value": "delete:service_lines",
          },
          {
            "description": undefined,
            "value": "create:rule_engine_override",
          },
          {
            "description": undefined,
            "value": "create:process_claim",
          },
          {
            "description": undefined,
            "value": "create:claim_resubmission",
          },
          {
            "description": undefined,
            "value": "create:claim_void",
          },
          {
            "description": undefined,
            "value": "create:contracts",
          },
          {
            "description": undefined,
            "value": "read:contracts",
          },
          {
            "description": undefined,
            "value": "update:contracts",
          },
          {
            "description": undefined,
            "value": "delete:contracts",
          },
          {
            "description": undefined,
            "value": "read:encounters_timeline",
          },
          {
            "description": undefined,
            "value": "update:service_facility",
          },
          {
            "description": undefined,
            "value": "create:eras",
          },
          {
            "description": undefined,
            "value": "update:eras",
          },
          {
            "description": undefined,
            "value": "delete:eras",
          },
          {
            "description": undefined,
            "value": "create:organization",
          },
          {
            "description": undefined,
            "value": "edit:organization",
          },
          {
            "description": undefined,
            "value": "create:organization_providers",
          },
          {
            "description": undefined,
            "value": "read:organization_providers",
          },
          {
            "description": undefined,
            "value": "update:organization_providers",
          },
          {
            "description": undefined,
            "value": "delete:organization_providers",
          },
          {
            "description": undefined,
            "value": "read:provider_credentialing_spans",
          },
          {
            "description": undefined,
            "value": "create:provider_credentialing_spans",
          },
          {
            "description": undefined,
            "value": "update:provider_credentialing_spans",
          },
          {
            "description": undefined,
            "value": "delete:provider_credentialing_spans",
          },
          {
            "description": undefined,
            "value": "create:patient_payments",
          },
          {
            "description": undefined,
            "value": "read:patient_payments",
          },
          {
            "description": undefined,
            "value": "update:patient_payments",
          },
          {
            "description": undefined,
            "value": "delete:patient_payments",
          },
          {
            "description": undefined,
            "value": "create:organization_service_facilities",
          },
          {
            "description": undefined,
            "value": "read:organization_service_facilities",
          },
          {
            "description": undefined,
            "value": "update:organization_service_facilities",
          },
          {
            "description": undefined,
            "value": "delete:organization_service_facilities",
          },
          {
            "description": undefined,
            "value": "create:resource_references",
          },
          {
            "description": undefined,
            "value": "read:resource_references",
          },
          {
            "description": undefined,
            "value": "update:resource_references",
          },
          {
            "description": undefined,
            "value": "delete:resource_references",
          },
          {
            "description": undefined,
            "value": "read:submission_configuration",
          },
          {
            "description": undefined,
            "value": "update:submission_configuration",
          },
          {
            "description": undefined,
            "value": "create:enrollments",
          },
          {
            "description": undefined,
            "value": "update:enrollments",
          },
          {
            "description": undefined,
            "value": "read:pipeline_configurations",
          },
          {
            "description": undefined,
            "value": "import:change_enrollments",
          },
          {
            "description": undefined,
            "value": "read:enrollments",
          },
          {
            "description": undefined,
            "value": "delete:enrollments",
          },
          {
            "description": undefined,
            "value": "read:role_permissions",
          },
          {
            "description": undefined,
            "value": "read:chargemasters",
          },
          {
            "description": undefined,
            "value": "write:chargemasters",
          },
          {
            "description": undefined,
            "value": "read:patients",
          },
          {
            "description": undefined,
            "value": "read:adjustments",
          },
          {
            "description": undefined,
            "value": "write:adjustments",
          },
          {
            "description": undefined,
            "value": "write:configurable_rules",
          },
          {
            "description": undefined,
            "value": "read:payment_account_configs",
          },
          {
            "description": undefined,
            "value": "write:payment_account_configs",
          },
          {
            "description": undefined,
            "value": "read:patient_payment_configs",
          },
          {
            "description": undefined,
            "value": "write:patient_payment_configs",
          },
          {
            "description": undefined,
            "value": "read:invoice",
          },
          {
            "description": undefined,
            "value": "write:invoice",
          },
          {
            "description": undefined,
            "value": "read:organization_payers",
          },
          {
            "description": undefined,
            "value": "write:organization_payers",
          },
          {
            "description": undefined,
            "value": "read:payment_integration_configuration",
          },
          {
            "description": undefined,
            "value": "compute:expected_network_status",
          },
          {
            "description": undefined,
            "value": "write:secondary_submission",
          },
          {
            "description": undefined,
            "value": "read:remits",
          },
          {
            "description": undefined,
            "value": "write:remits",
          },
          {
            "description": undefined,
            "value": "read:remits_app",
          },
          {
            "description": undefined,
            "value": "read:work_queues",
          },
          {
            "description": undefined,
            "value": "global:read_all_users",
          },
          {
            "description": undefined,
            "value": "no_access_permission",
          },
          {
            "description": undefined,
            "value": "product:incubating",
          },
          {
            "description": undefined,
            "value": "execute:bulk_actions",
          },
        ],
      },
    },
    "type_pipeline-commons:ConfigurableRuleId": {
      "availability": undefined,
      "description": undefined,
      "name": "ConfigurableRuleId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_pipeline-commons:PhaseId": {
      "availability": undefined,
      "description": undefined,
      "name": "PhaseId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_pipeline-commons:PipelineId": {
      "availability": undefined,
      "description": undefined,
      "name": "PipelineId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_pipeline-commons:RuleId": {
      "availability": undefined,
      "description": undefined,
      "name": "RuleId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_pipeline-commons:StepId": {
      "availability": undefined,
      "description": undefined,
      "name": "StepId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_pipeline-configuration:ConfigurableRuleSummary": {
      "availability": undefined,
      "description": undefined,
      "name": "ConfigurableRuleSummary",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_pipeline-commons:ConfigurableRuleId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "statement",
            "valueType": {
              "type": "id",
              "value": "type_configurable-rules-types:Statement",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "is_enabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_pipeline-configuration:OrdinaryRule": {
      "availability": undefined,
      "description": undefined,
      "name": "OrdinaryRule",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_pipeline-commons:RuleId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_pipeline-configuration:Phase": {
      "availability": undefined,
      "description": undefined,
      "name": "Phase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_pipeline-commons:PhaseId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "steps",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_pipeline-configuration:Step",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_pipeline-configuration:Pipeline": {
      "availability": undefined,
      "description": undefined,
      "name": "Pipeline",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_pipeline-commons:PipelineId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "phases",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_pipeline-configuration:Phase",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_pipeline-configuration:PipelineConfiguration": {
      "availability": undefined,
      "description": undefined,
      "name": "PipelineConfiguration",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "pipelines",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_pipeline-configuration:Pipeline",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_pipeline-configuration:Rule": {
      "availability": undefined,
      "description": undefined,
      "name": "Rule",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_pipeline-configuration:OrdinaryRule",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "ordinary_rule",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_pipeline-configuration:ConfigurableRuleSummary",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "configurable_rule_summary",
          },
        ],
      },
    },
    "type_pipeline-configuration:Step": {
      "availability": undefined,
      "description": undefined,
      "name": "Step",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_pipeline-commons:StepId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rules",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_pipeline-configuration:Rule",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": "Whether this step supports configurable rules. If True, then the configurable rules API should support computing configuration for this Step's Scope.",
            "key": "supports_configurable_rules",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_remits/v1:Content": {
      "availability": undefined,
      "description": undefined,
      "name": "Content",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_remits/v1:ContentString",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "content_string",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "availability": undefined,
                  "description": undefined,
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:ContentDownloadUrl",
                  },
                },
              ],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "content_download_url",
          },
        ],
      },
    },
    "type_remits/v1:ContentContainer": {
      "availability": undefined,
      "description": undefined,
      "name": "ContentContainer",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_section",
            "valueType": {
              "type": "id",
              "value": "type_remits/v1:ContentSection",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_sections",
            "valueType": {
              "keyType": {
                "type": "id",
                "value": "type_commons:ServiceLineId",
              },
              "type": "map",
              "valueType": {
                "type": "id",
                "value": "type_remits/v1:ContentSection",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "content",
            "valueType": {
              "type": "id",
              "value": "type_remits/v1:Content",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_remits/v1:ContentSection": {
      "availability": undefined,
      "description": undefined,
      "name": "ContentSection",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "begin_line_number",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "end_line_number",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_remits/v1:ContentString": {
      "availability": undefined,
      "description": undefined,
      "name": "ContentString",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_remits/v1:GetMultiRemitsPagedResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "GetMultiRemitsPagedResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "page",
            "valueType": {
              "type": "id",
              "value": "type_remits/v1:RemitPage",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_remits/v1:GetMultiRemitsPagedSortField": {
      "availability": undefined,
      "description": undefined,
      "name": "GetMultiRemitsPagedSortField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "check_amount_cents",
          },
          {
            "description": undefined,
            "value": "check_date",
          },
        ],
      },
    },
    "type_remits/v1:PostRemitResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "PostRemitResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "remit",
            "valueType": {
              "type": "id",
              "value": "type_remits/v1:Remit",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_remits/v1:Remit": {
      "availability": undefined,
      "description": undefined,
      "name": "Remit",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_remits/v1:RemitId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_identifier",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "adjudication_date",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Date",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "check_image_download_url",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:ContentDownloadUrlWithExpiration",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "content_edi",
            "valueType": {
              "type": "id",
              "value": "type_remits/v1:ContentContainer",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_remits/v1:RemitSource",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "posted_datetime",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "check_date",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "date",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "check_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "check_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_status_code",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_x12/v1:ClaimStatusCodeEnum",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The number of claims the remit contains information for.",
            "key": "included_claims_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_remits/v1:RemitId": {
      "availability": undefined,
      "description": undefined,
      "name": "RemitId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_remits/v1:RemitPage": {
      "availability": undefined,
      "description": undefined,
      "name": "RemitPage",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_remits/v1:Remit",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_remits/v1:RemitPostStatus": {
      "availability": undefined,
      "description": undefined,
      "name": "RemitPostStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "A remit that has been accepted and associated with Candid encounter(s).",
            "value": "posted",
          },
          {
            "description": "A remit that has not yet been accepted and associated with Candid encounter(s).",
            "value": "unposted",
          },
        ],
      },
    },
    "type_remits/v1:RemitSortField": {
      "availability": undefined,
      "description": undefined,
      "name": "RemitSortField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "payer_name",
          },
          {
            "description": undefined,
            "value": "payer_identifier",
          },
          {
            "description": undefined,
            "value": "adjudication_date",
          },
        ],
      },
    },
    "type_remits/v1:RemitSource": {
      "availability": undefined,
      "description": undefined,
      "name": "RemitSource",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "clearinghouse",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "lockbox",
          },
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "manual_upload",
          },
        ],
      },
    },
    "type_rules_engine_types:RaResult": {
      "availability": undefined,
      "description": undefined,
      "name": "RaResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "ra_run_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:RaRunId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "summary",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_rules_engine_types:RulesEngineCheckFailure": {
      "availability": undefined,
      "description": undefined,
      "name": "RulesEngineCheckFailure",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "reason",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_rules_engine_types:RulesEngineCheckResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "RulesEngineCheckResponse",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "success",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_rules_engine_types:RulesEngineCheckFailure",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "failure",
          },
        ],
      },
    },
    "type_rules_engine_types:RulesEnginePipelineType": {
      "availability": undefined,
      "description": undefined,
      "name": "RulesEnginePipelineType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "CLAIM_SUBMISSION",
          },
          {
            "description": undefined,
            "value": "SELF_PAY",
          },
          {
            "description": undefined,
            "value": "OVERRIDE_CLAIM_SUBMISSION",
          },
          {
            "description": undefined,
            "value": "TIMELY_FILING",
          },
          {
            "description": undefined,
            "value": "INSURANCE_RESUBMISSION",
          },
          {
            "description": undefined,
            "value": "REJECTIONS",
          },
          {
            "description": undefined,
            "value": "SECONDARY_SUBMISSION",
          },
        ],
      },
    },
    "type_rules_engine_types:RulesEngineProcessFailure": {
      "availability": undefined,
      "description": undefined,
      "name": "RulesEngineProcessFailure",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "reason",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_rules_engine_types:RulesEngineProcessResult": {
      "availability": undefined,
      "description": undefined,
      "name": "RulesEngineProcessResult",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_rules_engine_types:RulesEngineProcessFailure",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "failure",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_rules_engine_types:RulesEngineProcessSuccessAsync",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "success_async",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_rules_engine_types:RulesEngineProcessSuccessSync",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "success_sync",
          },
        ],
      },
    },
    "type_rules_engine_types:RulesEngineProcessSuccess": {
      "availability": undefined,
      "description": undefined,
      "name": "RulesEngineProcessSuccess",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "pipeline_type",
            "valueType": {
              "type": "id",
              "value": "type_rules_engine_types:RulesEnginePipelineType",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_rules_engine_types:RulesEngineProcessSuccessAsync": {
      "availability": undefined,
      "description": undefined,
      "name": "RulesEngineProcessSuccessAsync",
      "shape": {
        "extends": [
          "type_rules_engine_types:RulesEngineProcessSuccess",
        ],
        "properties": [],
        "type": "object",
      },
    },
    "type_rules_engine_types:RulesEngineProcessSuccessSync": {
      "availability": undefined,
      "description": undefined,
      "name": "RulesEngineProcessSuccessSync",
      "shape": {
        "extends": [
          "type_rules_engine_types:RulesEngineProcessSuccess",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "ra_result",
            "valueType": {
              "type": "id",
              "value": "type_rules_engine_types:RaResult",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_secondary-submission/v1:OtherPayerAdjudicationDetails": {
      "availability": undefined,
      "description": undefined,
      "name": "OtherPayerAdjudicationDetails",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_adjustments",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_secondary-submission/v1:ServiceAdjustment",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "paid_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_responsibility_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "check_date",
            "valueType": {
              "type": "id",
              "value": "type_commons:Date",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_secondary-submission/v1:SecondarySubmissionCheckResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "SecondarySubmissionCheckResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "response",
            "valueType": {
              "type": "id",
              "value": "type_rules_engine_types:RulesEngineCheckResponse",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_secondary-submission/v1:SecondarySubmissionCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "SecondarySubmissionCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "other_payer_adjudication_details",
            "valueType": {
              "type": "id",
              "value": "type_secondary-submission/v1:OtherPayerAdjudicationDetails",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_secondary-submission/v1:SecondarySubmissionResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "SecondarySubmissionResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "result",
            "valueType": {
              "type": "id",
              "value": "type_rules_engine_types:RulesEngineProcessResult",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_secondary-submission/v1:ServiceAdjustment": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceAdjustment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "adjustment_group_code",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimAdjustmentGroupCodes",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "adjustment_reason_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "adjustment_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-facility:EncounterServiceFacility": {
      "availability": undefined,
      "description": undefined,
      "name": "EncounterServiceFacility",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_facility_id",
            "valueType": {
              "type": "id",
              "value": "type_service-facility:ServiceFacilityId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "organization_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "address",
            "valueType": {
              "type": "id",
              "value": "type_commons:StreetAddressLongZip",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-facility:EncounterServiceFacilityBase": {
      "availability": undefined,
      "description": "Encounter Service facility is typically the location a medical service was rendered, such as a provider office or hospital.
For telehealth, service facility can represent the provider's location when the service was delivered (e.g., home),
or the location where an in-person visit would have taken place, whichever is easier to identify.
If the provider is in-network, service facility may be defined in payer contracts.
Box 32 on the CMS-1500 claim form.
Note that for an in-network claim to be successfully adjudicated, the service facility address listed on claims
must match what was provided to the payer during the credentialing process.
",
      "name": "EncounterServiceFacilityBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "organization_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "address",
            "valueType": {
              "type": "id",
              "value": "type_commons:StreetAddressLongZip",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-facility:ServiceFacilityId": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceFacilityId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_service-line-ledgers/v1:CarcPopoverDetails": {
      "availability": undefined,
      "description": undefined,
      "name": "CarcPopoverDetails",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "carc",
            "valueType": {
              "type": "id",
              "value": "type_x12/v1:Carc",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "group_code",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimAdjustmentGroupCodes",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-line-ledgers/v1:ChargeRow": {
      "availability": undefined,
      "description": undefined,
      "name": "ChargeRow",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "billed_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_submission_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimSubmissionId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-line-ledgers/v1:Check": {
      "availability": undefined,
      "description": undefined,
      "name": "Check",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "check_number",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "check_posted_date",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "date",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-line-ledgers/v1:EraPayer": {
      "availability": undefined,
      "description": "The raw payer information from the ERA. This is not guaranteed to match the payer in our system.",
      "name": "EraPayer",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "era_payer_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The national payer ID of the payer, if present in the payer's additional qualifications section ERA under code '2U'.
",
            "key": "era_payer_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-line-ledgers/v1:EventLocator": {
      "availability": undefined,
      "description": undefined,
      "name": "EventLocator",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_service-line-ledgers/v1:GetLedgerTablesResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "GetLedgerTablesResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_tables",
            "valueType": {
              "keyType": {
                "type": "id",
                "value": "type_commons:ServiceLineId",
              },
              "type": "map",
              "valueType": {
                "type": "id",
                "value": "type_service-line-ledgers/v1:ServiceLineLedgerTable",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-line-ledgers/v1:LedgerRowId": {
      "availability": undefined,
      "description": undefined,
      "name": "LedgerRowId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid",
          },
        },
      },
    },
    "type_service-line-ledgers/v1:LedgerTableRow": {
      "availability": undefined,
      "description": undefined,
      "name": "LedgerTableRow",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "event_date",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "event_locator",
            "valueType": {
              "type": "id",
              "value": "type_service-line-ledgers/v1:EventLocator",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "details",
            "valueType": {
              "type": "id",
              "value": "type_service-line-ledgers/v1:LedgerTableRowDetails",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-line-ledgers/v1:LedgerTableRowDetails": {
      "availability": undefined,
      "description": undefined,
      "name": "LedgerTableRowDetails",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_service-line-ledgers/v1:ChargeRow",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "charge_row",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_service-line-ledgers/v1:RemitRow",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "remit_row",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_service-line-ledgers/v1:PatientPaymentRow",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "patient_payment_row",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_service-line-ledgers/v1:WriteOffRow",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "write_off_row",
          },
        ],
      },
    },
    "type_service-line-ledgers/v1:PatientPaymentRow": {
      "availability": undefined,
      "description": undefined,
      "name": "PatientPaymentRow",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_paid_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_payment_note",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_payment_datetime",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_payment_source",
            "valueType": {
              "type": "id",
              "value": "type_patient-payments/v3:PatientPaymentSource",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_payment_id",
            "valueType": {
              "type": "id",
              "value": "type_patient-payments/v3:PatientPaymentId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_payment",
            "valueType": {
              "type": "id",
              "value": "type_patient-payments/v3:PatientPayment",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-line-ledgers/v1:RarcPopoverDetails": {
      "availability": undefined,
      "description": undefined,
      "name": "RarcPopoverDetails",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "rarc",
            "valueType": {
              "type": "id",
              "value": "type_x12/v1:Rarc",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-line-ledgers/v1:RemitRow": {
      "availability": undefined,
      "description": undefined,
      "name": "RemitRow",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_information",
            "valueType": {
              "type": "id",
              "value": "type_service-line-ledgers/v1:RemitRowPayerInformation",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "financial_information",
            "valueType": {
              "type": "id",
              "value": "type_service-line-ledgers/v1:RemitRowFinancialInformation",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "denial_reason",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "carcs",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-line-ledgers/v1:CarcPopoverDetails",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rarcs",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-line-ledgers/v1:RarcPopoverDetails",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "check",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-line-ledgers/v1:Check",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-line-ledgers/v1:RemitRowFinancialInformation": {
      "availability": undefined,
      "description": undefined,
      "name": "RemitRowFinancialInformation",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "billed_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "allowed_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_adjusted_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_paid_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "copay_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "coinsurance_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "deductible_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "other_patient_responsibility_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "remit",
            "valueType": {
              "type": "id",
              "value": "type_remits/v1:Remit",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-line-ledgers/v1:RemitRowPayerInformation": {
      "availability": undefined,
      "description": undefined,
      "name": "RemitRowPayerInformation",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "payer_responsibility_type",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimSubmissionPayerResponsibilityType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "era_payer",
            "valueType": {
              "type": "id",
              "value": "type_service-line-ledgers/v1:EraPayer",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-line-ledgers/v1:ServiceLineLedgerTable": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLineLedgerTable",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ServiceLineId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rows",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-line-ledgers/v1:LedgerTableRow",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-line-ledgers/v1:WriteOffRow": {
      "availability": undefined,
      "description": undefined,
      "name": "WriteOffRow",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "write_off_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "write_off_note",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "write_off_datetime",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "write_off_source",
            "valueType": {
              "type": "id",
              "value": "type_adjustments:AdjustmentSource",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "write_off_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:AdjustmentId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "write_off",
            "valueType": {
              "type": "id",
              "value": "type_adjustments:Adjustment",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-lines/v2:DenialReasonContent": {
      "availability": undefined,
      "description": undefined,
      "name": "DenialReasonContent",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "Authorization Required",
          },
          {
            "description": undefined,
            "value": "Referral Required",
          },
          {
            "description": undefined,
            "value": "Medical Records Requested",
          },
          {
            "description": undefined,
            "value": "Timely Filing",
          },
          {
            "description": undefined,
            "value": "Duplicate Claim",
          },
          {
            "description": undefined,
            "value": "Incorrect Place of Service",
          },
          {
            "description": undefined,
            "value": "Incorrect Patient Gender",
          },
          {
            "description": undefined,
            "value": "Bundled",
          },
          {
            "description": undefined,
            "value": "Exceeded Billable Time",
          },
          {
            "description": undefined,
            "value": "Invalid Provider Information",
          },
          {
            "description": undefined,
            "value": "Invalid Diagnosis Code",
          },
          {
            "description": undefined,
            "value": "Incorrect Procedure Code",
          },
          {
            "description": undefined,
            "value": "Invalid Modifier",
          },
          {
            "description": undefined,
            "value": "Missing NDC Code",
          },
          {
            "description": undefined,
            "value": "Invalid Insurance Data",
          },
          {
            "description": undefined,
            "value": "No Active Coverage",
          },
          {
            "description": undefined,
            "value": "Coordination of Benefits",
          },
          {
            "description": undefined,
            "value": "Incorrect Payer",
          },
          {
            "description": undefined,
            "value": "Credentialing",
          },
          {
            "description": undefined,
            "value": "No Effective Contract",
          },
          {
            "description": undefined,
            "value": "Missing W-9",
          },
          {
            "description": undefined,
            "value": "Missing Contract Linkage",
          },
          {
            "description": undefined,
            "value": "Non-Covered Benefit",
          },
          {
            "description": undefined,
            "value": "Experimental Procedure",
          },
          {
            "description": undefined,
            "value": "Not Medically Necessary",
          },
          {
            "description": undefined,
            "value": "Info Requested from Provider",
          },
          {
            "description": undefined,
            "value": "Info Requested from Patient",
          },
          {
            "description": undefined,
            "value": "Billing Error",
          },
          {
            "description": undefined,
            "value": "Unknown",
          },
          {
            "description": undefined,
            "value": "Max Benefit Reached",
          },
        ],
      },
    },
    "type_service-lines/v2:DrugIdentification": {
      "availability": undefined,
      "description": undefined,
      "name": "DrugIdentification",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_id_qualifier",
            "valueType": {
              "type": "id",
              "value": "type_service-lines/v2:ServiceIdQualifier",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "national_drug_code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "national_drug_unit_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "measurement_unit_code",
            "valueType": {
              "type": "id",
              "value": "type_service-lines/v2:MeasurementUnitCode",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "link_sequence_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "pharmacy_prescription_number",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-lines/v2:MeasurementUnitCode": {
      "availability": undefined,
      "description": undefined,
      "name": "MeasurementUnitCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "ML",
          },
          {
            "description": undefined,
            "value": "UN",
          },
          {
            "description": undefined,
            "value": "GR",
          },
          {
            "description": undefined,
            "value": "F2",
          },
          {
            "description": undefined,
            "value": "ME",
          },
        ],
      },
    },
    "type_service-lines/v2:ServiceIdQualifier": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceIdQualifier",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "EAN/UCC - 13",
            "value": "EN",
          },
          {
            "description": "EAN/UCC - 8",
            "value": "EO",
          },
          {
            "description": "HIBC (Health Care Industry Bar Code) Supplier Labeling Standard Primary Data Message
",
            "value": "HI",
          },
          {
            "description": "National Drug Code in 5-4-2 Format",
            "value": "N4",
          },
          {
            "description": "Customer Order Number",
            "value": "ON",
          },
          {
            "description": "GTIN 14-digit Data Structure",
            "value": "UK",
          },
          {
            "description": "UCC - 12",
            "value": "UP",
          },
        ],
      },
    },
    "type_service-lines/v2:ServiceLine": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLine",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "modifiers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:ProcedureModifier",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "charge_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "allowed_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_balance_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_balance_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "paid_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_responsibility_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "diagnosis_id_zero",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_diagnoses:DiagnosisId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "diagnosis_id_one",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_diagnoses:DiagnosisId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "diagnosis_id_two",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_diagnoses:DiagnosisId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "diagnosis_id_three",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_diagnoses:DiagnosisId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_era_data",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-lines/v2:ServiceLineERAData",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_manual_adjustments",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_service-lines/v2:ServiceLineAdjustment",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "related_invoices",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_invoices:Invoice",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "denial_reason",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-lines/v2:ServiceLineDenialReason",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "place_of_service_code",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:FacilityTypeCode",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ServiceLineId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "procedure_code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "String representation of a Decimal that can be parsed by most libraries.
A ServiceLine quantity cannot contain more than one digit of precision.
Example: 1.1 is valid, 1.11 is not.
",
            "key": "quantity",
            "valueType": {
              "type": "id",
              "value": "type_commons:Decimal",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "units",
            "valueType": {
              "type": "id",
              "value": "type_commons:ServiceLineUnits",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimId",
            },
          },
          {
            "availability": undefined,
            "description": "A range of dates of service for this service line. If the service line is for a single date, the end date
will be empty.
",
            "key": "date_of_service_range",
            "valueType": {
              "type": "id",
              "value": "type_commons:DateRangeOptionalEnd",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-lines/v2:ServiceLineAdjustment": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLineAdjustment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "adjustment_group_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "adjustment_reason_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "adjustment_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "adjustment_note",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-lines/v2:ServiceLineCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLineCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "modifiers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:ProcedureModifier",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "procedure_code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "String representation of a Decimal that can be parsed by most libraries.
A ServiceLine quantity cannot contain more than one digit of precision.
Example: 1.1 is valid, 1.11 is not.
",
            "key": "quantity",
            "valueType": {
              "type": "id",
              "value": "type_commons:Decimal",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "units",
            "valueType": {
              "type": "id",
              "value": "type_commons:ServiceLineUnits",
            },
          },
          {
            "availability": undefined,
            "description": "The total amount charged for this service line taking quantity into account. For example, if a single unit
costs 100 cents and 2 units were rendered, the charge_amount_cents should be 200. Should be greater than or
equal to 0.
",
            "key": "charge_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Indices (zero-indexed) of all the diagnoses this service line references",
            "key": "diagnosis_pointers",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "drug_identification",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-lines/v2:DrugIdentification",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "place_of_service_code",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:FacilityTypeCode",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-lines/v2:ServiceLineCreateStandalone": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLineCreateStandalone",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "modifiers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:ProcedureModifier",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "charge_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "allowed_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_balance_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_balance_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "paid_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_responsibility_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "diagnosis_id_zero",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_diagnoses:DiagnosisId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "diagnosis_id_one",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_diagnoses:DiagnosisId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "diagnosis_id_two",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_diagnoses:DiagnosisId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "diagnosis_id_three",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_diagnoses:DiagnosisId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_era_data",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-lines/v2:ServiceLineERAData",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_manual_adjustments",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_service-lines/v2:ServiceLineAdjustment",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "related_invoices",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_invoices:Invoice",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "denial_reason",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-lines/v2:ServiceLineDenialReason",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "place_of_service_code",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:FacilityTypeCode",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "procedure_code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "String representation of a Decimal that can be parsed by most libraries.
A ServiceLine quantity cannot contain more than one digit of precision.
Example: 1.1 is valid, 1.11 is not.
",
            "key": "quantity",
            "valueType": {
              "type": "id",
              "value": "type_commons:Decimal",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "units",
            "valueType": {
              "type": "id",
              "value": "type_commons:ServiceLineUnits",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "claim_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:ClaimId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-lines/v2:ServiceLineDenialReason": {
      "availability": undefined,
      "description": "The reason a given service line was denied within a given time range.
A service line may be denied for different reasons over time, but only one reason at a time.
",
      "name": "ServiceLineDenialReason",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Text of the denial reason",
            "key": "reason",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-lines/v2:DenialReasonContent",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-lines/v2:ServiceLineERAData": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLineERAData",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_adjustments",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-lines/v2:ServiceLineAdjustment",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "remittance_advice_remark_codes",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-lines/v2:ServiceLineFinancialInformation": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLineFinancialInformation",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_adjustment_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_balance_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_paid_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-lines/v2:ServiceLineFinancialInformationByPayerResponsibilityResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLineFinancialInformationByPayerResponsibilityResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "primary",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-lines/v2:ServiceLineFinancialInformation",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "secondary",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-lines/v2:ServiceLineFinancialInformation",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-lines/v2:ServiceLineFinancialInformationResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLineFinancialInformationResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "financial_information_by_payer_responsibility_response",
            "valueType": {
              "type": "id",
              "value": "type_service-lines/v2:ServiceLineFinancialInformationByPayerResponsibilityResponse",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_balance_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_responsibility_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_paid_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "allowed_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "billed_amount_cents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_financial_information",
            "valueType": {
              "type": "id",
              "value": "type_service-lines/v2:ServiceLineFinancialInformation",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_service-lines/v2:ServiceLineUpdate": {
      "availability": undefined,
      "description": undefined,
      "name": "ServiceLineUpdate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "modifiers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_commons:ProcedureModifier",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "charge_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "allowed_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "insurance_balance_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_balance_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "paid_amount_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "patient_responsibility_cents",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "diagnosis_id_zero",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_diagnoses:DiagnosisId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "diagnosis_id_one",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_diagnoses:DiagnosisId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "diagnosis_id_two",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_diagnoses:DiagnosisId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "diagnosis_id_three",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_diagnoses:DiagnosisId",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_era_data",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-lines/v2:ServiceLineERAData",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service_line_manual_adjustments",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_service-lines/v2:ServiceLineAdjustment",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "related_invoices",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_invoices:Invoice",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "denial_reason",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_service-lines/v2:ServiceLineDenialReason",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "place_of_service_code",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:FacilityTypeCode",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "units",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:ServiceLineUnits",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "procedure_code",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "String representation of a Decimal that can be parsed by most libraries.
A ServiceLine quantity cannot contain more than one digit of precision.
Example: 1.1 is valid, 1.11 is not.
",
            "key": "quantity",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:Decimal",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_tags:Tag": {
      "availability": undefined,
      "description": undefined,
      "name": "Tag",
      "shape": {
        "extends": [
          "type_tags:TagCreate",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "creator_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_tags:TagColorEnum": {
      "availability": undefined,
      "description": undefined,
      "name": "TagColorEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "black",
          },
          {
            "description": undefined,
            "value": "white",
          },
          {
            "description": undefined,
            "value": "gray",
          },
          {
            "description": undefined,
            "value": "red",
          },
          {
            "description": undefined,
            "value": "yellow",
          },
          {
            "description": undefined,
            "value": "green",
          },
          {
            "description": undefined,
            "value": "blue",
          },
          {
            "description": undefined,
            "value": "indigo",
          },
          {
            "description": undefined,
            "value": "purple",
          },
          {
            "description": undefined,
            "value": "pink",
          },
        ],
      },
    },
    "type_tags:TagCreate": {
      "availability": undefined,
      "description": undefined,
      "name": "TagCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "tag_id",
            "valueType": {
              "type": "id",
              "value": "type_tags:TagId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "color",
            "valueType": {
              "type": "id",
              "value": "type_tags:TagColorEnum",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_tags:TagId": {
      "availability": undefined,
      "description": undefined,
      "name": "TagId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_tasks/commons:TaskCategory": {
      "availability": undefined,
      "description": undefined,
      "name": "TaskCategory",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "other",
          },
          {
            "description": undefined,
            "value": "provider_credentialing",
          },
          {
            "description": undefined,
            "value": "authorization_required",
          },
          {
            "description": undefined,
            "value": "inactive_coverage",
          },
          {
            "description": undefined,
            "value": "unknown_eligibility_or_patient_not_found",
          },
          {
            "description": undefined,
            "value": "incorrect_member_id",
          },
          {
            "description": undefined,
            "value": "documentation_addendum_request",
          },
          {
            "description": undefined,
            "value": "coordination_of_benefits",
          },
          {
            "description": undefined,
            "value": "missing_or_incorrect_gender",
          },
          {
            "description": undefined,
            "value": "incorrect_date_of_birth",
          },
          {
            "description": undefined,
            "value": "incorrect_payer",
          },
          {
            "description": undefined,
            "value": "incorrect_name",
          },
          {
            "description": undefined,
            "value": "invalid_diagnosis_code",
          },
          {
            "description": undefined,
            "value": "non_covered_diagnosis_codes",
          },
          {
            "description": undefined,
            "value": "information_requested_from_patient",
          },
          {
            "description": undefined,
            "value": "incorrect_rendering_provider_info",
          },
          {
            "description": undefined,
            "value": "missing_or_incorrect_modifier",
          },
          {
            "description": undefined,
            "value": "coding_frequency_error",
          },
          {
            "description": undefined,
            "value": "incorrect_patient_address",
          },
          {
            "description": undefined,
            "value": "multiple_em_claims",
          },
          {
            "description": undefined,
            "value": "missing_or_incorrect_charge_amount",
          },
          {
            "description": undefined,
            "value": "medical_records_request",
          },
          {
            "description": undefined,
            "value": "provider_enrollment_or_contracting",
          },
          {
            "description": undefined,
            "value": "missing_or_incorrect_group_number",
          },
          {
            "description": undefined,
            "value": "missing_diagnosis_codes",
          },
          {
            "description": undefined,
            "value": "missing_patient_authorization",
          },
          {
            "description": undefined,
            "value": "incorrect_billing_provider_info",
          },
          {
            "description": undefined,
            "value": "incorrect_procedure_code",
          },
          {
            "description": undefined,
            "value": "incorrect_quantity",
          },
          {
            "description": undefined,
            "value": "incorrect_place_of_service_code",
          },
          {
            "description": undefined,
            "value": "incorrect_service_facility_info",
          },
          {
            "description": undefined,
            "value": "incorrect_date_of_service",
          },
          {
            "description": undefined,
            "value": "missing_or_incorrect_ndc",
          },
          {
            "description": undefined,
            "value": "patient_collections",
          },
          {
            "description": undefined,
            "value": "submit_to_secondary",
          },
          {
            "description": undefined,
            "value": "transient_server_error",
          },
          {
            "description": undefined,
            "value": "missing_remittance_enrollment",
          },
          {
            "description": undefined,
            "value": "missing_claims_enrollment",
          },
          {
            "description": undefined,
            "value": "held_by_customer",
          },
        ],
      },
    },
    "type_tasks/commons:TaskType": {
      "availability": undefined,
      "description": undefined,
      "name": "TaskType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "CUSTOMER_DATA_REQUEST",
          },
          {
            "description": undefined,
            "value": "CLAIM_SUBMISSION_RUN_VALIDATIONS_FAILURE",
          },
          {
            "description": undefined,
            "value": "CLAIM_SUBMISSION_SUBMIT_CLAIM_FAILURE",
          },
          {
            "description": undefined,
            "value": "CLAIM_SUBMISSION_TRANSFORM_FAILURE",
          },
          {
            "description": undefined,
            "value": "CODE_CLAIM",
          },
          {
            "description": undefined,
            "value": "CODE_CLAIM_REVIEW",
          },
          {
            "description": undefined,
            "value": "ELIGIBILITY",
          },
          {
            "description": undefined,
            "value": "CLAIM_FOLLOW_UP",
          },
          {
            "description": undefined,
            "value": "REJECTION_RESOLUTION",
          },
          {
            "description": undefined,
            "value": "PAYER_CONFIGURATION_ERROR",
          },
          {
            "description": undefined,
            "value": "DENIAL_RESOLUTION",
          },
          {
            "description": undefined,
            "value": "MISSING_ENROLLMENT",
          },
        ],
      },
    },
    "type_tasks/v3:TaskAction": {
      "availability": undefined,
      "description": undefined,
      "name": "TaskAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "display_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "execution_method",
            "valueType": {
              "type": "id",
              "value": "type_tasks/v3:TaskActionExecutionMethod",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_tasks/v3:TaskActionExecutionMethod": {
      "availability": undefined,
      "description": undefined,
      "name": "TaskActionExecutionMethod",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "close_task",
          },
        ],
      },
    },
    "type_tasks/v3:TaskActions": {
      "availability": undefined,
      "description": undefined,
      "name": "TaskActions",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "actions",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_tasks/v3:TaskAction",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_test-fern:ChildPatch": {
      "availability": undefined,
      "description": undefined,
      "name": "ChildPatch",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "field_a",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "field_b",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_test-fern:ParentPatch": {
      "availability": undefined,
      "description": undefined,
      "name": "ParentPatch",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "child_patch",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_test-fern:ChildPatch",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_test-fern:UnionParentPatch": {
      "availability": undefined,
      "description": undefined,
      "name": "UnionParentPatch",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_test-fern:ChildPatch",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "child",
          },
        ],
      },
    },
    "type_upload-validation:FailedValidationResult": {
      "availability": undefined,
      "description": undefined,
      "name": "FailedValidationResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "rowNumber",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_upload-validation:FailedValidationResultType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "message",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_upload-validation:FailedValidationResultType": {
      "availability": undefined,
      "description": undefined,
      "name": "FailedValidationResultType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "The validation failed with an unspecified type of failure.",
            "value": "UNSPECIFIED",
          },
          {
            "description": "The validation failed because the data is not complete.",
            "value": "VALIDATION",
          },
          {
            "description": "The validation failed because the item was a duplicate.",
            "value": "DUPLICATE",
          },
        ],
      },
    },
    "type_upload-validation:IngestResults": {
      "availability": undefined,
      "description": undefined,
      "name": "IngestResults",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "ingestedIds",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "failedToIngestIds",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_upload-validation:UploadResults": {
      "availability": undefined,
      "description": undefined,
      "name": "UploadResults",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "validationResults",
            "valueType": {
              "type": "id",
              "value": "type_upload-validation:ValidationResults",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "ingestResults",
            "valueType": {
              "type": "id",
              "value": "type_upload-validation:IngestResults",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_upload-validation:ValidationResults": {
      "availability": undefined,
      "description": undefined,
      "name": "ValidationResults",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "totalProcessed",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "totalSuccessful",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "failedResults",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_upload-validation:FailedValidationResult",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_users/v2:AuthZeroMetadata": {
      "availability": undefined,
      "description": undefined,
      "name": "AuthZeroMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "auth0_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_users/v2:GoogleAppsMetadata": {
      "availability": undefined,
      "description": undefined,
      "name": "GoogleAppsMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "google_apps_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_users/v2:HumanUserMetadata": {
      "availability": undefined,
      "description": undefined,
      "name": "HumanUserMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "first_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "last_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_users/v2:IdpUserMetadata": {
      "availability": undefined,
      "description": undefined,
      "name": "IdpUserMetadata",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_users/v2:AuthZeroMetadata",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "auth_zero_metadata",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_users/v2:GoogleAppsMetadata",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "google_apps_metadata",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_users/v2:OtherIdpMetadata",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "other_idp_metadata",
          },
        ],
      },
    },
    "type_users/v2:InternalEnrollmentAssignees": {
      "availability": undefined,
      "description": undefined,
      "name": "InternalEnrollmentAssignees",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "assignees",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_users/v2:User",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "default_assignee",
            "valueType": {
              "type": "id",
              "value": "type_users/v2:User",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_users/v2:MachineUserMetadata": {
      "availability": undefined,
      "description": undefined,
      "name": "MachineUserMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_users/v2:OtherIdpMetadata": {
      "availability": undefined,
      "description": undefined,
      "name": "OtherIdpMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "idp_external_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_users/v2:User": {
      "availability": undefined,
      "description": undefined,
      "name": "User",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "auth0_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:Auth0Id",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "first_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "last_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_users/v2:UserMetadata": {
      "availability": undefined,
      "description": undefined,
      "name": "UserMetadata",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_users/v2:MachineUserMetadata",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "machine_user_metadata",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_users/v2:HumanUserMetadata",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "human_user_metadata",
          },
        ],
      },
    },
    "type_users/v2:UserV2": {
      "availability": undefined,
      "description": undefined,
      "name": "UserV2",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "user_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:UserId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "idp_metadata",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_users/v2:IdpUserMetadata",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "primary_organization_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:OrganizationId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "user_metadata",
            "valueType": {
              "type": "id",
              "value": "type_users/v2:UserMetadata",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "accessible_organization_ids",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_commons:OrganizationId",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_users/v2:UserV2Page": {
      "availability": undefined,
      "description": undefined,
      "name": "UserV2Page",
      "shape": {
        "extends": [
          "type_commons:ResourcePage",
        ],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "items",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_users/v2:UserV2",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_work-queues/v1:GetAllWorkQueuesResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "GetAllWorkQueuesResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queues",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_work-queues/v1:WorkQueueResponse",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_work-queues/v1:WorkQueue": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkQueue",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queue_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:WorkQueueId",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "display_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "category",
            "valueType": {
              "type": "id",
              "value": "type_work-queues/v1:WorkQueueCategory",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "created_by",
            "valueType": {
              "type": "id",
              "value": "type_commons:UserId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_work-queues/v1:WorkQueueCategory": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkQueueCategory",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_work-queues/v1:WorkQueueCategoryType",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "display_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_work-queues/v1:WorkQueueCategoryType": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkQueueCategoryType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "PRE_SUBMISSION",
          },
          {
            "description": undefined,
            "value": "REJECTIONS",
          },
          {
            "description": undefined,
            "value": "DENIALS",
          },
          {
            "description": undefined,
            "value": "POST_SUBMISSION",
          },
          {
            "description": undefined,
            "value": "STALE_CLAIMS",
          },
          {
            "description": undefined,
            "value": "CUSTOM",
          },
          {
            "description": undefined,
            "value": "CODING",
          },
        ],
      },
    },
    "type_work-queues/v1:WorkQueueNotFoundError": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkQueueNotFoundError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queue_id",
            "valueType": {
              "type": "id",
              "value": "type_commons:WorkQueueId",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_work-queues/v1:WorkQueueResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkQueueResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queue",
            "valueType": {
              "type": "id",
              "value": "type_work-queues/v1:WorkQueue",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "work_queue_statistics",
            "valueType": {
              "type": "id",
              "value": "type_work-queues/v1:WorkQueueStatistics",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_work-queues/v1:WorkQueueStatistics": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkQueueStatistics",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "num_claims",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_x12/v1:Carc": {
      "availability": undefined,
      "description": undefined,
      "name": "Carc",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "1",
          },
          {
            "description": undefined,
            "value": "2",
          },
          {
            "description": undefined,
            "value": "3",
          },
          {
            "description": undefined,
            "value": "4",
          },
          {
            "description": undefined,
            "value": "5",
          },
          {
            "description": undefined,
            "value": "6",
          },
          {
            "description": undefined,
            "value": "7",
          },
          {
            "description": undefined,
            "value": "8",
          },
          {
            "description": undefined,
            "value": "9",
          },
          {
            "description": undefined,
            "value": "10",
          },
          {
            "description": undefined,
            "value": "11",
          },
          {
            "description": undefined,
            "value": "12",
          },
          {
            "description": undefined,
            "value": "13",
          },
          {
            "description": undefined,
            "value": "14",
          },
          {
            "description": undefined,
            "value": "16",
          },
          {
            "description": undefined,
            "value": "18",
          },
          {
            "description": undefined,
            "value": "19",
          },
          {
            "description": undefined,
            "value": "20",
          },
          {
            "description": undefined,
            "value": "21",
          },
          {
            "description": undefined,
            "value": "22",
          },
          {
            "description": undefined,
            "value": "23",
          },
          {
            "description": undefined,
            "value": "24",
          },
          {
            "description": undefined,
            "value": "26",
          },
          {
            "description": undefined,
            "value": "27",
          },
          {
            "description": undefined,
            "value": "29",
          },
          {
            "description": undefined,
            "value": "31",
          },
          {
            "description": undefined,
            "value": "32",
          },
          {
            "description": undefined,
            "value": "33",
          },
          {
            "description": undefined,
            "value": "34",
          },
          {
            "description": undefined,
            "value": "35",
          },
          {
            "description": undefined,
            "value": "39",
          },
          {
            "description": undefined,
            "value": "40",
          },
          {
            "description": undefined,
            "value": "44",
          },
          {
            "description": undefined,
            "value": "45",
          },
          {
            "description": undefined,
            "value": "49",
          },
          {
            "description": undefined,
            "value": "50",
          },
          {
            "description": undefined,
            "value": "51",
          },
          {
            "description": undefined,
            "value": "53",
          },
          {
            "description": undefined,
            "value": "54",
          },
          {
            "description": undefined,
            "value": "55",
          },
          {
            "description": undefined,
            "value": "56",
          },
          {
            "description": undefined,
            "value": "58",
          },
          {
            "description": undefined,
            "value": "59",
          },
          {
            "description": undefined,
            "value": "60",
          },
          {
            "description": undefined,
            "value": "61",
          },
          {
            "description": undefined,
            "value": "66",
          },
          {
            "description": undefined,
            "value": "69",
          },
          {
            "description": undefined,
            "value": "70",
          },
          {
            "description": undefined,
            "value": "74",
          },
          {
            "description": undefined,
            "value": "75",
          },
          {
            "description": undefined,
            "value": "76",
          },
          {
            "description": undefined,
            "value": "78",
          },
          {
            "description": undefined,
            "value": "85",
          },
          {
            "description": undefined,
            "value": "89",
          },
          {
            "description": undefined,
            "value": "90",
          },
          {
            "description": undefined,
            "value": "91",
          },
          {
            "description": undefined,
            "value": "94",
          },
          {
            "description": undefined,
            "value": "95",
          },
          {
            "description": undefined,
            "value": "96",
          },
          {
            "description": undefined,
            "value": "97",
          },
          {
            "description": undefined,
            "value": "100",
          },
          {
            "description": undefined,
            "value": "101",
          },
          {
            "description": undefined,
            "value": "102",
          },
          {
            "description": undefined,
            "value": "103",
          },
          {
            "description": undefined,
            "value": "104",
          },
          {
            "description": undefined,
            "value": "105",
          },
          {
            "description": undefined,
            "value": "106",
          },
          {
            "description": undefined,
            "value": "107",
          },
          {
            "description": undefined,
            "value": "108",
          },
          {
            "description": undefined,
            "value": "109",
          },
          {
            "description": undefined,
            "value": "110",
          },
          {
            "description": undefined,
            "value": "111",
          },
          {
            "description": undefined,
            "value": "112",
          },
          {
            "description": undefined,
            "value": "114",
          },
          {
            "description": undefined,
            "value": "115",
          },
          {
            "description": undefined,
            "value": "116",
          },
          {
            "description": undefined,
            "value": "117",
          },
          {
            "description": undefined,
            "value": "118",
          },
          {
            "description": undefined,
            "value": "119",
          },
          {
            "description": undefined,
            "value": "121",
          },
          {
            "description": undefined,
            "value": "122",
          },
          {
            "description": undefined,
            "value": "128",
          },
          {
            "description": undefined,
            "value": "129",
          },
          {
            "description": undefined,
            "value": "130",
          },
          {
            "description": undefined,
            "value": "131",
          },
          {
            "description": undefined,
            "value": "132",
          },
          {
            "description": undefined,
            "value": "133",
          },
          {
            "description": undefined,
            "value": "134",
          },
          {
            "description": undefined,
            "value": "135",
          },
          {
            "description": undefined,
            "value": "136",
          },
          {
            "description": undefined,
            "value": "137",
          },
          {
            "description": undefined,
            "value": "139",
          },
          {
            "description": undefined,
            "value": "140",
          },
          {
            "description": undefined,
            "value": "142",
          },
          {
            "description": undefined,
            "value": "143",
          },
          {
            "description": undefined,
            "value": "144",
          },
          {
            "description": undefined,
            "value": "146",
          },
          {
            "description": undefined,
            "value": "147",
          },
          {
            "description": undefined,
            "value": "148",
          },
          {
            "description": undefined,
            "value": "149",
          },
          {
            "description": undefined,
            "value": "150",
          },
          {
            "description": undefined,
            "value": "151",
          },
          {
            "description": undefined,
            "value": "152",
          },
          {
            "description": undefined,
            "value": "153",
          },
          {
            "description": undefined,
            "value": "154",
          },
          {
            "description": undefined,
            "value": "155",
          },
          {
            "description": undefined,
            "value": "157",
          },
          {
            "description": undefined,
            "value": "158",
          },
          {
            "description": undefined,
            "value": "159",
          },
          {
            "description": undefined,
            "value": "160",
          },
          {
            "description": undefined,
            "value": "161",
          },
          {
            "description": undefined,
            "value": "163",
          },
          {
            "description": undefined,
            "value": "164",
          },
          {
            "description": undefined,
            "value": "166",
          },
          {
            "description": undefined,
            "value": "167",
          },
          {
            "description": undefined,
            "value": "169",
          },
          {
            "description": undefined,
            "value": "170",
          },
          {
            "description": undefined,
            "value": "171",
          },
          {
            "description": undefined,
            "value": "172",
          },
          {
            "description": undefined,
            "value": "173",
          },
          {
            "description": undefined,
            "value": "174",
          },
          {
            "description": undefined,
            "value": "175",
          },
          {
            "description": undefined,
            "value": "176",
          },
          {
            "description": undefined,
            "value": "177",
          },
          {
            "description": undefined,
            "value": "178",
          },
          {
            "description": undefined,
            "value": "179",
          },
          {
            "description": undefined,
            "value": "180",
          },
          {
            "description": undefined,
            "value": "181",
          },
          {
            "description": undefined,
            "value": "182",
          },
          {
            "description": undefined,
            "value": "183",
          },
          {
            "description": undefined,
            "value": "184",
          },
          {
            "description": undefined,
            "value": "185",
          },
          {
            "description": undefined,
            "value": "186",
          },
          {
            "description": undefined,
            "value": "187",
          },
          {
            "description": undefined,
            "value": "188",
          },
          {
            "description": undefined,
            "value": "189",
          },
          {
            "description": undefined,
            "value": "190",
          },
          {
            "description": undefined,
            "value": "192",
          },
          {
            "description": undefined,
            "value": "193",
          },
          {
            "description": undefined,
            "value": "194",
          },
          {
            "description": undefined,
            "value": "195",
          },
          {
            "description": undefined,
            "value": "197",
          },
          {
            "description": undefined,
            "value": "198",
          },
          {
            "description": undefined,
            "value": "199",
          },
          {
            "description": undefined,
            "value": "200",
          },
          {
            "description": undefined,
            "value": "201",
          },
          {
            "description": undefined,
            "value": "202",
          },
          {
            "description": undefined,
            "value": "203",
          },
          {
            "description": undefined,
            "value": "204",
          },
          {
            "description": undefined,
            "value": "205",
          },
          {
            "description": undefined,
            "value": "206",
          },
          {
            "description": undefined,
            "value": "207",
          },
          {
            "description": undefined,
            "value": "208",
          },
          {
            "description": undefined,
            "value": "209",
          },
          {
            "description": undefined,
            "value": "210",
          },
          {
            "description": undefined,
            "value": "211",
          },
          {
            "description": undefined,
            "value": "212",
          },
          {
            "description": undefined,
            "value": "213",
          },
          {
            "description": undefined,
            "value": "215",
          },
          {
            "description": undefined,
            "value": "216",
          },
          {
            "description": undefined,
            "value": "219",
          },
          {
            "description": undefined,
            "value": "222",
          },
          {
            "description": undefined,
            "value": "223",
          },
          {
            "description": undefined,
            "value": "224",
          },
          {
            "description": undefined,
            "value": "225",
          },
          {
            "description": undefined,
            "value": "226",
          },
          {
            "description": undefined,
            "value": "227",
          },
          {
            "description": undefined,
            "value": "228",
          },
          {
            "description": undefined,
            "value": "229",
          },
          {
            "description": undefined,
            "value": "231",
          },
          {
            "description": undefined,
            "value": "232",
          },
          {
            "description": undefined,
            "value": "233",
          },
          {
            "description": undefined,
            "value": "234",
          },
          {
            "description": undefined,
            "value": "235",
          },
          {
            "description": undefined,
            "value": "236",
          },
          {
            "description": undefined,
            "value": "237",
          },
          {
            "description": undefined,
            "value": "238",
          },
          {
            "description": undefined,
            "value": "239",
          },
          {
            "description": undefined,
            "value": "240",
          },
          {
            "description": undefined,
            "value": "241",
          },
          {
            "description": undefined,
            "value": "245",
          },
          {
            "description": undefined,
            "value": "246",
          },
          {
            "description": undefined,
            "value": "247",
          },
          {
            "description": undefined,
            "value": "248",
          },
          {
            "description": undefined,
            "value": "249",
          },
          {
            "description": undefined,
            "value": "250",
          },
          {
            "description": undefined,
            "value": "251",
          },
          {
            "description": undefined,
            "value": "252",
          },
          {
            "description": undefined,
            "value": "253",
          },
          {
            "description": undefined,
            "value": "254",
          },
          {
            "description": undefined,
            "value": "256",
          },
          {
            "description": undefined,
            "value": "257",
          },
          {
            "description": undefined,
            "value": "258",
          },
          {
            "description": undefined,
            "value": "259",
          },
          {
            "description": undefined,
            "value": "260",
          },
          {
            "description": undefined,
            "value": "261",
          },
          {
            "description": undefined,
            "value": "262",
          },
          {
            "description": undefined,
            "value": "263",
          },
          {
            "description": undefined,
            "value": "264",
          },
          {
            "description": undefined,
            "value": "265",
          },
          {
            "description": undefined,
            "value": "266",
          },
          {
            "description": undefined,
            "value": "267",
          },
          {
            "description": undefined,
            "value": "268",
          },
          {
            "description": undefined,
            "value": "269",
          },
          {
            "description": undefined,
            "value": "270",
          },
          {
            "description": undefined,
            "value": "271",
          },
          {
            "description": undefined,
            "value": "272",
          },
          {
            "description": undefined,
            "value": "273",
          },
          {
            "description": undefined,
            "value": "274",
          },
          {
            "description": undefined,
            "value": "275",
          },
          {
            "description": undefined,
            "value": "276",
          },
          {
            "description": undefined,
            "value": "277",
          },
          {
            "description": undefined,
            "value": "278",
          },
          {
            "description": undefined,
            "value": "279",
          },
          {
            "description": undefined,
            "value": "280",
          },
          {
            "description": undefined,
            "value": "281",
          },
          {
            "description": undefined,
            "value": "282",
          },
          {
            "description": undefined,
            "value": "283",
          },
          {
            "description": undefined,
            "value": "284",
          },
          {
            "description": undefined,
            "value": "285",
          },
          {
            "description": undefined,
            "value": "286",
          },
          {
            "description": undefined,
            "value": "287",
          },
          {
            "description": undefined,
            "value": "288",
          },
          {
            "description": undefined,
            "value": "289",
          },
          {
            "description": undefined,
            "value": "290",
          },
          {
            "description": undefined,
            "value": "291",
          },
          {
            "description": undefined,
            "value": "292",
          },
          {
            "description": undefined,
            "value": "293",
          },
          {
            "description": undefined,
            "value": "294",
          },
          {
            "description": undefined,
            "value": "295",
          },
          {
            "description": undefined,
            "value": "296",
          },
          {
            "description": undefined,
            "value": "297",
          },
          {
            "description": undefined,
            "value": "298",
          },
          {
            "description": undefined,
            "value": "299",
          },
          {
            "description": undefined,
            "value": "300",
          },
          {
            "description": undefined,
            "value": "301",
          },
          {
            "description": undefined,
            "value": "302",
          },
          {
            "description": undefined,
            "value": "303",
          },
          {
            "description": undefined,
            "value": "A0",
          },
          {
            "description": undefined,
            "value": "A1",
          },
          {
            "description": undefined,
            "value": "A5",
          },
          {
            "description": undefined,
            "value": "A6",
          },
          {
            "description": undefined,
            "value": "A8",
          },
          {
            "description": undefined,
            "value": "B1",
          },
          {
            "description": undefined,
            "value": "B4",
          },
          {
            "description": undefined,
            "value": "B7",
          },
          {
            "description": undefined,
            "value": "B8",
          },
          {
            "description": undefined,
            "value": "B9",
          },
          {
            "description": undefined,
            "value": "B10",
          },
          {
            "description": undefined,
            "value": "B11",
          },
          {
            "description": undefined,
            "value": "B12",
          },
          {
            "description": undefined,
            "value": "B13",
          },
          {
            "description": undefined,
            "value": "B14",
          },
          {
            "description": undefined,
            "value": "B15",
          },
          {
            "description": undefined,
            "value": "B16",
          },
          {
            "description": undefined,
            "value": "B20",
          },
          {
            "description": undefined,
            "value": "B22",
          },
          {
            "description": undefined,
            "value": "B23",
          },
          {
            "description": undefined,
            "value": "P24",
          },
          {
            "description": undefined,
            "value": "P25",
          },
          {
            "description": undefined,
            "value": "P26",
          },
          {
            "description": undefined,
            "value": "P27",
          },
          {
            "description": undefined,
            "value": "P28",
          },
          {
            "description": undefined,
            "value": "P29",
          },
          {
            "description": undefined,
            "value": "P30",
          },
          {
            "description": undefined,
            "value": "P31",
          },
        ],
      },
    },
    "type_x12/v1:ClaimStatusCodeEnum": {
      "availability": undefined,
      "description": undefined,
      "name": "ClaimStatusCodeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "processed_as_primary",
          },
          {
            "description": undefined,
            "value": "processed_as_secondary",
          },
          {
            "description": undefined,
            "value": "processed_as_tertiary",
          },
          {
            "description": undefined,
            "value": "denied",
          },
          {
            "description": undefined,
            "value": "processed_as_primary_forwarded",
          },
          {
            "description": undefined,
            "value": "processed_as_secondary_forwarded",
          },
          {
            "description": undefined,
            "value": "processed_as_tertiary_forwarded",
          },
          {
            "description": undefined,
            "value": "reversal_of_previous_payment",
          },
          {
            "description": undefined,
            "value": "not_our_claim_forwarded",
          },
          {
            "description": undefined,
            "value": "predetermination_pricing_no_payment",
          },
          {
            "description": undefined,
            "value": "unknown",
          },
        ],
      },
    },
    "type_x12/v1:Rarc": {
      "availability": undefined,
      "description": undefined,
      "name": "Rarc",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "M1",
          },
          {
            "description": undefined,
            "value": "M2",
          },
          {
            "description": undefined,
            "value": "M3",
          },
          {
            "description": undefined,
            "value": "M4",
          },
          {
            "description": undefined,
            "value": "M5",
          },
          {
            "description": undefined,
            "value": "M6",
          },
          {
            "description": undefined,
            "value": "M7",
          },
          {
            "description": undefined,
            "value": "M8",
          },
          {
            "description": undefined,
            "value": "M9",
          },
          {
            "description": undefined,
            "value": "M10",
          },
          {
            "description": undefined,
            "value": "M11",
          },
          {
            "description": undefined,
            "value": "M12",
          },
          {
            "description": undefined,
            "value": "M13",
          },
          {
            "description": undefined,
            "value": "M14",
          },
          {
            "description": undefined,
            "value": "M15",
          },
          {
            "description": undefined,
            "value": "M16",
          },
          {
            "description": undefined,
            "value": "M17",
          },
          {
            "description": undefined,
            "value": "M18",
          },
          {
            "description": undefined,
            "value": "M19",
          },
          {
            "description": undefined,
            "value": "M20",
          },
          {
            "description": undefined,
            "value": "M21",
          },
          {
            "description": undefined,
            "value": "M22",
          },
          {
            "description": undefined,
            "value": "M23",
          },
          {
            "description": undefined,
            "value": "M24",
          },
          {
            "description": undefined,
            "value": "M25",
          },
          {
            "description": undefined,
            "value": "M26",
          },
          {
            "description": undefined,
            "value": "M27",
          },
          {
            "description": undefined,
            "value": "M28",
          },
          {
            "description": undefined,
            "value": "M29",
          },
          {
            "description": undefined,
            "value": "M30",
          },
          {
            "description": undefined,
            "value": "M31",
          },
          {
            "description": undefined,
            "value": "M32",
          },
          {
            "description": undefined,
            "value": "M36",
          },
          {
            "description": undefined,
            "value": "M37",
          },
          {
            "description": undefined,
            "value": "M38",
          },
          {
            "description": undefined,
            "value": "M39",
          },
          {
            "description": undefined,
            "value": "M40",
          },
          {
            "description": undefined,
            "value": "M41",
          },
          {
            "description": undefined,
            "value": "M42",
          },
          {
            "description": undefined,
            "value": "M44",
          },
          {
            "description": undefined,
            "value": "M45",
          },
          {
            "description": undefined,
            "value": "M46",
          },
          {
            "description": undefined,
            "value": "M47",
          },
          {
            "description": undefined,
            "value": "M49",
          },
          {
            "description": undefined,
            "value": "M50",
          },
          {
            "description": undefined,
            "value": "M51",
          },
          {
            "description": undefined,
            "value": "M52",
          },
          {
            "description": undefined,
            "value": "M53",
          },
          {
            "description": undefined,
            "value": "M54",
          },
          {
            "description": undefined,
            "value": "M55",
          },
          {
            "description": undefined,
            "value": "M56",
          },
          {
            "description": undefined,
            "value": "M59",
          },
          {
            "description": undefined,
            "value": "M60",
          },
          {
            "description": undefined,
            "value": "M61",
          },
          {
            "description": undefined,
            "value": "M62",
          },
          {
            "description": undefined,
            "value": "M64",
          },
          {
            "description": undefined,
            "value": "M65",
          },
          {
            "description": undefined,
            "value": "M66",
          },
          {
            "description": undefined,
            "value": "M67",
          },
          {
            "description": undefined,
            "value": "M69",
          },
          {
            "description": undefined,
            "value": "M70",
          },
          {
            "description": undefined,
            "value": "M71",
          },
          {
            "description": undefined,
            "value": "M73",
          },
          {
            "description": undefined,
            "value": "M74",
          },
          {
            "description": undefined,
            "value": "M75",
          },
          {
            "description": undefined,
            "value": "M76",
          },
          {
            "description": undefined,
            "value": "M77",
          },
          {
            "description": undefined,
            "value": "M79",
          },
          {
            "description": undefined,
            "value": "M80",
          },
          {
            "description": undefined,
            "value": "M81",
          },
          {
            "description": undefined,
            "value": "M82",
          },
          {
            "description": undefined,
            "value": "M83",
          },
          {
            "description": undefined,
            "value": "M84",
          },
          {
            "description": undefined,
            "value": "M85",
          },
          {
            "description": undefined,
            "value": "M86",
          },
          {
            "description": undefined,
            "value": "M87",
          },
          {
            "description": undefined,
            "value": "M89",
          },
          {
            "description": undefined,
            "value": "M90",
          },
          {
            "description": undefined,
            "value": "M91",
          },
          {
            "description": undefined,
            "value": "M93",
          },
          {
            "description": undefined,
            "value": "M94",
          },
          {
            "description": undefined,
            "value": "M95",
          },
          {
            "description": undefined,
            "value": "M96",
          },
          {
            "description": undefined,
            "value": "M97",
          },
          {
            "description": undefined,
            "value": "M99",
          },
          {
            "description": undefined,
            "value": "M100",
          },
          {
            "description": undefined,
            "value": "M102",
          },
          {
            "description": undefined,
            "value": "M103",
          },
          {
            "description": undefined,
            "value": "M104",
          },
          {
            "description": undefined,
            "value": "M105",
          },
          {
            "description": undefined,
            "value": "M107",
          },
          {
            "description": undefined,
            "value": "M109",
          },
          {
            "description": undefined,
            "value": "M111",
          },
          {
            "description": undefined,
            "value": "M112",
          },
          {
            "description": undefined,
            "value": "M113",
          },
          {
            "description": undefined,
            "value": "M114",
          },
          {
            "description": undefined,
            "value": "M115",
          },
          {
            "description": undefined,
            "value": "M116",
          },
          {
            "description": undefined,
            "value": "M117",
          },
          {
            "description": undefined,
            "value": "M121",
          },
          {
            "description": undefined,
            "value": "M122",
          },
          {
            "description": undefined,
            "value": "M123",
          },
          {
            "description": undefined,
            "value": "M124",
          },
          {
            "description": undefined,
            "value": "M125",
          },
          {
            "description": undefined,
            "value": "M126",
          },
          {
            "description": undefined,
            "value": "M127",
          },
          {
            "description": undefined,
            "value": "M129",
          },
          {
            "description": undefined,
            "value": "M130",
          },
          {
            "description": undefined,
            "value": "M131",
          },
          {
            "description": undefined,
            "value": "M132",
          },
          {
            "description": undefined,
            "value": "M133",
          },
          {
            "description": undefined,
            "value": "M134",
          },
          {
            "description": undefined,
            "value": "M135",
          },
          {
            "description": undefined,
            "value": "M136",
          },
          {
            "description": undefined,
            "value": "M137",
          },
          {
            "description": undefined,
            "value": "M138",
          },
          {
            "description": undefined,
            "value": "M139",
          },
          {
            "description": undefined,
            "value": "M141",
          },
          {
            "description": undefined,
            "value": "M142",
          },
          {
            "description": undefined,
            "value": "M143",
          },
          {
            "description": undefined,
            "value": "M144",
          },
          {
            "description": undefined,
            "value": "MA01",
          },
          {
            "description": undefined,
            "value": "MA02",
          },
          {
            "description": undefined,
            "value": "MA04",
          },
          {
            "description": undefined,
            "value": "MA07",
          },
          {
            "description": undefined,
            "value": "MA08",
          },
          {
            "description": undefined,
            "value": "MA09",
          },
          {
            "description": undefined,
            "value": "MA10",
          },
          {
            "description": undefined,
            "value": "MA12",
          },
          {
            "description": undefined,
            "value": "MA13",
          },
          {
            "description": undefined,
            "value": "MA14",
          },
          {
            "description": undefined,
            "value": "MA15",
          },
          {
            "description": undefined,
            "value": "MA16",
          },
          {
            "description": undefined,
            "value": "MA17",
          },
          {
            "description": undefined,
            "value": "MA18",
          },
          {
            "description": undefined,
            "value": "MA19",
          },
          {
            "description": undefined,
            "value": "MA20",
          },
          {
            "description": undefined,
            "value": "MA21",
          },
          {
            "description": undefined,
            "value": "MA22",
          },
          {
            "description": undefined,
            "value": "MA23",
          },
          {
            "description": undefined,
            "value": "MA24",
          },
          {
            "description": undefined,
            "value": "MA25",
          },
          {
            "description": undefined,
            "value": "MA26",
          },
          {
            "description": undefined,
            "value": "MA27",
          },
          {
            "description": undefined,
            "value": "MA28",
          },
          {
            "description": undefined,
            "value": "MA30",
          },
          {
            "description": undefined,
            "value": "MA31",
          },
          {
            "description": undefined,
            "value": "MA32",
          },
          {
            "description": undefined,
            "value": "MA33",
          },
          {
            "description": undefined,
            "value": "MA34",
          },
          {
            "description": undefined,
            "value": "MA35",
          },
          {
            "description": undefined,
            "value": "MA36",
          },
          {
            "description": undefined,
            "value": "MA37",
          },
          {
            "description": undefined,
            "value": "MA39",
          },
          {
            "description": undefined,
            "value": "MA40",
          },
          {
            "description": undefined,
            "value": "MA41",
          },
          {
            "description": undefined,
            "value": "MA42",
          },
          {
            "description": undefined,
            "value": "MA43",
          },
          {
            "description": undefined,
            "value": "MA44",
          },
          {
            "description": undefined,
            "value": "MA45",
          },
          {
            "description": undefined,
            "value": "MA46",
          },
          {
            "description": undefined,
            "value": "MA47",
          },
          {
            "description": undefined,
            "value": "MA48",
          },
          {
            "description": undefined,
            "value": "MA50",
          },
          {
            "description": undefined,
            "value": "MA53",
          },
          {
            "description": undefined,
            "value": "MA54",
          },
          {
            "description": undefined,
            "value": "MA55",
          },
          {
            "description": undefined,
            "value": "MA56",
          },
          {
            "description": undefined,
            "value": "MA57",
          },
          {
            "description": undefined,
            "value": "MA58",
          },
          {
            "description": undefined,
            "value": "MA59",
          },
          {
            "description": undefined,
            "value": "MA60",
          },
          {
            "description": undefined,
            "value": "MA61",
          },
          {
            "description": undefined,
            "value": "MA62",
          },
          {
            "description": undefined,
            "value": "MA63",
          },
          {
            "description": undefined,
            "value": "MA64",
          },
          {
            "description": undefined,
            "value": "MA65",
          },
          {
            "description": undefined,
            "value": "MA66",
          },
          {
            "description": undefined,
            "value": "MA67",
          },
          {
            "description": undefined,
            "value": "MA68",
          },
          {
            "description": undefined,
            "value": "MA69",
          },
          {
            "description": undefined,
            "value": "MA70",
          },
          {
            "description": undefined,
            "value": "MA71",
          },
          {
            "description": undefined,
            "value": "MA72",
          },
          {
            "description": undefined,
            "value": "MA73",
          },
          {
            "description": undefined,
            "value": "MA74",
          },
          {
            "description": undefined,
            "value": "MA75",
          },
          {
            "description": undefined,
            "value": "MA76",
          },
          {
            "description": undefined,
            "value": "MA77",
          },
          {
            "description": undefined,
            "value": "MA79",
          },
          {
            "description": undefined,
            "value": "MA80",
          },
          {
            "description": undefined,
            "value": "MA81",
          },
          {
            "description": undefined,
            "value": "MA83",
          },
          {
            "description": undefined,
            "value": "MA84",
          },
          {
            "description": undefined,
            "value": "MA88",
          },
          {
            "description": undefined,
            "value": "MA89",
          },
          {
            "description": undefined,
            "value": "MA90",
          },
          {
            "description": undefined,
            "value": "MA91",
          },
          {
            "description": undefined,
            "value": "MA92",
          },
          {
            "description": undefined,
            "value": "MA93",
          },
          {
            "description": undefined,
            "value": "MA94",
          },
          {
            "description": undefined,
            "value": "MA96",
          },
          {
            "description": undefined,
            "value": "MA97",
          },
          {
            "description": undefined,
            "value": "MA99",
          },
          {
            "description": undefined,
            "value": "MA100",
          },
          {
            "description": undefined,
            "value": "MA103",
          },
          {
            "description": undefined,
            "value": "MA106",
          },
          {
            "description": undefined,
            "value": "MA107",
          },
          {
            "description": undefined,
            "value": "MA108",
          },
          {
            "description": undefined,
            "value": "MA109",
          },
          {
            "description": undefined,
            "value": "MA110",
          },
          {
            "description": undefined,
            "value": "MA111",
          },
          {
            "description": undefined,
            "value": "MA112",
          },
          {
            "description": undefined,
            "value": "MA113",
          },
          {
            "description": undefined,
            "value": "MA114",
          },
          {
            "description": undefined,
            "value": "MA115",
          },
          {
            "description": undefined,
            "value": "MA116",
          },
          {
            "description": undefined,
            "value": "MA117",
          },
          {
            "description": undefined,
            "value": "MA118",
          },
          {
            "description": undefined,
            "value": "MA120",
          },
          {
            "description": undefined,
            "value": "MA121",
          },
          {
            "description": undefined,
            "value": "MA122",
          },
          {
            "description": undefined,
            "value": "MA123",
          },
          {
            "description": undefined,
            "value": "MA125",
          },
          {
            "description": undefined,
            "value": "MA126",
          },
          {
            "description": undefined,
            "value": "MA128",
          },
          {
            "description": undefined,
            "value": "MA130",
          },
          {
            "description": undefined,
            "value": "MA131",
          },
          {
            "description": undefined,
            "value": "MA132",
          },
          {
            "description": undefined,
            "value": "MA133",
          },
          {
            "description": undefined,
            "value": "MA134",
          },
          {
            "description": undefined,
            "value": "N1",
          },
          {
            "description": undefined,
            "value": "N2",
          },
          {
            "description": undefined,
            "value": "N3",
          },
          {
            "description": undefined,
            "value": "N4",
          },
          {
            "description": undefined,
            "value": "N5",
          },
          {
            "description": undefined,
            "value": "N6",
          },
          {
            "description": undefined,
            "value": "N7",
          },
          {
            "description": undefined,
            "value": "N8",
          },
          {
            "description": undefined,
            "value": "N9",
          },
          {
            "description": undefined,
            "value": "N10",
          },
          {
            "description": undefined,
            "value": "N11",
          },
          {
            "description": undefined,
            "value": "N12",
          },
          {
            "description": undefined,
            "value": "N13",
          },
          {
            "description": undefined,
            "value": "N15",
          },
          {
            "description": undefined,
            "value": "N16",
          },
          {
            "description": undefined,
            "value": "N19",
          },
          {
            "description": undefined,
            "value": "N20",
          },
          {
            "description": undefined,
            "value": "N21",
          },
          {
            "description": undefined,
            "value": "N22",
          },
          {
            "description": undefined,
            "value": "N23",
          },
          {
            "description": undefined,
            "value": "N24",
          },
          {
            "description": undefined,
            "value": "N25",
          },
          {
            "description": undefined,
            "value": "N26",
          },
          {
            "description": undefined,
            "value": "N27",
          },
          {
            "description": undefined,
            "value": "N28",
          },
          {
            "description": undefined,
            "value": "N30",
          },
          {
            "description": undefined,
            "value": "N31",
          },
          {
            "description": undefined,
            "value": "N32",
          },
          {
            "description": undefined,
            "value": "N33",
          },
          {
            "description": undefined,
            "value": "N34",
          },
          {
            "description": undefined,
            "value": "N35",
          },
          {
            "description": undefined,
            "value": "N36",
          },
          {
            "description": undefined,
            "value": "N37",
          },
          {
            "description": undefined,
            "value": "N39",
          },
          {
            "description": undefined,
            "value": "N40",
          },
          {
            "description": undefined,
            "value": "N42",
          },
          {
            "description": undefined,
            "value": "N43",
          },
          {
            "description": undefined,
            "value": "N45",
          },
          {
            "description": undefined,
            "value": "N46",
          },
          {
            "description": undefined,
            "value": "N47",
          },
          {
            "description": undefined,
            "value": "N48",
          },
          {
            "description": undefined,
            "value": "N49",
          },
          {
            "description": undefined,
            "value": "N50",
          },
          {
            "description": undefined,
            "value": "N51",
          },
          {
            "description": undefined,
            "value": "N52",
          },
          {
            "description": undefined,
            "value": "N53",
          },
          {
            "description": undefined,
            "value": "N54",
          },
          {
            "description": undefined,
            "value": "N55",
          },
          {
            "description": undefined,
            "value": "N56",
          },
          {
            "description": undefined,
            "value": "N57",
          },
          {
            "description": undefined,
            "value": "N58",
          },
          {
            "description": undefined,
            "value": "N59",
          },
          {
            "description": undefined,
            "value": "N61",
          },
          {
            "description": undefined,
            "value": "N62",
          },
          {
            "description": undefined,
            "value": "N63",
          },
          {
            "description": undefined,
            "value": "N64",
          },
          {
            "description": undefined,
            "value": "N65",
          },
          {
            "description": undefined,
            "value": "N67",
          },
          {
            "description": undefined,
            "value": "N68",
          },
          {
            "description": undefined,
            "value": "N69",
          },
          {
            "description": undefined,
            "value": "N70",
          },
          {
            "description": undefined,
            "value": "N71",
          },
          {
            "description": undefined,
            "value": "N72",
          },
          {
            "description": undefined,
            "value": "N74",
          },
          {
            "description": undefined,
            "value": "N75",
          },
          {
            "description": undefined,
            "value": "N76",
          },
          {
            "description": undefined,
            "value": "N77",
          },
          {
            "description": undefined,
            "value": "N78",
          },
          {
            "description": undefined,
            "value": "N79",
          },
          {
            "description": undefined,
            "value": "N80",
          },
          {
            "description": undefined,
            "value": "N81",
          },
          {
            "description": undefined,
            "value": "N82",
          },
          {
            "description": undefined,
            "value": "N83",
          },
          {
            "description": undefined,
            "value": "N84",
          },
          {
            "description": undefined,
            "value": "N85",
          },
          {
            "description": undefined,
            "value": "N86",
          },
          {
            "description": undefined,
            "value": "N87",
          },
          {
            "description": undefined,
            "value": "N88",
          },
          {
            "description": undefined,
            "value": "N89",
          },
          {
            "description": undefined,
            "value": "N90",
          },
          {
            "description": undefined,
            "value": "N91",
          },
          {
            "description": undefined,
            "value": "N92",
          },
          {
            "description": undefined,
            "value": "N93",
          },
          {
            "description": undefined,
            "value": "N94",
          },
          {
            "description": undefined,
            "value": "N95",
          },
          {
            "description": undefined,
            "value": "N96",
          },
          {
            "description": undefined,
            "value": "N97",
          },
          {
            "description": undefined,
            "value": "N98",
          },
          {
            "description": undefined,
            "value": "N99",
          },
          {
            "description": undefined,
            "value": "N103",
          },
          {
            "description": undefined,
            "value": "N104",
          },
          {
            "description": undefined,
            "value": "N105",
          },
          {
            "description": undefined,
            "value": "N106",
          },
          {
            "description": undefined,
            "value": "N107",
          },
          {
            "description": undefined,
            "value": "N108",
          },
          {
            "description": undefined,
            "value": "N109",
          },
          {
            "description": undefined,
            "value": "N110",
          },
          {
            "description": undefined,
            "value": "N111",
          },
          {
            "description": undefined,
            "value": "N112",
          },
          {
            "description": undefined,
            "value": "N113",
          },
          {
            "description": undefined,
            "value": "N114",
          },
          {
            "description": undefined,
            "value": "N115",
          },
          {
            "description": undefined,
            "value": "N116",
          },
          {
            "description": undefined,
            "value": "N117",
          },
          {
            "description": undefined,
            "value": "N118",
          },
          {
            "description": undefined,
            "value": "N119",
          },
          {
            "description": undefined,
            "value": "N120",
          },
          {
            "description": undefined,
            "value": "N121",
          },
          {
            "description": undefined,
            "value": "N122",
          },
          {
            "description": undefined,
            "value": "N123",
          },
          {
            "description": undefined,
            "value": "N124",
          },
          {
            "description": undefined,
            "value": "N125",
          },
          {
            "description": undefined,
            "value": "N126",
          },
          {
            "description": undefined,
            "value": "N127",
          },
          {
            "description": undefined,
            "value": "N128",
          },
          {
            "description": undefined,
            "value": "N129",
          },
          {
            "description": undefined,
            "value": "N130",
          },
          {
            "description": undefined,
            "value": "N131",
          },
          {
            "description": undefined,
            "value": "N132",
          },
          {
            "description": undefined,
            "value": "N133",
          },
          {
            "description": undefined,
            "value": "N134",
          },
          {
            "description": undefined,
            "value": "N135",
          },
          {
            "description": undefined,
            "value": "N136",
          },
          {
            "description": undefined,
            "value": "N137",
          },
          {
            "description": undefined,
            "value": "N138",
          },
          {
            "description": undefined,
            "value": "N139",
          },
          {
            "description": undefined,
            "value": "N140",
          },
          {
            "description": undefined,
            "value": "N141",
          },
          {
            "description": undefined,
            "value": "N142",
          },
          {
            "description": undefined,
            "value": "N143",
          },
          {
            "description": undefined,
            "value": "N144",
          },
          {
            "description": undefined,
            "value": "N146",
          },
          {
            "description": undefined,
            "value": "N147",
          },
          {
            "description": undefined,
            "value": "N148",
          },
          {
            "description": undefined,
            "value": "N149",
          },
          {
            "description": undefined,
            "value": "N150",
          },
          {
            "description": undefined,
            "value": "N151",
          },
          {
            "description": undefined,
            "value": "N152",
          },
          {
            "description": undefined,
            "value": "N153",
          },
          {
            "description": undefined,
            "value": "N154",
          },
          {
            "description": undefined,
            "value": "N155",
          },
          {
            "description": undefined,
            "value": "N156",
          },
          {
            "description": undefined,
            "value": "N157",
          },
          {
            "description": undefined,
            "value": "N158",
          },
          {
            "description": undefined,
            "value": "N159",
          },
          {
            "description": undefined,
            "value": "N160",
          },
          {
            "description": undefined,
            "value": "N161",
          },
          {
            "description": undefined,
            "value": "N162",
          },
          {
            "description": undefined,
            "value": "N163",
          },
          {
            "description": undefined,
            "value": "N167",
          },
          {
            "description": undefined,
            "value": "N170",
          },
          {
            "description": undefined,
            "value": "N171",
          },
          {
            "description": undefined,
            "value": "N172",
          },
          {
            "description": undefined,
            "value": "N173",
          },
          {
            "description": undefined,
            "value": "N174",
          },
          {
            "description": undefined,
            "value": "N175",
          },
          {
            "description": undefined,
            "value": "N176",
          },
          {
            "description": undefined,
            "value": "N177",
          },
          {
            "description": undefined,
            "value": "N178",
          },
          {
            "description": undefined,
            "value": "N179",
          },
          {
            "description": undefined,
            "value": "N180",
          },
          {
            "description": undefined,
            "value": "N181",
          },
          {
            "description": undefined,
            "value": "N182",
          },
          {
            "description": undefined,
            "value": "N183",
          },
          {
            "description": undefined,
            "value": "N184",
          },
          {
            "description": undefined,
            "value": "N185",
          },
          {
            "description": undefined,
            "value": "N186",
          },
          {
            "description": undefined,
            "value": "N187",
          },
          {
            "description": undefined,
            "value": "N188",
          },
          {
            "description": undefined,
            "value": "N189",
          },
          {
            "description": undefined,
            "value": "N190",
          },
          {
            "description": undefined,
            "value": "N191",
          },
          {
            "description": undefined,
            "value": "N192",
          },
          {
            "description": undefined,
            "value": "N193",
          },
          {
            "description": undefined,
            "value": "N194",
          },
          {
            "description": undefined,
            "value": "N195",
          },
          {
            "description": undefined,
            "value": "N196",
          },
          {
            "description": undefined,
            "value": "N197",
          },
          {
            "description": undefined,
            "value": "N198",
          },
          {
            "description": undefined,
            "value": "N199",
          },
          {
            "description": undefined,
            "value": "N200",
          },
          {
            "description": undefined,
            "value": "N202",
          },
          {
            "description": undefined,
            "value": "N203",
          },
          {
            "description": undefined,
            "value": "N204",
          },
          {
            "description": undefined,
            "value": "N205",
          },
          {
            "description": undefined,
            "value": "N206",
          },
          {
            "description": undefined,
            "value": "N207",
          },
          {
            "description": undefined,
            "value": "N208",
          },
          {
            "description": undefined,
            "value": "N209",
          },
          {
            "description": undefined,
            "value": "N210",
          },
          {
            "description": undefined,
            "value": "N211",
          },
          {
            "description": undefined,
            "value": "N212",
          },
          {
            "description": undefined,
            "value": "N213",
          },
          {
            "description": undefined,
            "value": "N214",
          },
          {
            "description": undefined,
            "value": "N215",
          },
          {
            "description": undefined,
            "value": "N216",
          },
          {
            "description": undefined,
            "value": "N217",
          },
          {
            "description": undefined,
            "value": "N218",
          },
          {
            "description": undefined,
            "value": "N219",
          },
          {
            "description": undefined,
            "value": "N220",
          },
          {
            "description": undefined,
            "value": "N221",
          },
          {
            "description": undefined,
            "value": "N222",
          },
          {
            "description": undefined,
            "value": "N223",
          },
          {
            "description": undefined,
            "value": "N224",
          },
          {
            "description": undefined,
            "value": "N226",
          },
          {
            "description": undefined,
            "value": "N227",
          },
          {
            "description": undefined,
            "value": "N228",
          },
          {
            "description": undefined,
            "value": "N229",
          },
          {
            "description": undefined,
            "value": "N230",
          },
          {
            "description": undefined,
            "value": "N231",
          },
          {
            "description": undefined,
            "value": "N232",
          },
          {
            "description": undefined,
            "value": "N233",
          },
          {
            "description": undefined,
            "value": "N234",
          },
          {
            "description": undefined,
            "value": "N235",
          },
          {
            "description": undefined,
            "value": "N236",
          },
          {
            "description": undefined,
            "value": "N237",
          },
          {
            "description": undefined,
            "value": "N238",
          },
          {
            "description": undefined,
            "value": "N239",
          },
          {
            "description": undefined,
            "value": "N240",
          },
          {
            "description": undefined,
            "value": "N241",
          },
          {
            "description": undefined,
            "value": "N242",
          },
          {
            "description": undefined,
            "value": "N243",
          },
          {
            "description": undefined,
            "value": "N244",
          },
          {
            "description": undefined,
            "value": "N245",
          },
          {
            "description": undefined,
            "value": "N246",
          },
          {
            "description": undefined,
            "value": "N247",
          },
          {
            "description": undefined,
            "value": "N248",
          },
          {
            "description": undefined,
            "value": "N249",
          },
          {
            "description": undefined,
            "value": "N250",
          },
          {
            "description": undefined,
            "value": "N251",
          },
          {
            "description": undefined,
            "value": "N252",
          },
          {
            "description": undefined,
            "value": "N253",
          },
          {
            "description": undefined,
            "value": "N254",
          },
          {
            "description": undefined,
            "value": "N255",
          },
          {
            "description": undefined,
            "value": "N256",
          },
          {
            "description": undefined,
            "value": "N257",
          },
          {
            "description": undefined,
            "value": "N258",
          },
          {
            "description": undefined,
            "value": "N259",
          },
          {
            "description": undefined,
            "value": "N260",
          },
          {
            "description": undefined,
            "value": "N261",
          },
          {
            "description": undefined,
            "value": "N262",
          },
          {
            "description": undefined,
            "value": "N263",
          },
          {
            "description": undefined,
            "value": "N264",
          },
          {
            "description": undefined,
            "value": "N265",
          },
          {
            "description": undefined,
            "value": "N266",
          },
          {
            "description": undefined,
            "value": "N267",
          },
          {
            "description": undefined,
            "value": "N268",
          },
          {
            "description": undefined,
            "value": "N269",
          },
          {
            "description": undefined,
            "value": "N270",
          },
          {
            "description": undefined,
            "value": "N271",
          },
          {
            "description": undefined,
            "value": "N272",
          },
          {
            "description": undefined,
            "value": "N273",
          },
          {
            "description": undefined,
            "value": "N274",
          },
          {
            "description": undefined,
            "value": "N275",
          },
          {
            "description": undefined,
            "value": "N276",
          },
          {
            "description": undefined,
            "value": "N277",
          },
          {
            "description": undefined,
            "value": "N278",
          },
          {
            "description": undefined,
            "value": "N279",
          },
          {
            "description": undefined,
            "value": "N280",
          },
          {
            "description": undefined,
            "value": "N281",
          },
          {
            "description": undefined,
            "value": "N282",
          },
          {
            "description": undefined,
            "value": "N283",
          },
          {
            "description": undefined,
            "value": "N284",
          },
          {
            "description": undefined,
            "value": "N285",
          },
          {
            "description": undefined,
            "value": "N286",
          },
          {
            "description": undefined,
            "value": "N287",
          },
          {
            "description": undefined,
            "value": "N288",
          },
          {
            "description": undefined,
            "value": "N289",
          },
          {
            "description": undefined,
            "value": "N290",
          },
          {
            "description": undefined,
            "value": "N291",
          },
          {
            "description": undefined,
            "value": "N292",
          },
          {
            "description": undefined,
            "value": "N293",
          },
          {
            "description": undefined,
            "value": "N294",
          },
          {
            "description": undefined,
            "value": "N295",
          },
          {
            "description": undefined,
            "value": "N296",
          },
          {
            "description": undefined,
            "value": "N297",
          },
          {
            "description": undefined,
            "value": "N298",
          },
          {
            "description": undefined,
            "value": "N299",
          },
          {
            "description": undefined,
            "value": "N300",
          },
          {
            "description": undefined,
            "value": "N301",
          },
          {
            "description": undefined,
            "value": "N302",
          },
          {
            "description": undefined,
            "value": "N303",
          },
          {
            "description": undefined,
            "value": "N304",
          },
          {
            "description": undefined,
            "value": "N305",
          },
          {
            "description": undefined,
            "value": "N306",
          },
          {
            "description": undefined,
            "value": "N307",
          },
          {
            "description": undefined,
            "value": "N308",
          },
          {
            "description": undefined,
            "value": "N309",
          },
          {
            "description": undefined,
            "value": "N310",
          },
          {
            "description": undefined,
            "value": "N311",
          },
          {
            "description": undefined,
            "value": "N312",
          },
          {
            "description": undefined,
            "value": "N313",
          },
          {
            "description": undefined,
            "value": "N314",
          },
          {
            "description": undefined,
            "value": "N315",
          },
          {
            "description": undefined,
            "value": "N316",
          },
          {
            "description": undefined,
            "value": "N317",
          },
          {
            "description": undefined,
            "value": "N318",
          },
          {
            "description": undefined,
            "value": "N319",
          },
          {
            "description": undefined,
            "value": "N320",
          },
          {
            "description": undefined,
            "value": "N321",
          },
          {
            "description": undefined,
            "value": "N322",
          },
          {
            "description": undefined,
            "value": "N323",
          },
          {
            "description": undefined,
            "value": "N324",
          },
          {
            "description": undefined,
            "value": "N325",
          },
          {
            "description": undefined,
            "value": "N326",
          },
          {
            "description": undefined,
            "value": "N327",
          },
          {
            "description": undefined,
            "value": "N328",
          },
          {
            "description": undefined,
            "value": "N329",
          },
          {
            "description": undefined,
            "value": "N330",
          },
          {
            "description": undefined,
            "value": "N331",
          },
          {
            "description": undefined,
            "value": "N332",
          },
          {
            "description": undefined,
            "value": "N333",
          },
          {
            "description": undefined,
            "value": "N334",
          },
          {
            "description": undefined,
            "value": "N335",
          },
          {
            "description": undefined,
            "value": "N336",
          },
          {
            "description": undefined,
            "value": "N337",
          },
          {
            "description": undefined,
            "value": "N338",
          },
          {
            "description": undefined,
            "value": "N339",
          },
          {
            "description": undefined,
            "value": "N340",
          },
          {
            "description": undefined,
            "value": "N341",
          },
          {
            "description": undefined,
            "value": "N342",
          },
          {
            "description": undefined,
            "value": "N343",
          },
          {
            "description": undefined,
            "value": "N344",
          },
          {
            "description": undefined,
            "value": "N345",
          },
          {
            "description": undefined,
            "value": "N346",
          },
          {
            "description": undefined,
            "value": "N347",
          },
          {
            "description": undefined,
            "value": "N348",
          },
          {
            "description": undefined,
            "value": "N349",
          },
          {
            "description": undefined,
            "value": "N350",
          },
          {
            "description": undefined,
            "value": "N351",
          },
          {
            "description": undefined,
            "value": "N352",
          },
          {
            "description": undefined,
            "value": "N353",
          },
          {
            "description": undefined,
            "value": "N354",
          },
          {
            "description": undefined,
            "value": "N355",
          },
          {
            "description": undefined,
            "value": "N356",
          },
          {
            "description": undefined,
            "value": "N357",
          },
          {
            "description": undefined,
            "value": "N358",
          },
          {
            "description": undefined,
            "value": "N359",
          },
          {
            "description": undefined,
            "value": "N360",
          },
          {
            "description": undefined,
            "value": "N362",
          },
          {
            "description": undefined,
            "value": "N363",
          },
          {
            "description": undefined,
            "value": "N364",
          },
          {
            "description": undefined,
            "value": "N366",
          },
          {
            "description": undefined,
            "value": "N367",
          },
          {
            "description": undefined,
            "value": "N368",
          },
          {
            "description": undefined,
            "value": "N369",
          },
          {
            "description": undefined,
            "value": "N370",
          },
          {
            "description": undefined,
            "value": "N371",
          },
          {
            "description": undefined,
            "value": "N372",
          },
          {
            "description": undefined,
            "value": "N373",
          },
          {
            "description": undefined,
            "value": "N374",
          },
          {
            "description": undefined,
            "value": "N375",
          },
          {
            "description": undefined,
            "value": "N376",
          },
          {
            "description": undefined,
            "value": "N377",
          },
          {
            "description": undefined,
            "value": "N378",
          },
          {
            "description": undefined,
            "value": "N379",
          },
          {
            "description": undefined,
            "value": "N380",
          },
          {
            "description": undefined,
            "value": "N381",
          },
          {
            "description": undefined,
            "value": "N382",
          },
          {
            "description": undefined,
            "value": "N383",
          },
          {
            "description": undefined,
            "value": "N384",
          },
          {
            "description": undefined,
            "value": "N385",
          },
          {
            "description": undefined,
            "value": "N386",
          },
          {
            "description": undefined,
            "value": "N387",
          },
          {
            "description": undefined,
            "value": "N388",
          },
          {
            "description": undefined,
            "value": "N389",
          },
          {
            "description": undefined,
            "value": "N390",
          },
          {
            "description": undefined,
            "value": "N391",
          },
          {
            "description": undefined,
            "value": "N392",
          },
          {
            "description": undefined,
            "value": "N393",
          },
          {
            "description": undefined,
            "value": "N394",
          },
          {
            "description": undefined,
            "value": "N395",
          },
          {
            "description": undefined,
            "value": "N396",
          },
          {
            "description": undefined,
            "value": "N397",
          },
          {
            "description": undefined,
            "value": "N398",
          },
          {
            "description": undefined,
            "value": "N399",
          },
          {
            "description": undefined,
            "value": "N400",
          },
          {
            "description": undefined,
            "value": "N401",
          },
          {
            "description": undefined,
            "value": "N402",
          },
          {
            "description": undefined,
            "value": "N403",
          },
          {
            "description": undefined,
            "value": "N404",
          },
          {
            "description": undefined,
            "value": "N405",
          },
          {
            "description": undefined,
            "value": "N406",
          },
          {
            "description": undefined,
            "value": "N407",
          },
          {
            "description": undefined,
            "value": "N408",
          },
          {
            "description": undefined,
            "value": "N409",
          },
          {
            "description": undefined,
            "value": "N410",
          },
          {
            "description": undefined,
            "value": "N411",
          },
          {
            "description": undefined,
            "value": "N412",
          },
          {
            "description": undefined,
            "value": "N413",
          },
          {
            "description": undefined,
            "value": "N414",
          },
          {
            "description": undefined,
            "value": "N415",
          },
          {
            "description": undefined,
            "value": "N416",
          },
          {
            "description": undefined,
            "value": "N417",
          },
          {
            "description": undefined,
            "value": "N418",
          },
          {
            "description": undefined,
            "value": "N419",
          },
          {
            "description": undefined,
            "value": "N420",
          },
          {
            "description": undefined,
            "value": "N421",
          },
          {
            "description": undefined,
            "value": "N422",
          },
          {
            "description": undefined,
            "value": "N423",
          },
          {
            "description": undefined,
            "value": "N424",
          },
          {
            "description": undefined,
            "value": "N425",
          },
          {
            "description": undefined,
            "value": "N426",
          },
          {
            "description": undefined,
            "value": "N427",
          },
          {
            "description": undefined,
            "value": "N428",
          },
          {
            "description": undefined,
            "value": "N429",
          },
          {
            "description": undefined,
            "value": "N430",
          },
          {
            "description": undefined,
            "value": "N431",
          },
          {
            "description": undefined,
            "value": "N432",
          },
          {
            "description": undefined,
            "value": "N433",
          },
          {
            "description": undefined,
            "value": "N434",
          },
          {
            "description": undefined,
            "value": "N435",
          },
          {
            "description": undefined,
            "value": "N436",
          },
          {
            "description": undefined,
            "value": "N437",
          },
          {
            "description": undefined,
            "value": "N438",
          },
          {
            "description": undefined,
            "value": "N439",
          },
          {
            "description": undefined,
            "value": "N440",
          },
          {
            "description": undefined,
            "value": "N441",
          },
          {
            "description": undefined,
            "value": "N442",
          },
          {
            "description": undefined,
            "value": "N443",
          },
          {
            "description": undefined,
            "value": "N444",
          },
          {
            "description": undefined,
            "value": "N445",
          },
          {
            "description": undefined,
            "value": "N446",
          },
          {
            "description": undefined,
            "value": "N447",
          },
          {
            "description": undefined,
            "value": "N448",
          },
          {
            "description": undefined,
            "value": "N449",
          },
          {
            "description": undefined,
            "value": "N450",
          },
          {
            "description": undefined,
            "value": "N451",
          },
          {
            "description": undefined,
            "value": "N452",
          },
          {
            "description": undefined,
            "value": "N453",
          },
          {
            "description": undefined,
            "value": "N454",
          },
          {
            "description": undefined,
            "value": "N455",
          },
          {
            "description": undefined,
            "value": "N456",
          },
          {
            "description": undefined,
            "value": "N457",
          },
          {
            "description": undefined,
            "value": "N458",
          },
          {
            "description": undefined,
            "value": "N459",
          },
          {
            "description": undefined,
            "value": "N460",
          },
          {
            "description": undefined,
            "value": "N461",
          },
          {
            "description": undefined,
            "value": "N462",
          },
          {
            "description": undefined,
            "value": "N463",
          },
          {
            "description": undefined,
            "value": "N464",
          },
          {
            "description": undefined,
            "value": "N465",
          },
          {
            "description": undefined,
            "value": "N466",
          },
          {
            "description": undefined,
            "value": "N467",
          },
          {
            "description": undefined,
            "value": "N468",
          },
          {
            "description": undefined,
            "value": "N469",
          },
          {
            "description": undefined,
            "value": "N470",
          },
          {
            "description": undefined,
            "value": "N471",
          },
          {
            "description": undefined,
            "value": "N472",
          },
          {
            "description": undefined,
            "value": "N473",
          },
          {
            "description": undefined,
            "value": "N474",
          },
          {
            "description": undefined,
            "value": "N475",
          },
          {
            "description": undefined,
            "value": "N476",
          },
          {
            "description": undefined,
            "value": "N477",
          },
          {
            "description": undefined,
            "value": "N478",
          },
          {
            "description": undefined,
            "value": "N479",
          },
          {
            "description": undefined,
            "value": "N480",
          },
          {
            "description": undefined,
            "value": "N481",
          },
          {
            "description": undefined,
            "value": "N482",
          },
          {
            "description": undefined,
            "value": "N485",
          },
          {
            "description": undefined,
            "value": "N486",
          },
          {
            "description": undefined,
            "value": "N487",
          },
          {
            "description": undefined,
            "value": "N488",
          },
          {
            "description": undefined,
            "value": "N489",
          },
          {
            "description": undefined,
            "value": "N490",
          },
          {
            "description": undefined,
            "value": "N491",
          },
          {
            "description": undefined,
            "value": "N492",
          },
          {
            "description": undefined,
            "value": "N493",
          },
          {
            "description": undefined,
            "value": "N494",
          },
          {
            "description": undefined,
            "value": "N495",
          },
          {
            "description": undefined,
            "value": "N496",
          },
          {
            "description": undefined,
            "value": "N497",
          },
          {
            "description": undefined,
            "value": "N498",
          },
          {
            "description": undefined,
            "value": "N499",
          },
          {
            "description": undefined,
            "value": "N500",
          },
          {
            "description": undefined,
            "value": "N501",
          },
          {
            "description": undefined,
            "value": "N502",
          },
          {
            "description": undefined,
            "value": "N503",
          },
          {
            "description": undefined,
            "value": "N504",
          },
          {
            "description": undefined,
            "value": "N505",
          },
          {
            "description": undefined,
            "value": "N506",
          },
          {
            "description": undefined,
            "value": "N507",
          },
          {
            "description": undefined,
            "value": "N508",
          },
          {
            "description": undefined,
            "value": "N509",
          },
          {
            "description": undefined,
            "value": "N510",
          },
          {
            "description": undefined,
            "value": "N511",
          },
          {
            "description": undefined,
            "value": "N512",
          },
          {
            "description": undefined,
            "value": "N513",
          },
          {
            "description": undefined,
            "value": "N516",
          },
          {
            "description": undefined,
            "value": "N517",
          },
          {
            "description": undefined,
            "value": "N518",
          },
          {
            "description": undefined,
            "value": "N519",
          },
          {
            "description": undefined,
            "value": "N520",
          },
          {
            "description": undefined,
            "value": "N521",
          },
          {
            "description": undefined,
            "value": "N522",
          },
          {
            "description": undefined,
            "value": "N523",
          },
          {
            "description": undefined,
            "value": "N524",
          },
          {
            "description": undefined,
            "value": "N525",
          },
          {
            "description": undefined,
            "value": "N526",
          },
          {
            "description": undefined,
            "value": "N527",
          },
          {
            "description": undefined,
            "value": "N528",
          },
          {
            "description": undefined,
            "value": "N529",
          },
          {
            "description": undefined,
            "value": "N530",
          },
          {
            "description": undefined,
            "value": "N531",
          },
          {
            "description": undefined,
            "value": "N532",
          },
          {
            "description": undefined,
            "value": "N533",
          },
          {
            "description": undefined,
            "value": "N534",
          },
          {
            "description": undefined,
            "value": "N535",
          },
          {
            "description": undefined,
            "value": "N536",
          },
          {
            "description": undefined,
            "value": "N537",
          },
          {
            "description": undefined,
            "value": "N538",
          },
          {
            "description": undefined,
            "value": "N539",
          },
          {
            "description": undefined,
            "value": "N540",
          },
          {
            "description": undefined,
            "value": "N541",
          },
          {
            "description": undefined,
            "value": "N542",
          },
          {
            "description": undefined,
            "value": "N543",
          },
          {
            "description": undefined,
            "value": "N544",
          },
          {
            "description": undefined,
            "value": "N545",
          },
          {
            "description": undefined,
            "value": "N546",
          },
          {
            "description": undefined,
            "value": "N547",
          },
          {
            "description": undefined,
            "value": "N548",
          },
          {
            "description": undefined,
            "value": "N549",
          },
          {
            "description": undefined,
            "value": "N550",
          },
          {
            "description": undefined,
            "value": "N551",
          },
          {
            "description": undefined,
            "value": "N552",
          },
          {
            "description": undefined,
            "value": "N554",
          },
          {
            "description": undefined,
            "value": "N555",
          },
          {
            "description": undefined,
            "value": "N556",
          },
          {
            "description": undefined,
            "value": "N557",
          },
          {
            "description": undefined,
            "value": "N558",
          },
          {
            "description": undefined,
            "value": "N559",
          },
          {
            "description": undefined,
            "value": "N560",
          },
          {
            "description": undefined,
            "value": "N561",
          },
          {
            "description": undefined,
            "value": "N562",
          },
          {
            "description": undefined,
            "value": "N563",
          },
          {
            "description": undefined,
            "value": "N564",
          },
          {
            "description": undefined,
            "value": "N565",
          },
          {
            "description": undefined,
            "value": "N566",
          },
          {
            "description": undefined,
            "value": "N567",
          },
          {
            "description": undefined,
            "value": "N568",
          },
          {
            "description": undefined,
            "value": "N569",
          },
          {
            "description": undefined,
            "value": "N570",
          },
          {
            "description": undefined,
            "value": "N571",
          },
          {
            "description": undefined,
            "value": "N572",
          },
          {
            "description": undefined,
            "value": "N573",
          },
          {
            "description": undefined,
            "value": "N574",
          },
          {
            "description": undefined,
            "value": "N575",
          },
          {
            "description": undefined,
            "value": "N576",
          },
          {
            "description": undefined,
            "value": "N577",
          },
          {
            "description": undefined,
            "value": "N578",
          },
          {
            "description": undefined,
            "value": "N579",
          },
          {
            "description": undefined,
            "value": "N580",
          },
          {
            "description": undefined,
            "value": "N581",
          },
          {
            "description": undefined,
            "value": "N582",
          },
          {
            "description": undefined,
            "value": "N583",
          },
          {
            "description": undefined,
            "value": "N584",
          },
          {
            "description": undefined,
            "value": "N585",
          },
          {
            "description": undefined,
            "value": "N586",
          },
          {
            "description": undefined,
            "value": "N587",
          },
          {
            "description": undefined,
            "value": "N588",
          },
          {
            "description": undefined,
            "value": "N589",
          },
          {
            "description": undefined,
            "value": "N590",
          },
          {
            "description": undefined,
            "value": "N591",
          },
          {
            "description": undefined,
            "value": "N592",
          },
          {
            "description": undefined,
            "value": "N593",
          },
          {
            "description": undefined,
            "value": "N594",
          },
          {
            "description": undefined,
            "value": "N595",
          },
          {
            "description": undefined,
            "value": "N596",
          },
          {
            "description": undefined,
            "value": "N597",
          },
          {
            "description": undefined,
            "value": "N598",
          },
          {
            "description": undefined,
            "value": "N599",
          },
          {
            "description": undefined,
            "value": "N600",
          },
          {
            "description": undefined,
            "value": "N601",
          },
          {
            "description": undefined,
            "value": "N602",
          },
          {
            "description": undefined,
            "value": "N603",
          },
          {
            "description": undefined,
            "value": "N604",
          },
          {
            "description": undefined,
            "value": "N605",
          },
          {
            "description": undefined,
            "value": "N606",
          },
          {
            "description": undefined,
            "value": "N607",
          },
          {
            "description": undefined,
            "value": "N608",
          },
          {
            "description": undefined,
            "value": "N609",
          },
          {
            "description": undefined,
            "value": "N610",
          },
          {
            "description": undefined,
            "value": "N611",
          },
          {
            "description": undefined,
            "value": "N612",
          },
          {
            "description": undefined,
            "value": "N613",
          },
          {
            "description": undefined,
            "value": "N614",
          },
          {
            "description": undefined,
            "value": "N615",
          },
          {
            "description": undefined,
            "value": "N616",
          },
          {
            "description": undefined,
            "value": "N617",
          },
          {
            "description": undefined,
            "value": "N618",
          },
          {
            "description": undefined,
            "value": "N619",
          },
          {
            "description": undefined,
            "value": "N620",
          },
          {
            "description": undefined,
            "value": "N621",
          },
          {
            "description": undefined,
            "value": "N622",
          },
          {
            "description": undefined,
            "value": "N623",
          },
          {
            "description": undefined,
            "value": "N624",
          },
          {
            "description": undefined,
            "value": "N625",
          },
          {
            "description": undefined,
            "value": "N626",
          },
          {
            "description": undefined,
            "value": "N628",
          },
          {
            "description": undefined,
            "value": "N629",
          },
          {
            "description": undefined,
            "value": "N630",
          },
          {
            "description": undefined,
            "value": "N631",
          },
          {
            "description": undefined,
            "value": "N632",
          },
          {
            "description": undefined,
            "value": "N633",
          },
          {
            "description": undefined,
            "value": "N634",
          },
          {
            "description": undefined,
            "value": "N635",
          },
          {
            "description": undefined,
            "value": "N636",
          },
          {
            "description": undefined,
            "value": "N637",
          },
          {
            "description": undefined,
            "value": "N638",
          },
          {
            "description": undefined,
            "value": "N639",
          },
          {
            "description": undefined,
            "value": "N640",
          },
          {
            "description": undefined,
            "value": "N641",
          },
          {
            "description": undefined,
            "value": "N642",
          },
          {
            "description": undefined,
            "value": "N643",
          },
          {
            "description": undefined,
            "value": "N644",
          },
          {
            "description": undefined,
            "value": "N645",
          },
          {
            "description": undefined,
            "value": "N646",
          },
          {
            "description": undefined,
            "value": "N647",
          },
          {
            "description": undefined,
            "value": "N648",
          },
          {
            "description": undefined,
            "value": "N649",
          },
          {
            "description": undefined,
            "value": "N650",
          },
          {
            "description": undefined,
            "value": "N651",
          },
          {
            "description": undefined,
            "value": "N652",
          },
          {
            "description": undefined,
            "value": "N653",
          },
          {
            "description": undefined,
            "value": "N654",
          },
          {
            "description": undefined,
            "value": "N655",
          },
          {
            "description": undefined,
            "value": "N656",
          },
          {
            "description": undefined,
            "value": "N657",
          },
          {
            "description": undefined,
            "value": "N658",
          },
          {
            "description": undefined,
            "value": "N659",
          },
          {
            "description": undefined,
            "value": "N660",
          },
          {
            "description": undefined,
            "value": "N661",
          },
          {
            "description": undefined,
            "value": "N662",
          },
          {
            "description": undefined,
            "value": "N663",
          },
          {
            "description": undefined,
            "value": "N664",
          },
          {
            "description": undefined,
            "value": "N665",
          },
          {
            "description": undefined,
            "value": "N666",
          },
          {
            "description": undefined,
            "value": "N667",
          },
          {
            "description": undefined,
            "value": "N668",
          },
          {
            "description": undefined,
            "value": "N669",
          },
          {
            "description": undefined,
            "value": "N670",
          },
          {
            "description": undefined,
            "value": "N671",
          },
          {
            "description": undefined,
            "value": "N672",
          },
          {
            "description": undefined,
            "value": "N673",
          },
          {
            "description": undefined,
            "value": "N674",
          },
          {
            "description": undefined,
            "value": "N675",
          },
          {
            "description": undefined,
            "value": "N676",
          },
          {
            "description": undefined,
            "value": "N677",
          },
          {
            "description": undefined,
            "value": "N678",
          },
          {
            "description": undefined,
            "value": "N679",
          },
          {
            "description": undefined,
            "value": "N680",
          },
          {
            "description": undefined,
            "value": "N681",
          },
          {
            "description": undefined,
            "value": "N682",
          },
          {
            "description": undefined,
            "value": "N683",
          },
          {
            "description": undefined,
            "value": "N684",
          },
          {
            "description": undefined,
            "value": "N685",
          },
          {
            "description": undefined,
            "value": "N686",
          },
          {
            "description": undefined,
            "value": "N687",
          },
          {
            "description": undefined,
            "value": "N688",
          },
          {
            "description": undefined,
            "value": "N689",
          },
          {
            "description": undefined,
            "value": "N690",
          },
          {
            "description": undefined,
            "value": "N691",
          },
          {
            "description": undefined,
            "value": "N692",
          },
          {
            "description": undefined,
            "value": "N693",
          },
          {
            "description": undefined,
            "value": "N694",
          },
          {
            "description": undefined,
            "value": "N695",
          },
          {
            "description": undefined,
            "value": "N696",
          },
          {
            "description": undefined,
            "value": "N697",
          },
          {
            "description": undefined,
            "value": "N698",
          },
          {
            "description": undefined,
            "value": "N699",
          },
          {
            "description": undefined,
            "value": "N700",
          },
          {
            "description": undefined,
            "value": "N701",
          },
          {
            "description": undefined,
            "value": "N702",
          },
          {
            "description": undefined,
            "value": "N703",
          },
          {
            "description": undefined,
            "value": "N704",
          },
          {
            "description": undefined,
            "value": "N705",
          },
          {
            "description": undefined,
            "value": "N706",
          },
          {
            "description": undefined,
            "value": "N707",
          },
          {
            "description": undefined,
            "value": "N708",
          },
          {
            "description": undefined,
            "value": "N709",
          },
          {
            "description": undefined,
            "value": "N710",
          },
          {
            "description": undefined,
            "value": "N711",
          },
          {
            "description": undefined,
            "value": "N712",
          },
          {
            "description": undefined,
            "value": "N713",
          },
          {
            "description": undefined,
            "value": "N714",
          },
          {
            "description": undefined,
            "value": "N715",
          },
          {
            "description": undefined,
            "value": "N716",
          },
          {
            "description": undefined,
            "value": "N717",
          },
          {
            "description": undefined,
            "value": "N718",
          },
          {
            "description": undefined,
            "value": "N719",
          },
          {
            "description": undefined,
            "value": "N720",
          },
          {
            "description": undefined,
            "value": "N721",
          },
          {
            "description": undefined,
            "value": "N722",
          },
          {
            "description": undefined,
            "value": "N723",
          },
          {
            "description": undefined,
            "value": "N724",
          },
          {
            "description": undefined,
            "value": "N725",
          },
          {
            "description": undefined,
            "value": "N726",
          },
          {
            "description": undefined,
            "value": "N727",
          },
          {
            "description": undefined,
            "value": "N728",
          },
          {
            "description": undefined,
            "value": "N729",
          },
          {
            "description": undefined,
            "value": "N730",
          },
          {
            "description": undefined,
            "value": "N731",
          },
          {
            "description": undefined,
            "value": "N732",
          },
          {
            "description": undefined,
            "value": "N733",
          },
          {
            "description": undefined,
            "value": "N734",
          },
          {
            "description": undefined,
            "value": "N735",
          },
          {
            "description": undefined,
            "value": "N736",
          },
          {
            "description": undefined,
            "value": "N737",
          },
          {
            "description": undefined,
            "value": "N738",
          },
          {
            "description": undefined,
            "value": "N739",
          },
          {
            "description": undefined,
            "value": "N740",
          },
          {
            "description": undefined,
            "value": "N741",
          },
          {
            "description": undefined,
            "value": "N742",
          },
          {
            "description": undefined,
            "value": "N743",
          },
          {
            "description": undefined,
            "value": "N744",
          },
          {
            "description": undefined,
            "value": "N745",
          },
          {
            "description": undefined,
            "value": "N746",
          },
          {
            "description": undefined,
            "value": "N747",
          },
          {
            "description": undefined,
            "value": "N748",
          },
          {
            "description": undefined,
            "value": "N749",
          },
          {
            "description": undefined,
            "value": "N750",
          },
          {
            "description": undefined,
            "value": "N751",
          },
          {
            "description": undefined,
            "value": "N752",
          },
          {
            "description": undefined,
            "value": "N753",
          },
          {
            "description": undefined,
            "value": "N754",
          },
          {
            "description": undefined,
            "value": "N755",
          },
          {
            "description": undefined,
            "value": "N756",
          },
          {
            "description": undefined,
            "value": "N757",
          },
          {
            "description": undefined,
            "value": "N758",
          },
          {
            "description": undefined,
            "value": "N759",
          },
          {
            "description": undefined,
            "value": "N760",
          },
          {
            "description": undefined,
            "value": "N761",
          },
          {
            "description": undefined,
            "value": "N762",
          },
          {
            "description": undefined,
            "value": "N763",
          },
          {
            "description": undefined,
            "value": "N764",
          },
          {
            "description": undefined,
            "value": "N765",
          },
          {
            "description": undefined,
            "value": "N766",
          },
          {
            "description": undefined,
            "value": "N767",
          },
          {
            "description": undefined,
            "value": "N768",
          },
          {
            "description": undefined,
            "value": "N769",
          },
          {
            "description": undefined,
            "value": "N770",
          },
          {
            "description": undefined,
            "value": "N771",
          },
          {
            "description": undefined,
            "value": "N772",
          },
          {
            "description": undefined,
            "value": "N773",
          },
          {
            "description": undefined,
            "value": "N774",
          },
          {
            "description": undefined,
            "value": "N775",
          },
          {
            "description": undefined,
            "value": "N776",
          },
          {
            "description": undefined,
            "value": "N777",
          },
          {
            "description": undefined,
            "value": "N778",
          },
          {
            "description": undefined,
            "value": "N779",
          },
          {
            "description": undefined,
            "value": "N780",
          },
          {
            "description": undefined,
            "value": "N781",
          },
          {
            "description": undefined,
            "value": "N782",
          },
          {
            "description": undefined,
            "value": "N783",
          },
          {
            "description": undefined,
            "value": "N784",
          },
          {
            "description": undefined,
            "value": "N785",
          },
          {
            "description": undefined,
            "value": "N786",
          },
          {
            "description": undefined,
            "value": "N787",
          },
          {
            "description": undefined,
            "value": "N788",
          },
          {
            "description": undefined,
            "value": "N789",
          },
          {
            "description": undefined,
            "value": "N790",
          },
          {
            "description": undefined,
            "value": "N791",
          },
          {
            "description": undefined,
            "value": "N792",
          },
          {
            "description": undefined,
            "value": "N793",
          },
          {
            "description": undefined,
            "value": "N794",
          },
          {
            "description": undefined,
            "value": "N795",
          },
          {
            "description": undefined,
            "value": "N796",
          },
          {
            "description": undefined,
            "value": "N797",
          },
          {
            "description": undefined,
            "value": "N798",
          },
          {
            "description": undefined,
            "value": "N799",
          },
          {
            "description": undefined,
            "value": "N800",
          },
          {
            "description": undefined,
            "value": "N801",
          },
          {
            "description": undefined,
            "value": "N802",
          },
          {
            "description": undefined,
            "value": "N803",
          },
          {
            "description": undefined,
            "value": "N804",
          },
          {
            "description": undefined,
            "value": "N805",
          },
          {
            "description": undefined,
            "value": "N806",
          },
          {
            "description": undefined,
            "value": "N807",
          },
          {
            "description": undefined,
            "value": "N808",
          },
          {
            "description": undefined,
            "value": "N809",
          },
          {
            "description": undefined,
            "value": "N810",
          },
          {
            "description": undefined,
            "value": "N811",
          },
          {
            "description": undefined,
            "value": "N812",
          },
          {
            "description": undefined,
            "value": "N815",
          },
          {
            "description": undefined,
            "value": "N816",
          },
          {
            "description": undefined,
            "value": "N817",
          },
          {
            "description": undefined,
            "value": "N818",
          },
          {
            "description": undefined,
            "value": "N819",
          },
          {
            "description": undefined,
            "value": "N820",
          },
          {
            "description": undefined,
            "value": "N821",
          },
          {
            "description": undefined,
            "value": "N822",
          },
          {
            "description": undefined,
            "value": "N823",
          },
          {
            "description": undefined,
            "value": "N824",
          },
          {
            "description": undefined,
            "value": "N825",
          },
          {
            "description": undefined,
            "value": "N826",
          },
          {
            "description": undefined,
            "value": "N827",
          },
          {
            "description": undefined,
            "value": "N828",
          },
          {
            "description": undefined,
            "value": "N829",
          },
          {
            "description": undefined,
            "value": "N830",
          },
          {
            "description": undefined,
            "value": "N831",
          },
          {
            "description": undefined,
            "value": "N832",
          },
          {
            "description": undefined,
            "value": "N833",
          },
          {
            "description": undefined,
            "value": "N834",
          },
          {
            "description": undefined,
            "value": "N835",
          },
          {
            "description": undefined,
            "value": "N836",
          },
          {
            "description": undefined,
            "value": "N837",
          },
          {
            "description": undefined,
            "value": "N838",
          },
          {
            "description": undefined,
            "value": "N839",
          },
          {
            "description": undefined,
            "value": "N840",
          },
          {
            "description": undefined,
            "value": "N841",
          },
          {
            "description": undefined,
            "value": "N842",
          },
          {
            "description": undefined,
            "value": "N843",
          },
          {
            "description": undefined,
            "value": "N844",
          },
          {
            "description": undefined,
            "value": "N845",
          },
          {
            "description": undefined,
            "value": "N846",
          },
          {
            "description": undefined,
            "value": "N847",
          },
          {
            "description": undefined,
            "value": "N848",
          },
          {
            "description": undefined,
            "value": "N849",
          },
          {
            "description": undefined,
            "value": "N850",
          },
          {
            "description": undefined,
            "value": "N851",
          },
          {
            "description": undefined,
            "value": "N852",
          },
          {
            "description": undefined,
            "value": "N853",
          },
          {
            "description": undefined,
            "value": "N854",
          },
          {
            "description": undefined,
            "value": "N855",
          },
          {
            "description": undefined,
            "value": "N856",
          },
          {
            "description": undefined,
            "value": "N857",
          },
          {
            "description": undefined,
            "value": "N858",
          },
          {
            "description": undefined,
            "value": "N859",
          },
          {
            "description": undefined,
            "value": "N860",
          },
        ],
      },
    },
  },
}
`;

exports[`transformApiDefinitionToDb {"name":"cyclical-1"} 1`] = `
{
  "auth": {
    "headerWireValue": "Authorization",
    "nameOverride": "secretKey",
    "type": "header",
  },
  "globalHeaders": undefined,
  "hasMultipleBaseUrls": false,
  "id": "id",
  "navigation": undefined,
  "rootPackage": {
    "endpoints": [],
    "pointsTo": undefined,
    "subpackages": [
      "subpackage_transactions",
    ],
    "types": [],
    "webhooks": [],
    "websockets": [],
  },
  "subpackages": {
    "subpackage_transactions": {
      "description": undefined,
      "endpoints": [
        {
          "authed": false,
          "availability": undefined,
          "defaultEnvironment": "Production",
          "description": "Retrieves the user with the given ID.",
          "environments": [
            {
              "baseUrl": "https://api.buildwithfern.com",
              "id": "Production",
            },
            {
              "baseUrl": "https://staging.buildwithfern.com",
              "id": "Staging",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/transactions/:transaction_id",
              "pathParameters": {
                "transaction_id": ":transaction_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "creditor": {
                  "name": "string",
                },
                "debtor": {
                  "name": "string",
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "creditor": {
                    "name": "string",
                  },
                  "debtor": {
                    "name": "string",
                  },
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "get",
          "method": "GET",
          "migratedFromUrlSlugs": [
            "retrieve-a-transaction",
          ],
          "name": "Retrieve a transaction",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/transactions",
              },
              {
                "type": "literal",
                "value": "/",
              },
              {
                "type": "pathParameter",
                "value": "transaction_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "transaction_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_transactions:Transaction",
              },
            },
          },
          "urlSlug": "get",
        },
      ],
      "name": "transactions",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_transactions",
      "subpackages": [],
      "types": [
        "type_transactions:Transaction",
        "type_transactions:User",
      ],
      "urlSlug": "transactions",
      "webhooks": [],
      "websockets": [],
    },
  },
  "types": {
    "type_transactions:Transaction": {
      "availability": undefined,
      "description": undefined,
      "name": "Transaction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "creditor",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_transactions:User",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "debtor",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_transactions:User",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_transactions:User": {
      "availability": undefined,
      "description": undefined,
      "name": "User",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
  },
}
`;

exports[`transformApiDefinitionToDb {"name":"realtime"} 1`] = `
{
  "auth": {
    "tokenName": "token",
    "type": "bearerAuth",
  },
  "globalHeaders": [],
  "hasMultipleBaseUrls": false,
  "id": "id",
  "navigation": undefined,
  "rootPackage": {
    "endpoints": [],
    "pointsTo": undefined,
    "subpackages": [
      "subpackage_realtime",
    ],
    "types": [],
    "webhooks": [],
    "websockets": [],
  },
  "subpackages": {
    "subpackage_realtime": {
      "description": undefined,
      "endpoints": [],
      "name": "realtime",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_realtime",
      "subpackages": [],
      "types": [],
      "urlSlug": "realtime",
      "webhooks": [],
      "websockets": [
        {
          "auth": true,
          "availability": undefined,
          "defaultEnvironment": "Production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "wss://api.buildwithfern.com",
              "id": "Production",
            },
          ],
          "examples": [
            {
              "headers": {},
              "messages": [
                {
                  "body": "uvxcdv12344412b",
                  "type": "send",
                },
                {
                  "type": "receive",
                },
                {
                  "body": "uvxcdv12344412b",
                  "type": "send",
                },
              ],
              "name": "Default example",
              "path": "/realtime/doc_123",
              "pathParameters": {
                "id": "doc_123",
              },
              "queryParameters": {},
            },
          ],
          "headers": [],
          "id": "realtime",
          "messages": [
            {
              "body": {
                "type": "reference",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
              "displayName": "Send",
              "origin": "client",
              "type": "send",
            },
            {
              "body": {
                "extends": [],
                "properties": [],
                "type": "object",
              },
              "displayName": "Receive",
              "origin": "server",
              "type": "receive",
            },
          ],
          "name": "Realtime",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "/realtime/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "",
              },
              {
                "type": "literal",
                "value": "/realtime/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": [
            {
              "key": "model",
              "type": {
                "itemType": {
                  "type": "id",
                  "value": "type_realtime:Model",
                },
                "type": "optional",
              },
            },
            {
              "key": "temperature",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
          ],
          "urlSlug": "realtime",
        },
      ],
    },
  },
  "types": {},
}
`;

exports[`transformApiDefinitionToDb {"name":"string"} 1`] = `
{
  "auth": {
    "headerWireValue": "Authorization",
    "nameOverride": "MyAuthScheme",
    "type": "header",
  },
  "globalHeaders": undefined,
  "hasMultipleBaseUrls": false,
  "id": "id",
  "navigation": undefined,
  "rootPackage": {
    "endpoints": [],
    "pointsTo": undefined,
    "subpackages": [
      "subpackage_lcf",
    ],
    "types": [],
    "webhooks": [],
    "websockets": [],
  },
  "subpackages": {
    "subpackage_lcf": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "Production",
          "description": "For a shipment, find the lowest cost shipping option based on provided parameters.",
          "environments": [
            {
              "baseUrl": "https://api.meetstring.com",
              "id": "Production",
            },
          ],
          "errors": [
            {
              "statusCode": 401,
            },
          ],
          "errorsV2": [
            {
              "name": undefined,
              "statusCode": 401,
              "type": undefined,
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/lcf",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "order": {
                  "deliveryCommitment": 3,
                  "orderId": "shopify_12345",
                  "package": {
                    "dimensions": [
                      14,
                      10,
                      3,
                    ],
                    "weight": 1.5,
                  },
                  "shipTo": {
                    "city": "Washington DC",
                    "country": "US",
                    "isResidential": false,
                    "postalCode": "20500",
                    "state": "Washington DC",
                    "street1": "1600 Pennsylvania Avenue NW",
                  },
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "order": {
                    "deliveryCommitment": 3,
                    "orderId": "shopify_12345",
                    "package": {
                      "dimensions": [
                        14,
                        10,
                        3,
                      ],
                      "weight": 1.5,
                    },
                    "shipTo": {
                      "city": "Washington DC",
                      "country": "US",
                      "isResidential": false,
                      "postalCode": "20500",
                      "state": "Washington DC",
                      "street1": "1600 Pennsylvania Avenue NW",
                    },
                  },
                },
              },
              "responseBody": {
                "comments": [],
                "orderId": "shopify_12345",
                "parcel": {
                  "dimensions": {
                    "height": 3,
                    "length": 14,
                    "units": "inches",
                    "width": 10,
                  },
                  "name": "CUSTOM_PACKAGE",
                  "weight": {
                    "unit": "pounds",
                    "value": 1.5,
                  },
                },
                "service": {
                  "accountNumber": "acc_1234",
                  "carrier": "carrier",
                  "cost": 2,
                  "deliveryDate": "2017-07-21",
                  "saturdayDelivery": false,
                  "service": "service",
                },
                "shipTo": {
                  "city": "Washington DC",
                  "country": "US",
                  "isResidential": false,
                  "postalCode": "20500",
                  "state": "Washington DC",
                  "street1": "1600 Pennsylvania Avenue NW",
                },
                "tags": [],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "comments": [],
                  "orderId": "shopify_12345",
                  "parcel": {
                    "dimensions": {
                      "height": 3,
                      "length": 14,
                      "units": "inches",
                      "width": 10,
                    },
                    "name": "CUSTOM_PACKAGE",
                    "weight": {
                      "unit": "pounds",
                      "value": 1.5,
                    },
                  },
                  "service": {
                    "accountNumber": "acc_1234",
                    "carrier": "carrier",
                    "cost": 2,
                    "deliveryDate": "2017-07-21",
                    "saturdayDelivery": false,
                    "service": "service",
                  },
                  "shipTo": {
                    "city": "Washington DC",
                    "country": "US",
                    "isResidential": false,
                    "postalCode": "20500",
                    "state": "Washington DC",
                    "street1": "1600 Pennsylvania Avenue NW",
                  },
                  "tags": [],
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "CreateLeastCostFulfillment",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create Least Cost Fulfillment",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "",
              },
              {
                "type": "literal",
                "value": "/lcf",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_lcf:CreateLcfRequest",
              },
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_lcf:LeastCostFulfillment",
              },
            },
          },
          "urlSlug": "create-least-cost-fulfillment",
        },
      ],
      "name": "lcf",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_lcf",
      "subpackages": [],
      "types": [
        "type_lcf:CreateLcfRequest",
        "type_lcf:Order",
        "type_lcf:OrderId",
        "type_lcf:ShipTo",
        "type_lcf:Country",
        "type_lcf:Package",
        "type_lcf:Dimensions",
        "type_lcf:Weight",
        "type_lcf:LeastCostFulfillment",
        "type_lcf:Service",
        "type_lcf:Parcel",
        "type_lcf:ParcelDimensions",
        "type_lcf:ParcelWeight",
      ],
      "urlSlug": "lcf",
      "webhooks": [],
      "websockets": [],
    },
  },
  "types": {
    "type_lcf:Country": {
      "availability": undefined,
      "description": "The country you're shipping an order to.  Only 'US' is supported at this time.",
      "name": "Country",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "US",
          },
        ],
      },
    },
    "type_lcf:CreateLcfRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "CreateLcfRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "order",
            "valueType": {
              "type": "id",
              "value": "type_lcf:Order",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:Dimensions": {
      "availability": undefined,
      "description": "The length, width, and height of the package in inches.  Order does not matter.",
      "name": "Dimensions",
      "shape": {
        "type": "alias",
        "value": {
          "itemType": {
            "type": "primitive",
            "value": {
              "type": "double",
            },
          },
          "type": "set",
        },
      },
    },
    "type_lcf:LeastCostFulfillment": {
      "availability": undefined,
      "description": undefined,
      "name": "LeastCostFulfillment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "orderId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "shipTo",
            "valueType": {
              "type": "id",
              "value": "type_lcf:ShipTo",
            },
          },
          {
            "availability": undefined,
            "description": "An array of tags with high level information about the prediction String just made.",
            "key": "tags",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "set",
            },
          },
          {
            "availability": undefined,
            "description": "An array of comments with detailed information about the prediction String just made.
First comment includes the carrier, service code, account, cost, and package
",
            "key": "comments",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "set",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "service",
            "valueType": {
              "type": "id",
              "value": "type_lcf:Service",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "parcel",
            "valueType": {
              "type": "id",
              "value": "type_lcf:Parcel",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:Order": {
      "availability": undefined,
      "description": undefined,
      "name": "Order",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "A unique identifier for the order.",
            "key": "orderId",
            "valueType": {
              "type": "id",
              "value": "type_lcf:OrderId",
            },
          },
          {
            "availability": undefined,
            "description": "The address the order is being shipped to.",
            "key": "shipTo",
            "valueType": {
              "type": "id",
              "value": "type_lcf:ShipTo",
            },
          },
          {
            "availability": undefined,
            "description": "The number of days from the order date that the order must be 
delivered to the customer by.  If no limit, set as null.
",
            "key": "deliveryCommitment",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The dimensions and weight of the package being shipped.",
            "key": "package",
            "valueType": {
              "type": "id",
              "value": "type_lcf:Package",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:OrderId": {
      "availability": undefined,
      "description": "The unique identifier for the order, this can be an order number from your Shopify store for example.",
      "name": "OrderId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
          },
        },
      },
    },
    "type_lcf:Package": {
      "availability": undefined,
      "description": undefined,
      "name": "Package",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "dimensions",
            "valueType": {
              "type": "id",
              "value": "type_lcf:Dimensions",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "weight",
            "valueType": {
              "type": "id",
              "value": "type_lcf:Weight",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:Parcel": {
      "availability": undefined,
      "description": undefined,
      "name": "Parcel",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The name of the package String reccomends.
Defaults to 'CUSTOM_PACKAGE' if the user provides a package.
",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "dimensions",
            "valueType": {
              "type": "id",
              "value": "type_lcf:ParcelDimensions",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "weight",
            "valueType": {
              "type": "id",
              "value": "type_lcf:ParcelWeight",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:ParcelDimensions": {
      "availability": undefined,
      "description": undefined,
      "name": "ParcelDimensions",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The units of measurement for the package dimensions.  Only 'inches' is supported at this time.",
            "key": "units",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The length of the package in inches.",
            "key": "length",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The width of the package in inches.",
            "key": "width",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The height of the package in inches.",
            "key": "height",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:ParcelWeight": {
      "availability": undefined,
      "description": undefined,
      "name": "ParcelWeight",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The weight of the package in pounds.",
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The units of measurement for the package weight.  Only 'pounds' is supported at this time.",
            "key": "unit",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:Service": {
      "availability": undefined,
      "description": undefined,
      "name": "Service",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The carrier that will be used to ship the package.",
            "key": "carrier",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The service code that will be used to ship the package.",
            "key": "service",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "An RFC 3339, section 5.6 date (YYYY-MM-DD). For example, 2017-07-21.",
            "key": "deliveryDate",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "date",
              },
            },
          },
          {
            "availability": undefined,
            "description": "If the package can be delivered by the carrier on Saturday. 'True' only possible for UPS and FedEx.",
            "key": "saturdayDelivery",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
          {
            "availability": undefined,
            "description": "You carrier account that will be used to ship the package.",
            "key": "accountNumber",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The cost of the shipping label String recommends.",
            "key": "cost",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:ShipTo": {
      "availability": undefined,
      "description": undefined,
      "name": "ShipTo",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The street address you're shipping an order to.  If your customer has a second address line, like an apartment number add street2.",
            "key": "street1",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "street2",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The city you're shipping an order to'.",
            "key": "city",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The state you're shipping an order to. 
Two digit code.  For example, 'CA' for California.
",
            "key": "state",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The postal code you're shipping an order to. 
This must be a 5 or 9 digit numerical code.  If 9 digits, you must include a hyphen between the first 5 and last 4 digits.
",
            "key": "postalCode",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "country",
            "valueType": {
              "type": "id",
              "value": "type_lcf:Country",
            },
          },
          {
            "availability": undefined,
            "description": "If residential, set as true.  If commercial, set as false.",
            "key": "isResidential",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_lcf:Weight": {
      "availability": undefined,
      "description": "The weight of the package in pounds. Include up to 2 decimal places.",
      "name": "Weight",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "double",
          },
        },
      },
    },
  },
}
`;

exports[`transformApiDefinitionToDb {"name":"vellum"} 1`] = `
{
  "auth": {
    "headerWireValue": "X_API_KEY",
    "nameOverride": "apiKey",
    "type": "header",
  },
  "globalHeaders": undefined,
  "hasMultipleBaseUrls": true,
  "id": "id",
  "navigation": undefined,
  "rootPackage": {
    "endpoints": [
      {
        "authed": true,
        "availability": undefined,
        "defaultEnvironment": "Production",
        "description": "Executes a deployed Workflow and streams back its results.",
        "environments": [
          {
            "baseUrl": "https://predict.vellum.ai",
            "id": "Production",
          },
        ],
        "errors": [
          {
            "statusCode": 400,
            "type": {
              "type": "unknown",
            },
          },
          {
            "statusCode": 404,
            "type": {
              "type": "unknown",
            },
          },
          {
            "statusCode": 500,
            "type": {
              "type": "unknown",
            },
          },
        ],
        "errorsV2": [
          {
            "name": undefined,
            "statusCode": 400,
            "type": {
              "type": "alias",
              "value": {
                "type": "unknown",
              },
            },
          },
          {
            "name": undefined,
            "statusCode": 404,
            "type": {
              "type": "alias",
              "value": {
                "type": "unknown",
              },
            },
          },
          {
            "name": undefined,
            "statusCode": 500,
            "type": {
              "type": "alias",
              "value": {
                "type": "unknown",
              },
            },
          },
        ],
        "examples": [
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/execute-workflow-stream",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "inputs": [
                {
                  "name": "string",
                  "type": "STRING",
                  "value": "string",
                },
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "inputs": [
                  {
                    "name": "string",
                    "type": "STRING",
                    "value": "string",
                  },
                ],
              },
            },
            "responseBody": undefined,
            "responseBodyV3": undefined,
            "responseStatusCode": 200,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/execute-workflow-stream",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "inputs": [
                {
                  "name": "string",
                  "type": "STRING",
                  "value": "string",
                },
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "inputs": [
                  {
                    "name": "string",
                    "type": "STRING",
                    "value": "string",
                  },
                ],
              },
            },
            "responseBody": {},
            "responseBodyV3": {
              "type": "json",
              "value": {},
            },
            "responseStatusCode": 400,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/execute-workflow-stream",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "inputs": [
                {
                  "name": "string",
                  "type": "STRING",
                  "value": "string",
                },
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "inputs": [
                  {
                    "name": "string",
                    "type": "STRING",
                    "value": "string",
                  },
                ],
              },
            },
            "responseBody": {},
            "responseBodyV3": {
              "type": "json",
              "value": {},
            },
            "responseStatusCode": 404,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/execute-workflow-stream",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "inputs": [
                {
                  "name": "string",
                  "type": "STRING",
                  "value": "string",
                },
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "inputs": [
                  {
                    "name": "string",
                    "type": "STRING",
                    "value": "string",
                  },
                ],
              },
            },
            "responseBody": {},
            "responseBodyV3": {
              "type": "json",
              "value": {},
            },
            "responseStatusCode": 500,
          },
        ],
        "headers": [],
        "id": "execute-workflow-stream",
        "method": "POST",
        "migratedFromUrlSlugs": undefined,
        "name": "Execute Workflow Stream",
        "path": {
          "parts": [
            {
              "type": "literal",
              "value": "",
            },
            {
              "type": "literal",
              "value": "/v1/execute-workflow-stream",
            },
          ],
          "pathParameters": [],
        },
        "queryParameters": [],
        "request": {
          "contentType": "application/json",
          "description": undefined,
          "type": {
            "extends": [],
            "properties": [
              {
                "description": "The ID of the Workflow Deployment. Must provide either this or workflow_deployment_name.",
                "key": "workflow_deployment_id",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              {
                "description": "The name of the Workflow Deployment. Must provide either this or workflow_deployment_id.",
                "key": "workflow_deployment_name",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              {
                "description": "Optionally specify a release tag if you want to pin to a specific release of the Workflow Deployment",
                "key": "release_tag",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              {
                "key": "inputs",
                "valueType": {
                  "itemType": {
                    "type": "id",
                    "value": "type_:WorkflowRequestInputRequest",
                  },
                  "type": "list",
                },
              },
              {
                "description": "Optionally include a unique identifier for tracking purposes.",
                "key": "external_id",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              {
                "description": "Optionally specify which events you want to receive. Defaults to only WORKFLOW events. Note that the schema of non-WORKFLOW events is unstable and should be used with caution.",
                "key": "event_types",
                "valueType": {
                  "itemType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_:WorkflowExecutionEventType",
                    },
                    "type": "list",
                  },
                  "type": "optional",
                },
              },
            ],
            "type": "object",
          },
        },
        "response": undefined,
        "urlSlug": "execute-workflow-stream",
      },
      {
        "authed": true,
        "availability": "GenerallyAvailable",
        "defaultEnvironment": "Production",
        "description": "Generate a completion using a previously defined deployment.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
        "environments": [
          {
            "baseUrl": "https://predict.vellum.ai",
            "id": "Production",
          },
        ],
        "errors": [
          {
            "statusCode": 400,
            "type": {
              "type": "unknown",
            },
          },
          {
            "statusCode": 403,
            "type": {
              "type": "id",
              "value": "type_:GenerateErrorResponse",
            },
          },
          {
            "statusCode": 404,
            "type": {
              "type": "unknown",
            },
          },
          {
            "statusCode": 500,
            "type": {
              "type": "unknown",
            },
          },
        ],
        "errorsV2": [
          {
            "name": undefined,
            "statusCode": 400,
            "type": {
              "type": "alias",
              "value": {
                "type": "unknown",
              },
            },
          },
          {
            "name": undefined,
            "statusCode": 403,
            "type": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_:GenerateErrorResponse",
              },
            },
          },
          {
            "name": undefined,
            "statusCode": 404,
            "type": {
              "type": "alias",
              "value": {
                "type": "unknown",
              },
            },
          },
          {
            "name": undefined,
            "statusCode": 500,
            "type": {
              "type": "alias",
              "value": {
                "type": "unknown",
              },
            },
          },
        ],
        "examples": [
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/generate",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "requests": [
                {
                  "input_values": {
                    "string": {},
                  },
                },
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "requests": [
                  {
                    "input_values": {
                      "string": {},
                    },
                  },
                ],
              },
            },
            "responseBody": {
              "results": [
                {
                  "data": {
                    "completions": [
                      {
                        "external_id": "string",
                        "finish_reason": "LENGTH",
                        "id": "string",
                        "logprobs": {
                          "likelihood": 1,
                          "tokens": [
                            {
                              "logprob": 1,
                              "text_offset": 0,
                              "token": "string",
                              "top_logprobs": {
                                "string": 1,
                              },
                            },
                          ],
                        },
                        "model_version_id": "string",
                        "text": "string",
                        "type": "STRING",
                      },
                    ],
                  },
                  "error": {
                    "message": "string",
                  },
                },
              ],
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "results": [
                  {
                    "data": {
                      "completions": [
                        {
                          "external_id": "string",
                          "finish_reason": "LENGTH",
                          "id": "string",
                          "logprobs": {
                            "likelihood": 1,
                            "tokens": [
                              {
                                "logprob": 1,
                                "text_offset": 0,
                                "token": "string",
                                "top_logprobs": {
                                  "string": 1,
                                },
                              },
                            ],
                          },
                          "model_version_id": "string",
                          "text": "string",
                          "type": "STRING",
                        },
                      ],
                    },
                    "error": {
                      "message": "string",
                    },
                  },
                ],
              },
            },
            "responseStatusCode": 200,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/generate",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "requests": [
                {
                  "input_values": {
                    "string": {},
                  },
                },
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "requests": [
                  {
                    "input_values": {
                      "string": {},
                    },
                  },
                ],
              },
            },
            "responseBody": {},
            "responseBodyV3": {
              "type": "json",
              "value": {},
            },
            "responseStatusCode": 400,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/generate",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "requests": [
                {
                  "input_values": {
                    "string": {},
                  },
                },
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "requests": [
                  {
                    "input_values": {
                      "string": {},
                    },
                  },
                ],
              },
            },
            "responseBody": {
              "detail": "string",
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "detail": "string",
              },
            },
            "responseStatusCode": 403,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/generate",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "requests": [
                {
                  "input_values": {
                    "string": {},
                  },
                },
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "requests": [
                  {
                    "input_values": {
                      "string": {},
                    },
                  },
                ],
              },
            },
            "responseBody": {},
            "responseBodyV3": {
              "type": "json",
              "value": {},
            },
            "responseStatusCode": 404,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/generate",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "requests": [
                {
                  "input_values": {
                    "string": {},
                  },
                },
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "requests": [
                  {
                    "input_values": {
                      "string": {},
                    },
                  },
                ],
              },
            },
            "responseBody": {},
            "responseBodyV3": {
              "type": "json",
              "value": {},
            },
            "responseStatusCode": 500,
          },
        ],
        "headers": [],
        "id": "generate",
        "method": "POST",
        "migratedFromUrlSlugs": undefined,
        "name": "Generate",
        "path": {
          "parts": [
            {
              "type": "literal",
              "value": "",
            },
            {
              "type": "literal",
              "value": "/v1/generate",
            },
          ],
          "pathParameters": [],
        },
        "queryParameters": [],
        "request": {
          "contentType": "application/json",
          "description": undefined,
          "type": {
            "extends": [],
            "properties": [
              {
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "key": "deployment_id",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              {
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "key": "deployment_name",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              {
                "description": "The generation requests to make. Supplying multiple will perform a bulk request to the LLM provided when possible.",
                "key": "requests",
                "valueType": {
                  "itemType": {
                    "type": "id",
                    "value": "type_:GenerateRequest",
                  },
                  "type": "list",
                },
              },
              {
                "description": "Additional configuration that can be used to control what's included in the response.",
                "key": "options",
                "valueType": {
                  "itemType": {
                    "type": "id",
                    "value": "type_:GenerateOptionsRequest",
                  },
                  "type": "optional",
                },
              },
            ],
            "type": "object",
          },
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "type_:GenerateResponse",
            },
          },
        },
        "urlSlug": "generate",
      },
      {
        "authed": true,
        "availability": "GenerallyAvailable",
        "defaultEnvironment": "Production",
        "description": "Generate a stream of completions using a previously defined deployment.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
        "environments": [
          {
            "baseUrl": "https://predict.vellum.ai",
            "id": "Production",
          },
        ],
        "errors": [
          {
            "statusCode": 400,
            "type": {
              "type": "unknown",
            },
          },
          {
            "statusCode": 403,
            "type": {
              "type": "id",
              "value": "type_:GenerateErrorResponse",
            },
          },
          {
            "statusCode": 404,
            "type": {
              "type": "unknown",
            },
          },
          {
            "statusCode": 500,
            "type": {
              "type": "unknown",
            },
          },
        ],
        "errorsV2": [
          {
            "name": undefined,
            "statusCode": 400,
            "type": {
              "type": "alias",
              "value": {
                "type": "unknown",
              },
            },
          },
          {
            "name": undefined,
            "statusCode": 403,
            "type": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_:GenerateErrorResponse",
              },
            },
          },
          {
            "name": undefined,
            "statusCode": 404,
            "type": {
              "type": "alias",
              "value": {
                "type": "unknown",
              },
            },
          },
          {
            "name": undefined,
            "statusCode": 500,
            "type": {
              "type": "alias",
              "value": {
                "type": "unknown",
              },
            },
          },
        ],
        "examples": [
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/generate-stream",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "requests": [
                {
                  "input_values": {
                    "string": {},
                  },
                },
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "requests": [
                  {
                    "input_values": {
                      "string": {},
                    },
                  },
                ],
              },
            },
            "responseBody": undefined,
            "responseBodyV3": undefined,
            "responseStatusCode": 200,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/generate-stream",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "requests": [
                {
                  "input_values": {
                    "string": {},
                  },
                },
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "requests": [
                  {
                    "input_values": {
                      "string": {},
                    },
                  },
                ],
              },
            },
            "responseBody": {},
            "responseBodyV3": {
              "type": "json",
              "value": {},
            },
            "responseStatusCode": 400,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/generate-stream",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "requests": [
                {
                  "input_values": {
                    "string": {},
                  },
                },
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "requests": [
                  {
                    "input_values": {
                      "string": {},
                    },
                  },
                ],
              },
            },
            "responseBody": {
              "detail": "string",
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "detail": "string",
              },
            },
            "responseStatusCode": 403,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/generate-stream",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "requests": [
                {
                  "input_values": {
                    "string": {},
                  },
                },
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "requests": [
                  {
                    "input_values": {
                      "string": {},
                    },
                  },
                ],
              },
            },
            "responseBody": {},
            "responseBodyV3": {
              "type": "json",
              "value": {},
            },
            "responseStatusCode": 404,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/generate-stream",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "requests": [
                {
                  "input_values": {
                    "string": {},
                  },
                },
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "requests": [
                  {
                    "input_values": {
                      "string": {},
                    },
                  },
                ],
              },
            },
            "responseBody": {},
            "responseBodyV3": {
              "type": "json",
              "value": {},
            },
            "responseStatusCode": 500,
          },
        ],
        "headers": [],
        "id": "generate-stream",
        "method": "POST",
        "migratedFromUrlSlugs": undefined,
        "name": "Generate Stream",
        "path": {
          "parts": [
            {
              "type": "literal",
              "value": "",
            },
            {
              "type": "literal",
              "value": "/v1/generate-stream",
            },
          ],
          "pathParameters": [],
        },
        "queryParameters": [],
        "request": {
          "contentType": "application/json",
          "description": undefined,
          "type": {
            "extends": [],
            "properties": [
              {
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "key": "deployment_id",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              {
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "key": "deployment_name",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              {
                "description": "The generation requests to make. Supplying multiple will perform a bulk request to the LLM provided when possible.",
                "key": "requests",
                "valueType": {
                  "itemType": {
                    "type": "id",
                    "value": "type_:GenerateRequest",
                  },
                  "type": "list",
                },
              },
              {
                "description": "Additional configuration that can be used to control what's included in the response.",
                "key": "options",
                "valueType": {
                  "itemType": {
                    "type": "id",
                    "value": "type_:GenerateOptionsRequest",
                  },
                  "type": "optional",
                },
              },
            ],
            "type": "object",
          },
        },
        "response": undefined,
        "urlSlug": "generate-stream",
      },
      {
        "authed": true,
        "availability": "GenerallyAvailable",
        "defaultEnvironment": "Production",
        "description": "Perform a search against a document index.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
        "environments": [
          {
            "baseUrl": "https://predict.vellum.ai",
            "id": "Production",
          },
        ],
        "errors": [
          {
            "statusCode": 400,
            "type": {
              "type": "unknown",
            },
          },
          {
            "statusCode": 404,
            "type": {
              "type": "unknown",
            },
          },
          {
            "statusCode": 500,
            "type": {
              "type": "unknown",
            },
          },
        ],
        "errorsV2": [
          {
            "name": undefined,
            "statusCode": 400,
            "type": {
              "type": "alias",
              "value": {
                "type": "unknown",
              },
            },
          },
          {
            "name": undefined,
            "statusCode": 404,
            "type": {
              "type": "alias",
              "value": {
                "type": "unknown",
              },
            },
          },
          {
            "name": undefined,
            "statusCode": 500,
            "type": {
              "type": "alias",
              "value": {
                "type": "unknown",
              },
            },
          },
        ],
        "examples": [
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/search",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "query": "string",
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "query": "string",
              },
            },
            "responseBody": {
              "results": [
                {
                  "document": {
                    "external_id": "string",
                    "id": "string",
                    "label": "string",
                    "metadata": {
                      "string": {},
                    },
                  },
                  "keywords": [
                    "string",
                  ],
                  "score": 1,
                  "text": "string",
                },
              ],
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "results": [
                  {
                    "document": {
                      "external_id": "string",
                      "id": "string",
                      "label": "string",
                      "metadata": {
                        "string": {},
                      },
                    },
                    "keywords": [
                      "string",
                    ],
                    "score": 1,
                    "text": "string",
                  },
                ],
              },
            },
            "responseStatusCode": 200,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/search",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "query": "string",
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "query": "string",
              },
            },
            "responseBody": {},
            "responseBodyV3": {
              "type": "json",
              "value": {},
            },
            "responseStatusCode": 400,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/search",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "query": "string",
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "query": "string",
              },
            },
            "responseBody": {},
            "responseBodyV3": {
              "type": "json",
              "value": {},
            },
            "responseStatusCode": 404,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/search",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "query": "string",
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "query": "string",
              },
            },
            "responseBody": {},
            "responseBodyV3": {
              "type": "json",
              "value": {},
            },
            "responseStatusCode": 500,
          },
        ],
        "headers": [],
        "id": "search",
        "method": "POST",
        "migratedFromUrlSlugs": undefined,
        "name": "Search",
        "path": {
          "parts": [
            {
              "type": "literal",
              "value": "",
            },
            {
              "type": "literal",
              "value": "/v1/search",
            },
          ],
          "pathParameters": [],
        },
        "queryParameters": [],
        "request": {
          "contentType": "application/json",
          "description": undefined,
          "type": {
            "extends": [],
            "properties": [
              {
                "description": "The ID of the index to search against. Must provide either this or index_name.",
                "key": "index_id",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              {
                "description": "The name of the index to search against. Must provide either this or index_id.",
                "key": "index_name",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              {
                "description": "The query to search for.",
                "key": "query",
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "description": "Configuration options for the search.",
                "key": "options",
                "valueType": {
                  "itemType": {
                    "type": "id",
                    "value": "type_:SearchRequestOptionsRequest",
                  },
                  "type": "optional",
                },
              },
            ],
            "type": "object",
          },
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "type_:SearchResponse",
            },
          },
        },
        "urlSlug": "search",
      },
      {
        "authed": true,
        "availability": "GenerallyAvailable",
        "defaultEnvironment": "Production",
        "description": "Used to submit feedback regarding the quality of previously generated completions.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
        "environments": [
          {
            "baseUrl": "https://predict.vellum.ai",
            "id": "Production",
          },
        ],
        "errors": [
          {
            "statusCode": 400,
            "type": {
              "type": "unknown",
            },
          },
          {
            "statusCode": 404,
            "type": {
              "type": "unknown",
            },
          },
          {
            "statusCode": 500,
            "type": {
              "type": "unknown",
            },
          },
        ],
        "errorsV2": [
          {
            "name": undefined,
            "statusCode": 400,
            "type": {
              "type": "alias",
              "value": {
                "type": "unknown",
              },
            },
          },
          {
            "name": undefined,
            "statusCode": 404,
            "type": {
              "type": "alias",
              "value": {
                "type": "unknown",
              },
            },
          },
          {
            "name": undefined,
            "statusCode": 500,
            "type": {
              "type": "alias",
              "value": {
                "type": "unknown",
              },
            },
          },
        ],
        "examples": [
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/submit-completion-actuals",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "actuals": [
                {},
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "actuals": [
                  {},
                ],
              },
            },
            "responseBody": undefined,
            "responseBodyV3": undefined,
            "responseStatusCode": 200,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/submit-completion-actuals",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "actuals": [
                {},
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "actuals": [
                  {},
                ],
              },
            },
            "responseBody": {},
            "responseBodyV3": {
              "type": "json",
              "value": {},
            },
            "responseStatusCode": 400,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/submit-completion-actuals",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "actuals": [
                {},
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "actuals": [
                  {},
                ],
              },
            },
            "responseBody": {},
            "responseBodyV3": {
              "type": "json",
              "value": {},
            },
            "responseStatusCode": 404,
          },
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/submit-completion-actuals",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "actuals": [
                {},
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "actuals": [
                  {},
                ],
              },
            },
            "responseBody": {},
            "responseBodyV3": {
              "type": "json",
              "value": {},
            },
            "responseStatusCode": 500,
          },
        ],
        "headers": [],
        "id": "submit-completion-actuals",
        "method": "POST",
        "migratedFromUrlSlugs": undefined,
        "name": "Submit Completion Actuals",
        "path": {
          "parts": [
            {
              "type": "literal",
              "value": "",
            },
            {
              "type": "literal",
              "value": "/v1/submit-completion-actuals",
            },
          ],
          "pathParameters": [],
        },
        "queryParameters": [],
        "request": {
          "contentType": "application/json",
          "description": undefined,
          "type": {
            "extends": [],
            "properties": [
              {
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "key": "deployment_id",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              {
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "key": "deployment_name",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              {
                "description": "Feedback regarding the quality of previously generated completions",
                "key": "actuals",
                "valueType": {
                  "itemType": {
                    "type": "id",
                    "value": "type_:SubmitCompletionActualRequest",
                  },
                  "type": "list",
                },
              },
            ],
            "type": "object",
          },
        },
        "response": undefined,
        "urlSlug": "submit-completion-actuals",
      },
      {
        "authed": true,
        "availability": "GenerallyAvailable",
        "defaultEnvironment": "Production",
        "description": "    Used to submit feedback regarding the quality of previous workflow execution and its outputs.

    **Note:** Uses a base url of \`https://predict.vellum.ai\`.    ",
        "environments": [
          {
            "baseUrl": "https://predict.vellum.ai",
            "id": "Production",
          },
        ],
        "errors": [],
        "errorsV2": [],
        "examples": [
          {
            "codeExamples": {
              "goSdk": undefined,
              "nodeAxios": "",
              "pythonSdk": undefined,
              "typescriptSdk": undefined,
            },
            "codeSamples": [],
            "description": undefined,
            "headers": {},
            "name": undefined,
            "path": "/v1/submit-workflow-execution-actuals",
            "pathParameters": {},
            "queryParameters": {},
            "requestBody": {
              "actuals": [
                {
                  "output_type": "STRING",
                },
              ],
            },
            "requestBodyV3": {
              "type": "json",
              "value": {
                "actuals": [
                  {
                    "output_type": "STRING",
                  },
                ],
              },
            },
            "responseBody": undefined,
            "responseBodyV3": undefined,
            "responseStatusCode": 200,
          },
        ],
        "headers": [],
        "id": "submit-workflow-execution-actuals",
        "method": "POST",
        "migratedFromUrlSlugs": undefined,
        "name": "Submit Workflow Execution Actuals",
        "path": {
          "parts": [
            {
              "type": "literal",
              "value": "",
            },
            {
              "type": "literal",
              "value": "/v1/submit-workflow-execution-actuals",
            },
          ],
          "pathParameters": [],
        },
        "queryParameters": [],
        "request": {
          "contentType": "application/json",
          "description": undefined,
          "type": {
            "extends": [],
            "properties": [
              {
                "description": "Feedback regarding the quality of an output on a previously executed workflow.",
                "key": "actuals",
                "valueType": {
                  "itemType": {
                    "type": "id",
                    "value": "type_:SubmitWorkflowExecutionActualRequest",
                  },
                  "type": "list",
                },
              },
              {
                "description": "The Vellum-generated ID of a previously executed workflow. Must provide either this or external_id.",
                "key": "execution_id",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
              {
                "description": "The external ID that was originally provided by when executing the workflow, if applicable, that you'd now like to submit actuals for. Must provide either this or execution_id.",
                "key": "external_id",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                  "type": "optional",
                },
              },
            ],
            "type": "object",
          },
        },
        "response": undefined,
        "urlSlug": "submit-workflow-execution-actuals",
      },
    ],
    "pointsTo": undefined,
    "subpackages": [
      "subpackage_deployments",
      "subpackage_documentIndexes",
      "subpackage_documents",
      "subpackage_modelVersions",
      "subpackage_registeredPrompts",
      "subpackage_sandboxes",
      "subpackage_testSuites",
    ],
    "types": [
      "type_:BlockTypeEnum",
      "type_:ChatMessage",
      "type_:ChatMessageRequest",
      "type_:ChatMessageRole",
      "type_:ConditionalNodeResult",
      "type_:ConditionalNodeResultData",
      "type_:ContentType",
      "type_:DeploymentRead",
      "type_:DeploymentStatus",
      "type_:DocumentDocumentToDocumentIndex",
      "type_:DocumentIndexRead",
      "type_:DocumentIndexStatus",
      "type_:DocumentRead",
      "type_:DocumentStatus",
      "type_:EnrichedNormalizedCompletion",
      "type_:EnvironmentEnum",
      "type_:EvaluationParams",
      "type_:EvaluationParamsRequest",
      "type_:ExecuteWorkflowStreamErrorResponse",
      "type_:FinishReasonEnum",
      "type_:GenerateErrorResponse",
      "type_:GenerateOptionsRequest",
      "type_:GenerateRequest",
      "type_:GenerateResponse",
      "type_:GenerateResult",
      "type_:GenerateResultData",
      "type_:GenerateResultError",
      "type_:GenerateStreamResponse",
      "type_:GenerateStreamResult",
      "type_:GenerateStreamResultData",
      "type_:IndexingStateEnum",
      "type_:LogicalOperator",
      "type_:LogprobsEnum",
      "type_:MetadataFilterConfigRequest",
      "type_:MetadataFilterRuleCombinator",
      "type_:MetadataFilterRuleRequest",
      "type_:ModelTypeDeprecated",
      "type_:ModelVersionBuildConfig",
      "type_:ModelVersionCompilePromptResponse",
      "type_:ModelVersionCompiledPrompt",
      "type_:ModelVersionExecConfig",
      "type_:ModelVersionExecConfigParameters",
      "type_:ModelVersionRead",
      "type_:ModelVersionReadStatusEnum",
      "type_:ModelVersionSandboxSnapshot",
      "type_:NodeInputCompiledChatHistoryValue",
      "type_:NodeInputCompiledJsonValue",
      "type_:NodeInputCompiledSearchResultsValue",
      "type_:NodeInputCompiledStringValue",
      "type_:NodeInputVariableCompiledValue",
      "type_:NormalizedLogProbs",
      "type_:NormalizedTokenLogProbs",
      "type_:PaginatedSlimDocumentList",
      "type_:ProcessingFailureReasonEnum",
      "type_:ProcessingStateEnum",
      "type_:PromptNodeResult",
      "type_:PromptNodeResultData",
      "type_:PromptTemplateBlock",
      "type_:PromptTemplateBlockData",
      "type_:PromptTemplateBlockDataRequest",
      "type_:PromptTemplateBlockProperties",
      "type_:PromptTemplateBlockPropertiesRequest",
      "type_:PromptTemplateBlockRequest",
      "type_:ProviderEnum",
      "type_:RegisterPromptErrorResponse",
      "type_:RegisterPromptModelParametersRequest",
      "type_:RegisterPromptPrompt",
      "type_:RegisterPromptPromptInfoRequest",
      "type_:RegisterPromptResponse",
      "type_:RegisteredPromptDeployment",
      "type_:RegisteredPromptInputVariableRequest",
      "type_:RegisteredPromptModelVersion",
      "type_:RegisteredPromptSandbox",
      "type_:RegisteredPromptSandboxSnapshot",
      "type_:SandboxMetricInputParams",
      "type_:SandboxMetricInputParamsRequest",
      "type_:SandboxScenario",
      "type_:ScenarioInput",
      "type_:ScenarioInputRequest",
      "type_:ScenarioInputTypeEnum",
      "type_:SearchErrorResponse",
      "type_:SearchFiltersRequest",
      "type_:SearchNodeResult",
      "type_:SearchNodeResultData",
      "type_:SearchRequestOptionsRequest",
      "type_:SearchResponse",
      "type_:SearchResult",
      "type_:SearchResultDocument",
      "type_:SearchResultMergingRequest",
      "type_:SearchWeightsRequest",
      "type_:SlimDocument",
      "type_:SubmitCompletionActualRequest",
      "type_:SubmitCompletionActualsErrorResponse",
      "type_:SubmitWorkflowExecutionActualRequest",
      "type_:TemplatingNodeChatHistoryResult",
      "type_:TemplatingNodeJsonResult",
      "type_:TemplatingNodeResult",
      "type_:TemplatingNodeResultData",
      "type_:TemplatingNodeResultOutput",
      "type_:TemplatingNodeSearchResultsResult",
      "type_:TemplatingNodeStringResult",
      "type_:TerminalNodeChatHistoryResult",
      "type_:TerminalNodeJsonResult",
      "type_:TerminalNodeResult",
      "type_:TerminalNodeResultData",
      "type_:TerminalNodeResultOutput",
      "type_:TerminalNodeSearchResultsResult",
      "type_:TerminalNodeStringResult",
      "type_:TestSuiteTestCase",
      "type_:UploadDocumentErrorResponse",
      "type_:UploadDocumentResponse",
      "type_:VellumVariable",
      "type_:VellumVariableType",
      "type_:WorkflowEventError",
      "type_:WorkflowExecutionActualChatHistoryRequest",
      "type_:WorkflowExecutionActualJsonRequest",
      "type_:WorkflowExecutionActualStringRequest",
      "type_:WorkflowExecutionEventErrorCode",
      "type_:WorkflowExecutionEventType",
      "type_:WorkflowExecutionNodeResultEvent",
      "type_:WorkflowExecutionWorkflowResultEvent",
      "type_:WorkflowNodeResultData",
      "type_:WorkflowNodeResultEvent",
      "type_:WorkflowNodeResultEventState",
      "type_:WorkflowRequestChatHistoryInputRequest",
      "type_:WorkflowRequestInputRequest",
      "type_:WorkflowRequestJsonInputRequest",
      "type_:WorkflowRequestStringInputRequest",
      "type_:WorkflowResultEvent",
      "type_:WorkflowResultEventOutputData",
      "type_:WorkflowResultEventOutputDataChatHistory",
      "type_:WorkflowResultEventOutputDataJson",
      "type_:WorkflowResultEventOutputDataSearchResults",
      "type_:WorkflowResultEventOutputDataString",
      "type_:WorkflowStreamEvent",
    ],
    "webhooks": [],
    "websockets": [],
  },
  "subpackages": {
    "subpackage_deployments": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": "Beta",
          "defaultEnvironment": "Production",
          "description": "Used to retrieve a deployment given its ID or name.",
          "environments": [
            {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/deployments/:id",
              "pathParameters": {
                "id": ":id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "active_model_version_ids": [
                  "string",
                ],
                "created": "2023-01-01T00:00:00Z",
                "environment": "DEVELOPMENT",
                "id": "string",
                "input_variables": [
                  {
                    "id": "string",
                    "key": "string",
                    "type": "STRING",
                  },
                ],
                "label": "string",
                "last_deployed_on": "2023-01-01T00:00:00Z",
                "model_type": "GENERATE",
                "name": "string",
                "status": "ACTIVE",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "active_model_version_ids": [
                    "string",
                  ],
                  "created": "2023-01-01T00:00:00Z",
                  "environment": "DEVELOPMENT",
                  "id": "string",
                  "input_variables": [
                    {
                      "id": "string",
                      "key": "string",
                      "type": "STRING",
                    },
                  ],
                  "label": "string",
                  "last_deployed_on": "2023-01-01T00:00:00Z",
                  "model_type": "GENERATE",
                  "name": "string",
                  "status": "ACTIVE",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "retrieve",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Retrieve",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "",
              },
              {
                "type": "literal",
                "value": "/v1/deployments/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "description": "Either the Deployment's ID or its unique name",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:DeploymentRead",
              },
            },
          },
          "urlSlug": "retrieve",
        },
      ],
      "name": "deployments",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_deployments",
      "subpackages": [],
      "types": [],
      "urlSlug": "deployments",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_documentIndexes": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": "Beta",
          "defaultEnvironment": "Production",
          "description": "Creates a new document index.",
          "environments": [
            {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/document-indexes",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "indexing_config": {
                  "string": {},
                },
                "label": "string",
                "name": "string",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "indexing_config": {
                    "string": {},
                  },
                  "label": "string",
                  "name": "string",
                },
              },
              "responseBody": {
                "created": "2023-01-01T00:00:00Z",
                "environment": "DEVELOPMENT",
                "id": "string",
                "indexing_config": {
                  "string": {},
                },
                "label": "string",
                "name": "string",
                "status": "ACTIVE",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "created": "2023-01-01T00:00:00Z",
                  "environment": "DEVELOPMENT",
                  "id": "string",
                  "indexing_config": {
                    "string": {},
                  },
                  "label": "string",
                  "name": "string",
                  "status": "ACTIVE",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "create",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Create",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "",
              },
              {
                "type": "literal",
                "value": "/v1/document-indexes",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "description": "A human-readable label for the document index",
                  "key": "label",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "description": "A name that uniquely identifies this index within its workspace",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "description": "The current status of the document index

* \`ACTIVE\` - Active
* \`ARCHIVED\` - Archived",
                  "key": "status",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_:DocumentIndexStatus",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "The environment this document index is used in

* \`DEVELOPMENT\` - Development
* \`STAGING\` - Staging
* \`PRODUCTION\` - Production",
                  "key": "environment",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_:EnvironmentEnum",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "Configuration representing how documents should be indexed",
                  "key": "indexing_config",
                  "valueType": {
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "map",
                    "valueType": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "description": "Optionally specify the id of a document index from which you'd like to copy and re-index its documents into this newly created index",
                  "key": "copy_documents_from_index_id",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:DocumentIndexRead",
              },
            },
          },
          "urlSlug": "create",
        },
      ],
      "name": "documentIndexes",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_documentIndexes",
      "subpackages": [],
      "types": [],
      "urlSlug": "document-indexes",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_documents": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": "GenerallyAvailable",
          "defaultEnvironment": "Production",
          "description": "Used to list documents. Optionally filter on supported fields.",
          "environments": [
            {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/documents",
              "pathParameters": {},
              "queryParameters": {
                "document_index_id": "string",
                "limit": 0,
                "offset": undefined,
                "ordering": undefined,
              },
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "count": 0,
                "next": "string",
                "previous": "string",
                "results": [
                  {
                    "document_to_document_indexes": [
                      {
                        "document_index_id": "string",
                        "id": "string",
                        "indexing_state": "AWAITING_PROCESSING",
                      },
                    ],
                    "external_id": "string",
                    "id": "string",
                    "keywords": [
                      "string",
                    ],
                    "label": "string",
                    "last_uploaded_at": "2023-01-01T00:00:00Z",
                    "metadata": {
                      "string": {},
                    },
                    "processing_failure_reason": "EXCEEDED_CHARACTER_LIMIT",
                    "processing_state": "QUEUED",
                    "status": "ACTIVE",
                  },
                ],
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "count": 0,
                  "next": "string",
                  "previous": "string",
                  "results": [
                    {
                      "document_to_document_indexes": [
                        {
                          "document_index_id": "string",
                          "id": "string",
                          "indexing_state": "AWAITING_PROCESSING",
                        },
                      ],
                      "external_id": "string",
                      "id": "string",
                      "keywords": [
                        "string",
                      ],
                      "label": "string",
                      "last_uploaded_at": "2023-01-01T00:00:00Z",
                      "metadata": {
                        "string": {},
                      },
                      "processing_failure_reason": "EXCEEDED_CHARACTER_LIMIT",
                      "processing_state": "QUEUED",
                      "status": "ACTIVE",
                    },
                  ],
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "list",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "List",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "",
              },
              {
                "type": "literal",
                "value": "/v1/documents",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [
            {
              "description": "Filter down to only those documents that are included in the specified index. You may provide either the Vellum-generated ID or the unique name of the index specified upon initial creation.",
              "key": "document_index_id",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Number of results to return per page.",
              "key": "limit",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "The initial index from which to return the results.",
              "key": "offset",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                  },
                },
                "type": "optional",
              },
            },
            {
              "description": "Which field to use when ordering the results.",
              "key": "ordering",
              "type": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "optional",
              },
            },
          ],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PaginatedSlimDocumentList",
              },
            },
          },
          "urlSlug": "list",
        },
        {
          "authed": true,
          "availability": "Beta",
          "defaultEnvironment": "Production",
          "description": "Update a Document, keying off of its Vellum-generated ID. Particularly useful for updating its metadata.",
          "environments": [
            {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/documents/:id",
              "pathParameters": {
                "id": ":id",
              },
              "queryParameters": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseBody": {
                "document_to_document_indexes": [
                  {
                    "document_index_id": "string",
                    "id": "string",
                    "indexing_state": "AWAITING_PROCESSING",
                  },
                ],
                "external_id": "string",
                "id": "string",
                "label": "string",
                "last_uploaded_at": "2023-01-01T00:00:00Z",
                "metadata": {
                  "string": {},
                },
                "original_file_url": "string",
                "processed_file_url": "string",
                "processing_state": "QUEUED",
                "status": "ACTIVE",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "document_to_document_indexes": [
                    {
                      "document_index_id": "string",
                      "id": "string",
                      "indexing_state": "AWAITING_PROCESSING",
                    },
                  ],
                  "external_id": "string",
                  "id": "string",
                  "label": "string",
                  "last_uploaded_at": "2023-01-01T00:00:00Z",
                  "metadata": {
                    "string": {},
                  },
                  "original_file_url": "string",
                  "processed_file_url": "string",
                  "processing_state": "QUEUED",
                  "status": "ACTIVE",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "partialUpdate",
          "method": "PATCH",
          "migratedFromUrlSlugs": undefined,
          "name": "Partial Update",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "",
              },
              {
                "type": "literal",
                "value": "/v1/documents/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "description": "A UUID string identifying this document.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "description": "A human-readable label for the document. Defaults to the originally uploaded file's file name.",
                  "key": "label",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "The current status of the document

* \`ACTIVE\` - Active",
                  "key": "status",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_:DocumentStatus",
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "A JSON object containing any metadata associated with the document that you'd like to filter upon later.",
                  "key": "metadata",
                  "valueType": {
                    "itemType": {
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                        },
                      },
                      "type": "map",
                      "valueType": {
                        "type": "unknown",
                      },
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:DocumentRead",
              },
            },
          },
          "urlSlug": "partial-update",
        },
        {
          "authed": true,
          "availability": undefined,
          "defaultEnvironment": "Production",
          "description": undefined,
          "environments": [
            {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/documents/:id",
              "pathParameters": {
                "id": ":id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "destroy",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Destroy",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "",
              },
              {
                "type": "literal",
                "value": "/v1/documents/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "description": "A UUID string identifying this document.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "destroy",
        },
        {
          "authed": true,
          "availability": "GenerallyAvailable",
          "defaultEnvironment": "Production",
          "description": "Upload a document to be indexed and used for search.

**Note:** Uses a base url of \`https://documents.vellum.ai\`.",
          "environments": [
            {
              "baseUrl": "https://documents.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": [
            {
              "statusCode": 400,
              "type": {
                "type": "unknown",
              },
            },
            {
              "statusCode": 404,
              "type": {
                "type": "unknown",
              },
            },
            {
              "statusCode": 500,
              "type": {
                "type": "unknown",
              },
            },
          ],
          "errorsV2": [
            {
              "name": undefined,
              "statusCode": 400,
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "name": undefined,
              "statusCode": 404,
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "name": undefined,
              "statusCode": 500,
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown",
                },
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/upload-document",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": "<filename>",
              "requestBodyV3": {
                "type": "json",
                "value": "<filename>",
              },
              "responseBody": {
                "document_id": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "document_id": "string",
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/upload-document",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": "<filename>",
              "requestBodyV3": {
                "type": "json",
                "value": "<filename>",
              },
              "responseBody": {},
              "responseBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseStatusCode": 400,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/upload-document",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": "<filename>",
              "requestBodyV3": {
                "type": "json",
                "value": "<filename>",
              },
              "responseBody": {},
              "responseBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseStatusCode": 404,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/upload-document",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": "<filename>",
              "requestBodyV3": {
                "type": "json",
                "value": "<filename>",
              },
              "responseBody": {},
              "responseBodyV3": {
                "type": "json",
                "value": {},
              },
              "responseStatusCode": 500,
            },
          ],
          "headers": [],
          "id": "upload",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Upload",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "",
              },
              {
                "type": "literal",
                "value": "/v1/upload-document",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "multipart/form-data",
            "description": undefined,
            "type": {
              "type": "fileUpload",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:UploadDocumentResponse",
              },
            },
          },
          "urlSlug": "upload",
        },
      ],
      "name": "documents",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_documents",
      "subpackages": [],
      "types": [],
      "urlSlug": "documents",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_modelVersions": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": "Beta",
          "defaultEnvironment": "Production",
          "description": "Used to retrieve a model version given its ID.",
          "environments": [
            {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/model-versions/:id",
              "pathParameters": {
                "id": ":id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": {
                "build_config": {
                  "base_model": "string",
                  "sandbox_snapshot": {
                    "id": "string",
                    "prompt_id": "string",
                    "prompt_index": 0,
                    "sandbox_id": "string",
                  },
                },
                "created": "2023-01-01T00:00:00Z",
                "exec_config": {
                  "input_variables": [
                    {
                      "id": "string",
                      "key": "string",
                      "type": "STRING",
                    },
                  ],
                  "parameters": {
                    "frequency_penalty": 1,
                    "logit_bias": {
                      "string": 1,
                    },
                    "max_tokens": 0,
                    "presence_penalty": 1,
                    "stop": [
                      "string",
                    ],
                    "temperature": 1,
                    "top_k": 1,
                    "top_p": 1,
                  },
                  "prompt_block_data": {
                    "blocks": [
                      {
                        "block_type": "CHAT_MESSAGE",
                        "id": "string",
                        "properties": {
                          "blocks": [],
                          "chat_message_unterminated": true,
                          "chat_role": "SYSTEM",
                          "function_description": "string",
                          "function_forced": true,
                          "function_name": "string",
                          "function_parameters": {
                            "string": {},
                          },
                          "template": "string",
                          "template_type": "STRING",
                        },
                      },
                    ],
                    "version": 0,
                  },
                  "prompt_syntax_version": 0,
                  "prompt_template": "string",
                },
                "external_id": "string",
                "id": "string",
                "label": "string",
                "model_type": "GENERATE",
                "provider": "ANTHROPIC",
                "status": "CREATING",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "build_config": {
                    "base_model": "string",
                    "sandbox_snapshot": {
                      "id": "string",
                      "prompt_id": "string",
                      "prompt_index": 0,
                      "sandbox_id": "string",
                    },
                  },
                  "created": "2023-01-01T00:00:00Z",
                  "exec_config": {
                    "input_variables": [
                      {
                        "id": "string",
                        "key": "string",
                        "type": "STRING",
                      },
                    ],
                    "parameters": {
                      "frequency_penalty": 1,
                      "logit_bias": {
                        "string": 1,
                      },
                      "max_tokens": 0,
                      "presence_penalty": 1,
                      "stop": [
                        "string",
                      ],
                      "temperature": 1,
                      "top_k": 1,
                      "top_p": 1,
                    },
                    "prompt_block_data": {
                      "blocks": [
                        {
                          "block_type": "CHAT_MESSAGE",
                          "id": "string",
                          "properties": {
                            "blocks": [],
                            "chat_message_unterminated": true,
                            "chat_role": "SYSTEM",
                            "function_description": "string",
                            "function_forced": true,
                            "function_name": "string",
                            "function_parameters": {
                              "string": {},
                            },
                            "template": "string",
                            "template_type": "STRING",
                          },
                        },
                      ],
                      "version": 0,
                    },
                    "prompt_syntax_version": 0,
                    "prompt_template": "string",
                  },
                  "external_id": "string",
                  "id": "string",
                  "label": "string",
                  "model_type": "GENERATE",
                  "provider": "ANTHROPIC",
                  "status": "CREATING",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "retrieve",
          "method": "GET",
          "migratedFromUrlSlugs": undefined,
          "name": "Retrieve",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "",
              },
              {
                "type": "literal",
                "value": "/v1/model-versions/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "description": "A UUID string identifying this model version.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ModelVersionRead",
              },
            },
          },
          "urlSlug": "retrieve",
        },
        {
          "authed": true,
          "availability": "Beta",
          "defaultEnvironment": "Production",
          "description": "Compiles the prompt backing the model version using the provided input values.",
          "environments": [
            {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/model-versions/:id/compile-prompt",
              "pathParameters": {
                "id": ":id",
              },
              "queryParameters": {},
              "requestBody": {
                "input_values": {
                  "string": {},
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "input_values": {
                    "string": {},
                  },
                },
              },
              "responseBody": {
                "prompt": {
                  "num_tokens": 0,
                  "text": "string",
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "prompt": {
                    "num_tokens": 0,
                    "text": "string",
                  },
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "model_version_compile_prompt",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Model Version Compile Prompt",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "",
              },
              {
                "type": "literal",
                "value": "/v1/model-versions/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "/compile-prompt",
              },
            ],
            "pathParameters": [
              {
                "description": "A UUID string identifying this model version.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "description": "Key/value pairs for each variable found within the model version's prompt template.",
                  "key": "input_values",
                  "valueType": {
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "map",
                    "valueType": {
                      "type": "unknown",
                    },
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ModelVersionCompilePromptResponse",
              },
            },
          },
          "urlSlug": "model-version-compile-prompt",
        },
      ],
      "name": "modelVersions",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_modelVersions",
      "subpackages": [],
      "types": [],
      "urlSlug": "model-versions",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_registeredPrompts": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": "Beta",
          "defaultEnvironment": "Production",
          "description": "Registers a prompt within Vellum and creates associated Vellum entities. Intended to be used by integration
partners, not directly by Vellum users.

Under the hood, this endpoint creates a new sandbox, a new model version, and a new deployment.",
          "environments": [
            {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": [
            {
              "statusCode": 409,
              "type": {
                "type": "id",
                "value": "type_:RegisterPromptErrorResponse",
              },
            },
          ],
          "errorsV2": [
            {
              "name": undefined,
              "statusCode": 409,
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:RegisterPromptErrorResponse",
                },
              },
            },
          ],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/registered-prompts/register",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "label": "string",
                "model": "string",
                "name": "string",
                "parameters": {
                  "frequency_penalty": 1,
                  "max_tokens": 0,
                  "presence_penalty": 1,
                  "temperature": 1,
                  "top_p": 1,
                },
                "prompt": {
                  "input_variables": [
                    {
                      "key": "string",
                    },
                  ],
                  "prompt_block_data": {
                    "blocks": [
                      {
                        "block_type": "CHAT_MESSAGE",
                        "id": "string",
                        "properties": {},
                      },
                    ],
                    "version": 0,
                  },
                },
                "provider": "ANTHROPIC",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "label": "string",
                  "model": "string",
                  "name": "string",
                  "parameters": {
                    "frequency_penalty": 1,
                    "max_tokens": 0,
                    "presence_penalty": 1,
                    "temperature": 1,
                    "top_p": 1,
                  },
                  "prompt": {
                    "input_variables": [
                      {
                        "key": "string",
                      },
                    ],
                    "prompt_block_data": {
                      "blocks": [
                        {
                          "block_type": "CHAT_MESSAGE",
                          "id": "string",
                          "properties": {},
                        },
                      ],
                      "version": 0,
                    },
                  },
                  "provider": "ANTHROPIC",
                },
              },
              "responseBody": {
                "deployment": {
                  "id": "string",
                  "label": "string",
                  "name": "string",
                },
                "model_version": {
                  "id": "string",
                  "label": "string",
                },
                "prompt": {
                  "id": "string",
                  "label": "string",
                },
                "sandbox": {
                  "id": "string",
                  "label": "string",
                },
                "sandbox_snapshot": {
                  "id": "string",
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "deployment": {
                    "id": "string",
                    "label": "string",
                    "name": "string",
                  },
                  "model_version": {
                    "id": "string",
                    "label": "string",
                  },
                  "prompt": {
                    "id": "string",
                    "label": "string",
                  },
                  "sandbox": {
                    "id": "string",
                    "label": "string",
                  },
                  "sandbox_snapshot": {
                    "id": "string",
                  },
                },
              },
              "responseStatusCode": 200,
            },
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/registered-prompts/register",
              "pathParameters": {},
              "queryParameters": {},
              "requestBody": {
                "label": "string",
                "model": "string",
                "name": "string",
                "parameters": {
                  "frequency_penalty": 1,
                  "max_tokens": 0,
                  "presence_penalty": 1,
                  "temperature": 1,
                  "top_p": 1,
                },
                "prompt": {
                  "input_variables": [
                    {
                      "key": "string",
                    },
                  ],
                  "prompt_block_data": {
                    "blocks": [
                      {
                        "block_type": "CHAT_MESSAGE",
                        "id": "string",
                        "properties": {},
                      },
                    ],
                    "version": 0,
                  },
                },
                "provider": "ANTHROPIC",
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "label": "string",
                  "model": "string",
                  "name": "string",
                  "parameters": {
                    "frequency_penalty": 1,
                    "max_tokens": 0,
                    "presence_penalty": 1,
                    "temperature": 1,
                    "top_p": 1,
                  },
                  "prompt": {
                    "input_variables": [
                      {
                        "key": "string",
                      },
                    ],
                    "prompt_block_data": {
                      "blocks": [
                        {
                          "block_type": "CHAT_MESSAGE",
                          "id": "string",
                          "properties": {},
                        },
                      ],
                      "version": 0,
                    },
                  },
                  "provider": "ANTHROPIC",
                },
              },
              "responseBody": {
                "detail": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": "string",
                },
              },
              "responseStatusCode": 409,
            },
          ],
          "headers": [],
          "id": "register_prompt",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Register Prompt",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "",
              },
              {
                "type": "literal",
                "value": "/v1/registered-prompts/register",
              },
            ],
            "pathParameters": [],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "description": "A human-friendly label for corresponding entities created in Vellum.",
                  "key": "label",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "description": "A uniquely-identifying name for corresponding entities created in Vellum.",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "description": "Information about how to execute the prompt template.",
                  "key": "prompt",
                  "valueType": {
                    "type": "id",
                    "value": "type_:RegisterPromptPromptInfoRequest",
                  },
                },
                {
                  "description": "The initial LLM provider to use for this prompt

* \`ANTHROPIC\` - Anthropic
* \`COHERE\` - Cohere
* \`GOOGLE\` - Google
* \`HOSTED\` - Hosted
* \`MOSAICML\` - MosaicML
* \`MYSTIC\` - Mystic
* \`OPENAI\` - OpenAI
* \`PYQ\` - Pyq",
                  "key": "provider",
                  "valueType": {
                    "type": "id",
                    "value": "type_:ProviderEnum",
                  },
                },
                {
                  "description": "The initial model to use for this prompt",
                  "key": "model",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                    },
                  },
                },
                {
                  "description": "The initial model parameters to use for  this prompt",
                  "key": "parameters",
                  "valueType": {
                    "type": "id",
                    "value": "type_:RegisterPromptModelParametersRequest",
                  },
                },
                {
                  "description": "Optionally include additional metadata to store along with the prompt.",
                  "key": "meta",
                  "valueType": {
                    "itemType": {
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                        },
                      },
                      "type": "map",
                      "valueType": {
                        "type": "unknown",
                      },
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:RegisterPromptResponse",
              },
            },
          },
          "urlSlug": "register-prompt",
        },
      ],
      "name": "registeredPrompts",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_registeredPrompts",
      "subpackages": [],
      "types": [],
      "urlSlug": "registered-prompts",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_sandboxes": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": "Beta",
          "defaultEnvironment": "Production",
          "description": "Upserts a new scenario for a sandbox, keying off of the optionally provided scenario id.

If an id is provided and has a match, the scenario will be updated. If no id is provided or no match
is found, a new scenario will be appended to the end.

Note that a full replacement of the scenario is performed, so any fields not provided will be removed
or overwritten with default values.",
          "environments": [
            {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/sandboxes/:id/scenarios",
              "pathParameters": {
                "id": ":id",
              },
              "queryParameters": {},
              "requestBody": {
                "inputs": [
                  {
                    "key": "string",
                  },
                ],
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "inputs": [
                    {
                      "key": "string",
                    },
                  ],
                },
              },
              "responseBody": {
                "id": "string",
                "inputs": [
                  {
                    "chat_history": [
                      {
                        "role": "SYSTEM",
                        "text": "string",
                      },
                    ],
                    "key": "string",
                    "type": "TEXT",
                    "value": "string",
                  },
                ],
                "label": "string",
                "metric_input_params": {
                  "params": {
                    "target": "string",
                  },
                },
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "string",
                  "inputs": [
                    {
                      "chat_history": [
                        {
                          "role": "SYSTEM",
                          "text": "string",
                        },
                      ],
                      "key": "string",
                      "type": "TEXT",
                      "value": "string",
                    },
                  ],
                  "label": "string",
                  "metric_input_params": {
                    "params": {
                      "target": "string",
                    },
                  },
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "upsert_sandbox_scenario",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Upsert Sandbox Scenario",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "",
              },
              {
                "type": "literal",
                "value": "/v1/sandboxes/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "/scenarios",
              },
            ],
            "pathParameters": [
              {
                "description": "A UUID string identifying this sandbox.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "key": "label",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "The inputs for the scenario",
                  "key": "inputs",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_:ScenarioInputRequest",
                    },
                    "type": "list",
                  },
                },
                {
                  "description": "The id of the scenario to update. If none is provided, an id will be generated and a new scenario will be appended.",
                  "key": "scenario_id",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "key": "metric_input_params",
                  "valueType": {
                    "itemType": {
                      "type": "id",
                      "value": "type_:SandboxMetricInputParamsRequest",
                    },
                    "type": "optional",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:SandboxScenario",
              },
            },
          },
          "urlSlug": "upsert-sandbox-scenario",
        },
        {
          "authed": true,
          "availability": "Beta",
          "defaultEnvironment": "Production",
          "description": "Deletes an existing scenario from a sandbox, keying off of the provided scenario id.",
          "environments": [
            {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/sandboxes/:id/scenarios/:scenario_id",
              "pathParameters": {
                "id": ":id",
                "scenario_id": ":scenario_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "delete_sandbox_scenario",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete Sandbox Scenario",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "",
              },
              {
                "type": "literal",
                "value": "/v1/sandboxes/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "/scenarios/",
              },
              {
                "type": "pathParameter",
                "value": "scenario_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "description": "A UUID string identifying this sandbox.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "description": "An id identifying the scenario that you'd like to delete",
                "key": "scenario_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete-sandbox-scenario",
        },
      ],
      "name": "sandboxes",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_sandboxes",
      "subpackages": [],
      "types": [],
      "urlSlug": "sandboxes",
      "webhooks": [],
      "websockets": [],
    },
    "subpackage_testSuites": {
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "availability": "Beta",
          "defaultEnvironment": "Production",
          "description": "Upserts a new test case for a test suite, keying off of the optionally provided test case id.

If an id is provided and has a match, the test case will be updated. If no id is provided or no match
is found, a new test case will be appended to the end.

Note that a full replacement of the test case is performed, so any fields not provided will be removed
or overwritten with default values.",
          "environments": [
            {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/test-suites/:id/test-cases",
              "pathParameters": {
                "id": ":id",
              },
              "queryParameters": {},
              "requestBody": {
                "evaluation_params": {},
                "input_values": {
                  "string": {},
                },
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "evaluation_params": {},
                  "input_values": {
                    "string": {},
                  },
                },
              },
              "responseBody": {
                "evaluation_params": {
                  "target": "string",
                },
                "input_values": {
                  "string": {},
                },
                "label": "string",
                "test_case_id": "string",
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "evaluation_params": {
                    "target": "string",
                  },
                  "input_values": {
                    "string": {},
                  },
                  "label": "string",
                  "test_case_id": "string",
                },
              },
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "upsert_test_suite_test_case",
          "method": "POST",
          "migratedFromUrlSlugs": undefined,
          "name": "Upsert Test Suite Test Case",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "",
              },
              {
                "type": "literal",
                "value": "/v1/test-suites/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "/test-cases",
              },
            ],
            "pathParameters": [
              {
                "description": "A UUID string identifying this test suite.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": [],
          "request": {
            "contentType": "application/json",
            "description": undefined,
            "type": {
              "extends": [],
              "properties": [
                {
                  "description": "The id of the test case to update. If none is provided, an id will be generated and a new test case will be appended.",
                  "key": "test_case_id",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "A human-friendly label for the test case.",
                  "key": "label",
                  "valueType": {
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "optional",
                  },
                },
                {
                  "description": "Key/value pairs for each input variable that the Test Suite expects.",
                  "key": "input_values",
                  "valueType": {
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                      },
                    },
                    "type": "map",
                    "valueType": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "description": "Parameters to use when evaluating the test case, specific to the test suite's evaluation metric.",
                  "key": "evaluation_params",
                  "valueType": {
                    "type": "id",
                    "value": "type_:EvaluationParamsRequest",
                  },
                },
              ],
              "type": "object",
            },
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:TestSuiteTestCase",
              },
            },
          },
          "urlSlug": "upsert-test-suite-test-case",
        },
        {
          "authed": true,
          "availability": "Beta",
          "defaultEnvironment": "Production",
          "description": "Deletes an existing test case for a test suite, keying off of the test case id.
",
          "environments": [
            {
              "baseUrl": "https://api.vellum.ai",
              "id": "Production",
            },
          ],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "codeExamples": {
                "goSdk": undefined,
                "nodeAxios": "",
                "pythonSdk": undefined,
                "typescriptSdk": undefined,
              },
              "codeSamples": [],
              "description": undefined,
              "headers": {},
              "name": undefined,
              "path": "/v1/test-suites/:id/test-cases/:test_case_id",
              "pathParameters": {
                "id": ":id",
                "test_case_id": ":test_case_id",
              },
              "queryParameters": {},
              "requestBody": undefined,
              "requestBodyV3": undefined,
              "responseBody": undefined,
              "responseBodyV3": undefined,
              "responseStatusCode": 200,
            },
          ],
          "headers": [],
          "id": "delete_test_suite_test_case",
          "method": "DELETE",
          "migratedFromUrlSlugs": undefined,
          "name": "Delete Test Suite Test Case",
          "path": {
            "parts": [
              {
                "type": "literal",
                "value": "",
              },
              {
                "type": "literal",
                "value": "/v1/test-suites/",
              },
              {
                "type": "pathParameter",
                "value": "id",
              },
              {
                "type": "literal",
                "value": "/test-cases/",
              },
              {
                "type": "pathParameter",
                "value": "test_case_id",
              },
              {
                "type": "literal",
                "value": "",
              },
            ],
            "pathParameters": [
              {
                "description": "A UUID string identifying this test suite.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "description": "An id identifying the test case that you'd like to delete",
                "key": "test_case_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
              },
            ],
          },
          "queryParameters": [],
          "request": undefined,
          "response": undefined,
          "urlSlug": "delete-test-suite-test-case",
        },
      ],
      "name": "testSuites",
      "parent": undefined,
      "pointsTo": undefined,
      "subpackageId": "subpackage_testSuites",
      "subpackages": [],
      "types": [],
      "urlSlug": "test-suites",
      "webhooks": [],
      "websockets": [],
    },
  },
  "types": {
    "type_:BlockTypeEnum": {
      "availability": undefined,
      "description": "* \`CHAT_MESSAGE\` - CHAT_MESSAGE
* \`CHAT_HISTORY\` - CHAT_HISTORY
* \`JINJA\` - JINJA
* \`FUNCTION_DEFINITION\` - FUNCTION_DEFINITION",
      "name": "BlockTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "CHAT_MESSAGE",
          },
          {
            "description": undefined,
            "value": "CHAT_HISTORY",
          },
          {
            "description": undefined,
            "value": "JINJA",
          },
          {
            "description": undefined,
            "value": "FUNCTION_DEFINITION",
          },
        ],
      },
    },
    "type_:ChatMessage": {
      "availability": undefined,
      "description": undefined,
      "name": "ChatMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "role",
            "valueType": {
              "type": "id",
              "value": "type_:ChatMessageRole",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ChatMessageRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "ChatMessageRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "role",
            "valueType": {
              "type": "id",
              "value": "type_:ChatMessageRole",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ChatMessageRole": {
      "availability": undefined,
      "description": "* \`SYSTEM\` - System
* \`ASSISTANT\` - Assistant
* \`USER\` - User
* \`FUNCTION\` - Function",
      "name": "ChatMessageRole",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "SYSTEM",
          },
          {
            "description": undefined,
            "value": "ASSISTANT",
          },
          {
            "description": undefined,
            "value": "USER",
          },
          {
            "description": undefined,
            "value": "FUNCTION",
          },
        ],
      },
    },
    "type_:ConditionalNodeResult": {
      "availability": undefined,
      "description": undefined,
      "name": "ConditionalNodeResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "type_:ConditionalNodeResultData",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ConditionalNodeResultData": {
      "availability": undefined,
      "description": undefined,
      "name": "ConditionalNodeResultData",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "source_handle_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ContentType": {
      "availability": undefined,
      "description": "* \`STRING\` - STRING
* \`JSON\` - JSON",
      "name": "ContentType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "STRING",
          },
          {
            "description": undefined,
            "value": "JSON",
          },
        ],
      },
    },
    "type_:DeploymentRead": {
      "availability": undefined,
      "description": undefined,
      "name": "DeploymentRead",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": "A human-readable label for the deployment",
            "key": "label",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "A name that uniquely identifies this deployment within its workspace",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The current status of the deployment

* \`ACTIVE\` - Active
* \`INACTIVE\` - Inactive
* \`ARCHIVED\` - Archived",
            "key": "status",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:DeploymentStatus",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The environment this deployment is used in

* \`DEVELOPMENT\` - Development
* \`STAGING\` - Staging
* \`PRODUCTION\` - Production",
            "key": "environment",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:EnvironmentEnum",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "model_type",
            "valueType": {
              "type": "id",
              "value": "type_:ModelTypeDeprecated",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "active_model_version_ids",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "last_deployed_on",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "input_variables",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:VellumVariable",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:DeploymentStatus": {
      "availability": undefined,
      "description": "* \`ACTIVE\` - Active
* \`INACTIVE\` - Inactive
* \`ARCHIVED\` - Archived",
      "name": "DeploymentStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "ACTIVE",
          },
          {
            "description": undefined,
            "value": "INACTIVE",
          },
          {
            "description": undefined,
            "value": "ARCHIVED",
          },
        ],
      },
    },
    "type_:DocumentDocumentToDocumentIndex": {
      "availability": undefined,
      "description": undefined,
      "name": "DocumentDocumentToDocumentIndex",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Vellum-generated ID that uniquely identifies this link.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Vellum-generated ID that uniquely identifies the index this document is included in.",
            "key": "document_index_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "An enum value representing where this document is along its indexing lifecycle for this index.

* \`AWAITING_PROCESSING\` - Awaiting Processing
* \`QUEUED\` - Queued
* \`INDEXING\` - Indexing
* \`INDEXED\` - Indexed
* \`FAILED\` - Failed",
            "key": "indexing_state",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:IndexingStateEnum",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:DocumentIndexRead": {
      "availability": undefined,
      "description": undefined,
      "name": "DocumentIndexRead",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": "A human-readable label for the document index",
            "key": "label",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "A name that uniquely identifies this index within its workspace",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The current status of the document index

* \`ACTIVE\` - Active
* \`ARCHIVED\` - Archived",
            "key": "status",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:DocumentIndexStatus",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The environment this document index is used in

* \`DEVELOPMENT\` - Development
* \`STAGING\` - Staging
* \`PRODUCTION\` - Production",
            "key": "environment",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:EnvironmentEnum",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Configuration representing how documents should be indexed",
            "key": "indexing_config",
            "valueType": {
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "map",
              "valueType": {
                "type": "unknown",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:DocumentIndexStatus": {
      "availability": undefined,
      "description": "* \`ACTIVE\` - Active
* \`ARCHIVED\` - Archived",
      "name": "DocumentIndexStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "ACTIVE",
          },
          {
            "description": undefined,
            "value": "ARCHIVED",
          },
        ],
      },
    },
    "type_:DocumentRead": {
      "availability": undefined,
      "description": undefined,
      "name": "DocumentRead",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The unique id of this document as it exists in the user's system.",
            "key": "external_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "last_uploaded_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": "A human-readable label for the document. Defaults to the originally uploaded file's file name.",
            "key": "label",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The current processing state of the document

* \`QUEUED\` - Queued
* \`PROCESSING\` - Processing
* \`PROCESSED\` - Processed
* \`FAILED\` - Failed",
            "key": "processing_state",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:ProcessingStateEnum",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The current status of the document

* \`ACTIVE\` - Active",
            "key": "status",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:DocumentStatus",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "original_file_url",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "processed_file_url",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "document_to_document_indexes",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:DocumentDocumentToDocumentIndex",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": "A previously supplied JSON object containing metadata that can be filtered on when searching.",
            "key": "metadata",
            "valueType": {
              "itemType": {
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": {
                  "type": "unknown",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:DocumentStatus": {
      "availability": undefined,
      "description": undefined,
      "name": "DocumentStatus",
      "shape": {
        "type": "alias",
        "value": {
          "type": "literal",
          "value": {
            "type": "stringLiteral",
            "value": "ACTIVE",
          },
        },
      },
    },
    "type_:EnrichedNormalizedCompletion": {
      "availability": undefined,
      "description": undefined,
      "name": "EnrichedNormalizedCompletion",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The Vellum-generated ID of the completion.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The external ID that was originally provided along with the generation request, which uniquely identifies this generation in an external system.",
            "key": "external_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The text generated by the LLM.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The reason the generation finished.

* \`LENGTH\` - LENGTH
* \`STOP\` - STOP
* \`UNKNOWN\` - UNKNOWN",
            "key": "finish_reason",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:FinishReasonEnum",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The logprobs of the completion. Only present if specified in the original request options.",
            "key": "logprobs",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:NormalizedLogProbs",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The ID of the model version used to generate this completion.",
            "key": "model_version_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "type",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:ContentType",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:EnvironmentEnum": {
      "availability": undefined,
      "description": "* \`DEVELOPMENT\` - Development
* \`STAGING\` - Staging
* \`PRODUCTION\` - Production",
      "name": "EnvironmentEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "DEVELOPMENT",
          },
          {
            "description": undefined,
            "value": "STAGING",
          },
          {
            "description": undefined,
            "value": "PRODUCTION",
          },
        ],
      },
    },
    "type_:EvaluationParams": {
      "availability": undefined,
      "description": undefined,
      "name": "EvaluationParams",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The target value to compare the LLM output against. Typically what you expect or desire the LLM output to be.",
            "key": "target",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:EvaluationParamsRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "EvaluationParamsRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The target value to compare the LLM output against. Typically what you expect or desire the LLM output to be.",
            "key": "target",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ExecuteWorkflowStreamErrorResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "ExecuteWorkflowStreamErrorResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Details about why the request failed.",
            "key": "detail",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:FinishReasonEnum": {
      "availability": undefined,
      "description": "* \`LENGTH\` - LENGTH
* \`STOP\` - STOP
* \`UNKNOWN\` - UNKNOWN",
      "name": "FinishReasonEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "LENGTH",
          },
          {
            "description": undefined,
            "value": "STOP",
          },
          {
            "description": undefined,
            "value": "UNKNOWN",
          },
        ],
      },
    },
    "type_:GenerateErrorResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "GenerateErrorResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Details about why the request failed.",
            "key": "detail",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateOptionsRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "GenerateOptionsRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Which logprobs to include, if any. Defaults to NONE.

* \`ALL\` - ALL
* \`NONE\` - NONE",
            "key": "logprobs",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:LogprobsEnum",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "GenerateRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Key/value pairs for each template variable defined in the deployment's prompt.",
            "key": "input_values",
            "valueType": {
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "map",
              "valueType": {
                "type": "unknown",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Optionally provide a list of chat messages that'll be used in place of the special {$chat_history} variable, if included in the prompt.",
            "key": "chat_history",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessageRequest",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Optionally include a unique identifier for each generation, as represented outside of Vellum. Note that this should generally be a list of length one.",
            "key": "external_ids",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "GenerateResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The results of each generation request.",
            "key": "results",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:GenerateResult",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateResult": {
      "availability": undefined,
      "description": undefined,
      "name": "GenerateResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "An object containing the resulting generation. This key will be absent if the LLM provider experienced an error.",
            "key": "data",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:GenerateResultData",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "An object containing details about the error that occurred. This key will be absent if the LLM provider did not experience an error.",
            "key": "error",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:GenerateResultError",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateResultData": {
      "availability": undefined,
      "description": undefined,
      "name": "GenerateResultData",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The generated completions. This will generally be a list of length one.",
            "key": "completions",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:EnrichedNormalizedCompletion",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateResultError": {
      "availability": undefined,
      "description": undefined,
      "name": "GenerateResultError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The error message returned by the LLM provider.",
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateStreamResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "GenerateStreamResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "delta",
            "valueType": {
              "type": "id",
              "value": "type_:GenerateStreamResult",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateStreamResult": {
      "availability": undefined,
      "description": undefined,
      "name": "GenerateStreamResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "request_index",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "data",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:GenerateStreamResultData",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "error",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:GenerateResultError",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:GenerateStreamResultData": {
      "availability": undefined,
      "description": undefined,
      "name": "GenerateStreamResultData",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "completion_index",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "completion",
            "valueType": {
              "type": "id",
              "value": "type_:EnrichedNormalizedCompletion",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:IndexingStateEnum": {
      "availability": undefined,
      "description": "* \`AWAITING_PROCESSING\` - Awaiting Processing
* \`QUEUED\` - Queued
* \`INDEXING\` - Indexing
* \`INDEXED\` - Indexed
* \`FAILED\` - Failed",
      "name": "IndexingStateEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "AWAITING_PROCESSING",
          },
          {
            "description": undefined,
            "value": "QUEUED",
          },
          {
            "description": undefined,
            "value": "INDEXING",
          },
          {
            "description": undefined,
            "value": "INDEXED",
          },
          {
            "description": undefined,
            "value": "FAILED",
          },
        ],
      },
    },
    "type_:LogicalOperator": {
      "availability": undefined,
      "description": "* \`=\` - EQUALS
* \`!=\` - DOES_NOT_EQUAL
* \`<\` - LESS_THAN
* \`>\` - GREATER_THAN
* \`<=\` - LESS_THAN_OR_EQUAL_TO
* \`>=\` - GREATER_THAN_OR_EQUAL_TO
* \`contains\` - CONTAINS
* \`beginsWith\` - BEGINS_WITH
* \`endsWith\` - ENDS_WITH
* \`doesNotContain\` - DOES_NOT_CONTAIN
* \`doesNotBeginWith\` - DOES_NOT_BEGIN_WITH
* \`doesNotEndWith\` - DOES_NOT_END_WITH
* \`null\` - NULL
* \`notNull\` - NOT_NULL
* \`in\` - IN
* \`notIn\` - NOT_IN
* \`between\` - BETWEEN
* \`notBetween\` - NOT_BETWEEN",
      "name": "LogicalOperator",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "Equals",
            "value": "=",
          },
          {
            "description": "Does not equal",
            "value": "!=",
          },
          {
            "description": "Less than",
            "value": "<",
          },
          {
            "description": "Greater than",
            "value": ">",
          },
          {
            "description": "Less than or equal to",
            "value": "<=",
          },
          {
            "description": "Greater than or equal to",
            "value": ">=",
          },
          {
            "description": "Contains",
            "value": "contains",
          },
          {
            "description": "Begins with",
            "value": "beginsWith",
          },
          {
            "description": "Ends with",
            "value": "endsWith",
          },
          {
            "description": "Does not contain",
            "value": "doesNotContain",
          },
          {
            "description": "Does not begin with",
            "value": "doesNotBeginWith",
          },
          {
            "description": "Does not end with",
            "value": "doesNotEndWith",
          },
          {
            "description": "Null",
            "value": "null",
          },
          {
            "description": "Not null",
            "value": "notNull",
          },
          {
            "description": "In",
            "value": "in",
          },
          {
            "description": "Not in",
            "value": "notIn",
          },
          {
            "description": "Between",
            "value": "between",
          },
          {
            "description": "Not between",
            "value": "notBetween",
          },
        ],
      },
    },
    "type_:LogprobsEnum": {
      "availability": undefined,
      "description": "* \`ALL\` - ALL
* \`NONE\` - NONE",
      "name": "LogprobsEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "ALL",
          },
          {
            "description": undefined,
            "value": "NONE",
          },
        ],
      },
    },
    "type_:MetadataFilterConfigRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "MetadataFilterConfigRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "combinator",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:MetadataFilterRuleCombinator",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "negated",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rules",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:MetadataFilterRuleRequest",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "field",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "operator",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:LogicalOperator",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:MetadataFilterRuleCombinator": {
      "availability": undefined,
      "description": "* \`and\` - AND
* \`or\` - OR",
      "name": "MetadataFilterRuleCombinator",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "and",
          },
          {
            "description": undefined,
            "value": "or",
          },
        ],
      },
    },
    "type_:MetadataFilterRuleRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "MetadataFilterRuleRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "combinator",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:MetadataFilterRuleCombinator",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "negated",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "rules",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:MetadataFilterRuleRequest",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "field",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "operator",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:LogicalOperator",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ModelTypeDeprecated": {
      "availability": undefined,
      "description": "* \`GENERATE\` - Generate
* \`CLASSIFY\` - Classify",
      "name": "ModelTypeDeprecated",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "GENERATE",
          },
          {
            "description": undefined,
            "value": "CLASSIFY",
          },
        ],
      },
    },
    "type_:ModelVersionBuildConfig": {
      "availability": undefined,
      "description": undefined,
      "name": "ModelVersionBuildConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The name of the base model used to create this model version, as identified by the LLM provider.",
            "key": "base_model",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Information about the sandbox snapshot that was used to create this model version, if applicable.",
            "key": "sandbox_snapshot",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:ModelVersionSandboxSnapshot",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ModelVersionCompilePromptResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "ModelVersionCompilePromptResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Information about the compiled prompt.",
            "key": "prompt",
            "valueType": {
              "type": "id",
              "value": "type_:ModelVersionCompiledPrompt",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ModelVersionCompiledPrompt": {
      "availability": undefined,
      "description": undefined,
      "name": "ModelVersionCompiledPrompt",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The fully compiled prompt in normalized ChatML syntax after all variable substitutions and templating functions are applied.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The approximate number of tokens used by the compiled prompt.",
            "key": "num_tokens",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ModelVersionExecConfig": {
      "availability": undefined,
      "description": undefined,
      "name": "ModelVersionExecConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The generation parameters that are passed to the LLM provider at runtime.",
            "key": "parameters",
            "valueType": {
              "type": "id",
              "value": "type_:ModelVersionExecConfigParameters",
            },
          },
          {
            "availability": undefined,
            "description": "Input variables specified in the prompt template.",
            "key": "input_variables",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:VellumVariable",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": "The template used to generate prompts for this model version.",
            "key": "prompt_template",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "prompt_block_data",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:PromptTemplateBlockData",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "prompt_syntax_version",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ModelVersionExecConfigParameters": {
      "availability": undefined,
      "description": undefined,
      "name": "ModelVersionExecConfigParameters",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "temperature",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "max_tokens",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "top_p",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "frequency_penalty",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "presence_penalty",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "logit_bias",
            "valueType": {
              "itemType": {
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "double",
                    },
                  },
                  "type": "optional",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "stop",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "top_k",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ModelVersionRead": {
      "availability": undefined,
      "description": undefined,
      "name": "ModelVersionRead",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Vellum-generated ID that uniquely identifies this model version.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Timestamp of when this model version was created.",
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Human-friendly name for this model version.",
            "key": "label",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "model_type",
            "valueType": {
              "type": "id",
              "value": "type_:ModelTypeDeprecated",
            },
          },
          {
            "availability": undefined,
            "description": "Which LLM provider this model version is associated with.

* \`ANTHROPIC\` - Anthropic
* \`COHERE\` - Cohere
* \`GOOGLE\` - Google
* \`HOSTED\` - Hosted
* \`MOSAICML\` - MosaicML
* \`MYSTIC\` - Mystic
* \`OPENAI\` - OpenAI
* \`PYQ\` - Pyq",
            "key": "provider",
            "valueType": {
              "type": "id",
              "value": "type_:ProviderEnum",
            },
          },
          {
            "availability": undefined,
            "description": "The unique id of this model version as it exists in the above provider's system.",
            "key": "external_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Configuration used to build this model version.",
            "key": "build_config",
            "valueType": {
              "type": "id",
              "value": "type_:ModelVersionBuildConfig",
            },
          },
          {
            "availability": undefined,
            "description": "Configuration used to execute this model version.",
            "key": "exec_config",
            "valueType": {
              "type": "id",
              "value": "type_:ModelVersionExecConfig",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "status",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:ModelVersionReadStatusEnum",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ModelVersionReadStatusEnum": {
      "availability": undefined,
      "description": "* \`CREATING\` - Creating
* \`READY\` - Ready
* \`CREATION_FAILED\` - Creation Failed
* \`DISABLED\` - Disabled",
      "name": "ModelVersionReadStatusEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "CREATING",
          },
          {
            "description": undefined,
            "value": "READY",
          },
          {
            "description": undefined,
            "value": "CREATION_FAILED",
          },
          {
            "description": undefined,
            "value": "DISABLED",
          },
        ],
      },
    },
    "type_:ModelVersionSandboxSnapshot": {
      "availability": undefined,
      "description": undefined,
      "name": "ModelVersionSandboxSnapshot",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The ID of the sandbox snapshot.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The index of the prompt in the sandbox snapshot.",
            "key": "prompt_index",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The id of the prompt in the sandbox snapshot.",
            "key": "prompt_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "sandbox_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:NodeInputCompiledChatHistoryValue": {
      "availability": undefined,
      "description": undefined,
      "name": "NodeInputCompiledChatHistoryValue",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "node_input_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessage",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:NodeInputCompiledJsonValue": {
      "availability": undefined,
      "description": undefined,
      "name": "NodeInputCompiledJsonValue",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "node_input_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": {
                  "type": "unknown",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:NodeInputCompiledSearchResultsValue": {
      "availability": undefined,
      "description": undefined,
      "name": "NodeInputCompiledSearchResultsValue",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "node_input_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:SearchResult",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:NodeInputCompiledStringValue": {
      "availability": undefined,
      "description": undefined,
      "name": "NodeInputCompiledStringValue",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "node_input_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:NodeInputVariableCompiledValue": {
      "availability": undefined,
      "description": undefined,
      "name": "NodeInputVariableCompiledValue",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_:NodeInputCompiledStringValue",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "STRING",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:NodeInputCompiledJsonValue",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "JSON",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:NodeInputCompiledChatHistoryValue",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "CHAT_HISTORY",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:NodeInputCompiledSearchResultsValue",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "SEARCH_RESULTS",
          },
        ],
      },
    },
    "type_:NormalizedLogProbs": {
      "availability": undefined,
      "description": undefined,
      "name": "NormalizedLogProbs",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "tokens",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:NormalizedTokenLogProbs",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "likelihood",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:NormalizedTokenLogProbs": {
      "availability": undefined,
      "description": undefined,
      "name": "NormalizedTokenLogProbs",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "token",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "logprob",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "top_logprobs",
            "valueType": {
              "itemType": {
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "double",
                    },
                  },
                  "type": "optional",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "text_offset",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PaginatedSlimDocumentList": {
      "availability": undefined,
      "description": undefined,
      "name": "PaginatedSlimDocumentList",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "count",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "next",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "previous",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "results",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:SlimDocument",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ProcessingFailureReasonEnum": {
      "availability": undefined,
      "description": "* \`EXCEEDED_CHARACTER_LIMIT\` - Exceeded Character Limit
* \`INVALID_FILE\` - Invalid File",
      "name": "ProcessingFailureReasonEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "EXCEEDED_CHARACTER_LIMIT",
          },
          {
            "description": undefined,
            "value": "INVALID_FILE",
          },
        ],
      },
    },
    "type_:ProcessingStateEnum": {
      "availability": undefined,
      "description": "* \`QUEUED\` - Queued
* \`PROCESSING\` - Processing
* \`PROCESSED\` - Processed
* \`FAILED\` - Failed",
      "name": "ProcessingStateEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "QUEUED",
          },
          {
            "description": undefined,
            "value": "PROCESSING",
          },
          {
            "description": undefined,
            "value": "PROCESSED",
          },
          {
            "description": undefined,
            "value": "FAILED",
          },
        ],
      },
    },
    "type_:PromptNodeResult": {
      "availability": undefined,
      "description": undefined,
      "name": "PromptNodeResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "type_:PromptNodeResultData",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PromptNodeResultData": {
      "availability": undefined,
      "description": undefined,
      "name": "PromptNodeResultData",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "output_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "text",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "delta",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PromptTemplateBlock": {
      "availability": undefined,
      "description": undefined,
      "name": "PromptTemplateBlock",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "block_type",
            "valueType": {
              "type": "id",
              "value": "type_:BlockTypeEnum",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "properties",
            "valueType": {
              "type": "id",
              "value": "type_:PromptTemplateBlockProperties",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PromptTemplateBlockData": {
      "availability": undefined,
      "description": undefined,
      "name": "PromptTemplateBlockData",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "blocks",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:PromptTemplateBlock",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PromptTemplateBlockDataRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "PromptTemplateBlockDataRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "blocks",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:PromptTemplateBlockRequest",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PromptTemplateBlockProperties": {
      "availability": undefined,
      "description": undefined,
      "name": "PromptTemplateBlockProperties",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "chat_role",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:ChatMessageRole",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "chat_message_unterminated",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "template",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "template_type",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:ContentType",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "function_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "function_description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "function_parameters",
            "valueType": {
              "itemType": {
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": {
                  "type": "unknown",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "function_forced",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "blocks",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:PromptTemplateBlock",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PromptTemplateBlockPropertiesRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "PromptTemplateBlockPropertiesRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "chat_role",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:ChatMessageRole",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "chat_message_unterminated",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "template",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "template_type",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:ContentType",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "function_name",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "function_description",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "function_parameters",
            "valueType": {
              "itemType": {
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": {
                  "type": "unknown",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "function_forced",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "blocks",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:PromptTemplateBlockRequest",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:PromptTemplateBlockRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "PromptTemplateBlockRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "block_type",
            "valueType": {
              "type": "id",
              "value": "type_:BlockTypeEnum",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "properties",
            "valueType": {
              "type": "id",
              "value": "type_:PromptTemplateBlockPropertiesRequest",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ProviderEnum": {
      "availability": undefined,
      "description": "* \`ANTHROPIC\` - Anthropic
* \`COHERE\` - Cohere
* \`GOOGLE\` - Google
* \`HOSTED\` - Hosted
* \`MOSAICML\` - MosaicML
* \`MYSTIC\` - Mystic
* \`OPENAI\` - OpenAI
* \`PYQ\` - Pyq",
      "name": "ProviderEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "ANTHROPIC",
          },
          {
            "description": undefined,
            "value": "COHERE",
          },
          {
            "description": undefined,
            "value": "GOOGLE",
          },
          {
            "description": undefined,
            "value": "HOSTED",
          },
          {
            "description": undefined,
            "value": "MOSAICML",
          },
          {
            "description": undefined,
            "value": "MYSTIC",
          },
          {
            "description": undefined,
            "value": "OPENAI",
          },
          {
            "description": undefined,
            "value": "PYQ",
          },
        ],
      },
    },
    "type_:RegisterPromptErrorResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "RegisterPromptErrorResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Details about why the request failed.",
            "key": "detail",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisterPromptModelParametersRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "RegisterPromptModelParametersRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "temperature",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "max_tokens",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "stop",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "top_p",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "top_k",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "frequency_penalty",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "presence_penalty",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "logit_bias",
            "valueType": {
              "itemType": {
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": {
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "double",
                    },
                  },
                  "type": "optional",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisterPromptPrompt": {
      "availability": undefined,
      "description": undefined,
      "name": "RegisterPromptPrompt",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The ID of the generated prompt.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "A human-friendly label for the generated prompt.",
            "key": "label",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisterPromptPromptInfoRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "RegisterPromptPromptInfoRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "prompt_syntax_version",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "prompt_block_data",
            "valueType": {
              "type": "id",
              "value": "type_:PromptTemplateBlockDataRequest",
            },
          },
          {
            "availability": undefined,
            "description": "The input variables specified in the prompt template.",
            "key": "input_variables",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:RegisteredPromptInputVariableRequest",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisterPromptResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "RegisterPromptResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Information about the generated prompt",
            "key": "prompt",
            "valueType": {
              "type": "id",
              "value": "type_:RegisterPromptPrompt",
            },
          },
          {
            "availability": undefined,
            "description": "Information about the generated sandbox snapshot",
            "key": "sandbox_snapshot",
            "valueType": {
              "type": "id",
              "value": "type_:RegisteredPromptSandboxSnapshot",
            },
          },
          {
            "availability": undefined,
            "description": "Information about the generated sandbox",
            "key": "sandbox",
            "valueType": {
              "type": "id",
              "value": "type_:RegisteredPromptSandbox",
            },
          },
          {
            "availability": undefined,
            "description": "Information about the generated model version",
            "key": "model_version",
            "valueType": {
              "type": "id",
              "value": "type_:RegisteredPromptModelVersion",
            },
          },
          {
            "availability": undefined,
            "description": "Information about the generated deployment",
            "key": "deployment",
            "valueType": {
              "type": "id",
              "value": "type_:RegisteredPromptDeployment",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisteredPromptDeployment": {
      "availability": undefined,
      "description": undefined,
      "name": "RegisteredPromptDeployment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The ID of the generated deployment.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "A uniquely-identifying name for generated deployment.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "A human-friendly label for the generated deployment.",
            "key": "label",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisteredPromptInputVariableRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "RegisteredPromptInputVariableRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "type",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:VellumVariableType",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisteredPromptModelVersion": {
      "availability": undefined,
      "description": undefined,
      "name": "RegisteredPromptModelVersion",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The ID of the generated model version.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "A human-friendly label for the generated model version.",
            "key": "label",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisteredPromptSandbox": {
      "availability": undefined,
      "description": undefined,
      "name": "RegisteredPromptSandbox",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The ID of the generated sandbox.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "A human-friendly label for the generated sandbox.",
            "key": "label",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:RegisteredPromptSandboxSnapshot": {
      "availability": undefined,
      "description": undefined,
      "name": "RegisteredPromptSandboxSnapshot",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The ID of the generated sandbox snapshot.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SandboxMetricInputParams": {
      "availability": undefined,
      "description": undefined,
      "name": "SandboxMetricInputParams",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "params",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:EvaluationParams",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SandboxMetricInputParamsRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "SandboxMetricInputParamsRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "params",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:EvaluationParamsRequest",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SandboxScenario": {
      "availability": undefined,
      "description": undefined,
      "name": "SandboxScenario",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "label",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The inputs for the scenario",
            "key": "inputs",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:ScenarioInput",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": "The id of the scenario",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "metric_input_params",
            "valueType": {
              "type": "id",
              "value": "type_:SandboxMetricInputParams",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ScenarioInput": {
      "availability": undefined,
      "description": undefined,
      "name": "ScenarioInput",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "type",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:ScenarioInputTypeEnum",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "chat_history",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessage",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ScenarioInputRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "ScenarioInputRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "type",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:ScenarioInputTypeEnum",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "chat_history",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessageRequest",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:ScenarioInputTypeEnum": {
      "availability": undefined,
      "description": "* \`TEXT\` - Text
* \`CHAT_HISTORY\` - Chat History",
      "name": "ScenarioInputTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "TEXT",
          },
          {
            "description": undefined,
            "value": "CHAT_HISTORY",
          },
        ],
      },
    },
    "type_:SearchErrorResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "SearchErrorResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Details about why the request failed.",
            "key": "detail",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SearchFiltersRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "SearchFiltersRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The document external IDs to filter by",
            "key": "external_ids",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The metadata filters to apply to the search",
            "key": "metadata",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:MetadataFilterConfigRequest",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SearchNodeResult": {
      "availability": undefined,
      "description": undefined,
      "name": "SearchNodeResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "type_:SearchNodeResultData",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SearchNodeResultData": {
      "availability": undefined,
      "description": undefined,
      "name": "SearchNodeResultData",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "results_output_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The results of the search. Each result represents a chunk that matches the search query.",
            "key": "results",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:SearchResult",
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "text_output_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "text",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SearchRequestOptionsRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "SearchRequestOptionsRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The maximum number of results to return.",
            "key": "limit",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The weights to use for the search. Must add up to 1.0.",
            "key": "weights",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:SearchWeightsRequest",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The configuration for merging results.",
            "key": "result_merging",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:SearchResultMergingRequest",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The filters to apply to the search.",
            "key": "filters",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:SearchFiltersRequest",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SearchResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "SearchResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The results of the search. Each result represents a chunk that matches the search query.",
            "key": "results",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:SearchResult",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SearchResult": {
      "availability": undefined,
      "description": undefined,
      "name": "SearchResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The text of the chunk that matched the search query.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "A score representing how well the chunk matches the search query.",
            "key": "score",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "keywords",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "list",
            },
          },
          {
            "availability": undefined,
            "description": "The document that contains the chunk that matched the search query.",
            "key": "document",
            "valueType": {
              "type": "id",
              "value": "type_:SearchResultDocument",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SearchResultDocument": {
      "availability": undefined,
      "description": undefined,
      "name": "SearchResultDocument",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The ID of the document.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The human-readable name for the document.",
            "key": "label",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The unique ID of the document as represented in an external system and specified when it was originally uploaded.",
            "key": "external_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "A previously supplied JSON object containing metadata that can be filtered on when searching.",
            "key": "metadata",
            "valueType": {
              "itemType": {
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": {
                  "type": "unknown",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SearchResultMergingRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "SearchResultMergingRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Whether to enable merging results",
            "key": "enabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SearchWeightsRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "SearchWeightsRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The relative weight to give to semantic similarity",
            "key": "semantic_similarity",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The relative weight to give to keyword matches",
            "key": "keywords",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SlimDocument": {
      "availability": undefined,
      "description": undefined,
      "name": "SlimDocument",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "Vellum-generated ID that uniquely identifies this document.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The external ID that was originally provided when uploading the document.",
            "key": "external_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "A timestamp representing when this document was most recently uploaded.",
            "key": "last_uploaded_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Human-friendly name for this document.",
            "key": "label",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "An enum value representing where this document is along its processing lifecycle. Note that this is different than its indexing lifecycle.

* \`QUEUED\` - Queued
* \`PROCESSING\` - Processing
* \`PROCESSED\` - Processed
* \`FAILED\` - Failed",
            "key": "processing_state",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:ProcessingStateEnum",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "An enum value representing why the document could not be processed. Is null unless processing_state is FAILED.

* \`EXCEEDED_CHARACTER_LIMIT\` - Exceeded Character Limit
* \`INVALID_FILE\` - Invalid File",
            "key": "processing_failure_reason",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:ProcessingFailureReasonEnum",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The document's current status.

* \`ACTIVE\` - Active",
            "key": "status",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:DocumentStatus",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "A list of keywords associated with this document. Originally provided when uploading the document.",
            "key": "keywords",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "A previously supplied JSON object containing metadata that can be filtered on when searching.",
            "key": "metadata",
            "valueType": {
              "itemType": {
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": {
                  "type": "unknown",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "document_to_document_indexes",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:DocumentDocumentToDocumentIndex",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SubmitCompletionActualRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "SubmitCompletionActualRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The Vellum-generated ID of a previously generated completion. Must provide either this or external_id.",
            "key": "id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The external ID that was originally provided when generating the completion that you'd now like to submit actuals for. Must provide either this or id.",
            "key": "external_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Text representing what the completion _should_ have been.",
            "key": "text",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "A number between 0 and 1 representing the quality of the completion. 0 is the worst, 1 is the best.",
            "key": "quality",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.",
            "key": "timestamp",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SubmitCompletionActualsErrorResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "SubmitCompletionActualsErrorResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "detail",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:SubmitWorkflowExecutionActualRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "SubmitWorkflowExecutionActualRequest",
      "shape": {
        "discriminant": "output_type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_:WorkflowExecutionActualStringRequest",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "STRING",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:WorkflowExecutionActualJsonRequest",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "JSON",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:WorkflowExecutionActualChatHistoryRequest",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "CHAT_HISTORY",
          },
        ],
      },
    },
    "type_:TemplatingNodeChatHistoryResult": {
      "availability": undefined,
      "description": undefined,
      "name": "TemplatingNodeChatHistoryResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessage",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:TemplatingNodeJsonResult": {
      "availability": undefined,
      "description": undefined,
      "name": "TemplatingNodeJsonResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": {
                  "type": "unknown",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:TemplatingNodeResult": {
      "availability": undefined,
      "description": undefined,
      "name": "TemplatingNodeResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "type_:TemplatingNodeResultData",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:TemplatingNodeResultData": {
      "availability": undefined,
      "description": undefined,
      "name": "TemplatingNodeResultData",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "output",
            "valueType": {
              "type": "id",
              "value": "type_:TemplatingNodeResultOutput",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:TemplatingNodeResultOutput": {
      "availability": undefined,
      "description": undefined,
      "name": "TemplatingNodeResultOutput",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_:TemplatingNodeStringResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "STRING",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:TemplatingNodeJsonResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "JSON",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:TemplatingNodeChatHistoryResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "CHAT_HISTORY",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:TemplatingNodeSearchResultsResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "SEARCH_RESULTS",
          },
        ],
      },
    },
    "type_:TemplatingNodeSearchResultsResult": {
      "availability": undefined,
      "description": undefined,
      "name": "TemplatingNodeSearchResultsResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:SearchResult",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:TemplatingNodeStringResult": {
      "availability": undefined,
      "description": undefined,
      "name": "TemplatingNodeStringResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:TerminalNodeChatHistoryResult": {
      "availability": undefined,
      "description": undefined,
      "name": "TerminalNodeChatHistoryResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The unique name given to the terminal node that produced this output.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessage",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:TerminalNodeJsonResult": {
      "availability": undefined,
      "description": undefined,
      "name": "TerminalNodeJsonResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The unique name given to the terminal node that produced this output.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": {
                  "type": "unknown",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:TerminalNodeResult": {
      "availability": undefined,
      "description": undefined,
      "name": "TerminalNodeResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "type_:TerminalNodeResultData",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:TerminalNodeResultData": {
      "availability": undefined,
      "description": undefined,
      "name": "TerminalNodeResultData",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "output",
            "valueType": {
              "type": "id",
              "value": "type_:TerminalNodeResultOutput",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:TerminalNodeResultOutput": {
      "availability": undefined,
      "description": undefined,
      "name": "TerminalNodeResultOutput",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_:TerminalNodeStringResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "STRING",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:TerminalNodeJsonResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "JSON",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:TerminalNodeChatHistoryResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "CHAT_HISTORY",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:TerminalNodeSearchResultsResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "SEARCH_RESULTS",
          },
        ],
      },
    },
    "type_:TerminalNodeSearchResultsResult": {
      "availability": undefined,
      "description": undefined,
      "name": "TerminalNodeSearchResultsResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The unique name given to the terminal node that produced this output.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:SearchResult",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:TerminalNodeStringResult": {
      "availability": undefined,
      "description": undefined,
      "name": "TerminalNodeStringResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The unique name given to the terminal node that produced this output.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:TestSuiteTestCase": {
      "availability": undefined,
      "description": undefined,
      "name": "TestSuiteTestCase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The id of the test case to update. If none is provided, an id will be generated and a new test case will be appended.",
            "key": "test_case_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "A human-friendly label for the test case.",
            "key": "label",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Key/value pairs for each input variable that the Test Suite expects.",
            "key": "input_values",
            "valueType": {
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "map",
              "valueType": {
                "type": "unknown",
              },
            },
          },
          {
            "availability": undefined,
            "description": "Parameters to use when evaluating the test case, specific to the test suite's evaluation metric.",
            "key": "evaluation_params",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluationParams",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:UploadDocumentErrorResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "UploadDocumentErrorResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "detail",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:UploadDocumentResponse": {
      "availability": undefined,
      "description": undefined,
      "name": "UploadDocumentResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The ID of the newly created document.",
            "key": "document_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:VellumVariable": {
      "availability": undefined,
      "description": undefined,
      "name": "VellumVariable",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_:VellumVariableType",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:VellumVariableType": {
      "availability": undefined,
      "description": "* \`STRING\` - String
* \`JSON\` - JSON
* \`CHAT_HISTORY\` - Chat History
* \`SEARCH_RESULTS\` - Search Results",
      "name": "VellumVariableType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "STRING",
          },
          {
            "description": undefined,
            "value": "JSON",
          },
          {
            "description": undefined,
            "value": "CHAT_HISTORY",
          },
          {
            "description": undefined,
            "value": "SEARCH_RESULTS",
          },
        ],
      },
    },
    "type_:WorkflowEventError": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowEventError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "code",
            "valueType": {
              "type": "id",
              "value": "type_:WorkflowExecutionEventErrorCode",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:WorkflowExecutionActualChatHistoryRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowExecutionActualChatHistoryRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The Vellum-generated ID of a workflow output. Must provide either this or output_key. output_key is typically preferred.",
            "key": "output_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The user-defined name of a workflow output. Must provide either this or output_id. Should correspond to the \`Name\` specified in a Final Output Node. Generally preferred over output_id.",
            "key": "output_key",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Optionally provide a decimal number between 0.0 and 1.0 (inclusive) representing the quality of the output. 0 is the worst, 1 is the best.",
            "key": "quality",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.",
            "key": "timestamp",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Optionally provide the value that the output ideally should have been.",
            "key": "desired_output_value",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessageRequest",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:WorkflowExecutionActualJsonRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowExecutionActualJsonRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The Vellum-generated ID of a workflow output. Must provide either this or output_key. output_key is typically preferred.",
            "key": "output_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The user-defined name of a workflow output. Must provide either this or output_id. Should correspond to the \`Name\` specified in a Final Output Node. Generally preferred over output_id.",
            "key": "output_key",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Optionally provide a decimal number between 0.0 and 1.0 (inclusive) representing the quality of the output. 0 is the worst, 1 is the best.",
            "key": "quality",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.",
            "key": "timestamp",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Optionally provide the value that the output ideally should have been.",
            "key": "desired_output_value",
            "valueType": {
              "itemType": {
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": {
                  "type": "unknown",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:WorkflowExecutionActualStringRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowExecutionActualStringRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The Vellum-generated ID of a workflow output. Must provide either this or output_key. output_key is typically preferred.",
            "key": "output_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The user-defined name of a workflow output. Must provide either this or output_id. Should correspond to the \`Name\` specified in a Final Output Node. Generally preferred over output_id.",
            "key": "output_key",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Optionally provide a decimal number between 0.0 and 1.0 (inclusive) representing the quality of the output. 0 is the worst, 1 is the best.",
            "key": "quality",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.",
            "key": "timestamp",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "Optionally provide the value that the output ideally should have been.",
            "key": "desired_output_value",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:WorkflowExecutionEventErrorCode": {
      "availability": undefined,
      "description": "* \`WORKFLOW_INITIALIZATION\` - WORKFLOW_INITIALIZATION
* \`NODE_EXECUTION_COUNT_LIMIT_REACHED\` - NODE_EXECUTION_COUNT_LIMIT_REACHED
* \`INTERNAL_SERVER_ERROR\` - INTERNAL_SERVER_ERROR
* \`NODE_EXECUTION\` - NODE_EXECUTION
* \`LLM_PROVIDER\` - LLM_PROVIDER
* \`INVALID_TEMPLATE\` - INVALID_TEMPLATE",
      "name": "WorkflowExecutionEventErrorCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "WORKFLOW_INITIALIZATION",
          },
          {
            "description": undefined,
            "value": "NODE_EXECUTION_COUNT_LIMIT_REACHED",
          },
          {
            "description": undefined,
            "value": "INTERNAL_SERVER_ERROR",
          },
          {
            "description": undefined,
            "value": "NODE_EXECUTION",
          },
          {
            "description": undefined,
            "value": "LLM_PROVIDER",
          },
          {
            "description": undefined,
            "value": "INVALID_TEMPLATE",
          },
        ],
      },
    },
    "type_:WorkflowExecutionEventType": {
      "availability": undefined,
      "description": "* \`NODE\` - Node
* \`WORKFLOW\` - Workflow",
      "name": "WorkflowExecutionEventType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "NODE",
          },
          {
            "description": undefined,
            "value": "WORKFLOW",
          },
        ],
      },
    },
    "type_:WorkflowExecutionNodeResultEvent": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowExecutionNodeResultEvent",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "execution_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "run_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "external_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "type_:WorkflowNodeResultEvent",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:WorkflowExecutionWorkflowResultEvent": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowExecutionWorkflowResultEvent",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "execution_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "run_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "external_id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "type_:WorkflowResultEvent",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:WorkflowNodeResultData": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowNodeResultData",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_:PromptNodeResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "PROMPT",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:SearchNodeResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "SEARCH",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:TemplatingNodeResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "TEMPLATING",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:ConditionalNodeResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "CONDITIONAL",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:TerminalNodeResult",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "TERMINAL",
          },
        ],
      },
    },
    "type_:WorkflowNodeResultEvent": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowNodeResultEvent",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "node_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "node_result_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "state",
            "valueType": {
              "type": "id",
              "value": "type_:WorkflowNodeResultEventState",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "ts",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "data",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:WorkflowNodeResultData",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "error",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:WorkflowEventError",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "input_values",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:NodeInputVariableCompiledValue",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:WorkflowNodeResultEventState": {
      "availability": undefined,
      "description": "* \`INITIATED\` - INITIATED
* \`STREAMING\` - STREAMING
* \`FULFILLED\` - FULFILLED
* \`REJECTED\` - REJECTED",
      "name": "WorkflowNodeResultEventState",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": undefined,
            "value": "INITIATED",
          },
          {
            "description": undefined,
            "value": "STREAMING",
          },
          {
            "description": undefined,
            "value": "FULFILLED",
          },
          {
            "description": undefined,
            "value": "REJECTED",
          },
        ],
      },
    },
    "type_:WorkflowRequestChatHistoryInputRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowRequestChatHistoryInputRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The variable's name, as defined in the Workflow.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:ChatMessageRequest",
              },
              "type": "list",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:WorkflowRequestInputRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowRequestInputRequest",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_:WorkflowRequestStringInputRequest",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "STRING",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:WorkflowRequestJsonInputRequest",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "JSON",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:WorkflowRequestChatHistoryInputRequest",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "CHAT_HISTORY",
          },
        ],
      },
    },
    "type_:WorkflowRequestJsonInputRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowRequestJsonInputRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The variable's name, as defined in the Workflow.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "map",
              "valueType": {
                "type": "unknown",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:WorkflowRequestStringInputRequest": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowRequestStringInputRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": "The variable's name, as defined in the Workflow.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:WorkflowResultEvent": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowResultEvent",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "state",
            "valueType": {
              "type": "id",
              "value": "type_:WorkflowNodeResultEventState",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "ts",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "output",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:WorkflowResultEventOutputData",
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "error",
            "valueType": {
              "itemType": {
                "type": "id",
                "value": "type_:WorkflowEventError",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:WorkflowResultEventOutputData": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowResultEventOutputData",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_:WorkflowResultEventOutputDataString",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "STRING",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:WorkflowResultEventOutputDataJson",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "JSON",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:WorkflowResultEventOutputDataChatHistory",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "CHAT_HISTORY",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:WorkflowResultEventOutputDataSearchResults",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "SEARCH_RESULTS",
          },
        ],
      },
    },
    "type_:WorkflowResultEventOutputDataChatHistory": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowResultEventOutputDataChatHistory",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "state",
            "valueType": {
              "type": "id",
              "value": "type_:WorkflowNodeResultEventState",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "node_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The newly output string value. Only relevant for string outputs with a state of STREAMING.",
            "key": "delta",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessage",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:WorkflowResultEventOutputDataJson": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowResultEventOutputDataJson",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "state",
            "valueType": {
              "type": "id",
              "value": "type_:WorkflowNodeResultEventState",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "node_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The newly output string value. Only relevant for string outputs with a state of STREAMING.",
            "key": "delta",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                  },
                },
                "type": "map",
                "valueType": {
                  "type": "unknown",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:WorkflowResultEventOutputDataSearchResults": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowResultEventOutputDataSearchResults",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "state",
            "valueType": {
              "type": "id",
              "value": "type_:WorkflowNodeResultEventState",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "node_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The newly output string value. Only relevant for string outputs with a state of STREAMING.",
            "key": "delta",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "value",
            "valueType": {
              "itemType": {
                "itemType": {
                  "type": "id",
                  "value": "type_:SearchResult",
                },
                "type": "list",
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:WorkflowResultEventOutputDataString": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowResultEventOutputDataString",
      "shape": {
        "extends": [],
        "properties": [
          {
            "availability": undefined,
            "description": undefined,
            "key": "id",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "state",
            "valueType": {
              "type": "id",
              "value": "type_:WorkflowNodeResultEventState",
            },
          },
          {
            "availability": undefined,
            "description": undefined,
            "key": "node_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
              },
            },
          },
          {
            "availability": undefined,
            "description": "The newly output string value, meant to be concatenated with all previous. Will be non-null for events of state STREAMING.",
            "key": "delta",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
          {
            "availability": undefined,
            "description": "The entire string value. Will be non-null for events of state FULFILLED.",
            "key": "value",
            "valueType": {
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                },
              },
              "type": "optional",
            },
          },
        ],
        "type": "object",
      },
    },
    "type_:WorkflowStreamEvent": {
      "availability": undefined,
      "description": undefined,
      "name": "WorkflowStreamEvent",
      "shape": {
        "discriminant": "type",
        "type": "discriminatedUnion",
        "variants": [
          {
            "additionalProperties": {
              "extends": [
                "type_:WorkflowExecutionWorkflowResultEvent",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "WORKFLOW",
          },
          {
            "additionalProperties": {
              "extends": [
                "type_:WorkflowExecutionNodeResultEvent",
              ],
              "properties": [],
            },
            "availability": undefined,
            "description": undefined,
            "discriminantValue": "NODE",
          },
        ],
      },
    },
  },
}
`;
