{
  "types": {
    "type_auth/v2:AuthGetTokenRequest": {
      "name": "AuthGetTokenRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "client_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "client_secret",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_auth/v2:AuthGetTokenResponse": {
      "name": "AuthGetTokenResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "access_token",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "expires_in",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "token_type",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_auth/v2:TooManyRequestsErrorType": {
      "name": "TooManyRequestsErrorType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:ClaimIdSet": {
      "description": "A set of Claim IDs (limit 5)",
      "name": "ClaimIdSet",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "claim_ids",
            "valueType": {
              "itemType": {
                "value": "type_commons:ClaimId",
                "type": "id"
              },
              "type": "set"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:ClaimCollection": {
      "name": "ClaimCollection",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "claim_id_set",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:ClaimIdSet"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimActionMetadata": {
      "description": "Useful properties for bulk claim actions related to a particular claim",
      "name": "BulkClaimActionMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "encounter_id",
            "valueType": {
              "value": "type_commons:EncounterId",
              "type": "id"
            }
          },
          {
            "key": "patient_first_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_last_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "date_of_service",
            "valueType": {
              "value": {
                "type": "date"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:NotImplementedError": {
      "description": "Bulk action is not yet implemented",
      "name": "NotImplementedError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:NoPayerGeneratedControlNumberError": {
      "description": "Claim does not have an associated payer-generated control number when one is required",
      "name": "NoPayerGeneratedControlNumberError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:TaskRequiredForWorkQueueError": {
      "description": "A task is required to move a claim to a work queue",
      "name": "TaskRequiredForWorkQueueError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:GenericWorkQueueError": {
      "description": "An error has occurred which prevents the claim from being routed to the work queue",
      "name": "GenericWorkQueueError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:UserNotAuthorizedForResubmitError": {
      "description": "User is not authorized for resubmission",
      "name": "UserNotAuthorizedForResubmitError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:UserNotAuthorizedToCloseAllOpenTasksError": {
      "description": "User is not authorized to close all open tasks",
      "name": "UserNotAuthorizedToCloseAllOpenTasksError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:ExecutionError": {
      "description": "Error while executing action",
      "name": "ExecutionError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:CreateTaskConfig": {
      "name": "CreateTaskConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "category",
            "valueType": {
              "itemType": {
                "value": "type_tasks/commons:TaskCategory",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "task_type",
            "valueType": {
              "value": "type_tasks/commons:TaskType",
              "type": "id"
            }
          },
          {
            "key": "assignee",
            "valueType": {
              "itemType": {
                "value": "type_commons:UserId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "context",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "action_required",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:BulkVoidClaimAction": {
      "name": "BulkVoidClaimAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:BulkResubmitFreshClaimAction": {
      "name": "BulkResubmitFreshClaimAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:BulkResubmitCorrectedClaimAction": {
      "name": "BulkResubmitCorrectedClaimAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "correction_reason",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:BulkCloseTasksAndProcessClaimAction": {
      "name": "BulkCloseTasksAndProcessClaimAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:MoveToWorkQueueClaimAction": {
      "name": "MoveToWorkQueueClaimAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "work_queue_id",
            "valueType": {
              "value": "type_commons:WorkQueueId",
              "type": "id"
            }
          },
          {
            "key": "create_task_config",
            "valueType": {
              "itemType": {
                "value": "type_bulk-claim-actions/v1:CreateTaskConfig",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimAction": {
      "name": "BulkClaimAction",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "void",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:BulkVoidClaimAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "resubmit_fresh",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:BulkResubmitFreshClaimAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "resubmit_corrected",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:BulkResubmitCorrectedClaimAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "close_and_process",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:BulkCloseTasksAndProcessClaimAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "move_to_work_queue",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:MoveToWorkQueueClaimAction"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimActionValidationErrorContents": {
      "name": "BulkClaimActionValidationErrorContents",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "not_implemented_error",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:NotImplementedError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "no_payer_generated_control_number_error",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:NoPayerGeneratedControlNumberError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "task_required_for_work_queue_error",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:TaskRequiredForWorkQueueError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "generic_work_queue_error",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:GenericWorkQueueError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "user_not_authorized_for_resubmit_error",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:UserNotAuthorizedForResubmitError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "user_not_authorized_to_close_all_open_tasks_error",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:UserNotAuthorizedToCloseAllOpenTasksError"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimActionValidationError": {
      "name": "BulkClaimActionValidationError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "contents",
            "valueType": {
              "value": "type_bulk-claim-actions/v1:BulkClaimActionValidationErrorContents",
              "type": "id"
            }
          },
          {
            "key": "summary",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimActionValidationResultBase": {
      "name": "BulkClaimActionValidationResultBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "claim_id",
            "valueType": {
              "value": "type_commons:ClaimId",
              "type": "id"
            }
          },
          {
            "key": "claim_metadata",
            "valueType": {
              "value": "type_bulk-claim-actions/v1:BulkClaimActionMetadata",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimActionValidationSuccess": {
      "name": "BulkClaimActionValidationSuccess",
      "shape": {
        "extends": ["type_bulk-claim-actions/v1:BulkClaimActionValidationResultBase"],
        "properties": [],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimActionValidationFailure": {
      "name": "BulkClaimActionValidationFailure",
      "shape": {
        "extends": ["type_bulk-claim-actions/v1:BulkClaimActionValidationResultBase"],
        "properties": [
          {
            "key": "errors",
            "valueType": {
              "itemType": {
                "value": "type_bulk-claim-actions/v1:BulkClaimActionValidationError",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimActionValidationResult": {
      "name": "BulkClaimActionValidationResult",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:BulkClaimActionValidationSuccess"],
              "properties": []
            }
          },
          {
            "discriminantValue": "failure",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:BulkClaimActionValidationFailure"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimActionValidationResponse": {
      "name": "BulkClaimActionValidationResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "itemType": {
                "value": "type_bulk-claim-actions/v1:BulkClaimActionValidationResult",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimActionExecutionErrorContents": {
      "name": "BulkClaimActionExecutionErrorContents",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "not_implemented_error",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:NotImplementedError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "no_payer_generated_control_number_error",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:NoPayerGeneratedControlNumberError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "task_required_for_work_queue_error",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:TaskRequiredForWorkQueueError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "generic_work_queue_error",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:GenericWorkQueueError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "user_not_authorized_for_resubmit_error",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:UserNotAuthorizedForResubmitError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "user_not_authorized_to_close_all_open_tasks_error",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:UserNotAuthorizedToCloseAllOpenTasksError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "execution_error",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:ExecutionError"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimActionExecutionError": {
      "name": "BulkClaimActionExecutionError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "contents",
            "valueType": {
              "value": "type_bulk-claim-actions/v1:BulkClaimActionExecutionErrorContents",
              "type": "id"
            }
          },
          {
            "key": "summary",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimActionExecutionResultBase": {
      "name": "BulkClaimActionExecutionResultBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "claim_id",
            "valueType": {
              "value": "type_commons:ClaimId",
              "type": "id"
            }
          },
          {
            "key": "claim_metadata",
            "valueType": {
              "value": "type_bulk-claim-actions/v1:BulkClaimActionMetadata",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimActionExecutionSuccess": {
      "name": "BulkClaimActionExecutionSuccess",
      "shape": {
        "extends": ["type_bulk-claim-actions/v1:BulkClaimActionExecutionResultBase"],
        "properties": [],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimActionExecutionFailure": {
      "name": "BulkClaimActionExecutionFailure",
      "shape": {
        "extends": ["type_bulk-claim-actions/v1:BulkClaimActionExecutionResultBase"],
        "properties": [
          {
            "key": "errors",
            "valueType": {
              "itemType": {
                "value": "type_bulk-claim-actions/v1:BulkClaimActionExecutionError",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimActionExecutionResult": {
      "name": "BulkClaimActionExecutionResult",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:BulkClaimActionExecutionSuccess"],
              "properties": []
            }
          },
          {
            "discriminantValue": "failure",
            "additionalProperties": {
              "extends": ["type_bulk-claim-actions/v1:BulkClaimActionExecutionFailure"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_bulk-claim-actions/v1:BulkClaimActionExecutionResponse": {
      "name": "BulkClaimActionExecutionResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "itemType": {
                "value": "type_bulk-claim-actions/v1:BulkClaimActionExecutionResult",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_chargemasters/v2:ChargemasterId": {
      "name": "ChargemasterId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_chargemasters/v2:ChargemasterEntryId": {
      "name": "ChargemasterEntryId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_chargemasters/v2:DeleteAllChargemastersResponse": {
      "name": "DeleteAllChargemastersResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "chargemaster_ids",
            "valueType": {
              "itemType": {
                "value": "type_chargemasters/v2:ChargemasterId",
                "type": "id"
              },
              "type": "set"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_chargemasters/v2:DeleteChargemasterEntriesByIdsRequest": {
      "name": "DeleteChargemasterEntriesByIdsRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "chargemaster_entry_ids",
            "valueType": {
              "itemType": {
                "value": "type_chargemasters/v2:ChargemasterEntryId",
                "type": "id"
              },
              "type": "set"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_claim/v2:FeeScheduleEntryId": {
      "name": "FeeScheduleEntryId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_claim/v2:BoundFeeScheduleId": {
      "name": "BoundFeeScheduleId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_claim/v2:FeeScheduleId": {
      "name": "FeeScheduleId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_claim/v2:ServiceLineAdjudicationDetailsResponse": {
      "name": "ServiceLineAdjudicationDetailsResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_line_adjudication_details",
            "valueType": {
              "keyType": {
                "value": "type_commons:ServiceLineId",
                "type": "id"
              },
              "valueType": {
                "value": "type_claim/v2:ServiceLineAdjudicationDetail",
                "type": "id"
              },
              "type": "map"
            }
          },
          {
            "key": "claim_id",
            "valueType": {
              "value": "type_commons:ClaimId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_claim/v2:ServiceLineAdjudicationDetail": {
      "name": "ServiceLineAdjudicationDetail",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_line_id",
            "valueType": {
              "value": "type_commons:ServiceLineId",
              "type": "id"
            }
          },
          {
            "key": "adjudication_match_results",
            "valueType": {
              "value": "type_claim/v2:AdjudicationMatchResultsUnion",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_claim/v2:LegacyMatchResults": {
      "description": "Legacy fee schedule matches return a list of amount cents because we can't represent plan or license type",
      "name": "LegacyMatchResults",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "expected_amounts_cents_list",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_claim/v2:AdjudicationMatchResultsUnion": {
      "name": "AdjudicationMatchResultsUnion",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "adjudication_match_results",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_claim/v2:AdjudicationMatchResults",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "legacy_match_results",
            "additionalProperties": {
              "extends": ["type_claim/v2:LegacyMatchResults"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_claim/v2:AdjudicationMatchResults": {
      "name": "AdjudicationMatchResults",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "no_adjudication_details",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "no_match",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "potential_matches",
            "additionalProperties": {
              "extends": ["type_claim/v2:PotentialMatches"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_claim/v2:PotentialMatches": {
      "name": "PotentialMatches",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_claim/v2:MatchResult",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_claim/v2:MatchResult": {
      "name": "MatchResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "fee_schedule_entry_id",
            "valueType": {
              "value": "type_claim/v2:FeeScheduleEntryId",
              "type": "id"
            }
          },
          {
            "key": "bound_fee_schedule_id",
            "valueType": {
              "value": "type_claim/v2:BoundFeeScheduleId",
              "type": "id"
            }
          },
          {
            "key": "fee_schedule_id",
            "valueType": {
              "value": "type_claim/v2:FeeScheduleId",
              "type": "id"
            }
          },
          {
            "key": "score",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payer_uuid",
            "valueType": {
              "value": "type_payers:PayerUuid",
              "type": "id"
            }
          },
          {
            "key": "expected_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_claim/v2:ClaimStatusMetadata": {
      "name": "ClaimStatusMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "value": "type_claims:ClaimStatus",
              "type": "id"
            }
          },
          {
            "key": "description",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "disabled",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "disabled_explanation",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter-providers/v2:EncounterProviderBase": {
      "name": "EncounterProviderBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "If the provider is an individual, this should be set instead of organization name\n",
            "key": "first_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "If the provider is an individual, this should be set instead of organization name\n",
            "key": "last_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "If the provider is an organization, this should be set instead of first + last name\n",
            "key": "organization_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter-providers/v2:RenderingProvider": {
      "name": "RenderingProvider",
      "shape": {
        "extends": ["type_encounter-providers/v2:EncounterProviderBase"],
        "properties": [
          {
            "key": "address",
            "valueType": {
              "itemType": {
                "value": "type_commons:StreetAddressLongZip",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "A National Provider Identifier is a unique 10-digit identification\nnumber issued to health care providers in the United States\n",
            "key": "npi",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter-providers/v2:ReferringProvider": {
      "name": "ReferringProvider",
      "shape": {
        "extends": ["type_encounter-providers/v2:EncounterProviderBase"],
        "properties": [
          {
            "description": "A National Provider Identifier is a unique 10-digit identification\nnumber issued to health care providers in the United States\n",
            "key": "npi",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "address",
            "valueType": {
              "itemType": {
                "value": "type_commons:StreetAddressLongZip",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter-providers/v2:ReferringProviderUpdate": {
      "name": "ReferringProviderUpdate",
      "shape": {
        "extends": ["type_encounter-providers/v2:EncounterProviderBase"],
        "properties": [
          {
            "description": "A National Provider Identifier is a unique 10-digit identification\nnumber issued to health care providers in the United States\n",
            "key": "npi",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "address",
            "valueType": {
              "itemType": {
                "value": "type_commons:StreetAddressLongZip",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter-providers/v2:BillingProvider": {
      "description": "The billing provider is the provider or business entity submitting the claim.\nBilling provider may be, but is not necessarily, the same person/NPI as the rendering provider.\nFrom a payer's perspective, this represents the person or entity being reimbursed.\nWhen a contract exists with the target payer, the billing provider should be the entity contracted with the payer.\nIn some circumstances, this will be an individual provider. In that case, submit that provider's NPI and the\ntax ID (TIN) that the provider gave to the payer during contracting.\nIn other cases, the billing entity will be a medical group. If so, submit the group NPI and the group's tax ID.\nBox 33 on the CMS-1500 claim form.\n",
      "name": "BillingProvider",
      "shape": {
        "extends": ["type_encounter-providers/v2:EncounterProviderBase"],
        "properties": [
          {
            "key": "address",
            "valueType": {
              "value": "type_commons:StreetAddressLongZip",
              "type": "id"
            }
          },
          {
            "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.\n",
            "key": "tax_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "npi",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter-providers/v2:ProviderId": {
      "name": "ProviderId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_encounter-providers/v2:EncounterProvider": {
      "name": "EncounterProvider",
      "shape": {
        "extends": ["type_encounter-providers/v2:EncounterProviderBase"],
        "properties": [
          {
            "key": "provider_id",
            "valueType": {
              "value": "type_encounter-providers/v2:ProviderId",
              "type": "id"
            }
          },
          {
            "key": "address",
            "valueType": {
              "value": "type_commons:StreetAddressLongZip",
              "type": "id"
            }
          },
          {
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "npi",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter-summaries/v1:EncounterSortableFields": {
      "name": "EncounterSortableFields",
      "shape": {
        "values": [
          {
            "value": "created_at"
          },
          {
            "value": "date_of_service"
          },
          {
            "value": "payer_name"
          },
          {
            "value": "payer_id"
          },
          {
            "value": "status"
          },
          {
            "value": "patient_name"
          },
          {
            "value": "billing_provider_tax_id"
          },
          {
            "value": "billing_provider_npi"
          },
          {
            "value": "rendering_provider_npi"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounter-summaries/v1:EncounterSortDirections": {
      "name": "EncounterSortDirections",
      "shape": {
        "values": [
          {
            "value": "desc"
          },
          {
            "value": "asc"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounter-summaries/v1:EncounterSummary": {
      "name": "EncounterSummary",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "encounter_id",
            "valueType": {
              "value": "type_commons:EncounterId",
              "type": "id"
            }
          },
          {
            "key": "claim_id",
            "valueType": {
              "value": "type_commons:ClaimId",
              "type": "id"
            }
          },
          {
            "key": "claim_status",
            "valueType": {
              "value": "type_claims:ClaimStatus",
              "type": "id"
            }
          },
          {
            "key": "billing_provider_npi",
            "valueType": {
              "value": "type_commons:Npi",
              "type": "id"
            }
          },
          {
            "key": "billing_provider_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "billing_provider_tin",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "rendering_provider_npi",
            "valueType": {
              "value": "type_commons:Npi",
              "type": "id"
            }
          },
          {
            "key": "rendering_provider_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "rendering_provider_tin",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_first_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_last_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "primary_payer_id",
            "valueType": {
              "itemType": {
                "value": "type_payers:PayerId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "primary_payer_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "sum_allowed_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "sum_charge_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "sum_paid_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "primary_insurance_paid_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "secondary_insurance_paid_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "tertiary_insurance_paid_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "sum_patient_responsibility_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "sum_insurance_balance_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "sum_insurance_adjustment_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "sum_patient_paid_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "sum_patient_balance_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "sum_total_balance_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "procedure_codes",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "set"
            }
          },
          {
            "key": "procedure_modifiers",
            "valueType": {
              "itemType": {
                "value": "type_commons:ProcedureModifier",
                "type": "id"
              },
              "type": "set"
            }
          },
          {
            "key": "carcs",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "set"
            }
          },
          {
            "key": "rarcs",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "set"
            }
          },
          {
            "key": "denial_reasons",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_service-lines/v2:DenialReasonContent",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "rejection_reason",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "tag_ids",
            "valueType": {
              "itemType": {
                "value": "type_tags:TagId",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "date_of_service",
            "valueType": {
              "value": {
                "type": "date"
              },
              "type": "primitive"
            }
          },
          {
            "key": "end_date_of_service",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_facility",
            "valueType": {
              "value": "type_service-facility:EncounterServiceFacility",
              "type": "id"
            }
          },
          {
            "key": "diagnosis_codes",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "set"
            }
          },
          {
            "key": "encounter_external_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "billable_status",
            "valueType": {
              "value": "type_encounters/v4:BillableStatusType",
              "type": "id"
            }
          },
          {
            "key": "responsible_party",
            "valueType": {
              "value": "type_encounters/v4:ResponsiblePartyType",
              "type": "id"
            }
          },
          {
            "key": "work_queue_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:WorkQueueId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "work_queue_membership_activated_at",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "datetime"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "owner_of_next_action",
            "valueType": {
              "value": "type_encounters/v4:EncounterOwnerOfNextActionType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter-summaries/v1:EncounterSummaryPage": {
      "name": "EncounterSummaryPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_encounter-summaries/v1:EncounterSummary",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters-internal/v1:RemitReversalResponse": {
      "name": "RemitReversalResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "remit_id",
            "valueType": {
              "value": "type_remits/v1:RemitId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters-internal/v1:EncounterFinancialInformation": {
      "name": "EncounterFinancialInformation",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "insurance_adjustment_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "insurance_balance_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "insurance_paid_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters-internal/v1:PrimaryEncounterFinancialInformation": {
      "description": "Claim balance is only available when the payer responsibility is primary.",
      "name": "PrimaryEncounterFinancialInformation",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "primary_financial_information",
            "valueType": {
              "value": "type_encounters-internal/v1:EncounterFinancialInformation",
              "type": "id"
            }
          },
          {
            "key": "claim_balance_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters-internal/v1:MultiplePayerResponsibilityEncounterFinancialInformation": {
      "description": "Claim balance is not available when the claim has multiple payer responsibilities.",
      "name": "MultiplePayerResponsibilityEncounterFinancialInformation",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "primary_financial_information",
            "valueType": {
              "value": "type_encounters-internal/v1:EncounterFinancialInformation",
              "type": "id"
            }
          },
          {
            "key": "secondary_financial_information",
            "valueType": {
              "value": "type_encounters-internal/v1:EncounterFinancialInformation",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters-internal/v1:EncounterFinancialInformationByPayerResponsibilityResponse": {
      "name": "EncounterFinancialInformationByPayerResponsibilityResponse",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "only_primary",
            "additionalProperties": {
              "extends": ["type_encounters-internal/v1:PrimaryEncounterFinancialInformation"],
              "properties": []
            }
          },
          {
            "discriminantValue": "multiple_payer_responsibility_financial_information",
            "additionalProperties": {
              "extends": ["type_encounters-internal/v1:MultiplePayerResponsibilityEncounterFinancialInformation"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_encounters-internal/v1:EncounterFinancialInformationResponse": {
      "name": "EncounterFinancialInformationResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "financial_information_by_payer_responsibility_response",
            "valueType": {
              "itemType": {
                "value": "type_encounters-internal/v1:EncounterFinancialInformationByPayerResponsibilityResponse",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "total_patient_balance_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "total_patient_responsibility_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "total_patient_paid_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "total_allowed_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "total_billed_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "total_insurance_financial_information",
            "valueType": {
              "value": "type_encounters-internal/v1:EncounterFinancialInformation",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:EncounterBase": {
      "name": "EncounterBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "A client-specified unique ID to associate with this encounter;\nfor example, your internal encounter ID or a Dr. Chrono encounter ID.\nThis field should not contain PHI.\n",
            "key": "external_id",
            "valueType": {
              "value": "type_commons:EncounterExternalId",
              "type": "id"
            }
          },
          {
            "description": "Date formatted as YYYY-MM-DD; eg: 2019-08-24.\nThis date must be the local date in the timezone where the service occurred.\nBox 24a on the CMS-1500 claim form.\nIf service occurred over a range of dates, this should be the start date.\n",
            "key": "date_of_service",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          },
          {
            "description": "Date formatted as YYYY-MM-DD; eg: 2019-08-25.\nThis date must be the local date in the timezone where the service occurred.\nIf omitted, the Encounter is assumed to be for a single day.\nMust not be temporally before the date_of_service field.\n",
            "key": "end_date_of_service",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Box 23 on the CMS-1500 claim form.",
            "key": "prior_authorization_number",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:PriorAuthorizationNumber",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether this patient has authorized the release of medical information\nfor billing purpose.\nBox 12 on the CMS-1500 claim form.\n",
            "key": "patient_authorized_release",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether this patient has authorized insurance payments to be made to you,\nnot them. If false, patient may receive reimbursement.\nBox 13 on the CMS-1500 claim form.\n",
            "key": "benefits_assigned_to_provider",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether you have accepted the patient's authorization for insurance payments\nto be made to you, not them.\nBox 27 on the CMS-1500 claim form.\n",
            "key": "provider_accepts_assignment",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Human-readable description of the appointment type (ex: \"Acupuncture - Headaches\")\n",
            "key": "appointment_type",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "existing_medications",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_encounters/v4:Medication",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "vitals",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:Vitals",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "interventions",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_encounters/v4:Intervention",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "pay_to_address",
            "valueType": {
              "itemType": {
                "value": "type_commons:StreetAddressLongZip",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether or not this was a synchronous or asynchronous encounter.\nAsynchronous encounters occur when providers and patients communicate online using\nforms, instant messaging, or other pre-recorded digital mediums.\nSynchronous encounters occur in live, real-time settings where the patient interacts\ndirectly with the provider, such as over video or a phone call.\n",
            "key": "synchronicity",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:SynchronicityType",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Defines if the Encounter is to be billed by Candid to the responsible_party.\nExamples for when this should be set to NOT_BILLABLE include\nif the Encounter has not occurred yet or if there is no intention of ever billing the responsible_party.\n",
            "key": "billable_status",
            "valueType": {
              "value": "type_encounters/v4:BillableStatusType",
              "type": "id"
            }
          },
          {
            "description": "Defines the party to be billed with the initial balance owed on the claim.\n",
            "key": "responsible_party",
            "valueType": {
              "value": "type_encounters/v4:ResponsiblePartyType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:Encounter": {
      "name": "Encounter",
      "shape": {
        "extends": ["type_encounters/v4:EncounterBase"],
        "properties": [
          {
            "key": "encounter_id",
            "valueType": {
              "value": "type_commons:EncounterId",
              "type": "id"
            }
          },
          {
            "key": "claims",
            "valueType": {
              "itemType": {
                "value": "type_claims:Claim",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "patient",
            "valueType": {
              "value": "type_individual:Patient",
              "type": "id"
            }
          },
          {
            "key": "guarantor",
            "valueType": {
              "itemType": {
                "value": "type_guarantor/v1:Guarantor",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "billing_provider",
            "valueType": {
              "value": "type_encounter-providers/v2:EncounterProvider",
              "type": "id"
            }
          },
          {
            "key": "rendering_provider",
            "valueType": {
              "value": "type_encounter-providers/v2:EncounterProvider",
              "type": "id"
            }
          },
          {
            "key": "referring_provider",
            "valueType": {
              "itemType": {
                "value": "type_encounter-providers/v2:EncounterProvider",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_facility",
            "valueType": {
              "value": "type_service-facility:EncounterServiceFacility",
              "type": "id"
            }
          },
          {
            "key": "subscriber_primary",
            "valueType": {
              "itemType": {
                "value": "type_individual:Subscriber",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "subscriber_secondary",
            "valueType": {
              "itemType": {
                "value": "type_individual:Subscriber",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "URL that links directly to the claim created in Candid",
            "key": "url",
            "valueType": {
              "value": "type_commons:LinkUrl",
              "type": "id"
            }
          },
          {
            "key": "diagnoses",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:Diagnosis",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "clinical_notes",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:ClinicalNoteCategory",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "description": "Spot to store misc, human-readable, notes about this encounter to be\nused in the billing process.\n",
            "key": "billing_notes",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_billing-notes:BillingNote",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "place_of_service_code",
            "valueType": {
              "itemType": {
                "value": "type_commons:FacilityTypeCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "place_of_service_code_as_submitted",
            "valueType": {
              "itemType": {
                "value": "type_commons:FacilityTypeCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_histories",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:PatientHistoryCategory",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "patient_payments",
            "valueType": {
              "itemType": {
                "value": "type_patient-payments/v3:PatientPayment",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "tags",
            "valueType": {
              "itemType": {
                "value": "type_tags:Tag",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "coding_attribution",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:CodingAttributionType",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "work_queue_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:WorkQueueId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "work_queue_membership_activated_at",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "datetime"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The party who is responsible for taking the next action on an Encounter, as defined by ownership of open Tasks.",
            "key": "owner_of_next_action",
            "valueType": {
              "value": "type_encounters/v4:EncounterOwnerOfNextActionType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:EncounterSortOptions": {
      "name": "EncounterSortOptions",
      "shape": {
        "values": [
          {
            "value": "created_at:asc"
          },
          {
            "value": "created_at:desc"
          },
          {
            "value": "date_of_service:asc"
          },
          {
            "value": "date_of_service:desc"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:Medication": {
      "name": "Medication",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "rx_cui",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:RxCui",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "dosage",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "dosage_form",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "frequency",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "as_needed",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:Vitals": {
      "name": "Vitals",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "height_in",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "weight_lbs",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "blood_pressure_systolic_mmhg",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "blood_pressure_diastolic_mmhg",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "body_temperature_f",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "double"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:Intervention": {
      "name": "Intervention",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "category",
            "valueType": {
              "value": "type_encounters/v4:InterventionCategory",
              "type": "id"
            }
          },
          {
            "description": "\"Examples: 'Birth Control LAC', 'Tracking', 'Stress Management', 'Supplement', 'Labs'\"\n",
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Required when `type` is `allopathic`",
            "key": "medication",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:Medication",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Required when `type` is `tests`",
            "key": "labs",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_encounters/v4:Lab",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:InterventionCategory": {
      "name": "InterventionCategory",
      "shape": {
        "values": [
          {
            "value": "allopathic"
          },
          {
            "value": "naturopathic"
          },
          {
            "value": "tests"
          },
          {
            "value": "lifestyle"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:Lab": {
      "name": "Lab",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "code_type",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:LabCodeType",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:LabCodeType": {
      "name": "LabCodeType",
      "shape": {
        "values": [
          {
            "value": "quest"
          },
          {
            "value": "labcorp"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:PatientHistoryCategory": {
      "name": "PatientHistoryCategory",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "category",
            "valueType": {
              "value": "type_encounters/v4:PatientHistoryCategoryEnum",
              "type": "id"
            }
          },
          {
            "description": "Must contain at least one item.",
            "key": "questions",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:IntakeQuestion",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:PatientHistoryCategoryEnum": {
      "name": "PatientHistoryCategoryEnum",
      "shape": {
        "values": [
          {
            "value": "present_illness"
          },
          {
            "value": "medical"
          },
          {
            "value": "family"
          },
          {
            "value": "social"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:IntakeQuestion": {
      "name": "IntakeQuestion",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_encounters/v4:IntakeQuestionId",
              "type": "id"
            }
          },
          {
            "key": "text",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "responses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_encounters/v4:IntakeResponseAndFollowUps",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:IntakeResponseAndFollowUps": {
      "name": "IntakeResponseAndFollowUps",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "response",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "follow_ups",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_encounters/v4:IntakeFollowUp",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:IntakeFollowUp": {
      "name": "IntakeFollowUp",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_encounters/v4:IntakeFollowUpId",
              "type": "id"
            }
          },
          {
            "key": "text",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "response",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:ClinicalNoteCategoryCreate": {
      "name": "ClinicalNoteCategoryCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "category",
            "valueType": {
              "value": "type_encounters/v4:NoteCategory",
              "type": "id"
            }
          },
          {
            "key": "notes",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:ClinicalNote",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:ClinicalNoteCategory": {
      "name": "ClinicalNoteCategory",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "category",
            "valueType": {
              "value": "type_encounters/v4:NoteCategory",
              "type": "id"
            }
          },
          {
            "key": "notes",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "list"
            }
          },
          {
            "key": "notes_structured",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_encounters/v4:ClinicalNote",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:NoteCategory": {
      "name": "NoteCategory",
      "shape": {
        "values": [
          {
            "value": "clinical"
          },
          {
            "value": "care_plan"
          },
          {
            "value": "diagnoses"
          },
          {
            "value": "vitals"
          },
          {
            "value": "physical_exam"
          },
          {
            "value": "review_of_systems"
          },
          {
            "value": "medical_decisions"
          },
          {
            "value": "history_of_present_illness"
          },
          {
            "value": "patient_info"
          },
          {
            "value": "chief_complaint"
          },
          {
            "value": "health_record"
          },
          {
            "value": "consent"
          },
          {
            "value": "procedure"
          },
          {
            "value": "time_in_appointment"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:ClinicalNote": {
      "name": "ClinicalNote",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "text",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "author_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "author_npi",
            "valueType": {
              "itemType": {
                "value": "type_commons:Npi",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "timestamp",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:ResponsiblePartyType": {
      "name": "ResponsiblePartyType",
      "shape": {
        "values": [
          {
            "value": "INSURANCE_PAY"
          },
          {
            "value": "SELF_PAY"
          },
          {
            "value": "UNKNOWN"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:BillableStatusType": {
      "name": "BillableStatusType",
      "shape": {
        "values": [
          {
            "value": "BILLABLE"
          },
          {
            "value": "NOT_BILLABLE"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:EncounterOwnerOfNextActionType": {
      "name": "EncounterOwnerOfNextActionType",
      "shape": {
        "values": [
          {
            "value": "CANDID"
          },
          {
            "value": "CUSTOMER"
          },
          {
            "value": "CODER"
          },
          {
            "value": "NONE"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:SynchronicityType": {
      "name": "SynchronicityType",
      "shape": {
        "values": [
          {
            "value": "Synchronous"
          },
          {
            "value": "Asynchronous"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:CodingAttributionType": {
      "name": "CodingAttributionType",
      "shape": {
        "values": [
          {
            "value": "CANDID"
          },
          {
            "value": "CUSTOMER"
          },
          {
            "value": "TCN"
          },
          {
            "value": "PJF"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:AttachmentId": {
      "name": "AttachmentId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_encounters/v4:BaseAttachment": {
      "name": "BaseAttachment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "attachment_id",
            "valueType": {
              "value": "type_encounters/v4:AttachmentId",
              "type": "id"
            }
          },
          {
            "key": "file_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "content_type",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "authed_url",
            "valueType": {
              "value": "type_commons:LinkUrl",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:EncounterAttachment": {
      "name": "EncounterAttachment",
      "shape": {
        "extends": ["type_encounters/v4:BaseAttachment"],
        "properties": [
          {
            "key": "attachment_type",
            "valueType": {
              "value": "type_encounters/v4:EncounterAttachmentType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:EncounterAttachmentType": {
      "name": "EncounterAttachmentType",
      "shape": {
        "values": [
          {
            "value": "DOCUMENTATION"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:GenerateClinicalNotesPdfResponse": {
      "name": "GenerateClinicalNotesPdfResponse",
      "shape": {
        "discriminant": "result",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": ["type_encounters/v4:SuccessfulGenerateClinicalNotesPdfResponse"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_encounters/v4:SuccessfulGenerateClinicalNotesPdfResponse": {
      "name": "SuccessfulGenerateClinicalNotesPdfResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "download_link",
            "valueType": {
              "value": "type_commons:ContentDownloadUrl",
              "type": "id"
            }
          },
          {
            "key": "ttl_seconds",
            "valueType": {
              "value": {
                "type": "double"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:NetworkStatusComputationResults": {
      "name": "NetworkStatusComputationResults",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "contracting_status_result",
            "valueType": {
              "value": "type_encounters/v4:AttributableContractingStatusResult",
              "type": "id"
            }
          },
          {
            "key": "credentialing_status_result",
            "valueType": {
              "value": "type_credentialing:EncounterCredentialingStatusResult",
              "type": "id"
            }
          },
          {
            "key": "network_status",
            "valueType": {
              "value": "type_encounters/v4:NetworkStatus",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:AttributableContractingStatusResult": {
      "name": "AttributableContractingStatusResult",
      "shape": {
        "discriminant": "contracting_status",
        "variants": [
          {
            "discriminantValue": "out_of_network",
            "additionalProperties": {
              "extends": ["type_encounters/v4:OutOfNetworkContractingStatusResult"],
              "properties": []
            }
          },
          {
            "discriminantValue": "in_network",
            "additionalProperties": {
              "extends": ["type_encounters/v4:InNetworkContractingStatusResult"],
              "properties": []
            }
          },
          {
            "discriminantValue": "unknown",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_encounters/v4:OutOfNetworkContractingStatusResult": {
      "name": "OutOfNetworkContractingStatusResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "out_of_network_reason",
            "valueType": {
              "value": "type_encounters/v4:ContractingOutOfOfNetworkReason",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:ContractingOutOfOfNetworkReason": {
      "name": "ContractingOutOfOfNetworkReason",
      "shape": {
        "values": [
          {
            "value": "no_effective_contract"
          },
          {
            "value": "missing_contract_linkage"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:InNetworkContractingStatusResult": {
      "name": "InNetworkContractingStatusResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "applicable_contracts",
            "valueType": {
              "itemType": {
                "value": "type_contracts:Contract",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:NetworkStatus": {
      "name": "NetworkStatus",
      "shape": {
        "values": [
          {
            "value": "in_network"
          },
          {
            "value": "out_of_network"
          },
          {
            "value": "unknown"
          },
          {
            "value": "not_adjudicated"
          }
        ],
        "type": "enum"
      }
    },
    "type_encounters/v4:MarkAsNotBillableResponse": {
      "name": "MarkAsNotBillableResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "closed_task_ids",
            "valueType": {
              "itemType": {
                "value": "type_commons:TaskId",
                "type": "id"
              },
              "type": "set"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:EncounterPage": {
      "name": "EncounterPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_encounters/v4:Encounter",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:PriorAuthorizationNumber": {
      "name": "PriorAuthorizationNumber",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_encounters/v4:RxCui": {
      "name": "RxCui",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_encounters/v4:IntakeQuestionId": {
      "name": "IntakeQuestionId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_encounters/v4:IntakeFollowUpId": {
      "name": "IntakeFollowUpId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_encounters/v4:EncounterExternalIdUniquenessErrorType": {
      "name": "EncounterExternalIdUniquenessErrorType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "external_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:EncounterExternalId",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:EncounterGuarantorMissingContactInfoErrorType": {
      "name": "EncounterGuarantorMissingContactInfoErrorType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "missing_fields",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounters/v4:CashPayPayerErrorMessage": {
      "name": "CashPayPayerErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_expected-network-status-tia/v1:Market": {
      "name": "Market",
      "shape": {
        "values": [
          {
            "value": "san_francisco"
          },
          {
            "value": "other"
          }
        ],
        "type": "enum"
      }
    },
    "type_expected-network-status-tia/v1:TiaExpectedNetworkStatusResponse": {
      "name": "TiaExpectedNetworkStatusResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "expected_network_status",
            "valueType": {
              "value": "type_expected-network-status/v1:ExpectedNetworkStatus",
              "type": "id"
            }
          },
          {
            "key": "explanation",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "contract_id",
            "valueType": {
              "itemType": {
                "value": "type_contracts:ContractId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "routed_payer_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "routed_payer_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "routed_billing_provider_npi",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "routed_billing_provider_tin",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_expected-network-status/v1:ExpectedNetworkStatus": {
      "name": "ExpectedNetworkStatus",
      "shape": {
        "values": [
          {
            "value": "in_network"
          },
          {
            "value": "out_of_network"
          },
          {
            "value": "unknown"
          }
        ],
        "type": "enum"
      }
    },
    "type_expected-network-status/v1:ExpectedNetworkStatusResponse": {
      "name": "ExpectedNetworkStatusResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "expected_network_status",
            "valueType": {
              "value": "type_expected-network-status/v1:ExpectedNetworkStatus",
              "type": "id"
            }
          },
          {
            "key": "explanation",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "contract_id",
            "valueType": {
              "itemType": {
                "value": "type_contracts:ContractId",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_exports/v3:GetExportsResponse": {
      "name": "GetExportsResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Report name; contains date strings representing the start and end date of the export.",
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Authenticated URL where a customer's report can be retrieved.",
            "key": "authenticated_download_url",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Expiration datetime of the authenticated URL. URLs expire after 2 minutes.",
            "key": "authenticated_download_url_expiration",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_fee-schedules/v1:FeeScheduleEntryConfigId": {
      "name": "FeeScheduleEntryConfigId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_fee-schedules/v1:FacilityType": {
      "name": "FacilityType",
      "shape": {
        "values": [
          {
            "value": "FACILITY"
          },
          {
            "value": "NON_FACILITY"
          }
        ],
        "type": "enum"
      }
    },
    "type_fee-schedules/v1:Modifier": {
      "name": "Modifier",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_fee-schedules/v1:FeeScheduleConfigModifier": {
      "name": "FeeScheduleConfigModifier",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "modifier",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_fee-schedules/v1:Modifier",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "all_modifiers",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_fee-schedules/v1:NetworkType": {
      "name": "NetworkType",
      "shape": {
        "values": [
          {
            "value": "PPO"
          },
          {
            "value": "HMO"
          },
          {
            "value": "EPO"
          },
          {
            "value": "POS"
          }
        ],
        "type": "enum"
      }
    },
    "type_fee-schedules/v1:FeeScheduleEntryConfigBase": {
      "name": "FeeScheduleEntryConfigBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "organization_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          },
          {
            "key": "procedure_code",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "modifier",
            "valueType": {
              "value": "type_fee-schedules/v1:FeeScheduleConfigModifier",
              "type": "id"
            }
          },
          {
            "key": "allowed_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payer_plan",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payer",
            "valueType": {
              "value": "type_payers:Payer",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_fee-schedules/v1:FeeScheduleEntryConfig": {
      "name": "FeeScheduleEntryConfig",
      "shape": {
        "extends": ["type_fee-schedules/v1:FeeScheduleEntryConfigBase"],
        "properties": [
          {
            "key": "fee_schedule_entry_config_id",
            "valueType": {
              "value": "type_fee-schedules/v1:FeeScheduleEntryConfigId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_fee-schedules/v1:FeeScheduleConfigSortFields": {
      "name": "FeeScheduleConfigSortFields",
      "shape": {
        "values": [
          {
            "value": "procedure_code"
          },
          {
            "value": "allowed_amount_cents"
          }
        ],
        "type": "enum"
      }
    },
    "type_fee-schedules/v1:FeeScheduleConfigFilters": {
      "name": "FeeScheduleConfigFilters",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "procedure_code_search_term",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "procedure_codes",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "modifiers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_fee-schedules/v1:FeeScheduleConfigModifier",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "payer_uuids",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_payers:PayerUuid",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "network_types",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_fee-schedules/v1:NetworkType",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "sort_field",
            "valueType": {
              "itemType": {
                "value": "type_fee-schedules/v1:FeeScheduleConfigSortFields",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "sort_order",
            "valueType": {
              "itemType": {
                "value": "type_commons:SortDirection",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "page_token",
            "valueType": {
              "itemType": {
                "value": "type_commons:PageToken",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "limit",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_fee-schedules/v1:FeeScheduleEntryConfigPage": {
      "name": "FeeScheduleEntryConfigPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_fee-schedules/v1:FeeScheduleEntryConfig",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_fee-schedules/v2:FeeScheduleId": {
      "name": "FeeScheduleId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_fee-schedules/v2:BoundFeeScheduleId": {
      "name": "BoundFeeScheduleId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_fee-schedules/v2:FeeScheduleEntryId": {
      "name": "FeeScheduleEntryId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_fee-schedules/v2:Network": {
      "name": "Network",
      "shape": {
        "values": [
          {
            "description": "Preferred Provider Organization (PPO)",
            "value": "12"
          },
          {
            "description": "Point of Service (POS)",
            "value": "13"
          },
          {
            "description": "Exclusive Provider Organization (EPO)",
            "value": "14"
          },
          {
            "description": "Indemnity Insurance",
            "value": "15"
          },
          {
            "description": "Health Maintenance Organization (HMO) Medicare Risk",
            "value": "16"
          },
          {
            "description": "Dental Maintenance Organization",
            "value": "17"
          },
          {
            "description": "Automobile Medical",
            "value": "AM"
          },
          {
            "description": "CHAMPUS",
            "value": "CH"
          },
          {
            "description": "Disability",
            "value": "DS"
          },
          {
            "description": "Health Maintenance Organization (HMO)",
            "value": "HM"
          },
          {
            "description": "Liability Medical",
            "value": "LM"
          },
          {
            "description": "Medicare Part A",
            "value": "MA"
          },
          {
            "description": "Medicare Part B",
            "value": "MB"
          },
          {
            "description": "Medicaid",
            "value": "MC"
          },
          {
            "description": "Other Federal Program",
            "value": "OF"
          },
          {
            "description": "Title V",
            "value": "TV"
          },
          {
            "description": "Veterans Affairs Plan",
            "value": "VA"
          },
          {
            "description": "Workers' Compensation Health Claim",
            "value": "WC"
          },
          {
            "description": "Mutually Defined",
            "value": "ZZ"
          }
        ],
        "type": "enum"
      }
    },
    "type_fee-schedules/v2:PlaceOfServiceCategory": {
      "name": "PlaceOfServiceCategory",
      "shape": {
        "values": [
          {
            "value": "FACILITY"
          },
          {
            "value": "NON_FACILITY"
          },
          {
            "value": "NOT_APPLICABLE"
          }
        ],
        "type": "enum"
      }
    },
    "type_fee-schedules/v2:FeeScheduleGeography": {
      "name": "FeeScheduleGeography",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "state",
            "valueType": {
              "value": "type_commons:State",
              "type": "id"
            }
          },
          {
            "key": "county",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_fee-schedules/v2:LicenseTypeCoverage": {
      "name": "LicenseTypeCoverage",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "all",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "license_types",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "itemType": {
                      "value": "type_organization-providers/v2:LicenseType",
                      "type": "id"
                    },
                    "type": "set"
                  }
                }
              ]
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_fee-schedules/v2:NetworkCoverage": {
      "name": "NetworkCoverage",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "all",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "networks",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "itemType": {
                      "value": "type_fee-schedules/v2:Network",
                      "type": "id"
                    },
                    "type": "set"
                  }
                }
              ]
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_fee-schedules/v2:GeographyCoverage": {
      "name": "GeographyCoverage",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "all",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "geography",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "itemType": {
                      "value": "type_fee-schedules/v2:FeeScheduleGeography",
                      "type": "id"
                    },
                    "type": "set"
                  }
                }
              ]
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_fee-schedules/v2:PlaceOfServiceCoverage": {
      "name": "PlaceOfServiceCoverage",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "all",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "place_of_services",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "itemType": {
                      "value": "type_fee-schedules/v2:PlaceOfServiceCategory",
                      "type": "id"
                    },
                    "type": "set"
                  }
                }
              ]
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_fee-schedules/v2:FeeScheduleConfigurationMechanism": {
      "name": "FeeScheduleConfigurationMechanism",
      "shape": {
        "values": [
          {
            "description": "The hard-coded CSV fee schedule configuration without dimensionality.",
            "value": "legacy"
          },
          {
            "description": "The dimensioned fee schedules eventually managed via Candid App.",
            "value": "dimensioned"
          }
        ],
        "type": "enum"
      }
    },
    "type_fee-schedules/v2:GetFeeScheduleConfigurationMechanismResponse": {
      "name": "GetFeeScheduleConfigurationMechanismResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "mechanism",
            "valueType": {
              "value": "type_fee-schedules/v2:FeeScheduleConfigurationMechanism",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_fee-schedules/v2:ReferenceFeeScheduleMetadata": {
      "name": "ReferenceFeeScheduleMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "percentage",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "reference_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_fee-schedules/v2:BoundFeeSchedule": {
      "name": "BoundFeeSchedule",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "bound_fee_schedule_id",
            "valueType": {
              "value": "type_fee-schedules/v2:BoundFeeScheduleId",
              "type": "id"
            }
          },
          {
            "key": "fee_schedule_id",
            "valueType": {
              "value": "type_fee-schedules/v2:FeeScheduleId",
              "type": "id"
            }
          },
          {
            "key": "reference_fee_schedule",
            "valueType": {
              "itemType": {
                "value": "type_fee-schedules/v2:ReferenceFeeScheduleMetadata",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "license_type_coverage",
            "valueType": {
              "value": "type_fee-schedules/v2:LicenseTypeCoverage",
              "type": "id"
            }
          },
          {
            "key": "network_coverage",
            "valueType": {
              "value": "type_fee-schedules/v2:NetworkCoverage",
              "type": "id"
            }
          },
          {
            "key": "geography_coverage",
            "valueType": {
              "value": "type_fee-schedules/v2:GeographyCoverage",
              "type": "id"
            }
          },
          {
            "key": "place_of_service_coverage",
            "valueType": {
              "value": "type_fee-schedules/v2:PlaceOfServiceCoverage",
              "type": "id"
            }
          },
          {
            "key": "effective_date_range",
            "valueType": {
              "value": "type_commons:DateRangeRequiredEnd",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_fee-schedules/v2:GroupedFeeSchedules": {
      "name": "GroupedFeeSchedules",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "billing_npi",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "bound_fee_schedules",
            "valueType": {
              "itemType": {
                "value": "type_fee-schedules/v2:BoundFeeSchedule",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_fee-schedules/v2:GetGroupedFeeSchedulesForPayerPage": {
      "name": "GetGroupedFeeSchedulesForPayerPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_fee-schedules/v2:GroupedFeeSchedules",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_fee-schedules/v2:GetGroupedFeeSchedulesForPayerResponse": {
      "name": "GetGroupedFeeSchedulesForPayerResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "page",
            "valueType": {
              "value": "type_fee-schedules/v2:GetGroupedFeeSchedulesForPayerPage",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_fee-schedules/v2:FeeScheduleEntry": {
      "name": "FeeScheduleEntry",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_fee-schedules/v2:FeeScheduleEntryId",
              "type": "id"
            }
          },
          {
            "key": "procedure_code",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "modifier",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "contracted_rate_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_fee-schedules/v2:GetBoundFeeScheduleResponse": {
      "name": "GetBoundFeeScheduleResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "bound_fee_schedule",
            "valueType": {
              "value": "type_fee-schedules/v2:BoundFeeSchedule",
              "type": "id"
            }
          },
          {
            "key": "entries",
            "valueType": {
              "itemType": {
                "value": "type_fee-schedules/v2:FeeScheduleEntry",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_guarantor/v1:GuarantorId": {
      "name": "GuarantorId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_guarantor/v1:GuarantorBase": {
      "name": "GuarantorBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "first_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "last_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "external_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "date_of_birth",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "address",
            "valueType": {
              "itemType": {
                "value": "type_commons:StreetAddressShortZip",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_guarantor/v1:Guarantor": {
      "name": "Guarantor",
      "shape": {
        "extends": ["type_guarantor/v1:GuarantorBase"],
        "properties": [
          {
            "key": "guarantor_id",
            "valueType": {
              "value": "type_guarantor/v1:GuarantorId",
              "type": "id"
            }
          },
          {
            "key": "phone_numbers",
            "valueType": {
              "itemType": {
                "value": "type_commons:PhoneNumber",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "phone_consent",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "email",
            "valueType": {
              "itemType": {
                "value": "type_commons:Email",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "email_consent",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_guarantor/v1:GuarantorCreate": {
      "name": "GuarantorCreate",
      "shape": {
        "extends": ["type_guarantor/v1:GuarantorBase"],
        "properties": [
          {
            "key": "phone_numbers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_commons:PhoneNumber",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "description": "Defaults to false",
            "key": "phone_consent",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "email",
            "valueType": {
              "itemType": {
                "value": "type_commons:Email",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Defaults to false",
            "key": "email_consent",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_guarantor/v1:EncounterHasExistingGuarantorErrorType": {
      "name": "EncounterHasExistingGuarantorErrorType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-adjustments/v1:InsuranceAdjustmentId": {
      "name": "InsuranceAdjustmentId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_insurance-adjustments/v1:ClaimAdjustmentReasonCode": {
      "name": "ClaimAdjustmentReasonCode",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "group_code",
            "valueType": {
              "value": "type_commons:ClaimAdjustmentGroupCodes",
              "type": "id"
            }
          },
          {
            "key": "reason_code",
            "valueType": {
              "value": "type_x12/v1:Carc",
              "type": "id"
            }
          },
          {
            "key": "amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-adjustments/v1:RemittanceAdviceRemarkCode": {
      "name": "RemittanceAdviceRemarkCode",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "reason_code",
            "valueType": {
              "value": "type_x12/v1:Rarc",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-adjustments/v1:InsuranceAdjustmentAttachmentId": {
      "name": "InsuranceAdjustmentAttachmentId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_insurance-adjustments/v1:InsuranceAdjustmentAttachmentResponse": {
      "name": "InsuranceAdjustmentAttachmentResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "signed_download_url",
            "valueType": {
              "value": "type_commons:ContentDownloadUrl",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-adjustments/v1:ServiceLineAdjustmentRequest": {
      "name": "ServiceLineAdjustmentRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Will be treated as a denial if present",
            "key": "denial_reason",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:DenialReasonContent",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "insurance_allowed_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "insurance_paid_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "deductible_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "coinsurance_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "copay_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "carcs",
            "valueType": {
              "itemType": {
                "value": "type_insurance-adjustments/v1:ClaimAdjustmentReasonCode",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "rarcs",
            "valueType": {
              "itemType": {
                "value": "type_insurance-adjustments/v1:RemittanceAdviceRemarkCode",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentRequest": {
      "name": "ValidateInsuranceAdjustmentRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_lines",
            "valueType": {
              "keyType": {
                "value": "type_commons:ServiceLineId",
                "type": "id"
              },
              "valueType": {
                "value": "type_insurance-adjustments/v1:ServiceLineAdjustmentRequest",
                "type": "id"
              },
              "type": "map"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-adjustments/v1:ValidateServiceLineAdjustmentResponse": {
      "name": "ValidateServiceLineAdjustmentResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "insurance_adjustment_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "other_patient_responsibility_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentResponse": {
      "name": "ValidateInsuranceAdjustmentResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_lines",
            "valueType": {
              "keyType": {
                "value": "type_commons:ServiceLineId",
                "type": "id"
              },
              "valueType": {
                "value": "type_insurance-adjustments/v1:ValidateServiceLineAdjustmentResponse",
                "type": "id"
              },
              "type": "map"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-adjustments/v1:CreateInsuranceAdjustmentRequest": {
      "name": "CreateInsuranceAdjustmentRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "payer_uuid",
            "valueType": {
              "value": "type_payers:PayerUuid",
              "type": "id"
            }
          },
          {
            "description": "Defaults to today",
            "key": "post_date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "payer_claim_number",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "check_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "check_date",
            "valueType": {
              "value": {
                "type": "date"
              },
              "type": "primitive"
            }
          },
          {
            "key": "note",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_lines",
            "valueType": {
              "keyType": {
                "value": "type_commons:ServiceLineId",
                "type": "id"
              },
              "valueType": {
                "value": "type_insurance-adjustments/v1:ServiceLineAdjustmentRequest",
                "type": "id"
              },
              "type": "map"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-adjustments/v1:CreateInsuranceAdjustmentResponse": {
      "name": "CreateInsuranceAdjustmentResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "adjustment_id",
            "valueType": {
              "value": "type_insurance-adjustments/v1:InsuranceAdjustmentId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-adjustments/v1:OtherFieldError": {
      "description": "A generic error that can be displayed on the targeted field with a user-facing description.",
      "name": "OtherFieldError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "human_readable_description",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-adjustments/v1:CarcGroupCodeError": {
      "name": "CarcGroupCodeError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "other",
            "additionalProperties": {
              "extends": ["type_insurance-adjustments/v1:OtherFieldError"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_insurance-adjustments/v1:CarcReasonCodeError": {
      "name": "CarcReasonCodeError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "only_denied_carc_code_on_denied_service_line",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "denial_code_used_without_denial_reason",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "other",
            "additionalProperties": {
              "extends": ["type_insurance-adjustments/v1:OtherFieldError"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_insurance-adjustments/v1:CarcAmountError": {
      "name": "CarcAmountError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "other",
            "additionalProperties": {
              "extends": ["type_insurance-adjustments/v1:OtherFieldError"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_insurance-adjustments/v1:CarcPropertyFieldError": {
      "name": "CarcPropertyFieldError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "group_code_error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_insurance-adjustments/v1:CarcGroupCodeError",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "reason_code_error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_insurance-adjustments/v1:CarcReasonCodeError",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "amount_error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_insurance-adjustments/v1:CarcAmountError",
                    "type": "id"
                  }
                }
              ]
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_insurance-adjustments/v1:RarcReasonCodeError": {
      "name": "RarcReasonCodeError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "at_least_one_carc_required",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "other",
            "additionalProperties": {
              "extends": ["type_insurance-adjustments/v1:OtherFieldError"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_insurance-adjustments/v1:RarcPropertyFieldError": {
      "name": "RarcPropertyFieldError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "reason_code_error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_insurance-adjustments/v1:RarcReasonCodeError",
                    "type": "id"
                  }
                }
              ]
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_insurance-adjustments/v1:DenialReasonFieldError": {
      "name": "DenialReasonFieldError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "at_least_one_denial_carc_required",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "other",
            "additionalProperties": {
              "extends": ["type_insurance-adjustments/v1:OtherFieldError"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_insurance-adjustments/v1:InsuranceAllowedFieldError": {
      "name": "InsuranceAllowedFieldError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "other",
            "additionalProperties": {
              "extends": ["type_insurance-adjustments/v1:OtherFieldError"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_insurance-adjustments/v1:InsurancePaidFieldError": {
      "name": "InsurancePaidFieldError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "other",
            "additionalProperties": {
              "extends": ["type_insurance-adjustments/v1:OtherFieldError"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_insurance-adjustments/v1:DeductibleFieldError": {
      "name": "DeductibleFieldError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "other",
            "additionalProperties": {
              "extends": ["type_insurance-adjustments/v1:OtherFieldError"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_insurance-adjustments/v1:CoinsuranceFieldError": {
      "name": "CoinsuranceFieldError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "other",
            "additionalProperties": {
              "extends": ["type_insurance-adjustments/v1:OtherFieldError"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_insurance-adjustments/v1:CopayFieldError": {
      "name": "CopayFieldError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "other",
            "additionalProperties": {
              "extends": ["type_insurance-adjustments/v1:OtherFieldError"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_insurance-adjustments/v1:CarcFieldError": {
      "name": "CarcFieldError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "index",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "property_error",
            "valueType": {
              "value": "type_insurance-adjustments/v1:CarcPropertyFieldError",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-adjustments/v1:RarcFieldError": {
      "name": "RarcFieldError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "index",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "property_error",
            "valueType": {
              "value": "type_insurance-adjustments/v1:RarcPropertyFieldError",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-adjustments/v1:InvalidDeniedAdjustmentAmountError": {
      "name": "InvalidDeniedAdjustmentAmountError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "denial_amount_is_not_equal_to_billed_amount",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "other",
            "additionalProperties": {
              "extends": ["type_insurance-adjustments/v1:OtherFieldError"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentFieldError": {
      "name": "ValidateInsuranceAdjustmentFieldError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "carc_error",
            "additionalProperties": {
              "extends": ["type_insurance-adjustments/v1:CarcFieldError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "rarc_error",
            "additionalProperties": {
              "extends": ["type_insurance-adjustments/v1:RarcFieldError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "denial_reason_error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_insurance-adjustments/v1:DenialReasonFieldError",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "invalid_denied_adjustment_amount_error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_insurance-adjustments/v1:InvalidDeniedAdjustmentAmountError",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "insurance_adjustment_amount_is_greater_than_allowed_amount",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentFieldsErrorsType": {
      "name": "ValidateInsuranceAdjustmentFieldsErrorsType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "errors",
            "valueType": {
              "keyType": {
                "value": "type_commons:ServiceLineId",
                "type": "id"
              },
              "valueType": {
                "itemType": {
                  "value": "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentFieldError",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "map"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-adjustments/v1:CreateInsuranceAdjustmentFieldError": {
      "name": "CreateInsuranceAdjustmentFieldError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "denial_reason_error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_insurance-adjustments/v1:DenialReasonFieldError",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "insurance_allowed_error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_insurance-adjustments/v1:InsuranceAllowedFieldError",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "insurance_paid_error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_insurance-adjustments/v1:InsurancePaidFieldError",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "deductible_error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_insurance-adjustments/v1:DeductibleFieldError",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "coinsurance_error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_insurance-adjustments/v1:CoinsuranceFieldError",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "copay_error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_insurance-adjustments/v1:CopayFieldError",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "carc_error",
            "additionalProperties": {
              "extends": ["type_insurance-adjustments/v1:CarcFieldError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "rarc_error",
            "additionalProperties": {
              "extends": ["type_insurance-adjustments/v1:RarcFieldError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "invalid_denied_adjustment_amount_error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_insurance-adjustments/v1:InvalidDeniedAdjustmentAmountError",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "insurance_adjustment_amount_is_greater_than_allowed_amount",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_insurance-adjustments/v1:CreateInsuranceAdjustmentFieldsErrorsType": {
      "name": "CreateInsuranceAdjustmentFieldsErrorsType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "errors",
            "valueType": {
              "keyType": {
                "value": "type_commons:ServiceLineId",
                "type": "id"
              },
              "valueType": {
                "itemType": {
                  "value": "type_insurance-adjustments/v1:CreateInsuranceAdjustmentFieldError",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "map"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_internal-api-testing/v1:Movie": {
      "name": "Movie",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "director",
            "valueType": {
              "value": "type_internal-api-testing/v1:Director",
              "type": "id"
            }
          },
          {
            "key": "year_of_release",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_internal-api-testing/v1:Director": {
      "name": "Director",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_internal-api-testing/v1:MovieCreate": {
      "name": "MovieCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "director",
            "valueType": {
              "value": "type_internal-api-testing/v1:Director",
              "type": "id"
            }
          },
          {
            "key": "year_of_release",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_managed-emr-configs/v1:ManagedEmrConfigPage": {
      "name": "ManagedEmrConfigPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_managed-emr-configs/v1:ManagedEmrConfig",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_managed-emr-configs/v1:ManagedEmrConfigId": {
      "description": "The ID of the Managed EMR Config",
      "name": "ManagedEmrConfigId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_managed-emr-configs/v1:ManagedEmrConfigAdditionalDetails": {
      "name": "ManagedEmrConfigAdditionalDetails",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "canvas",
            "additionalProperties": {
              "extends": ["type_managed-emr-configs/v1:CanvasEmrConfig"],
              "properties": []
            }
          },
          {
            "discriminantValue": "elation",
            "additionalProperties": {
              "extends": ["type_managed-emr-configs/v1:ElationEmrConfig"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_managed-emr-configs/v1:ManagedEmrConfig": {
      "name": "ManagedEmrConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The ID of the Canvas EMR integration",
            "key": "id",
            "valueType": {
              "value": "type_managed-emr-configs/v1:ManagedEmrConfigId",
              "type": "id"
            }
          },
          {
            "description": "The date that the integration is eligible for billing",
            "key": "billing_start_date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Create tasks in the EMR system for encounters that are marked as `DNB` but fail to be ingested by our integration",
            "key": "create_tasks_for_non_billable_encounters",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether to process updates for existing encounters",
            "key": "process_updates_for_existing_encounters",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether the EMR integration is enabled",
            "key": "enabled",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Additional details for the EMR integration",
            "key": "additional_details",
            "valueType": {
              "value": "type_managed-emr-configs/v1:ManagedEmrConfigAdditionalDetails",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_managed-emr-configs/v1:ManagedEmrConfigCreateAdditionalDetails": {
      "name": "ManagedEmrConfigCreateAdditionalDetails",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "canvas",
            "additionalProperties": {
              "extends": ["type_managed-emr-configs/v1:CanvasEmrConfigCreate"],
              "properties": []
            }
          },
          {
            "discriminantValue": "elation",
            "additionalProperties": {
              "extends": ["type_managed-emr-configs/v1:ElationEmrConfigCreate"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_managed-emr-configs/v1:ManagedEmrConfigCreate": {
      "name": "ManagedEmrConfigCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The date that the integration is eligible for billing",
            "key": "billing_start_date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Create tasks in the EMR system for encounters that are marked as `DNB` but fail to be ingested by our integration",
            "key": "create_tasks_for_non_billable_encounters",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether to process updates for existing encounters",
            "key": "process_updates_for_existing_encounters",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether the EMR integration is enabled",
            "key": "enabled",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Additional details for the EMR integration",
            "key": "additional_details",
            "valueType": {
              "value": "type_managed-emr-configs/v1:ManagedEmrConfigCreateAdditionalDetails",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_managed-emr-configs/v1:ManagedEmrConfigUpdateAdditionalDetails": {
      "name": "ManagedEmrConfigUpdateAdditionalDetails",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "canvas",
            "additionalProperties": {
              "extends": ["type_managed-emr-configs/v1:CanvasEmrConfigUpdate"],
              "properties": []
            }
          },
          {
            "discriminantValue": "elation",
            "additionalProperties": {
              "extends": ["type_managed-emr-configs/v1:ElationEmrConfigUpdate"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_managed-emr-configs/v1:ManagedEmrConfigUpdate": {
      "name": "ManagedEmrConfigUpdate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The date that the integration was turned on",
            "key": "billing_start_date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Create tasks in the EMR system for encounters that are marked as `DNB` but fail to be ingested by our integration",
            "key": "create_tasks_for_non_billable_encounters",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether to process updates for existing encounters",
            "key": "process_updates_for_existing_encounters",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether the integration is enabled",
            "key": "enabled",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Additional details for the EMR integration",
            "key": "additional_details",
            "valueType": {
              "itemType": {
                "value": "type_managed-emr-configs/v1:ManagedEmrConfigUpdateAdditionalDetails",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_managed-emr-configs/v1:CanvasEmrConfig": {
      "name": "CanvasEmrConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The name of the organization that the Canvas EMR integration is for",
            "key": "canvas_export_organization_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The base URL for the Canvas EMR integration",
            "key": "base_url",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The auth base URL for the Canvas EMR integration",
            "key": "auth_base_url",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The candid practitioner ID for the Canvas EMR integration",
            "key": "candid_practitioner_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The customer task owner for the Canvas EMR integration",
            "key": "customer_task_owner",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_managed-emr-configs/v1:CanvasEmrConfigCreate": {
      "name": "CanvasEmrConfigCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The name of the organization that the Canvas EMR integration is for",
            "key": "canvas_export_organization_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The client ID for the Canvas EMR integration",
            "key": "canvas_client_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The client secret for the Canvas EMR integration",
            "key": "canvas_client_secret",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The base URL for the Canvas EMR integration",
            "key": "base_url",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The auth base URL for the Canvas EMR integration",
            "key": "auth_base_url",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The candid practitioner ID for the Canvas EMR integration",
            "key": "candid_practitioner_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The customer task owner for the Canvas EMR integration",
            "key": "customer_task_owner",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_managed-emr-configs/v1:CanvasEmrConfigUpdate": {
      "name": "CanvasEmrConfigUpdate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The name of the organization that the Canvas EMR integration is for",
            "key": "canvas_export_organization_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The client ID for the Canvas EMR integration",
            "key": "canvas_client_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The client secret for the Canvas EMR integration",
            "key": "canvas_client_secret",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The base URL for the Canvas EMR integration",
            "key": "base_url",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The auth base URL for the Canvas EMR integration",
            "key": "auth_base_url",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The candid practitioner ID for the Canvas EMR integration",
            "key": "candid_practitioner_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The customer task owner for the Canvas EMR integration",
            "key": "customer_task_owner",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_managed-emr-configs/v1:IntegrationLevelElationServiceFacilityRoutingMetadata": {
      "name": "IntegrationLevelElationServiceFacilityRoutingMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The default service facility group name for the Elation EMR integration",
            "key": "default_service_facility_group_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_managed-emr-configs/v1:RuleLevelElationServiceFacilityRoutingMetadata": {
      "name": "RuleLevelElationServiceFacilityRoutingMetadata",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_managed-emr-configs/v1:FilterActionLevelElationServiceFacilityRoutingMetadata": {
      "name": "FilterActionLevelElationServiceFacilityRoutingMetadata",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_managed-emr-configs/v1:ElationServiceFacilityRoutingMetadata": {
      "name": "ElationServiceFacilityRoutingMetadata",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "integration",
            "additionalProperties": {
              "extends": ["type_managed-emr-configs/v1:IntegrationLevelElationServiceFacilityRoutingMetadata"],
              "properties": []
            }
          },
          {
            "discriminantValue": "rule",
            "additionalProperties": {
              "extends": ["type_managed-emr-configs/v1:RuleLevelElationServiceFacilityRoutingMetadata"],
              "properties": []
            }
          },
          {
            "discriminantValue": "filter_action_rule",
            "additionalProperties": {
              "extends": ["type_managed-emr-configs/v1:FilterActionLevelElationServiceFacilityRoutingMetadata"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_managed-emr-configs/v1:ElationEmrConfig": {
      "name": "ElationEmrConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The username for the Elation EMR integration. This has been deprecated by Elation.",
            "key": "elation_username",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether to enable patient payment for the Elation EMR integration. This has been deprecated by Elation.",
            "key": "enable_patient_payment",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The service facility routing location for the Elation EMR integration",
            "key": "service_facility_routing_location",
            "valueType": {
              "value": "type_managed-emr-configs/v1:ElationServiceFacilityRoutingMetadata",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_managed-emr-configs/v1:ElationEmrConfigCreate": {
      "name": "ElationEmrConfigCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The client ID for the Elation EMR integration",
            "key": "elation_client_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The client secret for the Elation EMR integration",
            "key": "elation_client_secret",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The username for the Elation EMR integration. This has been deprecated by Elation.",
            "key": "elation_username",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The password for the Elation EMR integration",
            "key": "elation_password",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether to enable patient payment for the Elation EMR integration. This has been deprecated by Elation.",
            "key": "enable_patient_payment",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The service facility routing location for the Elation EMR integration",
            "key": "service_facility_routing_location",
            "valueType": {
              "value": "type_managed-emr-configs/v1:ElationServiceFacilityRoutingMetadata",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_managed-emr-configs/v1:ElationEmrConfigUpdate": {
      "name": "ElationEmrConfigUpdate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The client ID for the Elation EMR integration",
            "key": "elation_client_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The client secret for the Elation EMR integration",
            "key": "elation_client_secret",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The username for the Elation EMR integration. This has been deprecated by Elation.",
            "key": "elation_username",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The password for the Elation EMR integration",
            "key": "elation_password",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether to enable patient payment for the Elation EMR integration. This has been deprecated by Elation.",
            "key": "enable_patient_payment",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The service facility routing location for the Elation EMR integration",
            "key": "service_facility_routing_location",
            "valueType": {
              "itemType": {
                "value": "type_managed-emr-configs/v1:ElationServiceFacilityRoutingMetadata",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-providers/v2:OrganizationProviderId": {
      "name": "OrganizationProviderId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_organization-providers/v2:OrganizationProviderBase": {
      "name": "OrganizationProviderBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The NPI of the provider. This must be all digits [0-9] and exactly 10 characters long.",
            "key": "npi",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether the provider can be used to render services.",
            "key": "is_rendering",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether the provider can be used to bill services.",
            "key": "is_billing",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The first name of the provider, if the provider is an individual.",
            "key": "first_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The last name of the provider, if the provider is an individual.",
            "key": "last_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The name of the provider, if the provider is an organization.",
            "key": "organization_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether the provider is an individual (NPPES Type 1) or organization (NPPES Type 2) provider.\n",
            "key": "provider_type",
            "valueType": {
              "value": "type_organization-providers/v2:ProviderType",
              "type": "id"
            }
          },
          {
            "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.\n",
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A code designating classification and specialization.",
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The type of license that the provider holds.",
            "key": "license_type",
            "valueType": {
              "value": "type_organization-providers/v2:LicenseType",
              "type": "id"
            }
          },
          {
            "description": "The Provider Transaction Access Number for the provider.",
            "key": "ptan",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The medicaid provider ID for the provider.",
            "key": "medicaid_provider_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The addresses associated with this provider.",
            "key": "addresses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_organization-providers/v2:OrganizationProviderAddress",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-providers/v2:OrganizationProvider": {
      "name": "OrganizationProvider",
      "shape": {
        "extends": ["type_organization-providers/v2:OrganizationProviderBase"],
        "properties": [
          {
            "description": "Auto-generated ID set on creation",
            "key": "organization_provider_id",
            "valueType": {
              "value": "type_organization-providers/v2:OrganizationProviderId",
              "type": "id"
            }
          },
          {
            "description": "The employment status for the provider.",
            "key": "employment_status",
            "valueType": {
              "value": "type_organization-providers/v2:EmploymentStatus",
              "type": "id"
            }
          },
          {
            "description": "The employment start date for the provider.",
            "key": "employment_start_date",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The employment termination date for the provider.",
            "key": "employment_termination_date",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-providers/v2:OrganizationProviderPage": {
      "name": "OrganizationProviderPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_organization-providers/v2:OrganizationProvider",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-providers/v2:OrganizationProviderSortOptions": {
      "name": "OrganizationProviderSortOptions",
      "shape": {
        "values": [
          {
            "value": "provider_name:asc"
          },
          {
            "value": "provider_name:desc"
          },
          {
            "value": "npi:asc"
          },
          {
            "value": "npi:desc"
          }
        ],
        "type": "enum"
      }
    },
    "type_organization-providers/v2:ProviderType": {
      "name": "ProviderType",
      "shape": {
        "values": [
          {
            "value": "INDIVIDUAL"
          },
          {
            "value": "ORGANIZATION"
          }
        ],
        "type": "enum"
      }
    },
    "type_organization-providers/v2:LicenseType": {
      "name": "LicenseType",
      "shape": {
        "values": [
          {
            "value": "MD"
          },
          {
            "value": "NP"
          },
          {
            "value": "PA"
          },
          {
            "value": "LMFT"
          },
          {
            "value": "LCPC"
          },
          {
            "value": "LCSW"
          },
          {
            "value": "PMHNP"
          },
          {
            "value": "FNP"
          },
          {
            "value": "LPCC"
          },
          {
            "value": "DO"
          },
          {
            "value": "RD"
          },
          {
            "value": "SLP"
          },
          {
            "value": "APRN"
          },
          {
            "value": "LPC"
          },
          {
            "value": "PHD"
          },
          {
            "value": "PSYD"
          },
          {
            "value": "LMSW"
          },
          {
            "value": "LMHC"
          },
          {
            "value": "OTHER_MASTERS"
          },
          {
            "value": "BCBA"
          },
          {
            "value": "UNKNOWN"
          },
          {
            "value": "RPH"
          },
          {
            "value": "PHT"
          },
          {
            "value": "LAC"
          },
          {
            "value": "LMT"
          },
          {
            "value": "DC"
          },
          {
            "value": "ND"
          },
          {
            "value": "MA"
          },
          {
            "value": "PT"
          },
          {
            "value": "IBCLC"
          },
          {
            "value": "RN"
          },
          {
            "value": "DPT"
          },
          {
            "value": "LCMHC"
          }
        ],
        "type": "enum"
      }
    },
    "type_organization-providers/v2:EmploymentStatus": {
      "name": "EmploymentStatus",
      "shape": {
        "values": [
          {
            "value": "ACTIVE"
          },
          {
            "value": "TERMINATED"
          }
        ],
        "type": "enum"
      }
    },
    "type_organization-providers/v2:OrganizationProviderAddress": {
      "name": "OrganizationProviderAddress",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The address of the provider",
            "key": "address",
            "valueType": {
              "value": "type_commons:StreetAddressLongZip",
              "type": "id"
            }
          },
          {
            "description": "The address type of the provider",
            "key": "address_type",
            "valueType": {
              "value": "type_organization-providers/v2:AddressType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-providers/v2:AddressType": {
      "name": "AddressType",
      "shape": {
        "values": [
          {
            "value": "DEFAULT"
          }
        ],
        "type": "enum"
      }
    },
    "type_organization-providers/v3:OrganizationProviderV2": {
      "name": "OrganizationProviderV2",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The NPI of the provider. This must be all digits [0-9] and exactly 10 characters long.",
            "key": "npi",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether the provider can be used to render services.",
            "key": "is_rendering",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether the provider can be used to bill services.",
            "key": "is_billing",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The first name of the provider, if the provider is an individual.",
            "key": "first_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The last name of the provider, if the provider is an individual.",
            "key": "last_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The name of the provider, if the provider is an organization.",
            "key": "organization_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether the provider is an individual (NPPES Type 1) or organization (NPPES Type 2) provider.\n",
            "key": "provider_type",
            "valueType": {
              "value": "type_organization-providers/v2:ProviderType",
              "type": "id"
            }
          },
          {
            "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.\n",
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A code designating classification and specialization.",
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The type of license that the provider holds.",
            "key": "license_type",
            "valueType": {
              "value": "type_organization-providers/v2:LicenseType",
              "type": "id"
            }
          },
          {
            "description": "The addresses associated with this provider.",
            "key": "addresses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_organization-providers/v2:OrganizationProviderAddress",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "description": "The employment start date for the provider.",
            "key": "employment_start_date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The employment termination date for the provider.",
            "key": "employment_termination_date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Auto-generated ID set on creation",
            "key": "organization_provider_id",
            "valueType": {
              "value": "type_organization-providers/v2:OrganizationProviderId",
              "type": "id"
            }
          },
          {
            "description": "Qualification given to a provider (PTAN, Medicaid Provider Id etc.)",
            "key": "qualifications",
            "valueType": {
              "itemType": {
                "value": "type_identifiers:Identifier",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-providers/v3:OrganizationProviderCreateV2": {
      "name": "OrganizationProviderCreateV2",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The NPI of the provider. This must be all digits [0-9] and exactly 10 characters long.",
            "key": "npi",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether the provider can be used to render services.",
            "key": "is_rendering",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Whether the provider can be used to bill services.",
            "key": "is_billing",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The first name of the provider, if the provider is an individual.",
            "key": "first_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The last name of the provider, if the provider is an individual.",
            "key": "last_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The name of the provider, if the provider is an organization.",
            "key": "organization_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether the provider is an individual (NPPES Type 1) or organization (NPPES Type 2) provider.\n",
            "key": "provider_type",
            "valueType": {
              "value": "type_organization-providers/v2:ProviderType",
              "type": "id"
            }
          },
          {
            "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.\n",
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A code designating classification and specialization.",
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The type of license that the provider holds.",
            "key": "license_type",
            "valueType": {
              "value": "type_organization-providers/v2:LicenseType",
              "type": "id"
            }
          },
          {
            "description": "The addresses associated with this provider.",
            "key": "addresses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_organization-providers/v2:OrganizationProviderAddress",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "description": "The employment start date for the provider.",
            "key": "employment_start_date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The employment termination date for the provider.",
            "key": "employment_termination_date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A provider's qualifications such as PTAN, Medicaid Provider Id, etc.",
            "key": "qualifications",
            "valueType": {
              "itemType": {
                "value": "type_identifiers:IdentifierCreate",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-providers/v3:OrganizationProviderUpdateV2": {
      "name": "OrganizationProviderUpdateV2",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The NPI of the provider. This must be all digits [0-9] and exactly 10 characters long.",
            "key": "npi",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether the provider can be used to render services.",
            "key": "is_rendering",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether the provider can be used to bill services.",
            "key": "is_billing",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The first name of the provider, if the provider is an individual.",
            "key": "first_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The last name of the provider, if the provider is an individual.",
            "key": "last_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The name of the provider, if the provider is an organization.",
            "key": "organization_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Whether the provider is an individual (NPPES Type 1) or organization (NPPES Type 2) provider.\n",
            "key": "provider_type",
            "valueType": {
              "itemType": {
                "value": "type_organization-providers/v2:ProviderType",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.\n",
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "A code designating classification and specialization.",
            "key": "taxonomy_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "The type of license that the provider holds.",
            "key": "license_type",
            "valueType": {
              "itemType": {
                "value": "type_organization-providers/v2:LicenseType",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The addresses associated with this provider.",
            "key": "addresses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_organization-providers/v2:OrganizationProviderAddress",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "description": "The employment start date for the provider.",
            "key": "employment_start_date",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The employment termination date for the provider.",
            "key": "employment_termination_date",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Provider's qualifications (medicare provider number, medicaid provider number, etc.)",
            "key": "qualifications",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_identifiers:UpdatableIdentifier",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-providers/v3:OrganizationProviderPageV2": {
      "name": "OrganizationProviderPageV2",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_organization-providers/v3:OrganizationProviderV2",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patient-payments/v2:PatientPaymentId": {
      "name": "PatientPaymentId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_patient-payments/v2:PatientPaymentSortField": {
      "name": "PatientPaymentSortField",
      "shape": {
        "values": [
          {
            "value": "source"
          },
          {
            "value": "amount_cents"
          },
          {
            "value": "payment_timestamp"
          },
          {
            "value": "status"
          },
          {
            "value": "payment_name"
          },
          {
            "value": "payment_note"
          }
        ],
        "type": "enum"
      }
    },
    "type_patient-payments/v2:PatientPaymentSource": {
      "name": "PatientPaymentSource",
      "shape": {
        "values": [
          {
            "value": "MANUAL_ENTRY"
          },
          {
            "value": "CHARGEBEE_PAYMENTS"
          },
          {
            "value": "CHARGEBEE MANUALLY VOIDED BY CANDID"
          },
          {
            "value": "CHARGEBEE_REFUNDS"
          },
          {
            "value": "SQUARE_REFUNDS"
          },
          {
            "value": "SQUARE_PAYMENTS"
          },
          {
            "value": "STRIPE_CHARGES"
          },
          {
            "value": "STRIPE_REFUNDS"
          },
          {
            "value": "ELATION_PAYMENTS"
          }
        ],
        "type": "enum"
      }
    },
    "type_patient-payments/v2:PatientPayment": {
      "name": "PatientPayment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "patient_payment_id",
            "valueType": {
              "value": "type_patient-payments/v2:PatientPaymentId",
              "type": "id"
            }
          },
          {
            "key": "organization_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          },
          {
            "key": "source_internal_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "source",
            "valueType": {
              "value": "type_patient-payments/v2:PatientPaymentSource",
              "type": "id"
            }
          },
          {
            "key": "amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payment_timestamp",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "datetime"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "status",
            "valueType": {
              "itemType": {
                "value": "type_patient-payments/v2:PatientPaymentStatus",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "payment_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "payment_note",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_external_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:PatientExternalId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "encounter_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:EncounterId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:ServiceLineId",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patient-payments/v2:PatientPaymentsPage": {
      "name": "PatientPaymentsPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_patient-payments/v2:PatientPayment",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patient-payments/v2:PatientPaymentStatus": {
      "name": "PatientPaymentStatus",
      "shape": {
        "values": [
          {
            "value": "PENDING"
          },
          {
            "value": "paid"
          },
          {
            "value": "CANCELED"
          },
          {
            "value": "voided"
          },
          {
            "value": "FAILED"
          },
          {
            "value": "COMPLETED"
          },
          {
            "value": "succeeded"
          },
          {
            "value": "pending"
          },
          {
            "value": "failed"
          },
          {
            "value": "requires_action"
          },
          {
            "value": "canceled"
          }
        ],
        "type": "enum"
      }
    },
    "type_patient-payments/v3:PatientPaymentId": {
      "name": "PatientPaymentId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_patient-payments/v3:PatientPaymentSortField": {
      "name": "PatientPaymentSortField",
      "shape": {
        "values": [
          {
            "value": "source"
          },
          {
            "value": "amount_cents"
          },
          {
            "value": "payment_timestamp"
          },
          {
            "value": "status"
          },
          {
            "value": "payment_name"
          },
          {
            "value": "payment_note"
          }
        ],
        "type": "enum"
      }
    },
    "type_patient-payments/v3:PatientPaymentSource": {
      "name": "PatientPaymentSource",
      "shape": {
        "values": [
          {
            "value": "MANUAL_ENTRY"
          },
          {
            "value": "CHARGEBEE_PAYMENTS"
          },
          {
            "value": "CHARGEBEE MANUALLY VOIDED BY CANDID"
          },
          {
            "value": "CHARGEBEE_REFUNDS"
          },
          {
            "value": "SQUARE_REFUNDS"
          },
          {
            "value": "SQUARE_PAYMENTS"
          },
          {
            "value": "STRIPE_CHARGES"
          },
          {
            "value": "STRIPE_REFUNDS"
          },
          {
            "value": "ELATION_PAYMENTS"
          }
        ],
        "type": "enum"
      }
    },
    "type_patient-payments/v3:PatientPayment": {
      "name": "PatientPayment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "patient_payment_id",
            "valueType": {
              "value": "type_patient-payments/v3:PatientPaymentId",
              "type": "id"
            }
          },
          {
            "key": "organization_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          },
          {
            "key": "source_internal_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "source",
            "valueType": {
              "value": "type_patient-payments/v3:PatientPaymentSource",
              "type": "id"
            }
          },
          {
            "key": "amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payment_timestamp",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "datetime"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "status",
            "valueType": {
              "itemType": {
                "value": "type_patient-payments/v3:PatientPaymentStatus",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "payment_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "payment_note",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_external_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:PatientExternalId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "encounter_external_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:EncounterExternalId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:ServiceLineId",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patient-payments/v3:PatientPaymentsPage": {
      "name": "PatientPaymentsPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_patient-payments/v3:PatientPayment",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patient-payments/v3:PatientPaymentStatus": {
      "name": "PatientPaymentStatus",
      "shape": {
        "values": [
          {
            "value": "PENDING"
          },
          {
            "value": "paid"
          },
          {
            "value": "CANCELED"
          },
          {
            "value": "voided"
          },
          {
            "value": "FAILED"
          },
          {
            "value": "COMPLETED"
          },
          {
            "value": "succeeded"
          },
          {
            "value": "pending"
          },
          {
            "value": "failed"
          },
          {
            "value": "requires_action"
          },
          {
            "value": "canceled"
          }
        ],
        "type": "enum"
      }
    },
    "type_remits/v1:RemitId": {
      "name": "RemitId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_remits/v1:RemitPostStatus": {
      "name": "RemitPostStatus",
      "shape": {
        "values": [
          {
            "description": "A remit that has been accepted and associated with Candid encounter(s).",
            "value": "posted"
          },
          {
            "description": "A remit that has not yet been accepted and associated with Candid encounter(s).",
            "value": "unposted"
          }
        ],
        "type": "enum"
      }
    },
    "type_remits/v1:RemitSource": {
      "name": "RemitSource",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "clearinghouse",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "lockbox",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "manual_upload",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_remits/v1:RemitSortField": {
      "name": "RemitSortField",
      "shape": {
        "values": [
          {
            "value": "payer_name"
          },
          {
            "value": "payer_identifier"
          },
          {
            "value": "adjudication_date"
          }
        ],
        "type": "enum"
      }
    },
    "type_remits/v1:ContentContainer": {
      "name": "ContentContainer",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "claim_section",
            "valueType": {
              "value": "type_remits/v1:ContentSection",
              "type": "id"
            }
          },
          {
            "key": "service_line_sections",
            "valueType": {
              "keyType": {
                "value": "type_commons:ServiceLineId",
                "type": "id"
              },
              "valueType": {
                "value": "type_remits/v1:ContentSection",
                "type": "id"
              },
              "type": "map"
            }
          },
          {
            "key": "content",
            "valueType": {
              "value": "type_remits/v1:Content",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_remits/v1:ContentSection": {
      "name": "ContentSection",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "begin_line_number",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "end_line_number",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_remits/v1:Content": {
      "name": "Content",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "content_string",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_remits/v1:ContentString",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "content_download_url",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_commons:ContentDownloadUrl",
                    "type": "id"
                  }
                }
              ]
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_remits/v1:ContentString": {
      "name": "ContentString",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_remits/v1:Remit": {
      "name": "Remit",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_remits/v1:RemitId",
              "type": "id"
            }
          },
          {
            "key": "payer_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payer_identifier",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "adjudication_date",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "check_image_download_url",
            "valueType": {
              "itemType": {
                "value": "type_commons:ContentDownloadUrlWithExpiration",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "content_edi",
            "valueType": {
              "value": "type_remits/v1:ContentContainer",
              "type": "id"
            }
          },
          {
            "key": "source",
            "valueType": {
              "value": "type_remits/v1:RemitSource",
              "type": "id"
            }
          },
          {
            "key": "posted_datetime",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "datetime"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "check_date",
            "valueType": {
              "value": {
                "type": "date"
              },
              "type": "primitive"
            }
          },
          {
            "key": "check_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "check_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "claim_status_code",
            "valueType": {
              "itemType": {
                "value": "type_x12/v1:ClaimStatusCodeEnum",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The number of claims the remit contains information for.",
            "key": "included_claims_count",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_remits/v1:GetMultiRemitsPagedSortField": {
      "name": "GetMultiRemitsPagedSortField",
      "shape": {
        "values": [
          {
            "value": "check_amount_cents"
          },
          {
            "value": "check_date"
          }
        ],
        "type": "enum"
      }
    },
    "type_remits/v1:RemitPage": {
      "name": "RemitPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_remits/v1:Remit",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_remits/v1:GetMultiRemitsPagedResponse": {
      "name": "GetMultiRemitsPagedResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "page",
            "valueType": {
              "value": "type_remits/v1:RemitPage",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_remits/v1:PostRemitResponse": {
      "name": "PostRemitResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "remit",
            "valueType": {
              "value": "type_remits/v1:Remit",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_secondary-submission/v1:ServiceAdjustment": {
      "name": "ServiceAdjustment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "adjustment_group_code",
            "valueType": {
              "value": "type_commons:ClaimAdjustmentGroupCodes",
              "type": "id"
            }
          },
          {
            "key": "adjustment_reason_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "adjustment_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_secondary-submission/v1:OtherPayerAdjudicationDetails": {
      "name": "OtherPayerAdjudicationDetails",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_adjustments",
            "valueType": {
              "itemType": {
                "value": "type_secondary-submission/v1:ServiceAdjustment",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "paid_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_responsibility_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "check_date",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_secondary-submission/v1:SecondarySubmissionCreate": {
      "name": "SecondarySubmissionCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "other_payer_adjudication_details",
            "valueType": {
              "value": "type_secondary-submission/v1:OtherPayerAdjudicationDetails",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_secondary-submission/v1:SecondarySubmissionResponse": {
      "name": "SecondarySubmissionResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "result",
            "valueType": {
              "value": "type_rules_engine_types:RulesEngineProcessResult",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_secondary-submission/v1:SecondarySubmissionCheckResponse": {
      "name": "SecondarySubmissionCheckResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "response",
            "valueType": {
              "value": "type_rules_engine_types:RulesEngineCheckResponse",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-line-ledgers/v1:GetLedgerTablesResponse": {
      "name": "GetLedgerTablesResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_line_tables",
            "valueType": {
              "keyType": {
                "value": "type_commons:ServiceLineId",
                "type": "id"
              },
              "valueType": {
                "value": "type_service-line-ledgers/v1:ServiceLineLedgerTable",
                "type": "id"
              },
              "type": "map"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-line-ledgers/v1:ServiceLineLedgerTable": {
      "name": "ServiceLineLedgerTable",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_line_id",
            "valueType": {
              "value": "type_commons:ServiceLineId",
              "type": "id"
            }
          },
          {
            "key": "rows",
            "valueType": {
              "itemType": {
                "value": "type_service-line-ledgers/v1:LedgerTableRow",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-line-ledgers/v1:LedgerTableRowDetails": {
      "name": "LedgerTableRowDetails",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "charge_row",
            "additionalProperties": {
              "extends": ["type_service-line-ledgers/v1:ChargeRow"],
              "properties": []
            }
          },
          {
            "discriminantValue": "remit_row",
            "additionalProperties": {
              "extends": ["type_service-line-ledgers/v1:RemitRow"],
              "properties": []
            }
          },
          {
            "discriminantValue": "patient_payment_row",
            "additionalProperties": {
              "extends": ["type_service-line-ledgers/v1:PatientPaymentRow"],
              "properties": []
            }
          },
          {
            "discriminantValue": "write_off_row",
            "additionalProperties": {
              "extends": ["type_service-line-ledgers/v1:WriteOffRow"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_service-line-ledgers/v1:LedgerRowId": {
      "name": "LedgerRowId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_service-line-ledgers/v1:EventLocator": {
      "name": "EventLocator",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_service-line-ledgers/v1:LedgerTableRow": {
      "name": "LedgerTableRow",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "event_date",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "event_locator",
            "valueType": {
              "value": "type_service-line-ledgers/v1:EventLocator",
              "type": "id"
            }
          },
          {
            "key": "details",
            "valueType": {
              "value": "type_service-line-ledgers/v1:LedgerTableRowDetails",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-line-ledgers/v1:ChargeRow": {
      "name": "ChargeRow",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "billed_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "claim_submission_id",
            "valueType": {
              "value": "type_commons:ClaimSubmissionId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-line-ledgers/v1:RemitRow": {
      "name": "RemitRow",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "payer_information",
            "valueType": {
              "value": "type_service-line-ledgers/v1:RemitRowPayerInformation",
              "type": "id"
            }
          },
          {
            "key": "financial_information",
            "valueType": {
              "value": "type_service-line-ledgers/v1:RemitRowFinancialInformation",
              "type": "id"
            }
          },
          {
            "key": "denial_reason",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "carcs",
            "valueType": {
              "itemType": {
                "value": "type_service-line-ledgers/v1:CarcPopoverDetails",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "rarcs",
            "valueType": {
              "itemType": {
                "value": "type_service-line-ledgers/v1:RarcPopoverDetails",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "check",
            "valueType": {
              "itemType": {
                "value": "type_service-line-ledgers/v1:Check",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-line-ledgers/v1:CarcPopoverDetails": {
      "name": "CarcPopoverDetails",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "carc",
            "valueType": {
              "value": "type_x12/v1:Carc",
              "type": "id"
            }
          },
          {
            "key": "group_code",
            "valueType": {
              "value": "type_commons:ClaimAdjustmentGroupCodes",
              "type": "id"
            }
          },
          {
            "key": "amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-line-ledgers/v1:RarcPopoverDetails": {
      "name": "RarcPopoverDetails",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "rarc",
            "valueType": {
              "value": "type_x12/v1:Rarc",
              "type": "id"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-line-ledgers/v1:Check": {
      "name": "Check",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "check_number",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "check_posted_date",
            "valueType": {
              "value": {
                "type": "date"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-line-ledgers/v1:RemitRowFinancialInformation": {
      "name": "RemitRowFinancialInformation",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "billed_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "allowed_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "insurance_adjusted_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "insurance_paid_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "copay_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "coinsurance_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "deductible_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "other_patient_responsibility_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "remit",
            "valueType": {
              "value": "type_remits/v1:Remit",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-line-ledgers/v1:RemitRowPayerInformation": {
      "name": "RemitRowPayerInformation",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "payer_responsibility_type",
            "valueType": {
              "value": "type_commons:ClaimSubmissionPayerResponsibilityType",
              "type": "id"
            }
          },
          {
            "key": "era_payer",
            "valueType": {
              "value": "type_service-line-ledgers/v1:EraPayer",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-line-ledgers/v1:EraPayer": {
      "description": "The raw payer information from the ERA. This is not guaranteed to match the payer in our system.",
      "name": "EraPayer",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "era_payer_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The national payer ID of the payer, if present in the payer's additional qualifications section ERA under code '2U'.\n",
            "key": "era_payer_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-line-ledgers/v1:PatientPaymentRow": {
      "name": "PatientPaymentRow",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "patient_paid_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_payment_note",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_payment_datetime",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_payment_source",
            "valueType": {
              "value": "type_patient-payments/v3:PatientPaymentSource",
              "type": "id"
            }
          },
          {
            "key": "patient_payment_id",
            "valueType": {
              "value": "type_patient-payments/v3:PatientPaymentId",
              "type": "id"
            }
          },
          {
            "key": "patient_payment",
            "valueType": {
              "value": "type_patient-payments/v3:PatientPayment",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-line-ledgers/v1:WriteOffRow": {
      "name": "WriteOffRow",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "write_off_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "write_off_note",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "write_off_datetime",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "write_off_source",
            "valueType": {
              "value": "type_adjustments:AdjustmentSource",
              "type": "id"
            }
          },
          {
            "key": "write_off_id",
            "valueType": {
              "value": "type_commons:AdjustmentId",
              "type": "id"
            }
          },
          {
            "key": "write_off",
            "valueType": {
              "value": "type_adjustments:Adjustment",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceLineFinancialInformation": {
      "name": "ServiceLineFinancialInformation",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "insurance_adjustment_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "insurance_balance_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "insurance_paid_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceLineFinancialInformationByPayerResponsibilityResponse": {
      "name": "ServiceLineFinancialInformationByPayerResponsibilityResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "primary",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:ServiceLineFinancialInformation",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "secondary",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:ServiceLineFinancialInformation",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceLineFinancialInformationResponse": {
      "name": "ServiceLineFinancialInformationResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "financial_information_by_payer_responsibility_response",
            "valueType": {
              "value": "type_service-lines/v2:ServiceLineFinancialInformationByPayerResponsibilityResponse",
              "type": "id"
            }
          },
          {
            "key": "patient_balance_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_responsibility_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_paid_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "allowed_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "billed_amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "insurance_financial_information",
            "valueType": {
              "value": "type_service-lines/v2:ServiceLineFinancialInformation",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceLineCreate": {
      "name": "ServiceLineCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "modifiers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_commons:ProcedureModifier",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "procedure_code",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "String representation of a Decimal that can be parsed by most libraries.\nA ServiceLine quantity cannot contain more than one digit of precision.\nExample: 1.1 is valid, 1.11 is not.\n",
            "key": "quantity",
            "valueType": {
              "value": "type_commons:Decimal",
              "type": "id"
            }
          },
          {
            "key": "units",
            "valueType": {
              "value": "type_commons:ServiceLineUnits",
              "type": "id"
            }
          },
          {
            "description": "The total amount charged for this service line taking quantity into account. For example, if a single unit\ncosts 100 cents and 2 units were rendered, the charge_amount_cents should be 200. Should be greater than or\nequal to 0.\n",
            "key": "charge_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Indices (zero-indexed) of all the diagnoses this service line references",
            "key": "diagnosis_pointers",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "list"
            }
          },
          {
            "key": "drug_identification",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:DrugIdentification",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "place_of_service_code",
            "valueType": {
              "itemType": {
                "value": "type_commons:FacilityTypeCode",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceLineCreateStandalone": {
      "name": "ServiceLineCreateStandalone",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "modifiers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_commons:ProcedureModifier",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "charge_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "allowed_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "insurance_balance_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_balance_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "paid_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_responsibility_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_zero",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_one",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_two",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_three",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_era_data",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:ServiceLineERAData",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_manual_adjustments",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_service-lines/v2:ServiceLineAdjustment",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "related_invoices",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_invoices:Invoice",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "denial_reason",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:ServiceLineDenialReason",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "place_of_service_code",
            "valueType": {
              "itemType": {
                "value": "type_commons:FacilityTypeCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "procedure_code",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "String representation of a Decimal that can be parsed by most libraries.\nA ServiceLine quantity cannot contain more than one digit of precision.\nExample: 1.1 is valid, 1.11 is not.\n",
            "key": "quantity",
            "valueType": {
              "value": "type_commons:Decimal",
              "type": "id"
            }
          },
          {
            "key": "units",
            "valueType": {
              "value": "type_commons:ServiceLineUnits",
              "type": "id"
            }
          },
          {
            "key": "claim_id",
            "valueType": {
              "value": "type_commons:ClaimId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceLineUpdate": {
      "name": "ServiceLineUpdate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "modifiers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_commons:ProcedureModifier",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "charge_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "allowed_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "insurance_balance_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_balance_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "paid_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_responsibility_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_zero",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_one",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_two",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_three",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_era_data",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:ServiceLineERAData",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_manual_adjustments",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_service-lines/v2:ServiceLineAdjustment",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "related_invoices",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_invoices:Invoice",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "denial_reason",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:ServiceLineDenialReason",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "place_of_service_code",
            "valueType": {
              "itemType": {
                "value": "type_commons:FacilityTypeCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "units",
            "valueType": {
              "itemType": {
                "value": "type_commons:ServiceLineUnits",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "procedure_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "String representation of a Decimal that can be parsed by most libraries.\nA ServiceLine quantity cannot contain more than one digit of precision.\nExample: 1.1 is valid, 1.11 is not.\n",
            "key": "quantity",
            "valueType": {
              "itemType": {
                "value": "type_commons:Decimal",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceLine": {
      "name": "ServiceLine",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "modifiers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_commons:ProcedureModifier",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "charge_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "allowed_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "insurance_balance_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_balance_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "paid_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_responsibility_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_zero",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_one",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_two",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "diagnosis_id_three",
            "valueType": {
              "itemType": {
                "value": "type_diagnoses:DiagnosisId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_era_data",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:ServiceLineERAData",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_manual_adjustments",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_service-lines/v2:ServiceLineAdjustment",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "related_invoices",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_invoices:Invoice",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "denial_reason",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:ServiceLineDenialReason",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "place_of_service_code",
            "valueType": {
              "itemType": {
                "value": "type_commons:FacilityTypeCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_id",
            "valueType": {
              "value": "type_commons:ServiceLineId",
              "type": "id"
            }
          },
          {
            "key": "procedure_code",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "String representation of a Decimal that can be parsed by most libraries.\nA ServiceLine quantity cannot contain more than one digit of precision.\nExample: 1.1 is valid, 1.11 is not.\n",
            "key": "quantity",
            "valueType": {
              "value": "type_commons:Decimal",
              "type": "id"
            }
          },
          {
            "key": "units",
            "valueType": {
              "value": "type_commons:ServiceLineUnits",
              "type": "id"
            }
          },
          {
            "key": "claim_id",
            "valueType": {
              "value": "type_commons:ClaimId",
              "type": "id"
            }
          },
          {
            "description": "A range of dates of service for this service line. If the service line is for a single date, the end date\nwill be empty.\n",
            "key": "date_of_service_range",
            "valueType": {
              "value": "type_commons:DateRangeOptionalEnd",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceLineERAData": {
      "name": "ServiceLineERAData",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_line_adjustments",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:ServiceLineAdjustment",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "remittance_advice_remark_codes",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceLineAdjustment": {
      "name": "ServiceLineAdjustment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "created_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "adjustment_group_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "adjustment_reason_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "adjustment_amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "adjustment_note",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceLineDenialReason": {
      "description": "The reason a given service line was denied within a given time range.\nA service line may be denied for different reasons over time, but only one reason at a time.\n",
      "name": "ServiceLineDenialReason",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Text of the denial reason",
            "key": "reason",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:DenialReasonContent",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:DenialReasonContent": {
      "name": "DenialReasonContent",
      "shape": {
        "values": [
          {
            "value": "Authorization Required"
          },
          {
            "value": "Referral Required"
          },
          {
            "value": "Medical Records Requested"
          },
          {
            "value": "Timely Filing"
          },
          {
            "value": "Duplicate Claim"
          },
          {
            "value": "Incorrect Place of Service"
          },
          {
            "value": "Incorrect Patient Gender"
          },
          {
            "value": "Bundled"
          },
          {
            "value": "Exceeded Billable Time"
          },
          {
            "value": "Invalid Provider Information"
          },
          {
            "value": "Invalid Diagnosis Code"
          },
          {
            "value": "Incorrect Procedure Code"
          },
          {
            "value": "Invalid Modifier"
          },
          {
            "value": "Missing NDC Code"
          },
          {
            "value": "Invalid Insurance Data"
          },
          {
            "value": "No Active Coverage"
          },
          {
            "value": "Coordination of Benefits"
          },
          {
            "value": "Incorrect Payer"
          },
          {
            "value": "Credentialing"
          },
          {
            "value": "No Effective Contract"
          },
          {
            "value": "Missing W-9"
          },
          {
            "value": "Missing Contract Linkage"
          },
          {
            "value": "Non-Covered Benefit"
          },
          {
            "value": "Experimental Procedure"
          },
          {
            "value": "Not Medically Necessary"
          },
          {
            "value": "Info Requested from Provider"
          },
          {
            "value": "Info Requested from Patient"
          },
          {
            "value": "Billing Error"
          },
          {
            "value": "Unknown"
          },
          {
            "value": "Max Benefit Reached"
          }
        ],
        "type": "enum"
      }
    },
    "type_service-lines/v2:DrugIdentification": {
      "name": "DrugIdentification",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_id_qualifier",
            "valueType": {
              "value": "type_service-lines/v2:ServiceIdQualifier",
              "type": "id"
            }
          },
          {
            "key": "national_drug_code",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "national_drug_unit_count",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "measurement_unit_code",
            "valueType": {
              "value": "type_service-lines/v2:MeasurementUnitCode",
              "type": "id"
            }
          },
          {
            "key": "link_sequence_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "pharmacy_prescription_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-lines/v2:ServiceIdQualifier": {
      "name": "ServiceIdQualifier",
      "shape": {
        "values": [
          {
            "description": "EAN/UCC - 13",
            "value": "EN"
          },
          {
            "description": "EAN/UCC - 8",
            "value": "EO"
          },
          {
            "description": "HIBC (Health Care Industry Bar Code) Supplier Labeling Standard Primary Data Message\n",
            "value": "HI"
          },
          {
            "description": "National Drug Code in 5-4-2 Format",
            "value": "N4"
          },
          {
            "description": "Customer Order Number",
            "value": "ON"
          },
          {
            "description": "GTIN 14-digit Data Structure",
            "value": "UK"
          },
          {
            "description": "UCC - 12",
            "value": "UP"
          }
        ],
        "type": "enum"
      }
    },
    "type_service-lines/v2:MeasurementUnitCode": {
      "name": "MeasurementUnitCode",
      "shape": {
        "values": [
          {
            "value": "ML"
          },
          {
            "value": "UN"
          },
          {
            "value": "GR"
          },
          {
            "value": "F2"
          },
          {
            "value": "ME"
          }
        ],
        "type": "enum"
      }
    },
    "type_tasks/v3:TaskActionExecutionMethod": {
      "name": "TaskActionExecutionMethod",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "close_task",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_tasks/v3:TaskActions": {
      "name": "TaskActions",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "actions",
            "valueType": {
              "itemType": {
                "value": "type_tasks/v3:TaskAction",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_tasks/v3:TaskAction": {
      "name": "TaskAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "display_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "execution_method",
            "valueType": {
              "value": "type_tasks/v3:TaskActionExecutionMethod",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_users/v2:User": {
      "name": "User",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "auth0_id",
            "valueType": {
              "value": "type_commons:Auth0Id",
              "type": "id"
            }
          },
          {
            "key": "first_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "last_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_users/v2:HumanUserMetadata": {
      "name": "HumanUserMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "first_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "last_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_users/v2:MachineUserMetadata": {
      "name": "MachineUserMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_users/v2:UserMetadata": {
      "name": "UserMetadata",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "machine_user_metadata",
            "additionalProperties": {
              "extends": ["type_users/v2:MachineUserMetadata"],
              "properties": []
            }
          },
          {
            "discriminantValue": "human_user_metadata",
            "additionalProperties": {
              "extends": ["type_users/v2:HumanUserMetadata"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_users/v2:InternalEnrollmentAssignees": {
      "name": "InternalEnrollmentAssignees",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "assignees",
            "valueType": {
              "itemType": {
                "value": "type_users/v2:User",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "default_assignee",
            "valueType": {
              "value": "type_users/v2:User",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_users/v2:AuthZeroMetadata": {
      "name": "AuthZeroMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "auth0_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_users/v2:GoogleAppsMetadata": {
      "name": "GoogleAppsMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "google_apps_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_users/v2:OtherIdpMetadata": {
      "name": "OtherIdpMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "idp_external_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_users/v2:IdpUserMetadata": {
      "name": "IdpUserMetadata",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "auth_zero_metadata",
            "additionalProperties": {
              "extends": ["type_users/v2:AuthZeroMetadata"],
              "properties": []
            }
          },
          {
            "discriminantValue": "google_apps_metadata",
            "additionalProperties": {
              "extends": ["type_users/v2:GoogleAppsMetadata"],
              "properties": []
            }
          },
          {
            "discriminantValue": "other_idp_metadata",
            "additionalProperties": {
              "extends": ["type_users/v2:OtherIdpMetadata"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_users/v2:UserV2": {
      "name": "UserV2",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "user_id",
            "valueType": {
              "value": "type_commons:UserId",
              "type": "id"
            }
          },
          {
            "key": "idp_metadata",
            "valueType": {
              "itemType": {
                "value": "type_users/v2:IdpUserMetadata",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "primary_organization_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          },
          {
            "key": "user_metadata",
            "valueType": {
              "value": "type_users/v2:UserMetadata",
              "type": "id"
            }
          },
          {
            "key": "accessible_organization_ids",
            "valueType": {
              "itemType": {
                "value": "type_commons:OrganizationId",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_users/v2:UserV2Page": {
      "name": "UserV2Page",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_users/v2:UserV2",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_work-queues/v1:WorkQueueCategoryType": {
      "name": "WorkQueueCategoryType",
      "shape": {
        "values": [
          {
            "value": "PRE_SUBMISSION"
          },
          {
            "value": "REJECTIONS"
          },
          {
            "value": "DENIALS"
          },
          {
            "value": "POST_SUBMISSION"
          },
          {
            "value": "STALE_CLAIMS"
          },
          {
            "value": "CUSTOM"
          },
          {
            "value": "CODING"
          }
        ],
        "type": "enum"
      }
    },
    "type_work-queues/v1:WorkQueueCategory": {
      "name": "WorkQueueCategory",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "value": "type_work-queues/v1:WorkQueueCategoryType",
              "type": "id"
            }
          },
          {
            "key": "display_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_work-queues/v1:WorkQueue": {
      "name": "WorkQueue",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "work_queue_id",
            "valueType": {
              "value": "type_commons:WorkQueueId",
              "type": "id"
            }
          },
          {
            "key": "display_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "category",
            "valueType": {
              "value": "type_work-queues/v1:WorkQueueCategory",
              "type": "id"
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "created_by",
            "valueType": {
              "value": "type_commons:UserId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_work-queues/v1:WorkQueueStatistics": {
      "name": "WorkQueueStatistics",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "num_claims",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_work-queues/v1:WorkQueueResponse": {
      "name": "WorkQueueResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "work_queue",
            "valueType": {
              "value": "type_work-queues/v1:WorkQueue",
              "type": "id"
            }
          },
          {
            "key": "work_queue_statistics",
            "valueType": {
              "value": "type_work-queues/v1:WorkQueueStatistics",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_work-queues/v1:GetAllWorkQueuesResponse": {
      "name": "GetAllWorkQueuesResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "work_queues",
            "valueType": {
              "itemType": {
                "value": "type_work-queues/v1:WorkQueueResponse",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_work-queues/v1:WorkQueueNotFoundError": {
      "name": "WorkQueueNotFoundError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "work_queue_id",
            "valueType": {
              "value": "type_commons:WorkQueueId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_x12/v1:ClaimStatusCodeEnum": {
      "name": "ClaimStatusCodeEnum",
      "shape": {
        "values": [
          {
            "value": "processed_as_primary"
          },
          {
            "value": "processed_as_secondary"
          },
          {
            "value": "processed_as_tertiary"
          },
          {
            "value": "denied"
          },
          {
            "value": "processed_as_primary_forwarded"
          },
          {
            "value": "processed_as_secondary_forwarded"
          },
          {
            "value": "processed_as_tertiary_forwarded"
          },
          {
            "value": "reversal_of_previous_payment"
          },
          {
            "value": "not_our_claim_forwarded"
          },
          {
            "value": "predetermination_pricing_no_payment"
          },
          {
            "value": "unknown"
          }
        ],
        "type": "enum"
      }
    },
    "type_x12/v1:Carc": {
      "name": "Carc",
      "shape": {
        "values": [
          {
            "value": "1"
          },
          {
            "value": "2"
          },
          {
            "value": "3"
          },
          {
            "value": "4"
          },
          {
            "value": "5"
          },
          {
            "value": "6"
          },
          {
            "value": "7"
          },
          {
            "value": "8"
          },
          {
            "value": "9"
          },
          {
            "value": "10"
          },
          {
            "value": "11"
          },
          {
            "value": "12"
          },
          {
            "value": "13"
          },
          {
            "value": "14"
          },
          {
            "value": "16"
          },
          {
            "value": "18"
          },
          {
            "value": "19"
          },
          {
            "value": "20"
          },
          {
            "value": "21"
          },
          {
            "value": "22"
          },
          {
            "value": "23"
          },
          {
            "value": "24"
          },
          {
            "value": "26"
          },
          {
            "value": "27"
          },
          {
            "value": "29"
          },
          {
            "value": "31"
          },
          {
            "value": "32"
          },
          {
            "value": "33"
          },
          {
            "value": "34"
          },
          {
            "value": "35"
          },
          {
            "value": "39"
          },
          {
            "value": "40"
          },
          {
            "value": "44"
          },
          {
            "value": "45"
          },
          {
            "value": "49"
          },
          {
            "value": "50"
          },
          {
            "value": "51"
          },
          {
            "value": "53"
          },
          {
            "value": "54"
          },
          {
            "value": "55"
          },
          {
            "value": "56"
          },
          {
            "value": "58"
          },
          {
            "value": "59"
          },
          {
            "value": "60"
          },
          {
            "value": "61"
          },
          {
            "value": "66"
          },
          {
            "value": "69"
          },
          {
            "value": "70"
          },
          {
            "value": "74"
          },
          {
            "value": "75"
          },
          {
            "value": "76"
          },
          {
            "value": "78"
          },
          {
            "value": "85"
          },
          {
            "value": "89"
          },
          {
            "value": "90"
          },
          {
            "value": "91"
          },
          {
            "value": "94"
          },
          {
            "value": "95"
          },
          {
            "value": "96"
          },
          {
            "value": "97"
          },
          {
            "value": "100"
          },
          {
            "value": "101"
          },
          {
            "value": "102"
          },
          {
            "value": "103"
          },
          {
            "value": "104"
          },
          {
            "value": "105"
          },
          {
            "value": "106"
          },
          {
            "value": "107"
          },
          {
            "value": "108"
          },
          {
            "value": "109"
          },
          {
            "value": "110"
          },
          {
            "value": "111"
          },
          {
            "value": "112"
          },
          {
            "value": "114"
          },
          {
            "value": "115"
          },
          {
            "value": "116"
          },
          {
            "value": "117"
          },
          {
            "value": "118"
          },
          {
            "value": "119"
          },
          {
            "value": "121"
          },
          {
            "value": "122"
          },
          {
            "value": "128"
          },
          {
            "value": "129"
          },
          {
            "value": "130"
          },
          {
            "value": "131"
          },
          {
            "value": "132"
          },
          {
            "value": "133"
          },
          {
            "value": "134"
          },
          {
            "value": "135"
          },
          {
            "value": "136"
          },
          {
            "value": "137"
          },
          {
            "value": "139"
          },
          {
            "value": "140"
          },
          {
            "value": "142"
          },
          {
            "value": "143"
          },
          {
            "value": "144"
          },
          {
            "value": "146"
          },
          {
            "value": "147"
          },
          {
            "value": "148"
          },
          {
            "value": "149"
          },
          {
            "value": "150"
          },
          {
            "value": "151"
          },
          {
            "value": "152"
          },
          {
            "value": "153"
          },
          {
            "value": "154"
          },
          {
            "value": "155"
          },
          {
            "value": "157"
          },
          {
            "value": "158"
          },
          {
            "value": "159"
          },
          {
            "value": "160"
          },
          {
            "value": "161"
          },
          {
            "value": "163"
          },
          {
            "value": "164"
          },
          {
            "value": "166"
          },
          {
            "value": "167"
          },
          {
            "value": "169"
          },
          {
            "value": "170"
          },
          {
            "value": "171"
          },
          {
            "value": "172"
          },
          {
            "value": "173"
          },
          {
            "value": "174"
          },
          {
            "value": "175"
          },
          {
            "value": "176"
          },
          {
            "value": "177"
          },
          {
            "value": "178"
          },
          {
            "value": "179"
          },
          {
            "value": "180"
          },
          {
            "value": "181"
          },
          {
            "value": "182"
          },
          {
            "value": "183"
          },
          {
            "value": "184"
          },
          {
            "value": "185"
          },
          {
            "value": "186"
          },
          {
            "value": "187"
          },
          {
            "value": "188"
          },
          {
            "value": "189"
          },
          {
            "value": "190"
          },
          {
            "value": "192"
          },
          {
            "value": "193"
          },
          {
            "value": "194"
          },
          {
            "value": "195"
          },
          {
            "value": "197"
          },
          {
            "value": "198"
          },
          {
            "value": "199"
          },
          {
            "value": "200"
          },
          {
            "value": "201"
          },
          {
            "value": "202"
          },
          {
            "value": "203"
          },
          {
            "value": "204"
          },
          {
            "value": "205"
          },
          {
            "value": "206"
          },
          {
            "value": "207"
          },
          {
            "value": "208"
          },
          {
            "value": "209"
          },
          {
            "value": "210"
          },
          {
            "value": "211"
          },
          {
            "value": "212"
          },
          {
            "value": "213"
          },
          {
            "value": "215"
          },
          {
            "value": "216"
          },
          {
            "value": "219"
          },
          {
            "value": "222"
          },
          {
            "value": "223"
          },
          {
            "value": "224"
          },
          {
            "value": "225"
          },
          {
            "value": "226"
          },
          {
            "value": "227"
          },
          {
            "value": "228"
          },
          {
            "value": "229"
          },
          {
            "value": "231"
          },
          {
            "value": "232"
          },
          {
            "value": "233"
          },
          {
            "value": "234"
          },
          {
            "value": "235"
          },
          {
            "value": "236"
          },
          {
            "value": "237"
          },
          {
            "value": "238"
          },
          {
            "value": "239"
          },
          {
            "value": "240"
          },
          {
            "value": "241"
          },
          {
            "value": "245"
          },
          {
            "value": "246"
          },
          {
            "value": "247"
          },
          {
            "value": "248"
          },
          {
            "value": "249"
          },
          {
            "value": "250"
          },
          {
            "value": "251"
          },
          {
            "value": "252"
          },
          {
            "value": "253"
          },
          {
            "value": "254"
          },
          {
            "value": "256"
          },
          {
            "value": "257"
          },
          {
            "value": "258"
          },
          {
            "value": "259"
          },
          {
            "value": "260"
          },
          {
            "value": "261"
          },
          {
            "value": "262"
          },
          {
            "value": "263"
          },
          {
            "value": "264"
          },
          {
            "value": "265"
          },
          {
            "value": "266"
          },
          {
            "value": "267"
          },
          {
            "value": "268"
          },
          {
            "value": "269"
          },
          {
            "value": "270"
          },
          {
            "value": "271"
          },
          {
            "value": "272"
          },
          {
            "value": "273"
          },
          {
            "value": "274"
          },
          {
            "value": "275"
          },
          {
            "value": "276"
          },
          {
            "value": "277"
          },
          {
            "value": "278"
          },
          {
            "value": "279"
          },
          {
            "value": "280"
          },
          {
            "value": "281"
          },
          {
            "value": "282"
          },
          {
            "value": "283"
          },
          {
            "value": "284"
          },
          {
            "value": "285"
          },
          {
            "value": "286"
          },
          {
            "value": "287"
          },
          {
            "value": "288"
          },
          {
            "value": "289"
          },
          {
            "value": "290"
          },
          {
            "value": "291"
          },
          {
            "value": "292"
          },
          {
            "value": "293"
          },
          {
            "value": "294"
          },
          {
            "value": "295"
          },
          {
            "value": "296"
          },
          {
            "value": "297"
          },
          {
            "value": "298"
          },
          {
            "value": "299"
          },
          {
            "value": "300"
          },
          {
            "value": "301"
          },
          {
            "value": "302"
          },
          {
            "value": "303"
          },
          {
            "value": "A0"
          },
          {
            "value": "A1"
          },
          {
            "value": "A5"
          },
          {
            "value": "A6"
          },
          {
            "value": "A8"
          },
          {
            "value": "B1"
          },
          {
            "value": "B4"
          },
          {
            "value": "B7"
          },
          {
            "value": "B8"
          },
          {
            "value": "B9"
          },
          {
            "value": "B10"
          },
          {
            "value": "B11"
          },
          {
            "value": "B12"
          },
          {
            "value": "B13"
          },
          {
            "value": "B14"
          },
          {
            "value": "B15"
          },
          {
            "value": "B16"
          },
          {
            "value": "B20"
          },
          {
            "value": "B22"
          },
          {
            "value": "B23"
          },
          {
            "value": "P24"
          },
          {
            "value": "P25"
          },
          {
            "value": "P26"
          },
          {
            "value": "P27"
          },
          {
            "value": "P28"
          },
          {
            "value": "P29"
          },
          {
            "value": "P30"
          },
          {
            "value": "P31"
          }
        ],
        "type": "enum"
      }
    },
    "type_x12/v1:Rarc": {
      "name": "Rarc",
      "shape": {
        "values": [
          {
            "value": "M1"
          },
          {
            "value": "M2"
          },
          {
            "value": "M3"
          },
          {
            "value": "M4"
          },
          {
            "value": "M5"
          },
          {
            "value": "M6"
          },
          {
            "value": "M7"
          },
          {
            "value": "M8"
          },
          {
            "value": "M9"
          },
          {
            "value": "M10"
          },
          {
            "value": "M11"
          },
          {
            "value": "M12"
          },
          {
            "value": "M13"
          },
          {
            "value": "M14"
          },
          {
            "value": "M15"
          },
          {
            "value": "M16"
          },
          {
            "value": "M17"
          },
          {
            "value": "M18"
          },
          {
            "value": "M19"
          },
          {
            "value": "M20"
          },
          {
            "value": "M21"
          },
          {
            "value": "M22"
          },
          {
            "value": "M23"
          },
          {
            "value": "M24"
          },
          {
            "value": "M25"
          },
          {
            "value": "M26"
          },
          {
            "value": "M27"
          },
          {
            "value": "M28"
          },
          {
            "value": "M29"
          },
          {
            "value": "M30"
          },
          {
            "value": "M31"
          },
          {
            "value": "M32"
          },
          {
            "value": "M36"
          },
          {
            "value": "M37"
          },
          {
            "value": "M38"
          },
          {
            "value": "M39"
          },
          {
            "value": "M40"
          },
          {
            "value": "M41"
          },
          {
            "value": "M42"
          },
          {
            "value": "M44"
          },
          {
            "value": "M45"
          },
          {
            "value": "M46"
          },
          {
            "value": "M47"
          },
          {
            "value": "M49"
          },
          {
            "value": "M50"
          },
          {
            "value": "M51"
          },
          {
            "value": "M52"
          },
          {
            "value": "M53"
          },
          {
            "value": "M54"
          },
          {
            "value": "M55"
          },
          {
            "value": "M56"
          },
          {
            "value": "M59"
          },
          {
            "value": "M60"
          },
          {
            "value": "M61"
          },
          {
            "value": "M62"
          },
          {
            "value": "M64"
          },
          {
            "value": "M65"
          },
          {
            "value": "M66"
          },
          {
            "value": "M67"
          },
          {
            "value": "M69"
          },
          {
            "value": "M70"
          },
          {
            "value": "M71"
          },
          {
            "value": "M73"
          },
          {
            "value": "M74"
          },
          {
            "value": "M75"
          },
          {
            "value": "M76"
          },
          {
            "value": "M77"
          },
          {
            "value": "M79"
          },
          {
            "value": "M80"
          },
          {
            "value": "M81"
          },
          {
            "value": "M82"
          },
          {
            "value": "M83"
          },
          {
            "value": "M84"
          },
          {
            "value": "M85"
          },
          {
            "value": "M86"
          },
          {
            "value": "M87"
          },
          {
            "value": "M89"
          },
          {
            "value": "M90"
          },
          {
            "value": "M91"
          },
          {
            "value": "M93"
          },
          {
            "value": "M94"
          },
          {
            "value": "M95"
          },
          {
            "value": "M96"
          },
          {
            "value": "M97"
          },
          {
            "value": "M99"
          },
          {
            "value": "M100"
          },
          {
            "value": "M102"
          },
          {
            "value": "M103"
          },
          {
            "value": "M104"
          },
          {
            "value": "M105"
          },
          {
            "value": "M107"
          },
          {
            "value": "M109"
          },
          {
            "value": "M111"
          },
          {
            "value": "M112"
          },
          {
            "value": "M113"
          },
          {
            "value": "M114"
          },
          {
            "value": "M115"
          },
          {
            "value": "M116"
          },
          {
            "value": "M117"
          },
          {
            "value": "M121"
          },
          {
            "value": "M122"
          },
          {
            "value": "M123"
          },
          {
            "value": "M124"
          },
          {
            "value": "M125"
          },
          {
            "value": "M126"
          },
          {
            "value": "M127"
          },
          {
            "value": "M129"
          },
          {
            "value": "M130"
          },
          {
            "value": "M131"
          },
          {
            "value": "M132"
          },
          {
            "value": "M133"
          },
          {
            "value": "M134"
          },
          {
            "value": "M135"
          },
          {
            "value": "M136"
          },
          {
            "value": "M137"
          },
          {
            "value": "M138"
          },
          {
            "value": "M139"
          },
          {
            "value": "M141"
          },
          {
            "value": "M142"
          },
          {
            "value": "M143"
          },
          {
            "value": "M144"
          },
          {
            "value": "MA01"
          },
          {
            "value": "MA02"
          },
          {
            "value": "MA04"
          },
          {
            "value": "MA07"
          },
          {
            "value": "MA08"
          },
          {
            "value": "MA09"
          },
          {
            "value": "MA10"
          },
          {
            "value": "MA12"
          },
          {
            "value": "MA13"
          },
          {
            "value": "MA14"
          },
          {
            "value": "MA15"
          },
          {
            "value": "MA16"
          },
          {
            "value": "MA17"
          },
          {
            "value": "MA18"
          },
          {
            "value": "MA19"
          },
          {
            "value": "MA20"
          },
          {
            "value": "MA21"
          },
          {
            "value": "MA22"
          },
          {
            "value": "MA23"
          },
          {
            "value": "MA24"
          },
          {
            "value": "MA25"
          },
          {
            "value": "MA26"
          },
          {
            "value": "MA27"
          },
          {
            "value": "MA28"
          },
          {
            "value": "MA30"
          },
          {
            "value": "MA31"
          },
          {
            "value": "MA32"
          },
          {
            "value": "MA33"
          },
          {
            "value": "MA34"
          },
          {
            "value": "MA35"
          },
          {
            "value": "MA36"
          },
          {
            "value": "MA37"
          },
          {
            "value": "MA39"
          },
          {
            "value": "MA40"
          },
          {
            "value": "MA41"
          },
          {
            "value": "MA42"
          },
          {
            "value": "MA43"
          },
          {
            "value": "MA44"
          },
          {
            "value": "MA45"
          },
          {
            "value": "MA46"
          },
          {
            "value": "MA47"
          },
          {
            "value": "MA48"
          },
          {
            "value": "MA50"
          },
          {
            "value": "MA53"
          },
          {
            "value": "MA54"
          },
          {
            "value": "MA55"
          },
          {
            "value": "MA56"
          },
          {
            "value": "MA57"
          },
          {
            "value": "MA58"
          },
          {
            "value": "MA59"
          },
          {
            "value": "MA60"
          },
          {
            "value": "MA61"
          },
          {
            "value": "MA62"
          },
          {
            "value": "MA63"
          },
          {
            "value": "MA64"
          },
          {
            "value": "MA65"
          },
          {
            "value": "MA66"
          },
          {
            "value": "MA67"
          },
          {
            "value": "MA68"
          },
          {
            "value": "MA69"
          },
          {
            "value": "MA70"
          },
          {
            "value": "MA71"
          },
          {
            "value": "MA72"
          },
          {
            "value": "MA73"
          },
          {
            "value": "MA74"
          },
          {
            "value": "MA75"
          },
          {
            "value": "MA76"
          },
          {
            "value": "MA77"
          },
          {
            "value": "MA79"
          },
          {
            "value": "MA80"
          },
          {
            "value": "MA81"
          },
          {
            "value": "MA83"
          },
          {
            "value": "MA84"
          },
          {
            "value": "MA88"
          },
          {
            "value": "MA89"
          },
          {
            "value": "MA90"
          },
          {
            "value": "MA91"
          },
          {
            "value": "MA92"
          },
          {
            "value": "MA93"
          },
          {
            "value": "MA94"
          },
          {
            "value": "MA96"
          },
          {
            "value": "MA97"
          },
          {
            "value": "MA99"
          },
          {
            "value": "MA100"
          },
          {
            "value": "MA103"
          },
          {
            "value": "MA106"
          },
          {
            "value": "MA107"
          },
          {
            "value": "MA108"
          },
          {
            "value": "MA109"
          },
          {
            "value": "MA110"
          },
          {
            "value": "MA111"
          },
          {
            "value": "MA112"
          },
          {
            "value": "MA113"
          },
          {
            "value": "MA114"
          },
          {
            "value": "MA115"
          },
          {
            "value": "MA116"
          },
          {
            "value": "MA117"
          },
          {
            "value": "MA118"
          },
          {
            "value": "MA120"
          },
          {
            "value": "MA121"
          },
          {
            "value": "MA122"
          },
          {
            "value": "MA123"
          },
          {
            "value": "MA125"
          },
          {
            "value": "MA126"
          },
          {
            "value": "MA128"
          },
          {
            "value": "MA130"
          },
          {
            "value": "MA131"
          },
          {
            "value": "MA132"
          },
          {
            "value": "MA133"
          },
          {
            "value": "MA134"
          },
          {
            "value": "N1"
          },
          {
            "value": "N2"
          },
          {
            "value": "N3"
          },
          {
            "value": "N4"
          },
          {
            "value": "N5"
          },
          {
            "value": "N6"
          },
          {
            "value": "N7"
          },
          {
            "value": "N8"
          },
          {
            "value": "N9"
          },
          {
            "value": "N10"
          },
          {
            "value": "N11"
          },
          {
            "value": "N12"
          },
          {
            "value": "N13"
          },
          {
            "value": "N15"
          },
          {
            "value": "N16"
          },
          {
            "value": "N19"
          },
          {
            "value": "N20"
          },
          {
            "value": "N21"
          },
          {
            "value": "N22"
          },
          {
            "value": "N23"
          },
          {
            "value": "N24"
          },
          {
            "value": "N25"
          },
          {
            "value": "N26"
          },
          {
            "value": "N27"
          },
          {
            "value": "N28"
          },
          {
            "value": "N30"
          },
          {
            "value": "N31"
          },
          {
            "value": "N32"
          },
          {
            "value": "N33"
          },
          {
            "value": "N34"
          },
          {
            "value": "N35"
          },
          {
            "value": "N36"
          },
          {
            "value": "N37"
          },
          {
            "value": "N39"
          },
          {
            "value": "N40"
          },
          {
            "value": "N42"
          },
          {
            "value": "N43"
          },
          {
            "value": "N45"
          },
          {
            "value": "N46"
          },
          {
            "value": "N47"
          },
          {
            "value": "N48"
          },
          {
            "value": "N49"
          },
          {
            "value": "N50"
          },
          {
            "value": "N51"
          },
          {
            "value": "N52"
          },
          {
            "value": "N53"
          },
          {
            "value": "N54"
          },
          {
            "value": "N55"
          },
          {
            "value": "N56"
          },
          {
            "value": "N57"
          },
          {
            "value": "N58"
          },
          {
            "value": "N59"
          },
          {
            "value": "N61"
          },
          {
            "value": "N62"
          },
          {
            "value": "N63"
          },
          {
            "value": "N64"
          },
          {
            "value": "N65"
          },
          {
            "value": "N67"
          },
          {
            "value": "N68"
          },
          {
            "value": "N69"
          },
          {
            "value": "N70"
          },
          {
            "value": "N71"
          },
          {
            "value": "N72"
          },
          {
            "value": "N74"
          },
          {
            "value": "N75"
          },
          {
            "value": "N76"
          },
          {
            "value": "N77"
          },
          {
            "value": "N78"
          },
          {
            "value": "N79"
          },
          {
            "value": "N80"
          },
          {
            "value": "N81"
          },
          {
            "value": "N82"
          },
          {
            "value": "N83"
          },
          {
            "value": "N84"
          },
          {
            "value": "N85"
          },
          {
            "value": "N86"
          },
          {
            "value": "N87"
          },
          {
            "value": "N88"
          },
          {
            "value": "N89"
          },
          {
            "value": "N90"
          },
          {
            "value": "N91"
          },
          {
            "value": "N92"
          },
          {
            "value": "N93"
          },
          {
            "value": "N94"
          },
          {
            "value": "N95"
          },
          {
            "value": "N96"
          },
          {
            "value": "N97"
          },
          {
            "value": "N98"
          },
          {
            "value": "N99"
          },
          {
            "value": "N103"
          },
          {
            "value": "N104"
          },
          {
            "value": "N105"
          },
          {
            "value": "N106"
          },
          {
            "value": "N107"
          },
          {
            "value": "N108"
          },
          {
            "value": "N109"
          },
          {
            "value": "N110"
          },
          {
            "value": "N111"
          },
          {
            "value": "N112"
          },
          {
            "value": "N113"
          },
          {
            "value": "N114"
          },
          {
            "value": "N115"
          },
          {
            "value": "N116"
          },
          {
            "value": "N117"
          },
          {
            "value": "N118"
          },
          {
            "value": "N119"
          },
          {
            "value": "N120"
          },
          {
            "value": "N121"
          },
          {
            "value": "N122"
          },
          {
            "value": "N123"
          },
          {
            "value": "N124"
          },
          {
            "value": "N125"
          },
          {
            "value": "N126"
          },
          {
            "value": "N127"
          },
          {
            "value": "N128"
          },
          {
            "value": "N129"
          },
          {
            "value": "N130"
          },
          {
            "value": "N131"
          },
          {
            "value": "N132"
          },
          {
            "value": "N133"
          },
          {
            "value": "N134"
          },
          {
            "value": "N135"
          },
          {
            "value": "N136"
          },
          {
            "value": "N137"
          },
          {
            "value": "N138"
          },
          {
            "value": "N139"
          },
          {
            "value": "N140"
          },
          {
            "value": "N141"
          },
          {
            "value": "N142"
          },
          {
            "value": "N143"
          },
          {
            "value": "N144"
          },
          {
            "value": "N146"
          },
          {
            "value": "N147"
          },
          {
            "value": "N148"
          },
          {
            "value": "N149"
          },
          {
            "value": "N150"
          },
          {
            "value": "N151"
          },
          {
            "value": "N152"
          },
          {
            "value": "N153"
          },
          {
            "value": "N154"
          },
          {
            "value": "N155"
          },
          {
            "value": "N156"
          },
          {
            "value": "N157"
          },
          {
            "value": "N158"
          },
          {
            "value": "N159"
          },
          {
            "value": "N160"
          },
          {
            "value": "N161"
          },
          {
            "value": "N162"
          },
          {
            "value": "N163"
          },
          {
            "value": "N167"
          },
          {
            "value": "N170"
          },
          {
            "value": "N171"
          },
          {
            "value": "N172"
          },
          {
            "value": "N173"
          },
          {
            "value": "N174"
          },
          {
            "value": "N175"
          },
          {
            "value": "N176"
          },
          {
            "value": "N177"
          },
          {
            "value": "N178"
          },
          {
            "value": "N179"
          },
          {
            "value": "N180"
          },
          {
            "value": "N181"
          },
          {
            "value": "N182"
          },
          {
            "value": "N183"
          },
          {
            "value": "N184"
          },
          {
            "value": "N185"
          },
          {
            "value": "N186"
          },
          {
            "value": "N187"
          },
          {
            "value": "N188"
          },
          {
            "value": "N189"
          },
          {
            "value": "N190"
          },
          {
            "value": "N191"
          },
          {
            "value": "N192"
          },
          {
            "value": "N193"
          },
          {
            "value": "N194"
          },
          {
            "value": "N195"
          },
          {
            "value": "N196"
          },
          {
            "value": "N197"
          },
          {
            "value": "N198"
          },
          {
            "value": "N199"
          },
          {
            "value": "N200"
          },
          {
            "value": "N202"
          },
          {
            "value": "N203"
          },
          {
            "value": "N204"
          },
          {
            "value": "N205"
          },
          {
            "value": "N206"
          },
          {
            "value": "N207"
          },
          {
            "value": "N208"
          },
          {
            "value": "N209"
          },
          {
            "value": "N210"
          },
          {
            "value": "N211"
          },
          {
            "value": "N212"
          },
          {
            "value": "N213"
          },
          {
            "value": "N214"
          },
          {
            "value": "N215"
          },
          {
            "value": "N216"
          },
          {
            "value": "N217"
          },
          {
            "value": "N218"
          },
          {
            "value": "N219"
          },
          {
            "value": "N220"
          },
          {
            "value": "N221"
          },
          {
            "value": "N222"
          },
          {
            "value": "N223"
          },
          {
            "value": "N224"
          },
          {
            "value": "N226"
          },
          {
            "value": "N227"
          },
          {
            "value": "N228"
          },
          {
            "value": "N229"
          },
          {
            "value": "N230"
          },
          {
            "value": "N231"
          },
          {
            "value": "N232"
          },
          {
            "value": "N233"
          },
          {
            "value": "N234"
          },
          {
            "value": "N235"
          },
          {
            "value": "N236"
          },
          {
            "value": "N237"
          },
          {
            "value": "N238"
          },
          {
            "value": "N239"
          },
          {
            "value": "N240"
          },
          {
            "value": "N241"
          },
          {
            "value": "N242"
          },
          {
            "value": "N243"
          },
          {
            "value": "N244"
          },
          {
            "value": "N245"
          },
          {
            "value": "N246"
          },
          {
            "value": "N247"
          },
          {
            "value": "N248"
          },
          {
            "value": "N249"
          },
          {
            "value": "N250"
          },
          {
            "value": "N251"
          },
          {
            "value": "N252"
          },
          {
            "value": "N253"
          },
          {
            "value": "N254"
          },
          {
            "value": "N255"
          },
          {
            "value": "N256"
          },
          {
            "value": "N257"
          },
          {
            "value": "N258"
          },
          {
            "value": "N259"
          },
          {
            "value": "N260"
          },
          {
            "value": "N261"
          },
          {
            "value": "N262"
          },
          {
            "value": "N263"
          },
          {
            "value": "N264"
          },
          {
            "value": "N265"
          },
          {
            "value": "N266"
          },
          {
            "value": "N267"
          },
          {
            "value": "N268"
          },
          {
            "value": "N269"
          },
          {
            "value": "N270"
          },
          {
            "value": "N271"
          },
          {
            "value": "N272"
          },
          {
            "value": "N273"
          },
          {
            "value": "N274"
          },
          {
            "value": "N275"
          },
          {
            "value": "N276"
          },
          {
            "value": "N277"
          },
          {
            "value": "N278"
          },
          {
            "value": "N279"
          },
          {
            "value": "N280"
          },
          {
            "value": "N281"
          },
          {
            "value": "N282"
          },
          {
            "value": "N283"
          },
          {
            "value": "N284"
          },
          {
            "value": "N285"
          },
          {
            "value": "N286"
          },
          {
            "value": "N287"
          },
          {
            "value": "N288"
          },
          {
            "value": "N289"
          },
          {
            "value": "N290"
          },
          {
            "value": "N291"
          },
          {
            "value": "N292"
          },
          {
            "value": "N293"
          },
          {
            "value": "N294"
          },
          {
            "value": "N295"
          },
          {
            "value": "N296"
          },
          {
            "value": "N297"
          },
          {
            "value": "N298"
          },
          {
            "value": "N299"
          },
          {
            "value": "N300"
          },
          {
            "value": "N301"
          },
          {
            "value": "N302"
          },
          {
            "value": "N303"
          },
          {
            "value": "N304"
          },
          {
            "value": "N305"
          },
          {
            "value": "N306"
          },
          {
            "value": "N307"
          },
          {
            "value": "N308"
          },
          {
            "value": "N309"
          },
          {
            "value": "N310"
          },
          {
            "value": "N311"
          },
          {
            "value": "N312"
          },
          {
            "value": "N313"
          },
          {
            "value": "N314"
          },
          {
            "value": "N315"
          },
          {
            "value": "N316"
          },
          {
            "value": "N317"
          },
          {
            "value": "N318"
          },
          {
            "value": "N319"
          },
          {
            "value": "N320"
          },
          {
            "value": "N321"
          },
          {
            "value": "N322"
          },
          {
            "value": "N323"
          },
          {
            "value": "N324"
          },
          {
            "value": "N325"
          },
          {
            "value": "N326"
          },
          {
            "value": "N327"
          },
          {
            "value": "N328"
          },
          {
            "value": "N329"
          },
          {
            "value": "N330"
          },
          {
            "value": "N331"
          },
          {
            "value": "N332"
          },
          {
            "value": "N333"
          },
          {
            "value": "N334"
          },
          {
            "value": "N335"
          },
          {
            "value": "N336"
          },
          {
            "value": "N337"
          },
          {
            "value": "N338"
          },
          {
            "value": "N339"
          },
          {
            "value": "N340"
          },
          {
            "value": "N341"
          },
          {
            "value": "N342"
          },
          {
            "value": "N343"
          },
          {
            "value": "N344"
          },
          {
            "value": "N345"
          },
          {
            "value": "N346"
          },
          {
            "value": "N347"
          },
          {
            "value": "N348"
          },
          {
            "value": "N349"
          },
          {
            "value": "N350"
          },
          {
            "value": "N351"
          },
          {
            "value": "N352"
          },
          {
            "value": "N353"
          },
          {
            "value": "N354"
          },
          {
            "value": "N355"
          },
          {
            "value": "N356"
          },
          {
            "value": "N357"
          },
          {
            "value": "N358"
          },
          {
            "value": "N359"
          },
          {
            "value": "N360"
          },
          {
            "value": "N362"
          },
          {
            "value": "N363"
          },
          {
            "value": "N364"
          },
          {
            "value": "N366"
          },
          {
            "value": "N367"
          },
          {
            "value": "N368"
          },
          {
            "value": "N369"
          },
          {
            "value": "N370"
          },
          {
            "value": "N371"
          },
          {
            "value": "N372"
          },
          {
            "value": "N373"
          },
          {
            "value": "N374"
          },
          {
            "value": "N375"
          },
          {
            "value": "N376"
          },
          {
            "value": "N377"
          },
          {
            "value": "N378"
          },
          {
            "value": "N379"
          },
          {
            "value": "N380"
          },
          {
            "value": "N381"
          },
          {
            "value": "N382"
          },
          {
            "value": "N383"
          },
          {
            "value": "N384"
          },
          {
            "value": "N385"
          },
          {
            "value": "N386"
          },
          {
            "value": "N387"
          },
          {
            "value": "N388"
          },
          {
            "value": "N389"
          },
          {
            "value": "N390"
          },
          {
            "value": "N391"
          },
          {
            "value": "N392"
          },
          {
            "value": "N393"
          },
          {
            "value": "N394"
          },
          {
            "value": "N395"
          },
          {
            "value": "N396"
          },
          {
            "value": "N397"
          },
          {
            "value": "N398"
          },
          {
            "value": "N399"
          },
          {
            "value": "N400"
          },
          {
            "value": "N401"
          },
          {
            "value": "N402"
          },
          {
            "value": "N403"
          },
          {
            "value": "N404"
          },
          {
            "value": "N405"
          },
          {
            "value": "N406"
          },
          {
            "value": "N407"
          },
          {
            "value": "N408"
          },
          {
            "value": "N409"
          },
          {
            "value": "N410"
          },
          {
            "value": "N411"
          },
          {
            "value": "N412"
          },
          {
            "value": "N413"
          },
          {
            "value": "N414"
          },
          {
            "value": "N415"
          },
          {
            "value": "N416"
          },
          {
            "value": "N417"
          },
          {
            "value": "N418"
          },
          {
            "value": "N419"
          },
          {
            "value": "N420"
          },
          {
            "value": "N421"
          },
          {
            "value": "N422"
          },
          {
            "value": "N423"
          },
          {
            "value": "N424"
          },
          {
            "value": "N425"
          },
          {
            "value": "N426"
          },
          {
            "value": "N427"
          },
          {
            "value": "N428"
          },
          {
            "value": "N429"
          },
          {
            "value": "N430"
          },
          {
            "value": "N431"
          },
          {
            "value": "N432"
          },
          {
            "value": "N433"
          },
          {
            "value": "N434"
          },
          {
            "value": "N435"
          },
          {
            "value": "N436"
          },
          {
            "value": "N437"
          },
          {
            "value": "N438"
          },
          {
            "value": "N439"
          },
          {
            "value": "N440"
          },
          {
            "value": "N441"
          },
          {
            "value": "N442"
          },
          {
            "value": "N443"
          },
          {
            "value": "N444"
          },
          {
            "value": "N445"
          },
          {
            "value": "N446"
          },
          {
            "value": "N447"
          },
          {
            "value": "N448"
          },
          {
            "value": "N449"
          },
          {
            "value": "N450"
          },
          {
            "value": "N451"
          },
          {
            "value": "N452"
          },
          {
            "value": "N453"
          },
          {
            "value": "N454"
          },
          {
            "value": "N455"
          },
          {
            "value": "N456"
          },
          {
            "value": "N457"
          },
          {
            "value": "N458"
          },
          {
            "value": "N459"
          },
          {
            "value": "N460"
          },
          {
            "value": "N461"
          },
          {
            "value": "N462"
          },
          {
            "value": "N463"
          },
          {
            "value": "N464"
          },
          {
            "value": "N465"
          },
          {
            "value": "N466"
          },
          {
            "value": "N467"
          },
          {
            "value": "N468"
          },
          {
            "value": "N469"
          },
          {
            "value": "N470"
          },
          {
            "value": "N471"
          },
          {
            "value": "N472"
          },
          {
            "value": "N473"
          },
          {
            "value": "N474"
          },
          {
            "value": "N475"
          },
          {
            "value": "N476"
          },
          {
            "value": "N477"
          },
          {
            "value": "N478"
          },
          {
            "value": "N479"
          },
          {
            "value": "N480"
          },
          {
            "value": "N481"
          },
          {
            "value": "N482"
          },
          {
            "value": "N485"
          },
          {
            "value": "N486"
          },
          {
            "value": "N487"
          },
          {
            "value": "N488"
          },
          {
            "value": "N489"
          },
          {
            "value": "N490"
          },
          {
            "value": "N491"
          },
          {
            "value": "N492"
          },
          {
            "value": "N493"
          },
          {
            "value": "N494"
          },
          {
            "value": "N495"
          },
          {
            "value": "N496"
          },
          {
            "value": "N497"
          },
          {
            "value": "N498"
          },
          {
            "value": "N499"
          },
          {
            "value": "N500"
          },
          {
            "value": "N501"
          },
          {
            "value": "N502"
          },
          {
            "value": "N503"
          },
          {
            "value": "N504"
          },
          {
            "value": "N505"
          },
          {
            "value": "N506"
          },
          {
            "value": "N507"
          },
          {
            "value": "N508"
          },
          {
            "value": "N509"
          },
          {
            "value": "N510"
          },
          {
            "value": "N511"
          },
          {
            "value": "N512"
          },
          {
            "value": "N513"
          },
          {
            "value": "N516"
          },
          {
            "value": "N517"
          },
          {
            "value": "N518"
          },
          {
            "value": "N519"
          },
          {
            "value": "N520"
          },
          {
            "value": "N521"
          },
          {
            "value": "N522"
          },
          {
            "value": "N523"
          },
          {
            "value": "N524"
          },
          {
            "value": "N525"
          },
          {
            "value": "N526"
          },
          {
            "value": "N527"
          },
          {
            "value": "N528"
          },
          {
            "value": "N529"
          },
          {
            "value": "N530"
          },
          {
            "value": "N531"
          },
          {
            "value": "N532"
          },
          {
            "value": "N533"
          },
          {
            "value": "N534"
          },
          {
            "value": "N535"
          },
          {
            "value": "N536"
          },
          {
            "value": "N537"
          },
          {
            "value": "N538"
          },
          {
            "value": "N539"
          },
          {
            "value": "N540"
          },
          {
            "value": "N541"
          },
          {
            "value": "N542"
          },
          {
            "value": "N543"
          },
          {
            "value": "N544"
          },
          {
            "value": "N545"
          },
          {
            "value": "N546"
          },
          {
            "value": "N547"
          },
          {
            "value": "N548"
          },
          {
            "value": "N549"
          },
          {
            "value": "N550"
          },
          {
            "value": "N551"
          },
          {
            "value": "N552"
          },
          {
            "value": "N554"
          },
          {
            "value": "N555"
          },
          {
            "value": "N556"
          },
          {
            "value": "N557"
          },
          {
            "value": "N558"
          },
          {
            "value": "N559"
          },
          {
            "value": "N560"
          },
          {
            "value": "N561"
          },
          {
            "value": "N562"
          },
          {
            "value": "N563"
          },
          {
            "value": "N564"
          },
          {
            "value": "N565"
          },
          {
            "value": "N566"
          },
          {
            "value": "N567"
          },
          {
            "value": "N568"
          },
          {
            "value": "N569"
          },
          {
            "value": "N570"
          },
          {
            "value": "N571"
          },
          {
            "value": "N572"
          },
          {
            "value": "N573"
          },
          {
            "value": "N574"
          },
          {
            "value": "N575"
          },
          {
            "value": "N576"
          },
          {
            "value": "N577"
          },
          {
            "value": "N578"
          },
          {
            "value": "N579"
          },
          {
            "value": "N580"
          },
          {
            "value": "N581"
          },
          {
            "value": "N582"
          },
          {
            "value": "N583"
          },
          {
            "value": "N584"
          },
          {
            "value": "N585"
          },
          {
            "value": "N586"
          },
          {
            "value": "N587"
          },
          {
            "value": "N588"
          },
          {
            "value": "N589"
          },
          {
            "value": "N590"
          },
          {
            "value": "N591"
          },
          {
            "value": "N592"
          },
          {
            "value": "N593"
          },
          {
            "value": "N594"
          },
          {
            "value": "N595"
          },
          {
            "value": "N596"
          },
          {
            "value": "N597"
          },
          {
            "value": "N598"
          },
          {
            "value": "N599"
          },
          {
            "value": "N600"
          },
          {
            "value": "N601"
          },
          {
            "value": "N602"
          },
          {
            "value": "N603"
          },
          {
            "value": "N604"
          },
          {
            "value": "N605"
          },
          {
            "value": "N606"
          },
          {
            "value": "N607"
          },
          {
            "value": "N608"
          },
          {
            "value": "N609"
          },
          {
            "value": "N610"
          },
          {
            "value": "N611"
          },
          {
            "value": "N612"
          },
          {
            "value": "N613"
          },
          {
            "value": "N614"
          },
          {
            "value": "N615"
          },
          {
            "value": "N616"
          },
          {
            "value": "N617"
          },
          {
            "value": "N618"
          },
          {
            "value": "N619"
          },
          {
            "value": "N620"
          },
          {
            "value": "N621"
          },
          {
            "value": "N622"
          },
          {
            "value": "N623"
          },
          {
            "value": "N624"
          },
          {
            "value": "N625"
          },
          {
            "value": "N626"
          },
          {
            "value": "N628"
          },
          {
            "value": "N629"
          },
          {
            "value": "N630"
          },
          {
            "value": "N631"
          },
          {
            "value": "N632"
          },
          {
            "value": "N633"
          },
          {
            "value": "N634"
          },
          {
            "value": "N635"
          },
          {
            "value": "N636"
          },
          {
            "value": "N637"
          },
          {
            "value": "N638"
          },
          {
            "value": "N639"
          },
          {
            "value": "N640"
          },
          {
            "value": "N641"
          },
          {
            "value": "N642"
          },
          {
            "value": "N643"
          },
          {
            "value": "N644"
          },
          {
            "value": "N645"
          },
          {
            "value": "N646"
          },
          {
            "value": "N647"
          },
          {
            "value": "N648"
          },
          {
            "value": "N649"
          },
          {
            "value": "N650"
          },
          {
            "value": "N651"
          },
          {
            "value": "N652"
          },
          {
            "value": "N653"
          },
          {
            "value": "N654"
          },
          {
            "value": "N655"
          },
          {
            "value": "N656"
          },
          {
            "value": "N657"
          },
          {
            "value": "N658"
          },
          {
            "value": "N659"
          },
          {
            "value": "N660"
          },
          {
            "value": "N661"
          },
          {
            "value": "N662"
          },
          {
            "value": "N663"
          },
          {
            "value": "N664"
          },
          {
            "value": "N665"
          },
          {
            "value": "N666"
          },
          {
            "value": "N667"
          },
          {
            "value": "N668"
          },
          {
            "value": "N669"
          },
          {
            "value": "N670"
          },
          {
            "value": "N671"
          },
          {
            "value": "N672"
          },
          {
            "value": "N673"
          },
          {
            "value": "N674"
          },
          {
            "value": "N675"
          },
          {
            "value": "N676"
          },
          {
            "value": "N677"
          },
          {
            "value": "N678"
          },
          {
            "value": "N679"
          },
          {
            "value": "N680"
          },
          {
            "value": "N681"
          },
          {
            "value": "N682"
          },
          {
            "value": "N683"
          },
          {
            "value": "N684"
          },
          {
            "value": "N685"
          },
          {
            "value": "N686"
          },
          {
            "value": "N687"
          },
          {
            "value": "N688"
          },
          {
            "value": "N689"
          },
          {
            "value": "N690"
          },
          {
            "value": "N691"
          },
          {
            "value": "N692"
          },
          {
            "value": "N693"
          },
          {
            "value": "N694"
          },
          {
            "value": "N695"
          },
          {
            "value": "N696"
          },
          {
            "value": "N697"
          },
          {
            "value": "N698"
          },
          {
            "value": "N699"
          },
          {
            "value": "N700"
          },
          {
            "value": "N701"
          },
          {
            "value": "N702"
          },
          {
            "value": "N703"
          },
          {
            "value": "N704"
          },
          {
            "value": "N705"
          },
          {
            "value": "N706"
          },
          {
            "value": "N707"
          },
          {
            "value": "N708"
          },
          {
            "value": "N709"
          },
          {
            "value": "N710"
          },
          {
            "value": "N711"
          },
          {
            "value": "N712"
          },
          {
            "value": "N713"
          },
          {
            "value": "N714"
          },
          {
            "value": "N715"
          },
          {
            "value": "N716"
          },
          {
            "value": "N717"
          },
          {
            "value": "N718"
          },
          {
            "value": "N719"
          },
          {
            "value": "N720"
          },
          {
            "value": "N721"
          },
          {
            "value": "N722"
          },
          {
            "value": "N723"
          },
          {
            "value": "N724"
          },
          {
            "value": "N725"
          },
          {
            "value": "N726"
          },
          {
            "value": "N727"
          },
          {
            "value": "N728"
          },
          {
            "value": "N729"
          },
          {
            "value": "N730"
          },
          {
            "value": "N731"
          },
          {
            "value": "N732"
          },
          {
            "value": "N733"
          },
          {
            "value": "N734"
          },
          {
            "value": "N735"
          },
          {
            "value": "N736"
          },
          {
            "value": "N737"
          },
          {
            "value": "N738"
          },
          {
            "value": "N739"
          },
          {
            "value": "N740"
          },
          {
            "value": "N741"
          },
          {
            "value": "N742"
          },
          {
            "value": "N743"
          },
          {
            "value": "N744"
          },
          {
            "value": "N745"
          },
          {
            "value": "N746"
          },
          {
            "value": "N747"
          },
          {
            "value": "N748"
          },
          {
            "value": "N749"
          },
          {
            "value": "N750"
          },
          {
            "value": "N751"
          },
          {
            "value": "N752"
          },
          {
            "value": "N753"
          },
          {
            "value": "N754"
          },
          {
            "value": "N755"
          },
          {
            "value": "N756"
          },
          {
            "value": "N757"
          },
          {
            "value": "N758"
          },
          {
            "value": "N759"
          },
          {
            "value": "N760"
          },
          {
            "value": "N761"
          },
          {
            "value": "N762"
          },
          {
            "value": "N763"
          },
          {
            "value": "N764"
          },
          {
            "value": "N765"
          },
          {
            "value": "N766"
          },
          {
            "value": "N767"
          },
          {
            "value": "N768"
          },
          {
            "value": "N769"
          },
          {
            "value": "N770"
          },
          {
            "value": "N771"
          },
          {
            "value": "N772"
          },
          {
            "value": "N773"
          },
          {
            "value": "N774"
          },
          {
            "value": "N775"
          },
          {
            "value": "N776"
          },
          {
            "value": "N777"
          },
          {
            "value": "N778"
          },
          {
            "value": "N779"
          },
          {
            "value": "N780"
          },
          {
            "value": "N781"
          },
          {
            "value": "N782"
          },
          {
            "value": "N783"
          },
          {
            "value": "N784"
          },
          {
            "value": "N785"
          },
          {
            "value": "N786"
          },
          {
            "value": "N787"
          },
          {
            "value": "N788"
          },
          {
            "value": "N789"
          },
          {
            "value": "N790"
          },
          {
            "value": "N791"
          },
          {
            "value": "N792"
          },
          {
            "value": "N793"
          },
          {
            "value": "N794"
          },
          {
            "value": "N795"
          },
          {
            "value": "N796"
          },
          {
            "value": "N797"
          },
          {
            "value": "N798"
          },
          {
            "value": "N799"
          },
          {
            "value": "N800"
          },
          {
            "value": "N801"
          },
          {
            "value": "N802"
          },
          {
            "value": "N803"
          },
          {
            "value": "N804"
          },
          {
            "value": "N805"
          },
          {
            "value": "N806"
          },
          {
            "value": "N807"
          },
          {
            "value": "N808"
          },
          {
            "value": "N809"
          },
          {
            "value": "N810"
          },
          {
            "value": "N811"
          },
          {
            "value": "N812"
          },
          {
            "value": "N815"
          },
          {
            "value": "N816"
          },
          {
            "value": "N817"
          },
          {
            "value": "N818"
          },
          {
            "value": "N819"
          },
          {
            "value": "N820"
          },
          {
            "value": "N821"
          },
          {
            "value": "N822"
          },
          {
            "value": "N823"
          },
          {
            "value": "N824"
          },
          {
            "value": "N825"
          },
          {
            "value": "N826"
          },
          {
            "value": "N827"
          },
          {
            "value": "N828"
          },
          {
            "value": "N829"
          },
          {
            "value": "N830"
          },
          {
            "value": "N831"
          },
          {
            "value": "N832"
          },
          {
            "value": "N833"
          },
          {
            "value": "N834"
          },
          {
            "value": "N835"
          },
          {
            "value": "N836"
          },
          {
            "value": "N837"
          },
          {
            "value": "N838"
          },
          {
            "value": "N839"
          },
          {
            "value": "N840"
          },
          {
            "value": "N841"
          },
          {
            "value": "N842"
          },
          {
            "value": "N843"
          },
          {
            "value": "N844"
          },
          {
            "value": "N845"
          },
          {
            "value": "N846"
          },
          {
            "value": "N847"
          },
          {
            "value": "N848"
          },
          {
            "value": "N849"
          },
          {
            "value": "N850"
          },
          {
            "value": "N851"
          },
          {
            "value": "N852"
          },
          {
            "value": "N853"
          },
          {
            "value": "N854"
          },
          {
            "value": "N855"
          },
          {
            "value": "N856"
          },
          {
            "value": "N857"
          },
          {
            "value": "N858"
          },
          {
            "value": "N859"
          },
          {
            "value": "N860"
          }
        ],
        "type": "enum"
      }
    },
    "type_adjustments:AdjustmentSortOptions": {
      "name": "AdjustmentSortOptions",
      "shape": {
        "values": [
          {
            "value": "adjustment_timestamp_asc"
          },
          {
            "value": "adjustment_timestamp_desc"
          }
        ],
        "type": "enum"
      }
    },
    "type_adjustments:AdjustmentSource": {
      "name": "AdjustmentSource",
      "shape": {
        "values": [
          {
            "value": "ERA"
          },
          {
            "value": "MANUAL"
          }
        ],
        "type": "enum"
      }
    },
    "type_adjustments:AdjustmentCreate": {
      "name": "AdjustmentCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_line_id",
            "valueType": {
              "value": "type_commons:ServiceLineId",
              "type": "id"
            }
          },
          {
            "key": "amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "adjustment_note",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "source",
            "valueType": {
              "value": "type_adjustments:AdjustmentSource",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_adjustments:AdjustmentUpdate": {
      "name": "AdjustmentUpdate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "amount_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "adjustment_note",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_adjustments:Adjustment": {
      "name": "Adjustment",
      "shape": {
        "extends": ["type_adjustments:AdjustmentCreate"],
        "properties": [
          {
            "key": "adjustment_id",
            "valueType": {
              "value": "type_commons:AdjustmentId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_adjustments:AdjustmentsPage": {
      "name": "AdjustmentsPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_adjustments:Adjustment",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_billing-notes:BillingNoteId": {
      "name": "BillingNoteId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_billing-notes:BillingNoteBase": {
      "name": "BillingNoteBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Empty string not allowed.",
            "key": "text",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_billing-notes:BillingNote": {
      "name": "BillingNote",
      "shape": {
        "extends": ["type_billing-notes:BillingNoteBase"],
        "properties": [
          {
            "key": "billing_note_id",
            "valueType": {
              "value": "type_billing-notes:BillingNoteId",
              "type": "id"
            }
          },
          {
            "key": "encounter_id",
            "valueType": {
              "value": "type_commons:EncounterId",
              "type": "id"
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "author_auth0_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "author_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_claim-submission:ClaimSubmission": {
      "name": "ClaimSubmission",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "content",
            "valueType": {
              "value": "type_cms-1500:CMS1500Content",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_claim-submission:ClaimSubmissionStatus": {
      "name": "ClaimSubmissionStatus",
      "shape": {
        "values": [
          {
            "value": "SUBMITTED"
          },
          {
            "value": "PENDING_SUBMISSION"
          },
          {
            "value": "REJECTED"
          },
          {
            "value": "ERROR"
          }
        ],
        "type": "enum"
      }
    },
    "type_claim-submission:ClaimFrequencyTypeCode": {
      "name": "ClaimFrequencyTypeCode",
      "shape": {
        "values": [
          {
            "value": "1"
          },
          {
            "value": "6"
          },
          {
            "value": "7"
          },
          {
            "value": "8"
          }
        ],
        "type": "enum"
      }
    },
    "type_claims:Claim": {
      "name": "Claim",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "claim_id",
            "valueType": {
              "value": "type_commons:ClaimId",
              "type": "id"
            }
          },
          {
            "key": "status",
            "valueType": {
              "value": "type_claims:ClaimStatus",
              "type": "id"
            }
          },
          {
            "key": "clearinghouse",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "clearinghouse_claim_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "payer_claim_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_lines",
            "valueType": {
              "itemType": {
                "value": "type_service-lines/v2:ServiceLine",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "eras",
            "valueType": {
              "itemType": {
                "value": "type_era:ERA",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_claims:ClaimStatus": {
      "name": "ClaimStatus",
      "shape": {
        "values": [
          {
            "value": "biller_received"
          },
          {
            "value": "coded"
          },
          {
            "value": "submitted_to_payer"
          },
          {
            "value": "missing_information"
          },
          {
            "value": "not_billable"
          },
          {
            "value": "waiting_for_provider"
          },
          {
            "value": "era_received"
          },
          {
            "value": "rejected"
          },
          {
            "value": "denied"
          },
          {
            "value": "paid"
          },
          {
            "value": "paid_incorrectly"
          },
          {
            "value": "finalized_paid"
          },
          {
            "value": "finalized_denied"
          },
          {
            "value": "held_by_customer"
          }
        ],
        "type": "enum"
      }
    },
    "type_cms-1500:CMS1500Content": {
      "name": "CMS1500Content",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "header_insurance_info",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:InsuranceInfo",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_1_insurance_type",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:InsuranceType",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_1_a_insured_id_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_2_patient_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_3_patient",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box3Patient",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_4_insured_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_5_patient_address",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:AddressBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_6_patient_relationship_to_insured",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:PatientRelationshipToInsured",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_7_insured_address",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:AddressBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_8_reserved_for_nucc_use",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_9_other_insured",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box9OtherInsured",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_10_patient_condition_related_to",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box10PatientConditionRelatedTo",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_11_insured",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box11Insured",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_12_patient_or_authorized_signature",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:SignatureDateBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_13_insured_or_authorized_signature",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_14_date_of_current_condition",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box14DateOfCurrentCondition",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_15_other_date",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box15OtherDate",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_16_dates_patient_unable_to_work",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box16DatesPatientUnableToWork",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_17_referring_provider",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box17ReferringProvider",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_18_hospitalization_dates",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box18HospitalizationDates",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_19_additional_claim_info",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_20_outside_lab",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box20OutsideLab",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_21_diagnoses",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box21Diagnoses",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_22_resubmission",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box22Resubmission",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_23_prior_authorization_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_24_service_lines",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box24ServiceLines",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_25_federal_tax_id_number",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box25FederalTaxIdNumber",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_26_patient_account_no",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_27_accepts_assignment",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_28_total_charge",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box28TotalCharge",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_29_amount_paid",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_31_physician_or_supplier_signature",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:SignatureDateBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_32_service_facility_info",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box32ServiceFacilityInfo",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_33_billing_provider_info",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Box33BillingProviderInfo",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:AddressBox": {
      "name": "AddressBox",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "address",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "city",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "state",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "zip_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "telephone",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:PhoneNumberBox",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:AddressBox3Line": {
      "name": "AddressBox3Line",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "address",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "city_state_zip",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:DateBox": {
      "name": "DateBox",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "mm format",
            "key": "month",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "dd format",
            "key": "day",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "yy format",
            "key": "year",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:PhoneNumberBox": {
      "name": "PhoneNumberBox",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "area_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "prefix_and_line_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:SignatureDateBox": {
      "name": "SignatureDateBox",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "signature",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "date",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:FederalTaxIdNumberType": {
      "name": "FederalTaxIdNumberType",
      "shape": {
        "values": [
          {
            "value": "SSN"
          },
          {
            "value": "EIN"
          }
        ],
        "type": "enum"
      }
    },
    "type_cms-1500:InsuranceType": {
      "name": "InsuranceType",
      "shape": {
        "values": [
          {
            "value": "MEDICARE"
          },
          {
            "value": "MEDICAID"
          },
          {
            "value": "TRICARE"
          },
          {
            "value": "CHAMPVA"
          },
          {
            "value": "GROUP_HEALTH_PLAN"
          },
          {
            "value": "FECA_BLK_LUNG"
          },
          {
            "value": "OTHER"
          }
        ],
        "type": "enum"
      }
    },
    "type_cms-1500:PatientRelationshipToInsured": {
      "name": "PatientRelationshipToInsured",
      "shape": {
        "values": [
          {
            "value": "SELF"
          },
          {
            "value": "SPOUSE"
          },
          {
            "value": "CHILD"
          },
          {
            "value": "OTHER"
          }
        ],
        "type": "enum"
      }
    },
    "type_cms-1500:Sex": {
      "name": "Sex",
      "shape": {
        "values": [
          {
            "value": "M"
          },
          {
            "value": "F"
          }
        ],
        "type": "enum"
      }
    },
    "type_cms-1500:InsuranceInfo": {
      "name": "InsuranceInfo",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "address_1",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "address_2",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "city_state_zip",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box3Patient": {
      "name": "Box3Patient",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "date_of_birth",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:DateBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "sex",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Sex",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box9OtherInsured": {
      "name": "Box9OtherInsured",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "box_9_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_9_a_policy_or_group_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_9_b_reserved_for_nucc_use",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_9_c_reserved_for_nucc_use",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_9_d_insurance_plan_or_program_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box10PatientConditionRelatedTo": {
      "name": "Box10PatientConditionRelatedTo",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "box_10_a_employment",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_10_b_auto_accident",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_10_b_auto_accident_state",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_10_c_other_accident",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_10_d_claim_codes",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box11Insured": {
      "name": "Box11Insured",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "box_11_policy_group_or_feca_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_11_a_date_of_birth",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:DateBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_11_a_sex",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:Sex",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_11_b_other_claim_id_qual",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_11_b_other_claim_id_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_11_c_insurance_plan_or_program_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_11_d_another_health_benefit_plan",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box14DateOfCurrentCondition": {
      "name": "Box14DateOfCurrentCondition",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "date",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:DateBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "qual",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box15OtherDate": {
      "name": "Box15OtherDate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "qual",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "date",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:DateBox",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box16DatesPatientUnableToWork": {
      "name": "Box16DatesPatientUnableToWork",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "from",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:DateBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "to",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:DateBox",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box17ReferringProvider": {
      "name": "Box17ReferringProvider",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "box_17_qual",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_17_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_17_a_id_qual",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_17_a_id_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_17_b_npi",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box18HospitalizationDates": {
      "name": "Box18HospitalizationDates",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "from",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:DateBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "to",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:DateBox",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box20OutsideLab": {
      "name": "Box20OutsideLab",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "outside_lab",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "charges",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box21Diagnoses": {
      "name": "Box21Diagnoses",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "icd_ind",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_21_a",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_21_b",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_21_c",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_21_d",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_21_e",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_21_f",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_21_g",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_21_h",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_21_i",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_21_j",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_21_k",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_21_l",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box22Resubmission": {
      "name": "Box22Resubmission",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "original_ref_no",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box24ServiceLines": {
      "name": "Box24ServiceLines",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_line_1",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:ServiceLineBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_2",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:ServiceLineBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_3",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:ServiceLineBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_4",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:ServiceLineBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_5",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:ServiceLineBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "service_line_6",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:ServiceLineBox",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:ServiceLineBox": {
      "name": "ServiceLineBox",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "box_24_a_from",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:DateBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_24_a_to",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:DateBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_24_b_place_of_service",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_24_c_emg",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_24_d_procedure_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_24_d_modifier",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:ModifiersBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_24_e_diagnosis_pointer",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_24_f_charges",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_24_g_days_or_units",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_24_h_epsdt",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_24_h_family_plan",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_24_i_id_qual",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_24_j_id_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_24_j_rendering_provider_npi",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_24_suppl",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:ModifiersBox": {
      "name": "ModifiersBox",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "modifier_1",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "modifier_2",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "modifier_3",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "modifier_4",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box25FederalTaxIdNumber": {
      "name": "Box25FederalTaxIdNumber",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "id_qual",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:FederalTaxIdNumberType",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box28TotalCharge": {
      "name": "Box28TotalCharge",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "total_charges",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "two_seventy_six",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box32ServiceFacilityInfo": {
      "name": "Box32ServiceFacilityInfo",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "box_32",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:AddressBox3Line",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_32_a_npi",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_32_b_other_id_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_cms-1500:Box33BillingProviderInfo": {
      "name": "Box33BillingProviderInfo",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "phone_number",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:PhoneNumberBox",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_33",
            "valueType": {
              "itemType": {
                "value": "type_cms-1500:AddressBox3Line",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_33_a_npi",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "box_33_b_other_id_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:EncounterId": {
      "name": "EncounterId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:OrganizationId": {
      "name": "OrganizationId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:ClaimId": {
      "name": "ClaimId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:ServiceLineId": {
      "name": "ServiceLineId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:AdjustmentId": {
      "name": "AdjustmentId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:PatientExternalId": {
      "name": "PatientExternalId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:EncounterExternalId": {
      "name": "EncounterExternalId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:Auth0Id": {
      "name": "Auth0Id",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:ClaimSubmissionId": {
      "name": "ClaimSubmissionId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:RaRunId": {
      "name": "RaRunId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:Npi": {
      "name": "Npi",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:WorkQueueId": {
      "name": "WorkQueueId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:UserId": {
      "name": "UserId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:TaskId": {
      "name": "TaskId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:LinkUrl": {
      "name": "LinkUrl",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:ContentDownloadUrl": {
      "name": "ContentDownloadUrl",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:ContentDownloadUrlWithExpiration": {
      "name": "ContentDownloadUrlWithExpiration",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "url",
            "valueType": {
              "value": "type_commons:ContentDownloadUrl",
              "type": "id"
            }
          },
          {
            "key": "expiration_time_seconds",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:PageToken": {
      "name": "PageToken",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:SortDirection": {
      "name": "SortDirection",
      "shape": {
        "values": [
          {
            "value": "asc"
          },
          {
            "value": "desc"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:Date": {
      "description": "ISO 8601 date; formatted YYYY-MM-DD (i.e. 2012-02-01)",
      "name": "Date",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:DateRangeRequiredEnd": {
      "name": "DateRangeRequiredEnd",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "start_date",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          },
          {
            "key": "end_date",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:DateRangeOptionalEnd": {
      "name": "DateRangeOptionalEnd",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "start_date",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          },
          {
            "key": "end_date",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:Decimal": {
      "description": "String representation of a Decimal that can be parsed by most libraries.",
      "name": "Decimal",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:RemovableDateRangeOptionalEnd": {
      "name": "RemovableDateRangeOptionalEnd",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "date_range",
            "additionalProperties": {
              "extends": ["type_commons:DateRangeOptionalEnd"],
              "properties": []
            }
          },
          {
            "discriminantValue": "remove",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_commons:ResourcePage": {
      "name": "ResourcePage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "prev_page_token",
            "valueType": {
              "itemType": {
                "value": "type_commons:PageToken",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "next_page_token",
            "valueType": {
              "itemType": {
                "value": "type_commons:PageToken",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:StreetAddressBase": {
      "name": "StreetAddressBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "address1",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "address2",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "city",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "state",
            "valueType": {
              "value": "type_commons:State",
              "type": "id"
            }
          },
          {
            "description": "5-digit zip code",
            "key": "zip_code",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:StreetAddressShortZip": {
      "name": "StreetAddressShortZip",
      "shape": {
        "extends": ["type_commons:StreetAddressBase"],
        "properties": [
          {
            "description": "4-digit zip add-on code https://en.wikipedia.org/wiki/ZIP_Code#ZIP+4",
            "key": "zip_plus_four_code",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:StreetAddressLongZip": {
      "name": "StreetAddressLongZip",
      "shape": {
        "extends": ["type_commons:StreetAddressBase"],
        "properties": [
          {
            "description": "4-digit zip add-on code https://en.wikipedia.org/wiki/ZIP_Code#ZIP+4",
            "key": "zip_plus_four_code",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:Regions": {
      "name": "Regions",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "states",
            "additionalProperties": {
              "extends": ["type_commons:RegionStates"],
              "properties": []
            }
          },
          {
            "discriminantValue": "national",
            "additionalProperties": {
              "extends": ["type_commons:RegionNational"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_commons:RegionStates": {
      "name": "RegionStates",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "states",
            "valueType": {
              "itemType": {
                "value": "type_commons:State",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:RegionNational": {
      "name": "RegionNational",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_commons:State": {
      "name": "State",
      "shape": {
        "values": [
          {
            "value": "AA"
          },
          {
            "value": "AE"
          },
          {
            "value": "AP"
          },
          {
            "value": "AL"
          },
          {
            "value": "AK"
          },
          {
            "value": "AZ"
          },
          {
            "value": "AR"
          },
          {
            "value": "CA"
          },
          {
            "value": "CO"
          },
          {
            "value": "CT"
          },
          {
            "value": "DC"
          },
          {
            "value": "DE"
          },
          {
            "value": "FL"
          },
          {
            "value": "GA"
          },
          {
            "value": "HI"
          },
          {
            "value": "ID"
          },
          {
            "value": "IL"
          },
          {
            "value": "IN"
          },
          {
            "value": "IA"
          },
          {
            "value": "KS"
          },
          {
            "value": "KY"
          },
          {
            "value": "LA"
          },
          {
            "value": "ME"
          },
          {
            "value": "MD"
          },
          {
            "value": "MA"
          },
          {
            "value": "MI"
          },
          {
            "value": "MN"
          },
          {
            "value": "MS"
          },
          {
            "value": "MO"
          },
          {
            "value": "MT"
          },
          {
            "value": "NE"
          },
          {
            "value": "NV"
          },
          {
            "value": "NH"
          },
          {
            "value": "NJ"
          },
          {
            "value": "NM"
          },
          {
            "value": "NY"
          },
          {
            "value": "NC"
          },
          {
            "value": "ND"
          },
          {
            "value": "OH"
          },
          {
            "value": "OK"
          },
          {
            "value": "OR"
          },
          {
            "value": "PA"
          },
          {
            "value": "PR"
          },
          {
            "value": "RI"
          },
          {
            "value": "SC"
          },
          {
            "value": "SD"
          },
          {
            "value": "TN"
          },
          {
            "value": "TX"
          },
          {
            "value": "UT"
          },
          {
            "value": "VT"
          },
          {
            "value": "VA"
          },
          {
            "value": "WA"
          },
          {
            "value": "WV"
          },
          {
            "value": "WI"
          },
          {
            "value": "WY"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:SourceOfPaymentCode": {
      "name": "SourceOfPaymentCode",
      "shape": {
        "values": [
          {
            "description": "Self-pay",
            "value": "09"
          },
          {
            "description": "Other Non-Federal Programs",
            "value": "11"
          },
          {
            "description": "Preferred Provider Organization (PPO)",
            "value": "12"
          },
          {
            "description": "Point of Service (POS)",
            "value": "13"
          },
          {
            "description": "Exclusive Provider Organization (EPO)",
            "value": "14"
          },
          {
            "description": "Indemnity Insurance",
            "value": "15"
          },
          {
            "description": "Health Maintenance Organization (HMO) Medicare Risk",
            "value": "16"
          },
          {
            "description": "Dental Maintenance Organization",
            "value": "17"
          },
          {
            "description": "Automobile Medical",
            "value": "AM"
          },
          {
            "description": "Blue Cross/Blue Shield",
            "value": "BL"
          },
          {
            "description": "CHAMPUS",
            "value": "CH"
          },
          {
            "description": "Commercial Insurance Co.",
            "value": "CI"
          },
          {
            "description": "Disability",
            "value": "DS"
          },
          {
            "description": "Federal Employees Program",
            "value": "FI"
          },
          {
            "description": "Health Maintenance Organization (HMO)",
            "value": "HM"
          },
          {
            "description": "Liability Medical",
            "value": "LM"
          },
          {
            "description": "Medicare Part A",
            "value": "MA"
          },
          {
            "description": "Medicare Part B",
            "value": "MB"
          },
          {
            "description": "Medicaid",
            "value": "MC"
          },
          {
            "description": "Other Federal Program",
            "value": "OF"
          },
          {
            "description": "Title V",
            "value": "TV"
          },
          {
            "description": "Veterans Affairs Plan",
            "value": "VA"
          },
          {
            "description": "Workers' Compensation Health Claim",
            "value": "WC"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:FacilityTypeCode": {
      "description": "Box 24B on the CMS-1500 claim form. Line-level place of service is not currently supported.\n02 for telemedicine, 11 for in-person. Full list here:\nhttps://www.cms.gov/Medicare/Coding/place-of-service-codes/Place_of_Service_Code_Set\n",
      "name": "FacilityTypeCode",
      "shape": {
        "values": [
          {
            "value": "01"
          },
          {
            "value": "02"
          },
          {
            "value": "03"
          },
          {
            "value": "04"
          },
          {
            "value": "05"
          },
          {
            "value": "06"
          },
          {
            "value": "07"
          },
          {
            "value": "08"
          },
          {
            "value": "09"
          },
          {
            "value": "10"
          },
          {
            "value": "11"
          },
          {
            "value": "12"
          },
          {
            "value": "13"
          },
          {
            "value": "14"
          },
          {
            "value": "15"
          },
          {
            "value": "16"
          },
          {
            "value": "17"
          },
          {
            "value": "18"
          },
          {
            "value": "19"
          },
          {
            "value": "20"
          },
          {
            "value": "21"
          },
          {
            "value": "22"
          },
          {
            "value": "23"
          },
          {
            "value": "24"
          },
          {
            "value": "25"
          },
          {
            "value": "26"
          },
          {
            "value": "31"
          },
          {
            "value": "32"
          },
          {
            "value": "33"
          },
          {
            "value": "34"
          },
          {
            "value": "41"
          },
          {
            "value": "42"
          },
          {
            "value": "49"
          },
          {
            "value": "50"
          },
          {
            "value": "51"
          },
          {
            "value": "52"
          },
          {
            "value": "53"
          },
          {
            "value": "54"
          },
          {
            "value": "55"
          },
          {
            "value": "56"
          },
          {
            "value": "57"
          },
          {
            "value": "58"
          },
          {
            "value": "60"
          },
          {
            "value": "61"
          },
          {
            "value": "62"
          },
          {
            "value": "65"
          },
          {
            "value": "71"
          },
          {
            "value": "72"
          },
          {
            "value": "81"
          },
          {
            "value": "99"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:PatientRelationshipToInsuredCodeAll": {
      "name": "PatientRelationshipToInsuredCodeAll",
      "shape": {
        "values": [
          {
            "value": "01"
          },
          {
            "value": "04"
          },
          {
            "value": "05"
          },
          {
            "value": "07"
          },
          {
            "value": "10"
          },
          {
            "value": "15"
          },
          {
            "value": "17"
          },
          {
            "value": "18"
          },
          {
            "value": "19"
          },
          {
            "value": "20"
          },
          {
            "value": "21"
          },
          {
            "value": "22"
          },
          {
            "value": "23"
          },
          {
            "value": "24"
          },
          {
            "value": "29"
          },
          {
            "value": "32"
          },
          {
            "value": "33"
          },
          {
            "value": "36"
          },
          {
            "value": "39"
          },
          {
            "value": "40"
          },
          {
            "value": "41"
          },
          {
            "value": "43"
          },
          {
            "value": "53"
          },
          {
            "value": "G8"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:ProcedureModifier": {
      "name": "ProcedureModifier",
      "shape": {
        "values": [
          {
            "description": "Increased Procedural Services",
            "value": "22"
          },
          {
            "description": "Unusual Anesthesia",
            "value": "23"
          },
          {
            "description": "Unrelated Evaluation and Management Service by the Same Physician or Other Qualified Health Care Professional During a Postoperative Period",
            "value": "24"
          },
          {
            "description": "Significant, Separately Identifiable Evaluation and Management Service by the Same Physician or Other Qualified Health Care Professional on the Same Day of the Procedure or Other Service",
            "value": "25"
          },
          {
            "description": "Professional Component",
            "value": "26"
          },
          {
            "description": "Multiple Outpatient Hospital E/M Encounters on the Same Date",
            "value": "27"
          },
          {
            "description": "Mandated Services",
            "value": "32"
          },
          {
            "description": "Preventive Services",
            "value": "33"
          },
          {
            "description": "Anesthesia by Surgeon",
            "value": "47"
          },
          {
            "description": "Bilateral Procedure",
            "value": "50"
          },
          {
            "description": "Multiple Procedures",
            "value": "51"
          },
          {
            "description": "Reduced Services",
            "value": "52"
          },
          {
            "description": "Discontinued Procedure",
            "value": "53"
          },
          {
            "description": "Surgical Care Only",
            "value": "54"
          },
          {
            "description": "Postoperative Management Only",
            "value": "55"
          },
          {
            "description": "Preoperative Management Only",
            "value": "56"
          },
          {
            "description": "Decision for Surgery",
            "value": "57"
          },
          {
            "description": "Staged or Related Procedure or Service by the Same Physician or Other Qualified Health Care Professional During the Postoperative Period",
            "value": "58"
          },
          {
            "description": "Distinct Procedural Service",
            "value": "59"
          },
          {
            "description": "Two Surgeons",
            "value": "62"
          },
          {
            "description": "Procedure Performed on Infants less than 4 kg",
            "value": "63"
          },
          {
            "description": "Surgical Team",
            "value": "66"
          },
          {
            "description": "Discontinued Outpatient Hospital/Ambulatory Surgery Center (ASC) Procedure After Administration of Anesthesia",
            "value": "74"
          },
          {
            "description": "Repeat Procedure or Service by Same Physician or Other Qualified Health Care Professional",
            "value": "76"
          },
          {
            "description": "Repeat Procedure by Another Physician or Other Qualified Health Care Professional",
            "value": "77"
          },
          {
            "description": "Unplanned Return to the Operating/Procedure Room by the Same Physician or Other Qualified Health Care Professional Following Initial Procedure for a Related Procedure During the Postoperative Period",
            "value": "78"
          },
          {
            "description": "Unrelated Procedure or Service by the Same Physician or Other Qualified Health Care Professional During the Postoperative Period",
            "value": "79"
          },
          {
            "description": "Assistant Surgeon",
            "value": "80"
          },
          {
            "description": "Minimum Assistant Surgeon",
            "value": "81"
          },
          {
            "description": "Assistant Surgeon (when qualified resident surgeon not available)",
            "value": "82"
          },
          {
            "description": "Reference (Outside) Laboratory",
            "value": "90"
          },
          {
            "description": "Repeat Clinical Diagnostic Laboratory Test",
            "value": "91"
          },
          {
            "description": "Alternative Laboratory Platform Testing",
            "value": "92"
          },
          {
            "description": "Synchronous Telemedicine Service Rendered Via Telephone or Other Real-Time Interactive Audio-Only Telecommunications System",
            "value": "93"
          },
          {
            "description": "Synchronous Telemedicine Service Rendered via a Real-Time Interactive Audio and Video Telecommunications System",
            "value": "95"
          },
          {
            "description": "Habilitative Services",
            "value": "96"
          },
          {
            "description": "Rehabilitative Services",
            "value": "97"
          },
          {
            "description": "Multiple Modifiers",
            "value": "99"
          },
          {
            "description": "Dressing for one wound",
            "value": "A1"
          },
          {
            "description": "Dressing for two wounds",
            "value": "A2"
          },
          {
            "description": "Dressing for three wounds",
            "value": "A3"
          },
          {
            "description": "Dressing for four wounds",
            "value": "A4"
          },
          {
            "description": "Dressing for five wounds",
            "value": "A5"
          },
          {
            "description": "Dressing for six wounds",
            "value": "A6"
          },
          {
            "description": "Dressing for seven wounds",
            "value": "A7"
          },
          {
            "description": "Dressing for eight wounds",
            "value": "A8"
          },
          {
            "description": "Dressing for nine wounds",
            "value": "A9"
          },
          {
            "description": "Anesthesia services performed personally by anesthesiologist",
            "value": "AA"
          },
          {
            "description": "Audiology service furnished personally by an audiologist without a physician/npp order for non-acute hearing assessment ...\n",
            "value": "AB"
          },
          {
            "description": "Medical supervision by a physician: more than four concurrent anesthesia procedures\n",
            "value": "AD"
          },
          {
            "description": "Registered dietician",
            "value": "AE"
          },
          {
            "description": "Specialty physician",
            "value": "AF"
          },
          {
            "description": "Primary physician",
            "value": "AG"
          },
          {
            "description": "Clinical psychologist",
            "value": "AH"
          },
          {
            "description": "Principal physician of record",
            "value": "AI"
          },
          {
            "description": "Clinical social worker",
            "value": "AJ"
          },
          {
            "description": "Non participating physician",
            "value": "AK"
          },
          {
            "description": "Physician, team member service",
            "value": "AM"
          },
          {
            "description": "Alternate payment method declined by provider of service",
            "value": "AO"
          },
          {
            "description": "Determination of refractive state was not performed in the course of diagnostic ophthalmological examination",
            "value": "AP"
          },
          {
            "description": "Physician providing a service in an unlisted health professional shortage area (hpsa)",
            "value": "AQ"
          },
          {
            "description": "Physician provider services in a physician scarcity area",
            "value": "AR"
          },
          {
            "description": "Physician assistant, nurse practitioner, or clinical nurse specialist services for assistant at surgery",
            "value": "AS"
          },
          {
            "description": "Acute treatment",
            "value": "AT"
          },
          {
            "description": "Physician providing a service in a dental health professional shortage area for the purpose of an EHR incentive payment",
            "value": "AZ"
          },
          {
            "description": "Item furnished in conjunction with parenteral enteral nutrition (pen) services",
            "value": "BA"
          },
          {
            "description": "Special acquisition of blood and blood products",
            "value": "BL"
          },
          {
            "description": "Orally administered nutrition, not by feeding tube",
            "value": "BO"
          },
          {
            "description": "The beneficiary has been informed of the purchase and rental options and has elected to purchase the item",
            "value": "BP"
          },
          {
            "description": "The beneficiary has been informed of the purchase and rental options and has elected to rent the item",
            "value": "BR"
          },
          {
            "description": "The beneficiary has been informed of the purchase and rental options and after 30 days has not informed the supplier",
            "value": "BU"
          },
          {
            "description": "Procedure payable only in the inpatient setting when performed emergently on an outpatient who expires prior to admission",
            "value": "CA"
          },
          {
            "description": "Service ordered by a renal dialysis facility (rdf) physician as part of the ESRD beneficiary's dialysis benefit",
            "value": "CB"
          },
          {
            "description": "Procedure code change",
            "value": "CC"
          },
          {
            "description": "Amcc test has been ordered by an ESRD facility or MCP physician that is not separately billable",
            "value": "CD"
          },
          {
            "description": "Amcc test has been ordered by an esrd facility or mcp physician that is beyond the normal frequency covered",
            "value": "CE"
          },
          {
            "description": "Amcc test has been ordered by an esrd facility or mcp physician that is separately billable",
            "value": "CF"
          },
          {
            "description": "Policy criteria applied",
            "value": "CG"
          },
          {
            "description": "0 percent impaired, limited or restricted",
            "value": "CH"
          },
          {
            "description": "At least 1 percent but less than 20 percent impaired, limited or restricted",
            "value": "CI"
          },
          {
            "description": "At least 20 percent but less than 40 percent impaired, limited or restricted",
            "value": "CJ"
          },
          {
            "description": "At least 40 percent but less than 60 percent impaired, limited or restricted",
            "value": "CK"
          },
          {
            "description": "At least 60 percent but less than 80 percent impaired, limited or restricted",
            "value": "CL"
          },
          {
            "description": "At least 80 percent but less than 100 percent impaired, limited or restricted",
            "value": "CM"
          },
          {
            "description": "100 percent impaired, limited or restricted",
            "value": "CN"
          },
          {
            "description": "Catastrophe/disaster related",
            "value": "CR"
          },
          {
            "description": "Cost sharing for COVID-19 testing",
            "value": "CS"
          },
          {
            "description": "Computed tomography services furnished using equipment that does not meet xr-29-2013 standard",
            "value": "CT"
          },
          {
            "description": "Outpatient physical therapy services furnished in whole or in part by a occupational therapist assistant",
            "value": "CO"
          },
          {
            "description": "Outpatient physical therapy services furnished in whole or in part by a physical therapist assistant",
            "value": "CQ"
          },
          {
            "description": "Upper left, eyelid",
            "value": "E1"
          },
          {
            "description": "Lower left, eyelid",
            "value": "E2"
          },
          {
            "description": "Upper right, eyelid",
            "value": "E3"
          },
          {
            "description": "Lower right, eyelid",
            "value": "E4"
          },
          {
            "description": "Erythropoetic stimulating agent (esa) administered to treat anemia due to anti-cancer chemotherapy",
            "value": "EA"
          },
          {
            "description": "Erythropoetic stimulating agent (esa) administered to treat anemia due to anti-cancer radiotherapy",
            "value": "EB"
          },
          {
            "description": "Erythropoetic stimulating agent (esa) administered to treat anemia not due to anti-cancer radiotherapy or chemotherapy",
            "value": "EC"
          },
          {
            "description": "Hematocrit level has exceeded 39% (or hemoglobin level has exceeded 13.0 g/dl) for 3 or more consecutive billing cycles",
            "value": "ED"
          },
          {
            "description": "Hematocrit level has not exceeded 39% (or hemoglobin level has not exceeded 13.0 g/dl) for 3 or more billing cycles",
            "value": "EE"
          },
          {
            "description": "Subsequent claims for a defined course of therapy, e.g., epo, sodium hyaluronate, infliximab",
            "value": "EJ"
          },
          {
            "description": "Emergency reserve supply (for esrd benefit only)",
            "value": "EM"
          },
          {
            "description": "Service provided as part of medicaid early periodic screening diagnosis and treatment (epsdt) program",
            "value": "EP"
          },
          {
            "description": "Items and services furnished by a provider-based, off-campus emergency department",
            "value": "ER"
          },
          {
            "description": "Emergency services",
            "value": "ET"
          },
          {
            "description": "Expatriate beneficiary",
            "value": "EX"
          },
          {
            "description": "No physician or other licensed health care provider order for this item or service",
            "value": "EY"
          },
          {
            "description": "Left hand, second digit",
            "value": "F1"
          },
          {
            "description": "Left hand, third digit",
            "value": "F2"
          },
          {
            "description": "Left hand, fourth digit",
            "value": "F3"
          },
          {
            "description": "Left hand, fifth digit",
            "value": "F4"
          },
          {
            "description": "Right hand, thumb",
            "value": "F5"
          },
          {
            "description": "Right hand, second digit",
            "value": "F6"
          },
          {
            "description": "Right hand, third digit",
            "value": "F7"
          },
          {
            "description": "Right hand, fourth digit",
            "value": "F8"
          },
          {
            "description": "Right hand, fifth digit",
            "value": "F9"
          },
          {
            "description": "Right hand, thumb",
            "value": "FA"
          },
          {
            "description": "Item provided without cost to provider, supplier or practitioner, or full credit received for replaced device",
            "value": "FB"
          },
          {
            "description": "Partial credit received for replaced device",
            "value": "FC"
          },
          {
            "description": "Service provided as part of family planning program",
            "value": "FP"
          },
          {
            "description": "Telehealth service furnished using real-time audio-only communication technology.",
            "value": "FQ"
          },
          {
            "description": "A supervising practitioner was present through a real-time two-way, audio/video communication technology.",
            "value": "FR"
          },
          {
            "description": "Split (or shared) evaluation and management visit.",
            "value": "FS"
          },
          {
            "description": "Unrelated evaluation and management (e/m) visit on the same day as another e/m visit or during a global procedure",
            "value": "FT"
          },
          {
            "description": "X-ray taken using film",
            "value": "FX"
          },
          {
            "description": "X-ray taken using computed radiography technology/cassette-based imaging",
            "value": "FY"
          },
          {
            "description": "Telehealth Services For Diagnosis, Evaluation, Or Treatment, Of Symptoms Of An Acute Stroke",
            "value": "G0"
          },
          {
            "description": "Most recent urr reading of less than 60",
            "value": "G1"
          },
          {
            "description": "Most recent urr reading of 60 to 64.9",
            "value": "G2"
          },
          {
            "description": "Most recent urr reading of 65 to 69.9",
            "value": "G3"
          },
          {
            "description": "Most recent urr reading of 70 to 74.9",
            "value": "G4"
          },
          {
            "description": "Most recent urr reading of 75 or greater",
            "value": "G5"
          },
          {
            "description": "ESRD patient for whom less than six dialysis sessions have been provided in a month",
            "value": "G6"
          },
          {
            "description": "Pregnancy resulted from rape or incest or pregnancy certified by physician as life threatening",
            "value": "G7"
          },
          {
            "description": "Monitored anesthesia care (mac) for deep complex, complicated, or markedly invasive surgical procedure",
            "value": "G8"
          },
          {
            "description": "Monitored anesthesia care for patient who has history of severe cardio-pulmonary condition",
            "value": "G9"
          },
          {
            "description": "Waiver of liability statement issued as required by payer policy, individual case",
            "value": "GA"
          },
          {
            "description": "Claim being re-submitted for payment because it is no longer covered under a global payment demonstration",
            "value": "GB"
          },
          {
            "description": "This service has been performed in part by a resident under the direction of a teaching physician",
            "value": "GC"
          },
          {
            "description": "This service has been performed by a resident without the presence of a teaching physician under the primary care exception",
            "value": "GE"
          },
          {
            "description": "Non-physician (e.g. nurse practitioner (np), certified registered nurse anesthetist (crna), certified registered nurse (crn), clinical nurse specialist (cns), physician assistant (pa)) services in a critical access hospital",
            "value": "GF"
          },
          {
            "description": "Performance and payment of a screening mammogram and diagnostic mammogram on the same patient, same day",
            "value": "GG"
          },
          {
            "description": "Diagnostic mammogram converted from screening mammogram on same day",
            "value": "GH"
          },
          {
            "description": "opt out physician or practitioner emergency or urgent service",
            "value": "GJ"
          },
          {
            "description": "Reasonable and necessary item/service associated with a ga or gz modifier",
            "value": "GK"
          },
          {
            "description": "Medically unnecessary upgrade provided instead of non-upgraded item, no charge, no advance beneficiary notice (abn)",
            "value": "GL"
          },
          {
            "description": "Multiple patients on one ambulance trip",
            "value": "GM"
          },
          {
            "description": "Services delivered under an outpatient speech-language pathology plan of care",
            "value": "GN"
          },
          {
            "description": "Service delivered personally by an occupational therapist or under an outpatient occupational therapy plan of care",
            "value": "GO"
          },
          {
            "description": "Service delivered personally by a physical therapist or under an outpatient physical therapy plan of care",
            "value": "GP"
          },
          {
            "description": "Services provided via an asynchronous telecommunications system",
            "value": "GQ"
          },
          {
            "description": "This service was performed in whole or in part by a resident in a department of veterans affairs medical center or clinic, supervised in accordance with va policy",
            "value": "GR"
          },
          {
            "description": "Dosage of erythropoietin stimulating agent has been reduced and maintained in response to hematocrit or hemoglobin level",
            "value": "GS"
          },
          {
            "description": "Services took place via an interactive audio and video telecommunications system",
            "value": "GT"
          },
          {
            "description": "Waiver of liability statement issued as required by payer policy, routine notice",
            "value": "GU"
          },
          {
            "description": "Attending physician not employed or paid under arrangement by the patient's hospice provider",
            "value": "GV"
          },
          {
            "description": "Service not related to the hospice patient's terminal condition",
            "value": "GW"
          },
          {
            "description": "Notice of liability issued, voluntary under payer policy",
            "value": "GX"
          },
          {
            "description": "Not a covered benefit",
            "value": "GY"
          },
          {
            "description": "Item or service expected to be denied as not reasonable and necessary",
            "value": "GZ"
          },
          {
            "description": "Child/adolescent program",
            "value": "HA"
          },
          {
            "description": "Adult program, non geriatric",
            "value": "HB"
          },
          {
            "description": "Adult program, geriatric",
            "value": "HC"
          },
          {
            "description": "Pregnant/parenting women's program",
            "value": "HD"
          },
          {
            "description": "Mental health program",
            "value": "HE"
          },
          {
            "description": "Substance abuse program",
            "value": "HF"
          },
          {
            "description": "Opioid addiction treatment program",
            "value": "HG"
          },
          {
            "description": "Integrated mental health/substance abuse program",
            "value": "HH"
          },
          {
            "description": "Integrated mental health and intellectual disability/developmental disabilities program",
            "value": "HI"
          },
          {
            "description": "Employee assistance program",
            "value": "HJ"
          },
          {
            "description": "Specialized mental health programs for high-risk populations",
            "value": "HK"
          },
          {
            "description": "Intern",
            "value": "HL"
          },
          {
            "description": "The rendering provider has a highest educational attainment of less than a bachelor's degree",
            "value": "HM"
          },
          {
            "description": "The rendering provider has a highest educational attainment of a bachelor's degree",
            "value": "HN"
          },
          {
            "description": "The rendering provider has a highest educational attainment of a master's degree",
            "value": "HO"
          },
          {
            "description": "The rendering provider has a highest educational attainment of a doctoral degree",
            "value": "HP"
          },
          {
            "description": "Group setting",
            "value": "HQ"
          },
          {
            "description": "Family/couple with client present",
            "value": "HR"
          },
          {
            "description": "Family/couple without client present",
            "value": "HS"
          },
          {
            "description": "Multi-disciplinary team",
            "value": "HT"
          },
          {
            "description": "Funded by child welfare agency",
            "value": "HU"
          },
          {
            "description": "Funded by state addictions agency",
            "value": "HV"
          },
          {
            "description": "Funded by state mental health agency",
            "value": "HW"
          },
          {
            "description": "Funded by county/local agency",
            "value": "HX"
          },
          {
            "description": "Funded by juvenile justice agency",
            "value": "HY"
          },
          {
            "description": "Funded by criminal justice agency",
            "value": "HZ"
          },
          {
            "description": "Competitive acquisition program no-pay submission for a prescription number",
            "value": "J1"
          },
          {
            "description": "Competitive acquisition program, restocking of emergency drugs after emergency administration",
            "value": "J2"
          },
          {
            "description": "Competitive acquisition program (cap) reimbursed under average sales price methodology",
            "value": "J3"
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program that is furnished by a hospital upon discharge",
            "value": "J4"
          },
          {
            "description": "Off-the-shelf orthotic subject to DMEPOS competitive bidding program",
            "value": "J5"
          },
          {
            "description": "Administered intravenously",
            "value": "JA"
          },
          {
            "description": "Administered subcutaneously",
            "value": "JB"
          },
          {
            "description": "Skin substitute used as a graft",
            "value": "JC"
          },
          {
            "description": "Skin substitute not used as a graft",
            "value": "JD"
          },
          {
            "description": "Administered via dialysate",
            "value": "JE"
          },
          {
            "description": "Drug or biological acquired with 340b drug pricing program discount",
            "value": "JG"
          },
          {
            "description": "Drug amount discarded/not administered to any patient",
            "value": "JW"
          },
          {
            "description": "Zero drug amount discarded/not administered to any patient",
            "value": "JZ"
          },
          {
            "description": "Lower extremity prosthesis functional level 0",
            "value": "K0"
          },
          {
            "description": "Lower extremity prosthesis functional level 1",
            "value": "K1"
          },
          {
            "description": "Lower extremity prosthesis functional level 2",
            "value": "K2"
          },
          {
            "description": "Lower extremity prosthesis functional level 3",
            "value": "K3"
          },
          {
            "description": "Lower extremity prosthesis functional level 4",
            "value": "K4"
          },
          {
            "description": "Add on option/accessory for wheelchair",
            "value": "KA"
          },
          {
            "description": "Beneficiary requested upgrade for abn, more than 4 modifiers identified on claim",
            "value": "KB"
          },
          {
            "description": "Replacement of special power wheelchair interface",
            "value": "KC"
          },
          {
            "description": "Drug or biological infused through DME",
            "value": "KD"
          },
          {
            "description": "Bid under round one of the DMEPOS competitive bidding program",
            "value": "KE"
          },
          {
            "description": "Item designated by FDA as class III device",
            "value": "KF"
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program number 1",
            "value": "KG"
          },
          {
            "description": "DMEPOS item, initial claim, purchase or first month rental",
            "value": "KH"
          },
          {
            "description": "DMEPOS item, second or third month rental",
            "value": "KI"
          },
          {
            "description": "DMEPOS item, parenteral enteral nutrition (pen) pump or capped rental, months four to fifteen",
            "value": "KJ"
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program number 2",
            "value": "KK"
          },
          {
            "description": "DMEPOS item delivered via mail",
            "value": "KL"
          },
          {
            "description": "Replacement of facial prosthesis including new impression/moulage",
            "value": "KM"
          },
          {
            "description": "Replacement of facial prosthesis using previous master model",
            "value": "KN"
          },
          {
            "description": "Single drug unit dose formulation",
            "value": "KO"
          },
          {
            "description": "First drug of a multiple drug unit dose formulation",
            "value": "KP"
          },
          {
            "description": "Second or subsequent drug of a multiple drug unit dose formulation",
            "value": "KQ"
          },
          {
            "description": "Rental item, billing for partial month",
            "value": "KR"
          },
          {
            "description": "Glucose monitor supply for diabetic beneficiary not treated with insulin",
            "value": "KS"
          },
          {
            "description": "Beneficiary resides in a competitive bidding area and travels outside that competitive bidding area",
            "value": "KT"
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program number 3",
            "value": "KU"
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program that is furnished as part of a professional service",
            "value": "KV"
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program number 4",
            "value": "KW"
          },
          {
            "description": "Requirements specified in the medical policy have been met",
            "value": "KX"
          },
          {
            "description": "DMEPOS item subject to DMEPOS competitive bidding program number 5",
            "value": "KY"
          },
          {
            "description": "New coverage not implemented by managed care",
            "value": "KZ"
          },
          {
            "description": "Left circumflex coronary artery",
            "value": "LC"
          },
          {
            "description": "Left anterior descending coronary artery",
            "value": "LD"
          },
          {
            "description": "Lease/rental",
            "value": "LL"
          },
          {
            "description": "Left main coronary artery",
            "value": "LM"
          },
          {
            "description": "Laboratory round trip",
            "value": "LR"
          },
          {
            "description": "FDA-monitored intraocular lens implant",
            "value": "LS"
          },
          {
            "description": "Left side (used to identify procedures performed on the left side of the body)",
            "value": "LT"
          },
          {
            "description": "Fractionated payment of CAR-T therapy",
            "value": "LU"
          },
          {
            "description": "Medicare secondary payer",
            "value": "M2"
          },
          {
            "description": "Not required to consult clinical decision support... for patient with a suspected or confirmed emergency medical condition",
            "value": "MA"
          },
          {
            "description": "Not required to consult clinical decision support mechanism due to insufficient internet access",
            "value": "MB"
          },
          {
            "description": "Not required to consult clinical decision support mechanism due to electronic health record vendor issues",
            "value": "MC"
          },
          {
            "description": "Not required to consult clinical decision support mechanism due to extreme/uncontrollable circumstances",
            "value": "MD"
          },
          {
            "description": "Adheres to appropriate use criteria in the clinical decision support mechanism consulted by the ordering professional",
            "value": "ME"
          },
          {
            "description": "Does not adhere to the criteria in the clinical decision support mechanism consulted by the ordering professional",
            "value": "MF"
          },
          {
            "description": "Does not have appropriate use criteria in the clinical decision support mechanism consulted by the ordering professional",
            "value": "MG"
          },
          {
            "description": "Unknown if ordering professional consulted a clinical decision support mechanism for this service",
            "value": "MH"
          },
          {
            "description": "Six month maintenance and servicing fee for parts and labor, not covered under any manufacturer or supplier warranty",
            "value": "MS"
          },
          {
            "description": "Group 1 oxygen coverage criteria met",
            "value": "N1"
          },
          {
            "description": "Group 2 oxygen coverage criteria met",
            "value": "N2"
          },
          {
            "description": "Group 3 oxygen coverage criteria met",
            "value": "N3"
          },
          {
            "description": "Nebulizer system, any type, FDA-cleared for use with specific drug",
            "value": "NB"
          },
          {
            "description": "New when rented",
            "value": "NR"
          },
          {
            "description": "New durable medical equipment purchase",
            "value": "NU"
          },
          {
            "description": "A normal healthy patient",
            "value": "P1"
          },
          {
            "description": "A patient with a mild systemic disease",
            "value": "P2"
          },
          {
            "description": "A patient with severe systemic disease",
            "value": "P3"
          },
          {
            "description": "A patient with severe systemic disease that is a constant threat to life",
            "value": "P4"
          },
          {
            "description": "A moribund patient who is not expected to survive without the operation",
            "value": "P5"
          },
          {
            "description": "A declared brain-dead patient whose organs are being removed for donor purposes",
            "value": "P6"
          },
          {
            "description": "Surgical or other invasive procedure on wrong body part",
            "value": "PA"
          },
          {
            "description": "Surgical or other invasive procedure on wrong patient",
            "value": "PB"
          },
          {
            "description": "Wrong surgery or other invasive procedure on patient",
            "value": "PC"
          },
          {
            "description": "Diagnostic or related non diagnostic item or service provided in a wholly owned or operated entity to a patient who is admitted as an inpatient within 3 days",
            "value": "PD"
          },
          {
            "description": "Positron emission tomography (PET) or PET/computed tomography (CT)",
            "value": "PI"
          },
          {
            "description": "Progressive addition lenses",
            "value": "PL"
          },
          {
            "description": "Post-mortem",
            "value": "PM"
          },
          {
            "description": "Non-excepted service provided at an off-campus, outpatient, provider-based department of a hospital",
            "value": "PN"
          },
          {
            "description": "Excepted service provided at an off-campus, outpatient, provider-based department of a hospital",
            "value": "PO"
          },
          {
            "description": "Positron emission tomography (PET) or pet/computed tomography (CT) to inform the treatment strategy of cancerous tumors",
            "value": "PS"
          },
          {
            "description": "Colorectal cancer screening test; converted to diagnostic test or other procedure",
            "value": "PT"
          },
          {
            "description": "Investigational clinical service provided in a clinical research study that is in an approved clinical research study",
            "value": "Q0"
          },
          {
            "description": "Routine clinical service provided in a clinical research study that is in an approved clinical research study",
            "value": "Q1"
          },
          {
            "description": "Demonstration procedure/service",
            "value": "Q2"
          },
          {
            "description": "Live kidney donor surgery and related services",
            "value": "Q3"
          },
          {
            "description": "Service for ordering/referring physician qualifies as a service exemption",
            "value": "Q4"
          },
          {
            "description": "Service furnished under a reciprocal billing arrangement by a substitute physician; or by a substitute physical therapist furnishing outpatient physical therapy services in a health professional shortage area, a medically underserved area, or a rural area",
            "value": "Q5"
          },
          {
            "description": "Service furnished under a fee-for-time compensation arrangement by a substitute physician; or by a substitute physical therapist furnishing outpatient physical therapy services in a health professional shortage area, a medically underserved area, or a rural area",
            "value": "Q6"
          },
          {
            "description": "One Class A finding",
            "value": "Q7"
          },
          {
            "description": "Two Class A findings",
            "value": "Q8"
          },
          {
            "description": "One Class B and two Class C findings",
            "value": "Q9"
          },
          {
            "description": "Prescribed amounts of stationary oxygen for daytime use differ ... <1 liter per minute",
            "value": "QA"
          },
          {
            "description": "Prescribed amounts of stationary oxygen for daytime use differ ... >4 liters per minute",
            "value": "QB"
          },
          {
            "description": "Single channel monitoring",
            "value": "QC"
          },
          {
            "description": "Recording and storage in solid state memory by a digital recorder",
            "value": "QD"
          },
          {
            "description": "Prescribed amount of stationary oxygen while at rest is less than 1 liter per minute (lpm)",
            "value": "QE"
          },
          {
            "description": "Prescribed amount of stationary oxygen while at rest exceeds 4 liters per minute (lpm) and portable oxygen is prescribed",
            "value": "QF"
          },
          {
            "description": "Prescribed amount of stationary oxygen while at rest is greater than 4 liters per minute (lpm)",
            "value": "QG"
          },
          {
            "description": "Oxygen conserving device is being used with an oxygen delivery system",
            "value": "QH"
          },
          {
            "description": "Services/items provided to a prisoner or patient in state or local custody, however the state or local government, as applicable, meets the requirements in 42 cfr 411.4 (b)",
            "value": "QJ"
          },
          {
            "description": "Medical direction of two, three, or four concurrent anesthesia procedure involving qualified individuals",
            "value": "QK"
          },
          {
            "description": "Patient pronounced dead after ambulance called",
            "value": "QL"
          },
          {
            "description": "Ambulance service provided under arrangement by a provider of services",
            "value": "QM"
          },
          {
            "description": "Ambulance service furnished directly by a provider of services",
            "value": "QN"
          },
          {
            "description": "Laboratory test(s) was ordered individually or ordered as a cpt-recognized panel other than automated profile codes",
            "value": "QP"
          },
          {
            "description": "Ordering professional consulted a qualified clinical decision support mechanism for this service",
            "value": "QQ"
          },
          {
            "description": "Amounts of stationary oxygen for daytime use and nighttime use differ; average of the amounts >4 liters per minute",
            "value": "QR"
          },
          {
            "description": "Monitored anesthesia care service",
            "value": "QS"
          },
          {
            "description": "Recording and storage on tape by an analog tape recorder",
            "value": "QT"
          },
          {
            "description": "CLIA waived",
            "value": "QW"
          },
          {
            "description": "CRNA service: with medical direction by a physician\n",
            "value": "QX"
          },
          {
            "description": "Medical direction of one certified registered nurse anesthetist (CRNA) by an anesthesiologist",
            "value": "QY"
          },
          {
            "description": "CRNA service: without medical direction by a physician\n",
            "value": "QZ"
          },
          {
            "description": "Replacement of a DME, orthotic or prosthetic item",
            "value": "RA"
          },
          {
            "description": "Replacement of a part of a DME, orthotic or prosthetic item",
            "value": "RB"
          },
          {
            "description": "Right coronary artery",
            "value": "RC"
          },
          {
            "description": "Drug provided to beneficiary, but not administered 'incident-to'",
            "value": "RD"
          },
          {
            "description": "Furnished in full compliance with FDA-mandated risk evaluation and mitigation strategy (REMS)",
            "value": "RE"
          },
          {
            "description": "Ramus intermedius coronary artery",
            "value": "RI"
          },
          {
            "description": "Rental (Use this ‘RR' modifier when DME is to be rented)",
            "value": "RR"
          },
          {
            "description": "Right side (used to identify procedures performed on the right side of the body)",
            "value": "RT"
          },
          {
            "description": "Physician assistant, nurse practitioner, or clinical nurse specialist services for non-surgical services",
            "value": "SA"
          },
          {
            "description": "Nurse midwife",
            "value": "SB"
          },
          {
            "description": "Medically necessary service or supply",
            "value": "SC"
          },
          {
            "description": "Services provided by registered nurse with specialized, highly technical home infusion training",
            "value": "SD"
          },
          {
            "description": "State- and/or federally-funded programs/services",
            "value": "SE"
          },
          {
            "description": "Second opinion ordered by a professional review organization (PRO) per section 9401, p.l. 99-272",
            "value": "SF"
          },
          {
            "description": "Ambulatory surgical center (ASC) facility service",
            "value": "SG"
          },
          {
            "description": "Second concurrently administered infusion therapy",
            "value": "SH"
          },
          {
            "description": "Third or more concurrently administered infusion therapy",
            "value": "SJ"
          },
          {
            "description": "Addresses reimbursement guidelines for vaccines provided at no cost to the provider by a state or federal agency",
            "value": "SL"
          },
          {
            "description": "Second surgical opinion",
            "value": "SM"
          },
          {
            "description": "Third surgical opinion",
            "value": "SN"
          },
          {
            "description": "Item ordered by home health",
            "value": "SQ"
          },
          {
            "description": "Home infusion services provided in the infusion suite of the IV therapy provider",
            "value": "SS"
          },
          {
            "description": "Related to trauma or injury",
            "value": "ST"
          },
          {
            "description": "Procedure performed in physician's office (to denote use of facility and equipment)",
            "value": "SU"
          },
          {
            "description": "Pharamceuticals delivered to patient's home but not utilized",
            "value": "SV"
          },
          {
            "description": "Services provided by a certified diabetic educator",
            "value": "SW"
          },
          {
            "description": "Persons who are in close contact with member of high-risk population (use only with codes for immunization)",
            "value": "SY"
          },
          {
            "description": "Left foot, second digit",
            "value": "T1"
          },
          {
            "description": "Left foot, third digit",
            "value": "T2"
          },
          {
            "description": "Left foot, fourth digit",
            "value": "T3"
          },
          {
            "description": "Left foot, fifth digit",
            "value": "T4"
          },
          {
            "description": "Right foot, great toe",
            "value": "T5"
          },
          {
            "description": "Right foot, second digit",
            "value": "T6"
          },
          {
            "description": "Right foot, third digit",
            "value": "T7"
          },
          {
            "description": "Right foot, fourth digit",
            "value": "T8"
          },
          {
            "description": "Right foot, fifth digit",
            "value": "T9"
          },
          {
            "description": "Left foot, great toe",
            "value": "TA"
          },
          {
            "description": "Drug or biological acquired with 340b drug pricing program discount, reported for informational purposes",
            "value": "TB"
          },
          {
            "description": "Technical Component",
            "value": "TC"
          },
          {
            "description": "Registered nurse (RN)",
            "value": "TD"
          },
          {
            "description": "Licensed vocational nurse (LVN) or licensed practical nurse (LPN)",
            "value": "TE"
          },
          {
            "description": "Intermediate level of care",
            "value": "TF"
          },
          {
            "description": "Complex/high tech level of care",
            "value": "TG"
          },
          {
            "description": "Obstetrical treatment/services, prenatal or postpart",
            "value": "TH"
          },
          {
            "description": "Program group, child and/or adolescent",
            "value": "TJ"
          },
          {
            "description": "Extra patient or passenger, non-ambulance",
            "value": "TK"
          },
          {
            "description": "Early Intervention/Individualized Family Service Plan",
            "value": "TL"
          },
          {
            "description": "Individualized education program (IEP)",
            "value": "TM"
          },
          {
            "description": "Rural/outside providers' customary service area",
            "value": "TN"
          },
          {
            "description": "Medical transport, unloaded vehicle",
            "value": "TP"
          },
          {
            "description": "Basic life support transport by a volunteer ambulance provider",
            "value": "TQ"
          },
          {
            "description": "School-based individualized education program (IEP) services provided outside the public school district",
            "value": "TR"
          },
          {
            "description": "Follow-up service",
            "value": "TS"
          },
          {
            "description": "Individualized service provided to more than one patient in same setting",
            "value": "TT"
          },
          {
            "description": "Special payment rate, overtime",
            "value": "TU"
          },
          {
            "description": "Special payment rates, holidays/weekends",
            "value": "TV"
          },
          {
            "description": "Back-up equipment",
            "value": "TW"
          },
          {
            "description": "Medicaid level of care 1, as defined by each state",
            "value": "U1"
          },
          {
            "description": "Medicaid level of care 2, as defined by each state",
            "value": "U2"
          },
          {
            "description": "Medicaid level of care 3, as defined by each state",
            "value": "U3"
          },
          {
            "description": "Medicaid level of care 4, as defined by each state",
            "value": "U4"
          },
          {
            "description": "Medicaid level of care 5, as defined by each state",
            "value": "U5"
          },
          {
            "description": "Medicaid level of care 6, as defined by each state",
            "value": "U6"
          },
          {
            "description": "Medicaid level of care 7, as defined by each state",
            "value": "U7"
          },
          {
            "description": "Medicaid level of care 8, as defined by each state",
            "value": "U8"
          },
          {
            "description": "Medicaid level of care 9, as defined by each state",
            "value": "U9"
          },
          {
            "description": "Medicaid level of care 10, as defined by each state",
            "value": "UA"
          },
          {
            "description": "Medicaid level of care 11, as defined by each state",
            "value": "UB"
          },
          {
            "description": "Medicaid level of care 12, as defined by each state",
            "value": "UC"
          },
          {
            "description": "Medicaid level of care 13, as defined by each state",
            "value": "UD"
          },
          {
            "description": "Used durable medical equipment",
            "value": "UE"
          },
          {
            "description": "Services provided in the morning",
            "value": "UF"
          },
          {
            "description": "Services provided in the afternoon",
            "value": "UG"
          },
          {
            "description": "Services provided in the evening",
            "value": "UH"
          },
          {
            "description": "Services provided at night",
            "value": "UJ"
          },
          {
            "description": "Services provided on behalf of the client to someone other than the client (collateral relationship)",
            "value": "UK"
          },
          {
            "description": "Two patients served",
            "value": "UN"
          },
          {
            "description": "Three patients served",
            "value": "UP"
          },
          {
            "description": "Four patients served",
            "value": "UQ"
          },
          {
            "description": "Five patients served",
            "value": "UR"
          },
          {
            "description": "Six patients served",
            "value": "US"
          },
          {
            "description": "One patient visit in a month",
            "value": "V1"
          },
          {
            "description": "Two patient visits in a month",
            "value": "V2"
          },
          {
            "description": "Three patient visits in a month",
            "value": "V3"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:ServiceLineUnits": {
      "name": "ServiceLineUnits",
      "shape": {
        "values": [
          {
            "value": "MJ"
          },
          {
            "value": "UN"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:InsuranceTypeCode": {
      "description": "Code identifying the type of insurance policy within a specific insurance program (X12 008020 Element 1336)",
      "name": "InsuranceTypeCode",
      "shape": {
        "values": [
          {
            "description": "Short Term Insurance",
            "value": "01"
          },
          {
            "description": "Medicare Secondary Working Aged Beneficiary or Spouse with Employer Group Health Plan",
            "value": "12"
          },
          {
            "description": "Medicare Secondary End-Stage Renal Disease Beneficiary in the Mandated Coordination Period with an Employer's Group Health Plan",
            "value": "13"
          },
          {
            "description": "Medicare Secondary, No-fault Insurance including Auto is Primary",
            "value": "14"
          },
          {
            "description": "Medicare Secondary Worker's Compensation",
            "value": "15"
          },
          {
            "description": "Medicare Secondary Public Health Service (PHS) or Other Federal Agency",
            "value": "16"
          },
          {
            "description": "Dental",
            "value": "17"
          },
          {
            "description": "Vision",
            "value": "18"
          },
          {
            "description": "Prescription Drugs",
            "value": "19"
          },
          {
            "description": "Medicare Secondary Black Lung",
            "value": "41"
          },
          {
            "description": "Medicare Secondary Veteran's Administration",
            "value": "42"
          },
          {
            "description": "Medicare Secondary Disabled Beneficiary Under Age 65 with Large Group Health Plan (LGHP)",
            "value": "43"
          },
          {
            "description": "Medicare Secondary, Other Liability Insurance is Primary",
            "value": "47"
          },
          {
            "description": "Auto Insurance Policy",
            "value": "AP"
          },
          {
            "description": "Commercial",
            "value": "C1"
          },
          {
            "description": "Consolidated Omnibus Budget Reconciliation Act (COBRA)",
            "value": "CO"
          },
          {
            "description": "Medicare Conditionally Primary",
            "value": "CP"
          },
          {
            "description": "Disability - Provides periodic payments to replace income when an insured person is unable to work as a result of illness, injury or disease",
            "value": "D"
          },
          {
            "description": "Disability Benefits",
            "value": "DB"
          },
          {
            "description": "Medicare - Point of Service (POS)",
            "value": "E"
          },
          {
            "description": "Exclusive Provider Organization - Gives subscriber a choice of providers from an approved/contracted payer list; there are fixed dollar co-payments for most covered services in return for using plan providers",
            "value": "EP"
          },
          {
            "description": "Family or Friends",
            "value": "FF"
          },
          {
            "description": "Group Policy - Two or more people who are part of complete unit who enter into an insurance contract with an insurance company",
            "value": "GP"
          },
          {
            "description": "Health Insurance Exchange (HIX) Silver",
            "value": "HA"
          },
          {
            "description": "Health Insurance Exchange (HIX) Bronze",
            "value": "HB"
          },
          {
            "description": "High Deductible Health Plan",
            "value": "HD"
          },
          {
            "description": "Health Insurance Exchange (HIX) Gold",
            "value": "HG"
          },
          {
            "description": "Health Maintenance Organization (HMO)",
            "value": "HM"
          },
          {
            "description": "Health Maintenance Organization (HMO) - Medicare Risk",
            "value": "HN"
          },
          {
            "description": "Health Insurance Exchange (HIX) Platinum",
            "value": "HP"
          },
          {
            "description": "Special Low Income Medicare Beneficiary - An individual eligible for Medicare for whom Medicaid pays only Medicare premiums",
            "value": "HS"
          },
          {
            "description": "Indemnity - Gives a subscriber the choice to select any provider.  Payment is fixed percentage of the cost for covered care after satisfying an annual deductible",
            "value": "IN"
          },
          {
            "description": "Individual Policy",
            "value": "IP"
          },
          {
            "description": "Long Term Care - Coverage designed to help pay for some or all long term care costs, reducing the risk that a policy-holder would need to deplete all of his or her assets to pay for long term care",
            "value": "LC"
          },
          {
            "description": "Long Term Policy",
            "value": "LD"
          },
          {
            "description": "Life Insurance",
            "value": "LI"
          },
          {
            "description": "Litigation",
            "value": "LT"
          },
          {
            "description": "Medicare Advantage Point of Service (POS) Plan that excludes Part D coverage",
            "value": "M"
          },
          {
            "description": "Medicare Part A",
            "value": "MA"
          },
          {
            "description": "Medicare Part B",
            "value": "MB"
          },
          {
            "description": "Medicaid - Program of health care services made available to medically indigent and other needy persons, regardless of age, under terms of a 1965 amendment to the U.S. Social Security Act",
            "value": "MC"
          },
          {
            "description": "Medicare Part D",
            "value": "MD"
          },
          {
            "description": "Medicare Advantage Preferred Provider Organization (PPO) Plan that excludes Part D Coverage",
            "value": "ME"
          },
          {
            "description": "Medicare Advantage Private Fee for Service",
            "value": "MF"
          },
          {
            "description": "Medigap Part A - Health insurance policy intended to cover the non-covered portion of expenses eligible for Medicare Part A reimbursement which must be paid by a Medicare beneficiary for health care services and/or supplies received",
            "value": "MH"
          },
          {
            "description": "Medigap Part B - Health insurance policy intended to cover the non-covered portion of expenses eligible for Medicare Part B reimbursement which must be paid by a Medicare beneficiary for health care services and/or supplies received",
            "value": "MI"
          },
          {
            "description": "Medicare Advantage Health Maintenance Organization (HMO) Plan that includes Part D Coverage",
            "value": "MJ"
          },
          {
            "description": "Medicare Advantage Health Maintenance Organization (HMO) Risk Plan that includes Part D Coverage",
            "value": "MK"
          },
          {
            "description": "Medicare Advantage Indemnity Plan that includes Part D Coverage",
            "value": "ML"
          },
          {
            "description": "Medicare Advantage Preferred Provider Organization (PPO) Plan that includes Part D Coverage",
            "value": "MM"
          },
          {
            "description": "Medicare Advantage Indemnity Plan that excludes Part D coverage",
            "value": "MN"
          },
          {
            "description": "Medicare Advantage Point of Service (POS) Plan that includes Part D Coverage",
            "value": "MO"
          },
          {
            "description": "Medicare Primary - Medicare has the primary responsibility to pay for health care services and/or supplies received by a covered beneficiary (a person entitled to Medicare benefits)",
            "value": "MP"
          },
          {
            "description": "Medicare Advantage Health Maintenance Organization (HMO) Risk Plan that excludes Part D coverage",
            "value": "MR"
          },
          {
            "description": "Medicare Advantage Health Maintenance Organization (HMO) Plan that excludes Part D coverage",
            "value": "MT"
          },
          {
            "description": "Medicare Advantage",
            "value": "MV"
          },
          {
            "description": "Open Access Point of Service Plan",
            "value": "OA"
          },
          {
            "description": "Other",
            "value": "OT"
          },
          {
            "description": "Property Insurance - Personal",
            "value": "PE"
          },
          {
            "description": "Personal",
            "value": "PL"
          },
          {
            "description": "Personal Payment (Cash - No Insurance)",
            "value": "PP"
          },
          {
            "description": "Preferred Provider Organization (PPO)",
            "value": "PR"
          },
          {
            "description": "Point of Service (POS)",
            "value": "PS"
          },
          {
            "description": "Qualified Medicare Beneficiary - Coverage for a Medicare eligible individual for whom Medicaid pays only for Medicare premiums, co-insurance, and deductibles",
            "value": "QM"
          },
          {
            "description": "Property Insurance - Real",
            "value": "RP"
          },
          {
            "description": "Supplemental Policy - An insurance policy intended to cover non-covered charges of another insurance policy",
            "value": "SP"
          },
          {
            "description": "Tax Equity Fiscal Responsibility Act (TEFRA)",
            "value": "TF"
          },
          {
            "description": "Multiple Options Health Plan",
            "value": "U"
          },
          {
            "description": "Workers Compensation - Coverage provides medical treatment, rehabilitation, lost wages and related expenses arising from a job related injury or disease",
            "value": "WC"
          },
          {
            "description": "Wrap Up Policy - A Workers Compensation Policy written for a specific job site, which will include or cover more than one insured",
            "value": "WU"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:ClaimAdjustmentGroupCodes": {
      "name": "ClaimAdjustmentGroupCodes",
      "shape": {
        "values": [
          {
            "value": "CO"
          },
          {
            "value": "CR"
          },
          {
            "value": "DE"
          },
          {
            "value": "MA"
          },
          {
            "value": "OA"
          },
          {
            "value": "PI"
          },
          {
            "value": "PR"
          },
          {
            "value": "RR"
          },
          {
            "value": "NC"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:ClaimSubmissionPayerResponsibilityType": {
      "name": "ClaimSubmissionPayerResponsibilityType",
      "shape": {
        "values": [
          {
            "value": "primary"
          },
          {
            "value": "secondary"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:EmrPayerCrosswalk": {
      "name": "EmrPayerCrosswalk",
      "shape": {
        "values": [
          {
            "value": "HEALTHIE"
          },
          {
            "value": "CANVAS"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:ErrorMessage": {
      "name": "ErrorMessage",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_commons:EntityNotFoundErrorMessage": {
      "name": "EntityNotFoundErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:UnauthorizedErrorMessage": {
      "name": "UnauthorizedErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:EntityConflictErrorMessage": {
      "name": "EntityConflictErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "entity_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:UnprocessableEntityErrorMessage": {
      "name": "UnprocessableEntityErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:RequestValidationError": {
      "name": "RequestValidationError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "fieldName",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "humanReadableMessage",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:PhoneNumber": {
      "name": "PhoneNumber",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "number",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "type",
            "valueType": {
              "value": "type_commons:PhoneNumberType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_commons:PhoneNumberType": {
      "name": "PhoneNumberType",
      "shape": {
        "values": [
          {
            "value": "Home"
          },
          {
            "value": "Mobile"
          },
          {
            "value": "Work"
          }
        ],
        "type": "enum"
      }
    },
    "type_commons:Email": {
      "name": "Email",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_configurable-rules-types:FieldName": {
      "name": "FieldName",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_configurable-rules-types:VariableId": {
      "name": "VariableId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_configurable-rules-types:FieldType": {
      "name": "FieldType",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "primitive",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_configurable-rules-types:PrimitiveType",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "object",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:ObjectType"],
              "properties": []
            }
          },
          {
            "discriminantValue": "container",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:ContainerType"],
              "properties": []
            }
          },
          {
            "description": "For conveying that a type is unknown. Unknown types are considered compatible with all other types.\nFor internal use only within the framework, e.g. an unknown container type is compatible with any expected container type.\nNot for external use, e.g. the framework will never allow unknown literals to be provided by a client.\n",
            "discriminantValue": "unknown",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules-types:PrimitiveType": {
      "name": "PrimitiveType",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "native_primitive",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_configurable-rules-types:NativePrimitiveType",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "aliased_primitive",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:AliasedPrimitiveType"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules-types:NativePrimitiveType": {
      "name": "NativePrimitiveType",
      "shape": {
        "values": [
          {
            "value": "INTEGER"
          },
          {
            "value": "DOUBLE"
          },
          {
            "value": "STRING"
          },
          {
            "value": "BOOLEAN"
          },
          {
            "value": "DATETIME"
          },
          {
            "value": "DATE"
          },
          {
            "value": "DECIMAL"
          },
          {
            "value": "EMPTY"
          }
        ],
        "type": "enum"
      }
    },
    "type_configurable-rules-types:AliasedPrimitiveType": {
      "name": "AliasedPrimitiveType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "native_primitive",
            "valueType": {
              "value": "type_configurable-rules-types:NativePrimitiveType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:ObjectType": {
      "name": "ObjectType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "fields",
            "valueType": {
              "itemType": {
                "value": "type_configurable-rules-types:Field",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:ContainerType": {
      "name": "ContainerType",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "container",
            "valueType": {
              "value": "type_configurable-rules-types:ContainerWrapperType",
              "type": "id"
            }
          },
          {
            "key": "contained_type",
            "valueType": {
              "value": "type_configurable-rules-types:FieldType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:ContainerWrapperType": {
      "name": "ContainerWrapperType",
      "shape": {
        "values": [
          {
            "value": "LIST"
          },
          {
            "value": "OPTIONAL"
          }
        ],
        "type": "enum"
      }
    },
    "type_configurable-rules-types:Field": {
      "name": "Field",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": "type_configurable-rules-types:FieldName",
              "type": "id"
            }
          },
          {
            "key": "display_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "field_type",
            "valueType": {
              "value": "type_configurable-rules-types:FieldType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:Comparator": {
      "name": "Comparator",
      "shape": {
        "values": [
          {
            "value": "IS_EQUAL_TO"
          },
          {
            "value": "IS_NOT_EQUAL_TO"
          },
          {
            "value": "IS_GREATER_THAN"
          },
          {
            "value": "IS_GREATER_THAN_OR_EQUAL_TO"
          },
          {
            "value": "IS_LESS_THAN"
          },
          {
            "value": "IS_LESS_THAN_OR_EQUAL_TO"
          },
          {
            "value": "IS_IN"
          },
          {
            "value": "IS_NOT_IN"
          },
          {
            "value": "CONTAINS"
          },
          {
            "value": "CONTAINS_IGNORING_CASE"
          },
          {
            "value": "DOES_NOT_CONTAIN"
          },
          {
            "value": "DOES_NOT_CONTAIN_IGNORING_CASE"
          },
          {
            "value": "STARTS_WITH"
          },
          {
            "value": "STARTS_WITH_IGNORING_CASE"
          },
          {
            "value": "UNSET"
          }
        ],
        "type": "enum"
      }
    },
    "type_configurable-rules-types:ComparatorWithMetadata": {
      "name": "ComparatorWithMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "comparator",
            "valueType": {
              "value": "type_configurable-rules-types:Comparator",
              "type": "id"
            }
          },
          {
            "key": "display_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:ValidComparison": {
      "name": "ValidComparison",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "lhs",
            "valueType": {
              "value": "type_configurable-rules-types:FieldType",
              "type": "id"
            }
          },
          {
            "key": "comparator",
            "valueType": {
              "value": "type_configurable-rules-types:ComparatorWithMetadata",
              "type": "id"
            }
          },
          {
            "key": "rhs",
            "valueType": {
              "value": "type_configurable-rules-types:FieldType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:FieldValue": {
      "name": "FieldValue",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "primitive_value",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_configurable-rules-types:PrimitiveValue",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "object_value",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:ObjectValue"],
              "properties": []
            }
          },
          {
            "discriminantValue": "container_value",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_configurable-rules-types:ContainerValue",
                    "type": "id"
                  }
                }
              ]
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules-types:PrimitiveValue": {
      "name": "PrimitiveValue",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "integer",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": {
                      "type": "integer"
                    },
                    "type": "primitive"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "double",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": {
                      "type": "double"
                    },
                    "type": "primitive"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "string",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": {
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "boolean",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": {
                      "type": "boolean"
                    },
                    "type": "primitive"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "datetime",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": {
                      "type": "datetime"
                    },
                    "type": "primitive"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "date",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_commons:Date",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "decimal",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_commons:Decimal",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "empty",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules-types:ObjectValue": {
      "name": "ObjectValue",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "members",
            "valueType": {
              "itemType": {
                "value": "type_configurable-rules-types:ObjectFieldValue",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:ObjectFieldValue": {
      "name": "ObjectFieldValue",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": "type_configurable-rules-types:FieldName",
              "type": "id"
            }
          },
          {
            "key": "value",
            "valueType": {
              "value": "type_configurable-rules-types:FieldValue",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:ContainerValue": {
      "name": "ContainerValue",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "list",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "itemType": {
                      "value": "type_configurable-rules-types:FieldValue",
                      "type": "id"
                    },
                    "type": "list"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "optional",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "itemType": {
                      "value": "type_configurable-rules-types:FieldValue",
                      "type": "id"
                    },
                    "type": "optional"
                  }
                }
              ]
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules-types:Statement": {
      "name": "Statement",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "condition",
            "valueType": {
              "value": "type_configurable-rules-types:Condition",
              "type": "id"
            }
          },
          {
            "key": "action",
            "valueType": {
              "value": "type_configurable-rules-types:Action",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:Condition": {
      "name": "Condition",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "and",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:AndCondition"],
              "properties": []
            }
          },
          {
            "discriminantValue": "or",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:OrCondition"],
              "properties": []
            }
          },
          {
            "discriminantValue": "evaluate_comparator",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:EvaluateComparatorCondition"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules-types:AndCondition": {
      "name": "AndCondition",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "conditions",
            "valueType": {
              "itemType": {
                "value": "type_configurable-rules-types:Condition",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:OrCondition": {
      "name": "OrCondition",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "conditions",
            "valueType": {
              "itemType": {
                "value": "type_configurable-rules-types:Condition",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:EvaluateComparatorCondition": {
      "name": "EvaluateComparatorCondition",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "lhs",
            "valueType": {
              "value": "type_configurable-rules-types:Comparable",
              "type": "id"
            }
          },
          {
            "key": "comparator",
            "valueType": {
              "value": "type_configurable-rules-types:Comparator",
              "type": "id"
            }
          },
          {
            "key": "rhs",
            "valueType": {
              "value": "type_configurable-rules-types:Comparable",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:Comparable": {
      "name": "Comparable",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "field",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:FieldReference"],
              "properties": []
            }
          },
          {
            "discriminantValue": "literal",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_configurable-rules-types:FieldValue",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "variable",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:VariableReference"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules-types:FieldReference": {
      "description": "The path to extract the field from the inputs.",
      "name": "FieldReference",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "path",
            "valueType": {
              "value": "type_configurable-rules-types:Path",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:VariableReference": {
      "name": "VariableReference",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "variable_id",
            "valueType": {
              "value": "type_configurable-rules-types:VariableId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:Path": {
      "description": "An ordered list of path elements to locate a (nested) Field. Elements are evaluated in order.",
      "name": "Path",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "elements",
            "valueType": {
              "itemType": {
                "value": "type_configurable-rules-types:PathElement",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:PathElement": {
      "description": "Extract the underlying type of an ObjectType or ContainerType Field.",
      "name": "PathElement",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "description": "Extract an object field by name.\nE.g. providing FieldName(\"bar\") here on object foo with string field foo.bar will extract a string field (bar).\n",
            "discriminantValue": "object_element",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_configurable-rules-types:FieldName",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "description": "Extract the underlying type from a list.",
            "discriminantValue": "list_element",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_configurable-rules-types:ListElement",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "description": "Extract the underlying type from an optional.",
            "discriminantValue": "optional_element",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_configurable-rules-types:OptionalElement",
                    "type": "id"
                  }
                }
              ]
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules-types:ListElement": {
      "description": "Extract the underlying type from a list.\nE.g., using any of these on a list<optional<object>> will evaluate the remainder of the Statement on the underlying optional<object>.\nThe exception to this is the count element, which returns an integer primitive type.\n",
      "name": "ListElement",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "description": "Evaluate that the Statement is true for any item.\nShort-circuit if any item evaluates to false.\n",
            "discriminantValue": "all_items",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "description": "Evaluate that the Statement is true for any item.\nShort-circuit if any item evaluates to true.\n",
            "discriminantValue": "any_items",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "description": "Evaluate the Statement for the first item.\nEvaluates to false if there are no items in the list.\n",
            "discriminantValue": "first_item",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "description": "Evaluate the Statement for the last item.\nEvaluates to false if there are no items in the list.\n",
            "discriminantValue": "last_item",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "description": "Evaluate the Statement for the nth item (1-indexed).\nRaises a runtime error if the index is out of the bounds of the list.\n",
            "discriminantValue": "nth_item",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": {
                      "type": "integer"
                    },
                    "type": "primitive"
                  }
                }
              ]
            }
          },
          {
            "description": "Evaluate the Statement against the number of items in the List (an integer).",
            "discriminantValue": "count",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules-types:OptionalElement": {
      "description": "Extract the underlying type from an optional.\nE.g., using any of these on an optional<list<string>> will evaluate the remainder of the Statement on the underlying list<string>.\n",
      "name": "OptionalElement",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "description": "Continue to evaluate the Statement on the contained item if present, else evaluate to False (or abort an Action).",
            "discriminantValue": "if_present",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "description": "Evaluate the Statement on the contained item if present, else fail the Statement.",
            "discriminantValue": "or_else_fail",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules-types:Action": {
      "name": "Action",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "hold_claim",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:HoldClaimAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "hold_ready_to_submit_claim",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:HoldReadyToSubmitClaimAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "create_task",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_configurable-rules-types:CreateTaskAction",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "create_task_v2",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:CreateTaskV2Action"],
              "properties": []
            }
          },
          {
            "discriminantValue": "then_validate_or_else",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:ThenValidateOrElseAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "route_to_work_queue",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:RouteToWorkQueueAction"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules-types:HoldClaimAction": {
      "description": "Hold the claim.",
      "name": "HoldClaimAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_configurable-rules-types:HoldReadyToSubmitClaimAction": {
      "description": "Hold the claim, but also indicate that it is ready for submission.",
      "name": "HoldReadyToSubmitClaimAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_configurable-rules-types:HoldClaimAvailableAction": {
      "name": "HoldClaimAvailableAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_configurable-rules-types:HoldReadyToSubmitClaimAvailableAction": {
      "name": "HoldReadyToSubmitClaimAvailableAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_configurable-rules-types:HoldClaimExecutedAction": {
      "name": "HoldClaimExecutedAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "claim_id",
            "valueType": {
              "value": "type_commons:ClaimId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:HoldReadyToSubmitClaimExecutedAction": {
      "name": "HoldReadyToSubmitClaimExecutedAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "claim_id",
            "valueType": {
              "value": "type_commons:ClaimId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:CreateTaskAction": {
      "name": "CreateTaskAction",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "customer_data_request_task",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:CustomerDataRequestTaskAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "other_task",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:OtherTaskAction"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules-types:CreateTaskV2Action": {
      "name": "CreateTaskV2Action",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "category",
            "valueType": {
              "itemType": {
                "value": "type_tasks/commons:TaskCategory",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "task_type",
            "valueType": {
              "value": "type_tasks/commons:TaskType",
              "type": "id"
            }
          },
          {
            "key": "assignee",
            "valueType": {
              "itemType": {
                "value": "type_commons:UserId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "work_queue_id",
            "valueType": {
              "value": "type_commons:WorkQueueId",
              "type": "id"
            }
          },
          {
            "key": "context",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "action_required",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:CustomerDataRequestTaskAction": {
      "name": "CustomerDataRequestTaskAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "category",
            "valueType": {
              "value": "type_tasks/commons:TaskCategory",
              "type": "id"
            }
          },
          {
            "key": "context",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "action_required",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:OtherTaskAction": {
      "name": "OtherTaskAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "task_type",
            "valueType": {
              "value": "type_configurable-rules-types:OtherTaskType",
              "type": "id"
            }
          },
          {
            "key": "assignee",
            "valueType": {
              "value": "type_commons:Auth0Id",
              "type": "id"
            }
          },
          {
            "key": "context",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "action_required",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:OtherTaskType": {
      "name": "OtherTaskType",
      "shape": {
        "values": [
          {
            "value": "CLAIM_SUBMISSION_RUN_VALIDATIONS_FAILURE"
          },
          {
            "value": "CLAIM_SUBMISSION_SUBMIT_CLAIM_FAILURE"
          },
          {
            "value": "CLAIM_SUBMISSION_TRANSFORM_FAILURE"
          },
          {
            "value": "CODE_CLAIM"
          },
          {
            "value": "CODE_CLAIM_REVIEW"
          },
          {
            "value": "ELIGIBILITY"
          },
          {
            "value": "CLAIM_FOLLOW_UP"
          },
          {
            "value": "REJECTION_RESOLUTION"
          },
          {
            "value": "PAYER_CONFIGURATION_ERROR"
          },
          {
            "value": "DENIAL_RESOLUTION"
          }
        ],
        "type": "enum"
      }
    },
    "type_configurable-rules-types:CreateTaskAvailableAction": {
      "name": "CreateTaskAvailableAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_configurable-rules-types:CreateTaskV2AvailableAction": {
      "name": "CreateTaskV2AvailableAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "available_work_queue_ids",
            "valueType": {
              "itemType": {
                "value": "type_commons:WorkQueueId",
                "type": "id"
              },
              "type": "set"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:CreateTaskExecutedAction": {
      "name": "CreateTaskExecutedAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "claim_id",
            "valueType": {
              "value": "type_commons:ClaimId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:CreateTaskV2ExecutedAction": {
      "name": "CreateTaskV2ExecutedAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "claim_id",
            "valueType": {
              "value": "type_commons:ClaimId",
              "type": "id"
            }
          },
          {
            "key": "work_queue_id",
            "valueType": {
              "value": "type_commons:WorkQueueId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:ThenValidateOrElseAction": {
      "description": "Evaluate the provided Condition. If the result is false, then apply the Action.",
      "name": "ThenValidateOrElseAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "then_validate",
            "valueType": {
              "value": "type_configurable-rules-types:Condition",
              "type": "id"
            }
          },
          {
            "key": "or_else",
            "valueType": {
              "value": "type_configurable-rules-types:Action",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:ThenValidateOrElseAvailableAction": {
      "name": "ThenValidateOrElseAvailableAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_configurable-rules-types:ThenValidateOrElseExecutedAction": {
      "name": "ThenValidateOrElseExecutedAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "or_else_executed_action",
            "valueType": {
              "itemType": {
                "value": "type_configurable-rules-types:ExecutedAction",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:RouteToWorkQueueAction": {
      "name": "RouteToWorkQueueAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "work_queue_id",
            "valueType": {
              "value": "type_commons:WorkQueueId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:RouteToWorkQueueAvailableAction": {
      "name": "RouteToWorkQueueAvailableAction",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_configurable-rules-types:RouteToWorkQueueExecutedAction": {
      "name": "RouteToWorkQueueExecutedAction",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "work_queue_id",
            "valueType": {
              "value": "type_commons:WorkQueueId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:AvailableActionWithMetadata": {
      "name": "AvailableActionWithMetadata",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "display_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "action",
            "valueType": {
              "value": "type_configurable-rules-types:AvailableAction",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-types:AvailableAction": {
      "name": "AvailableAction",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "hold_claim_available_action",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:HoldClaimAvailableAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "hold_ready_to_submit_claim_available_action",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:HoldReadyToSubmitClaimAvailableAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "create_task_available_action",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:CreateTaskAvailableAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "create_task_v2_available_action",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:CreateTaskV2AvailableAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "then_validate_or_else_available_action",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:ThenValidateOrElseAvailableAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "route_to_work_queue_available_action",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:RouteToWorkQueueAvailableAction"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules-types:ExecutedAction": {
      "name": "ExecutedAction",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "hold_claim_executed_action",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:HoldClaimExecutedAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "hold_ready_to_submit_claim_executed_action",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:HoldReadyToSubmitClaimExecutedAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "create_task_executed_action",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:CreateTaskExecutedAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "create_task_v2_executed_action",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:CreateTaskV2ExecutedAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "then_validate_or_else_executed_action",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:ThenValidateOrElseExecutedAction"],
              "properties": []
            }
          },
          {
            "discriminantValue": "route_to_work_queue_executed_action",
            "additionalProperties": {
              "extends": ["type_configurable-rules-types:RouteToWorkQueueExecutedAction"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules-variables:Variable": {
      "name": "Variable",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "variable_id",
            "valueType": {
              "value": "type_configurable-rules-types:VariableId",
              "type": "id"
            }
          },
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "type",
            "valueType": {
              "value": "type_configurable-rules-types:FieldType",
              "type": "id"
            }
          },
          {
            "key": "value",
            "valueType": {
              "value": "type_configurable-rules-types:FieldValue",
              "type": "id"
            }
          },
          {
            "key": "rules_used_in",
            "valueType": {
              "itemType": {
                "value": "type_pipeline-commons:ConfigurableRuleId",
                "type": "id"
              },
              "type": "set"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-variables:VariablesPage": {
      "name": "VariablesPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_configurable-rules-variables:Variable",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-variables:VariableSummary": {
      "description": "A Variable payload small enough to fetch all at once. In practice, Variable sans value.",
      "name": "VariableSummary",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "variable_id",
            "valueType": {
              "value": "type_configurable-rules-types:VariableId",
              "type": "id"
            }
          },
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "type",
            "valueType": {
              "value": "type_configurable-rules-types:FieldType",
              "type": "id"
            }
          },
          {
            "key": "rules_used_in",
            "valueType": {
              "itemType": {
                "value": "type_pipeline-commons:ConfigurableRuleId",
                "type": "id"
              },
              "type": "set"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-variables:TypeDoesNotMatchValueError": {
      "name": "TypeDoesNotMatchValueError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "provided_type",
            "valueType": {
              "value": "type_configurable-rules-types:FieldType",
              "type": "id"
            }
          },
          {
            "key": "provided_value",
            "valueType": {
              "value": "type_configurable-rules-types:FieldValue",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-variables:VariableInUseError": {
      "name": "VariableInUseError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "variable_id",
            "valueType": {
              "value": "type_configurable-rules-types:VariableId",
              "type": "id"
            }
          },
          {
            "key": "rules_used_in",
            "valueType": {
              "itemType": {
                "value": "type_pipeline-commons:ConfigurableRuleId",
                "type": "id"
              },
              "type": "set"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-variables:VariableNotFoundError": {
      "name": "VariableNotFoundError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "variable_id",
            "valueType": {
              "value": "type_configurable-rules-types:VariableId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-variables:VariableTypeChangeNotAllowedError": {
      "description": "Variable types cannot change if they are actively used in rules.",
      "name": "VariableTypeChangeNotAllowedError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "existing_type",
            "valueType": {
              "value": "type_configurable-rules-types:FieldType",
              "type": "id"
            }
          },
          {
            "key": "new_type",
            "valueType": {
              "value": "type_configurable-rules-types:FieldType",
              "type": "id"
            }
          },
          {
            "key": "rules_used_in",
            "valueType": {
              "itemType": {
                "value": "type_pipeline-commons:ConfigurableRuleId",
                "type": "id"
              },
              "type": "set"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules-variables:VariableWithNameAlreadyExistsError": {
      "name": "VariableWithNameAlreadyExistsError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:ConfigurableRule": {
      "name": "ConfigurableRule",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "rule_id",
            "valueType": {
              "value": "type_pipeline-commons:ConfigurableRuleId",
              "type": "id"
            }
          },
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "scope",
            "valueType": {
              "value": "type_configurable-rules:Scope",
              "type": "id"
            }
          },
          {
            "key": "statement",
            "valueType": {
              "value": "type_configurable-rules-types:Statement",
              "type": "id"
            }
          },
          {
            "description": "Whether the configurable rule is turned on to run.",
            "key": "is_enabled",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:ConfigForScopeResponse": {
      "name": "ConfigForScopeResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "value": "type_configurable-rules-types:Field",
              "type": "id"
            }
          },
          {
            "key": "available_actions",
            "valueType": {
              "itemType": {
                "value": "type_configurable-rules-types:AvailableActionWithMetadata",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:Scope": {
      "name": "Scope",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "step_locator",
            "additionalProperties": {
              "extends": ["type_configurable-rules:StepLocator"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules:StepLocator": {
      "name": "StepLocator",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "pipeline_id",
            "valueType": {
              "value": "type_pipeline-commons:PipelineId",
              "type": "id"
            }
          },
          {
            "key": "phase_id",
            "valueType": {
              "value": "type_pipeline-commons:PhaseId",
              "type": "id"
            }
          },
          {
            "key": "step_id",
            "valueType": {
              "value": "type_pipeline-commons:StepId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:LegalComparisonsResponse": {
      "name": "LegalComparisonsResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "supported_comparisons",
            "valueType": {
              "itemType": {
                "value": "type_configurable-rules-types:ValidComparison",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:ValidateRuleResponse": {
      "name": "ValidateRuleResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "result",
            "valueType": {
              "value": "type_configurable-rules:RuleValidationResult",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:RuleRunResult": {
      "name": "RuleRunResult",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "action_performed",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_configurable-rules-types:ExecutedAction",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "no_action_performed",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "unexpected_error",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules:RuleValidationResult": {
      "name": "RuleValidationResult",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "scope_does_not_support_configurable_rules_error",
            "additionalProperties": {
              "extends": ["type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "unknown_scope_error",
            "additionalProperties": {
              "extends": ["type_configurable-rules:UnknownScopeError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "validation_failure",
            "additionalProperties": {
              "extends": ["type_configurable-rules:RuleValidationFailure"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules:RuleValidationFailure": {
      "name": "RuleValidationFailure",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "errors",
            "valueType": {
              "itemType": {
                "value": "type_configurable-rules:RuleValidationError",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:RuleValidationError": {
      "name": "RuleValidationError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "invalid_statement",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_configurable-rules:InvalidStatementError",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "rule_with_name_already_exists",
            "additionalProperties": {
              "extends": ["type_configurable-rules:RuleWithNameAlreadyExistsError"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules:InvalidStatementError": {
      "name": "InvalidStatementError",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "action_not_available_error",
            "additionalProperties": {
              "extends": ["type_configurable-rules:ActionNotAvailableError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "covariant_list_literal_error",
            "additionalProperties": {
              "extends": ["type_configurable-rules:CovariantListLiteralError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "duplicate_object_field_names",
            "additionalProperties": {
              "extends": ["type_configurable-rules:DuplicateObjectFieldNamesError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "empty_list_literal_error",
            "additionalProperties": {
              "extends": ["type_configurable-rules:EmptyListLiteralError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "incorrect_type_for_path_element_error",
            "additionalProperties": {
              "extends": ["type_configurable-rules:IncorrectTypeForPathElementError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "mismatched_types_for_comparator_error",
            "additionalProperties": {
              "extends": ["type_configurable-rules:MismatchedTypesForComparatorError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "missing_object_field_error",
            "additionalProperties": {
              "extends": ["type_configurable-rules:MissingObjectFieldError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "variable_not_found_error",
            "additionalProperties": {
              "extends": ["type_configurable-rules-variables:VariableNotFoundError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "illegal_index_for_nth_item_error",
            "additionalProperties": {
              "extends": ["type_configurable-rules:IllegalIndexForNthItemError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "work_queue_not_found_error",
            "additionalProperties": {
              "extends": ["type_configurable-rules:WorkQueueNotFoundError"],
              "properties": []
            }
          },
          {
            "discriminantValue": "work_queue_not_in_scope_error",
            "additionalProperties": {
              "extends": ["type_configurable-rules:WorkQueueNotInScopeError"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_configurable-rules:ActionNotAvailableError": {
      "name": "ActionNotAvailableError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "provided_action",
            "valueType": {
              "value": "type_configurable-rules-types:Action",
              "type": "id"
            }
          },
          {
            "key": "available_actions",
            "valueType": {
              "itemType": {
                "value": "type_configurable-rules-types:AvailableActionWithMetadata",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:CovariantListLiteralError": {
      "name": "CovariantListLiteralError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "provided_list",
            "valueType": {
              "itemType": {
                "value": "type_configurable-rules-types:FieldValue",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "contained_types",
            "valueType": {
              "itemType": {
                "value": "type_configurable-rules-types:FieldType",
                "type": "id"
              },
              "type": "set"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:DuplicateObjectFieldNamesError": {
      "name": "DuplicateObjectFieldNamesError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "conflicting_fields",
            "valueType": {
              "itemType": {
                "value": "type_configurable-rules-types:ObjectFieldValue",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:EmptyListLiteralError": {
      "name": "EmptyListLiteralError",
      "shape": {
        "extends": [],
        "properties": [],
        "type": "object"
      }
    },
    "type_configurable-rules:IncorrectTypeForPathElementError": {
      "name": "IncorrectTypeForPathElementError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "error_location",
            "valueType": {
              "value": "type_configurable-rules-types:Path",
              "type": "id"
            }
          },
          {
            "key": "field_type_at_error_location",
            "valueType": {
              "value": "type_configurable-rules-types:FieldType",
              "type": "id"
            }
          },
          {
            "key": "requested_path_element",
            "valueType": {
              "value": "type_configurable-rules-types:PathElement",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:MismatchedTypesForComparatorError": {
      "name": "MismatchedTypesForComparatorError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "provided_lhs",
            "valueType": {
              "value": "type_configurable-rules-types:Comparable",
              "type": "id"
            }
          },
          {
            "key": "resolved_lhs_type",
            "valueType": {
              "value": "type_configurable-rules-types:FieldType",
              "type": "id"
            }
          },
          {
            "key": "comparator",
            "valueType": {
              "value": "type_configurable-rules-types:Comparator",
              "type": "id"
            }
          },
          {
            "key": "provided_rhs",
            "valueType": {
              "value": "type_configurable-rules-types:Comparable",
              "type": "id"
            }
          },
          {
            "key": "resolved_rhs_type",
            "valueType": {
              "value": "type_configurable-rules-types:FieldType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:MissingObjectFieldError": {
      "name": "MissingObjectFieldError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "error_location",
            "valueType": {
              "value": "type_configurable-rules-types:Path",
              "type": "id"
            }
          },
          {
            "key": "requested_field_name",
            "valueType": {
              "value": "type_configurable-rules-types:FieldName",
              "type": "id"
            }
          },
          {
            "key": "available_field_names",
            "valueType": {
              "itemType": {
                "value": "type_configurable-rules-types:FieldName",
                "type": "id"
              },
              "type": "set"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:IllegalIndexForNthItemError": {
      "name": "IllegalIndexForNthItemError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "error_location",
            "valueType": {
              "value": "type_configurable-rules-types:Path",
              "type": "id"
            }
          },
          {
            "key": "index",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:WorkQueueNotFoundError": {
      "name": "WorkQueueNotFoundError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "work_queue_id",
            "valueType": {
              "value": "type_commons:WorkQueueId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:WorkQueueNotInScopeError": {
      "name": "WorkQueueNotInScopeError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "work_queue_id",
            "valueType": {
              "value": "type_commons:WorkQueueId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:RuleWithNameAlreadyExistsError": {
      "name": "RuleWithNameAlreadyExistsError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:RuleNotFoundError": {
      "name": "RuleNotFoundError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "rule_id",
            "valueType": {
              "value": "type_pipeline-commons:ConfigurableRuleId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:ConfigForScopeComputationError": {
      "name": "ConfigForScopeComputationError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "scope",
            "valueType": {
              "value": "type_configurable-rules:Scope",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError": {
      "name": "ScopeDoesNotSupportConfigurableRulesError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "scope",
            "valueType": {
              "value": "type_configurable-rules:Scope",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:ScopeNotEnabledForOrgError": {
      "name": "ScopeNotEnabledForOrgError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "organization_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          },
          {
            "key": "scope",
            "valueType": {
              "value": "type_configurable-rules:Scope",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_configurable-rules:UnknownScopeError": {
      "name": "UnknownScopeError",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "scope",
            "valueType": {
              "value": "type_configurable-rules:Scope",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_contracts:ContractId": {
      "name": "ContractId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_contracts:ContractingProviderId": {
      "name": "ContractingProviderId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_contracts:RenderingProviderid": {
      "name": "RenderingProviderid",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_contracts:ContractBase": {
      "name": "ContractBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The starting day upon which the contract is effective",
            "key": "effective_date",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          },
          {
            "description": "An optional end day upon which the contract expires",
            "key": "expiration_date",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "The state(s) to which the contract's coverage extends.\nIt may also be set to \"national\" for the entirety of the US.\n",
            "key": "regions",
            "valueType": {
              "value": "type_commons:Regions",
              "type": "id"
            }
          },
          {
            "key": "contract_status",
            "valueType": {
              "itemType": {
                "value": "type_contracts:ContractStatus",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "authorized_signatory",
            "valueType": {
              "itemType": {
                "value": "type_contracts:AuthorizedSignatory",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_contracts:Contract": {
      "name": "Contract",
      "shape": {
        "extends": ["type_contracts:ContractBase"],
        "properties": [
          {
            "key": "contract_id",
            "valueType": {
              "value": "type_contracts:ContractId",
              "type": "id"
            }
          },
          {
            "description": "The provider under contract",
            "key": "contracting_provider",
            "valueType": {
              "value": "type_organization-providers/v2:OrganizationProvider",
              "type": "id"
            }
          },
          {
            "description": "The providers who can render medical services under the contract",
            "key": "rendering_providers",
            "valueType": {
              "keyType": {
                "value": {
                  "type": "uuid"
                },
                "type": "primitive"
              },
              "valueType": {
                "value": "type_organization-providers/v2:OrganizationProvider",
                "type": "id"
              },
              "type": "map"
            }
          },
          {
            "description": "The insurance company under contract",
            "key": "payer",
            "valueType": {
              "itemType": {
                "value": "type_payers:Payer",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_contracts:ContractStatus": {
      "name": "ContractStatus",
      "shape": {
        "values": [
          {
            "description": "Contract is still in the works and has not been signed and counter-signed yet\n",
            "value": "pending"
          },
          {
            "description": "Contract is active and in effect (claims will need to\nbe submitted under effective contracts)\n",
            "value": "effective"
          },
          {
            "description": "Contract is no longer effective but kept around for historical documentation\n",
            "value": "cancelled"
          }
        ],
        "type": "enum"
      }
    },
    "type_contracts:AuthorizedSignatory": {
      "name": "AuthorizedSignatory",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "first_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "last_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "title",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "email",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "phone",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "fax",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_credentialing:ProviderCredentialingSpanId": {
      "name": "ProviderCredentialingSpanId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_credentialing:EncounterCredentialingStatusResult": {
      "name": "EncounterCredentialingStatusResult",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "credentialed",
            "additionalProperties": {
              "extends": ["type_credentialing:CredentialedEncounterStatusResult"],
              "properties": []
            }
          },
          {
            "discriminantValue": "not_credentialed",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_credentialing:CredentialedEncounterStatusResult": {
      "name": "CredentialedEncounterStatusResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "credentialing_spans",
            "valueType": {
              "itemType": {
                "value": "type_credentialing:ProviderCredentialingSpan",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_credentialing:ProviderCredentialingSpanBase": {
      "name": "ProviderCredentialingSpanBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "The states covered by the credentialing span. A span may be national and cover all states.\n",
            "key": "regions",
            "valueType": {
              "value": "type_commons:Regions",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_credentialing:ProviderCredentialingSpan": {
      "name": "ProviderCredentialingSpan",
      "shape": {
        "extends": ["type_credentialing:ProviderCredentialingSpanBase"],
        "properties": [
          {
            "key": "provider_credentialing_span_id",
            "valueType": {
              "value": "type_credentialing:ProviderCredentialingSpanId",
              "type": "id"
            }
          },
          {
            "description": "The rendering provider covered by the credentialing span.",
            "key": "rendering_provider",
            "valueType": {
              "value": "type_organization-providers/v2:OrganizationProvider",
              "type": "id"
            }
          },
          {
            "description": "The practice location at which the rendering provider is covered by the credentialing span.\n",
            "key": "contracting_provider",
            "valueType": {
              "value": "type_organization-providers/v2:OrganizationProvider",
              "type": "id"
            }
          },
          {
            "description": "The payer doing the credentialing.",
            "key": "payer",
            "valueType": {
              "value": "type_payers:Payer",
              "type": "id"
            }
          },
          {
            "key": "dates",
            "valueType": {
              "value": "type_credentialing:CredentialingSpanDates",
              "type": "id"
            }
          },
          {
            "description": "Date that the credential paperwork was submitted.",
            "key": "submitted_date",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Status of the credentialing span.",
            "key": "credentialing_status",
            "valueType": {
              "value": "type_credentialing:CredentialingSpanStatus",
              "type": "id"
            }
          },
          {
            "description": "Date that the payer loaded the credentialing span into their system.",
            "key": "payer_loaded_date",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_credentialing:CredentialingSpanDates": {
      "name": "CredentialingSpanDates",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "required_dates",
            "additionalProperties": {
              "extends": ["type_credentialing:RequiredCredentialingDates"],
              "properties": []
            }
          },
          {
            "discriminantValue": "non_required_dates",
            "additionalProperties": {
              "extends": ["type_credentialing:NonRequiredCredentialingDates"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_credentialing:RequiredCredentialingDates": {
      "name": "RequiredCredentialingDates",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "start_date",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          },
          {
            "key": "end_date",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_credentialing:NonRequiredCredentialingDates": {
      "name": "NonRequiredCredentialingDates",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "start_date",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "end_date",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_credentialing:CredentialingSpanStatus": {
      "description": "Stage of a credentialing span in the credentialing workflow.",
      "name": "CredentialingSpanStatus",
      "shape": {
        "values": [
          {
            "value": "work_in_progress"
          },
          {
            "value": "pending"
          },
          {
            "value": "effective"
          },
          {
            "value": "expired"
          }
        ],
        "type": "enum"
      }
    },
    "type_dashboards:DashboardId": {
      "name": "DashboardId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_dashboards:FontAwesomeIconName": {
      "name": "FontAwesomeIconName",
      "shape": {
        "values": [
          {
            "value": "bullseye-arrow"
          },
          {
            "value": "telescope"
          },
          {
            "value": "chart-line-down"
          },
          {
            "value": "chart-line-up"
          },
          {
            "value": "inbox-out"
          },
          {
            "value": "hourglass-end"
          },
          {
            "value": "circle-pause"
          },
          {
            "value": "thumbs-down"
          },
          {
            "value": "ban"
          },
          {
            "value": "sack-dollar"
          },
          {
            "value": "alarm-clock"
          },
          {
            "value": "list-check"
          },
          {
            "value": "id-card"
          },
          {
            "value": "globe"
          },
          {
            "value": "phone"
          },
          {
            "value": "staff-snake"
          },
          {
            "value": "trophy"
          },
          {
            "value": "building"
          },
          {
            "value": "square-heart"
          },
          {
            "value": "money-bill-wave"
          },
          {
            "value": "abacus"
          },
          {
            "value": "crystal-ball"
          },
          {
            "value": "magnifying-glass"
          },
          {
            "value": "laptop-medical"
          },
          {
            "value": "scale-balanced"
          },
          {
            "value": "cabinet-filing"
          },
          {
            "value": "hospital"
          },
          {
            "value": "stethoscope"
          },
          {
            "value": "folders"
          },
          {
            "value": "folder-open"
          },
          {
            "value": "file-export"
          }
        ],
        "type": "enum"
      }
    },
    "type_dashboards:DashboardGroupType": {
      "name": "DashboardGroupType",
      "shape": {
        "values": [
          {
            "value": "CLAIMS"
          },
          {
            "value": "WORKFLOW"
          },
          {
            "value": "FINANCIAL"
          },
          {
            "value": "PLATFORM"
          },
          {
            "value": "EXPORTS"
          }
        ],
        "type": "enum"
      }
    },
    "type_dashboards:Dashboard": {
      "name": "Dashboard",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "dashboard_id",
            "valueType": {
              "value": "type_dashboards:DashboardId",
              "type": "id"
            }
          },
          {
            "key": "display_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "icon",
            "valueType": {
              "itemType": {
                "value": "type_dashboards:FontAwesomeIconName",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "learn_more_link",
            "valueType": {
              "itemType": {
                "value": "type_commons:LinkUrl",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_dashboards:DashboardGroup": {
      "name": "DashboardGroup",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "value": "type_dashboards:DashboardGroupType",
              "type": "id"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "learn_more_link",
            "valueType": {
              "itemType": {
                "value": "type_commons:LinkUrl",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "dashboards",
            "valueType": {
              "itemType": {
                "value": "type_dashboards:Dashboard",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_dashboards:GetAllDashboardGroupsResponse": {
      "name": "GetAllDashboardGroupsResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "groups",
            "valueType": {
              "itemType": {
                "value": "type_dashboards:DashboardGroup",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_diagnoses:DiagnosisId": {
      "name": "DiagnosisId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_diagnoses:DiagnosisCreate": {
      "name": "DiagnosisCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Empty string not allowed.",
            "key": "name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Typically, providers submitting claims to Candid are using ICD-10 diagnosis codes. If you are using ICD-10 codes, the primary diagnosis code listed on the claim should use the ABK code_type. If more than one diagnosis is being submitted on a claim, please use ABF for the rest of the listed diagnoses. If you are using ICD-9 diagnosis codes, use BK and BF for the principal and following diagnosis code(s) respectively.\n",
            "key": "code_type",
            "valueType": {
              "value": "type_diagnoses:DiagnosisTypeCode",
              "type": "id"
            }
          },
          {
            "description": "Empty string not allowed.\nShould be of the appropriate format for the provided `code_type`.\nMust obey the ICD-10 format if an ICD-10 code_type is provided, specifically:\n  - Letter\n  - Digit\n  - Digit or the letter `A` or `B`\n  - (Optional) Period `.`\n  - Up to 4 (or as few as 0) letters and digits\n",
            "key": "code",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_diagnoses:StandaloneDiagnosisCreate": {
      "name": "StandaloneDiagnosisCreate",
      "shape": {
        "extends": ["type_diagnoses:DiagnosisCreate"],
        "properties": [
          {
            "key": "encounter_id",
            "valueType": {
              "value": "type_commons:EncounterId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_diagnoses:DiagnosisTypeCode": {
      "name": "DiagnosisTypeCode",
      "shape": {
        "values": [
          {
            "description": "ICD-10 Diagnosis",
            "value": "ABF"
          },
          {
            "description": "ICD-10 Admitting Diagnosis",
            "value": "ABJ"
          },
          {
            "description": "ICD-10 Principal Diagnosis",
            "value": "ABK"
          },
          {
            "description": "ICD-10 Patient Reason for Visit",
            "value": "APR"
          },
          {
            "description": "ICD-9 Diagnosis",
            "value": "BF"
          },
          {
            "description": "ICD-9 Admitting Diagnosis",
            "value": "BJ"
          },
          {
            "description": "ICD-9 Principal Diagnosis",
            "value": "BK"
          },
          {
            "description": "ICD-9 Patient Reason for Visit",
            "value": "PR"
          },
          {
            "description": "Diagnosis Related Group (DRG)",
            "value": "DR"
          },
          {
            "description": "Logical Observation Identifier Names and Codes (LOINC<190>) Codes",
            "value": "LOI"
          }
        ],
        "type": "enum"
      }
    },
    "type_diagnoses:Diagnosis": {
      "name": "Diagnosis",
      "shape": {
        "extends": ["type_diagnoses:StandaloneDiagnosisCreate"],
        "properties": [
          {
            "key": "diagnosis_id",
            "valueType": {
              "value": "type_diagnoses:DiagnosisId",
              "type": "id"
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter_timeline:TimelineEventData": {
      "description": "Data common to all TimelineEvents",
      "name": "TimelineEventData",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "occurred_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter_timeline:GenericTimelineEventData": {
      "description": "Generic TimelineEvent data with a catch-all field for additional text.",
      "name": "GenericTimelineEventData",
      "shape": {
        "extends": ["type_encounter_timeline:TimelineEventData"],
        "properties": [
          {
            "key": "secondary_text",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter_timeline:GenericNamedTimelineEventData": {
      "description": "A truly generic timeline event which also contains its name.\nUseful for adding a new event that can be displayed in the UI without adding a tailored type to the TimelineEvent union.\n",
      "name": "GenericNamedTimelineEventData",
      "shape": {
        "extends": ["type_encounter_timeline:GenericTimelineEventData"],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter_timeline:TimelineEvent": {
      "name": "TimelineEvent",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "encounter_received",
            "additionalProperties": {
              "extends": ["type_encounter_timeline:GenericTimelineEventData"],
              "properties": []
            }
          },
          {
            "discriminantValue": "claim_submission",
            "additionalProperties": {
              "extends": ["type_encounter_timeline:GenericTimelineEventData"],
              "properties": []
            }
          },
          {
            "discriminantValue": "claim_submission_failure",
            "additionalProperties": {
              "extends": ["type_encounter_timeline:GenericTimelineEventData"],
              "properties": []
            }
          },
          {
            "discriminantValue": "claim_submission_v2",
            "additionalProperties": {
              "extends": ["type_encounter_timeline:ClaimSubmissionTimelineEvent"],
              "properties": []
            }
          },
          {
            "discriminantValue": "era_posted",
            "additionalProperties": {
              "extends": ["type_encounter_timeline:GenericTimelineEventData"],
              "properties": []
            }
          },
          {
            "discriminantValue": "payer_check",
            "additionalProperties": {
              "extends": ["type_encounter_timeline:GenericTimelineEventData"],
              "properties": []
            }
          },
          {
            "discriminantValue": "claim_status_change",
            "additionalProperties": {
              "extends": ["type_encounter_timeline:GenericTimelineEventData"],
              "properties": []
            }
          },
          {
            "discriminantValue": "patient_payment",
            "additionalProperties": {
              "extends": ["type_encounter_timeline:GenericTimelineEventData"],
              "properties": []
            }
          },
          {
            "discriminantValue": "generic",
            "additionalProperties": {
              "extends": ["type_encounter_timeline:GenericNamedTimelineEventData"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_encounter_timeline:EncounterTimelineResponse": {
      "description": "Response with a list of ordered events that have occurred on an encounter.\nEvents are ordered in ascending order (oldest first).\n",
      "name": "EncounterTimelineResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "events",
            "valueType": {
              "itemType": {
                "value": "type_encounter_timeline:TimelineEvent",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_encounter_timeline:ClaimSubmissionTimelineEvent": {
      "name": "ClaimSubmissionTimelineEvent",
      "shape": {
        "extends": ["type_encounter_timeline:TimelineEventData"],
        "properties": [
          {
            "key": "claim_submission_id",
            "valueType": {
              "value": "type_commons:ClaimSubmissionId",
              "type": "id"
            }
          },
          {
            "key": "claim_frequency_code",
            "valueType": {
              "value": "type_claim-submission:ClaimFrequencyTypeCode",
              "type": "id"
            }
          },
          {
            "key": "claim_submission_status",
            "valueType": {
              "value": "type_claim-submission:ClaimSubmissionStatus",
              "type": "id"
            }
          },
          {
            "key": "submission_destination",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payer_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payer_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payer_generated_control_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "claim_note",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "payer_responsibility",
            "valueType": {
              "itemType": {
                "value": "type_commons:ClaimSubmissionPayerResponsibilityType",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_enrollments:EnrollmentId": {
      "name": "EnrollmentId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_enrollments:EnrollmentAttachmentId": {
      "name": "EnrollmentAttachmentId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_enrollments:EnrollmentAttachmentResponse": {
      "name": "EnrollmentAttachmentResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "signed_download_url",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_enrollments:EnrollmentAttachmentBase": {
      "name": "EnrollmentAttachmentBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "enrollment_id",
            "valueType": {
              "value": "type_enrollments:EnrollmentId",
              "type": "id"
            }
          },
          {
            "key": "file_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "storage_uri",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_enrollments:EnrollmentAttachment": {
      "name": "EnrollmentAttachment",
      "shape": {
        "extends": ["type_enrollments:EnrollmentAttachmentBase"],
        "properties": [
          {
            "key": "attachment_id",
            "valueType": {
              "value": "type_enrollments:EnrollmentAttachmentId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_enrollments:EnrollmentAttachmentCreate": {
      "name": "EnrollmentAttachmentCreate",
      "shape": {
        "extends": ["type_enrollments:EnrollmentAttachmentBase"],
        "properties": [
          {
            "key": "attachment_id",
            "valueType": {
              "itemType": {
                "value": "type_enrollments:EnrollmentAttachmentId",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_enrollments:EnrollmentStatus": {
      "name": "EnrollmentStatus",
      "shape": {
        "values": [
          {
            "value": "SUBMITTED"
          },
          {
            "value": "AUTHORIZED"
          },
          {
            "value": "CANCELED"
          },
          {
            "value": "DENIED"
          },
          {
            "value": "ACTION_REQUIRED"
          },
          {
            "value": "PENDING_SUBMISSION"
          },
          {
            "value": "REQUIRES_INVESTIGATION"
          },
          {
            "value": "ADDITIONAL_INFO_NEEDED"
          }
        ],
        "type": "enum"
      }
    },
    "type_enrollments:IndividualAssignee": {
      "name": "IndividualAssignee",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "auth0_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_enrollments:OrganizationAssignee": {
      "name": "OrganizationAssignee",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "organization_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_enrollments:AssigneeId": {
      "name": "AssigneeId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_enrollments:Assignee": {
      "name": "Assignee",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "individual_assignee",
            "additionalProperties": {
              "extends": ["type_enrollments:IndividualAssignee"],
              "properties": []
            }
          },
          {
            "discriminantValue": "organization_assignee",
            "additionalProperties": {
              "extends": ["type_enrollments:OrganizationAssignee"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_enrollments:EnrollmentType": {
      "name": "EnrollmentType",
      "shape": {
        "values": [
          {
            "value": "CLAIMS"
          },
          {
            "value": "ELIGIBILITY"
          },
          {
            "value": "CLAIM_STATUS"
          },
          {
            "value": "REMITTANCE"
          },
          {
            "value": "EFT"
          }
        ],
        "type": "enum"
      }
    },
    "type_enrollments:ProviderNpi": {
      "name": "ProviderNpi",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_enrollments:ChangeEnrollmentStatus": {
      "name": "ChangeEnrollmentStatus",
      "shape": {
        "values": [
          {
            "value": "AUTHORIZED"
          },
          {
            "value": "CANCELED"
          },
          {
            "value": "DENIED-PAYOR"
          },
          {
            "value": "DENIED-PENDING"
          },
          {
            "value": "DENIED-REJECTED"
          },
          {
            "value": "DENIED-PENDING EXPIRED"
          },
          {
            "value": "EXPIRED"
          },
          {
            "value": "NEEDS-TEST"
          },
          {
            "value": "OPEN"
          },
          {
            "value": "PENDING RECEIPT"
          },
          {
            "value": "RECEIVED"
          }
        ],
        "type": "enum"
      }
    },
    "type_enrollments:ChangeEnrollmentDocType": {
      "name": "ChangeEnrollmentDocType",
      "shape": {
        "values": [
          {
            "value": "Claim Status"
          },
          {
            "value": "Claims"
          },
          {
            "value": "Eligibility"
          },
          {
            "value": "Remittance"
          }
        ],
        "type": "enum"
      }
    },
    "type_enrollments:EnrollmentPriority": {
      "name": "EnrollmentPriority",
      "shape": {
        "values": [
          {
            "value": "HIGH_PRIORITY"
          },
          {
            "value": "NORMAL_PRIORITY"
          }
        ],
        "type": "enum"
      }
    },
    "type_enrollments:ChangeEnrollmentBase": {
      "name": "ChangeEnrollmentBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "doc_handle",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "notes",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "provider",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "submitter_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "cpid",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "doc_type",
            "valueType": {
              "value": "type_enrollments:ChangeEnrollmentDocType",
              "type": "id"
            }
          },
          {
            "key": "status",
            "valueType": {
              "value": "type_enrollments:ChangeEnrollmentStatus",
              "type": "id"
            }
          },
          {
            "key": "payer_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "idm_username",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "npi_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "provider_num",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "provider_status",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "tax_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "payer_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "reference_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "sap_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "date_received",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "follow_up_date",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "date_completed",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "date_mailed",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_enrollments:EnrollmentSource": {
      "name": "EnrollmentSource",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "change_healthcare",
            "additionalProperties": {
              "extends": ["type_enrollments:ChangeEnrollmentBase"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_enrollments:RemovableAssignee": {
      "name": "RemovableAssignee",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "assignee",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_enrollments:Assignee",
                    "type": "id"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "remove",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_enrollments:Enrollment": {
      "name": "Enrollment",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "enrollment_id",
            "valueType": {
              "value": "type_enrollments:EnrollmentId",
              "type": "id"
            }
          },
          {
            "key": "organization_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          },
          {
            "key": "last_updated_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "status",
            "valueType": {
              "value": "type_enrollments:EnrollmentStatus",
              "type": "id"
            }
          },
          {
            "key": "assignee",
            "valueType": {
              "itemType": {
                "value": "type_enrollments:Assignee",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "enrollment_type",
            "valueType": {
              "value": "type_enrollments:EnrollmentType",
              "type": "id"
            }
          },
          {
            "key": "payer_id",
            "valueType": {
              "value": "type_payers:PayerId",
              "type": "id"
            }
          },
          {
            "key": "payer_name",
            "valueType": {
              "value": "type_payers:PayerName",
              "type": "id"
            }
          },
          {
            "key": "provider_npi",
            "valueType": {
              "value": "type_enrollments:ProviderNpi",
              "type": "id"
            }
          },
          {
            "key": "priority",
            "valueType": {
              "itemType": {
                "value": "type_enrollments:EnrollmentPriority",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "source",
            "valueType": {
              "itemType": {
                "value": "type_enrollments:EnrollmentSource",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_enrollments:LatestImportDatetimeResponse": {
      "name": "LatestImportDatetimeResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "import_datetime",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_enrollments:EnrollmentFilters": {
      "name": "EnrollmentFilters",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "statuses",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_enrollments:EnrollmentStatus",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "enrollment_types",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_enrollments:EnrollmentType",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "payer_search_term",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "provider_npi",
            "valueType": {
              "itemType": {
                "value": "type_enrollments:ProviderNpi",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "limit",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "page_token",
            "valueType": {
              "itemType": {
                "value": "type_commons:PageToken",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "organization_provider_id",
            "valueType": {
              "itemType": {
                "value": "type_organization-providers/v2:OrganizationProviderId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "priority",
            "valueType": {
              "itemType": {
                "value": "type_enrollments:EnrollmentPriority",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "assignee_id",
            "valueType": {
              "itemType": {
                "value": "type_enrollments:AssigneeId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "include_hidden",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_enrollments:EnrollmentPage": {
      "name": "EnrollmentPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_enrollments:Enrollment",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_era:EraId": {
      "name": "EraId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_era:ERABase": {
      "name": "ERABase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "check_number",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "check_date",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_era:ERA": {
      "name": "ERA",
      "shape": {
        "extends": ["type_era:ERABase"],
        "properties": [
          {
            "key": "era_id",
            "valueType": {
              "value": "type_era:EraId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_identifiers:IdentifierCode": {
      "name": "IdentifierCode",
      "shape": {
        "values": [
          {
            "value": "MCR"
          },
          {
            "value": "MCD"
          }
        ],
        "type": "enum"
      }
    },
    "type_identifiers:IdentifierId": {
      "name": "IdentifierId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_identifiers:MedicareProviderIdentifier": {
      "name": "MedicareProviderIdentifier",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "state",
            "valueType": {
              "value": "type_commons:State",
              "type": "id"
            }
          },
          {
            "key": "provider_number",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_identifiers:MedicaidProviderIdentifier": {
      "name": "MedicaidProviderIdentifier",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "state",
            "valueType": {
              "value": "type_commons:State",
              "type": "id"
            }
          },
          {
            "key": "provider_number",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_identifiers:IdentifierValue": {
      "name": "IdentifierValue",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "medicare_provider_identifier",
            "additionalProperties": {
              "extends": ["type_identifiers:MedicareProviderIdentifier"],
              "properties": []
            }
          },
          {
            "discriminantValue": "medicaid_provider_identifier",
            "additionalProperties": {
              "extends": ["type_identifiers:MedicaidProviderIdentifier"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_identifiers:IdentifierBase": {
      "name": "IdentifierBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "period",
            "valueType": {
              "itemType": {
                "value": "type_commons:DateRangeOptionalEnd",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "identifier_code",
            "valueType": {
              "value": "type_identifiers:IdentifierCode",
              "type": "id"
            }
          },
          {
            "key": "identifier_value",
            "valueType": {
              "value": "type_identifiers:IdentifierValue",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_identifiers:Identifier": {
      "name": "Identifier",
      "shape": {
        "extends": ["type_identifiers:IdentifierBase"],
        "properties": [
          {
            "key": "identifier_id",
            "valueType": {
              "value": "type_identifiers:IdentifierId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_identifiers:IdentifierCreate": {
      "name": "IdentifierCreate",
      "shape": {
        "extends": ["type_identifiers:IdentifierBase"],
        "properties": [],
        "type": "object"
      }
    },
    "type_identifiers:IdentifierUpdate": {
      "name": "IdentifierUpdate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "identifier_id",
            "valueType": {
              "value": "type_identifiers:IdentifierId",
              "type": "id"
            }
          },
          {
            "key": "identifier_code",
            "valueType": {
              "itemType": {
                "value": "type_identifiers:IdentifierCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "identifier_value",
            "valueType": {
              "itemType": {
                "value": "type_identifiers:IdentifierValue",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "period",
            "valueType": {
              "itemType": {
                "value": "type_commons:RemovableDateRangeOptionalEnd",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_identifiers:UpdatableIdentifier": {
      "name": "UpdatableIdentifier",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "add",
            "additionalProperties": {
              "extends": ["type_identifiers:IdentifierCreate"],
              "properties": []
            }
          },
          {
            "discriminantValue": "update",
            "additionalProperties": {
              "extends": ["type_identifiers:IdentifierUpdate"],
              "properties": []
            }
          },
          {
            "discriminantValue": "remove",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "value": "type_identifiers:IdentifierId",
                    "type": "id"
                  }
                }
              ]
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_individual:IndividualId": {
      "name": "IndividualId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_individual:IndividualBase": {
      "name": "IndividualBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "first_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "last_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "gender",
            "valueType": {
              "value": "type_individual:Gender",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_individual:Individual": {
      "name": "Individual",
      "shape": {
        "extends": ["type_individual:IndividualBase"],
        "properties": [
          {
            "key": "individual_id",
            "valueType": {
              "value": "type_individual:IndividualId",
              "type": "id"
            }
          },
          {
            "description": "Another ID you want to associate with this patient. For example, your internal patient ID or a Dr. Chrono patient ID.\n",
            "key": "external_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_relationship_to_subscriber_code",
            "valueType": {
              "itemType": {
                "value": "type_commons:PatientRelationshipToInsuredCodeAll",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "address",
            "valueType": {
              "itemType": {
                "value": "type_commons:StreetAddressShortZip",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "date_of_birth",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_individual:SubscriberBase": {
      "name": "SubscriberBase",
      "shape": {
        "extends": ["type_individual:IndividualBase"],
        "properties": [
          {
            "key": "patient_relationship_to_subscriber_code",
            "valueType": {
              "value": "type_commons:PatientRelationshipToInsuredCodeAll",
              "type": "id"
            }
          },
          {
            "key": "date_of_birth",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "address",
            "valueType": {
              "itemType": {
                "value": "type_commons:StreetAddressShortZip",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_individual:SubscriberCreate": {
      "name": "SubscriberCreate",
      "shape": {
        "extends": ["type_individual:SubscriberBase"],
        "properties": [
          {
            "key": "insurance_card",
            "valueType": {
              "value": "type_insurance-card:InsuranceCardCreate",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_individual:Subscriber": {
      "name": "Subscriber",
      "shape": {
        "extends": ["type_individual:SubscriberBase"],
        "properties": [
          {
            "key": "individual_id",
            "valueType": {
              "value": "type_individual:IndividualId",
              "type": "id"
            }
          },
          {
            "key": "insurance_card",
            "valueType": {
              "value": "type_insurance-card:InsuranceCard",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_individual:PatientCreate": {
      "name": "PatientCreate",
      "shape": {
        "extends": ["type_individual:PatientBase"],
        "properties": [
          {
            "key": "phone_numbers",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_commons:PhoneNumber",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "description": "Defaults to false",
            "key": "phone_consent",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "email",
            "valueType": {
              "itemType": {
                "value": "type_commons:Email",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "description": "Defaults to false",
            "key": "email_consent",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_individual:PatientBase": {
      "name": "PatientBase",
      "shape": {
        "extends": ["type_individual:IndividualBase"],
        "properties": [
          {
            "description": "Another ID you want to associate with this patient.\nFor example, your internal patient ID or a Dr. Chrono patient ID. Box 1a on the CMS-1500 claim form\n",
            "key": "external_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "Box 3 on the CMS-1500 claim form. The date format should be in ISO 8601 date; formatted YYYY-MM-DD (i.e. 2012-02-01)",
            "key": "date_of_birth",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          },
          {
            "description": "Box 5 on the CMS-1500 claim form.",
            "key": "address",
            "valueType": {
              "value": "type_commons:StreetAddressShortZip",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_individual:Patient": {
      "name": "Patient",
      "shape": {
        "extends": ["type_individual:PatientBase"],
        "properties": [
          {
            "key": "individual_id",
            "valueType": {
              "value": "type_individual:IndividualId",
              "type": "id"
            }
          },
          {
            "key": "phone_numbers",
            "valueType": {
              "itemType": {
                "value": "type_commons:PhoneNumber",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "phone_consent",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "email",
            "valueType": {
              "itemType": {
                "value": "type_commons:Email",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "email_consent",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_individual:Gender": {
      "name": "Gender",
      "shape": {
        "values": [
          {
            "value": "male"
          },
          {
            "value": "female"
          },
          {
            "value": "other"
          },
          {
            "value": "not_given"
          },
          {
            "value": "unknown"
          }
        ],
        "type": "enum"
      }
    },
    "type_insurance-card:InsuranceCardId": {
      "name": "InsuranceCardId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_insurance-card:InsuranceCardBase": {
      "name": "InsuranceCardBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Box 11 on the CMS-1500 claim form.",
            "key": "group_number",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "description": "Box 11c on the CMS-1500 claim form.",
            "key": "plan_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "plan_type",
            "valueType": {
              "itemType": {
                "value": "type_commons:SourceOfPaymentCode",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "insurance_type",
            "valueType": {
              "itemType": {
                "value": "type_commons:InsuranceTypeCode",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-card:InsuranceCardCreate": {
      "name": "InsuranceCardCreate",
      "shape": {
        "extends": ["type_insurance-card:InsuranceCardBase"],
        "properties": [
          {
            "key": "member_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payer_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payer_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "rx_bin",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "rx_pcn",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "image_url_front",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "image_url_back",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "emr_payer_crosswalk",
            "valueType": {
              "itemType": {
                "value": "type_commons:EmrPayerCrosswalk",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-card:InsuranceCard": {
      "name": "InsuranceCard",
      "shape": {
        "extends": ["type_insurance-card:InsuranceCardBase"],
        "properties": [
          {
            "key": "insurance_card_id",
            "valueType": {
              "value": "type_insurance-card:InsuranceCardId",
              "type": "id"
            }
          },
          {
            "key": "member_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payer_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "payer_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "rx_bin",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "rx_pcn",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "image_url_front",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "image_url_back",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_insurance-card:InsuranceCardImages": {
      "name": "InsuranceCardImages",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "signed_image_url_front",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "signed_image_url_back",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_invoices:InvoiceId": {
      "name": "InvoiceId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_invoices:PagedInvoices": {
      "name": "PagedInvoices",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_invoices:Invoice",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_invoices:InvoiceSortField": {
      "name": "InvoiceSortField",
      "shape": {
        "values": [
          {
            "value": "created_at"
          },
          {
            "value": "updated_at"
          },
          {
            "value": "patient_external_id"
          },
          {
            "value": "note"
          },
          {
            "value": "due_date"
          },
          {
            "value": "status"
          }
        ],
        "type": "enum"
      }
    },
    "type_invoices:CreatedInvoice": {
      "name": "CreatedInvoice",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "invoice",
            "additionalProperties": {
              "extends": ["type_invoices:Invoice"],
              "properties": []
            }
          },
          {
            "discriminantValue": "invoice_preview",
            "additionalProperties": {
              "extends": ["type_invoices:InvoicePreview"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_invoices:InvoiceFilter": {
      "name": "InvoiceFilter",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "patient_external_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:PatientExternalId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "note",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "due_date_before",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "due_date_after",
            "valueType": {
              "itemType": {
                "value": "type_commons:Date",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "status",
            "valueType": {
              "itemType": {
                "value": "type_invoices:InvoiceStatus",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "limit",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "sort",
            "valueType": {
              "itemType": {
                "value": "type_invoices:InvoiceSortField",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "sort_direction",
            "valueType": {
              "itemType": {
                "value": "type_commons:SortDirection",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "page_token",
            "valueType": {
              "itemType": {
                "value": "type_commons:PageToken",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_invoices:Invoice": {
      "name": "Invoice",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_invoices:InvoiceId",
              "type": "id"
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "organzation_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          },
          {
            "key": "source_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "source_customer_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_external_id",
            "valueType": {
              "value": "type_commons:PatientExternalId",
              "type": "id"
            }
          },
          {
            "key": "note",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "due_date",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          },
          {
            "key": "status",
            "valueType": {
              "value": "type_invoices:InvoiceStatus",
              "type": "id"
            }
          },
          {
            "key": "url",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "customer_invoice_url",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_invoices:InvoiceItem",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_invoices:InvoicePreview": {
      "name": "InvoicePreview",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "organzation_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          },
          {
            "key": "source_customer_id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "source_customer_email",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "source_customer_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "source_customer_url",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_external_id",
            "valueType": {
              "value": "type_commons:PatientExternalId",
              "type": "id"
            }
          },
          {
            "key": "note",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "due_date",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          },
          {
            "key": "status",
            "valueType": {
              "itemType": {
                "value": "type_invoices:InvoiceStatus",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_invoices:InvoiceItem",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_invoices:InvoiceItem": {
      "name": "InvoiceItem",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_line_id",
            "valueType": {
              "value": "type_commons:ServiceLineId",
              "type": "id"
            }
          },
          {
            "key": "amount_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_invoices:InvoiceStatus": {
      "name": "InvoiceStatus",
      "shape": {
        "values": [
          {
            "value": "draft"
          },
          {
            "value": "open"
          },
          {
            "value": "paid"
          },
          {
            "value": "void"
          },
          {
            "value": "uncollectible"
          }
        ],
        "type": "enum"
      }
    },
    "type_organization-payers:OrganizationPayerSummary": {
      "name": "OrganizationPayerSummary",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "fee_schedule_count",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-payers:OrganizationPayer": {
      "name": "OrganizationPayer",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "payer",
            "valueType": {
              "value": "type_payers:Payer",
              "type": "id"
            }
          },
          {
            "key": "summary",
            "valueType": {
              "value": "type_organization-payers:OrganizationPayerSummary",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-payers:OrganizationPayersPage": {
      "name": "OrganizationPayersPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_organization-payers:OrganizationPayer",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-payers:GetMultiOrganizationPayersResponse": {
      "name": "GetMultiOrganizationPayersResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "page",
            "valueType": {
              "value": "type_organization-payers:OrganizationPayersPage",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-payers:AddOrganizationPayerRequest": {
      "name": "AddOrganizationPayerRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "payer_uuid",
            "valueType": {
              "value": "type_payers:PayerUuid",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-payers:AddOrganizationPayerResponse": {
      "name": "AddOrganizationPayerResponse",
      "shape": {
        "value": {
          "value": "type_organization-payers:OrganizationPayer",
          "type": "id"
        },
        "type": "alias"
      }
    },
    "type_organization-payers:SearchOrganizationPayerSearchResult": {
      "name": "SearchOrganizationPayerSearchResult",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "match",
            "additionalProperties": {
              "extends": ["type_organization-payers:OrganizationPayer"],
              "properties": []
            }
          },
          {
            "discriminantValue": "no_match",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_organization-payers:SearchOrganizationPayerResponse": {
      "name": "SearchOrganizationPayerResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "search_result",
            "valueType": {
              "value": "type_organization-payers:SearchOrganizationPayerSearchResult",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-tags:OrganizationTagId": {
      "name": "OrganizationTagId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_organization-tags:OrganizationTagCreate": {
      "name": "OrganizationTagCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "tag_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "tag_type",
            "valueType": {
              "value": "type_organization-tags:TagTypeEnum",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-tags:OrganizationTag": {
      "name": "OrganizationTag",
      "shape": {
        "extends": ["type_organization-tags:OrganizationTagCreate"],
        "properties": [
          {
            "key": "tag_id",
            "valueType": {
              "value": "type_organization-tags:OrganizationTagId",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-tags:OrganizationTagsPage": {
      "name": "OrganizationTagsPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_organization-tags:OrganizationTag",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_organization-tags:TagTypeEnum": {
      "name": "TagTypeEnum",
      "shape": {
        "values": [
          {
            "value": "system"
          },
          {
            "value": "user"
          }
        ],
        "type": "enum"
      }
    },
    "type_page-sessions:AppSessionId": {
      "name": "AppSessionId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_page-sessions:PageSessionStartReason": {
      "name": "PageSessionStartReason",
      "shape": {
        "values": [
          {
            "value": "browser_load"
          },
          {
            "value": "organization_switch"
          },
          {
            "value": "route_change"
          }
        ],
        "type": "enum"
      }
    },
    "type_page-sessions:PageSessionEndReason": {
      "name": "PageSessionEndReason",
      "shape": {
        "values": [
          {
            "value": "organization_switch"
          },
          {
            "value": "route_change"
          },
          {
            "value": "timeout"
          },
          {
            "value": "user_close"
          },
          {
            "value": "logout"
          }
        ],
        "type": "enum"
      }
    },
    "type_page-sessions:CreatePageSessionRequest": {
      "name": "CreatePageSessionRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "app_session_id",
            "valueType": {
              "value": "type_page-sessions:AppSessionId",
              "type": "id"
            }
          },
          {
            "key": "start_reason",
            "valueType": {
              "value": "type_page-sessions:PageSessionStartReason",
              "type": "id"
            }
          },
          {
            "key": "end_reason",
            "valueType": {
              "value": "type_page-sessions:PageSessionEndReason",
              "type": "id"
            }
          },
          {
            "key": "route",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "start_datetime",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "end_datetime",
            "valueType": {
              "value": {
                "type": "datetime"
              },
              "type": "primitive"
            }
          },
          {
            "key": "user_agent",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "resolution_width",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "resolution_height",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "zoom_level",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patient-payment-configs:PatientPaymentConfigId": {
      "name": "PatientPaymentConfigId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_patient-payment-configs:PagedPatientPaymentConfig": {
      "name": "PagedPatientPaymentConfig",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_patient-payment-configs:PatientPaymentConfig",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patient-payment-configs:PatientPaymentConfigSortField": {
      "name": "PatientPaymentConfigSortField",
      "shape": {
        "values": [
          {
            "value": "patient_external_id"
          },
          {
            "value": "auto_collect"
          },
          {
            "value": "auto_collect_threshold_cents"
          },
          {
            "value": "auto_invoice"
          },
          {
            "value": "days_until_due"
          }
        ],
        "type": "enum"
      }
    },
    "type_patient-payment-configs:PatientPaymentConfigFilter": {
      "name": "PatientPaymentConfigFilter",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "patient_external_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:PatientExternalId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "limit",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "sort",
            "valueType": {
              "itemType": {
                "value": "type_patient-payment-configs:PatientPaymentConfigSortField",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "sort_direction",
            "valueType": {
              "value": "type_commons:SortDirection",
              "type": "id"
            }
          },
          {
            "key": "page_token",
            "valueType": {
              "itemType": {
                "value": "type_commons:PageToken",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patient-payment-configs:PatientPaymentConfig": {
      "name": "PatientPaymentConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_patient-payment-configs:PatientPaymentConfigId",
              "type": "id"
            }
          },
          {
            "key": "organization_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          },
          {
            "key": "patient_external_id",
            "valueType": {
              "value": "type_commons:PatientExternalId",
              "type": "id"
            }
          },
          {
            "key": "auto_collect",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "auto_collect_threshold_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "auto_invoice",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "days_until_due",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patient-payment-configs:PatientPaymentConfigCreate": {
      "name": "PatientPaymentConfigCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "patient_external_id",
            "valueType": {
              "value": "type_commons:PatientExternalId",
              "type": "id"
            }
          },
          {
            "key": "auto_collect",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "auto_collect_threshold_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "auto_invoice",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "days_until_due",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patient-payment-configs:PatientPaymentConfigPatch": {
      "name": "PatientPaymentConfigPatch",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "patient_external_id",
            "valueType": {
              "itemType": {
                "value": "type_commons:PatientExternalId",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "auto_collect",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "auto_collect_threshold_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "auto_invoice",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "days_until_due",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patients:PatientRollupSummariesPage": {
      "name": "PatientRollupSummariesPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_patients:PatientRollupSummary",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patients:PatientRollupSummarySortOptions": {
      "name": "PatientRollupSummarySortOptions",
      "shape": {
        "values": [
          {
            "value": "most_recent_date_of_service_asc"
          },
          {
            "value": "most_recent_date_of_service_desc"
          },
          {
            "value": "last_name_asc"
          },
          {
            "value": "last_name_desc"
          },
          {
            "value": "insurance_payment_total_cents_asc"
          },
          {
            "value": "insurance_payment_total_cents_desc"
          },
          {
            "value": "patient_payment_total_cents_asc"
          },
          {
            "value": "patient_payment_total_cents_desc"
          },
          {
            "value": "patient_balance_total_cents_asc"
          },
          {
            "value": "patient_balance_total_cents_desc"
          },
          {
            "value": "patient_balance_excluding_open_invoice_total_cents_asc"
          },
          {
            "value": "patient_balance_excluding_open_invoice_total_cents_desc"
          },
          {
            "value": "days_since_last_invoice_asc"
          },
          {
            "value": "days_since_last_invoice_desc"
          },
          {
            "value": "pending_invoice_count_asc"
          },
          {
            "value": "pending_invoice_count_desc"
          },
          {
            "value": "manual_adjustments_total_cents_asc"
          },
          {
            "value": "manual_adjustments_total_cents_desc"
          }
        ],
        "type": "enum"
      }
    },
    "type_patients:PatientRollupSummary": {
      "name": "PatientRollupSummary",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "patient",
            "valueType": {
              "value": "type_commons:PatientExternalId",
              "type": "id"
            }
          },
          {
            "key": "first_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "last_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "date_of_birth",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          },
          {
            "key": "most_recent_date_of_service",
            "valueType": {
              "value": "type_commons:Date",
              "type": "id"
            }
          },
          {
            "key": "most_recent_encounter_id",
            "valueType": {
              "value": "type_commons:EncounterId",
              "type": "id"
            }
          },
          {
            "key": "encounter_count",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "insurance_payment_total_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_payment_total_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_balance_total_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_balance_excluding_open_invoice_total_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "has_secondary_insurance",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "days_since_last_invoice",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "pending_invoice_count",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "manual_adjustments_total_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patients:PatientRollup": {
      "name": "PatientRollup",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "insurance_payment_total_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_payment_total_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_balance_total_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_balance_excluding_open_invoice_total_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "manual_adjustments_total_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient",
            "valueType": {
              "value": "type_individual:Patient",
              "type": "id"
            }
          },
          {
            "key": "subscriber_primary",
            "valueType": {
              "itemType": {
                "value": "type_individual:Subscriber",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "subscriber_secondary",
            "valueType": {
              "itemType": {
                "value": "type_individual:Subscriber",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "ordered_encounter_ids",
            "valueType": {
              "itemType": {
                "value": "type_commons:EncounterId",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "ordered_adjustment_ids",
            "valueType": {
              "itemType": {
                "value": "type_commons:AdjustmentId",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "ordered_patient_payment_ids",
            "valueType": {
              "itemType": {
                "value": "type_patient-payments/v2:PatientPaymentId",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patients:MissingPrimarySubscriberErrorMessage": {
      "name": "MissingPrimarySubscriberErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patients:BaseErrorMessage": {
      "name": "BaseErrorMessage",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_patients:InvalidBase64EncodingErrorMessage": {
      "name": "InvalidBase64EncodingErrorMessage",
      "shape": {
        "extends": ["type_patients:BaseErrorMessage"],
        "properties": [],
        "type": "object"
      }
    },
    "type_payers:PayerUuid": {
      "name": "PayerUuid",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_payers:PayerId": {
      "name": "PayerId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_payers:PayerName": {
      "name": "PayerName",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_payers:PayerPage": {
      "name": "PayerPage",
      "shape": {
        "extends": ["type_commons:ResourcePage"],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_payers:Payer",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payers:Payer": {
      "name": "Payer",
      "shape": {
        "extends": [],
        "properties": [
          {
            "description": "Auto-generated ID set on creation",
            "key": "payer_uuid",
            "valueType": {
              "value": "type_payers:PayerUuid",
              "type": "id"
            }
          },
          {
            "description": "The primary national payer ID of the payer",
            "key": "payer_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "description": "The primary display name of the payer",
            "key": "payer_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payment-account-configs:PaymentAccountConfigId": {
      "name": "PaymentAccountConfigId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_payment-account-configs:PaymentAccountApiToken": {
      "name": "PaymentAccountApiToken",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_payment-account-configs:BillingProviderNpi": {
      "name": "BillingProviderNpi",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_payment-account-configs:PaymentAccountType": {
      "name": "PaymentAccountType",
      "shape": {
        "values": [
          {
            "value": "Chargebee"
          },
          {
            "value": "Square"
          },
          {
            "value": "Stripe"
          },
          {
            "value": "Cedar"
          }
        ],
        "type": "enum"
      }
    },
    "type_payment-account-configs:PaymentAccountConfig": {
      "name": "PaymentAccountConfig",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "chargebee",
            "additionalProperties": {
              "extends": ["type_payment-account-configs:ChargebeePaymentAccountConfig"],
              "properties": []
            }
          },
          {
            "discriminantValue": "square",
            "additionalProperties": {
              "extends": ["type_payment-account-configs:SquarePaymentAccountConfig"],
              "properties": []
            }
          },
          {
            "discriminantValue": "stripe",
            "additionalProperties": {
              "extends": ["type_payment-account-configs:StripePaymentAccountConfig"],
              "properties": []
            }
          },
          {
            "discriminantValue": "cedar",
            "additionalProperties": {
              "extends": ["type_payment-account-configs:CedarPaymentAccountConfig"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_payment-account-configs:ChargebeePaymentAccountConfig": {
      "name": "ChargebeePaymentAccountConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_payment-account-configs:PaymentAccountConfigId",
              "type": "id"
            }
          },
          {
            "key": "organization_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          },
          {
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "value": "type_payment-account-configs:BillingProviderNpi",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "account_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "site",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payment-account-configs:CedarPaymentAccountConfig": {
      "name": "CedarPaymentAccountConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_payment-account-configs:PaymentAccountConfigId",
              "type": "id"
            }
          },
          {
            "key": "organization_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          },
          {
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "value": "type_payment-account-configs:BillingProviderNpi",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "account_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payment-account-configs:SquarePaymentAccountConfig": {
      "name": "SquarePaymentAccountConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_payment-account-configs:PaymentAccountConfigId",
              "type": "id"
            }
          },
          {
            "key": "organization_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          },
          {
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "value": "type_payment-account-configs:BillingProviderNpi",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "account_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "locations",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payment-account-configs:StripePaymentAccountConfig": {
      "name": "StripePaymentAccountConfig",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_payment-account-configs:PaymentAccountConfigId",
              "type": "id"
            }
          },
          {
            "key": "organization_id",
            "valueType": {
              "value": "type_commons:OrganizationId",
              "type": "id"
            }
          },
          {
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "value": "type_payment-account-configs:BillingProviderNpi",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "account_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "connect_account",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "subscribe_to_connected_sub_account_events",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "encounter_external_id_key",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_external_id_key",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "auto_collect",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "auto_collect_threshold_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "auto_invoice",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "days_until_due",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payment-account-configs:PaymentAccountConfigCreate": {
      "name": "PaymentAccountConfigCreate",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "chargebee",
            "additionalProperties": {
              "extends": ["type_payment-account-configs:ChargebeePaymentAccountConfigCreate"],
              "properties": []
            }
          },
          {
            "discriminantValue": "square",
            "additionalProperties": {
              "extends": ["type_payment-account-configs:SquarePaymentAccountConfigCreate"],
              "properties": []
            }
          },
          {
            "discriminantValue": "stripe",
            "additionalProperties": {
              "extends": ["type_payment-account-configs:StripePaymentAccountConfigCreate"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_payment-account-configs:ChargebeePaymentAccountConfigCreate": {
      "name": "ChargebeePaymentAccountConfigCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "value": "type_payment-account-configs:BillingProviderNpi",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "account_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "api_token",
            "valueType": {
              "value": "type_payment-account-configs:PaymentAccountApiToken",
              "type": "id"
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "site",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payment-account-configs:SquarePaymentAccountConfigCreate": {
      "name": "SquarePaymentAccountConfigCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "value": "type_payment-account-configs:BillingProviderNpi",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "account_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "api_token",
            "valueType": {
              "value": "type_payment-account-configs:PaymentAccountApiToken",
              "type": "id"
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "locations",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payment-account-configs:StripePaymentAccountConfigCreate": {
      "name": "StripePaymentAccountConfigCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "value": "type_payment-account-configs:BillingProviderNpi",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "account_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "api_token",
            "valueType": {
              "value": "type_payment-account-configs:PaymentAccountApiToken",
              "type": "id"
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "connect_account",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "subscribe_to_connected_sub_account_events",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "encounter_external_id_key",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "patient_external_id_key",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "auto_collect",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "auto_collect_threshold_cents",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "auto_invoice",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          },
          {
            "key": "days_until_due",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payment-account-configs:PaymentAccountConfigPatch": {
      "name": "PaymentAccountConfigPatch",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "chargebee",
            "additionalProperties": {
              "extends": ["type_payment-account-configs:ChargebeePaymentAccountConfigPatch"],
              "properties": []
            }
          },
          {
            "discriminantValue": "square",
            "additionalProperties": {
              "extends": ["type_payment-account-configs:SquarePaymentAccountConfigPatch"],
              "properties": []
            }
          },
          {
            "discriminantValue": "stripe",
            "additionalProperties": {
              "extends": ["type_payment-account-configs:StripePaymentAccountConfigPatch"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_payment-account-configs:ChargebeePaymentAccountConfigPatch": {
      "name": "ChargebeePaymentAccountConfigPatch",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_payment-account-configs:BillingProviderNpi",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "account_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "api_token",
            "valueType": {
              "itemType": {
                "value": "type_payment-account-configs:PaymentAccountApiToken",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "site",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payment-account-configs:SquarePaymentAccountConfigPatch": {
      "name": "SquarePaymentAccountConfigPatch",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_payment-account-configs:BillingProviderNpi",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "account_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "api_token",
            "valueType": {
              "itemType": {
                "value": "type_payment-account-configs:PaymentAccountApiToken",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "locations",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payment-account-configs:StripePaymentAccountConfigPatch": {
      "name": "StripePaymentAccountConfigPatch",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "billing_provider_npis",
            "valueType": {
              "itemType": {
                "itemType": {
                  "value": "type_payment-account-configs:BillingProviderNpi",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "key": "account_name",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "description",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "api_token",
            "valueType": {
              "itemType": {
                "value": "type_payment-account-configs:PaymentAccountApiToken",
                "type": "id"
              },
              "type": "optional"
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "connect_account",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "subscribe_to_connected_sub_account_events",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "encounter_external_id_key",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "patient_external_id_key",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "auto_collect",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "auto_collect_threshold_cents",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "auto_invoice",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "days_until_due",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payment-account-configs:VerifyCanInvoiceResultType": {
      "name": "VerifyCanInvoiceResultType",
      "shape": {
        "values": [
          {
            "value": "Success"
          },
          {
            "value": "PaymentAccountConfigMissing"
          },
          {
            "value": "CustomerNotFound"
          },
          {
            "value": "CustomerEmailNotFound"
          }
        ],
        "type": "enum"
      }
    },
    "type_payment-account-configs:VerifyCanInvoiceRequest": {
      "name": "VerifyCanInvoiceRequest",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "claim_ids",
            "valueType": {
              "itemType": {
                "value": "type_commons:ClaimId",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "key": "patient_external_id",
            "valueType": {
              "value": "type_commons:PatientExternalId",
              "type": "id"
            }
          },
          {
            "description": "whether to check the existence of customer email. Default=True",
            "key": "check_email_exists",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payment-account-configs:VerifyCanInvoiceResponse": {
      "name": "VerifyCanInvoiceResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "itemType": {
                "value": "type_payment-account-configs:VerifyCanInvoiceResponseItem",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payment-account-configs:VerifyCanInvoiceResponseItem": {
      "name": "VerifyCanInvoiceResponseItem",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "claim_id",
            "valueType": {
              "value": "type_commons:ClaimId",
              "type": "id"
            }
          },
          {
            "key": "patient_external_id",
            "valueType": {
              "value": "type_commons:PatientExternalId",
              "type": "id"
            }
          },
          {
            "key": "result",
            "valueType": {
              "value": "type_payment-account-configs:VerifyCanInvoiceResultType",
              "type": "id"
            }
          },
          {
            "key": "customer_url",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payment-account-configs:VerifyCustomerExistsResponse": {
      "name": "VerifyCustomerExistsResponse",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "result",
            "valueType": {
              "value": "type_payment-account-configs:VerifyCanInvoiceResultType",
              "type": "id"
            }
          },
          {
            "key": "customer_url",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_payment-account-configs:PaymentAccountConfigNameAlreadyExistsErrorContent": {
      "name": "PaymentAccountConfigNameAlreadyExistsErrorContent",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_permissions:PermissionsEnum": {
      "name": "PermissionsEnum",
      "shape": {
        "values": [
          {
            "value": "read:claims"
          },
          {
            "value": "create:claims"
          },
          {
            "value": "update:claims"
          },
          {
            "value": "update:claim_status_ar_workflows"
          },
          {
            "value": "write:claims_status_finalized"
          },
          {
            "value": "delete:claims"
          },
          {
            "value": "read:claim_submissions"
          },
          {
            "value": "read:encounters"
          },
          {
            "value": "create:encounters"
          },
          {
            "value": "update:encounters"
          },
          {
            "value": "delete:encounters"
          },
          {
            "value": "create:eligibility"
          },
          {
            "value": "create:users"
          },
          {
            "value": "edit:users"
          },
          {
            "value": "delete:users"
          },
          {
            "value": "read:users"
          },
          {
            "value": "read:payers"
          },
          {
            "value": "create:tasks"
          },
          {
            "value": "read:tasks"
          },
          {
            "value": "update:tasks"
          },
          {
            "value": "create:task_notes"
          },
          {
            "value": "admin:task_notes"
          },
          {
            "value": "read:analytics"
          },
          {
            "value": "read:internal_analytics"
          },
          {
            "value": "read:organization_analytics"
          },
          {
            "value": "read:exports"
          },
          {
            "value": "write:system_tags"
          },
          {
            "value": "read:system_tags"
          },
          {
            "value": "create:tags"
          },
          {
            "value": "delete:tags"
          },
          {
            "value": "read:tags"
          },
          {
            "value": "read:managed_emr_configs"
          },
          {
            "value": "write:managed_emr_configs"
          },
          {
            "value": "read:fee_schedules"
          },
          {
            "value": "write:fee_schedules"
          },
          {
            "value": "docs:simple_eligibility"
          },
          {
            "value": "docs:internal"
          },
          {
            "value": "create:billing_notes"
          },
          {
            "value": "delete:billing_notes"
          },
          {
            "value": "create:comments"
          },
          {
            "value": "read:comments"
          },
          {
            "value": "update:comments"
          },
          {
            "value": "delete:comments"
          },
          {
            "value": "create:diagnoses"
          },
          {
            "value": "update:diagnoses"
          },
          {
            "value": "delete:diagnoses"
          },
          {
            "value": "update:encounter_eligibility"
          },
          {
            "value": "read:service_line_ledgers"
          },
          {
            "value": "create:service_lines"
          },
          {
            "value": "update:service_lines"
          },
          {
            "value": "delete:service_lines"
          },
          {
            "value": "create:rule_engine_override"
          },
          {
            "value": "create:process_claim"
          },
          {
            "value": "create:claim_resubmission"
          },
          {
            "value": "create:claim_void"
          },
          {
            "value": "create:contracts"
          },
          {
            "value": "read:contracts"
          },
          {
            "value": "update:contracts"
          },
          {
            "value": "delete:contracts"
          },
          {
            "value": "read:encounters_timeline"
          },
          {
            "value": "update:service_facility"
          },
          {
            "value": "create:eras"
          },
          {
            "value": "update:eras"
          },
          {
            "value": "delete:eras"
          },
          {
            "value": "create:organization"
          },
          {
            "value": "edit:organization"
          },
          {
            "value": "create:organization_providers"
          },
          {
            "value": "read:organization_providers"
          },
          {
            "value": "update:organization_providers"
          },
          {
            "value": "delete:organization_providers"
          },
          {
            "value": "read:provider_credentialing_spans"
          },
          {
            "value": "create:provider_credentialing_spans"
          },
          {
            "value": "update:provider_credentialing_spans"
          },
          {
            "value": "delete:provider_credentialing_spans"
          },
          {
            "value": "create:patient_payments"
          },
          {
            "value": "read:patient_payments"
          },
          {
            "value": "update:patient_payments"
          },
          {
            "value": "delete:patient_payments"
          },
          {
            "value": "create:organization_service_facilities"
          },
          {
            "value": "read:organization_service_facilities"
          },
          {
            "value": "update:organization_service_facilities"
          },
          {
            "value": "delete:organization_service_facilities"
          },
          {
            "value": "create:resource_references"
          },
          {
            "value": "read:resource_references"
          },
          {
            "value": "update:resource_references"
          },
          {
            "value": "delete:resource_references"
          },
          {
            "value": "read:submission_configuration"
          },
          {
            "value": "update:submission_configuration"
          },
          {
            "value": "create:enrollments"
          },
          {
            "value": "update:enrollments"
          },
          {
            "value": "read:pipeline_configurations"
          },
          {
            "value": "import:change_enrollments"
          },
          {
            "value": "read:enrollments"
          },
          {
            "value": "delete:enrollments"
          },
          {
            "value": "read:role_permissions"
          },
          {
            "value": "read:chargemasters"
          },
          {
            "value": "write:chargemasters"
          },
          {
            "value": "read:patients"
          },
          {
            "value": "read:adjustments"
          },
          {
            "value": "write:adjustments"
          },
          {
            "value": "write:configurable_rules"
          },
          {
            "value": "read:payment_account_configs"
          },
          {
            "value": "write:payment_account_configs"
          },
          {
            "value": "read:patient_payment_configs"
          },
          {
            "value": "write:patient_payment_configs"
          },
          {
            "value": "read:invoice"
          },
          {
            "value": "write:invoice"
          },
          {
            "value": "read:organization_payers"
          },
          {
            "value": "write:organization_payers"
          },
          {
            "value": "read:payment_integration_configuration"
          },
          {
            "value": "compute:expected_network_status"
          },
          {
            "value": "write:secondary_submission"
          },
          {
            "value": "read:remits"
          },
          {
            "value": "write:remits"
          },
          {
            "value": "read:remits_app"
          },
          {
            "value": "read:work_queues"
          },
          {
            "value": "global:read_all_users"
          },
          {
            "value": "no_access_permission"
          },
          {
            "value": "product:incubating"
          },
          {
            "value": "execute:bulk_actions"
          }
        ],
        "type": "enum"
      }
    },
    "type_pipeline-commons:PipelineId": {
      "name": "PipelineId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_pipeline-commons:PhaseId": {
      "name": "PhaseId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_pipeline-commons:StepId": {
      "name": "StepId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_pipeline-commons:RuleId": {
      "name": "RuleId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_pipeline-commons:ConfigurableRuleId": {
      "name": "ConfigurableRuleId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_pipeline-configuration:PipelineConfiguration": {
      "name": "PipelineConfiguration",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "pipelines",
            "valueType": {
              "itemType": {
                "value": "type_pipeline-configuration:Pipeline",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_pipeline-configuration:Pipeline": {
      "name": "Pipeline",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_pipeline-commons:PipelineId",
              "type": "id"
            }
          },
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "phases",
            "valueType": {
              "itemType": {
                "value": "type_pipeline-configuration:Phase",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_pipeline-configuration:Phase": {
      "name": "Phase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_pipeline-commons:PhaseId",
              "type": "id"
            }
          },
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "steps",
            "valueType": {
              "itemType": {
                "value": "type_pipeline-configuration:Step",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_pipeline-configuration:Step": {
      "name": "Step",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_pipeline-commons:StepId",
              "type": "id"
            }
          },
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "rules",
            "valueType": {
              "itemType": {
                "value": "type_pipeline-configuration:Rule",
                "type": "id"
              },
              "type": "list"
            }
          },
          {
            "description": "Whether this step supports configurable rules. If True, then the configurable rules API should support computing configuration for this Step's Scope.",
            "key": "supports_configurable_rules",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_pipeline-configuration:OrdinaryRule": {
      "name": "OrdinaryRule",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_pipeline-commons:RuleId",
              "type": "id"
            }
          },
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_pipeline-configuration:ConfigurableRuleSummary": {
      "name": "ConfigurableRuleSummary",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "value": "type_pipeline-commons:ConfigurableRuleId",
              "type": "id"
            }
          },
          {
            "key": "name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "description",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "statement",
            "valueType": {
              "value": "type_configurable-rules-types:Statement",
              "type": "id"
            }
          },
          {
            "key": "is_enabled",
            "valueType": {
              "value": {
                "type": "boolean"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_pipeline-configuration:Rule": {
      "name": "Rule",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "ordinary_rule",
            "additionalProperties": {
              "extends": ["type_pipeline-configuration:OrdinaryRule"],
              "properties": []
            }
          },
          {
            "discriminantValue": "configurable_rule_summary",
            "additionalProperties": {
              "extends": ["type_pipeline-configuration:ConfigurableRuleSummary"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_rules_engine_types:RaResult": {
      "name": "RaResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "ra_run_id",
            "valueType": {
              "value": "type_commons:RaRunId",
              "type": "id"
            }
          },
          {
            "key": "summary",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_rules_engine_types:RulesEnginePipelineType": {
      "name": "RulesEnginePipelineType",
      "shape": {
        "values": [
          {
            "value": "CLAIM_SUBMISSION"
          },
          {
            "value": "SELF_PAY"
          },
          {
            "value": "OVERRIDE_CLAIM_SUBMISSION"
          },
          {
            "value": "TIMELY_FILING"
          },
          {
            "value": "INSURANCE_RESUBMISSION"
          },
          {
            "value": "REJECTIONS"
          },
          {
            "value": "SECONDARY_SUBMISSION"
          }
        ],
        "type": "enum"
      }
    },
    "type_rules_engine_types:RulesEngineProcessFailure": {
      "name": "RulesEngineProcessFailure",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "reason",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_rules_engine_types:RulesEngineProcessSuccess": {
      "name": "RulesEngineProcessSuccess",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "pipeline_type",
            "valueType": {
              "value": "type_rules_engine_types:RulesEnginePipelineType",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_rules_engine_types:RulesEngineProcessSuccessSync": {
      "name": "RulesEngineProcessSuccessSync",
      "shape": {
        "extends": ["type_rules_engine_types:RulesEngineProcessSuccess"],
        "properties": [
          {
            "key": "ra_result",
            "valueType": {
              "value": "type_rules_engine_types:RaResult",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_rules_engine_types:RulesEngineProcessSuccessAsync": {
      "name": "RulesEngineProcessSuccessAsync",
      "shape": {
        "extends": ["type_rules_engine_types:RulesEngineProcessSuccess"],
        "properties": [],
        "type": "object"
      }
    },
    "type_rules_engine_types:RulesEngineProcessResult": {
      "name": "RulesEngineProcessResult",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "failure",
            "additionalProperties": {
              "extends": ["type_rules_engine_types:RulesEngineProcessFailure"],
              "properties": []
            }
          },
          {
            "discriminantValue": "success_async",
            "additionalProperties": {
              "extends": ["type_rules_engine_types:RulesEngineProcessSuccessAsync"],
              "properties": []
            }
          },
          {
            "discriminantValue": "success_sync",
            "additionalProperties": {
              "extends": ["type_rules_engine_types:RulesEngineProcessSuccessSync"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_rules_engine_types:RulesEngineCheckFailure": {
      "name": "RulesEngineCheckFailure",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "reason",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_rules_engine_types:RulesEngineCheckResponse": {
      "name": "RulesEngineCheckResponse",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": [],
              "properties": []
            }
          },
          {
            "discriminantValue": "failure",
            "additionalProperties": {
              "extends": ["type_rules_engine_types:RulesEngineCheckFailure"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_service-facility:ServiceFacilityId": {
      "name": "ServiceFacilityId",
      "shape": {
        "value": {
          "value": {
            "type": "uuid"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_service-facility:EncounterServiceFacilityBase": {
      "description": "Encounter Service facility is typically the location a medical service was rendered, such as a provider office or hospital.\nFor telehealth, service facility can represent the provider's location when the service was delivered (e.g., home),\nor the location where an in-person visit would have taken place, whichever is easier to identify.\nIf the provider is in-network, service facility may be defined in payer contracts.\nBox 32 on the CMS-1500 claim form.\nNote that for an in-network claim to be successfully adjudicated, the service facility address listed on claims\nmust match what was provided to the payer during the credentialing process.\n",
      "name": "EncounterServiceFacilityBase",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "organization_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "address",
            "valueType": {
              "value": "type_commons:StreetAddressLongZip",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_service-facility:EncounterServiceFacility": {
      "name": "EncounterServiceFacility",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "service_facility_id",
            "valueType": {
              "value": "type_service-facility:ServiceFacilityId",
              "type": "id"
            }
          },
          {
            "key": "organization_name",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "address",
            "valueType": {
              "value": "type_commons:StreetAddressLongZip",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_tags:TagId": {
      "name": "TagId",
      "shape": {
        "value": {
          "value": {
            "type": "string"
          },
          "type": "primitive"
        },
        "type": "alias"
      }
    },
    "type_tags:TagCreate": {
      "name": "TagCreate",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "tag_id",
            "valueType": {
              "value": "type_tags:TagId",
              "type": "id"
            }
          },
          {
            "key": "description",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          },
          {
            "key": "color",
            "valueType": {
              "value": "type_tags:TagColorEnum",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_tags:Tag": {
      "name": "Tag",
      "shape": {
        "extends": ["type_tags:TagCreate"],
        "properties": [
          {
            "key": "creator_id",
            "valueType": {
              "value": {
                "type": "string"
              },
              "type": "primitive"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_tags:TagColorEnum": {
      "name": "TagColorEnum",
      "shape": {
        "values": [
          {
            "value": "black"
          },
          {
            "value": "white"
          },
          {
            "value": "gray"
          },
          {
            "value": "red"
          },
          {
            "value": "yellow"
          },
          {
            "value": "green"
          },
          {
            "value": "blue"
          },
          {
            "value": "indigo"
          },
          {
            "value": "purple"
          },
          {
            "value": "pink"
          }
        ],
        "type": "enum"
      }
    },
    "type_tasks/commons:TaskType": {
      "name": "TaskType",
      "shape": {
        "values": [
          {
            "value": "CUSTOMER_DATA_REQUEST"
          },
          {
            "value": "CLAIM_SUBMISSION_RUN_VALIDATIONS_FAILURE"
          },
          {
            "value": "CLAIM_SUBMISSION_SUBMIT_CLAIM_FAILURE"
          },
          {
            "value": "CLAIM_SUBMISSION_TRANSFORM_FAILURE"
          },
          {
            "value": "CODE_CLAIM"
          },
          {
            "value": "CODE_CLAIM_REVIEW"
          },
          {
            "value": "ELIGIBILITY"
          },
          {
            "value": "CLAIM_FOLLOW_UP"
          },
          {
            "value": "REJECTION_RESOLUTION"
          },
          {
            "value": "PAYER_CONFIGURATION_ERROR"
          },
          {
            "value": "DENIAL_RESOLUTION"
          },
          {
            "value": "MISSING_ENROLLMENT"
          }
        ],
        "type": "enum"
      }
    },
    "type_tasks/commons:TaskCategory": {
      "name": "TaskCategory",
      "shape": {
        "values": [
          {
            "value": "other"
          },
          {
            "value": "provider_credentialing"
          },
          {
            "value": "authorization_required"
          },
          {
            "value": "inactive_coverage"
          },
          {
            "value": "unknown_eligibility_or_patient_not_found"
          },
          {
            "value": "incorrect_member_id"
          },
          {
            "value": "documentation_addendum_request"
          },
          {
            "value": "coordination_of_benefits"
          },
          {
            "value": "missing_or_incorrect_gender"
          },
          {
            "value": "incorrect_date_of_birth"
          },
          {
            "value": "incorrect_payer"
          },
          {
            "value": "incorrect_name"
          },
          {
            "value": "invalid_diagnosis_code"
          },
          {
            "value": "non_covered_diagnosis_codes"
          },
          {
            "value": "information_requested_from_patient"
          },
          {
            "value": "incorrect_rendering_provider_info"
          },
          {
            "value": "missing_or_incorrect_modifier"
          },
          {
            "value": "coding_frequency_error"
          },
          {
            "value": "incorrect_patient_address"
          },
          {
            "value": "multiple_em_claims"
          },
          {
            "value": "missing_or_incorrect_charge_amount"
          },
          {
            "value": "medical_records_request"
          },
          {
            "value": "provider_enrollment_or_contracting"
          },
          {
            "value": "missing_or_incorrect_group_number"
          },
          {
            "value": "missing_diagnosis_codes"
          },
          {
            "value": "missing_patient_authorization"
          },
          {
            "value": "incorrect_billing_provider_info"
          },
          {
            "value": "incorrect_procedure_code"
          },
          {
            "value": "incorrect_quantity"
          },
          {
            "value": "incorrect_place_of_service_code"
          },
          {
            "value": "incorrect_service_facility_info"
          },
          {
            "value": "incorrect_date_of_service"
          },
          {
            "value": "missing_or_incorrect_ndc"
          },
          {
            "value": "patient_collections"
          },
          {
            "value": "submit_to_secondary"
          },
          {
            "value": "transient_server_error"
          },
          {
            "value": "missing_remittance_enrollment"
          },
          {
            "value": "missing_claims_enrollment"
          },
          {
            "value": "held_by_customer"
          }
        ],
        "type": "enum"
      }
    },
    "type_test-fern:ParentPatch": {
      "name": "ParentPatch",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "child_patch",
            "valueType": {
              "itemType": {
                "value": "type_test-fern:ChildPatch",
                "type": "id"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_test-fern:UnionParentPatch": {
      "name": "UnionParentPatch",
      "shape": {
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "child",
            "additionalProperties": {
              "extends": ["type_test-fern:ChildPatch"],
              "properties": []
            }
          }
        ],
        "type": "discriminatedUnion"
      }
    },
    "type_test-fern:ChildPatch": {
      "name": "ChildPatch",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "field_a",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "field_b",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "integer"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_upload-validation:FailedValidationResultType": {
      "name": "FailedValidationResultType",
      "shape": {
        "values": [
          {
            "description": "The validation failed with an unspecified type of failure.",
            "value": "UNSPECIFIED"
          },
          {
            "description": "The validation failed because the data is not complete.",
            "value": "VALIDATION"
          },
          {
            "description": "The validation failed because the item was a duplicate.",
            "value": "DUPLICATE"
          }
        ],
        "type": "enum"
      }
    },
    "type_upload-validation:FailedValidationResult": {
      "name": "FailedValidationResult",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "rowNumber",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "id",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "key": "type",
            "valueType": {
              "value": "type_upload-validation:FailedValidationResultType",
              "type": "id"
            }
          },
          {
            "key": "message",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_upload-validation:ValidationResults": {
      "name": "ValidationResults",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "totalProcessed",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "totalSuccessful",
            "valueType": {
              "value": {
                "type": "integer"
              },
              "type": "primitive"
            }
          },
          {
            "key": "failedResults",
            "valueType": {
              "itemType": {
                "value": "type_upload-validation:FailedValidationResult",
                "type": "id"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_upload-validation:IngestResults": {
      "name": "IngestResults",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "ingestedIds",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "list"
            }
          },
          {
            "key": "failedToIngestIds",
            "valueType": {
              "itemType": {
                "value": {
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": "list"
            }
          }
        ],
        "type": "object"
      }
    },
    "type_upload-validation:UploadResults": {
      "name": "UploadResults",
      "shape": {
        "extends": [],
        "properties": [
          {
            "key": "validationResults",
            "valueType": {
              "value": "type_upload-validation:ValidationResults",
              "type": "id"
            }
          },
          {
            "key": "ingestResults",
            "valueType": {
              "value": "type_upload-validation:IngestResults",
              "type": "id"
            }
          }
        ],
        "type": "object"
      }
    }
  },
  "subpackages": {
    "subpackage_auth": {
      "subpackageId": "subpackage_auth",
      "name": "auth",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_auth/v2"],
      "pointsTo": "subpackage_auth/v2"
    },
    "subpackage_auth/v2": {
      "subpackageId": "subpackage_auth/v2",
      "name": "v2",
      "endpoints": [
        {
          "auth": false,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_token",
          "name": "Get Token",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/auth/v2",
                "type": "literal"
              },
              {
                "value": "/token",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_auth/v2:AuthGetTokenRequest",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_auth/v2:AuthGetTokenResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_auth/v2:TooManyRequestsErrorType",
                "type": "id"
              },
              "statusCode": 429
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "TooManyRequestsError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_auth/v2:TooManyRequestsErrorType",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 429,
              "name": "TooManyRequestsError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_auth/v2:AuthGetTokenRequest",
        "type_auth/v2:AuthGetTokenResponse",
        "type_auth/v2:TooManyRequestsErrorType"
      ],
      "subpackages": []
    },
    "subpackage_bulk-claim-actions": {
      "subpackageId": "subpackage_bulk-claim-actions",
      "name": "bulk-claim-actions",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_bulk-claim-actions/v1"]
    },
    "subpackage_bulk-claim-actions/v1": {
      "subpackageId": "subpackage_bulk-claim-actions/v1",
      "name": "v1",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "execute",
          "name": "Execute",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/bulk-claim-actions/v1",
                "type": "literal"
              },
              {
                "value": "/execute",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "action",
                    "valueType": {
                      "value": "type_bulk-claim-actions/v1:BulkClaimAction",
                      "type": "id"
                    }
                  },
                  {
                    "key": "claims",
                    "valueType": {
                      "value": "type_bulk-claim-actions/v1:ClaimCollection",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_bulk-claim-actions/v1:BulkClaimActionExecutionResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "validate",
          "name": "Validate",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/bulk-claim-actions/v1",
                "type": "literal"
              },
              {
                "value": "/validate",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "action",
                    "valueType": {
                      "value": "type_bulk-claim-actions/v1:BulkClaimAction",
                      "type": "id"
                    }
                  },
                  {
                    "key": "claims",
                    "valueType": {
                      "value": "type_bulk-claim-actions/v1:ClaimCollection",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_bulk-claim-actions/v1:BulkClaimActionValidationResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_bulk-claim-actions/v1:ClaimIdSet",
        "type_bulk-claim-actions/v1:ClaimCollection",
        "type_bulk-claim-actions/v1:BulkClaimActionMetadata",
        "type_bulk-claim-actions/v1:NotImplementedError",
        "type_bulk-claim-actions/v1:NoPayerGeneratedControlNumberError",
        "type_bulk-claim-actions/v1:TaskRequiredForWorkQueueError",
        "type_bulk-claim-actions/v1:GenericWorkQueueError",
        "type_bulk-claim-actions/v1:UserNotAuthorizedForResubmitError",
        "type_bulk-claim-actions/v1:UserNotAuthorizedToCloseAllOpenTasksError",
        "type_bulk-claim-actions/v1:ExecutionError",
        "type_bulk-claim-actions/v1:CreateTaskConfig",
        "type_bulk-claim-actions/v1:BulkVoidClaimAction",
        "type_bulk-claim-actions/v1:BulkResubmitFreshClaimAction",
        "type_bulk-claim-actions/v1:BulkResubmitCorrectedClaimAction",
        "type_bulk-claim-actions/v1:BulkCloseTasksAndProcessClaimAction",
        "type_bulk-claim-actions/v1:MoveToWorkQueueClaimAction",
        "type_bulk-claim-actions/v1:BulkClaimAction",
        "type_bulk-claim-actions/v1:BulkClaimActionValidationErrorContents",
        "type_bulk-claim-actions/v1:BulkClaimActionValidationError",
        "type_bulk-claim-actions/v1:BulkClaimActionValidationResultBase",
        "type_bulk-claim-actions/v1:BulkClaimActionValidationSuccess",
        "type_bulk-claim-actions/v1:BulkClaimActionValidationFailure",
        "type_bulk-claim-actions/v1:BulkClaimActionValidationResult",
        "type_bulk-claim-actions/v1:BulkClaimActionValidationResponse",
        "type_bulk-claim-actions/v1:BulkClaimActionExecutionErrorContents",
        "type_bulk-claim-actions/v1:BulkClaimActionExecutionError",
        "type_bulk-claim-actions/v1:BulkClaimActionExecutionResultBase",
        "type_bulk-claim-actions/v1:BulkClaimActionExecutionSuccess",
        "type_bulk-claim-actions/v1:BulkClaimActionExecutionFailure",
        "type_bulk-claim-actions/v1:BulkClaimActionExecutionResult",
        "type_bulk-claim-actions/v1:BulkClaimActionExecutionResponse"
      ],
      "subpackages": []
    },
    "subpackage_chargemasters": {
      "subpackageId": "subpackage_chargemasters",
      "name": "chargemasters",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_chargemasters/v2"]
    },
    "subpackage_chargemasters/v2": {
      "subpackageId": "subpackage_chargemasters/v2",
      "name": "v2",
      "endpoints": [
        {
          "auth": true,
          "description": "Delete all chargemasters",
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete_all",
          "name": "Delete All",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/chargemasters/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_chargemasters/v2:DeleteAllChargemastersResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Delete a set of chargemaster entries by entry ids",
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete_entries_by_ids",
          "name": "Delete Entries By Ids",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/chargemasters/v2",
                "type": "literal"
              },
              {
                "value": "/entries",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_chargemasters/v2:DeleteChargemasterEntriesByIdsRequest",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_chargemasters/v2:ChargemasterId",
        "type_chargemasters/v2:ChargemasterEntryId",
        "type_chargemasters/v2:DeleteAllChargemastersResponse",
        "type_chargemasters/v2:DeleteChargemasterEntriesByIdsRequest"
      ],
      "subpackages": []
    },
    "subpackage_claim": {
      "subpackageId": "subpackage_claim",
      "name": "claim",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_claim/v2"]
    },
    "subpackage_claim/v2": {
      "subpackageId": "subpackage_claim/v2",
      "name": "v2",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_service_line_adjudication_details",
          "name": "Get Service Line Adjudication Details",
          "path": {
            "pathParameters": [
              {
                "key": "claim_id",
                "type": {
                  "value": "type_commons:ClaimId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/claims/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "claim_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_claim/v2:ServiceLineAdjudicationDetailsResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_statuses",
          "name": "Get Statuses",
          "path": {
            "pathParameters": [
              {
                "key": "claim_id",
                "type": {
                  "value": "type_commons:ClaimId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/claims/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "claim_id",
                "type": "pathParameter"
              },
              {
                "value": "/statuses",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "itemType": {
                  "value": "type_claim/v2:ClaimStatusMetadata",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_claim/v2:FeeScheduleEntryId",
        "type_claim/v2:BoundFeeScheduleId",
        "type_claim/v2:FeeScheduleId",
        "type_claim/v2:ServiceLineAdjudicationDetailsResponse",
        "type_claim/v2:ServiceLineAdjudicationDetail",
        "type_claim/v2:LegacyMatchResults",
        "type_claim/v2:AdjudicationMatchResultsUnion",
        "type_claim/v2:AdjudicationMatchResults",
        "type_claim/v2:PotentialMatches",
        "type_claim/v2:MatchResult",
        "type_claim/v2:ClaimStatusMetadata"
      ],
      "subpackages": []
    },
    "subpackage_encounter-providers": {
      "subpackageId": "subpackage_encounter-providers",
      "name": "encounter-providers",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_encounter-providers/v2"]
    },
    "subpackage_encounter-providers/v2": {
      "subpackageId": "subpackage_encounter-providers/v2",
      "name": "v2",
      "endpoints": [
        {
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update_referring_provider",
          "name": "Update Referring Provider",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/encounter-providers/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_encounter-providers/v2:ReferringProviderUpdate",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_encounter-providers/v2:ReferringProvider",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_encounter-providers/v2:EncounterProviderBase",
        "type_encounter-providers/v2:RenderingProvider",
        "type_encounter-providers/v2:ReferringProvider",
        "type_encounter-providers/v2:ReferringProviderUpdate",
        "type_encounter-providers/v2:BillingProvider",
        "type_encounter-providers/v2:ProviderId",
        "type_encounter-providers/v2:EncounterProvider"
      ],
      "subpackages": []
    },
    "subpackage_encounter-summaries": {
      "subpackageId": "subpackage_encounter-summaries",
      "name": "encounter-summaries",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_encounter-summaries/v1"]
    },
    "subpackage_encounter-summaries/v1": {
      "subpackageId": "subpackage_encounter-summaries/v1",
      "name": "v1",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getSummaries",
          "name": "Get Summaries",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/encounter-summaries/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "claim_status",
              "type": {
                "itemType": {
                  "value": "type_claims:ClaimStatus",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to created_at:desc",
              "key": "sort",
              "type": {
                "itemType": {
                  "value": "type_encounters/v4:EncounterSortOptions",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to created_at",
              "key": "sort_field",
              "type": {
                "itemType": {
                  "value": "type_encounter-summaries/v1:EncounterSortableFields",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to descending",
              "key": "sort_direction",
              "type": {
                "itemType": {
                  "value": "type_encounter-summaries/v1:EncounterSortDirections",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "date_of_service_min",
              "type": {
                "itemType": {
                  "value": {
                    "type": "date"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "date_of_service_max",
              "type": {
                "itemType": {
                  "value": {
                    "type": "date"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "sum_charge_amount_cents_min",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "sum_charge_amount_cents_max",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "sum_allowed_amount_cents_min",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "sum_allowed_amount_cents_max",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "sum_paid_amount_cents_min",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "sum_paid_amount_cents_max",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "sum_patient_responsibility_cents_min",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "sum_patient_responsibility_cents_max",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "primary_payer_ids",
              "type": {
                "itemType": {
                  "value": "type_payers:PayerId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Comma delimited string",
              "key": "primary_payer_names",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter by any of the following fields: encounter_id, claim_id, patient external_id,\npatient date of birth, patient first name, patient last name,\nor encounter external id.\n",
              "key": "search_term",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to an exact match on encounter external_id, if one exists",
              "key": "encounter_external_id",
              "type": {
                "itemType": {
                  "value": "type_commons:EncounterExternalId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "ISO 8601 timestamp; ideally in UTC (although not required): 2019-08-24T14:15:22Z\n",
              "key": "diagnoses_updated_since",
              "type": {
                "itemType": {
                  "value": {
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "tag_ids",
              "type": {
                "itemType": {
                  "value": "type_tags:TagId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "carcs",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "rarcs",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "denial_reasons",
              "type": {
                "itemType": {
                  "value": "type_service-lines/v2:DenialReasonContent",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "rejection_reasons",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "procedure_codes",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "procedure_modifiers",
              "type": {
                "itemType": {
                  "value": "type_commons:ProcedureModifier",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "billing_provider_npis",
              "type": {
                "itemType": {
                  "value": "type_commons:Npi",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "billing_provider_tins",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "rendering_provider_npis",
              "type": {
                "itemType": {
                  "value": "type_commons:Npi",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "rendering_provider_tins",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "billable_status",
              "type": {
                "itemType": {
                  "value": "type_encounters/v4:BillableStatusType",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "responsible_party",
              "type": {
                "itemType": {
                  "value": "type_encounters/v4:ResponsiblePartyType",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "work_queue_id",
              "type": {
                "itemType": {
                  "value": "type_commons:WorkQueueId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "owner_of_next_action",
              "type": {
                "itemType": {
                  "value": "type_encounters/v4:EncounterOwnerOfNextActionType",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_encounter-summaries/v1:EncounterSummaryPage",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getSummary",
          "name": "Get Summary",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/encounter-summaries/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_encounter-summaries/v1:EncounterSummary",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_encounter-summaries/v1:EncounterSortableFields",
        "type_encounter-summaries/v1:EncounterSortDirections",
        "type_encounter-summaries/v1:EncounterSummary",
        "type_encounter-summaries/v1:EncounterSummaryPage"
      ],
      "subpackages": []
    },
    "subpackage_encounters-internal": {
      "subpackageId": "subpackage_encounters-internal",
      "name": "encounters-internal",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_encounters-internal/v1"]
    },
    "subpackage_encounters-internal/v1": {
      "subpackageId": "subpackage_encounters-internal/v1",
      "name": "v1",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "reverse_manual_insurance_adjustment_remit",
          "name": "Reverse Manual Insurance Adjustment Remit",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              },
              {
                "key": "remit_id",
                "type": {
                  "value": "type_remits/v1:RemitId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/encounters-internal/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "/reverse-remit/",
                "type": "literal"
              },
              {
                "value": "remit_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_encounters-internal/v1:RemitReversalResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "calculate_financial_information",
          "name": "Calculate Financial Information",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/encounters-internal/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "/financial-information",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_encounters-internal/v1:EncounterFinancialInformationResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_encounters-internal/v1:RemitReversalResponse",
        "type_encounters-internal/v1:EncounterFinancialInformation",
        "type_encounters-internal/v1:PrimaryEncounterFinancialInformation",
        "type_encounters-internal/v1:MultiplePayerResponsibilityEncounterFinancialInformation",
        "type_encounters-internal/v1:EncounterFinancialInformationByPayerResponsibilityResponse",
        "type_encounters-internal/v1:EncounterFinancialInformationResponse"
      ],
      "subpackages": []
    },
    "subpackage_encounters": {
      "subpackageId": "subpackage_encounters",
      "name": "encounters",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_encounters/v4"],
      "pointsTo": "subpackage_encounters/v4"
    },
    "subpackage_encounters/v4": {
      "subpackageId": "subpackage_encounters/v4",
      "name": "v4",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getAll",
          "name": "Get all encounters",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/encounters/v4",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "claim_status",
              "type": {
                "itemType": {
                  "value": "type_claims:ClaimStatus",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to created_at:desc",
              "key": "sort",
              "type": {
                "itemType": {
                  "value": "type_encounters/v4:EncounterSortOptions",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "date_of_service_min",
              "type": {
                "itemType": {
                  "value": "type_commons:Date",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "date_of_service_max",
              "type": {
                "itemType": {
                  "value": "type_commons:Date",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Comma delimited string",
              "key": "primary_payer_names",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter by any of the following fields: encounter_id, claim_id, patient external_id,\npatient date of birth, patient first name, patient last name,\nor encounter external id.\n",
              "key": "search_term",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to an exact match on encounter external_id, if one exists",
              "key": "external_id",
              "type": {
                "itemType": {
                  "value": "type_commons:EncounterExternalId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "ISO 8601 timestamp; ideally in UTC (although not required): 2019-08-24T14:15:22Z\n",
              "key": "diagnoses_updated_since",
              "type": {
                "itemType": {
                  "value": {
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "tag_ids",
              "type": {
                "itemType": {
                  "value": "type_tags:TagId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "work_queue_id",
              "type": {
                "itemType": {
                  "value": "type_commons:WorkQueueId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "billable_status",
              "type": {
                "itemType": {
                  "value": "type_encounters/v4:BillableStatusType",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "responsible_party",
              "type": {
                "itemType": {
                  "value": "type_encounters/v4:ResponsiblePartyType",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "owner_of_next_action",
              "type": {
                "itemType": {
                  "value": "type_encounters/v4:EncounterOwnerOfNextActionType",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_encounters/v4:EncounterPage",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get encounter",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/encounters/v4",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_encounters/v4:Encounter",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create encounter",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/encounters/v4",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": ["type_encounters/v4:EncounterBase"],
                "properties": [
                  {
                    "key": "patient",
                    "valueType": {
                      "value": "type_individual:PatientCreate",
                      "type": "id"
                    }
                  },
                  {
                    "key": "billing_provider",
                    "valueType": {
                      "value": "type_encounter-providers/v2:BillingProvider",
                      "type": "id"
                    }
                  },
                  {
                    "key": "rendering_provider",
                    "valueType": {
                      "value": "type_encounter-providers/v2:RenderingProvider",
                      "type": "id"
                    }
                  },
                  {
                    "description": "The provider who referred the services that were rendered.\nAll physicians who order services or refer Medicare beneficiaries must\nreport this data.\nIf a claim involves multiple referring physicians, create a separate\nencounter for each physician.\n",
                    "key": "referring_provider",
                    "valueType": {
                      "itemType": {
                        "value": "type_encounter-providers/v2:ReferringProvider",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "service_facility",
                    "valueType": {
                      "itemType": {
                        "value": "type_service-facility:EncounterServiceFacilityBase",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Subscriber_primary is required when responsible_party is INSURANCE_PAY (i.e. when the claim should be billed to insurance).\nThese are not required fields when responsible_party is SELF_PAY (i.e. when the claim should be billed to the patient).\nHowever, if you collect this for patients, even self-pay, we recommend including it when sending encounters to Candid.\nNote: Cash Pay is no longer a valid payer_id in v4, please use responsible party to define self-pay claims\n",
                    "key": "subscriber_primary",
                    "valueType": {
                      "itemType": {
                        "value": "type_individual:SubscriberCreate",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Please always include this when you have it, even for self-pay claims\n",
                    "key": "subscriber_secondary",
                    "valueType": {
                      "itemType": {
                        "value": "type_individual:SubscriberCreate",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Ideally, this field should contain no more than 12 diagnoses. However, more diagnoses\nmay be submitted at this time, and coders will later prioritize the 12 that will be\nsubmitted to the payor.\n",
                    "key": "diagnoses",
                    "valueType": {
                      "itemType": {
                        "value": "type_diagnoses:DiagnosisCreate",
                        "type": "id"
                      },
                      "type": "list"
                    }
                  },
                  {
                    "key": "clinical_notes",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_encounters/v4:ClinicalNoteCategoryCreate",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Spot to store misc, human-readable, notes about this encounter to be used\nin the billing process.\n",
                    "key": "billing_notes",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_billing-notes:BillingNoteBase",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "place_of_service_code",
                    "valueType": {
                      "value": "type_commons:FacilityTypeCode",
                      "type": "id"
                    }
                  },
                  {
                    "key": "patient_histories",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_encounters/v4:PatientHistoryCategory",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Each service line must be linked to a diagnosis. Concretely,\n`service_line.diagnosis_pointers`must contain at least one entry which should be\nin bounds of the diagnoses list field\n",
                    "key": "service_lines",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_service-lines/v2:ServiceLineCreate",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Personal and contact info for the guarantor of the patient responsibility.\n",
                    "key": "guarantor",
                    "valueType": {
                      "itemType": {
                        "value": "type_guarantor/v1:GuarantorCreate",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_encounters/v4:Encounter",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_encounters/v4:EncounterExternalIdUniquenessErrorType",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_encounters/v4:EncounterGuarantorMissingContactInfoErrorType",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "itemType": {
                  "value": "type_commons:RequestValidationError",
                  "type": "id"
                },
                "type": "list"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_encounters/v4:CashPayPayerErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EncounterExternalIdUniquenessError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_encounters/v4:EncounterExternalIdUniquenessErrorType",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "EncounterExternalIdUniquenessError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EncounterGuarantorMissingContactInfoError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_encounters/v4:EncounterGuarantorMissingContactInfoErrorType",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "EncounterGuarantorMissingContactInfoError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "HttpRequestValidationsError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:RequestValidationError",
                        "type": "id"
                      },
                      "type": "list"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "HttpRequestValidationsError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "CashPayPayerError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_encounters/v4:CashPayPayerErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "CashPayPayerError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update encounter",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/encounters/v4",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "Box 23 on the CMS-1500 claim form.",
                    "key": "prior_authorization_number",
                    "valueType": {
                      "itemType": {
                        "value": "type_encounters/v4:PriorAuthorizationNumber",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "A client-specified unique ID to associate with this encounter;\nfor example, your internal encounter ID or a Dr. Chrono encounter ID.\nThis field should not contain PHI.\n",
                    "key": "external_id",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:EncounterExternalId",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Date formatted as YYYY-MM-DD; eg: 2019-08-24.\nThis date must be the local date in the timezone where the service occurred.\nBox 24a on the CMS-1500 claim form.\nIf service occurred over a range of dates, this should be the start date.\n",
                    "key": "date_of_service",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:Date",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Ideally, this field should contain no more than 12 diagnoses. However, more diagnoses\nmay be submitted at this time, and coders will later prioritize the 12 that will be\nsubmitted to the payor.\n",
                    "key": "diagnosis_ids",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_diagnoses:DiagnosisId",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "tag_ids",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_tags:TagId",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "clinical_notes",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_encounters/v4:ClinicalNoteCategoryCreate",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "pay_to_address",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:StreetAddressLongZip",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "billable_status",
                    "valueType": {
                      "itemType": {
                        "value": "type_encounters/v4:BillableStatusType",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "responsible_party",
                    "valueType": {
                      "itemType": {
                        "value": "type_encounters/v4:ResponsiblePartyType",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "provider_accepts_assignment",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "benefits_assigned_to_provider",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "synchronicity",
                    "valueType": {
                      "itemType": {
                        "value": "type_encounters/v4:SynchronicityType",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "place_of_service_code",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:FacilityTypeCode",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "appointment_type",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "end_date_of_service",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:Date",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "subscriber_secondary",
                    "valueType": {
                      "itemType": {
                        "value": "type_individual:SubscriberCreate",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_encounters/v4:Encounter",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_encounters/v4:EncounterExternalIdUniquenessErrorType",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            },
            {
              "type": {
                "itemType": {
                  "value": "type_commons:RequestValidationError",
                  "type": "id"
                },
                "type": "list"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EncounterExternalIdUniquenessError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_encounters/v4:EncounterExternalIdUniquenessErrorType",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "EncounterExternalIdUniquenessError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "HttpRequestValidationsError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:RequestValidationError",
                        "type": "id"
                      },
                      "type": "list"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "HttpRequestValidationsError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getAttachments",
          "name": "Get attachments for encounter",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/encounters/v4",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "/attachments",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "itemType": {
                  "value": "type_encounters/v4:EncounterAttachment",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "generateClinicalNotesPdf",
          "name": "Generate clinical notes PDF",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/encounters/v4",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "/clinical-notes-pdf/generate",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_encounters/v4:GenerateClinicalNotesPdfResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Initiates a re-calculation of the contracting status",
          "method": "PUT",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "recomputeNetworkStatusResults",
          "name": "Recompute encounter network status",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/encounters/v4",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "/network-status-results",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_encounters/v4:NetworkStatusComputationResults",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "markAsNotBillable",
          "name": "Mark encounter not billable",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/encounters/v4",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "/mark-as-not-billable",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_encounters/v4:MarkAsNotBillableResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_encounters/v4:EncounterBase",
        "type_encounters/v4:Encounter",
        "type_encounters/v4:EncounterSortOptions",
        "type_encounters/v4:Medication",
        "type_encounters/v4:Vitals",
        "type_encounters/v4:Intervention",
        "type_encounters/v4:InterventionCategory",
        "type_encounters/v4:Lab",
        "type_encounters/v4:LabCodeType",
        "type_encounters/v4:PatientHistoryCategory",
        "type_encounters/v4:PatientHistoryCategoryEnum",
        "type_encounters/v4:IntakeQuestion",
        "type_encounters/v4:IntakeResponseAndFollowUps",
        "type_encounters/v4:IntakeFollowUp",
        "type_encounters/v4:ClinicalNoteCategoryCreate",
        "type_encounters/v4:ClinicalNoteCategory",
        "type_encounters/v4:NoteCategory",
        "type_encounters/v4:ClinicalNote",
        "type_encounters/v4:ResponsiblePartyType",
        "type_encounters/v4:BillableStatusType",
        "type_encounters/v4:EncounterOwnerOfNextActionType",
        "type_encounters/v4:SynchronicityType",
        "type_encounters/v4:CodingAttributionType",
        "type_encounters/v4:AttachmentId",
        "type_encounters/v4:BaseAttachment",
        "type_encounters/v4:EncounterAttachment",
        "type_encounters/v4:EncounterAttachmentType",
        "type_encounters/v4:GenerateClinicalNotesPdfResponse",
        "type_encounters/v4:SuccessfulGenerateClinicalNotesPdfResponse",
        "type_encounters/v4:NetworkStatusComputationResults",
        "type_encounters/v4:AttributableContractingStatusResult",
        "type_encounters/v4:OutOfNetworkContractingStatusResult",
        "type_encounters/v4:ContractingOutOfOfNetworkReason",
        "type_encounters/v4:InNetworkContractingStatusResult",
        "type_encounters/v4:NetworkStatus",
        "type_encounters/v4:MarkAsNotBillableResponse",
        "type_encounters/v4:EncounterPage",
        "type_encounters/v4:PriorAuthorizationNumber",
        "type_encounters/v4:RxCui",
        "type_encounters/v4:IntakeQuestionId",
        "type_encounters/v4:IntakeFollowUpId",
        "type_encounters/v4:EncounterExternalIdUniquenessErrorType",
        "type_encounters/v4:EncounterGuarantorMissingContactInfoErrorType",
        "type_encounters/v4:CashPayPayerErrorMessage"
      ],
      "subpackages": []
    },
    "subpackage_expected-network-status-tia": {
      "subpackageId": "subpackage_expected-network-status-tia",
      "name": "expected-network-status-tia",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_expected-network-status-tia/v1"]
    },
    "subpackage_expected-network-status-tia/v1": {
      "subpackageId": "subpackage_expected-network-status-tia/v1",
      "name": "v1",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "compute",
          "name": "Compute",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/expected-network-status-tia/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "external_patient_id",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "subscriber_payer_id",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "subscriber_payer_name",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "subscriber_insurance_type",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:InsuranceTypeCode",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "subscriber_plan_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "subscriber_member_id",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "rendering_provider_npi",
                    "valueType": {
                      "value": "type_commons:Npi",
                      "type": "id"
                    }
                  },
                  {
                    "key": "contracted_state",
                    "valueType": {
                      "value": "type_commons:State",
                      "type": "id"
                    }
                  },
                  {
                    "key": "date_of_service",
                    "valueType": {
                      "value": {
                        "type": "date"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "market",
                    "valueType": {
                      "value": "type_expected-network-status-tia/v1:Market",
                      "type": "id"
                    }
                  },
                  {
                    "key": "service_facility_zip_code",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "service_facility_state",
                    "valueType": {
                      "value": "type_commons:State",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_expected-network-status-tia/v1:TiaExpectedNetworkStatusResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            },
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_expected-network-status-tia/v1:Market",
        "type_expected-network-status-tia/v1:TiaExpectedNetworkStatusResponse"
      ],
      "subpackages": []
    },
    "subpackage_expected-network-status": {
      "subpackageId": "subpackage_expected-network-status",
      "name": "expected-network-status",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_expected-network-status/v1"]
    },
    "subpackage_expected-network-status/v1": {
      "subpackageId": "subpackage_expected-network-status/v1",
      "name": "v1",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "compute",
          "name": "Compute network status",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/expected-network-status/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "external_patient_id",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "subscriber_payer_id",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "subscriber_payer_name",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "subscriber_insurance_type",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:InsuranceTypeCode",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "subscriber_plan_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "billing_provider_npi",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "billing_provider_tin",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "rendering_provider_npi",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "contracted_state",
                    "valueType": {
                      "value": "type_commons:State",
                      "type": "id"
                    }
                  },
                  {
                    "key": "date_of_service",
                    "valueType": {
                      "value": "type_commons:Date",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_expected-network-status/v1:ExpectedNetworkStatusResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_expected-network-status/v1:ExpectedNetworkStatus",
        "type_expected-network-status/v1:ExpectedNetworkStatusResponse"
      ],
      "subpackages": []
    },
    "subpackage_exports": {
      "subpackageId": "subpackage_exports",
      "name": "exports",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_exports/v3"]
    },
    "subpackage_exports/v3": {
      "subpackageId": "subpackage_exports/v3",
      "name": "v3",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_exports",
          "name": "Get Exports",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/exports/v3",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Beginning date of claim versions returned in the export, ISO 8601 date e.g. 2019-08-24.\nMust be at least 1 calendar day in the past. Cannot be earlier than 2022-10-07.\n",
              "key": "start_date",
              "type": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              }
            },
            {
              "description": "Ending date of claim versions returned in the export, ISO 8601 date; e.g. 2019-08-24.\nMust be within 30 days of start_date.\n",
              "key": "end_date",
              "type": {
                "value": {
                  "type": "date"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_exports/v3:GetExportsResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "itemType": {
                  "value": "type_commons:RequestValidationError",
                  "type": "id"
                },
                "type": "list"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_commons:ErrorMessage",
                "type": "id"
              },
              "statusCode": 503
            },
            {
              "type": {
                "value": "type_commons:ErrorMessage",
                "type": "id"
              },
              "statusCode": 503
            },
            {
              "type": {
                "value": "type_commons:ErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_commons:ErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "HttpRequestValidationsError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:RequestValidationError",
                        "type": "id"
                      },
                      "type": "list"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "HttpRequestValidationsError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "ExportFilesUnavailableError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:ErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 503,
              "name": "ExportFilesUnavailableError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "MissingDailyIncrementalExportFileError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:ErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 503,
              "name": "MissingDailyIncrementalExportFileError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "ExportNotYetAvailableError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:ErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "ExportNotYetAvailableError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "ExportDateTooEarlyError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:ErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "ExportDateTooEarlyError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": ["type_exports/v3:GetExportsResponse"],
      "subpackages": []
    },
    "subpackage_fee-schedules": {
      "subpackageId": "subpackage_fee-schedules",
      "name": "fee-schedules",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_fee-schedules/v1", "subpackage_fee-schedules/v2"]
    },
    "subpackage_fee-schedules/v1": {
      "subpackageId": "subpackage_fee-schedules/v1",
      "name": "v1",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/fee-schedules/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "procedure_code_search_term",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "procedure_codes",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "modifiers",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "payer_uuids",
              "type": {
                "itemType": {
                  "value": "type_payers:PayerUuid",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "network_types",
              "type": {
                "itemType": {
                  "value": "type_fee-schedules/v1:NetworkType",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "sort_order",
              "type": {
                "itemType": {
                  "value": "type_commons:SortDirection",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "sort_field",
              "type": {
                "itemType": {
                  "value": "type_fee-schedules/v1:FeeScheduleConfigSortFields",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to 100. The value must be greater than 0 and less than 1000.",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_fee-schedules/v1:FeeScheduleEntryConfigPage",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_fee-schedules/v1:FeeScheduleEntryConfigId",
        "type_fee-schedules/v1:FacilityType",
        "type_fee-schedules/v1:Modifier",
        "type_fee-schedules/v1:FeeScheduleConfigModifier",
        "type_fee-schedules/v1:NetworkType",
        "type_fee-schedules/v1:FeeScheduleEntryConfigBase",
        "type_fee-schedules/v1:FeeScheduleEntryConfig",
        "type_fee-schedules/v1:FeeScheduleConfigSortFields",
        "type_fee-schedules/v1:FeeScheduleConfigFilters",
        "type_fee-schedules/v1:FeeScheduleEntryConfigPage"
      ],
      "subpackages": []
    },
    "subpackage_fee-schedules/v2": {
      "subpackageId": "subpackage_fee-schedules/v2",
      "name": "v2",
      "endpoints": [
        {
          "auth": true,
          "description": "Gets which fee schedule configuration mechanism the current organization is using.",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_fee_schedule_configuration_mechanism",
          "name": "Get Fee Schedule Configuration Mechanism",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/fee-schedules/v2",
                "type": "literal"
              },
              {
                "value": "/fee-schedule-configuration-mechanism",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_fee-schedules/v2:GetFeeScheduleConfigurationMechanismResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Gets bound fee schedules for a given payer grouped by billing provider NPI.\nThis is intended for Candid App usage, different from a get_multi endpoint that\ndoesn't data wrangle the modeling into the presentation shape.\n",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_grouped_fee_schedules_for_payer",
          "name": "Get Grouped Fee Schedules For Payer",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/fee-schedules/v2",
                "type": "literal"
              },
              {
                "value": "/grouped",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The payer",
              "key": "payer_uuid",
              "type": {
                "value": "type_payers:PayerUuid",
                "type": "id"
              }
            },
            {
              "key": "license_types",
              "type": {
                "itemType": {
                  "value": "type_organization-providers/v2:LicenseType",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "geographies",
              "type": {
                "itemType": {
                  "value": "type_commons:State",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "networks",
              "type": {
                "itemType": {
                  "value": "type_fee-schedules/v2:Network",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Limit the number of results returned. Defaults to 100.",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "The page token to continue paging through a previous request",
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_fee-schedules/v2:GetGroupedFeeSchedulesForPayerResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:RequestValidationError",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "HttpRequestValidationError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:RequestValidationError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "HttpRequestValidationError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Get the unpaginated fee schedule entries for a provided bound fee schedule.",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_bound_fee_schedule",
          "name": "Get Bound Fee Schedule",
          "path": {
            "pathParameters": [
              {
                "key": "fee_schedule_id",
                "type": {
                  "value": "type_fee-schedules/v2:FeeScheduleId",
                  "type": "id"
                }
              },
              {
                "key": "bound_fee_schedule_id",
                "type": {
                  "value": "type_fee-schedules/v2:BoundFeeScheduleId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/fee-schedules/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "fee_schedule_id",
                "type": "pathParameter"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "bound_fee_schedule_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_fee-schedules/v2:GetBoundFeeScheduleResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_fee-schedules/v2:FeeScheduleId",
        "type_fee-schedules/v2:BoundFeeScheduleId",
        "type_fee-schedules/v2:FeeScheduleEntryId",
        "type_fee-schedules/v2:Network",
        "type_fee-schedules/v2:PlaceOfServiceCategory",
        "type_fee-schedules/v2:FeeScheduleGeography",
        "type_fee-schedules/v2:LicenseTypeCoverage",
        "type_fee-schedules/v2:NetworkCoverage",
        "type_fee-schedules/v2:GeographyCoverage",
        "type_fee-schedules/v2:PlaceOfServiceCoverage",
        "type_fee-schedules/v2:FeeScheduleConfigurationMechanism",
        "type_fee-schedules/v2:GetFeeScheduleConfigurationMechanismResponse",
        "type_fee-schedules/v2:ReferenceFeeScheduleMetadata",
        "type_fee-schedules/v2:BoundFeeSchedule",
        "type_fee-schedules/v2:GroupedFeeSchedules",
        "type_fee-schedules/v2:GetGroupedFeeSchedulesForPayerPage",
        "type_fee-schedules/v2:GetGroupedFeeSchedulesForPayerResponse",
        "type_fee-schedules/v2:FeeScheduleEntry",
        "type_fee-schedules/v2:GetBoundFeeScheduleResponse"
      ],
      "subpackages": []
    },
    "subpackage_guarantor": {
      "subpackageId": "subpackage_guarantor",
      "name": "guarantor",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_guarantor/v1"]
    },
    "subpackage_guarantor/v1": {
      "subpackageId": "subpackage_guarantor/v1",
      "name": "v1",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/guarantors/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_guarantor/v1:GuarantorCreate",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_guarantor/v1:Guarantor",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_guarantor/v1:EncounterHasExistingGuarantorErrorType",
                "type": "id"
              },
              "statusCode": 409
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EncounterHasExistingGuarantorError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_guarantor/v1:EncounterHasExistingGuarantorErrorType",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 409,
              "name": "EncounterHasExistingGuarantorError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "guarantor_id",
                "type": {
                  "value": "type_guarantor/v1:GuarantorId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/guarantors/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "guarantor_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_guarantor/v1:Guarantor",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "guarantor_id",
                "type": {
                  "value": "type_guarantor/v1:GuarantorId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/guarantors/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "guarantor_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "first_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "last_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "external_id",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "date_of_birth",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "date"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "address",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:StreetAddressShortZip",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "phone_numbers",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_commons:PhoneNumber",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "phone_consent",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "email",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:Email",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "email_consent",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_guarantor/v1:Guarantor",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_guarantor/v1:GuarantorId",
        "type_guarantor/v1:GuarantorBase",
        "type_guarantor/v1:Guarantor",
        "type_guarantor/v1:GuarantorCreate",
        "type_guarantor/v1:EncounterHasExistingGuarantorErrorType"
      ],
      "subpackages": []
    },
    "subpackage_insurance-adjustments": {
      "subpackageId": "subpackage_insurance-adjustments",
      "name": "insurance-adjustments",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_insurance-adjustments/v1"]
    },
    "subpackage_insurance-adjustments/v1": {
      "subpackageId": "subpackage_insurance-adjustments/v1",
      "name": "v1",
      "endpoints": [
        {
          "auth": true,
          "description": "Validate an insurance adjustment before creating it. This endpoint also instructs the client on what the adjustment and other PR amounts should be.\n",
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "validate_insurance_adjustment",
          "name": "Validate Insurance Adjustment",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/insurance-adjustments/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "/validate",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentRequest",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentFieldsErrorsType",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "ValidateInsuranceAdjustmentFieldsError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentFieldsErrorsType",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "ValidateInsuranceAdjustmentFieldsError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create_insurance_adjustment",
          "name": "Create Insurance Adjustment",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/insurance-adjustments/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "/create",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_insurance-adjustments/v1:CreateInsuranceAdjustmentRequest",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_insurance-adjustments/v1:CreateInsuranceAdjustmentResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_insurance-adjustments/v1:CreateInsuranceAdjustmentFieldsErrorsType",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "CreateInsuranceAdjustmentFieldsError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_insurance-adjustments/v1:CreateInsuranceAdjustmentFieldsErrorsType",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "CreateInsuranceAdjustmentFieldsError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Upload an attachment to an insurance adjustment. This endpoint should remain internal only until Fern can support file uploads\n",
          "method": "PUT",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "upload_attachment",
          "name": "Upload Attachment",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              },
              {
                "key": "insurance_adjustment_id",
                "type": {
                  "value": "type_insurance-adjustments/v1:InsuranceAdjustmentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/insurance-adjustments/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "/attachments/",
                "type": "literal"
              },
              {
                "value": "insurance_adjustment_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_insurance-adjustments/v1:InsuranceAdjustmentAttachmentId",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_insurance-adjustments/v1:InsuranceAdjustmentId",
        "type_insurance-adjustments/v1:ClaimAdjustmentReasonCode",
        "type_insurance-adjustments/v1:RemittanceAdviceRemarkCode",
        "type_insurance-adjustments/v1:InsuranceAdjustmentAttachmentId",
        "type_insurance-adjustments/v1:InsuranceAdjustmentAttachmentResponse",
        "type_insurance-adjustments/v1:ServiceLineAdjustmentRequest",
        "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentRequest",
        "type_insurance-adjustments/v1:ValidateServiceLineAdjustmentResponse",
        "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentResponse",
        "type_insurance-adjustments/v1:CreateInsuranceAdjustmentRequest",
        "type_insurance-adjustments/v1:CreateInsuranceAdjustmentResponse",
        "type_insurance-adjustments/v1:OtherFieldError",
        "type_insurance-adjustments/v1:CarcGroupCodeError",
        "type_insurance-adjustments/v1:CarcReasonCodeError",
        "type_insurance-adjustments/v1:CarcAmountError",
        "type_insurance-adjustments/v1:CarcPropertyFieldError",
        "type_insurance-adjustments/v1:RarcReasonCodeError",
        "type_insurance-adjustments/v1:RarcPropertyFieldError",
        "type_insurance-adjustments/v1:DenialReasonFieldError",
        "type_insurance-adjustments/v1:InsuranceAllowedFieldError",
        "type_insurance-adjustments/v1:InsurancePaidFieldError",
        "type_insurance-adjustments/v1:DeductibleFieldError",
        "type_insurance-adjustments/v1:CoinsuranceFieldError",
        "type_insurance-adjustments/v1:CopayFieldError",
        "type_insurance-adjustments/v1:CarcFieldError",
        "type_insurance-adjustments/v1:RarcFieldError",
        "type_insurance-adjustments/v1:InvalidDeniedAdjustmentAmountError",
        "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentFieldError",
        "type_insurance-adjustments/v1:ValidateInsuranceAdjustmentFieldsErrorsType",
        "type_insurance-adjustments/v1:CreateInsuranceAdjustmentFieldError",
        "type_insurance-adjustments/v1:CreateInsuranceAdjustmentFieldsErrorsType"
      ],
      "subpackages": []
    },
    "subpackage_internal-api-testing": {
      "subpackageId": "subpackage_internal-api-testing",
      "name": "internal-api-testing",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_internal-api-testing/v1"]
    },
    "subpackage_internal-api-testing/v1": {
      "subpackageId": "subpackage_internal-api-testing/v1",
      "name": "v1",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create_movie",
          "name": "Create Movie",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/internal-api-testing/v1",
                "type": "literal"
              },
              {
                "value": "/movies",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_internal-api-testing/v1:MovieCreate",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_internal-api-testing/v1:Movie",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityConflictErrorMessage",
                "type": "id"
              },
              "statusCode": 409
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityConflictError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityConflictErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 409,
              "name": "EntityConflictError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_movie",
          "name": "Get Movie",
          "path": {
            "pathParameters": [
              {
                "key": "movie_name",
                "type": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/internal-api-testing/v1",
                "type": "literal"
              },
              {
                "value": "/movies/",
                "type": "literal"
              },
              {
                "value": "movie_name",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_internal-api-testing/v1:Movie",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_internal-api-testing/v1:Movie",
        "type_internal-api-testing/v1:Director",
        "type_internal-api-testing/v1:MovieCreate"
      ],
      "subpackages": []
    },
    "subpackage_managed-emr-configs": {
      "subpackageId": "subpackage_managed-emr-configs",
      "name": "managed-emr-configs",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_managed-emr-configs/v1"]
    },
    "subpackage_managed-emr-configs/v1": {
      "subpackageId": "subpackage_managed-emr-configs/v1",
      "name": "v1",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getById",
          "name": "Get By Id",
          "path": {
            "pathParameters": [
              {
                "key": "managed_emr_config_id",
                "type": {
                  "value": "type_managed-emr-configs/v1:ManagedEmrConfigId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/managed-emr-configs/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "managed_emr_config_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_managed-emr-configs/v1:ManagedEmrConfig",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getMulti",
          "name": "Get Multi",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/managed-emr-configs/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "enabled",
              "type": {
                "itemType": {
                  "value": {
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_managed-emr-configs/v1:ManagedEmrConfigPage",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/managed-emr-configs/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_managed-emr-configs/v1:ManagedEmrConfigCreate",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_managed-emr-configs/v1:ManagedEmrConfig",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityConflictErrorMessage",
                "type": "id"
              },
              "statusCode": 409
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityConflictError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityConflictErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 409,
              "name": "EntityConflictError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "managed_emr_config_id",
                "type": {
                  "value": "type_managed-emr-configs/v1:ManagedEmrConfigId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/managed-emr-configs/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "managed_emr_config_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_managed-emr-configs/v1:ManagedEmrConfigUpdate",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_managed-emr-configs/v1:ManagedEmrConfig",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "managed_emr_config_id",
                "type": {
                  "value": "type_managed-emr-configs/v1:ManagedEmrConfigId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/managed-emr-configs/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "managed_emr_config_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_managed-emr-configs/v1:ManagedEmrConfigPage",
        "type_managed-emr-configs/v1:ManagedEmrConfigId",
        "type_managed-emr-configs/v1:ManagedEmrConfigAdditionalDetails",
        "type_managed-emr-configs/v1:ManagedEmrConfig",
        "type_managed-emr-configs/v1:ManagedEmrConfigCreateAdditionalDetails",
        "type_managed-emr-configs/v1:ManagedEmrConfigCreate",
        "type_managed-emr-configs/v1:ManagedEmrConfigUpdateAdditionalDetails",
        "type_managed-emr-configs/v1:ManagedEmrConfigUpdate",
        "type_managed-emr-configs/v1:CanvasEmrConfig",
        "type_managed-emr-configs/v1:CanvasEmrConfigCreate",
        "type_managed-emr-configs/v1:CanvasEmrConfigUpdate",
        "type_managed-emr-configs/v1:IntegrationLevelElationServiceFacilityRoutingMetadata",
        "type_managed-emr-configs/v1:RuleLevelElationServiceFacilityRoutingMetadata",
        "type_managed-emr-configs/v1:FilterActionLevelElationServiceFacilityRoutingMetadata",
        "type_managed-emr-configs/v1:ElationServiceFacilityRoutingMetadata",
        "type_managed-emr-configs/v1:ElationEmrConfig",
        "type_managed-emr-configs/v1:ElationEmrConfigCreate",
        "type_managed-emr-configs/v1:ElationEmrConfigUpdate"
      ],
      "subpackages": []
    },
    "subpackage_organization-providers": {
      "subpackageId": "subpackage_organization-providers",
      "name": "organization-providers",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_organization-providers/v2", "subpackage_organization-providers/v3"]
    },
    "subpackage_organization-providers/v2": {
      "subpackageId": "subpackage_organization-providers/v2",
      "name": "v2",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "organization_provider_id",
                "type": {
                  "value": "type_organization-providers/v2:OrganizationProviderId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/organization_providers/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "organization_provider_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_organization-providers/v2:OrganizationProvider",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getAll",
          "name": "Get All",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/organization_providers/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Limit the number of results returned. Defaults to 100.",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to a name or a part of a name",
              "key": "search_term",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to a specific NPI",
              "key": "npi",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to only rendering providers",
              "key": "is_rendering",
              "type": {
                "itemType": {
                  "value": {
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to only billing providers",
              "key": "is_billing",
              "type": {
                "itemType": {
                  "value": {
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "The page token to continue paging through a previous request",
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to PROVIDER_NAME_ASC",
              "key": "sort",
              "type": {
                "itemType": {
                  "value": "type_organization-providers/v2:OrganizationProviderSortOptions",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_organization-providers/v2:OrganizationProviderPage",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/organization_providers/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": ["type_organization-providers/v2:OrganizationProviderBase"],
                "properties": [
                  {
                    "description": "The employment status for the provider.",
                    "key": "employment_status",
                    "valueType": {
                      "itemType": {
                        "value": "type_organization-providers/v2:EmploymentStatus",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_organization-providers/v2:OrganizationProvider",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "organization_provider_id",
                "type": {
                  "value": "type_organization-providers/v2:OrganizationProviderId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/organization_providers/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "organization_provider_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "The NPI of the provider. This must be all digits [0-9] and exactly 10 characters long.",
                    "key": "npi",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Whether the provider can be used to render services.",
                    "key": "is_rendering",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Whether the provider can be used to bill services.",
                    "key": "is_billing",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The first name of the provider, if the provider is an individual.",
                    "key": "first_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The last name of the provider, if the provider is an individual.",
                    "key": "last_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The name of the provider, if the provider is an organization.",
                    "key": "organization_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Whether the provider is an individual (NPPES Type 1) or organization (NPPES Type 2) provider.\n",
                    "key": "provider_type",
                    "valueType": {
                      "itemType": {
                        "value": "type_organization-providers/v2:ProviderType",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "If the provider has a contract with insurance, this must be the same tax ID given to the payer on an IRS W-9 form completed during contracting.\n",
                    "key": "tax_id",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "A code designating classification and specialization.",
                    "key": "taxonomy_code",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The type of license that the provider holds.",
                    "key": "license_type",
                    "valueType": {
                      "itemType": {
                        "value": "type_organization-providers/v2:LicenseType",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The Provider Transaction Access Number for the provider.",
                    "key": "ptan",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The medicaid provider ID for the provider.",
                    "key": "medicaid_provider_id",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The addresses associated with this provider.",
                    "key": "addresses",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_organization-providers/v2:OrganizationProviderAddress",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_organization-providers/v2:OrganizationProvider",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "organization_provider_id",
                "type": {
                  "value": "type_organization-providers/v2:OrganizationProviderId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/organization_providers/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "organization_provider_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_organization-providers/v2:OrganizationProviderId",
        "type_organization-providers/v2:OrganizationProviderBase",
        "type_organization-providers/v2:OrganizationProvider",
        "type_organization-providers/v2:OrganizationProviderPage",
        "type_organization-providers/v2:OrganizationProviderSortOptions",
        "type_organization-providers/v2:ProviderType",
        "type_organization-providers/v2:LicenseType",
        "type_organization-providers/v2:EmploymentStatus",
        "type_organization-providers/v2:OrganizationProviderAddress",
        "type_organization-providers/v2:AddressType"
      ],
      "subpackages": []
    },
    "subpackage_organization-providers/v3": {
      "subpackageId": "subpackage_organization-providers/v3",
      "name": "v3",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "organization_provider_id",
                "type": {
                  "value": "type_organization-providers/v2:OrganizationProviderId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/organization-providers/v3",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "organization_provider_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_organization-providers/v3:OrganizationProviderV2",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_multi",
          "name": "Get Multi",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/organization-providers/v3",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Limit the number of results returned. Defaults to 100.",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to a name or a part of a name",
              "key": "search_term",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to a specific NPI",
              "key": "npi",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to only rendering providers",
              "key": "is_rendering",
              "type": {
                "itemType": {
                  "value": {
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to only billing providers",
              "key": "is_billing",
              "type": {
                "itemType": {
                  "value": {
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "The page token to continue paging through a previous request",
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to PROVIDER_NAME_ASC",
              "key": "sort",
              "type": {
                "itemType": {
                  "value": "type_organization-providers/v2:OrganizationProviderSortOptions",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_organization-providers/v3:OrganizationProviderPageV2",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/organization-providers/v3",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_organization-providers/v3:OrganizationProviderCreateV2",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_organization-providers/v3:OrganizationProviderV2",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:RequestValidationError",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "HttpRequestValidationError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:RequestValidationError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "HttpRequestValidationError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "organization_provider_id",
                "type": {
                  "value": "type_organization-providers/v2:OrganizationProviderId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/organization-providers/v3",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "organization_provider_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_organization-providers/v3:OrganizationProviderUpdateV2",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_organization-providers/v3:OrganizationProviderV2",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:RequestValidationError",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "HttpRequestValidationError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:RequestValidationError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "HttpRequestValidationError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_organization-providers/v3:OrganizationProviderV2",
        "type_organization-providers/v3:OrganizationProviderCreateV2",
        "type_organization-providers/v3:OrganizationProviderUpdateV2",
        "type_organization-providers/v3:OrganizationProviderPageV2"
      ],
      "subpackages": []
    },
    "subpackage_patient-payments": {
      "subpackageId": "subpackage_patient-payments",
      "name": "patient-payments",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_patient-payments/v2", "subpackage_patient-payments/v3"]
    },
    "subpackage_patient-payments/v2": {
      "subpackageId": "subpackage_patient-payments/v2",
      "name": "v2",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns all patient payments satisfying the search criteria AND whose organization_id matches the current organization_id of the authenticated user.\n",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "search",
          "name": "Search",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/patient-payments/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Defaults to 100. The value must be greater than 0 and less than 1000.",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "encounter_id",
              "type": {
                "itemType": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "sources",
              "type": {
                "itemType": {
                  "value": "type_patient-payments/v2:PatientPaymentSource",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "statuses",
              "type": {
                "itemType": {
                  "value": "type_patient-payments/v2:PatientPaymentStatus",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to payment_timestamp",
              "key": "sort",
              "type": {
                "itemType": {
                  "value": "type_patient-payments/v2:PatientPaymentSortField",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Sort direction. Defaults to descending order if not provided.",
              "key": "sort_direction",
              "type": {
                "itemType": {
                  "value": "type_commons:SortDirection",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_patient-payments/v2:PatientPaymentsPage",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Returns the patient payment for the provided patient_payment_id. If the patient payment's organization_id does not match the current organization_id of the authenticated user, then response code of 403 will be returned.\n",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "patient_payment_id",
                "type": {
                  "value": "type_patient-payments/v2:PatientPaymentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/patient-payments/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "patient_payment_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_patient-payments/v2:PatientPayment",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Creates a new patient payment record and returns the newly created PatientPayment object. It is expected that the organization_id of the input patient_payment object will match the current organization_id of the auathenticated user. Otherwise, response code of 400 will be returned.\n",
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/patient-payments/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "amount_cents",
                    "valueType": {
                      "value": {
                        "type": "integer"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "payment_timestamp",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "status",
                    "valueType": {
                      "itemType": {
                        "value": "type_patient-payments/v2:PatientPaymentStatus",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "payment_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "payment_note",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "patient_external_id",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:PatientExternalId",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "encounter_id",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:EncounterId",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "service_line_id",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:ServiceLineId",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_patient-payments/v2:PatientPayment",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Updates the patient payment record matching the provided patient_payment_id. If the matching record's organization_id does not match the authenticated user's current organization_id, then a response code of `403` will be returned.\n",
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "patient_payment_id",
                "type": {
                  "value": "type_patient-payments/v2:PatientPaymentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/patient-payments/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "patient_payment_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "amount_cents",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "integer"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "payment_timestamp",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "status",
                    "valueType": {
                      "itemType": {
                        "value": "type_patient-payments/v2:PatientPaymentStatus",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "payment_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "payment_note",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_patient-payments/v2:PatientPayment",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            },
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Deletes the patient payment record matching the provided patient_payment_id. If the matching record's organization_id does not match the authenticated user's current organization_id, then a response code of `403` will be returned.\n",
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "patient_payment_id",
                "type": {
                  "value": "type_patient-payments/v2:PatientPaymentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/patient-payments/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "patient_payment_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            },
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_patient-payments/v2:PatientPaymentId",
        "type_patient-payments/v2:PatientPaymentSortField",
        "type_patient-payments/v2:PatientPaymentSource",
        "type_patient-payments/v2:PatientPayment",
        "type_patient-payments/v2:PatientPaymentsPage",
        "type_patient-payments/v2:PatientPaymentStatus"
      ],
      "subpackages": []
    },
    "subpackage_patient-payments/v3": {
      "subpackageId": "subpackage_patient-payments/v3",
      "name": "v3",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns all patient payments satisfying the search criteria AND whose organization_id matches\nthe current organization_id of the authenticated user.\n",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "search",
          "name": "Search",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/patient-payments/v3",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Defaults to 100. The value must be greater than 0 and less than 1000.",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "patient_external_id",
              "type": {
                "itemType": {
                  "value": "type_commons:PatientExternalId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "encounter_external_id",
              "type": {
                "itemType": {
                  "value": "type_commons:EncounterExternalId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "service_line_id",
              "type": {
                "itemType": {
                  "value": "type_commons:ServiceLineId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "sources",
              "type": {
                "itemType": {
                  "value": "type_patient-payments/v3:PatientPaymentSource",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "statuses",
              "type": {
                "itemType": {
                  "value": "type_patient-payments/v3:PatientPaymentStatus",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to payment_timestamp",
              "key": "sort",
              "type": {
                "itemType": {
                  "value": "type_patient-payments/v3:PatientPaymentSortField",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Sort direction. Defaults to descending order if not provided.",
              "key": "sort_direction",
              "type": {
                "itemType": {
                  "value": "type_commons:SortDirection",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_patient-payments/v3:PatientPaymentsPage",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Returns the patient payment for the provided patient_payment_id.\nIf the patient payment's organization_id does not match the current organization_id of the\nauthenticated user, then response code of 403 will be returned.\n",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "patient_payment_id",
                "type": {
                  "value": "type_patient-payments/v3:PatientPaymentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/patient-payments/v3",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "patient_payment_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_patient-payments/v3:PatientPayment",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Creates a new patient payment record and returns the newly created PatientPayment object.\nIt is expected that the organization_id of the input patient_payment object will match\nthe current organization_id of the auathenticated user. Otherwise, response code of 403 will be returned.\nIt is also expected that one of `patient_external_id`, `encounter_external_id`, or `service_line_id` is provided.\nIf more than one of `patient_external_id`, `encounter_external_id`, or `service_line_id` are provided, then the most\nspecific property will be used.\nThe order of specificity from the most specific to least specific is `service_line_id`, `encounter_external_id`, and\n`patient_external_id`.\n",
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/patient-payments/v3",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "amount_cents",
                    "valueType": {
                      "value": {
                        "type": "integer"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "payment_timestamp",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "status",
                    "valueType": {
                      "itemType": {
                        "value": "type_patient-payments/v3:PatientPaymentStatus",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "payment_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "payment_note",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "patient_external_id",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:PatientExternalId",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "encounter_external_id",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:EncounterExternalId",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "service_line_id",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:ServiceLineId",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_patient-payments/v3:PatientPayment",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            },
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Updates the patient payment record matching the provided patient_payment_id.\nIf the matching record's organization_id does not match the authenticated user's\ncurrent organization_id, then a response code of `403` will be returned.\nIf more than one of `patient_external_id`, `encounter_external_id`, or `service_line_id` are provided, then the most\nspecific property will be used.\nThe order of specificity from the most specific to least specific is `service_line_id`, `encounter_external_id`, and\n`patient_external_id`.\n",
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "patient_payment_id",
                "type": {
                  "value": "type_patient-payments/v3:PatientPaymentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/patient-payments/v3",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "patient_payment_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "amount_cents",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "integer"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "payment_timestamp",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "status",
                    "valueType": {
                      "itemType": {
                        "value": "type_patient-payments/v3:PatientPaymentStatus",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "payment_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "payment_note",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "patient_external_id",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:PatientExternalId",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "encounter_external_id",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:EncounterExternalId",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "service_line_id",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:ServiceLineId",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_patient-payments/v3:PatientPayment",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            },
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Deletes the patient payment record matching the provided patient_payment_id.\nIf the matching record's organization_id does not match the authenticated user's\ncurrent organization_id, then a response code of `403` will be returned.\n",
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "patient_payment_id",
                "type": {
                  "value": "type_patient-payments/v3:PatientPaymentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/patient-payments/v3",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "patient_payment_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            },
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_patient-payments/v3:PatientPaymentId",
        "type_patient-payments/v3:PatientPaymentSortField",
        "type_patient-payments/v3:PatientPaymentSource",
        "type_patient-payments/v3:PatientPayment",
        "type_patient-payments/v3:PatientPaymentsPage",
        "type_patient-payments/v3:PatientPaymentStatus"
      ],
      "subpackages": []
    },
    "subpackage_remits": {
      "subpackageId": "subpackage_remits",
      "name": "remits",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_remits/v1"]
    },
    "subpackage_remits/v1": {
      "subpackageId": "subpackage_remits/v1",
      "name": "v1",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns all remits for the claim_id.\n",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_multi",
          "name": "Get Multi",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/remits/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Retrieve all remits for the given claim_id.",
              "key": "claim_id",
              "type": {
                "value": "type_commons:ClaimId",
                "type": "id"
              }
            },
            {
              "description": "Defaults to adjudication_date",
              "key": "sort",
              "type": {
                "itemType": {
                  "value": "type_remits/v1:RemitSortField",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Sort direction. Defaults to descending order if not provided.",
              "key": "sort_direction",
              "type": {
                "itemType": {
                  "value": "type_commons:SortDirection",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "itemType": {
                  "value": "type_remits/v1:Remit",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_multi_paged",
          "name": "Get Multi Paged",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/remits/v1",
                "type": "literal"
              },
              {
                "value": "/paged",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Retrieve only remits for the given post_status.",
              "key": "post_status",
              "type": {
                "itemType": {
                  "value": "type_remits/v1:RemitPostStatus",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Retrieve only remits that include the given check_number.",
              "key": "check_number",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Retrieve only remits that include a check with the exact amount in cents.",
              "key": "check_amount_cents",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Retrieve only remits that refer to the given payer.",
              "key": "payer_uuid",
              "type": {
                "itemType": {
                  "value": "type_payers:PayerUuid",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to check_date",
              "key": "sort",
              "type": {
                "itemType": {
                  "value": "type_remits/v1:GetMultiRemitsPagedSortField",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Sort direction. Defaults to descending order if not provided.",
              "key": "sort_direction",
              "type": {
                "itemType": {
                  "value": "type_commons:SortDirection",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_remits/v1:GetMultiRemitsPagedResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "post_remit",
          "name": "Post Remit",
          "path": {
            "pathParameters": [
              {
                "key": "remit_id",
                "type": {
                  "value": "type_remits/v1:RemitId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/remits/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "remit_id",
                "type": "pathParameter"
              },
              {
                "value": "/post",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_remits/v1:PostRemitResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            },
            {
              "type": {
                "value": "type_commons:EntityConflictErrorMessage",
                "type": "id"
              },
              "statusCode": 409
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityConflictError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityConflictErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 409,
              "name": "EntityConflictError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_remits/v1:RemitId",
        "type_remits/v1:RemitPostStatus",
        "type_remits/v1:RemitSource",
        "type_remits/v1:RemitSortField",
        "type_remits/v1:ContentContainer",
        "type_remits/v1:ContentSection",
        "type_remits/v1:Content",
        "type_remits/v1:ContentString",
        "type_remits/v1:Remit",
        "type_remits/v1:GetMultiRemitsPagedSortField",
        "type_remits/v1:RemitPage",
        "type_remits/v1:GetMultiRemitsPagedResponse",
        "type_remits/v1:PostRemitResponse"
      ],
      "subpackages": []
    },
    "subpackage_secondary-submission": {
      "subpackageId": "subpackage_secondary-submission",
      "name": "secondary-submission",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_secondary-submission/v1"]
    },
    "subpackage_secondary-submission/v1": {
      "subpackageId": "subpackage_secondary-submission/v1",
      "name": "v1",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/secondary-submission/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_secondary-submission/v1:SecondarySubmissionCreate",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_secondary-submission/v1:SecondarySubmissionResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "validate",
          "name": "Validate",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/secondary-submission/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "/validate",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_secondary-submission/v1:SecondarySubmissionCheckResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "prepopulate",
          "name": "Prepopulate",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/secondary-submission/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "/pre-populate",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "itemType": {
                  "value": "type_secondary-submission/v1:OtherPayerAdjudicationDetails",
                  "type": "id"
                },
                "type": "optional"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_secondary-submission/v1:ServiceAdjustment",
        "type_secondary-submission/v1:OtherPayerAdjudicationDetails",
        "type_secondary-submission/v1:SecondarySubmissionCreate",
        "type_secondary-submission/v1:SecondarySubmissionResponse",
        "type_secondary-submission/v1:SecondarySubmissionCheckResponse"
      ],
      "subpackages": []
    },
    "subpackage_service-line-ledgers": {
      "subpackageId": "subpackage_service-line-ledgers",
      "name": "service-line-ledgers",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_service-line-ledgers/v1"]
    },
    "subpackage_service-line-ledgers/v1": {
      "subpackageId": "subpackage_service-line-ledgers/v1",
      "name": "v1",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_ledger_tables",
          "name": "Get Ledger Tables",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/service-line-ledgers/v1",
                "type": "literal"
              },
              {
                "value": "/table/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_service-line-ledgers/v1:GetLedgerTablesResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_service-line-ledgers/v1:GetLedgerTablesResponse",
        "type_service-line-ledgers/v1:ServiceLineLedgerTable",
        "type_service-line-ledgers/v1:LedgerTableRowDetails",
        "type_service-line-ledgers/v1:LedgerRowId",
        "type_service-line-ledgers/v1:EventLocator",
        "type_service-line-ledgers/v1:LedgerTableRow",
        "type_service-line-ledgers/v1:ChargeRow",
        "type_service-line-ledgers/v1:RemitRow",
        "type_service-line-ledgers/v1:CarcPopoverDetails",
        "type_service-line-ledgers/v1:RarcPopoverDetails",
        "type_service-line-ledgers/v1:Check",
        "type_service-line-ledgers/v1:RemitRowFinancialInformation",
        "type_service-line-ledgers/v1:RemitRowPayerInformation",
        "type_service-line-ledgers/v1:EraPayer",
        "type_service-line-ledgers/v1:PatientPaymentRow",
        "type_service-line-ledgers/v1:WriteOffRow"
      ],
      "subpackages": []
    },
    "subpackage_service-lines": {
      "subpackageId": "subpackage_service-lines",
      "name": "service-lines",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_service-lines/v2"]
    },
    "subpackage_service-lines/v2": {
      "subpackageId": "subpackage_service-lines/v2",
      "name": "v2",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "calculate_financial_information",
          "name": "Calculate Financial Information",
          "path": {
            "pathParameters": [
              {
                "key": "service_line_id",
                "type": {
                  "value": "type_commons:ServiceLineId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/service-lines/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "service_line_id",
                "type": "pathParameter"
              },
              {
                "value": "/financial-information",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_service-lines/v2:ServiceLineFinancialInformationResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_service-lines/v2:ServiceLineFinancialInformation",
        "type_service-lines/v2:ServiceLineFinancialInformationByPayerResponsibilityResponse",
        "type_service-lines/v2:ServiceLineFinancialInformationResponse",
        "type_service-lines/v2:ServiceLineCreate",
        "type_service-lines/v2:ServiceLineCreateStandalone",
        "type_service-lines/v2:ServiceLineUpdate",
        "type_service-lines/v2:ServiceLine",
        "type_service-lines/v2:ServiceLineERAData",
        "type_service-lines/v2:ServiceLineAdjustment",
        "type_service-lines/v2:ServiceLineDenialReason",
        "type_service-lines/v2:DenialReasonContent",
        "type_service-lines/v2:DrugIdentification",
        "type_service-lines/v2:ServiceIdQualifier",
        "type_service-lines/v2:MeasurementUnitCode"
      ],
      "subpackages": []
    },
    "subpackage_tasks": {
      "subpackageId": "subpackage_tasks",
      "name": "tasks",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_tasks/v3", "subpackage_tasks/commons"]
    },
    "subpackage_tasks/v3": {
      "subpackageId": "subpackage_tasks/v3",
      "name": "v3",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_actions",
          "name": "Get Actions",
          "path": {
            "pathParameters": [
              {
                "key": "task_id",
                "type": {
                  "value": "type_commons:TaskId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/tasks/v3",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "task_id",
                "type": "pathParameter"
              },
              {
                "value": "/actions",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_tasks/v3:TaskActions",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": ["type_tasks/v3:TaskActionExecutionMethod", "type_tasks/v3:TaskActions", "type_tasks/v3:TaskAction"],
      "subpackages": []
    },
    "subpackage_users": {
      "subpackageId": "subpackage_users",
      "name": "users",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_users/v2"]
    },
    "subpackage_users/v2": {
      "subpackageId": "subpackage_users/v2",
      "name": "v2",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_internal_enrollment_assignees",
          "name": "Get Internal Enrollment Assignees",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/users/v2",
                "type": "literal"
              },
              {
                "value": "/internal-enrollment-assignees",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_users/v2:InternalEnrollmentAssignees",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_assignable_users",
          "name": "Get Assignable Users",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/users/v2",
                "type": "literal"
              },
              {
                "value": "/assignable-users",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_users/v2:UserV2Page",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_multi",
          "name": "Get Multi",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/users/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_users/v2:UserV2Page",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_assignable_users_unpaginated",
          "name": "Get Assignable Users Unpaginated",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/users/v2",
                "type": "literal"
              },
              {
                "value": "/assignable-users-unpaginated",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "itemType": {
                  "value": "type_users/v2:UserV2",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_by_external_id",
          "name": "Get By External Id",
          "path": {
            "pathParameters": [
              {
                "key": "external_id",
                "type": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/users/v2",
                "type": "literal"
              },
              {
                "value": "/external-id/",
                "type": "literal"
              },
              {
                "value": "external_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_users/v2:UserV2",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_users/v2:User",
        "type_users/v2:HumanUserMetadata",
        "type_users/v2:MachineUserMetadata",
        "type_users/v2:UserMetadata",
        "type_users/v2:InternalEnrollmentAssignees",
        "type_users/v2:AuthZeroMetadata",
        "type_users/v2:GoogleAppsMetadata",
        "type_users/v2:OtherIdpMetadata",
        "type_users/v2:IdpUserMetadata",
        "type_users/v2:UserV2",
        "type_users/v2:UserV2Page"
      ],
      "subpackages": []
    },
    "subpackage_work-queues": {
      "subpackageId": "subpackage_work-queues",
      "name": "work-queues",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_work-queues/v1"]
    },
    "subpackage_work-queues/v1": {
      "subpackageId": "subpackage_work-queues/v1",
      "name": "v1",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "work_queue_id",
                "type": {
                  "value": "type_commons:WorkQueueId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/work-queues/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "work_queue_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_work-queues/v1:WorkQueueResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_work-queues/v1:WorkQueueNotFoundError",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "WorkQueueNotFoundHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_work-queues/v1:WorkQueueNotFoundError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "WorkQueueNotFoundHttpError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getAllWorkQueues",
          "name": "Get All Work Queues",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/work-queues/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_work-queues/v1:GetAllWorkQueuesResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_work-queues/v1:WorkQueueCategoryType",
        "type_work-queues/v1:WorkQueueCategory",
        "type_work-queues/v1:WorkQueue",
        "type_work-queues/v1:WorkQueueStatistics",
        "type_work-queues/v1:WorkQueueResponse",
        "type_work-queues/v1:GetAllWorkQueuesResponse",
        "type_work-queues/v1:WorkQueueNotFoundError"
      ],
      "subpackages": []
    },
    "subpackage_x12": {
      "subpackageId": "subpackage_x12",
      "name": "x12",
      "endpoints": [],
      "webhooks": [],
      "types": [],
      "subpackages": ["subpackage_x12/v1"]
    },
    "subpackage_x12/v1": {
      "subpackageId": "subpackage_x12/v1",
      "name": "v1",
      "endpoints": [],
      "webhooks": [],
      "types": ["type_x12/v1:ClaimStatusCodeEnum", "type_x12/v1:Carc", "type_x12/v1:Rarc"],
      "subpackages": []
    },
    "subpackage_adjustments": {
      "subpackageId": "subpackage_adjustments",
      "name": "adjustments",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns all adjustments satisfying the search_terms AND whose organization_id matches\nthe current organization_id of the authenticated user\n",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getAll",
          "name": "Get All",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/adjustments/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "patient_external_id",
              "type": {
                "itemType": {
                  "value": "type_commons:PatientExternalId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "encounter_id",
              "type": {
                "itemType": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "service_line_id",
              "type": {
                "itemType": {
                  "value": "type_commons:ServiceLineId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "source",
              "type": {
                "itemType": {
                  "value": "type_adjustments:AdjustmentSource",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to adjustment_timestamp_desc",
              "key": "sort",
              "type": {
                "itemType": {
                  "value": "type_adjustments:AdjustmentSortOptions",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_adjustments:AdjustmentsPage",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Returns the adjustment for the provided adjustment_id.\nIf the adjustment's organization_id does not match the current organization_id of the\nauthenticated user, then response code of 403 will be returned\n",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "adjustment_id",
                "type": {
                  "value": "type_commons:AdjustmentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/adjustments/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "adjustment_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_adjustments:Adjustment",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Creates a new adjustment record and returns the newly created Adjustment object.\nIt is expected that the organization_id of the input adjustment object will match\nthe current organization_id of the auathenticated user. Otherwise, response code of 400 will be returned.\n",
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/adjustments/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_adjustments:AdjustmentCreate",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_adjustments:Adjustment",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Updates the adjustment record matching the provided adjustment_id.\nIf the matching record's organization_id does not match the authenticated user's\ncurrent organization_id, then a response code of `403` will be returned.\n",
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "adjustment_id",
                "type": {
                  "value": "type_commons:AdjustmentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/adjustments/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "adjustment_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_adjustments:AdjustmentUpdate",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_adjustments:Adjustment",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Deletes the adjustment record matching the provided adjustment_id.\nIf the matching record's organization_id does not match the authenticated user's\ncurrent organization_id, then a response code of `403` will be returned.\n",
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "adjustment_id",
                "type": {
                  "value": "type_commons:AdjustmentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/adjustments/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "adjustment_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_adjustments:AdjustmentSortOptions",
        "type_adjustments:AdjustmentSource",
        "type_adjustments:AdjustmentCreate",
        "type_adjustments:AdjustmentUpdate",
        "type_adjustments:Adjustment",
        "type_adjustments:AdjustmentsPage"
      ],
      "subpackages": []
    },
    "subpackage_billing-notes": {
      "subpackageId": "subpackage_billing-notes",
      "name": "billing-notes",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create billing note",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/billing_notes/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": ["type_billing-notes:BillingNoteBase"],
                "properties": [
                  {
                    "key": "encounter_id",
                    "valueType": {
                      "value": "type_commons:EncounterId",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_billing-notes:BillingNote",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "billing_note_id",
                "type": {
                  "value": "type_billing-notes:BillingNoteId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/billing_notes/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "billing_note_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_billing-notes:BillingNoteId",
        "type_billing-notes:BillingNoteBase",
        "type_billing-notes:BillingNote"
      ],
      "subpackages": []
    },
    "subpackage_claim-submission": {
      "subpackageId": "subpackage_claim-submission",
      "name": "claim-submission",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "claim_submission_id",
                "type": {
                  "value": "type_commons:ClaimSubmissionId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/claim-submission/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "claim_submission_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_claim-submission:ClaimSubmission",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_claim-submission:ClaimSubmission",
        "type_claim-submission:ClaimSubmissionStatus",
        "type_claim-submission:ClaimFrequencyTypeCode"
      ],
      "subpackages": []
    },
    "subpackage_claims": {
      "subpackageId": "subpackage_claims",
      "name": "claims",
      "endpoints": [],
      "webhooks": [],
      "types": ["type_claims:Claim", "type_claims:ClaimStatus"],
      "subpackages": []
    },
    "subpackage_cms-1500": {
      "subpackageId": "subpackage_cms-1500",
      "name": "cms-1500",
      "endpoints": [],
      "webhooks": [],
      "types": [
        "type_cms-1500:CMS1500Content",
        "type_cms-1500:AddressBox",
        "type_cms-1500:AddressBox3Line",
        "type_cms-1500:DateBox",
        "type_cms-1500:PhoneNumberBox",
        "type_cms-1500:SignatureDateBox",
        "type_cms-1500:FederalTaxIdNumberType",
        "type_cms-1500:InsuranceType",
        "type_cms-1500:PatientRelationshipToInsured",
        "type_cms-1500:Sex",
        "type_cms-1500:InsuranceInfo",
        "type_cms-1500:Box3Patient",
        "type_cms-1500:Box9OtherInsured",
        "type_cms-1500:Box10PatientConditionRelatedTo",
        "type_cms-1500:Box11Insured",
        "type_cms-1500:Box14DateOfCurrentCondition",
        "type_cms-1500:Box15OtherDate",
        "type_cms-1500:Box16DatesPatientUnableToWork",
        "type_cms-1500:Box17ReferringProvider",
        "type_cms-1500:Box18HospitalizationDates",
        "type_cms-1500:Box20OutsideLab",
        "type_cms-1500:Box21Diagnoses",
        "type_cms-1500:Box22Resubmission",
        "type_cms-1500:Box24ServiceLines",
        "type_cms-1500:ServiceLineBox",
        "type_cms-1500:ModifiersBox",
        "type_cms-1500:Box25FederalTaxIdNumber",
        "type_cms-1500:Box28TotalCharge",
        "type_cms-1500:Box32ServiceFacilityInfo",
        "type_cms-1500:Box33BillingProviderInfo"
      ],
      "subpackages": []
    },
    "subpackage_commons": {
      "subpackageId": "subpackage_commons",
      "name": "commons",
      "endpoints": [],
      "webhooks": [],
      "types": [
        "type_commons:EncounterId",
        "type_commons:OrganizationId",
        "type_commons:ClaimId",
        "type_commons:ServiceLineId",
        "type_commons:AdjustmentId",
        "type_commons:PatientExternalId",
        "type_commons:EncounterExternalId",
        "type_commons:Auth0Id",
        "type_commons:ClaimSubmissionId",
        "type_commons:RaRunId",
        "type_commons:Npi",
        "type_commons:WorkQueueId",
        "type_commons:UserId",
        "type_commons:TaskId",
        "type_commons:LinkUrl",
        "type_commons:ContentDownloadUrl",
        "type_commons:ContentDownloadUrlWithExpiration",
        "type_commons:PageToken",
        "type_commons:SortDirection",
        "type_commons:Date",
        "type_commons:DateRangeRequiredEnd",
        "type_commons:DateRangeOptionalEnd",
        "type_commons:Decimal",
        "type_commons:RemovableDateRangeOptionalEnd",
        "type_commons:ResourcePage",
        "type_commons:StreetAddressBase",
        "type_commons:StreetAddressShortZip",
        "type_commons:StreetAddressLongZip",
        "type_commons:Regions",
        "type_commons:RegionStates",
        "type_commons:RegionNational",
        "type_commons:State",
        "type_commons:SourceOfPaymentCode",
        "type_commons:FacilityTypeCode",
        "type_commons:PatientRelationshipToInsuredCodeAll",
        "type_commons:ProcedureModifier",
        "type_commons:ServiceLineUnits",
        "type_commons:InsuranceTypeCode",
        "type_commons:ClaimAdjustmentGroupCodes",
        "type_commons:ClaimSubmissionPayerResponsibilityType",
        "type_commons:EmrPayerCrosswalk",
        "type_commons:ErrorMessage",
        "type_commons:EntityNotFoundErrorMessage",
        "type_commons:UnauthorizedErrorMessage",
        "type_commons:EntityConflictErrorMessage",
        "type_commons:UnprocessableEntityErrorMessage",
        "type_commons:RequestValidationError",
        "type_commons:PhoneNumber",
        "type_commons:PhoneNumberType",
        "type_commons:Email"
      ],
      "subpackages": []
    },
    "subpackage_configurable-rules-types": {
      "subpackageId": "subpackage_configurable-rules-types",
      "name": "configurable-rules-types",
      "endpoints": [],
      "webhooks": [],
      "types": [
        "type_configurable-rules-types:FieldName",
        "type_configurable-rules-types:VariableId",
        "type_configurable-rules-types:FieldType",
        "type_configurable-rules-types:PrimitiveType",
        "type_configurable-rules-types:NativePrimitiveType",
        "type_configurable-rules-types:AliasedPrimitiveType",
        "type_configurable-rules-types:ObjectType",
        "type_configurable-rules-types:ContainerType",
        "type_configurable-rules-types:ContainerWrapperType",
        "type_configurable-rules-types:Field",
        "type_configurable-rules-types:Comparator",
        "type_configurable-rules-types:ComparatorWithMetadata",
        "type_configurable-rules-types:ValidComparison",
        "type_configurable-rules-types:FieldValue",
        "type_configurable-rules-types:PrimitiveValue",
        "type_configurable-rules-types:ObjectValue",
        "type_configurable-rules-types:ObjectFieldValue",
        "type_configurable-rules-types:ContainerValue",
        "type_configurable-rules-types:Statement",
        "type_configurable-rules-types:Condition",
        "type_configurable-rules-types:AndCondition",
        "type_configurable-rules-types:OrCondition",
        "type_configurable-rules-types:EvaluateComparatorCondition",
        "type_configurable-rules-types:Comparable",
        "type_configurable-rules-types:FieldReference",
        "type_configurable-rules-types:VariableReference",
        "type_configurable-rules-types:Path",
        "type_configurable-rules-types:PathElement",
        "type_configurable-rules-types:ListElement",
        "type_configurable-rules-types:OptionalElement",
        "type_configurable-rules-types:Action",
        "type_configurable-rules-types:HoldClaimAction",
        "type_configurable-rules-types:HoldReadyToSubmitClaimAction",
        "type_configurable-rules-types:HoldClaimAvailableAction",
        "type_configurable-rules-types:HoldReadyToSubmitClaimAvailableAction",
        "type_configurable-rules-types:HoldClaimExecutedAction",
        "type_configurable-rules-types:HoldReadyToSubmitClaimExecutedAction",
        "type_configurable-rules-types:CreateTaskAction",
        "type_configurable-rules-types:CreateTaskV2Action",
        "type_configurable-rules-types:CustomerDataRequestTaskAction",
        "type_configurable-rules-types:OtherTaskAction",
        "type_configurable-rules-types:OtherTaskType",
        "type_configurable-rules-types:CreateTaskAvailableAction",
        "type_configurable-rules-types:CreateTaskV2AvailableAction",
        "type_configurable-rules-types:CreateTaskExecutedAction",
        "type_configurable-rules-types:CreateTaskV2ExecutedAction",
        "type_configurable-rules-types:ThenValidateOrElseAction",
        "type_configurable-rules-types:ThenValidateOrElseAvailableAction",
        "type_configurable-rules-types:ThenValidateOrElseExecutedAction",
        "type_configurable-rules-types:RouteToWorkQueueAction",
        "type_configurable-rules-types:RouteToWorkQueueAvailableAction",
        "type_configurable-rules-types:RouteToWorkQueueExecutedAction",
        "type_configurable-rules-types:AvailableActionWithMetadata",
        "type_configurable-rules-types:AvailableAction",
        "type_configurable-rules-types:ExecutedAction"
      ],
      "subpackages": []
    },
    "subpackage_configurable-rules-variables": {
      "subpackageId": "subpackage_configurable-rules-variables",
      "name": "configurable-rules-variables",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/configurable-rules-variables/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "name",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "description",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "type",
                    "valueType": {
                      "value": "type_configurable-rules-types:FieldType",
                      "type": "id"
                    }
                  },
                  {
                    "key": "value",
                    "valueType": {
                      "value": "type_configurable-rules-types:FieldValue",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_configurable-rules-variables:Variable",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_configurable-rules-variables:TypeDoesNotMatchValueError",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_configurable-rules-variables:VariableWithNameAlreadyExistsError",
                "type": "id"
              },
              "statusCode": 409
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "TypeDoesNotMatchValueHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules-variables:TypeDoesNotMatchValueError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "TypeDoesNotMatchValueHttpError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "VariableWithNameAlreadyExistsHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules-variables:VariableWithNameAlreadyExistsError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 409,
              "name": "VariableWithNameAlreadyExistsHttpError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getAllVariableSummaries",
          "name": "Get All Variable Summaries",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/configurable-rules-variables/v1",
                "type": "literal"
              },
              {
                "value": "/summaries",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "itemType": {
                  "value": "type_configurable-rules-variables:VariableSummary",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "variable_id",
                "type": {
                  "value": "type_configurable-rules-types:VariableId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/configurable-rules-variables/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "variable_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_configurable-rules-variables:Variable",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_configurable-rules-variables:VariableNotFoundError",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "VariableNotFoundHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules-variables:VariableNotFoundError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "VariableNotFoundHttpError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "variable_id",
                "type": {
                  "value": "type_configurable-rules-types:VariableId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/configurable-rules-variables/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "variable_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "description",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "type",
                    "valueType": {
                      "itemType": {
                        "value": "type_configurable-rules-types:FieldType",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "value",
                    "valueType": {
                      "itemType": {
                        "value": "type_configurable-rules-types:FieldValue",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_configurable-rules-variables:Variable",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_configurable-rules-variables:TypeDoesNotMatchValueError",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_configurable-rules-variables:VariableNotFoundError",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_configurable-rules-variables:VariableTypeChangeNotAllowedError",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_configurable-rules-variables:VariableWithNameAlreadyExistsError",
                "type": "id"
              },
              "statusCode": 409
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "TypeDoesNotMatchValueHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules-variables:TypeDoesNotMatchValueError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "TypeDoesNotMatchValueHttpError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "VariableNotFoundHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules-variables:VariableNotFoundError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "VariableNotFoundHttpError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "VariableTypeChangeNotAllowedHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules-variables:VariableTypeChangeNotAllowedError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "VariableTypeChangeNotAllowedHttpError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "VariableWithNameAlreadyExistsHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules-variables:VariableWithNameAlreadyExistsError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 409,
              "name": "VariableWithNameAlreadyExistsHttpError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "variable_id",
                "type": {
                  "value": "type_configurable-rules-types:VariableId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/configurable-rules-variables/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "variable_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "type": {
                "value": "type_configurable-rules-variables:VariableInUseError",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_configurable-rules-variables:VariableNotFoundError",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "VariableInUseHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules-variables:VariableInUseError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "VariableInUseHttpError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "VariableNotFoundHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules-variables:VariableNotFoundError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "VariableNotFoundHttpError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getAllVariablesPaged",
          "name": "Get All Variables Paged",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/configurable-rules-variables/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_configurable-rules-variables:VariablesPage",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_configurable-rules-variables:Variable",
        "type_configurable-rules-variables:VariablesPage",
        "type_configurable-rules-variables:VariableSummary",
        "type_configurable-rules-variables:TypeDoesNotMatchValueError",
        "type_configurable-rules-variables:VariableInUseError",
        "type_configurable-rules-variables:VariableNotFoundError",
        "type_configurable-rules-variables:VariableTypeChangeNotAllowedError",
        "type_configurable-rules-variables:VariableWithNameAlreadyExistsError"
      ],
      "subpackages": []
    },
    "subpackage_configurable-rules": {
      "subpackageId": "subpackage_configurable-rules",
      "name": "configurable-rules",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/configurable-rules/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "name",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "description",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "scope",
                    "valueType": {
                      "value": "type_configurable-rules:Scope",
                      "type": "id"
                    }
                  },
                  {
                    "key": "statement",
                    "valueType": {
                      "value": "type_configurable-rules-types:Statement",
                      "type": "id"
                    }
                  },
                  {
                    "key": "is_enabled",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_configurable-rules:ConfigurableRule",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_configurable-rules:ConfigForScopeComputationError",
                "type": "id"
              },
              "statusCode": 500
            },
            {
              "type": {
                "value": "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_configurable-rules:UnknownScopeError",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_configurable-rules:RuleValidationFailure",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "ConfigForScopeComputationHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules:ConfigForScopeComputationError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 500,
              "name": "ConfigForScopeComputationHttpError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "ScopeDoesNotSupportConfigurableRulesHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "ScopeDoesNotSupportConfigurableRulesHttpError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnknownScopeHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules:UnknownScopeError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnknownScopeHttpError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "RuleValidationHttpFailure",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules:RuleValidationFailure",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "RuleValidationHttpFailure"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getLegalComparisons",
          "name": "Get Legal Comparisons",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/configurable-rules/v1",
                "type": "literal"
              },
              {
                "value": "/comparisons",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_configurable-rules:LegalComparisonsResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "configurable_rule_id",
                "type": {
                  "value": "type_pipeline-commons:ConfigurableRuleId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/configurable-rules/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "configurable_rule_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_configurable-rules:ConfigurableRule",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_configurable-rules:RuleNotFoundError",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "RuleNotFoundHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules:RuleNotFoundError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "RuleNotFoundHttpError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "configurable_rule_id",
                "type": {
                  "value": "type_pipeline-commons:ConfigurableRuleId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/configurable-rules/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "configurable_rule_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "description",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "statement",
                    "valueType": {
                      "itemType": {
                        "value": "type_configurable-rules-types:Statement",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "is_enabled",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_configurable-rules:ConfigurableRule",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_configurable-rules:RuleNotFoundError",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_configurable-rules:ConfigForScopeComputationError",
                "type": "id"
              },
              "statusCode": 500
            },
            {
              "type": {
                "value": "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_configurable-rules:UnknownScopeError",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_configurable-rules:RuleValidationFailure",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "RuleNotFoundHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules:RuleNotFoundError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "RuleNotFoundHttpError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "ConfigForScopeComputationHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules:ConfigForScopeComputationError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 500,
              "name": "ConfigForScopeComputationHttpError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "ScopeDoesNotSupportConfigurableRulesHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "ScopeDoesNotSupportConfigurableRulesHttpError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnknownScopeHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules:UnknownScopeError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnknownScopeHttpError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "RuleValidationHttpFailure",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules:RuleValidationFailure",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "RuleValidationHttpFailure"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "configurable_rule_id",
                "type": {
                  "value": "type_pipeline-commons:ConfigurableRuleId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/configurable-rules/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "configurable_rule_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "type": {
                "value": "type_configurable-rules:RuleNotFoundError",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "RuleNotFoundHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules:RuleNotFoundError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "RuleNotFoundHttpError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "resolveConfigForScope",
          "name": "Resolve Config For Scope",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/configurable-rules/v1",
                "type": "literal"
              },
              {
                "value": "/config-for-scope",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "scope",
                    "valueType": {
                      "value": "type_configurable-rules:Scope",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_configurable-rules:ConfigForScopeResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_configurable-rules:ConfigForScopeComputationError",
                "type": "id"
              },
              "statusCode": 500
            },
            {
              "type": {
                "value": "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_configurable-rules:UnknownScopeError",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "ConfigForScopeComputationHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules:ConfigForScopeComputationError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 500,
              "name": "ConfigForScopeComputationHttpError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "ScopeDoesNotSupportConfigurableRulesHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "ScopeDoesNotSupportConfigurableRulesHttpError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnknownScopeHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules:UnknownScopeError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnknownScopeHttpError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "validateRule",
          "name": "Validate Rule",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/configurable-rules/v1",
                "type": "literal"
              },
              {
                "value": "/validate",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "name",
                    "valueType": {
                      "value": {
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": "description",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "scope",
                    "valueType": {
                      "value": "type_configurable-rules:Scope",
                      "type": "id"
                    }
                  },
                  {
                    "key": "statement",
                    "valueType": {
                      "value": "type_configurable-rules-types:Statement",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_configurable-rules:ValidateRuleResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_configurable-rules:ConfigForScopeComputationError",
                "type": "id"
              },
              "statusCode": 500
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "ConfigForScopeComputationHttpError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_configurable-rules:ConfigForScopeComputationError",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 500,
              "name": "ConfigForScopeComputationHttpError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_configurable-rules:ConfigurableRule",
        "type_configurable-rules:ConfigForScopeResponse",
        "type_configurable-rules:Scope",
        "type_configurable-rules:StepLocator",
        "type_configurable-rules:LegalComparisonsResponse",
        "type_configurable-rules:ValidateRuleResponse",
        "type_configurable-rules:RuleRunResult",
        "type_configurable-rules:RuleValidationResult",
        "type_configurable-rules:RuleValidationFailure",
        "type_configurable-rules:RuleValidationError",
        "type_configurable-rules:InvalidStatementError",
        "type_configurable-rules:ActionNotAvailableError",
        "type_configurable-rules:CovariantListLiteralError",
        "type_configurable-rules:DuplicateObjectFieldNamesError",
        "type_configurable-rules:EmptyListLiteralError",
        "type_configurable-rules:IncorrectTypeForPathElementError",
        "type_configurable-rules:MismatchedTypesForComparatorError",
        "type_configurable-rules:MissingObjectFieldError",
        "type_configurable-rules:IllegalIndexForNthItemError",
        "type_configurable-rules:WorkQueueNotFoundError",
        "type_configurable-rules:WorkQueueNotInScopeError",
        "type_configurable-rules:RuleWithNameAlreadyExistsError",
        "type_configurable-rules:RuleNotFoundError",
        "type_configurable-rules:ConfigForScopeComputationError",
        "type_configurable-rules:ScopeDoesNotSupportConfigurableRulesError",
        "type_configurable-rules:ScopeNotEnabledForOrgError",
        "type_configurable-rules:UnknownScopeError"
      ],
      "subpackages": []
    },
    "subpackage_contracts": {
      "subpackageId": "subpackage_contracts",
      "name": "contracts",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "contract_id",
                "type": {
                  "value": "type_contracts:ContractId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/contracts/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "contract_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_contracts:Contract",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getAll",
          "name": "Get All",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/contracts/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Number of contracts to offset in the returned result. Defaults to 0.",
              "key": "skip",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Max number of contracts returned. Defaults to 100. Max is 1000.",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "contracting_provider_id",
              "type": {
                "itemType": {
                  "value": "type_contracts:ContractingProviderId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "rendering_provider_ids",
              "type": {
                "itemType": {
                  "value": "type_contracts:RenderingProviderid",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Filter to contracts that include any of the included payer names.",
              "key": "payer_names",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "states",
              "type": {
                "itemType": {
                  "value": "type_commons:State",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "The status of the contract. Defaults to `pending`",
              "key": "contract_status",
              "type": {
                "itemType": {
                  "value": "type_contracts:ContractStatus",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "itemType": {
                  "value": "type_contracts:Contract",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Creates a new contract within the user's current organization",
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/contracts/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": ["type_contracts:ContractBase"],
                "properties": [
                  {
                    "description": "The UUID of the provider under agreement to the contract",
                    "key": "contracting_provider_id",
                    "valueType": {
                      "value": "type_contracts:ContractingProviderId",
                      "type": "id"
                    }
                  },
                  {
                    "description": "A rendering provider isn't contracted directly with the payer but can render\nservices under the contract held by the contracting provider.\nMax items is 100.\n",
                    "key": "rendering_provider_ids",
                    "valueType": {
                      "itemType": {
                        "value": "type_contracts:RenderingProviderid",
                        "type": "id"
                      },
                      "type": "set"
                    }
                  },
                  {
                    "description": "The UUID of the insurance company under agreement to the contract",
                    "key": "payer_uuid",
                    "valueType": {
                      "value": {
                        "type": "uuid"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_contracts:Contract",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "contract_id",
                "type": {
                  "value": "type_contracts:ContractId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/contracts/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "contract_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "contract_id",
                "type": {
                  "value": "type_contracts:ContractId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/contracts/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "contract_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "A rendering provider isn't contracted directly with the payer but can render\nservices under the contract held by the contracting provider.\nMax items is 100.\n",
                    "key": "rendering_provider_ids",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_contracts:RenderingProviderid",
                          "type": "id"
                        },
                        "type": "set"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "The starting day upon which the contract is effective",
                    "key": "effective_date",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:Date",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "An optional end day upon which the contract expires",
                    "key": "expiration_date",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:Date",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "If present, the contract's rendering providers will be patched to this exact\nvalue, overriding what was set before.\n",
                    "key": "regions",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:Regions",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "contract_status",
                    "valueType": {
                      "itemType": {
                        "value": "type_contracts:ContractStatus",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "authorized_signatory",
                    "valueType": {
                      "itemType": {
                        "value": "type_contracts:AuthorizedSignatory",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_contracts:Contract",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_contracts:ContractId",
        "type_contracts:ContractingProviderId",
        "type_contracts:RenderingProviderid",
        "type_contracts:ContractBase",
        "type_contracts:Contract",
        "type_contracts:ContractStatus",
        "type_contracts:AuthorizedSignatory"
      ],
      "subpackages": []
    },
    "subpackage_credentialing": {
      "subpackageId": "subpackage_credentialing",
      "name": "credentialing",
      "endpoints": [],
      "webhooks": [],
      "types": [
        "type_credentialing:ProviderCredentialingSpanId",
        "type_credentialing:EncounterCredentialingStatusResult",
        "type_credentialing:CredentialedEncounterStatusResult",
        "type_credentialing:ProviderCredentialingSpanBase",
        "type_credentialing:ProviderCredentialingSpan",
        "type_credentialing:CredentialingSpanDates",
        "type_credentialing:RequiredCredentialingDates",
        "type_credentialing:NonRequiredCredentialingDates",
        "type_credentialing:CredentialingSpanStatus"
      ],
      "subpackages": []
    },
    "subpackage_dashboards": {
      "subpackageId": "subpackage_dashboards",
      "name": "dashboards",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_multi",
          "name": "Get Multi",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/dashboards/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_dashboards:GetAllDashboardGroupsResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_dashboards:DashboardId",
        "type_dashboards:FontAwesomeIconName",
        "type_dashboards:DashboardGroupType",
        "type_dashboards:Dashboard",
        "type_dashboards:DashboardGroup",
        "type_dashboards:GetAllDashboardGroupsResponse"
      ],
      "subpackages": []
    },
    "subpackage_diagnoses": {
      "subpackageId": "subpackage_diagnoses",
      "name": "diagnoses",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/diagnoses/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_diagnoses:StandaloneDiagnosisCreate",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_diagnoses:Diagnosis",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "diagnosis_id",
                "type": {
                  "value": "type_diagnoses:DiagnosisId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/diagnoses/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "diagnosis_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "description": "Empty string not allowed.",
                    "key": "name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Typically, providers submitting claims to Candid are using ICD-10 diagnosis codes. If you are using ICD-10 codes, the primary diagnosis code listed on the claim should use the ABK code_type. If more than one diagnosis is being submitted on a claim, please use ABF for the rest of the listed diagnoses. If you are using ICD-9 diagnosis codes, use BK and BF for the principal and following diagnosis code(s) respectively.\n",
                    "key": "code_type",
                    "valueType": {
                      "itemType": {
                        "value": "type_diagnoses:DiagnosisTypeCode",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "description": "Empty string not allowed.\nShould be of the appropriate format for the provided `code_type`.\nMust obey the ICD-10 format if an ICD-10 code_type is provided, specifically:\n  - Letter\n  - Digit\n  - Digit or the letter `A` or `B`\n  - (Optional) Period `.`\n  - Up to 4 (or as few as 0) letters and digits\n",
                    "key": "code",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_diagnoses:Diagnosis",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "diagnosis_id",
                "type": {
                  "value": "type_diagnoses:DiagnosisId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/diagnoses/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "diagnosis_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_diagnoses:DiagnosisId",
        "type_diagnoses:DiagnosisCreate",
        "type_diagnoses:StandaloneDiagnosisCreate",
        "type_diagnoses:DiagnosisTypeCode",
        "type_diagnoses:Diagnosis"
      ],
      "subpackages": []
    },
    "subpackage_encounter_timeline": {
      "subpackageId": "subpackage_encounter_timeline",
      "name": "encounter_timeline",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "encounter_id",
                "type": {
                  "value": "type_commons:EncounterId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/encounter-timeline/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "encounter_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_encounter_timeline:EncounterTimelineResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_encounter_timeline:TimelineEventData",
        "type_encounter_timeline:GenericTimelineEventData",
        "type_encounter_timeline:GenericNamedTimelineEventData",
        "type_encounter_timeline:TimelineEvent",
        "type_encounter_timeline:EncounterTimelineResponse",
        "type_encounter_timeline:ClaimSubmissionTimelineEvent"
      ],
      "subpackages": []
    },
    "subpackage_enrollments": {
      "subpackageId": "subpackage_enrollments",
      "name": "enrollments",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "enrollment_id",
                "type": {
                  "value": "type_enrollments:EnrollmentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/enrollments/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "enrollment_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_enrollments:Enrollment",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_multi",
          "name": "Get Multi",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/enrollments/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "statuses",
              "type": {
                "itemType": {
                  "value": "type_enrollments:EnrollmentStatus",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "enrollment_types",
              "type": {
                "itemType": {
                  "value": "type_enrollments:EnrollmentType",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "payer_search_term",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "provider_npi",
              "type": {
                "itemType": {
                  "value": "type_enrollments:ProviderNpi",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "include_hidden",
              "type": {
                "itemType": {
                  "value": {
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "organization_provider_id",
              "type": {
                "itemType": {
                  "value": "type_organization-providers/v2:OrganizationProviderId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "priority",
              "type": {
                "itemType": {
                  "value": "type_enrollments:EnrollmentPriority",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "assignee_id",
              "type": {
                "itemType": {
                  "value": "type_enrollments:AssigneeId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_enrollments:EnrollmentPage",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "enrollment_id",
                "type": {
                  "value": "type_enrollments:EnrollmentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/enrollments/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "enrollment_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "enrollment_id",
                "type": {
                  "value": "type_enrollments:EnrollmentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/enrollments/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "enrollment_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "status",
                    "valueType": {
                      "itemType": {
                        "value": "type_enrollments:EnrollmentStatus",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "priority",
                    "valueType": {
                      "itemType": {
                        "value": "type_enrollments:EnrollmentPriority",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "assignee",
                    "valueType": {
                      "itemType": {
                        "value": "type_enrollments:RemovableAssignee",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "is_hidden",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_enrollments:Enrollment",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/enrollments/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "payer_uuid",
                    "valueType": {
                      "value": "type_payers:PayerUuid",
                      "type": "id"
                    }
                  },
                  {
                    "key": "provider_npi",
                    "valueType": {
                      "value": "type_enrollments:ProviderNpi",
                      "type": "id"
                    }
                  },
                  {
                    "key": "enrollment_type",
                    "valueType": {
                      "value": "type_enrollments:EnrollmentType",
                      "type": "id"
                    }
                  },
                  {
                    "key": "priority",
                    "valueType": {
                      "value": "type_enrollments:EnrollmentPriority",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_enrollments:Enrollment",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_latest_change_enrollment_import_datetime",
          "name": "Get Latest Change Enrollment Import Datetime",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/enrollments/v2",
                "type": "literal"
              },
              {
                "value": "/change-import/latest-import-datetime",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_enrollments:LatestImportDatetimeResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "download_attachment",
          "name": "Download Attachment",
          "path": {
            "pathParameters": [
              {
                "key": "enrollment_id",
                "type": {
                  "value": "type_enrollments:EnrollmentId",
                  "type": "id"
                }
              },
              {
                "key": "attachment_id",
                "type": {
                  "value": "type_enrollments:EnrollmentAttachmentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/enrollments/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "enrollment_id",
                "type": "pathParameter"
              },
              {
                "value": "/attachments/",
                "type": "literal"
              },
              {
                "value": "attachment_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_enrollments:EnrollmentAttachmentResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "list_attachments",
          "name": "List Attachments",
          "path": {
            "pathParameters": [
              {
                "key": "enrollment_id",
                "type": {
                  "value": "type_enrollments:EnrollmentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/enrollments/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "enrollment_id",
                "type": "pathParameter"
              },
              {
                "value": "/attachments",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "itemType": {
                  "value": "type_enrollments:EnrollmentAttachment",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "upload_attachment",
          "name": "Upload Attachment",
          "path": {
            "pathParameters": [
              {
                "key": "enrollment_id",
                "type": {
                  "value": "type_enrollments:EnrollmentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/enrollments/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "enrollment_id",
                "type": "pathParameter"
              },
              {
                "value": "/attachments",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_enrollments:EnrollmentAttachmentId",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete_attachment",
          "name": "Delete Attachment",
          "path": {
            "pathParameters": [
              {
                "key": "enrollment_id",
                "type": {
                  "value": "type_enrollments:EnrollmentId",
                  "type": "id"
                }
              },
              {
                "key": "attachment_id",
                "type": {
                  "value": "type_enrollments:EnrollmentAttachmentId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/enrollments/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "enrollment_id",
                "type": "pathParameter"
              },
              {
                "value": "/attachments/",
                "type": "literal"
              },
              {
                "value": "attachment_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_enrollments:EnrollmentId",
        "type_enrollments:EnrollmentAttachmentId",
        "type_enrollments:EnrollmentAttachmentResponse",
        "type_enrollments:EnrollmentAttachmentBase",
        "type_enrollments:EnrollmentAttachment",
        "type_enrollments:EnrollmentAttachmentCreate",
        "type_enrollments:EnrollmentStatus",
        "type_enrollments:IndividualAssignee",
        "type_enrollments:OrganizationAssignee",
        "type_enrollments:AssigneeId",
        "type_enrollments:Assignee",
        "type_enrollments:EnrollmentType",
        "type_enrollments:ProviderNpi",
        "type_enrollments:ChangeEnrollmentStatus",
        "type_enrollments:ChangeEnrollmentDocType",
        "type_enrollments:EnrollmentPriority",
        "type_enrollments:ChangeEnrollmentBase",
        "type_enrollments:EnrollmentSource",
        "type_enrollments:RemovableAssignee",
        "type_enrollments:Enrollment",
        "type_enrollments:LatestImportDatetimeResponse",
        "type_enrollments:EnrollmentFilters",
        "type_enrollments:EnrollmentPage"
      ],
      "subpackages": []
    },
    "subpackage_era": {
      "subpackageId": "subpackage_era",
      "name": "era",
      "endpoints": [],
      "webhooks": [],
      "types": ["type_era:EraId", "type_era:ERABase", "type_era:ERA"],
      "subpackages": []
    },
    "subpackage_identifiers": {
      "subpackageId": "subpackage_identifiers",
      "name": "identifiers",
      "endpoints": [],
      "webhooks": [],
      "types": [
        "type_identifiers:IdentifierCode",
        "type_identifiers:IdentifierId",
        "type_identifiers:MedicareProviderIdentifier",
        "type_identifiers:MedicaidProviderIdentifier",
        "type_identifiers:IdentifierValue",
        "type_identifiers:IdentifierBase",
        "type_identifiers:Identifier",
        "type_identifiers:IdentifierCreate",
        "type_identifiers:IdentifierUpdate",
        "type_identifiers:UpdatableIdentifier"
      ],
      "subpackages": []
    },
    "subpackage_individual": {
      "subpackageId": "subpackage_individual",
      "name": "individual",
      "endpoints": [
        {
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "individual_id",
                "type": {
                  "value": "type_individual:IndividualId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/individuals/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "individual_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "first_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "last_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "external_id",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "date_of_birth",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:Date",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "gender",
                    "valueType": {
                      "itemType": {
                        "value": "type_individual:Gender",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "patient_relationship_to_subscriber_code",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:PatientRelationshipToInsuredCodeAll",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "address",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:StreetAddressShortZip",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "phone_numbers",
                    "valueType": {
                      "itemType": {
                        "itemType": {
                          "value": "type_commons:PhoneNumber",
                          "type": "id"
                        },
                        "type": "list"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "phone_consent",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "email",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:Email",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "email_consent",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_individual:Individual",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_individual:IndividualId",
        "type_individual:IndividualBase",
        "type_individual:Individual",
        "type_individual:SubscriberBase",
        "type_individual:SubscriberCreate",
        "type_individual:Subscriber",
        "type_individual:PatientCreate",
        "type_individual:PatientBase",
        "type_individual:Patient",
        "type_individual:Gender"
      ],
      "subpackages": []
    },
    "subpackage_insurance-card": {
      "subpackageId": "subpackage_insurance-card",
      "name": "insurance-card",
      "endpoints": [
        {
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "insurance_card_id",
                "type": {
                  "value": "type_insurance-card:InsuranceCardId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/insurance_cards/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "insurance_card_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": ["type_insurance-card:InsuranceCardBase"],
                "properties": [
                  {
                    "key": "member_id",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "payer_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "payer_id",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_insurance-card:InsuranceCard",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_images",
          "name": "Get Images",
          "path": {
            "pathParameters": [
              {
                "key": "insurance_card_id",
                "type": {
                  "value": "type_insurance-card:InsuranceCardId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/insurance_cards/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "insurance_card_id",
                "type": "pathParameter"
              },
              {
                "value": "/images",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_insurance-card:InsuranceCardImages",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_insurance-card:InsuranceCardId",
        "type_insurance-card:InsuranceCardBase",
        "type_insurance-card:InsuranceCardCreate",
        "type_insurance-card:InsuranceCard",
        "type_insurance-card:InsuranceCardImages"
      ],
      "subpackages": []
    },
    "subpackage_invoices": {
      "subpackageId": "subpackage_invoices",
      "name": "invoices",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns Invoice identified by the id.\nIf the given id is not found, then 404 response will be returned.\nIf the authenticated user does not have permission to view the Invoice\nidentified by the id, then 403 response will be returned\n",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "description": "InvoiceId to be returned",
                "key": "id",
                "type": {
                  "value": "type_invoices:InvoiceId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/invoices/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_invoices:Invoice",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Returns all Invoices for the authenticated user's organziation.\nIf optional patient_external_id is provided in query string, then the result\nwill be limited to only those invoices that belong to the patient_external_id\n",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "search",
          "name": "Search",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/invoices/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "patient_external_id",
              "type": {
                "itemType": {
                  "value": "type_commons:PatientExternalId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "partial match supported",
              "key": "note",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "all invoices whose due date is before this due date",
              "key": "due_date_before",
              "type": {
                "itemType": {
                  "value": "type_commons:Date",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "all invoices whose due date is after this due date",
              "key": "due_date_after",
              "type": {
                "itemType": {
                  "value": "type_commons:Date",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "status",
              "type": {
                "itemType": {
                  "value": "type_invoices:InvoiceStatus",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to created_at",
              "key": "sort",
              "type": {
                "itemType": {
                  "value": "type_invoices:InvoiceSortField",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Sort direction",
              "key": "sort_direction",
              "type": {
                "itemType": {
                  "value": "type_commons:SortDirection",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_invoices:PagedInvoices",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Create invoices and return the newly created Invoices.\nPlease note that single InvoiceCreate can result in multiple Invoices being created due to the\nfact that the InvoiceCreate's claims could belong to multiple billing providers's payment processor\naccounts, thereby requiring creation of multiple invoices.\nIf the optional query parameter should_send is provided, then the behavior of whether to send\nthe invoice to the customer will depend on the value. Default behavior is to send the invoice\nupon creation of the invoice.\n",
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/invoices/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "If true, invoices will not be created in stripe. Default = False",
              "key": "preview_mode",
              "type": {
                "itemType": {
                  "value": {
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "If the invoice should be sent to the customer. Default = True",
              "key": "should_send",
              "type": {
                "itemType": {
                  "value": {
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "patient_external_id",
                    "valueType": {
                      "value": "type_commons:PatientExternalId",
                      "type": "id"
                    }
                  },
                  {
                    "key": "note",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "due_date",
                    "valueType": {
                      "value": "type_commons:Date",
                      "type": "id"
                    }
                  },
                  {
                    "key": "items",
                    "valueType": {
                      "itemType": {
                        "value": "type_invoices:InvoiceItem",
                        "type": "id"
                      },
                      "type": "list"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "itemType": {
                  "value": "type_invoices:CreatedInvoice",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityConflictErrorMessage",
                "type": "id"
              },
              "statusCode": 409
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityConflictError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityConflictErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 409,
              "name": "EntityConflictError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_invoices:InvoiceId",
        "type_invoices:PagedInvoices",
        "type_invoices:InvoiceSortField",
        "type_invoices:CreatedInvoice",
        "type_invoices:InvoiceFilter",
        "type_invoices:Invoice",
        "type_invoices:InvoicePreview",
        "type_invoices:InvoiceItem",
        "type_invoices:InvoiceStatus"
      ],
      "subpackages": []
    },
    "subpackage_organization-payers": {
      "subpackageId": "subpackage_organization-payers",
      "name": "organization-payers",
      "endpoints": [
        {
          "auth": true,
          "description": "Search for the payer given a payer uuid.",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "search",
          "name": "Search",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/organization-payers/v1",
                "type": "literal"
              },
              {
                "value": "/search",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "payer_uuid",
              "type": {
                "value": "type_payers:PayerUuid",
                "type": "id"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_organization-payers:SearchOrganizationPayerResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Get the payers affiliated with the current organization.",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_multi",
          "name": "Get Multi",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/organization-payers/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "payer_search_term",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_organization-payers:GetMultiOrganizationPayersResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Associate a payer with the current organization. If the payer is already associated, nothing is done.",
          "method": "PUT",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "add_organization_payer",
          "name": "Add Organization Payer",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/organization-payers/v1",
                "type": "literal"
              },
              {
                "value": "/add",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_organization-payers:AddOrganizationPayerRequest",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_organization-payers:AddOrganizationPayerResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_organization-payers:OrganizationPayerSummary",
        "type_organization-payers:OrganizationPayer",
        "type_organization-payers:OrganizationPayersPage",
        "type_organization-payers:GetMultiOrganizationPayersResponse",
        "type_organization-payers:AddOrganizationPayerRequest",
        "type_organization-payers:AddOrganizationPayerResponse",
        "type_organization-payers:SearchOrganizationPayerSearchResult",
        "type_organization-payers:SearchOrganizationPayerResponse"
      ],
      "subpackages": []
    },
    "subpackage_organization-tags": {
      "subpackageId": "subpackage_organization-tags",
      "name": "organization-tags",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getAll",
          "name": "Get All",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/organization-tags/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_organization-tags:OrganizationTagsPage",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/organization-tags/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_organization-tags:OrganizationTagCreate",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_organization-tags:OrganizationTag",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            },
            {
              "type": {
                "value": "type_commons:EntityConflictErrorMessage",
                "type": "id"
              },
              "statusCode": 409
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityConflictError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityConflictErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 409,
              "name": "EntityConflictError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "organization_tag_id",
                "type": {
                  "value": "type_organization-tags:OrganizationTagId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/organization-tags/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "organization_tag_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            },
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_organization-tags:OrganizationTagId",
        "type_organization-tags:OrganizationTagCreate",
        "type_organization-tags:OrganizationTag",
        "type_organization-tags:OrganizationTagsPage",
        "type_organization-tags:TagTypeEnum"
      ],
      "subpackages": []
    },
    "subpackage_page-sessions": {
      "subpackageId": "subpackage_page-sessions",
      "name": "page-sessions",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/page-sessions/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_page-sessions:CreatePageSessionRequest",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_page-sessions:AppSessionId",
        "type_page-sessions:PageSessionStartReason",
        "type_page-sessions:PageSessionEndReason",
        "type_page-sessions:CreatePageSessionRequest"
      ],
      "subpackages": []
    },
    "subpackage_patient-payment-configs": {
      "subpackageId": "subpackage_patient-payment-configs",
      "name": "patient-payment-configs",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns PatientPaymentConfig identified by the id.\nIf the given id is not found, then 404 response will be returned.\nIf the authenticated user does not have permission to view the PatientPaymentConfig\nidentified by the id, then 403 response will be returned\n",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "description": "PatientPaymentConfigId to be returned",
                "key": "id",
                "type": {
                  "value": "type_patient-payment-configs:PatientPaymentConfigId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/patient_payment_configs/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_patient-payment-configs:PatientPaymentConfig",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Returns all PatientPaymentConfig for the authenticated user's organization",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "search",
          "name": "Search",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/patient_payment_configs/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "limit the PatientPaymentConfig to those belonging to the patient_external_id",
              "key": "patient_external_id",
              "type": {
                "itemType": {
                  "value": "type_commons:PatientExternalId",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to patient_external_id",
              "key": "sort",
              "type": {
                "itemType": {
                  "value": "type_patient-payment-configs:PatientPaymentConfigSortField",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "Sort direction",
              "key": "sort_direction",
              "type": {
                "value": "type_commons:SortDirection",
                "type": "id"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_patient-payment-configs:PagedPatientPaymentConfig",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Creates the given PatientPaymentConfig, and returns the newly created PatientPaymentConfig.\n",
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/patient_payment_configs/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_patient-payment-configs:PatientPaymentConfigCreate",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_patient-payment-configs:PatientPaymentConfig",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityConflictErrorMessage",
                "type": "id"
              },
              "statusCode": 409
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityConflictError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityConflictErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 409,
              "name": "EntityConflictError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Patch PatientPaymentConfig identified the id.\nIf PatientPaymentConfig is not found by the provided id, then 404 will be returned.\nIf the authenticated user does not have the permission to update the PatientPaymentConfig identified.\n",
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "patch",
          "name": "Patch",
          "path": {
            "pathParameters": [
              {
                "description": "PatientPaymentConfigId to be patched",
                "key": "id",
                "type": {
                  "value": "type_patient-payment-configs:PatientPaymentConfigId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/patient_payment_configs/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_patient-payment-configs:PatientPaymentConfigPatch",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_patient-payment-configs:PatientPaymentConfig",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Deletes the PatientPaymentConfigId identified by the id.\nIf PatientPaymentConfigId is not found by the provided id, then 404 will be returned.\nIf the authenticated user does not have the permission to update the PatientPaymentConfig identified\nby the id, then 403 will be returned\n",
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "description": "PatientPaymentConfigId to be deleted",
                "key": "id",
                "type": {
                  "value": "type_patient-payment-configs:PatientPaymentConfigId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/patient_payment_configs/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_patient-payment-configs:PatientPaymentConfigId",
        "type_patient-payment-configs:PagedPatientPaymentConfig",
        "type_patient-payment-configs:PatientPaymentConfigSortField",
        "type_patient-payment-configs:PatientPaymentConfigFilter",
        "type_patient-payment-configs:PatientPaymentConfig",
        "type_patient-payment-configs:PatientPaymentConfigCreate",
        "type_patient-payment-configs:PatientPaymentConfigPatch"
      ],
      "subpackages": []
    },
    "subpackage_patients": {
      "subpackageId": "subpackage_patients",
      "name": "patients",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getAll",
          "name": "Get All",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/patients/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "multi_field_search_string",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "date_of_birth",
              "type": {
                "itemType": {
                  "value": "type_commons:Date",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "has_secondary_insurance",
              "type": {
                "itemType": {
                  "value": {
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "description": "Defaults to most recent date of service desc",
              "key": "sort",
              "type": {
                "itemType": {
                  "value": "type_patients:PatientRollupSummarySortOptions",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_patients:PatientRollupSummariesPage",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "patient_external_id",
                "type": {
                  "value": "type_commons:PatientExternalId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/patients/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "patient_external_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Denotes whether the patient_external_id is base64 encoded. This can be used to\nenable sending patient_external_ids which have otherwise illegal characters like\nslashes.\n",
              "key": "encoded",
              "type": {
                "itemType": {
                  "value": {
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_patients:PatientRollup",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_patients:MissingPrimarySubscriberErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_patients:InvalidBase64EncodingErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "MissingPrimarySubscriberError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_patients:MissingPrimarySubscriberErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "MissingPrimarySubscriberError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "InvalidBase64EncodingError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_patients:InvalidBase64EncodingErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "InvalidBase64EncodingError"
            }
          ],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_patients:PatientRollupSummariesPage",
        "type_patients:PatientRollupSummarySortOptions",
        "type_patients:PatientRollupSummary",
        "type_patients:PatientRollup",
        "type_patients:MissingPrimarySubscriberErrorMessage",
        "type_patients:BaseErrorMessage",
        "type_patients:InvalidBase64EncodingErrorMessage"
      ],
      "subpackages": []
    },
    "subpackage_payers": {
      "subpackageId": "subpackage_payers",
      "name": "payers",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get payer",
          "path": {
            "pathParameters": [
              {
                "key": "payer_uuid",
                "type": {
                  "value": "type_payers:PayerUuid",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/payers/v3",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "payer_uuid",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_payers:Payer",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getAll",
          "name": "Get all payers",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/payers/v3",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Defaults to 100",
              "key": "limit",
              "type": {
                "itemType": {
                  "value": {
                    "type": "integer"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "search_term",
              "type": {
                "itemType": {
                  "value": {
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "key": "page_token",
              "type": {
                "itemType": {
                  "value": "type_commons:PageToken",
                  "type": "id"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_payers:PayerPage",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_payers:PayerUuid",
        "type_payers:PayerId",
        "type_payers:PayerName",
        "type_payers:PayerPage",
        "type_payers:Payer"
      ],
      "subpackages": []
    },
    "subpackage_payment-account-configs": {
      "subpackageId": "subpackage_payment-account-configs",
      "name": "payment-account-configs",
      "description": "PaymentAccountConfig reprents a configuration record for integration with third party payment processors.\nIf an organization has some or all of their billing providers with their own third party payment processor\naccounts, then an instance of PaymentAccountConfig must be created for each billing provider npi with their own third\nparty payment processor account. There must not be any overlap of such PaymentAccountConfig records with respect to the\nbilling provider npi, i.e., there must be only one PaymentAccountConfig identified by the billing provider npi.\nThe only exception is the default billing provider npi, represented as \"*\". The PaymentAccountConfig containing the default\nbilling provider npi (\"*\") will be used in case the billing provider npi cannot be matched to a PaymentAccountConfig.\nIf all of the billing providers for an organization share the same third party payment processor account, then simple [\"*\"]\nas the billing_provider_npis should suffice.\n",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns PaymentAccountConfig identified by the id.\nIf the given id is not found, then 404 response will be returned.\nIf the authenticated user does not have permission to view the PaymentAccountConfig\nidentified by the id, then 403 response will be returned\n",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "description": "PaymentAccountConfigId to be returned",
                "key": "id",
                "type": {
                  "value": "type_payment-account-configs:PaymentAccountConfigId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/payment_account_configs/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_payment-account-configs:PaymentAccountConfig",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Returns all PaymentAccountConfigs for the authenticated user's organization",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getAll",
          "name": "Get All",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/payment_account_configs/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "itemType": {
                  "value": "type_payment-account-configs:PaymentAccountConfig",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Creates the given PaymentAccountConfig, and returns the newly created PaymentAccountConfig.\nIf the provided PaymentAccountApiToken is either invalid or does not have all of the requried permissions, then 422 response will be returned.\nIf there already exists a PaymentAccountConfig for the organization with the same npi, then 422 response will be returned.\n",
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/payment_account_configs/v1",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_payment-account-configs:PaymentAccountConfigCreate",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_payment-account-configs:PaymentAccountConfig",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_commons:EntityConflictErrorMessage",
                "type": "id"
              },
              "statusCode": 409
            },
            {
              "type": {
                "value": "type_payment-account-configs:PaymentAccountConfigNameAlreadyExistsErrorContent",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityConflictError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityConflictErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 409,
              "name": "EntityConflictError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "PaymentAccountConfigNameAlreadyExistsError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_payment-account-configs:PaymentAccountConfigNameAlreadyExistsErrorContent",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "PaymentAccountConfigNameAlreadyExistsError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Patch PaymentAccountConfig identified the id.\nIf PaymentAccountConfig is not found by the provided id, then 404 will be returned.\nIf the authenticated user does not have the permission to update the PaymentAccountConfig identified by the id, then 403 will be returned.\nIf the provided PaymentAccountApiToken is either invalid or does not have all of teh requried permissions, then 422 response will be returned.\nIf there already exists a PaymentAccountConfig for the organization with the same npi, then 422 response will be returned.\n",
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "patch",
          "name": "Patch",
          "path": {
            "pathParameters": [
              {
                "description": "PaymentAccountConfigId to be patched",
                "key": "id",
                "type": {
                  "value": "type_payment-account-configs:PaymentAccountConfigId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/payment_account_configs/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_payment-account-configs:PaymentAccountConfigPatch",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_payment-account-configs:PaymentAccountConfig",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:UnprocessableEntityErrorMessage",
                "type": "id"
              },
              "statusCode": 422
            },
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            },
            {
              "type": {
                "value": "type_payment-account-configs:PaymentAccountConfigNameAlreadyExistsErrorContent",
                "type": "id"
              },
              "statusCode": 422
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnprocessableEntityError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnprocessableEntityErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "UnprocessableEntityError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "PaymentAccountConfigNameAlreadyExistsError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_payment-account-configs:PaymentAccountConfigNameAlreadyExistsErrorContent",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 422,
              "name": "PaymentAccountConfigNameAlreadyExistsError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Deletes the PaymentAccountConfig identified by the id.\nIf PaymentAccountConfig is not found by the provided id, then 404 will be returned.\nIf the authenticated user does not have the permission to update the PaymentAccountConfig identified\nby the id, then 403 will be returned\n",
          "method": "DELETE",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "description": "PaymentAccountConfigId to be deleted",
                "key": "id",
                "type": {
                  "value": "type_payment-account-configs:PaymentAccountConfigId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/payment_account_configs/v1",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            },
            {
              "type": {
                "value": "type_commons:UnauthorizedErrorMessage",
                "type": "id"
              },
              "statusCode": 403
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            },
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "UnauthorizedError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:UnauthorizedErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 403,
              "name": "UnauthorizedError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Verify that the provided claims can be invoiced for the provided patient_external_id.\nInvoice creation requires that there exists a valid PaymentAccountConfig for the claim's billing provider npi\nand the third party payment processor's customer can be identified by the patient_external_id.\n",
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "verifyCanInvoice",
          "name": "Verify Can Invoice",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/payment_account_configs/v1",
                "type": "literal"
              },
              {
                "value": "/verify_can_invoice",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_payment-account-configs:VerifyCanInvoiceRequest",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_payment-account-configs:VerifyCanInvoiceResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [
            {
              "type": {
                "value": "type_commons:EntityNotFoundErrorMessage",
                "type": "id"
              },
              "statusCode": 404
            }
          ],
          "errorsV2": [
            {
              "type": {
                "extends": [],
                "properties": [
                  {
                    "key": "errorName",
                    "valueType": {
                      "value": {
                        "value": "EntityNotFoundError",
                        "type": "stringLiteral"
                      },
                      "type": "literal"
                    }
                  },
                  {
                    "key": "content",
                    "valueType": {
                      "value": "type_commons:EntityNotFoundErrorMessage",
                      "type": "id"
                    }
                  }
                ],
                "type": "object"
              },
              "statusCode": 404,
              "name": "EntityNotFoundError"
            }
          ],
          "examples": []
        },
        {
          "auth": true,
          "description": "Verify that the provided PaymentAccountApiToken is a valid token.\nVerification includes that the provided token has all of the appropriate permissions.\n",
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "verifyApiToken",
          "name": "Verify Api Token",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/payment_account_configs/v1",
                "type": "literal"
              },
              {
                "value": "/verify_api_token",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_payment-account-configs:PaymentAccountApiToken",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": {
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "description": "Verifies that the provided PatientExternalId is associated with a third party payment processor's customer.\nIf the customer exists, then the URL for the customer specific page will be return. Otherwise, the URL for the general\ncustomer page will be returned (this generally is a page listing the existing customers).\n",
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "verifyCustomerExists",
          "name": "Verify Customer Exists",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/payment_account_configs/v1",
                "type": "literal"
              },
              {
                "value": "/verify_customer_exists",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "PatientExternalId to lookup",
              "key": "patient_external_id",
              "type": {
                "value": "type_commons:PatientExternalId",
                "type": "id"
              }
            },
            {
              "description": "If provided, the API token associated with the BillingProviderNpi will be used to verify",
              "key": "billing_provider_npi",
              "type": {
                "itemType": {
                  "value": "type_payment-account-configs:BillingProviderNpi",
                  "type": "id"
                },
                "type": "optional"
              }
            },
            {
              "description": "If provided, then will also check to see if customer has email. If not, then return false. Default = True",
              "key": "check_email_exists",
              "type": {
                "itemType": {
                  "value": {
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_payment-account-configs:VerifyCustomerExistsResponse",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_payment-account-configs:PaymentAccountConfigId",
        "type_payment-account-configs:PaymentAccountApiToken",
        "type_payment-account-configs:BillingProviderNpi",
        "type_payment-account-configs:PaymentAccountType",
        "type_payment-account-configs:PaymentAccountConfig",
        "type_payment-account-configs:ChargebeePaymentAccountConfig",
        "type_payment-account-configs:CedarPaymentAccountConfig",
        "type_payment-account-configs:SquarePaymentAccountConfig",
        "type_payment-account-configs:StripePaymentAccountConfig",
        "type_payment-account-configs:PaymentAccountConfigCreate",
        "type_payment-account-configs:ChargebeePaymentAccountConfigCreate",
        "type_payment-account-configs:SquarePaymentAccountConfigCreate",
        "type_payment-account-configs:StripePaymentAccountConfigCreate",
        "type_payment-account-configs:PaymentAccountConfigPatch",
        "type_payment-account-configs:ChargebeePaymentAccountConfigPatch",
        "type_payment-account-configs:SquarePaymentAccountConfigPatch",
        "type_payment-account-configs:StripePaymentAccountConfigPatch",
        "type_payment-account-configs:VerifyCanInvoiceResultType",
        "type_payment-account-configs:VerifyCanInvoiceRequest",
        "type_payment-account-configs:VerifyCanInvoiceResponse",
        "type_payment-account-configs:VerifyCanInvoiceResponseItem",
        "type_payment-account-configs:VerifyCustomerExistsResponse",
        "type_payment-account-configs:PaymentAccountConfigNameAlreadyExistsErrorContent"
      ],
      "subpackages": []
    },
    "subpackage_permissions": {
      "subpackageId": "subpackage_permissions",
      "name": "permissions",
      "endpoints": [],
      "webhooks": [],
      "types": ["type_permissions:PermissionsEnum"],
      "subpackages": []
    },
    "subpackage_pipeline-commons": {
      "subpackageId": "subpackage_pipeline-commons",
      "name": "pipeline-commons",
      "endpoints": [],
      "webhooks": [],
      "types": [
        "type_pipeline-commons:PipelineId",
        "type_pipeline-commons:PhaseId",
        "type_pipeline-commons:StepId",
        "type_pipeline-commons:RuleId",
        "type_pipeline-commons:ConfigurableRuleId"
      ],
      "subpackages": []
    },
    "subpackage_pipeline-configuration": {
      "subpackageId": "subpackage_pipeline-configuration",
      "name": "pipeline-configuration",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "get_pipeline_configurations",
          "name": "Get Pipeline Configurations",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/pipeline-configuration/v2",
                "type": "literal"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "value": "type_pipeline-configuration:PipelineConfiguration",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_pipeline-configuration:PipelineConfiguration",
        "type_pipeline-configuration:Pipeline",
        "type_pipeline-configuration:Phase",
        "type_pipeline-configuration:Step",
        "type_pipeline-configuration:OrdinaryRule",
        "type_pipeline-configuration:ConfigurableRuleSummary",
        "type_pipeline-configuration:Rule"
      ],
      "subpackages": []
    },
    "subpackage_rules_engine_types": {
      "subpackageId": "subpackage_rules_engine_types",
      "name": "rules_engine_types",
      "endpoints": [],
      "webhooks": [],
      "types": [
        "type_rules_engine_types:RaResult",
        "type_rules_engine_types:RulesEnginePipelineType",
        "type_rules_engine_types:RulesEngineProcessFailure",
        "type_rules_engine_types:RulesEngineProcessSuccess",
        "type_rules_engine_types:RulesEngineProcessSuccessSync",
        "type_rules_engine_types:RulesEngineProcessSuccessAsync",
        "type_rules_engine_types:RulesEngineProcessResult",
        "type_rules_engine_types:RulesEngineCheckFailure",
        "type_rules_engine_types:RulesEngineCheckResponse"
      ],
      "subpackages": []
    },
    "subpackage_service-facility": {
      "subpackageId": "subpackage_service-facility",
      "name": "service-facility",
      "endpoints": [
        {
          "auth": true,
          "method": "PATCH",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "service_facility_id",
                "type": {
                  "value": "type_service-facility:ServiceFacilityId",
                  "type": "id"
                }
              }
            ],
            "parts": [
              {
                "value": "/api/service_facility/v2",
                "type": "literal"
              },
              {
                "value": "/",
                "type": "literal"
              },
              {
                "value": "service_facility_id",
                "type": "pathParameter"
              },
              {
                "value": "",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "extends": [],
                "properties": [
                  {
                    "key": "organization_name",
                    "valueType": {
                      "itemType": {
                        "value": {
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "optional"
                    }
                  },
                  {
                    "key": "address",
                    "valueType": {
                      "itemType": {
                        "value": "type_commons:StreetAddressLongZip",
                        "type": "id"
                      },
                      "type": "optional"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_service-facility:EncounterServiceFacility",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": [
        "type_service-facility:ServiceFacilityId",
        "type_service-facility:EncounterServiceFacilityBase",
        "type_service-facility:EncounterServiceFacility"
      ],
      "subpackages": []
    },
    "subpackage_tags": {
      "subpackageId": "subpackage_tags",
      "name": "tags",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "getAll",
          "name": "Get All",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/tags",
                "type": "literal"
              },
              {
                "value": "/v3",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "value": {
                "itemType": {
                  "value": "type_tags:Tag",
                  "type": "id"
                },
                "type": "list"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "production",
          "environments": [
            {
              "id": "production",
              "baseUrl": "https://api.joincandidhealth.com"
            },
            {
              "id": "staging",
              "baseUrl": "https://api-staging.joincandidhealth.com"
            }
          ],
          "id": "create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "value": "/api/tags",
                "type": "literal"
              },
              {
                "value": "/v3",
                "type": "literal"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "contentType": "application/json",
              "shape": {
                "value": {
                  "value": "type_tags:TagCreate",
                  "type": "id"
                },
                "type": "reference"
              },
              "type": "json"
            }
          },
          "response": {
            "type": {
              "value": {
                "value": "type_tags:Tag",
                "type": "id"
              },
              "type": "reference"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": []
        }
      ],
      "webhooks": [],
      "types": ["type_tags:TagId", "type_tags:TagCreate", "type_tags:Tag", "type_tags:TagColorEnum"],
      "subpackages": []
    },
    "subpackage_tasks/commons": {
      "subpackageId": "subpackage_tasks/commons",
      "name": "commons",
      "endpoints": [],
      "webhooks": [],
      "types": ["type_tasks/commons:TaskType", "type_tasks/commons:TaskCategory"],
      "subpackages": []
    },
    "subpackage_test-fern": {
      "subpackageId": "subpackage_test-fern",
      "name": "test-fern",
      "endpoints": [],
      "webhooks": [],
      "types": ["type_test-fern:ParentPatch", "type_test-fern:UnionParentPatch", "type_test-fern:ChildPatch"],
      "subpackages": []
    },
    "subpackage_upload-validation": {
      "subpackageId": "subpackage_upload-validation",
      "name": "upload-validation",
      "endpoints": [],
      "webhooks": [],
      "types": [
        "type_upload-validation:FailedValidationResultType",
        "type_upload-validation:FailedValidationResult",
        "type_upload-validation:ValidationResults",
        "type_upload-validation:IngestResults",
        "type_upload-validation:UploadResults"
      ],
      "subpackages": []
    }
  },
  "rootPackage": {
    "endpoints": [],
    "webhooks": [],
    "types": [],
    "subpackages": [
      "subpackage_auth",
      "subpackage_bulk-claim-actions",
      "subpackage_chargemasters",
      "subpackage_claim",
      "subpackage_encounter-providers",
      "subpackage_encounter-summaries",
      "subpackage_encounters-internal",
      "subpackage_encounters",
      "subpackage_expected-network-status-tia",
      "subpackage_expected-network-status",
      "subpackage_exports",
      "subpackage_fee-schedules",
      "subpackage_guarantor",
      "subpackage_insurance-adjustments",
      "subpackage_internal-api-testing",
      "subpackage_managed-emr-configs",
      "subpackage_organization-providers",
      "subpackage_patient-payments",
      "subpackage_remits",
      "subpackage_secondary-submission",
      "subpackage_service-line-ledgers",
      "subpackage_service-lines",
      "subpackage_tasks",
      "subpackage_users",
      "subpackage_work-queues",
      "subpackage_x12",
      "subpackage_adjustments",
      "subpackage_billing-notes",
      "subpackage_claim-submission",
      "subpackage_claims",
      "subpackage_cms-1500",
      "subpackage_commons",
      "subpackage_configurable-rules-types",
      "subpackage_configurable-rules-variables",
      "subpackage_configurable-rules",
      "subpackage_contracts",
      "subpackage_credentialing",
      "subpackage_dashboards",
      "subpackage_diagnoses",
      "subpackage_encounter_timeline",
      "subpackage_enrollments",
      "subpackage_era",
      "subpackage_identifiers",
      "subpackage_individual",
      "subpackage_insurance-card",
      "subpackage_invoices",
      "subpackage_organization-payers",
      "subpackage_organization-tags",
      "subpackage_page-sessions",
      "subpackage_patient-payment-configs",
      "subpackage_patients",
      "subpackage_payers",
      "subpackage_payment-account-configs",
      "subpackage_permissions",
      "subpackage_pipeline-commons",
      "subpackage_pipeline-configuration",
      "subpackage_rules_engine_types",
      "subpackage_service-facility",
      "subpackage_tags",
      "subpackage_test-fern",
      "subpackage_upload-validation"
    ]
  },
  "auth": {
    "tokenName": "token",
    "type": "bearerAuth"
  }
}
