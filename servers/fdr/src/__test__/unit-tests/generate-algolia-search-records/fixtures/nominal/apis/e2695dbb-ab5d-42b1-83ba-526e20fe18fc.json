{
  "rootPackage": {
    "endpoints": [],
    "subpackages": [
      "subpackage_Asset",
      "subpackage_Attachment",
      "subpackage_Authentication",
      "subpackage_AuthenticationServiceV2",
      "subpackage_Authorization",
      "subpackage_Catalog",
      "subpackage_Checklist",
      "subpackage_ChecklistExecution",
      "subpackage_Comments",
      "subpackage_Compute",
      "subpackage_ComputeRepresentation",
      "subpackage_Connection",
      "subpackage_ConnectionBootstrapper",
      "subpackage_CsvSplitter",
      "subpackage_DataExport",
      "subpackage_DataReview",
      "subpackage_DataSource",
      "subpackage_Event",
      "subpackage_Ingest",
      "subpackage_Integrations",
      "subpackage_InternalVersioning",
      "subpackage_Job",
      "subpackage_LogSet",
      "subpackage_LogicalSeries",
      "subpackage_NominalChannelWriter",
      "subpackage_NominalDataSource",
      "subpackage_NominalSeries",
      "subpackage_Notebook",
      "subpackage_OpenApiSpec",
      "subpackage_ResourceMetadata",
      "subpackage_Run",
      "subpackage_Secret",
      "subpackage_SeriesArchetype",
      "subpackage_SeriesCache",
      "subpackage_Template",
      "subpackage_Units",
      "subpackage_Upload",
      "subpackage_Versioning",
      "subpackage_Video",
      "subpackage_VideoSegment",
      "subpackage_VideoSegmenter",
      "subpackage_channel-variables",
      "subpackage_chart-api",
      "subpackage_common",
      "subpackage_comparison-run",
      "subpackage_comparison-workbook-definition",
      "subpackage_compute-api-v1",
      "subpackage_global",
      "subpackage_layout",
      "subpackage_pagination-api",
      "subpackage_resolved-compute-api",
      "subpackage_viz-definition",
      "subpackage_workbook-common"
    ],
    "types": [],
    "webhooks": [],
    "websockets": []
  },
  "types": {
    "type_Asset:DataScopeName": {
      "name": "DataScopeName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Asset:SeriesTagName": {
      "name": "SeriesTagName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Asset:SeriesTagValue": {
      "name": "SeriesTagValue",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Asset:Asset": {
      "name": "Asset",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_common:AssetRid"
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_common:PropertyValue"
              }
            }
          },
          {
            "description": "Labels associated with the asset. These labels do not have a time dimension.\nTo associate labels with a range of time, create a time range on the asset with labels.",
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          },
          {
            "description": "Links associated with the asset. These links do not have a time dimension.\nTo associate links with a range of time, create a time range on the asset with links.",
            "key": "links",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_common:Link"
              }
            }
          },
          {
            "description": "The data scopes associated with the asset.",
            "key": "dataScopes",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Asset:AssetDataScope"
              }
            }
          },
          {
            "key": "createdBy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "updatedAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "attachments",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:AttachmentRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Asset:AddDataScopesToAssetRequest": {
      "name": "AddDataScopesToAssetRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The data scopes to add to the asset.\n\nThrows if any existing data scopes have data scope names that conflict with the data scope names\nin the request.",
            "key": "dataScopes",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Asset:CreateAssetDataScope"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Asset:CreateAssetRequest": {
      "name": "CreateAssetRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_common:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          },
          {
            "key": "links",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_common:Link"
              }
            }
          },
          {
            "description": "The data scopes associated with the asset.",
            "key": "dataScopes",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Asset:CreateAssetDataScope"
              }
            }
          },
          {
            "key": "attachments",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:AttachmentRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Asset:UpdateAssetRequest": {
      "name": "UpdateAssetRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_common:PropertyName"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_common:PropertyValue"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:Label"
                }
              }
            }
          },
          {
            "key": "links",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_common:Link"
                }
              }
            }
          },
          {
            "description": "The data scopes for the asset. This will replace all existing data scopes with the scopes specified.",
            "key": "dataScopes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Asset:CreateAssetDataScope"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Asset:SortOptions": {
      "name": "SortOptions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isDescending",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_Asset:SortField"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Asset:SortField": {
      "name": "SortField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "CREATED_AT"
          }
        ]
      }
    },
    "type_Asset:SearchAssetsRequest": {
      "name": "SearchAssetsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "sort",
            "valueType": {
              "type": "id",
              "value": "type_Asset:SortOptions"
            }
          },
          {
            "description": "Page sizes greater than 10_000 will be rejected",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          },
          {
            "key": "query",
            "valueType": {
              "type": "id",
              "value": "type_Asset:SearchAssetsQuery"
            }
          },
          {
            "description": "Default search status is NOT_ARCHIVED if none are provided. Allows for including archived assets in search.",
            "key": "archivedStatuses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:ArchivedStatus"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Asset:SearchAssetsQuery": {
      "name": "SearchAssetsQuery",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "searchText",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "searchText",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "label",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "label",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Label"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "property",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "property",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Property"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "and",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "and",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_Asset:SearchAssetsQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "or",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "or",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_Asset:SearchAssetsQuery"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Asset:SearchAssetsResponse": {
      "name": "SearchAssetsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Asset:Asset"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Asset:Channel": {
      "name": "Channel",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Asset:Unit": {
      "name": "Unit",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "symbol",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Asset:SeriesDataType": {
      "name": "SeriesDataType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "DOUBLE"
          },
          {
            "value": "STRING"
          }
        ]
      }
    },
    "type_Asset:ChannelMetadata": {
      "name": "ChannelMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_Asset:Channel"
            }
          },
          {
            "key": "dataSource",
            "valueType": {
              "type": "id",
              "value": "type_common:DataSource"
            }
          },
          {
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Asset:Unit"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "dataType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Asset:SeriesDataType"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Asset:SearchAssetChannelsRequest": {
      "name": "SearchAssetChannelsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "searchText",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "If not empty, will filter to channels from the selected data scope names.",
            "key": "dataScopeNameFilter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Asset:DataScopeName"
                }
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          },
          {
            "description": "Defaults to 1000. Will throw if larger than 10000.",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Asset:SearchAssetChannelsResponse": {
      "name": "SearchAssetChannelsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Asset:ChannelMetadata"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Asset:CreateAssetDataScope": {
      "name": "CreateAssetDataScope",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the data scope. The name is guaranteed to be be unique within the context of an asset.",
            "key": "dataScopeName",
            "valueType": {
              "type": "id",
              "value": "type_Asset:DataScopeName"
            }
          },
          {
            "key": "dataSource",
            "valueType": {
              "type": "id",
              "value": "type_common:DataSource"
            }
          },
          {
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Duration"
              }
            }
          },
          {
            "description": "Filters the data source to series matching these tag values. The filtered set of series should be\nthe ones that belong to the asset.",
            "key": "seriesTags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Asset:SeriesTagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Asset:SeriesTagValue"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Asset:AssetDataScope": {
      "name": "AssetDataScope",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the data scope. The name is guaranteed to be be unique within the context of an asset.",
            "key": "dataScopeName",
            "valueType": {
              "type": "id",
              "value": "type_Asset:DataScopeName"
            }
          },
          {
            "key": "dataSource",
            "valueType": {
              "type": "id",
              "value": "type_common:DataSource"
            }
          },
          {
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Duration"
              }
            }
          },
          {
            "key": "timestampType",
            "valueType": {
              "type": "id",
              "value": "type_Run:WeakTimestampType"
            }
          },
          {
            "description": "Filters the data source to series matching these tag values. The filtered set of series should be\nthe ones that belong to the asset.",
            "key": "seriesTags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Asset:SeriesTagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Asset:SeriesTagValue"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Asset:UpdateAttachmentsRequest": {
      "name": "UpdateAttachmentsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "attachmentsToAdd",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:AttachmentRid"
              }
            }
          },
          {
            "key": "attachmentsToRemove",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:AttachmentRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Attachment:S3Path": {
      "name": "S3Path",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Attachment:AttachmentRid": {
      "name": "AttachmentRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Attachment:Attachment": {
      "name": "Attachment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_Attachment:AttachmentRid"
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "s3Path",
            "valueType": {
              "type": "id",
              "value": "type_Attachment:S3Path"
            }
          },
          {
            "key": "fileType",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "createdBy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Attachment:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Attachment:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Attachment:Label"
              }
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "isArchived",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Attachment:Token": {
      "name": "Token",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Attachment:PropertyName": {
      "name": "PropertyName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Attachment:PropertyValue": {
      "name": "PropertyValue",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Attachment:Property": {
      "name": "Property",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_Attachment:PropertyName"
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "id",
              "value": "type_Attachment:PropertyValue"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Attachment:Label": {
      "name": "Label",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Attachment:CreateAttachmentRequest": {
      "name": "CreateAttachmentRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "s3Path",
            "valueType": {
              "type": "id",
              "value": "type_Attachment:S3Path"
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Attachment:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Attachment:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Attachment:Label"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Attachment:UpdateAttachmentRequest": {
      "name": "UpdateAttachmentRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_Attachment:PropertyName"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_Attachment:PropertyValue"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Attachment:Label"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Attachment:GetAttachmentsRequest": {
      "name": "GetAttachmentsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "attachmentRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Attachment:AttachmentRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Attachment:GetAttachmentsResponse": {
      "name": "GetAttachmentsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "response",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Attachment:Attachment"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Attachment:SearchAttachmentsQuery": {
      "name": "SearchAttachmentsQuery",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "searchText",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "searchText",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "label",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "label",
                  "valueType": {
                    "type": "id",
                    "value": "type_Attachment:Label"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "property",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "property",
                  "valueType": {
                    "type": "id",
                    "value": "type_Attachment:Property"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "and",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "and",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_Attachment:SearchAttachmentsQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "or",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "or",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_Attachment:SearchAttachmentsQuery"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Authentication:User": {
      "name": "User",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "uuid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "uuid"
                }
              }
            }
          },
          {
            "key": "displayName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "username",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "orgRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authentication:CreateUserRequest": {
      "name": "CreateUserRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "displayName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "orgUuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "uuid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authentication:AddToOrganizationRequest": {
      "name": "AddToOrganizationRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "userUuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "uuid"
              }
            }
          },
          {
            "key": "orgUuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "uuid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_AuthenticationServiceV2:DefaultTimeRangeTypeSetting": {
      "name": "DefaultTimeRangeTypeSetting",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "DEFAULT"
          },
          {
            "value": "ABSOLUTE"
          },
          {
            "value": "RELATIVE"
          }
        ]
      }
    },
    "type_AuthenticationServiceV2:AppearanceSetting": {
      "name": "AppearanceSetting",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "SYSTEM"
          },
          {
            "value": "LIGHT"
          },
          {
            "value": "DARK"
          }
        ]
      }
    },
    "type_AuthenticationServiceV2:TimezoneSetting": {
      "name": "TimezoneSetting",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "LOCAL"
          },
          {
            "value": "UTC"
          }
        ]
      }
    },
    "type_AuthenticationServiceV2:OrgRid": {
      "name": "OrgRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_AuthenticationServiceV2:OrgSettings": {
      "name": "OrgSettings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "defaultTimeRangeType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:DefaultTimeRangeTypeSetting"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_AuthenticationServiceV2:UserRid": {
      "name": "UserRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_AuthenticationServiceV2:UserV2": {
      "name": "UserV2",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_AuthenticationServiceV2:UserRid"
            }
          },
          {
            "key": "orgRid",
            "valueType": {
              "type": "id",
              "value": "type_AuthenticationServiceV2:OrgRid"
            }
          },
          {
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "displayName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Avatar URL or a default avatar if the user does not have one.",
            "key": "avatarUrl",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_AuthenticationServiceV2:UserSettings": {
      "name": "UserSettings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "defaultTimeRangeType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:DefaultTimeRangeTypeSetting"
              }
            }
          },
          {
            "key": "appearance",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:AppearanceSetting"
              }
            }
          },
          {
            "key": "timezone",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:TimezoneSetting"
              }
            }
          },
          {
            "key": "timeSeriesHoverTooltipConcise",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_AuthenticationServiceV2:Token": {
      "name": "Token",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_AuthenticationServiceV2:SortByField": {
      "name": "SortByField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "NAME"
          },
          {
            "value": "EMAIL"
          },
          {
            "value": "CREATED_AT"
          },
          {
            "value": "UPDATED_AT"
          }
        ]
      }
    },
    "type_AuthenticationServiceV2:SortBy": {
      "name": "SortBy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isDescending",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_AuthenticationServiceV2:SortByField"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_AuthenticationServiceV2:SearchUsersQuery": {
      "name": "SearchUsersQuery",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "and",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "and",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_AuthenticationServiceV2:SearchUsersQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "or",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "or",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_AuthenticationServiceV2:SearchUsersQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "description": "Performs case insensitive exact match on email",
            "discriminantValue": "exactMatch",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "exactMatch",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "description": "Searches email and display name",
            "discriminantValue": "searchText",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "searchText",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_AuthenticationServiceV2:SearchUsersRequest": {
      "name": "SearchUsersRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "query",
            "valueType": {
              "type": "id",
              "value": "type_AuthenticationServiceV2:SearchUsersQuery"
            }
          },
          {
            "description": "UPDATED_AT descending by default",
            "key": "sortBy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:SortBy"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:Token"
              }
            }
          },
          {
            "description": "Defaults to 100. Will throw if larger than 1_000.",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_AuthenticationServiceV2:SearchUsersResponse": {
      "name": "SearchUsersResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "users",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:UserV2"
              }
            }
          },
          {
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_AuthenticationServiceV2:SearchUsersResponseV2": {
      "name": "SearchUsersResponseV2",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:UserV2"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_AuthenticationServiceV2:UpdateMyProfileRequest": {
      "name": "UpdateMyProfileRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "displayName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authorization:AuthorizationRequest": {
      "name": "AuthorizationRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authorization:RegistrationRequest": {
      "name": "RegistrationRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "If omitted, will use the user's organizationRid.",
            "key": "organizationRid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authorization:GetAccessTokenRequest": {
      "name": "GetAccessTokenRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "idToken",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The access token's audience must be for the Nominal API.",
            "key": "accessToken",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authorization:GetAccessTokenResponse": {
      "name": "GetAccessTokenResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "accessToken",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "expiresAtSeconds",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "userUuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "uuid"
              }
            }
          },
          {
            "key": "orgUuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "uuid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authorization:OrgRid": {
      "name": "OrgRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Authorization:OrgAssignmentRule": {
      "name": "OrgAssignmentRule",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "condition",
            "valueType": {
              "type": "id",
              "value": "type_Authorization:Condition"
            }
          },
          {
            "key": "orgRid",
            "valueType": {
              "type": "id",
              "value": "type_Authorization:OrgRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authorization:UserFilter": {
      "name": "UserFilter",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "condition",
            "valueType": {
              "type": "id",
              "value": "type_Authorization:Condition"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authorization:Condition": {
      "name": "Condition",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "or",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "or",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_Authorization:Condition"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "and",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "and",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_Authorization:Condition"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "not",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "not",
                  "valueType": {
                    "type": "id",
                    "value": "type_Authorization:Condition"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "exact",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "exact",
                  "valueType": {
                    "type": "id",
                    "value": "type_Authorization:ExactClaimCondition"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "regex",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "regex",
                  "valueType": {
                    "type": "id",
                    "value": "type_Authorization:RegexClaimCondition"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "contains",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "contains",
                  "valueType": {
                    "type": "id",
                    "value": "type_Authorization:ContainsClaimCondition"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Authorization:ExactClaimCondition": {
      "name": "ExactClaimCondition",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "claim",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authorization:RegexClaimCondition": {
      "name": "RegexClaimCondition",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "claim",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "regex",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authorization:ContainsClaimCondition": {
      "name": "ContainsClaimCondition",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "arrayClaim",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authorization:OrgAssignmentRulesResponse": {
      "name": "OrgAssignmentRulesResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The first rule that matches will be used to assign a user to an org.\nIf a user does not match any rule, they will be rejected.",
            "key": "rules",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Authorization:OrgAssignmentRule"
              }
            }
          },
          {
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authorization:SetOrgAssignmentRulesRequest": {
      "name": "SetOrgAssignmentRulesRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rules",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Authorization:OrgAssignmentRule"
              }
            }
          },
          {
            "key": "lastVersion",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authorization:AppendOrgAssignmentRulesRequest": {
      "name": "AppendOrgAssignmentRulesRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rules",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Authorization:OrgAssignmentRule"
              }
            }
          },
          {
            "key": "lastVersion",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authorization:UserFiltersResponse": {
      "name": "UserFiltersResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "If a user is assigned to an org, they must pass the filter or else be rejected.\nIf there is no filter for an org, all users assigned to that org are accepted.",
            "key": "userFiltersByOrg",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Authorization:OrgRid"
              },
              "valueType": {
                "type": "id",
                "value": "type_Authorization:UserFilter"
              }
            }
          },
          {
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authorization:SetUserFilterForOneOrgRequest": {
      "name": "SetUserFilterForOneOrgRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "orgRid",
            "valueType": {
              "type": "id",
              "value": "type_Authorization:OrgRid"
            }
          },
          {
            "key": "userFilter",
            "valueType": {
              "type": "id",
              "value": "type_Authorization:UserFilter"
            }
          },
          {
            "key": "lastVersion",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Authorization:RemoveUserFilterForOneOrgRequest": {
      "name": "RemoveUserFilterForOneOrgRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "orgRid",
            "valueType": {
              "type": "id",
              "value": "type_Authorization:OrgRid"
            }
          },
          {
            "key": "lastVersion",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:RetentionPolicyType": {
      "name": "RetentionPolicyType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "KEEP_UNTIL_EXPIRY"
          },
          {
            "value": "KEEP_FOREVER"
          }
        ]
      }
    },
    "type_Catalog:RetentionPolicy": {
      "name": "RetentionPolicy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:RetentionPolicyType"
            }
          },
          {
            "key": "expiryDays",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:WeakTimestampType": {
      "name": "WeakTimestampType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ABSOLUTE"
          },
          {
            "value": "RELATIVE"
          },
          {
            "value": "PENDING"
          }
        ]
      }
    },
    "type_Catalog:EnrichedDataset": {
      "name": "EnrichedDataset",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "uuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "uuid"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "displayName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "handle",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Catalog:Handle"
              }
            }
          },
          {
            "key": "originMetadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Catalog:DatasetOriginMetadata"
              }
            }
          },
          {
            "key": "ingestDate",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "ingestStatus",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:IngestStatus"
            }
          },
          {
            "key": "retentionPolicy",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:RetentionPolicy"
            }
          },
          {
            "key": "runRid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "runDate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          },
          {
            "key": "shorthand",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "source",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "bounds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Catalog:Bounds"
              }
            }
          },
          {
            "key": "timestampType",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:WeakTimestampType"
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_common:PropertyValue"
              }
            }
          },
          {
            "key": "granularity",
            "valueType": {
              "type": "id",
              "value": "type_global:TimeUnit"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:Dataset": {
      "name": "Dataset",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "handle",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Catalog:Handle"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "originMetadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Catalog:DatasetOriginMetadata"
              }
            }
          },
          {
            "key": "bounds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Catalog:Bounds"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_common:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          },
          {
            "key": "timestampType",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:WeakTimestampType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:DatasetOriginMetadata": {
      "name": "DatasetOriginMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "path",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "xSeriesIsAbsolute",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "schemaDirectivePath",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "xSeriesColumnName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "xSeriesTimeUnit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:TimeUnit"
              }
            }
          },
          {
            "key": "timestampMetadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Catalog:TimestampMetadata"
              }
            }
          },
          {
            "key": "channelConfig",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Catalog:ChannelConfig"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:DatasetFile": {
      "name": "DatasetFile",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_common:DatasetFileId"
            }
          },
          {
            "key": "datasetRid",
            "valueType": {
              "type": "id",
              "value": "type_common:DatasetRid"
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "handle",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:Handle"
            }
          },
          {
            "key": "bounds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Catalog:Bounds"
              }
            }
          },
          {
            "description": "Timestamp that the file was received and stored, but not processed or made available to consumers.",
            "key": "uploadedAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "description": "Timestamp that the file is ingested at and made available for processing. If the file has failed to be\ningested for any reason or is still being processed, then this value will be empty.",
            "key": "ingestedAt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          },
          {
            "key": "timestampMetadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Catalog:TimestampMetadata"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:DatasetFilesPage": {
      "name": "DatasetFilesPage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "files",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Catalog:DatasetFile"
              }
            }
          },
          {
            "key": "nextPage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:ChannelConfig": {
      "name": "ChannelConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "If set, will construct a prefix tree for channels of the dataset using the given delimiter.",
            "key": "prefixTreeDelimiter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:SkipRowsConfig": {
      "name": "SkipRowsConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "headerRowIndex",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "dataStartRowIndex",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:UnitConfig": {
      "name": "UnitConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "If set, will extract the series unit from the column metadata of the ingested file.",
            "key": "unitMetadataKey",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:TimestampMetadata": {
      "name": "TimestampMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "seriesName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "timestampType",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:TimestampType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:TimestampType": {
      "name": "TimestampType",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "relative",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "relative",
                  "valueType": {
                    "type": "id",
                    "value": "type_Catalog:RelativeTimestamp"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "absolute",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "absolute",
                  "valueType": {
                    "type": "id",
                    "value": "type_Catalog:AbsoluteTimestamp"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Catalog:RelativeTimestamp": {
      "name": "RelativeTimestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timeUnit",
            "valueType": {
              "type": "id",
              "value": "type_global:TimeUnit"
            }
          },
          {
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:AbsoluteTimestamp": {
      "name": "AbsoluteTimestamp",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "iso8601",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "iso8601",
                  "valueType": {
                    "type": "id",
                    "value": "type_Catalog:Iso8601Timestamp"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "epochOfTimeUnit",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "epochOfTimeUnit",
                  "valueType": {
                    "type": "id",
                    "value": "type_Catalog:EpochTimestamp"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "customFormat",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "customFormat",
                  "valueType": {
                    "type": "id",
                    "value": "type_Catalog:CustomTimestamp"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Catalog:Iso8601Timestamp": {
      "name": "Iso8601Timestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:EpochTimestamp": {
      "name": "EpochTimestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timeUnit",
            "valueType": {
              "type": "id",
              "value": "type_global:TimeUnit"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:CustomTimestamp": {
      "name": "CustomTimestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The format string should be in the format of the `DateTimeFormatter` class in Java.",
            "key": "format",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Year is accepted as an optional field for cases like IRIG time format, and will be assumed as current year if not provided.",
            "key": "defaultYear",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:DatasetFilter": {
      "name": "DatasetFilter",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:GetDatasetsRequest": {
      "name": "GetDatasetsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "datasetRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:ListDatasetsRequest": {
      "name": "ListDatasetsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "includeFilters",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_Catalog:DatasetFilter"
                }
              }
            }
          },
          {
            "key": "excludeFilters",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_Catalog:DatasetFilter"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:IngestStatus": {
      "name": "IngestStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "IN_PROGRESS"
          },
          {
            "value": "COMPLETED"
          },
          {
            "value": "FAILED"
          }
        ]
      }
    },
    "type_Catalog:SuccessResult": {
      "name": "SuccessResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:InProgressResult": {
      "name": "InProgressResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:IngestStatusV2": {
      "name": "IngestStatusV2",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "success",
                  "valueType": {
                    "type": "id",
                    "value": "type_Catalog:SuccessResult"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_Catalog:ErrorResult"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "inProgress",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "inProgress",
                  "valueType": {
                    "type": "id",
                    "value": "type_Catalog:InProgressResult"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Catalog:UpdateIngestStatus": {
      "name": "UpdateIngestStatus",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:IngestStatus"
            }
          },
          {
            "key": "datasetUuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "uuid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:UpdateIngestStatusV2": {
      "name": "UpdateIngestStatusV2",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:IngestStatusV2"
            }
          },
          {
            "key": "datasetUuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "uuid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:ErrorResult": {
      "name": "ErrorResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "errorType",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:ErrorType"
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:ErrorType": {
      "description": "Should be of the format Namespace:ErrorType",
      "name": "ErrorType",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Catalog:IngestProgressV2": {
      "name": "IngestProgressV2",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Timestamp at start of ingest",
            "key": "startTime",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "description": "Timestamp at end of ingest, empty if still in progress",
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          },
          {
            "description": "Status of ingest, contains error if failed",
            "key": "ingestStatus",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:IngestStatusV2"
            }
          },
          {
            "description": "Whether ingest duration can be reliably calculated",
            "key": "incalculable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:Channel": {
      "name": "Channel",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "uuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "uuid"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "datasetUuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "uuid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:ChannelDetails": {
      "name": "ChannelDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "uuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "uuid"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "originMetadata",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "csvIndex",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "datasetUuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "uuid"
              }
            }
          },
          {
            "key": "handle",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:Handle"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:Handle": {
      "name": "Handle",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "s3",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "s3",
                  "valueType": {
                    "type": "id",
                    "value": "type_Catalog:S3Handle"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Catalog:S3Handle": {
      "name": "S3Handle",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "bucket",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:GetHandlesForDatasetsRequest": {
      "name": "GetHandlesForDatasetsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "datasetUuids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "uuid"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:GetChannelsForDatasetsRequest": {
      "name": "GetChannelsForDatasetsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "datasetUuids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "uuid"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:GetDetailsForChannelsRequest": {
      "name": "GetDetailsForChannelsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "channelUuids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "uuid"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:GetSeriesDetailsRequest": {
      "name": "GetSeriesDetailsRequest",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "byRid",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "byRid",
                  "valueType": {
                    "type": "id",
                    "value": "type_Catalog:GetSeriesDetailsByRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "byName",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "byName",
                  "valueType": {
                    "type": "id",
                    "value": "type_Catalog:GetSeriesDetailsByName"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Catalog:GetSeriesDetailsByRid": {
      "name": "GetSeriesDetailsByRid",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:GetSeriesDetailsByName": {
      "name": "GetSeriesDetailsByName",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "datasetRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:SeriesDetails": {
      "name": "SeriesDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "originMetadata",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "csvIndex",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "datasetRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "handle",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:Handle"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:CreateDataset": {
      "name": "CreateDataset",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "handle",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Catalog:Handle"
              }
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "originMetadata",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:DatasetOriginMetadata"
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_common:PropertyValue"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Granularity of dataset timestamps. Defaults to nanoseconds.",
            "key": "granularity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:TimeUnit"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:AddFileToDataset": {
      "name": "AddFileToDataset",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "handle",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:Handle"
            }
          },
          {
            "key": "timestampMetadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Catalog:TimestampMetadata"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:UpdateDatasetMetadata": {
      "name": "UpdateDatasetMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:Label"
                }
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_common:PropertyName"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_common:PropertyValue"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:MarkFileIngestSuccessful": {
      "name": "MarkFileIngestSuccessful",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "bounds",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:Bounds"
            }
          },
          {
            "description": "The ingestion timestamp is produced by CSV splitter and stored directly in the clickhouse table.\nIt's produced externally and passed here to handle retries and failures, and must be nanosecond precision.\nTwo files cannot have the same ingested at timestamp.",
            "key": "ingestedAt",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:MarkFileIngestError": {
      "name": "MarkFileIngestError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "errorResult",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:ErrorResult"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:Bounds": {
      "name": "Bounds",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "start",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "end",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_common:TimestampType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:UpdateBoundsRequest": {
      "name": "UpdateBoundsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "bounds",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:Bounds"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:DeleteSeriesResult": {
      "name": "DeleteSeriesResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "numberDeleted",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:SearchDatasetsByTextRequest": {
      "name": "SearchDatasetsByTextRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "searchText",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "includeFilters",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_Catalog:DatasetFilter"
                }
              }
            }
          },
          {
            "key": "excludeFilters",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_Catalog:DatasetFilter"
                }
              }
            }
          },
          {
            "description": "The PageRequest.pageToken must be an integer offset. If a PageRequest.pageSize is not provided, the\ndefault page size (100) will be used.",
            "key": "pageRequest",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_pagination-api:PageRequest"
              }
            }
          },
          {
            "description": "Defaults to false if not specified.",
            "key": "includeArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:SearchDatasetsQuery": {
      "name": "SearchDatasetsQuery",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "searchText",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "searchText",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "description": "Performs case insensitive exact match search on the name.",
            "discriminantValue": "exactMatch",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "exactMatch",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "label",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "label",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Label"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "properties",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "properties",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Property"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "ingestStatus",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "ingestStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_Catalog:IngestStatus"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "ingestedBeforeInclusive",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "ingestedBeforeInclusive",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "default": "1970-01-01T00:00:00.000Z"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "ingestedAfterInclusive",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "ingestedAfterInclusive",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "default": "1970-01-01T00:00:00.000Z"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "archiveStatus",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "archiveStatus",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "and",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "and",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_Catalog:SearchDatasetsQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "or",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "or",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_Catalog:SearchDatasetsQuery"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Catalog:SearchDatasetsRequest": {
      "name": "SearchDatasetsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "query",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:SearchDatasetsQuery"
            }
          },
          {
            "description": "Defaults to 100. Will throw if larger than 1_000.",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "token",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          },
          {
            "key": "sortOptions",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:SortOptions"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:SortOptions": {
      "name": "SortOptions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isDescending",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_Catalog:SortField"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:SortField": {
      "name": "SortField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "INGEST_DATE"
          }
        ]
      }
    },
    "type_Catalog:SearchDatasetsByTextResponse": {
      "name": "SearchDatasetsByTextResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Catalog:EnrichedDataset"
              }
            }
          },
          {
            "key": "pageResponse",
            "valueType": {
              "type": "id",
              "value": "type_pagination-api:PageResponse"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:SearchDatasetsResponse": {
      "name": "SearchDatasetsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Catalog:EnrichedDataset"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Catalog:AllPropertiesAndLabelsResponse": {
      "name": "AllPropertiesAndLabelsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:PropertyValue"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:Check": {
      "name": "Check",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_common:CheckRid"
            }
          },
          {
            "key": "checkLineageRid",
            "valueType": {
              "type": "id",
              "value": "type_common:CheckLineageRid"
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "autoGeneratedTitle",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "autoGeneratedDescription",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "priority",
            "valueType": {
              "type": "id",
              "value": "type_Checklist:Priority"
            }
          },
          {
            "key": "chart",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:VersionedVizId"
              }
            }
          },
          {
            "description": "If omitted, this check represents a manual check.",
            "key": "condition",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:CheckCondition"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:Priority": {
      "name": "Priority",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "P0"
          },
          {
            "value": "P1"
          },
          {
            "value": "P2"
          },
          {
            "value": "P3"
          },
          {
            "value": "P4"
          }
        ]
      }
    },
    "type_Checklist:CheckCondition": {
      "name": "CheckCondition",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "numRanges",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numRanges",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:NumRangesConditionV1"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "numRangesV2",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numRangesV2",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:NumRangesConditionV2"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "numRangesV3",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numRangesV3",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:NumRangesConditionV3"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "parameterizedNumRangesV1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "parameterizedNumRangesV1",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:ParameterizedNumRangesConditionV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Checklist:UnresolvedCheckCondition": {
      "name": "UnresolvedCheckCondition",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "numRangesV2",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numRangesV2",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:UnresolvedNumRangesConditionV2"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "numRangesV3",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numRangesV3",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:UnresolvedNumRangesConditionV3"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "parameterizedNumRangesV1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "parameterizedNumRangesV1",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:UnresolvedParameterizedNumRangesConditionV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Checklist:UnresolvedNumRangesConditionV2": {
      "name": "UnresolvedNumRangesConditionV2",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "ranges",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:RangesNode"
            }
          },
          {
            "key": "functionSpec",
            "valueType": {
              "type": "unknown"
            }
          },
          {
            "key": "threshold",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ThresholdOperator"
            }
          },
          {
            "key": "variables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Checklist:UnresolvedVariableLocator"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:UnresolvedNumRangesConditionV3": {
      "name": "UnresolvedNumRangesConditionV3",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "ranges",
            "valueType": {
              "type": "id",
              "value": "type_Compute:RangesNode"
            }
          },
          {
            "key": "functionSpec",
            "valueType": {
              "type": "unknown"
            }
          },
          {
            "key": "threshold",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ThresholdOperator"
            }
          },
          {
            "description": "Default overrides for the variables used in the check condition. These variables can be overridden\nat checklist execution time.",
            "key": "variables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Checklist:UnresolvedVariableLocator"
              }
            }
          },
          {
            "description": "The variables to be passed into functions referenced by the check condition. The function reference key\nshould match the FunctionReference in the function node definition. These variables can be overridden\nat checklist execution time.",
            "key": "functionVariables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:FunctionReference"
              },
              "valueType": {
                "type": "id",
                "value": "type_Checklist:UnresolvedVariables"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:UnresolvedParameterizedNumRangesConditionV1": {
      "name": "UnresolvedParameterizedNumRangesConditionV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "ranges",
            "valueType": {
              "type": "id",
              "value": "type_Compute:RangesNode"
            }
          },
          {
            "description": "Each permutation of check context in the list will be executed as a new a stand-alone check. Violations\nproduced will be associated with the context of the index.",
            "key": "implementations",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:UnresolvedVariables"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:UnresolvedVariables": {
      "name": "UnresolvedVariables",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Checklist:UnresolvedVariableLocator"
              }
            }
          },
          {
            "key": "subFunctionVariables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:FunctionReference"
              },
              "valueType": {
                "type": "id",
                "value": "type_Checklist:UnresolvedVariables"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:NumRangesConditionV1": {
      "name": "NumRangesConditionV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "ranges",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:RangesNode"
            }
          },
          {
            "key": "functionSpec",
            "valueType": {
              "type": "unknown"
            }
          },
          {
            "key": "threshold",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ThresholdOperator"
            }
          },
          {
            "key": "variables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_common:ChannelLocator"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:NumRangesConditionV2": {
      "name": "NumRangesConditionV2",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "ranges",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:RangesNode"
            }
          },
          {
            "key": "functionSpec",
            "valueType": {
              "type": "unknown"
            }
          },
          {
            "key": "threshold",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ThresholdOperator"
            }
          },
          {
            "key": "variables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Checklist:VariableLocator"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:NumRangesConditionV3": {
      "name": "NumRangesConditionV3",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "ranges",
            "valueType": {
              "type": "id",
              "value": "type_Compute:RangesNode"
            }
          },
          {
            "key": "functionSpec",
            "valueType": {
              "type": "unknown"
            }
          },
          {
            "key": "threshold",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ThresholdOperator"
            }
          },
          {
            "key": "variables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Checklist:VariableLocator"
              }
            }
          },
          {
            "description": "The variables to be passed into functions referenced by the check condition. The function reference key\nshould match the FunctionReference in the function node definition.",
            "key": "functionVariables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:FunctionReference"
              },
              "valueType": {
                "type": "id",
                "value": "type_Checklist:CheckContext"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:ParameterizedNumRangesConditionV1": {
      "name": "ParameterizedNumRangesConditionV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "ranges",
            "valueType": {
              "type": "id",
              "value": "type_Compute:RangesNode"
            }
          },
          {
            "description": "Each permutation of check context in the list will be executed as a new a stand-alone check. Violations\nproduced will be associated with the context of the index.",
            "key": "implementations",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:CheckContext"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:CheckContext": {
      "name": "CheckContext",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Checklist:VariableLocator"
              }
            }
          },
          {
            "key": "subFunctionVariables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:FunctionReference"
              },
              "valueType": {
                "type": "id",
                "value": "type_Checklist:CheckContext"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:UnresolvedComputeNodeWithContext": {
      "name": "UnresolvedComputeNodeWithContext",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "seriesNode",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ComputeNode"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "type_Checklist:UnresolvedVariables"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:ComputeNodeWithContext": {
      "name": "ComputeNodeWithContext",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "seriesNode",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ComputeNode"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "type_Checklist:CheckContext"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:UnresolvedChecklistVariable": {
      "name": "UnresolvedChecklistVariable",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_Compute:VariableName"
            }
          },
          {
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "id",
              "value": "type_Checklist:UnresolvedVariableLocator"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:ChecklistVariable": {
      "name": "ChecklistVariable",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_Compute:VariableName"
            }
          },
          {
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "id",
              "value": "type_Checklist:VariableLocator"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:UnresolvedVariableLocator": {
      "name": "UnresolvedVariableLocator",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "checklistFunction",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "checklistFunction",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:FunctionReference"
                  }
                }
              ]
            }
          },
          {
            "description": "A pointer to a variable in the checklist.",
            "discriminantValue": "checklistVariable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "checklistVariable",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:VariableName"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "computeNode",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "computeNode",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:UnresolvedComputeNodeWithContext"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "series",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "series",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:ChannelLocator"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestamp",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestamp",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:TimestampLocator"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Checklist:VariableLocator": {
      "name": "VariableLocator",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "description": "A pointer to a checklist level variable.",
            "discriminantValue": "checklistVariable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "checklistVariable",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:VariableName"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "computeNode",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "computeNode",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:ComputeNodeWithContext"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "functionRid",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "functionRid",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:FunctionRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "series",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "series",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:ChannelLocator"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestamp",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestamp",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:TimestampLocator"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Checklist:TimestampLocator": {
      "name": "TimestampLocator",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "RUN_START"
          },
          {
            "value": "RUN_END"
          }
        ]
      }
    },
    "type_Checklist:Function": {
      "name": "Function",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_common:FunctionRid"
            }
          },
          {
            "key": "functionLineageRid",
            "valueType": {
              "type": "id",
              "value": "type_common:FunctionLineageRid"
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "autoGeneratedTitle",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "autoGeneratedDescription",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "functionNode",
            "valueType": {
              "type": "id",
              "value": "type_Checklist:FunctionNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:FunctionNode": {
      "name": "FunctionNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "enum",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enum",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "numeric",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numeric",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NumericSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "ranges",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "ranges",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RangesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Checklist:PinnedChecklistRef": {
      "name": "PinnedChecklistRef",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_common:ChecklistRid"
            }
          },
          {
            "key": "commit",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:CommitId"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:ChecklistRef": {
      "name": "ChecklistRef",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_common:ChecklistRid"
            }
          },
          {
            "key": "commit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_InternalVersioning:CommitId"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:VersionedChecklist": {
      "name": "VersionedChecklist",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_common:ChecklistRid"
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "id",
              "value": "type_Checklist:ChecklistMetadata"
            }
          },
          {
            "key": "commit",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:Commit"
            }
          },
          {
            "description": "A list of functions that are available to be used by checks in this checklist.",
            "key": "functions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:Function"
              }
            }
          },
          {
            "key": "checks",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:ChecklistEntry"
              }
            }
          },
          {
            "description": "Variables that can be used in checks and functions. Variables are resolved in order of declaration.\nIf variable `a` depends on variable `b`, then `b` must be defined before `a` in the list.",
            "key": "checklistVariables",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:ChecklistVariable"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:ChecklistMetadata": {
      "name": "ChecklistMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "authorRid",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "assigneeRid",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_common:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          },
          {
            "key": "lastUsed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          },
          {
            "key": "isArchived",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "isPublished",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:VersionedChecklistPage": {
      "name": "VersionedChecklistPage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "values",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:VersionedChecklist"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:CreateChecklistRequest": {
      "name": "CreateChecklistRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "commitMessage",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "assigneeRid",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The keys of the map are references that can be used for checks to reference functions in the same request, before the function RIDs have been created.",
            "key": "functions",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:FunctionReference"
              },
              "valueType": {
                "type": "id",
                "value": "type_Checklist:CreateFunctionRequest"
              }
            }
          },
          {
            "key": "checks",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:CreateChecklistEntryRequest"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_common:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          },
          {
            "description": "Variables that can be used in checks and functions. Variables are resolved in order of declaration.\nIf variable `a` depends on variable `b`, then `b` must be defined before `a` in the list.",
            "key": "checklistVariables",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:UnresolvedChecklistVariable"
              }
            }
          },
          {
            "description": "Default value is true.",
            "key": "isPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:CommitChecklistRequest": {
      "name": "CommitChecklistRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "commitMessage",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "checks",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:UpdateChecklistEntryRequest"
              }
            }
          },
          {
            "description": "The keys of the map are references that can be used for checks to reference functions in the same request, before the function RIDs have been created.",
            "key": "functions",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:FunctionReference"
              },
              "valueType": {
                "type": "id",
                "value": "type_Checklist:UpdateFunctionEntryRequest"
              }
            }
          },
          {
            "description": "Variables that can be used in checks and functions. Variables are resolved in order of declaration.\nIf variable `a` depends on variable `b`, then `b` must be defined before `a` in the list.",
            "key": "checklistVariables",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:UnresolvedChecklistVariable"
              }
            }
          },
          {
            "description": "If present, will validate that the latest commit matches this id,\nand otherwise throw CommitConflict.",
            "key": "latestCommit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_InternalVersioning:CommitId"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:SaveChecklistRequest": {
      "name": "SaveChecklistRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "checks",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:UpdateChecklistEntryRequest"
              }
            }
          },
          {
            "description": "The keys of the map are references that can be used for checks to reference functions in the same request, before the function RIDs have been created.",
            "key": "functions",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:FunctionReference"
              },
              "valueType": {
                "type": "id",
                "value": "type_Checklist:UpdateFunctionEntryRequest"
              }
            }
          },
          {
            "description": "Variables that can be used in checks and functions. Variables are resolved in order of declaration.\nIf variable `a` depends on variable `b`, then `b` must be defined before `a` in the list.",
            "key": "checklistVariables",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:UnresolvedChecklistVariable"
              }
            }
          },
          {
            "description": "If present, will validate that the latest commit matches this id,\nand otherwise throw CommitConflict.",
            "key": "latestCommit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_InternalVersioning:CommitId"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:MergeToMainRequest": {
      "name": "MergeToMainRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "If \"main\", the request will throw.",
            "key": "branchName",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:BranchName"
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "If present, will validate that the latest commit matches this id,\nand otherwise throw CommitConflict.",
            "key": "latestCommitOnMain",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_InternalVersioning:CommitId"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:UpdateChecklistMetadataRequest": {
      "name": "UpdateChecklistMetadataRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "assigneeRid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:UserRid"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_common:PropertyName"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_common:PropertyValue"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:Label"
                }
              }
            }
          },
          {
            "key": "isPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:ChecklistEntry": {
      "name": "ChecklistEntry",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "check",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "check",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:Check"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Checklist:CreateChecklistEntryRequest": {
      "name": "CreateChecklistEntryRequest",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "createCheck",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "createCheck",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:CreateCheckRequest"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Checklist:UpdateChecklistEntryRequest": {
      "name": "UpdateChecklistEntryRequest",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "createCheck",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "createCheck",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:CreateCheckRequest"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "check",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "check",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:CheckRid"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Checklist:CreateCheckRequest": {
      "name": "CreateCheckRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Identifies the lineage of checks this check belongs to. If not specified, a new lineage will be created.\nThis is named checkLineageRid for historical reasons but is actually a UUID.",
            "key": "checkLineageRid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "uuid"
                }
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "autoGeneratedTitle",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "autoGeneratedDescription",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "priority",
            "valueType": {
              "type": "id",
              "value": "type_Checklist:Priority"
            }
          },
          {
            "key": "chart",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:VersionedVizId"
              }
            }
          },
          {
            "description": "If omitted, this check represents a manual check.",
            "key": "condition",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:UnresolvedCheckCondition"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:CreateFunctionRequest": {
      "name": "CreateFunctionRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Identifies the lineage of functions this function belongs to. If not specified, a new lineage will be created.",
            "key": "functionLineageRid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:FunctionLineageRid"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "autoGeneratedTitle",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "autoGeneratedDescription",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "node",
            "valueType": {
              "type": "id",
              "value": "type_Checklist:FunctionNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:UpdateFunctionEntryRequest": {
      "name": "UpdateFunctionEntryRequest",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "createFunction",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "createFunction",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:CreateFunctionRequest"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "function",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "function",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:FunctionRid"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Checklist:SortOptions": {
      "name": "SortOptions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isDescending",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_Checklist:SortField"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:SortField": {
      "name": "SortField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "CREATED_AT"
          },
          {
            "value": "LAST_USED"
          }
        ]
      }
    },
    "type_Checklist:SearchChecklistsRequest": {
      "name": "SearchChecklistsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "query",
            "valueType": {
              "type": "id",
              "value": "type_Checklist:ChecklistSearchQuery"
            }
          },
          {
            "description": "If not present, will sort by LAST_USED in descending order.",
            "key": "sortBy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:SortOptions"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          },
          {
            "description": "Defaults to 100. Will throw if larger than 1000.",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Default search status is NOT_ARCHIVED if none are provided. Allows for including archived checklists in search.",
            "key": "archivedStatuses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:ArchivedStatus"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:ChecklistSearchQuery": {
      "name": "ChecklistSearchQuery",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "and",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "and",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_Checklist:ChecklistSearchQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "or",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "or",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_Checklist:ChecklistSearchQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "searchText",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "searchText",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "label",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "label",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Label"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "property",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "property",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Property"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "authorRid",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "authorRid",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:UserRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "assigneeRid",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "assigneeRid",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:UserRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "isPublished",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "isPublished",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "not",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "not",
                  "valueType": {
                    "type": "id",
                    "value": "type_Checklist:ChecklistSearchQuery"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Checklist:BatchGetChecklistMetadataRequest": {
      "name": "BatchGetChecklistMetadataRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:ChecklistRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:BatchGetChecklistMetadataResponse": {
      "name": "BatchGetChecklistMetadataResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "metadata",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:ChecklistRid"
              },
              "valueType": {
                "type": "id",
                "value": "type_Checklist:ChecklistMetadata"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:ArchiveChecklistsRequest": {
      "name": "ArchiveChecklistsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:ChecklistRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:UnarchiveChecklistsRequest": {
      "name": "UnarchiveChecklistsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:ChecklistRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Checklist:GetAllLabelsAndPropertiesResponse": {
      "name": "GetAllLabelsAndPropertiesResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:PropertyValue"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:BatchChecklistLiveStatusRequest": {
      "name": "BatchChecklistLiveStatusRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "requests",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_ChecklistExecution:ChecklistLiveStatusRequest"
              }
            }
          },
          {
            "description": "The time range over which status and last failure were calculated. Failures outside of this time range\nwill not be included in the results. If not specified, defaults to evaluating from now minus sixty minutes to now.",
            "key": "computationRange",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_ChecklistExecution:ComputationRange"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:ChecklistLiveStatusRequest": {
      "name": "ChecklistLiveStatusRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "checklistRid",
            "valueType": {
              "type": "id",
              "value": "type_common:ChecklistRid"
            }
          },
          {
            "key": "commit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_InternalVersioning:CommitId"
              }
            }
          },
          {
            "key": "runRid",
            "valueType": {
              "type": "id",
              "value": "type_common:RunRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:ExecuteChecklistForAssetsRequest": {
      "name": "ExecuteChecklistForAssetsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "checklist",
            "valueType": {
              "type": "id",
              "value": "type_common:ChecklistRid"
            }
          },
          {
            "key": "assets",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:AssetRid"
              }
            }
          },
          {
            "description": "If provided, checklist violations will be sent to the specified integrations.",
            "key": "notificationConfigurations",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Integrations:NotificationConfiguration"
              }
            }
          },
          {
            "description": "Delays the execution of the streaming checklist. This is useful for when data is delayed.",
            "key": "streamDelay",
            "valueType": {
              "type": "id",
              "value": "type_common:Duration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:BatchChecklistLiveStatusResponse": {
      "name": "BatchChecklistLiveStatusResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The time range over which status and last failure were calculated. Failures outside of this time range\nwill not be included in the results.",
            "key": "computationRange",
            "valueType": {
              "type": "id",
              "value": "type_ChecklistExecution:ComputationRange"
            }
          },
          {
            "key": "checklistResults",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_ChecklistExecution:ChecklistLiveStatusResponse"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:ChecklistLiveStatusResponse": {
      "name": "ChecklistLiveStatusResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "checklistRid",
            "valueType": {
              "type": "id",
              "value": "type_common:ChecklistRid"
            }
          },
          {
            "key": "checkResults",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_ChecklistExecution:CheckLiveStatusResponse"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:CheckLiveStatusResponse": {
      "name": "CheckLiveStatusResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "result",
            "valueType": {
              "type": "id",
              "value": "type_ChecklistExecution:CheckLiveStatusResult"
            }
          },
          {
            "key": "checkRid",
            "valueType": {
              "type": "id",
              "value": "type_common:CheckRid"
            }
          },
          {
            "description": "Checks can define a single range computation which can evaluate over multiple implementations of a context.\nThe check implementation index will correspond to the implementation index of the check condition.",
            "key": "checkImplementationIndex",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:CheckLiveStatusResult": {
      "name": "CheckLiveStatusResult",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "computed",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "computed",
                  "valueType": {
                    "type": "id",
                    "value": "type_ChecklistExecution:ComputedResult"
                  }
                }
              ]
            }
          },
          {
            "description": "The check cannot be computed in a streaming context. This would be returned if an overly expensive\ncomputation was attempted, such as checking the rolling median over the last year of data.\n",
            "discriminantValue": "notComputable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "notComputable",
                  "valueType": {
                    "type": "id",
                    "value": "type_ChecklistExecution:NotComputable"
                  }
                }
              ]
            }
          },
          {
            "description": "The checklist cannot be applied to the data sources.\n",
            "discriminantValue": "failedToResolve",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "failedToResolve",
                  "valueType": {
                    "type": "id",
                    "value": "type_ChecklistExecution:FailedToResolve"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ChecklistExecution:StopStreamingChecklistForAssetsRequest": {
      "name": "StopStreamingChecklistForAssetsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "checklist",
            "valueType": {
              "type": "id",
              "value": "type_common:ChecklistRid"
            }
          },
          {
            "key": "assets",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:AssetRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:StreamingChecklistInfo": {
      "name": "StreamingChecklistInfo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "checklistRid",
            "valueType": {
              "type": "id",
              "value": "type_common:ChecklistRid"
            }
          },
          {
            "key": "assetConfigurations",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:AssetRid"
              },
              "valueType": {
                "type": "id",
                "value": "type_ChecklistExecution:AssetStreamConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:AssetStreamConfiguration": {
      "name": "AssetStreamConfiguration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "notificationConfigurations",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Integrations:NotificationConfiguration"
              }
            }
          },
          {
            "key": "streamDelay",
            "valueType": {
              "type": "id",
              "value": "type_common:Duration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:ComputedResult": {
      "name": "ComputedResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The current status of a check at the time it was evaluated.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_ChecklistExecution:CheckStatus"
            }
          },
          {
            "description": "If computed, represents the last time the check failed.\nCan also represent that the last failure hasn't been computed, or is currently being computed.\nIf the check is currently failing, the current failure is returned.",
            "key": "lastFailure",
            "valueType": {
              "type": "id",
              "value": "type_ChecklistExecution:LastFailure"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:ComputationRange": {
      "name": "ComputationRange",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "start",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "end",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:CheckStatus": {
      "name": "CheckStatus",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "description": "The check was evaluated and is currently in state PASS.",
            "discriminantValue": "pass",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "pass",
                  "valueType": {
                    "type": "id",
                    "value": "type_ChecklistExecution:Pass"
                  }
                }
              ]
            }
          },
          {
            "description": "The check was evaluated and is currently in state FAIL.",
            "discriminantValue": "fail",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "fail",
                  "valueType": {
                    "type": "id",
                    "value": "type_ChecklistExecution:Fail"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ChecklistExecution:Pass": {
      "name": "Pass",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:Fail": {
      "name": "Fail",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:LastFailure": {
      "name": "LastFailure",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "description": "The last failure time has not been computed, and is not currently being computed.\n",
            "discriminantValue": "notComputed",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "notComputed",
                  "valueType": {
                    "type": "id",
                    "value": "type_ChecklistExecution:NotComputed"
                  }
                }
              ]
            }
          },
          {
            "description": "The last failure time is currently being computed. This may require evaluating the history\nof data for the check, so could be slow depending on the data frequency and lookback period.\n",
            "discriminantValue": "computing",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "computing",
                  "valueType": {
                    "type": "id",
                    "value": "type_ChecklistExecution:Computing"
                  }
                }
              ]
            }
          },
          {
            "description": "No previous failure was found for the check.",
            "discriminantValue": "noPreviousFailure",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "noPreviousFailure",
                  "valueType": {
                    "type": "id",
                    "value": "type_ChecklistExecution:NoPreviousFailure"
                  }
                }
              ]
            }
          },
          {
            "description": "The most recent failure for the check.",
            "discriminantValue": "failure",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "failure",
                  "valueType": {
                    "type": "id",
                    "value": "type_ChecklistExecution:Failure"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ChecklistExecution:NotComputable": {
      "name": "NotComputable",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Why the result couldn't be computed",
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:FailedToResolve": {
      "name": "FailedToResolve",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The variable name that couldn't be resolved to a series.",
            "key": "variableName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:NotComputed": {
      "name": "NotComputed",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:Computing": {
      "name": "Computing",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:NoPreviousFailure": {
      "name": "NoPreviousFailure",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ChecklistExecution:Failure": {
      "name": "Failure",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "startInclusive",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "endExclusive",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Comments:CommentRid": {
      "name": "CommentRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Comments:ResourceRid": {
      "name": "ResourceRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Comments:ReactionRid": {
      "name": "ReactionRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Comments:ResourceType": {
      "name": "ResourceType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "RUN"
          }
        ]
      }
    },
    "type_Comments:ReactionType": {
      "name": "ReactionType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "LIKE"
          },
          {
            "value": "DISLIKE"
          },
          {
            "value": "HEART"
          },
          {
            "value": "HOORAY"
          },
          {
            "value": "ROCKET"
          },
          {
            "value": "EYES"
          }
        ]
      }
    },
    "type_Comments:Conversation": {
      "name": "Conversation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "RID for the resource that the conversation is associated with.",
            "key": "resourceRid",
            "valueType": {
              "type": "id",
              "value": "type_Comments:ResourceRid"
            }
          },
          {
            "description": "The type of the resource that the conversation is associated with.",
            "key": "resourceType",
            "valueType": {
              "type": "id",
              "value": "type_Comments:ResourceType"
            }
          },
          {
            "description": "The comments on the conversation ordered by creation time.\nEmpty if the comment has no replies.",
            "key": "comments",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Comments:ConversationNode"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Comments:ConversationNode": {
      "name": "ConversationNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The comment",
            "key": "comment",
            "valueType": {
              "type": "id",
              "value": "type_Comments:Comment"
            }
          },
          {
            "description": "The comments on (aka replies to) the comment ordered by creation time. Empty if the comment has no replies.",
            "key": "replies",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Comments:ConversationNode"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Comments:Comment": {
      "name": "Comment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique resource identifier for the comment",
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_Comments:CommentRid"
            }
          },
          {
            "description": "The parent of the comment. It can be a resource or another comment.",
            "key": "parent",
            "valueType": {
              "type": "id",
              "value": "type_Comments:CommentParent"
            }
          },
          {
            "description": "The user who authored the comment",
            "key": "authorRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The time the comment was created",
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "description": "The time the comment was edited. Empty if the comment has not been edited.",
            "key": "editedAt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          },
          {
            "description": "The time the comment was deleted. Empty if the comment has not been deleted.",
            "key": "deletedAt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          },
          {
            "description": "The markdown content of the comment.",
            "key": "content",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The user who pinned the comment. Empty if the comment is not pinned.",
            "key": "pinnedBy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The time the comment was pinned. Empty if the comment is not pinned.",
            "key": "pinnedAt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          },
          {
            "description": "The reactions on the comment",
            "key": "reactions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Comments:Reaction"
              }
            }
          },
          {
            "description": "The comment's attachments",
            "key": "attachments",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Comments:CommentParent": {
      "name": "CommentParent",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "resource",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "resource",
                  "valueType": {
                    "type": "id",
                    "value": "type_Comments:CommentParentResource"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "comment",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "comment",
                  "valueType": {
                    "type": "id",
                    "value": "type_Comments:CommentParentComment"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Comments:CommentParentResource": {
      "name": "CommentParentResource",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of resource that the comment is associated with",
            "key": "resourceType",
            "valueType": {
              "type": "id",
              "value": "type_Comments:ResourceType"
            }
          },
          {
            "description": "The resource identifier for the resource that the comment is associated with. For example, a run or a workbook.",
            "key": "resourceRid",
            "valueType": {
              "type": "id",
              "value": "type_Comments:ResourceRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Comments:CommentParentComment": {
      "name": "CommentParentComment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The resource identifier for the comment that the comment is replying to",
            "key": "commentRid",
            "valueType": {
              "type": "id",
              "value": "type_Comments:CommentRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Comments:Reaction": {
      "name": "Reaction",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique resource identifier for the reaction",
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_Comments:ReactionRid"
            }
          },
          {
            "description": "The user who authored the reaction",
            "key": "userRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The time the reaction was created",
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "description": "The type of reaction",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_Comments:ReactionType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Comments:CreateCommentRequest": {
      "name": "CreateCommentRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "parent",
            "valueType": {
              "type": "id",
              "value": "type_Comments:CommentParent"
            }
          },
          {
            "description": "The content of the comment. Markdown supported.",
            "key": "content",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Attachments to the comment.",
            "key": "attachments",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Comments:EditCommentRequest": {
      "name": "EditCommentRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The content of the comment. Markdown supported.",
            "key": "content",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Attachments to the comment.",
            "key": "attachments",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ComputableNode": {
      "name": "ComputableNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "ranges",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "ranges",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:SummarizeRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "series",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "series",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:SummarizeSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "value",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:SelectValueNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "cartesian",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "cartesian",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:SummarizeCartesianNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "frequency",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "frequency",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:FrequencyDomainNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "histogram",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "histogram",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:HistogramNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "geo",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "geo",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:SummarizeGeoNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:NumericSeriesNode": {
      "name": "NumericSeriesNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "aggregate",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "aggregate",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:AggregateNumericSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "arithmetic",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "arithmetic",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:ArithmeticSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "bitOperation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "bitOperation",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:BitOperationSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "cumulativeSum",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "cumulativeSum",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:CumulativeSumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "derivative",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "derivative",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:DerivativeSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "function",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "function",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NumericSeriesFunction"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "integral",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "integral",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:IntegralSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "max",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "max",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:MaxSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "mean",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "mean",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:MeanSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "min",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "min",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:MinSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "offset",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "offset",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:OffsetSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "product",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "product",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:ProductSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "raw",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "raw",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RawNumericSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "resample",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "resample",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NumericResampleSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "rollingOperation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "rollingOperation",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RollingOperationSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "sum",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "sum",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:SumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "scale",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "scale",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:ScaleSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timeDifference",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeDifference",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:TimeDifferenceSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timeRangeFilter",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeRangeFilter",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NumericTimeRangeFilterSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timeShift",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeShift",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NumericTimeShiftSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "unaryArithmetic",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "unaryArithmetic",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:UnaryArithmeticSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "binaryArithmetic",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "binaryArithmetic",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:BinaryArithmeticSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "union",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "union",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NumericUnionSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "unitConversion",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "unitConversion",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:UnitConversionSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "valueDifference",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "valueDifference",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:ValueDifferenceSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "filterTransformation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "filterTransformation",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NumericFilterTransformationSeriesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:EnumSeriesNode": {
      "name": "EnumSeriesNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "aggregate",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "aggregate",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:AggregateEnumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "function",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "function",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumSeriesFunction"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "raw",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "raw",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RawEnumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "resample",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "resample",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumResampleSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timeRangeFilter",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeRangeFilter",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumTimeRangeFilterSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timeShift",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeShift",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumTimeShiftSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "union",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "union",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumUnionSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "filterTransformation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "filterTransformation",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumFilterTransformationSeriesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:RangesNode": {
      "name": "RangesNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "enumFilter",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enumFilter",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumFilterRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "function",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "function",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RangesFunction"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "intersectRange",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "intersectRange",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:IntersectRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "not",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "not",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NotRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "onChange",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "onChange",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:OnChangeRangesNode"
                  }
                }
              ]
            }
          },
          {
            "description": "Computes ranges where the input time series matches a filter defined by lower and upper bounds, and an operator.",
            "discriminantValue": "minMaxThreshold",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "minMaxThreshold",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:MinMaxThresholdRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "peak",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "peak",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:PeakRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "raw",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "raw",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RawRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "seriesCrossoverRangesNode",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "seriesCrossoverRangesNode",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:SeriesCrossoverRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "seriesEqualityRangesNode",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "seriesEqualityRangesNode",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:SeriesEqualityRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "enumSeriesEqualityRangesNode",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enumSeriesEqualityRangesNode",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumSeriesEqualityRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "staleRange",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "staleRange",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:StaleRangesNode"
                  }
                }
              ]
            }
          },
          {
            "description": "Computes ranges where the input time series matches a filter defined by a single threshold and an operator.",
            "discriminantValue": "threshold",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "threshold",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:ThresholdingRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "unionRange",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "unionRange",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:UnionRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "rangeNumericAggregation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "rangeNumericAggregation",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RangesNumericAggregationNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:CartesianNode": {
      "name": "CartesianNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "scatter",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "scatter",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:ScatterNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:SummarizeCartesianNode": {
      "name": "SummarizeCartesianNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:CartesianNode"
            }
          },
          {
            "key": "bounds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:CartesianBounds"
              }
            }
          },
          {
            "description": "The maximum number of points to return in the response. If more points are found, a BucketedCartesianPlot\nwill be returned. Maximum is 10,000. Defaults to 2,000 if not specified.",
            "key": "maxPoints",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:FrequencyDomainNode": {
      "name": "FrequencyDomainNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "fft",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "fft",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:FftNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:FftNode": {
      "name": "FftNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:SummarizeGeoNode": {
      "name": "SummarizeGeoNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:GeoNode"
            }
          },
          {
            "key": "summaryStrategy",
            "valueType": {
              "type": "id",
              "value": "type_Compute:GeoNodeSummaryStrategy"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:GeoNodeSummaryStrategy": {
      "name": "GeoNodeSummaryStrategy",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "temporal",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "temporal",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:GeoNodeTemporalSummary"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:GeoNodeTemporalSummary": {
      "name": "GeoNodeTemporalSummary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "resolution",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:GeoNode": {
      "name": "GeoNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "latLongGeoNode",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "latLongGeoNode",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:LatLongGeoNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:LatLongGeoNode": {
      "name": "LatLongGeoNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "latitude",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "longitude",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "bounds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:LatLongBounds"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:LatLongBounds": {
      "name": "LatLongBounds",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "southWest",
            "valueType": {
              "type": "id",
              "value": "type_Compute:LatLongPoint"
            }
          },
          {
            "key": "northEast",
            "valueType": {
              "type": "id",
              "value": "type_Compute:LatLongPoint"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:LatLongPoint": {
      "name": "LatLongPoint",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "latitude",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "longitude",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:HistogramNode": {
      "name": "HistogramNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "numeric",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numeric",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NumericHistogramNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "enum",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enum",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumHistogramNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:NumericHistogramNode": {
      "name": "NumericHistogramNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Compute:NumericSeriesNode"
              }
            }
          },
          {
            "key": "bucketStrategy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NumericHistogramBucketStrategy"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:EnumHistogramNode": {
      "name": "EnumHistogramNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Compute:EnumSeriesNode"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:NumericHistogramBucketStrategy": {
      "name": "NumericHistogramBucketStrategy",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "description": "The number of buckets to use in the histogram. Width is automatically calculated from the range\nof the input series, with the lower and upper bounds of the histogram being multiples of the width.\n",
            "discriminantValue": "bucketCount",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "bucketCount",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:IntegerConstant"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "bucketWidthAndOffset",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "bucketWidthAndOffset",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NumericHistogramBucketWidthAndOffset"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:NumericHistogramBucketWidthAndOffset": {
      "name": "NumericHistogramBucketWidthAndOffset",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The width of each bucket. If offset is not specified, the left and right bounds of each bucket\nare multiples of the width. If offset is specified, the left and right bounds of each bucket are\nshifted right by the offset value.",
            "key": "width",
            "valueType": {
              "type": "id",
              "value": "type_Compute:DoubleConstant"
            }
          },
          {
            "description": "The rightward shift to apply to the left and right bounds of each bucket. If not specified,\nthe offset will be 0. The offset must be non-negative.",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:DoubleConstant"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:SummarizeSeriesNode": {
      "name": "SummarizeSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:SeriesNode"
            }
          },
          {
            "description": "Resolution of the output series specifying time interval between decimated points.\nPicoseconds for picosecond-granularity dataset, nanoseconds otherwise.",
            "key": "resolution",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Number of points to generate in the output series.",
            "key": "buckets",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:RawUntypedSeriesNode": {
      "name": "RawUntypedSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_Compute:VariableName"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:SeriesNode": {
      "name": "SeriesNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "raw",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "raw",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RawUntypedSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "enum",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enum",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "numeric",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numeric",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NumericSeriesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:ComputeNode": {
      "name": "ComputeNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "enum",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enum",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "numeric",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numeric",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NumericSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "ranges",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "ranges",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "raw",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "raw",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RawUntypedSeriesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:SummarizeRangesNode": {
      "name": "SummarizeRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:RangesNode"
            }
          },
          {
            "description": "The maximum number of ranges to return in the response. If more ranges are found, a RangesSummary\nwill be returned. Defaults to 2000 if not specified.",
            "key": "maxRanges",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:SelectValueNode": {
      "name": "SelectValueNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "firstPoint",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "firstPoint",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:SeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "firstRange",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "firstRange",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RangesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:RawNumericSeriesNode": {
      "name": "RawNumericSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_Compute:VariableName"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:RawEnumSeriesNode": {
      "name": "RawEnumSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_Compute:VariableName"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:RollingOperationSeriesNode": {
      "name": "RollingOperationSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "window",
            "valueType": {
              "type": "id",
              "value": "type_Compute:Window"
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:RollingOperator"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:RollingOperator": {
      "name": "RollingOperator",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "exponentialAverage",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "exponentialAverage",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:ExponentialAverage"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "average",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "average",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:Average"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "count",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "count",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:Count"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "min",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "min",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:Minimum"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "max",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "max",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:Maximum"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "standardDeviation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "standardDeviation",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:StandardDeviation"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "sum",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "sum",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:Sum"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:ExponentialAverage": {
      "name": "ExponentialAverage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:Average": {
      "name": "Average",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:Count": {
      "name": "Count",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:Minimum": {
      "name": "Minimum",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:Maximum": {
      "name": "Maximum",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:StandardDeviation": {
      "name": "StandardDeviation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:Sum": {
      "name": "Sum",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:Window": {
      "name": "Window",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "duration",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "duration",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:DurationConstant"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:VariableName": {
      "name": "VariableName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Compute:LogicalSeriesRid": {
      "name": "LogicalSeriesRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Compute:SeriesName": {
      "name": "SeriesName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Compute:SeriesSpec": {
      "name": "SeriesSpec",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_Compute:LogicalSeriesRid"
            }
          },
          {
            "description": "The offset of this series relative to the time scale in which the computation is performed.",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Duration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:VariableValue": {
      "name": "VariableValue",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "double",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "double",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "computeNode",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "computeNode",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:ComputeNodeWithContext"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "duration",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "duration",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Duration"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "functionRid",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "functionRid",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:FunctionRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "integer",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "integer",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "series",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "series",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:SeriesSpec"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "stringSet",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "stringSet",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestamp",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestamp",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:Timestamp"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:ComputeNodeWithContext": {
      "name": "ComputeNodeWithContext",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "seriesNode",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ComputeNode"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "type_Compute:Context"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:FunctionReference": {
      "name": "FunctionReference",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Compute:Context": {
      "name": "Context",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Compute:VariableValue"
              }
            }
          },
          {
            "description": "Map of function references to their variables. The function reference is defined in the FunctionNode definition.\nIf a function references another function, the variables for the referenced function should be in the\nsubFunctionVariables field of the FunctionVariables.",
            "key": "functionVariables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:FunctionReference"
              },
              "valueType": {
                "type": "id",
                "value": "type_Compute:FunctionVariables"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:FunctionVariables": {
      "name": "FunctionVariables",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Compute:VariableValue"
              }
            }
          },
          {
            "key": "subFunctionVariables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:FunctionReference"
              },
              "valueType": {
                "type": "id",
                "value": "type_Compute:FunctionVariables"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:LocalVariableName": {
      "name": "LocalVariableName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Compute:NegativeValueConfiguration": {
      "name": "NegativeValueConfiguration",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "description": "Include negative output values",
            "discriminantValue": "allowNegativeValues",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "allowNegativeValues",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:AllowNegativeValues"
                  }
                }
              ]
            }
          },
          {
            "description": "Set negative output values to zero",
            "discriminantValue": "setNegativeValuesToZero",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "setNegativeValuesToZero",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:SetNegativeValuesToZero"
                  }
                }
              ]
            }
          },
          {
            "description": "Exclude points with negative output values",
            "discriminantValue": "excludeNegativeValues",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "excludeNegativeValues",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:ExcludeNegativeValues"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:AllowNegativeValues": {
      "name": "AllowNegativeValues",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:SetNegativeValuesToZero": {
      "name": "SetNegativeValuesToZero",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ExcludeNegativeValues": {
      "name": "ExcludeNegativeValues",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:PersistenceWindowConfiguration": {
      "name": "PersistenceWindowConfiguration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The minimum number of points for which this condition be must satisfied to include the time range in the\noutput. Must be non-negative. If not present, will default to 1.",
            "key": "minPoints",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:IntegerConstant"
              }
            }
          },
          {
            "description": "The minimum number of points for which this condition must be satisfied to include the time range in the\noutput. Must be non-negative. If not present, will default to 1 nanosecond.",
            "key": "minDuration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:DurationConstant"
              }
            }
          },
          {
            "description": "Which point to use as the start of the output range. Defaults to firstPointMatchingCondition if not specified.",
            "key": "outputRangeStart",
            "valueType": {
              "type": "id",
              "value": "type_Compute:OutputRangeStart"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:OutputRangeStart": {
      "name": "OutputRangeStart",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "description": "The first point in the output range will be the first point where the condition evaluates to true.\n",
            "discriminantValue": "firstPointMatchingCondition",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "firstPointMatchingCondition",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:FirstPointMatchingCondition"
                  }
                }
              ]
            }
          },
          {
            "description": "The output range will contain points where the condition has been true\nfor at least the min duration and min points.\n",
            "discriminantValue": "afterPersistenceWindow",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "afterPersistenceWindow",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:AfterPersistenceWindow"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:FirstPointMatchingCondition": {
      "name": "FirstPointMatchingCondition",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:AfterPersistenceWindow": {
      "name": "AfterPersistenceWindow",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ArithmeticSeriesNode": {
      "name": "ArithmeticSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:LocalVariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Compute:NumericSeriesNode"
              }
            }
          },
          {
            "key": "expression",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Defaults to forward fill interpolation with a 1s interpolation radius",
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:InterpolationConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:CumulativeSumSeriesNode": {
      "name": "CumulativeSumSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "startTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_Compute:TimestampConstant"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:DerivativeSeriesNode": {
      "name": "DerivativeSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "description": "Time unit used to calculate the derivative. Defaults to seconds if not specified.",
            "key": "timeUnit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:TimeUnit"
              }
            }
          },
          {
            "description": "Defines the strategy for handling negative output values. Defaults to allowNegativeValues if not specified.",
            "key": "negativeValuesConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NegativeValueConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:IntegralSeriesNode": {
      "name": "IntegralSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "startTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_Compute:TimestampConstant"
            }
          },
          {
            "description": "Time unit used to calculate the integral. Defaults to seconds if not specified.",
            "key": "timeUnit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:TimeUnit"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:EnumTimeRangeFilterSeriesNode": {
      "name": "EnumTimeRangeFilterSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EnumSeriesNode"
            }
          },
          {
            "description": "Represents the start time (inclusive) of the time range.",
            "key": "startTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:TimestampConstant"
              }
            }
          },
          {
            "description": "Represents the end time (inclusive) of the time range.",
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:TimestampConstant"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:NumericTimeRangeFilterSeriesNode": {
      "name": "NumericTimeRangeFilterSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "description": "Represents the start time (inclusive) of the time range.",
            "key": "startTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:TimestampConstant"
              }
            }
          },
          {
            "description": "Represents the end time (inclusive) of the time range.",
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:TimestampConstant"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:EnumTimeShiftSeriesNode": {
      "name": "EnumTimeShiftSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EnumSeriesNode"
            }
          },
          {
            "key": "duration",
            "valueType": {
              "type": "id",
              "value": "type_Compute:DurationConstant"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:NumericTimeShiftSeriesNode": {
      "name": "NumericTimeShiftSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "duration",
            "valueType": {
              "type": "id",
              "value": "type_Compute:DurationConstant"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:TimeDifferenceSeriesNode": {
      "name": "TimeDifferenceSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:SeriesNode"
            }
          },
          {
            "description": "The time unit used to define the output values. Defaults to seconds if not specified.",
            "key": "timeUnit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:TimeUnit"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:UnaryArithmeticSeriesNode": {
      "name": "UnaryArithmeticSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "operation",
            "valueType": {
              "type": "id",
              "value": "type_Compute:UnaryArithmeticOperation"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:BinaryArithmeticSeriesNode": {
      "name": "BinaryArithmeticSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input1",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "input2",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "operation",
            "valueType": {
              "type": "id",
              "value": "type_Compute:BinaryArithmeticOperation"
            }
          },
          {
            "description": "Defaults to forward fill interpolation with a 1s interpolation radius",
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:InterpolationConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:BinaryArithmeticOperation": {
      "name": "BinaryArithmeticOperation",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "Calculates the angle measure between the x-axis and a ray from the origin to a point (input2, input1)\nin radians.\nNote the order of arguments.",
            "value": "ATAN2"
          }
        ]
      }
    },
    "type_Compute:UnaryArithmeticOperation": {
      "name": "UnaryArithmeticOperation",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "Calculates the trigonometric cosine",
            "value": "COS"
          },
          {
            "description": "Calculates the trigonometric sine",
            "value": "SIN"
          },
          {
            "description": "Calculates the trigonometric tangent",
            "value": "TAN"
          },
          {
            "description": "Calculates the absolute value",
            "value": "ABS"
          },
          {
            "description": "Calculates the arcsin in radians.",
            "value": "ASIN"
          },
          {
            "description": "Calculates the arccos in radians.",
            "value": "ACOS"
          }
        ]
      }
    },
    "type_Compute:EnumUnionSeriesNode": {
      "name": "EnumUnionSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:EnumSeriesNode"
              }
            }
          },
          {
            "description": "The strategy to merge points with duplicate timestamps.",
            "key": "operation",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EnumUnionOperation"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:EnumUnionOperation": {
      "name": "EnumUnionOperation",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "Throws an exception if two series contain points with a duplicate timestamp.",
            "value": "THROW"
          },
          {
            "description": "Aggregates duplicates by String MAX.",
            "value": "MAX"
          },
          {
            "description": "Aggregates duplicates by String MIN.",
            "value": "MIN"
          }
        ]
      }
    },
    "type_Compute:NumericUnionSeriesNode": {
      "name": "NumericUnionSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NumericSeriesNode"
              }
            }
          },
          {
            "description": "The strategy to merge points with duplicate timestamps.",
            "key": "operation",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericUnionOperation"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:NumericUnionOperation": {
      "name": "NumericUnionOperation",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "Combines multiple points by taking the minimum value",
            "value": "MIN"
          },
          {
            "description": "Combines multiple points by taking the maximum value",
            "value": "MAX"
          },
          {
            "description": "Combines multiple points by taking the mean of the values",
            "value": "MEAN"
          },
          {
            "description": "Combines multiple points by taking the sum of the values",
            "value": "SUM"
          },
          {
            "description": "Throws a DuplicateTimestamp error if two series contain points with a duplicate timestamp.",
            "value": "THROW"
          }
        ]
      }
    },
    "type_Compute:ValueDifferenceSeriesNode": {
      "name": "ValueDifferenceSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "description": "Defines the strategy for handling negative output values. Defaults to allowNegativeValues if not specified.",
            "key": "negativeValuesConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NegativeValueConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:NumericFilterTransformationSeriesNode": {
      "name": "NumericFilterTransformationSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "filter",
            "valueType": {
              "type": "id",
              "value": "type_Compute:RangesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:EnumFilterTransformationSeriesNode": {
      "name": "EnumFilterTransformationSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EnumSeriesNode"
            }
          },
          {
            "key": "filter",
            "valueType": {
              "type": "id",
              "value": "type_Compute:RangesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:AggregateEnumSeriesNode": {
      "name": "AggregateEnumSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EnumSeriesNode"
            }
          },
          {
            "key": "function",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EnumAggregationFunction"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:AggregateNumericSeriesNode": {
      "name": "AggregateNumericSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "function",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericAggregationFunction"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:BitOperationSeriesNode": {
      "name": "BitOperationSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "function",
            "valueType": {
              "type": "id",
              "value": "type_Compute:BitOperationFunction"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:BitOperationFunction": {
      "name": "BitOperationFunction",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "and",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "and",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:BitAndFunction"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "or",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "or",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:BitOrFunction"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "xor",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "xor",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:BitXorFunction"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "bitTest",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "bitTest",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:BitTestFunction"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:NumericAggregationFunction": {
      "name": "NumericAggregationFunction",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "SUM"
          },
          {
            "value": "MEAN"
          },
          {
            "value": "MIN"
          },
          {
            "value": "MAX"
          }
        ]
      }
    },
    "type_Compute:EnumAggregationFunction": {
      "name": "EnumAggregationFunction",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "MIN"
          },
          {
            "value": "MAX"
          }
        ]
      }
    },
    "type_Compute:BitAndFunction": {
      "name": "BitAndFunction",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "operand",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:BitOrFunction": {
      "name": "BitOrFunction",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "operand",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:BitXorFunction": {
      "name": "BitXorFunction",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "operand",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:BitTestFunction": {
      "name": "BitTestFunction",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "index",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:EnumSeriesFunction": {
      "name": "EnumSeriesFunction",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A reference to identify the function node for substituting variables used within the function.",
            "key": "functionReference",
            "valueType": {
              "type": "id",
              "value": "type_Compute:FunctionReference"
            }
          },
          {
            "description": "The variable that needs to be substituted with the function RID.",
            "key": "functionIdentifier",
            "valueType": {
              "type": "id",
              "value": "type_Compute:FunctionVariable"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:NumericSeriesFunction": {
      "name": "NumericSeriesFunction",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A reference to identify the function node for substituting variables used within the function.",
            "key": "functionReference",
            "valueType": {
              "type": "id",
              "value": "type_Compute:FunctionReference"
            }
          },
          {
            "description": "The variable that needs to be substituted with the function RID.",
            "key": "functionIdentifier",
            "valueType": {
              "type": "id",
              "value": "type_Compute:FunctionVariable"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:MaxSeriesNode": {
      "name": "MaxSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NumericSeriesNode"
              }
            }
          },
          {
            "description": "Defaults to forward fill interpolation with a 1s interpolation radius",
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:InterpolationConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:MeanSeriesNode": {
      "name": "MeanSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NumericSeriesNode"
              }
            }
          },
          {
            "description": "Defaults to forward fill interpolation with a 1s interpolation radius",
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:InterpolationConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:MinSeriesNode": {
      "name": "MinSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NumericSeriesNode"
              }
            }
          },
          {
            "description": "Defaults to forward fill interpolation with a 1s interpolation radius",
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:InterpolationConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ProductSeriesNode": {
      "name": "ProductSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NumericSeriesNode"
              }
            }
          },
          {
            "description": "Defaults to forward fill interpolation with a 1s interpolation radius",
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:InterpolationConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:EnumResampleSeriesNode": {
      "name": "EnumResampleSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EnumSeriesNode"
            }
          },
          {
            "description": "The interval at which to resample the series and interpolation strategy",
            "key": "resampleConfiguration",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ResampleConfiguration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:NumericResampleSeriesNode": {
      "name": "NumericResampleSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "description": "The interpolation strategy and interval at which to resample the series",
            "key": "resampleConfiguration",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ResampleConfiguration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:SumSeriesNode": {
      "name": "SumSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NumericSeriesNode"
              }
            }
          },
          {
            "description": "Defaults to forward fill interpolation with a 1s interpolation radius",
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:InterpolationConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ScaleSeriesNode": {
      "name": "ScaleSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "description": "The constant to multiply each point by",
            "key": "scalar",
            "valueType": {
              "type": "id",
              "value": "type_Compute:DoubleConstant"
            }
          },
          {
            "description": "The units of the scalar to multiply by. If empty, the scalar is considered unit-less.",
            "key": "scalarUnit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Units:UnitSymbol"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:OffsetSeriesNode": {
      "name": "OffsetSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "description": "The constant to add to each point",
            "key": "scalar",
            "valueType": {
              "type": "id",
              "value": "type_Compute:DoubleConstant"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:UnitConversionSeriesNode": {
      "name": "UnitConversionSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "outputUnit",
            "valueType": {
              "type": "id",
              "value": "type_Units:UnitSymbol"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:InterpolationConfiguration": {
      "name": "InterpolationConfiguration",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "forwardFillInterpolation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "forwardFillInterpolation",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:ForwardFillInterpolation"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:ForwardFillInterpolation": {
      "name": "ForwardFillInterpolation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "interpolationRadius",
            "valueType": {
              "type": "id",
              "value": "type_Compute:DurationConstant"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ResampleConfiguration": {
      "name": "ResampleConfiguration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Interval between resampled points",
            "key": "interval",
            "valueType": {
              "type": "id",
              "value": "type_Compute:DurationConstant"
            }
          },
          {
            "description": "Interpolation strategy to use (defaults to forward fill).",
            "key": "interpolation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:ResampleInterpolationConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ResampleInterpolationConfiguration": {
      "name": "ResampleInterpolationConfiguration",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "forwardFillResampleInterpolationConfiguration",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "forwardFillResampleInterpolationConfiguration",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:ForwardFillResampleInterpolationConfiguration"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:ForwardFillResampleInterpolationConfiguration": {
      "name": "ForwardFillResampleInterpolationConfiguration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:RangesNumericAggregationNode": {
      "name": "RangesNumericAggregationNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "ranges",
            "valueType": {
              "type": "id",
              "value": "type_Compute:RangesNode"
            }
          },
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "operation",
            "valueType": {
              "type": "id",
              "value": "type_Compute:RangeAggregationOperation"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:RangeAggregationOperation": {
      "name": "RangeAggregationOperation",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "average",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "average",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:Average"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "min",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "min",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:Minimum"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "max",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "max",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:Maximum"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "standardDeviation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "standardDeviation",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:StandardDeviation"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "all",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "all",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:Empty"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:RangesFunction": {
      "name": "RangesFunction",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A reference to identify the function node for substituting variables used within the function.",
            "key": "functionReference",
            "valueType": {
              "type": "id",
              "value": "type_Compute:FunctionReference"
            }
          },
          {
            "description": "The variable that needs to be substituted with the function RID.",
            "key": "functionIdentifier",
            "valueType": {
              "type": "id",
              "value": "type_Compute:FunctionVariable"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:UnionRangesNode": {
      "name": "UnionRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:RangesNode"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:IntersectRangesNode": {
      "name": "IntersectRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:RangesNode"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:NotRangesNode": {
      "name": "NotRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:RangesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:SeriesCrossoverRangesNode": {
      "name": "SeriesCrossoverRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputA",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "inputB",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:SeriesEqualityRangesNode": {
      "name": "SeriesEqualityRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NumericSeriesNode"
              }
            }
          },
          {
            "key": "equalityOperator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EqualityOperator"
            }
          },
          {
            "key": "tolerance",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:DoubleConstant"
              }
            }
          },
          {
            "key": "persistenceWindowConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:PersistenceWindowConfiguration"
              }
            }
          },
          {
            "description": "Defaults to forward fill interpolation with a 1s interpolation radius",
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:InterpolationConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:EnumSeriesEqualityRangesNode": {
      "name": "EnumSeriesEqualityRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:EnumSeriesNode"
              }
            }
          },
          {
            "key": "equalityOperator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EqualityOperator"
            }
          },
          {
            "key": "persistenceWindowConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:PersistenceWindowConfiguration"
              }
            }
          },
          {
            "description": "Defaults to forward fill interpolation with a 1s interpolation radius",
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:InterpolationConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:EqualityOperator": {
      "name": "EqualityOperator",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ALL_EQUAL"
          },
          {
            "value": "NOT_ALL_EQUAL"
          }
        ]
      }
    },
    "type_Compute:EnumFilterRangesNode": {
      "name": "EnumFilterRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EnumSeriesNode"
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EnumFilterOperator"
            }
          },
          {
            "key": "values",
            "valueType": {
              "type": "id",
              "value": "type_Compute:StringSetConstant"
            }
          },
          {
            "key": "persistenceWindowConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:PersistenceWindowConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:EnumFilterOperator": {
      "name": "EnumFilterOperator",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "IS_IN"
          },
          {
            "value": "IS_NOT_IN"
          }
        ]
      }
    },
    "type_Compute:ThresholdingRangesNode": {
      "name": "ThresholdingRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "threshold",
            "valueType": {
              "type": "id",
              "value": "type_Compute:DoubleConstant"
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ThresholdOperator"
            }
          },
          {
            "key": "persistenceWindowConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:PersistenceWindowConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:MinMaxThresholdRangesNode": {
      "name": "MinMaxThresholdRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "lowerBound",
            "valueType": {
              "type": "id",
              "value": "type_Compute:DoubleConstant"
            }
          },
          {
            "key": "upperBound",
            "valueType": {
              "type": "id",
              "value": "type_Compute:DoubleConstant"
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:MinMaxThresholdOperator"
            }
          },
          {
            "key": "persistenceWindowConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:PersistenceWindowConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:OnChangeRangesNode": {
      "name": "OnChangeRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:SeriesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:PeakRangesNode": {
      "name": "PeakRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "description": "True if returning peaks, else troughs.",
            "key": "returnsPeaks",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Optional for backcompatibility.",
            "key": "returnType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:PeakType"
              }
            }
          },
          {
            "description": "The minimum topographic prominence for an extrema to be returned.\nProminence is the minimum vertical distance needed to travel from an extrema to one of greater magnitude.",
            "key": "minimumProminence",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:DoubleConstant"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:PeakType": {
      "name": "PeakType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PEAK"
          },
          {
            "value": "TROUGH"
          },
          {
            "value": "BOTH"
          }
        ]
      }
    },
    "type_Compute:RawRangesNode": {
      "name": "RawRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_Compute:VariableName"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ThresholdOperator": {
      "name": "ThresholdOperator",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "GREATER_THAN"
          },
          {
            "value": "GREATER_THAN_OR_EQUAL_TO"
          },
          {
            "value": "LESS_THAN"
          },
          {
            "value": "LESS_THAN_OR_EQUAL_TO"
          },
          {
            "value": "EQUAL_TO"
          },
          {
            "value": "NOT_EQUAL_TO"
          }
        ]
      }
    },
    "type_Compute:MinMaxThresholdOperator": {
      "name": "MinMaxThresholdOperator",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "OUTSIDE_BOUNDS"
          },
          {
            "value": "OUTSIDE_OR_EQUAL_TO_BOUNDS"
          },
          {
            "value": "INSIDE_BOUNDS"
          },
          {
            "value": "INSIDE_OR_EQUAL_TO_BOUNDS"
          }
        ]
      }
    },
    "type_Compute:StaleRangesNode": {
      "name": "StaleRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_Compute:SeriesNode"
            }
          },
          {
            "key": "threshold",
            "valueType": {
              "type": "id",
              "value": "type_Compute:DurationConstant"
            }
          },
          {
            "key": "startTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_Compute:TimestampConstant"
            }
          },
          {
            "key": "endTimestamp",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:TimestampConstant"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:CartesianBounds": {
      "name": "CartesianBounds",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "minX",
            "valueType": {
              "type": "id",
              "value": "type_Compute:DoubleConstant"
            }
          },
          {
            "key": "maxX",
            "valueType": {
              "type": "id",
              "value": "type_Compute:DoubleConstant"
            }
          },
          {
            "key": "minY",
            "valueType": {
              "type": "id",
              "value": "type_Compute:DoubleConstant"
            }
          },
          {
            "key": "maxY",
            "valueType": {
              "type": "id",
              "value": "type_Compute:DoubleConstant"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ScatterNode": {
      "name": "ScatterNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "x",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "y",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ParameterizedComputeNodeRequest": {
      "name": "ParameterizedComputeNodeRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "node",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ComputableNode"
            }
          },
          {
            "key": "start",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "end",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "type_Compute:Context"
            }
          },
          {
            "description": "Specifies how certain variables should be parameterized. If a variable name appears in both the context\nand the parameterized context, it will be treated as parameterized.",
            "key": "parameterizedContext",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ParameterizedContext"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ParameterizedContext": {
      "name": "ParameterizedContext",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Each parameter input provides a satisfying set of values for the parameterized compute node.",
            "key": "parameterInputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:ParameterInput"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ParameterInput": {
      "name": "ParameterInput",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Compute:VariableValue"
              }
            }
          },
          {
            "description": "Map of function references to their variables. The function reference is defined in the FunctionNode definition.\nIf a function references another function, the variables for the referenced function should be in the\nsubFunctionVariables field of the FunctionVariables.",
            "key": "functionVariables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:FunctionReference"
              },
              "valueType": {
                "type": "id",
                "value": "type_Compute:FunctionVariables"
              }
            }
          },
          {
            "description": "Overrides the start and end time of the compute request. If either the start or end are not present, we\ndefault back to the start/end specified in the request.",
            "key": "timeRange",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:Range"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ParameterizedComputeNodeResponse": {
      "name": "ParameterizedComputeNodeResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:ParameterizedComputeNodeResult"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ParameterizedComputeNodeResult": {
      "name": "ParameterizedComputeNodeResult",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "success",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:ComputeNodeResponse"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:ErrorResult"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:ErrorResult": {
      "name": "ErrorResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "errorType",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ErrorType"
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ErrorCode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ErrorType": {
      "description": "Should be of the format Namespace:ErrorType",
      "name": "ErrorType",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Compute:ErrorCode": {
      "name": "ErrorCode",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "type_Compute:ComputeNodeRequest": {
      "name": "ComputeNodeRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "node",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ComputableNode"
            }
          },
          {
            "key": "start",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "end",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "type_Compute:Context"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ComputeUnitsRequest": {
      "name": "ComputeUnitsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "node",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ComputableNode"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "type_Compute:Context"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:BatchComputeUnitsRequest": {
      "name": "BatchComputeUnitsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "requests",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:ComputeUnitsRequest"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ComputeNodeResponse": {
      "name": "ComputeNodeResponse",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "numeric",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numeric",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NumericPlot"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "bucketedNumeric",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "bucketedNumeric",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:BucketedNumericPlot"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "range",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "range",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_Compute:Range"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "rangesSummary",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "rangesSummary",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RangesSummary"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "enum",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enum",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumPlot"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "bucketedEnum",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "bucketedEnum",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:BucketedEnumPlot"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "cartesian",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "cartesian",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:CartesianPlot"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "bucketedCartesian",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "bucketedCartesian",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:BucketedCartesianPlot"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "bucketedGeo",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "bucketedGeo",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:BucketedGeoPlot"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "enumPoint",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enumPoint",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_Compute:EnumPoint"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "numericPoint",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numericPoint",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_Compute:NumericPoint"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "rangeValue",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "rangeValue",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_Compute:Range"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "frequencyDomain",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "frequencyDomain",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:FrequencyDomainPlot"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "numericHistogram",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numericHistogram",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NumericHistogramPlot"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "enumHistogram",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enumHistogram",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumHistogramPlot"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:ComputeWithUnitsRequest": {
      "name": "ComputeWithUnitsRequest",
      "shape": {
        "type": "alias",
        "value": {
          "type": "id",
          "value": "type_Compute:ComputeNodeRequest"
        }
      }
    },
    "type_Compute:ComputeWithUnitsResponse": {
      "name": "ComputeWithUnitsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "computeResult",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ComputeNodeResponse"
            }
          },
          {
            "key": "computeUnit",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ComputeUnitResult"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:Range": {
      "name": "Range",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "start",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "end",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:RangeValue"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:RangeValue": {
      "name": "RangeValue",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "double",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "double",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "aggregation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "aggregation",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RangeAggregation"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "noPointsInRange",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "noPointsInRange",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:Empty"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:RangeAggregation": {
      "name": "RangeAggregation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "average",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "min",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "max",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "standardDeviation",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:Empty": {
      "name": "Empty",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:RangesSummary": {
      "name": "RangesSummary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rangesSummary",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:RangeSummary"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:RangeSummary": {
      "name": "RangeSummary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The range representing the minimum start and maximum end times of the ranges.",
            "key": "range",
            "valueType": {
              "type": "id",
              "value": "type_Compute:Range"
            }
          },
          {
            "description": "The number of ranges found within this time range.",
            "key": "subRangeCount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:NumericPlot": {
      "name": "NumericPlot",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timestamps",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "values",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:BucketedNumericPlot": {
      "name": "BucketedNumericPlot",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The end of the bucket, exclusive.",
            "key": "timestamps",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "buckets",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NumericBucket"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:EnumPlot": {
      "name": "EnumPlot",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timestamps",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "values",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "categories",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:BucketedEnumPlot": {
      "name": "BucketedEnumPlot",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The end of the bucket, exclusive.",
            "key": "timestamps",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "buckets",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:EnumBucket"
              }
            }
          },
          {
            "key": "categories",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:CartesianPlot": {
      "name": "CartesianPlot",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timestamps",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "xValues",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "yValues",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:BucketedCartesianPlot": {
      "name": "BucketedCartesianPlot",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "buckets",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:CartesianBucket"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:CartesianBucket": {
      "name": "CartesianBucket",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "minX",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "maxX",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "minY",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "maxY",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "minTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "maxTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:BucketedGeoPlot": {
      "name": "BucketedGeoPlot",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "timeBased",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeBased",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:TimeBucketedGeoPlot"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:TimeBucketedGeoPlot": {
      "name": "TimeBucketedGeoPlot",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The end of the bucket, exclusive.",
            "key": "timestamps",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "buckets",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:GeoTimeBucket"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:GeoTimeBucket": {
      "name": "GeoTimeBucket",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The mean value of the GeoPoints in the bucket.",
            "key": "mean",
            "valueType": {
              "type": "id",
              "value": "type_Compute:GeoPoint"
            }
          },
          {
            "description": "The number of GeoPoints in the bucket.",
            "key": "count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "description": "The first GeoPoint in the bucket.",
            "key": "firstPoint",
            "valueType": {
              "type": "id",
              "value": "type_Compute:GeoPointWithTimestamp"
            }
          },
          {
            "description": "The last GeoPoint in the bucket. Will be empty if the bucket only has a single point.",
            "key": "lastPoint",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:GeoPointWithTimestamp"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:GeoPoint": {
      "name": "GeoPoint",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "latLong",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "latLong",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:LatLongPoint"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:GeoPointWithTimestamp": {
      "name": "GeoPointWithTimestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "id",
              "value": "type_Compute:GeoPoint"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:NumericHistogramPlot": {
      "name": "NumericHistogramPlot",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "buckets",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NumericHistogramBucket"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:NumericHistogramBucket": {
      "name": "NumericHistogramBucket",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The lower bound of the bucket, inclusive",
            "key": "lowerBound",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "description": "The upper bound of the bucket, exclusive",
            "key": "upperBound",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "countsByChannel",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Compute:HistogramChannelCount"
              }
            }
          },
          {
            "key": "buckets",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Compute:HistogramChannelCount"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:EnumHistogramPlot": {
      "name": "EnumHistogramPlot",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "buckets",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:EnumHistogramBucket"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:EnumHistogramBucket": {
      "name": "EnumHistogramBucket",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The value of the enum as a string",
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "countsByChannel",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Compute:HistogramChannelCount"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:HistogramChannelCount": {
      "name": "HistogramChannelCount",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:FrequencyDomainPlot": {
      "name": "FrequencyDomainPlot",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "frequencies",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "amplitudes",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:NumericBucket": {
      "name": "NumericBucket",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "min",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "max",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "mean",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "description": "The population variance of the bucket. If the bucket has only one value, this will be 0.",
            "key": "variance",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "firstPoint",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericPoint"
            }
          },
          {
            "description": "Will be empty if the bucket only has a single point.",
            "key": "lastPoint",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NumericPoint"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:NumericPoint": {
      "name": "NumericPoint",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:CompactEnumPoint": {
      "name": "CompactEnumPoint",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:EnumPoint": {
      "name": "EnumPoint",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:EnumBucket": {
      "name": "EnumBucket",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The map of values within the bucket to their frequency.",
            "key": "histogram",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "long",
                  "default": 0
                }
              }
            }
          },
          {
            "key": "firstPoint",
            "valueType": {
              "type": "id",
              "value": "type_Compute:CompactEnumPoint"
            }
          },
          {
            "description": "Will be empty if the bucket only has a single point.",
            "key": "lastPoint",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:CompactEnumPoint"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:BatchComputeUnitResult": {
      "name": "BatchComputeUnitResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:ComputeUnitResult"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:ComputeUnitResult": {
      "name": "ComputeUnitResult",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "single",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "single",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:UnitResult"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "cartesian",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "cartesian",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:CartesianUnitResult"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:CartesianUnitResult": {
      "name": "CartesianUnitResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "x",
            "valueType": {
              "type": "id",
              "value": "type_Compute:UnitResult"
            }
          },
          {
            "key": "y",
            "valueType": {
              "type": "id",
              "value": "type_Compute:UnitResult"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:UnitResult": {
      "name": "UnitResult",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "success",
                  "valueType": {
                    "type": "id",
                    "value": "type_Units:UnitSymbol"
                  }
                }
              ]
            }
          },
          {
            "description": "The resulting values have no units associated. If this is because of an error, it is listed here.",
            "discriminantValue": "noUnitAvailable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "noUnitAvailable",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_Compute:UnitComputationError"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:UnitComputationError": {
      "name": "UnitComputationError",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "incompatibleUnitsOperation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "incompatibleUnitsOperation",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:IncompatibleUnitOperation"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "unitsMissing",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "unitsMissing",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:UnitsMissing"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:SerializableError"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:IncompatibleUnitOperation": {
      "name": "IncompatibleUnitOperation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "operation",
            "valueType": {
              "type": "id",
              "value": "type_Compute:UnitOperation"
            }
          },
          {
            "key": "units",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Units:UnitSymbol"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:UnitsMissing": {
      "name": "UnitsMissing",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "seriesRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Compute:LogicalSeriesRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Compute:UnitOperation": {
      "name": "UnitOperation",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "UNIT_AS_EXPONENT"
          },
          {
            "value": "NON_INTEGER_AS_EXPONENT"
          },
          {
            "value": "FLOOR_DIVISION"
          },
          {
            "value": "MODULO"
          },
          {
            "value": "CROSSOVER_COMPARISON"
          },
          {
            "value": "MAX"
          },
          {
            "value": "MIN"
          },
          {
            "value": "MEAN"
          },
          {
            "value": "UNION"
          },
          {
            "value": "ADDITION"
          },
          {
            "value": "SUBTRACTION"
          },
          {
            "value": "UNIT_CONVERSION"
          }
        ]
      }
    },
    "type_Compute:DoubleConstant": {
      "name": "DoubleConstant",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "literal",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "literal",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "variable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "variable",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:VariableName"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:DurationConstant": {
      "name": "DurationConstant",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "literal",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "literal",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Duration"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "variable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "variable",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:VariableName"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:FunctionVariable": {
      "name": "FunctionVariable",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "variable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "variable",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:VariableName"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:IntegerConstant": {
      "name": "IntegerConstant",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "literal",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "literal",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "variable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "variable",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:VariableName"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:StringSetConstant": {
      "name": "StringSetConstant",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "literal",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "literal",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "variable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "variable",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:VariableName"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Compute:TimestampConstant": {
      "name": "TimestampConstant",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "literal",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "literal",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:Timestamp"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "variable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "variable",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:VariableName"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ComputeRepresentation:Node": {
      "name": "Node",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "enumeratedSeries",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enumeratedSeries",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "numericSeries",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numericSeries",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NumericSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "rangeSeries",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "rangeSeries",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RangesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ComputeRepresentation:CompiledNode": {
      "name": "CompiledNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "node",
            "valueType": {
              "type": "id",
              "value": "type_ComputeRepresentation:Node"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "type_ComputeRepresentation:ComputeRepresentationContext"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ComputeRepresentation:CompiledNumericSeries": {
      "name": "CompiledNumericSeries",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "node",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericSeriesNode"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "type_ComputeRepresentation:ComputeRepresentationContext"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ComputeRepresentation:CompiledEnumeratedSeries": {
      "name": "CompiledEnumeratedSeries",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "node",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EnumSeriesNode"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "type_ComputeRepresentation:ComputeRepresentationContext"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ComputeRepresentation:CompiledRangeSeries": {
      "name": "CompiledRangeSeries",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "node",
            "valueType": {
              "type": "id",
              "value": "type_Compute:RangesNode"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "type_ComputeRepresentation:ComputeRepresentationContext"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ComputeRepresentation:ComputeRepresentationContext": {
      "name": "ComputeRepresentationContext",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_ComputeRepresentation:ComputeRepresentationVariableValue"
              }
            }
          },
          {
            "key": "functionVariables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:FunctionReference"
              },
              "valueType": {
                "type": "id",
                "value": "type_ComputeRepresentation:ComputeRepresentationContext"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ComputeRepresentation:ComputeRepresentationVariableValue": {
      "name": "ComputeRepresentationVariableValue",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "double",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "double",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "duration",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "duration",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Duration"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "integer",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "integer",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "stringSet",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "stringSet",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestamp",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestamp",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:Timestamp"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "functionRid",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "functionRid",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:FunctionRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "series",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "series",
                  "valueType": {
                    "type": "id",
                    "value": "type_ComputeRepresentation:ChannelLocator"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "externalVariableReference",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "externalVariableReference",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ComputeRepresentation:ChannelLocator": {
      "name": "ChannelLocator",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "dataSourceRef",
            "valueType": {
              "type": "id",
              "value": "type_common:DataSourceRefName"
            }
          },
          {
            "key": "channel",
            "valueType": {
              "type": "id",
              "value": "type_common:Channel"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ComputeRepresentation:ComputeExpression": {
      "name": "ComputeExpression",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_ComputeRepresentation:ExpressionToComputeRequest": {
      "name": "ExpressionToComputeRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "expression",
            "valueType": {
              "type": "id",
              "value": "type_ComputeRepresentation:ComputeExpression"
            }
          },
          {
            "key": "defaultRefName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ComputeRepresentation:BatchExpressionToComputeRequest": {
      "name": "BatchExpressionToComputeRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "expressions",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_ComputeRepresentation:ComputeExpression"
              }
            }
          },
          {
            "key": "defaultRefName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ComputeRepresentation:ExpressionToComputeResult": {
      "name": "ExpressionToComputeResult",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "success",
                  "valueType": {
                    "type": "id",
                    "value": "type_ComputeRepresentation:SuccessExpressionToComputeResult"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_ComputeRepresentation:ErrorExpressionToComputeResult"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ComputeRepresentation:SuccessExpressionToComputeResult": {
      "name": "SuccessExpressionToComputeResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "node",
            "valueType": {
              "type": "id",
              "value": "type_ComputeRepresentation:CompiledNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ComputeRepresentation:ErrorExpressionToComputeResult": {
      "name": "ErrorExpressionToComputeResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "errorMessage",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:ConnectionRid": {
      "name": "ConnectionRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Connection:ScrapingConfig": {
      "name": "ScrapingConfig",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "influx",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "influx",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:InfluxScrapingConfig"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "nominal",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "nominal",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:NominalScrapingConfig"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestream",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestream",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:TimestreamScrapingConfig"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timescale",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timescale",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:PivotedTimescaleScrapingConfig"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "visualCrossing",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "visualCrossing",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:VisualCrossingScrapingConfig"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Connection:InfluxScrapingConfig": {
      "name": "InfluxScrapingConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Filters are ANDed together",
            "key": "filter",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Connection:InfluxScrapingFilter"
              }
            }
          },
          {
            "key": "seriesArchetypeConstruction",
            "valueType": {
              "type": "id",
              "value": "type_Connection:InfluxSeriesArchetypeConstructionConfig"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:NominalScrapingConfig": {
      "name": "NominalScrapingConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "channelNameComponents will be combined, together with separator, to form\na fully qualified channel name.",
            "key": "channelNameComponents",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Connection:NominalChannelNameComponent"
              }
            }
          },
          {
            "key": "separator",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:VisualCrossingScrapingConfig": {
      "name": "VisualCrossingScrapingConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "list of available channels",
            "key": "availableSeries",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Connection:VisualCrossingAvailableSeries"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:Channel": {
      "name": "Channel",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Connection:Unit": {
      "name": "Unit",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Connection:VisualCrossingType": {
      "name": "VisualCrossingType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "DOUBLE"
          },
          {
            "value": "STRING"
          }
        ]
      }
    },
    "type_Connection:VisualCrossingAvailableSeries": {
      "name": "VisualCrossingAvailableSeries",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "channel",
            "valueType": {
              "type": "id",
              "value": "type_Connection:Channel"
            }
          },
          {
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Connection:Unit"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_Connection:VisualCrossingType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:TimestreamScrapingConfig": {
      "name": "TimestreamScrapingConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "In order for data to be picked up by the scraper, it must match all\nfilters in this list.",
            "key": "filter",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Connection:TimestreamScrapingFilter"
              }
            }
          },
          {
            "description": "channelNameComponents will be combined, together with separator, to form\na fully qualified channel name.",
            "key": "channelNameComponents",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Connection:TimestreamChannelNameComponent"
              }
            }
          },
          {
            "key": "separator",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The maximum time in hours to look back over series data to find unique measure and tag combinations.\nIf not specified, the default look back period will be used.",
            "key": "maxLookBackPeriodHours",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:PivotedTimescaleScrapingConfig": {
      "name": "PivotedTimescaleScrapingConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "In order for data to be picked up by the scraper, it must match all\nfilters in this list. To exclude chunks of data, it's possible to use\na not filter.",
            "key": "filter",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Connection:TimescaleScrapingFilter"
              }
            }
          },
          {
            "description": "The name of the column that holds the timestamp.",
            "key": "timeColumn",
            "valueType": {
              "type": "id",
              "value": "type_Connection:ColumnName"
            }
          },
          {
            "description": "The name of the column that holds the series name.",
            "key": "nameColumn",
            "valueType": {
              "type": "id",
              "value": "type_Connection:ColumnName"
            }
          },
          {
            "description": "The name of the column that holds the series values.",
            "key": "valueColumn",
            "valueType": {
              "type": "id",
              "value": "type_Connection:ColumnName"
            }
          },
          {
            "description": "The names of the columns that comprise a dimension. They should have a database index for efficient filtering. We do not discover\ndimensions based on hypertable schema because they are not necessarily configured properly.",
            "key": "dimensionColumns",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Connection:ColumnName"
              }
            }
          },
          {
            "description": "channelNameComponents will be combined, together with separator, to form\na fully qualified channel name.",
            "key": "channelNameComponents",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Connection:PivotedTimescaleChannelNameComponent"
              }
            }
          },
          {
            "key": "separator",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:TableName": {
      "name": "TableName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Connection:SchemaName": {
      "name": "SchemaName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Connection:LocationName": {
      "name": "LocationName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Connection:TimestreamScrapingFilter": {
      "name": "TimestreamScrapingFilter",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "description": "Match any of the specified tables in the database.\n",
            "discriminantValue": "matchTable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "matchTable",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_Connection:TableName"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Connection:TimescaleScrapingFilter": {
      "name": "TimescaleScrapingFilter",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "not",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "not",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:TimescaleScrapingFilter"
                  }
                }
              ]
            }
          },
          {
            "description": "Match any of the specified tables in the database.\n",
            "discriminantValue": "matchTable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "matchTable",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_Connection:TableName"
                    }
                  }
                }
              ]
            }
          },
          {
            "description": "Match any of the specified schemas in the database.\n",
            "discriminantValue": "matchSchema",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "matchSchema",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_Connection:SchemaName"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Connection:TimestreamChannelNameComponent": {
      "name": "TimestreamChannelNameComponent",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "table",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "table",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:Empty"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "measure",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "measure",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:Empty"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "attribute",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "attribute",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:Empty"
                  }
                }
              ]
            }
          },
          {
            "description": "The value of the specified TagName will be used. If the tag is not present, it will be omitted.",
            "discriminantValue": "valueOfTagWithName",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "valueOfTagWithName",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:TagName"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Connection:NominalChannelNameComponent": {
      "name": "NominalChannelNameComponent",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "channel",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "channel",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:Empty"
                  }
                }
              ]
            }
          },
          {
            "description": "The value of the specified TagName will be used. If the tag is not present, it will be omitted.",
            "discriminantValue": "valueOfTagWithName",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "valueOfTagWithName",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:TagName"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Connection:ColumnName": {
      "name": "ColumnName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Connection:PivotedTimescaleChannelNameComponent": {
      "name": "PivotedTimescaleChannelNameComponent",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "table",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "table",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:Empty"
                  }
                }
              ]
            }
          },
          {
            "description": "The value of the name column.",
            "discriminantValue": "name",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:Empty"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Connection:InfluxSeriesArchetypeConstructionConfig": {
      "name": "InfluxSeriesArchetypeConstructionConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "channelNameComponents",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Connection:InfluxChannelNameComponent"
              }
            }
          },
          {
            "key": "separator",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:Empty": {
      "name": "Empty",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:InfluxChannelNameComponent": {
      "name": "InfluxChannelNameComponent",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "bucket",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "bucket",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:Empty"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "measurement",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "measurement",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:Empty"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "field",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "field",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:Empty"
                  }
                }
              ]
            }
          },
          {
            "description": "The value for the specified TagName will be used. If the tag is not present, it will be omitted.",
            "discriminantValue": "tagValue",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "tagValue",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:TagName"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Connection:BucketName": {
      "name": "BucketName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Connection:MeasurementName": {
      "name": "MeasurementName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Connection:InfluxScrapingFilter": {
      "name": "InfluxScrapingFilter",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "not",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "not",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:InfluxScrapingFilter"
                  }
                }
              ]
            }
          },
          {
            "description": "Match any of the specified buckets",
            "discriminantValue": "matchBucket",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "matchBucket",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_Connection:BucketName"
                    }
                  }
                }
              ]
            }
          },
          {
            "description": "Match any of the specified measurements",
            "discriminantValue": "matchMeasurement",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "matchMeasurement",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_Connection:MeasurementName"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Connection:Connection": {
      "name": "Connection",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_Connection:ConnectionRid"
            }
          },
          {
            "description": "The display name of the connection. For example: \"Nominal production TimescaleDB\"",
            "key": "displayName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "connectionDetails",
            "valueType": {
              "type": "id",
              "value": "type_Connection:ConnectionDetails"
            }
          },
          {
            "description": "Additional tag names that should be supplied to construct a fully qualified series. These are suggested,\nrather than strictly required.",
            "key": "requiredTagNames",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_global:TagName"
              }
            }
          },
          {
            "key": "availableTagValues",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_global:TagValue"
                }
              }
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "",
            "key": "scraping",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Connection:ScrapingConfig"
              }
            }
          },
          {
            "description": "The connection will be scraped iff this flag is set and scrapingConfig is present.",
            "key": "shouldScrape",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "limits",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Connection:LimitsConfig"
              }
            }
          },
          {
            "key": "connectionStatus",
            "valueType": {
              "type": "id",
              "value": "type_Connection:ConnectionStatus"
            }
          },
          {
            "key": "isArchived",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:ConnectionDetails": {
      "name": "ConnectionDetails",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "timescale",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timescale",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:TimescaleConnectionDetails"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "influx",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "influx",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:Influx2ConnectionDetails"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "influx1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "influx1",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:Influx1ConnectionDetails"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "nominal",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "nominal",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:NominalConnectionDetails"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestream",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestream",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:TimestreamConnectionDetails"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "visualCrossing",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "visualCrossing",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:VisualCrossingConnectionDetails"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Connection:ConnectionStatus": {
      "name": "ConnectionStatus",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isConnected",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:TimescaleConnectionDetails": {
      "name": "TimescaleConnectionDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "database",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "host",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "port",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "This is also the reference to the secret containing the password",
            "key": "username",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Secret Rid of password secret stored in Secrets Service.",
            "key": "passwordSecretRid",
            "valueType": {
              "type": "id",
              "value": "type_Connection:SecretRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:SecretName": {
      "name": "SecretName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Connection:SecretRid": {
      "name": "SecretRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Connection:HeaderValue": {
      "name": "HeaderValue",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "plain",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "plain",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "secretRid",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "secretRid",
                  "valueType": {
                    "type": "id",
                    "value": "type_Connection:SecretRid"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Connection:OrgId": {
      "name": "OrgId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Connection:Influx2ConnectionDetails": {
      "name": "Influx2ConnectionDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "host",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "port",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "A map of header name to value",
            "key": "headers",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "id",
                "value": "type_Connection:HeaderValue"
              }
            }
          },
          {
            "key": "org",
            "valueType": {
              "type": "id",
              "value": "type_Connection:OrgId"
            }
          },
          {
            "description": "Secret Rid of token secret stored in Secrets Service.",
            "key": "tokenSecretRid",
            "valueType": {
              "type": "id",
              "value": "type_Connection:SecretRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:Duration": {
      "name": "Duration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "unit",
            "valueType": {
              "type": "id",
              "value": "type_Connection:TemporalUnit"
            }
          },
          {
            "key": "count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:TemporalUnit": {
      "name": "TemporalUnit",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "HOURS"
          },
          {
            "value": "DAYS"
          },
          {
            "value": "WEEKS"
          }
        ]
      }
    },
    "type_Connection:LimitsConfig": {
      "name": "LimitsConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "maxQueryRange",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Connection:Duration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:Influx1ConnectionDetails": {
      "name": "Influx1ConnectionDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "host",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "port",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "A map of header name to value",
            "key": "headers",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "id",
                "value": "type_Connection:HeaderValue"
              }
            }
          },
          {
            "key": "credentials",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Connection:PasswordCredentials"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:PasswordCredentials": {
      "name": "PasswordCredentials",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "username",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Secret Rid of password secret stored in Secrets Service.",
            "key": "passwordSecretRid",
            "valueType": {
              "type": "id",
              "value": "type_Connection:SecretRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:TimestreamConnectionDetails": {
      "name": "TimestreamConnectionDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The role ARN owned by Nominal that has permission to assume the externalRoleArn.",
            "key": "nominalRoleArn",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "AWS region that contains the Nominal role.",
            "key": "nominalRoleRegion",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "AWS region that contains the Timestream instance.",
            "key": "externalRegion",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The role ARN used to make queries to Timestream. This role is owned by the AWS account that owns the Timestream instance.",
            "key": "externalRoleArn",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Database inside of the Timestream instance to connect to.",
            "key": "database",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:VisualCrossingConnectionDetails": {
      "name": "VisualCrossingConnectionDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Secret Rid of API key stored in Secrets Service.",
            "key": "apiKeySecretRid",
            "valueType": {
              "type": "id",
              "value": "type_Connection:SecretRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:ConnectionPlottingConfiguration": {
      "name": "ConnectionPlottingConfiguration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The maximum number of points to return per page for undecimated queries",
            "key": "maxUndecimatedPointsPerPage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The maximum range (in nanoseconds) for unbounded queries",
            "key": "maxUnboundedRange",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "The maximum number of page reads per second for undecimated queries",
            "key": "maxUndecimatedPageReadsPerSecond",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The maximum number of permits per second for queries",
            "key": "maxPermitsPerSecond",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The maximum number of connections to the database",
            "key": "maxConnections",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:OrganizationRid": {
      "name": "OrganizationRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Connection:CreateConnection": {
      "name": "CreateConnection",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "connectionDetails",
            "valueType": {
              "type": "id",
              "value": "type_Connection:ConnectionDetails"
            }
          },
          {
            "description": "Metadata information about the connection which is not relevant to the DB connection itself.",
            "key": "metadata",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Additional tag name that are required to construct a fully qualified series.",
            "key": "requiredTagNames",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_global:TagName"
              }
            }
          },
          {
            "key": "availableTagValues",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_global:TagValue"
                }
              }
            }
          },
          {
            "key": "scraping",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Connection:ScrapingConfig"
              }
            }
          },
          {
            "key": "shouldScrape",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "limits",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Connection:LimitsConfig"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:UpdateConnectionRequest": {
      "name": "UpdateConnectionRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "connectionDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Connection:ConnectionDetails"
              }
            }
          },
          {
            "key": "requiredTagNames",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_global:TagName"
                }
              }
            }
          },
          {
            "key": "availableTagValues",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_global:TagName"
                },
                "valueType": {
                  "type": "set",
                  "itemType": {
                    "type": "id",
                    "value": "type_global:TagValue"
                  }
                }
              }
            }
          },
          {
            "key": "scraping",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Connection:ScrapingConfig"
              }
            }
          },
          {
            "key": "shouldScrape",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "limits",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Connection:LimitsConfig"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:NominalDataSourceRid": {
      "name": "NominalDataSourceRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Connection:NominalConnectionDetails": {
      "name": "NominalConnectionDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "nominalDataSourceRid",
            "valueType": {
              "type": "id",
              "value": "type_Connection:NominalDataSourceRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Connection:PopulateSeriesRequest": {
      "name": "PopulateSeriesRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "startTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          },
          {
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:ConnectionRid": {
      "name": "ConnectionRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_ConnectionBootstrapper:ScrapingConfig": {
      "name": "ScrapingConfig",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "influx",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "influx",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:InfluxScrapingConfig"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "nominal",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "nominal",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:NominalScrapingConfig"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestream",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestream",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:TimestreamScrapingConfig"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timescale",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timescale",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:PivotedTimescaleScrapingConfig"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "visualCrossing",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "visualCrossing",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:VisualCrossingScrapingConfig"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ConnectionBootstrapper:InfluxScrapingConfig": {
      "name": "InfluxScrapingConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Filters are ANDed together",
            "key": "filter",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:InfluxScrapingFilter"
              }
            }
          },
          {
            "key": "seriesArchetypeConstruction",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:InfluxSeriesArchetypeConstructionConfig"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:NominalScrapingConfig": {
      "name": "NominalScrapingConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "channelNameComponents will be combined, together with separator, to form\na fully qualified channel name.",
            "key": "channelNameComponents",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:NominalChannelNameComponent"
              }
            }
          },
          {
            "key": "separator",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:VisualCrossingScrapingConfig": {
      "name": "VisualCrossingScrapingConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "list of available channels",
            "key": "availableSeries",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:VisualCrossingAvailableSeries"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:Channel": {
      "name": "Channel",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_ConnectionBootstrapper:Unit": {
      "name": "Unit",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_ConnectionBootstrapper:VisualCrossingType": {
      "name": "VisualCrossingType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "DOUBLE"
          },
          {
            "value": "STRING"
          }
        ]
      }
    },
    "type_ConnectionBootstrapper:VisualCrossingAvailableSeries": {
      "name": "VisualCrossingAvailableSeries",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "channel",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:Channel"
            }
          },
          {
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:Unit"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:VisualCrossingType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:TimestreamScrapingConfig": {
      "name": "TimestreamScrapingConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "In order for data to be picked up by the scraper, it must match all\nfilters in this list.",
            "key": "filter",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:TimestreamScrapingFilter"
              }
            }
          },
          {
            "description": "channelNameComponents will be combined, together with separator, to form\na fully qualified channel name.",
            "key": "channelNameComponents",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:TimestreamChannelNameComponent"
              }
            }
          },
          {
            "key": "separator",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The maximum time in hours to look back over series data to find unique measure and tag combinations.\nIf not specified, the default look back period will be used.",
            "key": "maxLookBackPeriodHours",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:PivotedTimescaleScrapingConfig": {
      "name": "PivotedTimescaleScrapingConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "In order for data to be picked up by the scraper, it must match all\nfilters in this list. To exclude chunks of data, it's possible to use\na not filter.",
            "key": "filter",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:TimescaleScrapingFilter"
              }
            }
          },
          {
            "description": "The name of the column that holds the timestamp.",
            "key": "timeColumn",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:ColumnName"
            }
          },
          {
            "description": "The name of the column that holds the series name.",
            "key": "nameColumn",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:ColumnName"
            }
          },
          {
            "description": "The name of the column that holds the series values.",
            "key": "valueColumn",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:ColumnName"
            }
          },
          {
            "description": "The names of the columns that comprise a dimension. They should have a database index for efficient filtering. We do not discover\ndimensions based on hypertable schema because they are not necessarily configured properly.",
            "key": "dimensionColumns",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:ColumnName"
              }
            }
          },
          {
            "description": "channelNameComponents will be combined, together with separator, to form\na fully qualified channel name.",
            "key": "channelNameComponents",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:PivotedTimescaleChannelNameComponent"
              }
            }
          },
          {
            "key": "separator",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:TableName": {
      "name": "TableName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_ConnectionBootstrapper:SchemaName": {
      "name": "SchemaName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_ConnectionBootstrapper:LocationName": {
      "name": "LocationName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_ConnectionBootstrapper:TimestreamScrapingFilter": {
      "name": "TimestreamScrapingFilter",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "description": "Match any of the specified tables in the database.\n",
            "discriminantValue": "matchTable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "matchTable",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_ConnectionBootstrapper:TableName"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ConnectionBootstrapper:TimescaleScrapingFilter": {
      "name": "TimescaleScrapingFilter",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "not",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "not",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:TimescaleScrapingFilter"
                  }
                }
              ]
            }
          },
          {
            "description": "Match any of the specified tables in the database.\n",
            "discriminantValue": "matchTable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "matchTable",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_ConnectionBootstrapper:TableName"
                    }
                  }
                }
              ]
            }
          },
          {
            "description": "Match any of the specified schemas in the database.\n",
            "discriminantValue": "matchSchema",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "matchSchema",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_ConnectionBootstrapper:SchemaName"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ConnectionBootstrapper:TimestreamChannelNameComponent": {
      "name": "TimestreamChannelNameComponent",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "table",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "table",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:Empty"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "measure",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "measure",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:Empty"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "attribute",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "attribute",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:Empty"
                  }
                }
              ]
            }
          },
          {
            "description": "The value of the specified TagName will be used. If the tag is not present, it will be omitted.",
            "discriminantValue": "valueOfTagWithName",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "valueOfTagWithName",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:TagName"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ConnectionBootstrapper:NominalChannelNameComponent": {
      "name": "NominalChannelNameComponent",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "channel",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "channel",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:Empty"
                  }
                }
              ]
            }
          },
          {
            "description": "The value of the specified TagName will be used. If the tag is not present, it will be omitted.",
            "discriminantValue": "valueOfTagWithName",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "valueOfTagWithName",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:TagName"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ConnectionBootstrapper:ColumnName": {
      "name": "ColumnName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_ConnectionBootstrapper:PivotedTimescaleChannelNameComponent": {
      "name": "PivotedTimescaleChannelNameComponent",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "table",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "table",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:Empty"
                  }
                }
              ]
            }
          },
          {
            "description": "The value of the name column.",
            "discriminantValue": "name",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:Empty"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ConnectionBootstrapper:InfluxSeriesArchetypeConstructionConfig": {
      "name": "InfluxSeriesArchetypeConstructionConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "channelNameComponents",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:InfluxChannelNameComponent"
              }
            }
          },
          {
            "key": "separator",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:Empty": {
      "name": "Empty",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:InfluxChannelNameComponent": {
      "name": "InfluxChannelNameComponent",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "bucket",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "bucket",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:Empty"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "measurement",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "measurement",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:Empty"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "field",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "field",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:Empty"
                  }
                }
              ]
            }
          },
          {
            "description": "The value for the specified TagName will be used. If the tag is not present, it will be omitted.",
            "discriminantValue": "tagValue",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "tagValue",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:TagName"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ConnectionBootstrapper:BucketName": {
      "name": "BucketName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_ConnectionBootstrapper:MeasurementName": {
      "name": "MeasurementName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_ConnectionBootstrapper:InfluxScrapingFilter": {
      "name": "InfluxScrapingFilter",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "not",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "not",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:InfluxScrapingFilter"
                  }
                }
              ]
            }
          },
          {
            "description": "Match any of the specified buckets",
            "discriminantValue": "matchBucket",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "matchBucket",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_ConnectionBootstrapper:BucketName"
                    }
                  }
                }
              ]
            }
          },
          {
            "description": "Match any of the specified measurements",
            "discriminantValue": "matchMeasurement",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "matchMeasurement",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_ConnectionBootstrapper:MeasurementName"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ConnectionBootstrapper:Connection": {
      "name": "Connection",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:ConnectionRid"
            }
          },
          {
            "description": "The display name of the connection. For example: \"Nominal production TimescaleDB\"",
            "key": "displayName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "connectionDetails",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:ConnectionDetails"
            }
          },
          {
            "description": "Additional tag names that should be supplied to construct a fully qualified series. These are suggested,\nrather than strictly required.",
            "key": "requiredTagNames",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_global:TagName"
              }
            }
          },
          {
            "key": "availableTagValues",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_global:TagValue"
                }
              }
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "",
            "key": "scraping",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:ScrapingConfig"
              }
            }
          },
          {
            "description": "The connection will be scraped iff this flag is set and scrapingConfig is present.",
            "key": "shouldScrape",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "limits",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:LimitsConfig"
              }
            }
          },
          {
            "key": "connectionStatus",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:ConnectionStatus"
            }
          },
          {
            "key": "isArchived",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:ConnectionDetails": {
      "name": "ConnectionDetails",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "timescale",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timescale",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:TimescaleConnectionDetails"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "influx",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "influx",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:Influx2ConnectionDetails"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "influx1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "influx1",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:Influx1ConnectionDetails"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "nominal",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "nominal",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:NominalConnectionDetails"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestream",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestream",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:TimestreamConnectionDetails"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "visualCrossing",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "visualCrossing",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:VisualCrossingConnectionDetails"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ConnectionBootstrapper:ConnectionStatus": {
      "name": "ConnectionStatus",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isConnected",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:TimescaleConnectionDetails": {
      "name": "TimescaleConnectionDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "database",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "host",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "port",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "This is also the reference to the secret containing the password",
            "key": "username",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Secret Rid of password secret stored in Secrets Service.",
            "key": "passwordSecretRid",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:SecretRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:SecretName": {
      "name": "SecretName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_ConnectionBootstrapper:SecretRid": {
      "name": "SecretRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_ConnectionBootstrapper:HeaderValue": {
      "name": "HeaderValue",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "plain",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "plain",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "secretRid",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "secretRid",
                  "valueType": {
                    "type": "id",
                    "value": "type_ConnectionBootstrapper:SecretRid"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ConnectionBootstrapper:OrgId": {
      "name": "OrgId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_ConnectionBootstrapper:Influx2ConnectionDetails": {
      "name": "Influx2ConnectionDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "host",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "port",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "A map of header name to value",
            "key": "headers",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:HeaderValue"
              }
            }
          },
          {
            "key": "org",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:OrgId"
            }
          },
          {
            "description": "Secret Rid of token secret stored in Secrets Service.",
            "key": "tokenSecretRid",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:SecretRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:Duration": {
      "name": "Duration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "unit",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:TemporalUnit"
            }
          },
          {
            "key": "count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:TemporalUnit": {
      "name": "TemporalUnit",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "HOURS"
          },
          {
            "value": "DAYS"
          },
          {
            "value": "WEEKS"
          }
        ]
      }
    },
    "type_ConnectionBootstrapper:LimitsConfig": {
      "name": "LimitsConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "maxQueryRange",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:Duration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:Influx1ConnectionDetails": {
      "name": "Influx1ConnectionDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "host",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "port",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "A map of header name to value",
            "key": "headers",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:HeaderValue"
              }
            }
          },
          {
            "key": "credentials",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:PasswordCredentials"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:PasswordCredentials": {
      "name": "PasswordCredentials",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "username",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Secret Rid of password secret stored in Secrets Service.",
            "key": "passwordSecretRid",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:SecretRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:TimestreamConnectionDetails": {
      "name": "TimestreamConnectionDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The role ARN owned by Nominal that has permission to assume the externalRoleArn.",
            "key": "nominalRoleArn",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "AWS region that contains the Nominal role.",
            "key": "nominalRoleRegion",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "AWS region that contains the Timestream instance.",
            "key": "externalRegion",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The role ARN used to make queries to Timestream. This role is owned by the AWS account that owns the Timestream instance.",
            "key": "externalRoleArn",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Database inside of the Timestream instance to connect to.",
            "key": "database",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:VisualCrossingConnectionDetails": {
      "name": "VisualCrossingConnectionDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Secret Rid of API key stored in Secrets Service.",
            "key": "apiKeySecretRid",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:SecretRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:ConnectionPlottingConfiguration": {
      "name": "ConnectionPlottingConfiguration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The maximum number of points to return per page for undecimated queries",
            "key": "maxUndecimatedPointsPerPage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The maximum range (in nanoseconds) for unbounded queries",
            "key": "maxUnboundedRange",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "The maximum number of page reads per second for undecimated queries",
            "key": "maxUndecimatedPageReadsPerSecond",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The maximum number of permits per second for queries",
            "key": "maxPermitsPerSecond",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The maximum number of connections to the database",
            "key": "maxConnections",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:OrganizationRid": {
      "name": "OrganizationRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_ConnectionBootstrapper:CreateConnection": {
      "name": "CreateConnection",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "connectionDetails",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:ConnectionDetails"
            }
          },
          {
            "description": "Metadata information about the connection which is not relevant to the DB connection itself.",
            "key": "metadata",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Additional tag name that are required to construct a fully qualified series.",
            "key": "requiredTagNames",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_global:TagName"
              }
            }
          },
          {
            "key": "availableTagValues",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_global:TagValue"
                }
              }
            }
          },
          {
            "key": "scraping",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:ScrapingConfig"
              }
            }
          },
          {
            "key": "shouldScrape",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "limits",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:LimitsConfig"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:UpdateConnectionRequest": {
      "name": "UpdateConnectionRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "connectionDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:ConnectionDetails"
              }
            }
          },
          {
            "key": "requiredTagNames",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_global:TagName"
                }
              }
            }
          },
          {
            "key": "availableTagValues",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_global:TagName"
                },
                "valueType": {
                  "type": "set",
                  "itemType": {
                    "type": "id",
                    "value": "type_global:TagValue"
                  }
                }
              }
            }
          },
          {
            "key": "scraping",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:ScrapingConfig"
              }
            }
          },
          {
            "key": "shouldScrape",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "limits",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:LimitsConfig"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:NominalDataSourceRid": {
      "name": "NominalDataSourceRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_ConnectionBootstrapper:NominalConnectionDetails": {
      "name": "NominalConnectionDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "nominalDataSourceRid",
            "valueType": {
              "type": "id",
              "value": "type_ConnectionBootstrapper:NominalDataSourceRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ConnectionBootstrapper:PopulateSeriesRequest": {
      "name": "PopulateSeriesRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "startTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          },
          {
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_CsvSplitter:SuccessResult": {
      "name": "SuccessResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_CsvSplitter:ErrorResult": {
      "name": "ErrorResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "errorType",
            "valueType": {
              "type": "id",
              "value": "type_CsvSplitter:ErrorType"
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_CsvSplitter:ErrorType": {
      "description": "Should be of the format Namespace:ErrorType",
      "name": "ErrorType",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_CsvSplitter:SplitCsvRequest": {
      "name": "SplitCsvRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "datasetRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "datasetFileId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "uuid"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_CsvSplitter:SplitCsvResponse": {
      "name": "SplitCsvResponse",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "success",
                  "valueType": {
                    "type": "id",
                    "value": "type_CsvSplitter:SuccessResult"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "failure",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "failure",
                  "valueType": {
                    "type": "id",
                    "value": "type_CsvSplitter:ErrorResult"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_CsvSplitter:SplitCsvAsyncResponse": {
      "name": "SplitCsvAsyncResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataExport:CompressionFormat": {
      "name": "CompressionFormat",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "GZIP"
          },
          {
            "value": "ZIP"
          }
        ]
      }
    },
    "type_DataExport:Csv": {
      "name": "Csv",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataExport:ExportFormat": {
      "name": "ExportFormat",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "csv",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "csv",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataExport:Csv"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataExport:UndecimatedResolution": {
      "name": "UndecimatedResolution",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataExport:ResolutionOption": {
      "name": "ResolutionOption",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "nanoseconds",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "nanoseconds",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long",
                      "default": 0
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "undecimated",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "undecimated",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataExport:UndecimatedResolution"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataExport:Iso8601TimestampFormat": {
      "name": "Iso8601TimestampFormat",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataExport:RelativeTimestampFormat": {
      "name": "RelativeTimestampFormat",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "relativeTo",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "timeUnit",
            "valueType": {
              "type": "id",
              "value": "type_global:TimeUnit"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataExport:TimestampFormat": {
      "name": "TimestampFormat",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "iso8601",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "iso8601",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataExport:Iso8601TimestampFormat"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "relative",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "relative",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataExport:RelativeTimestampFormat"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataExport:NoneStrategy": {
      "name": "NoneStrategy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataExport:AllTimestampsForwardFillStrategy": {
      "name": "AllTimestampsForwardFillStrategy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "lookBackPeriod",
            "valueType": {
              "type": "id",
              "value": "type_common:Duration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataExport:MergeTimestampStrategy": {
      "name": "MergeTimestampStrategy",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "none",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "none",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataExport:NoneStrategy"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "allTimestampsForwardFill",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "allTimestampsForwardFill",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataExport:AllTimestampsForwardFillStrategy"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataExport:TimeDomainChannel": {
      "name": "TimeDomainChannel",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "columnName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "computeNode",
            "valueType": {
              "type": "id",
              "value": "type_Compute:SeriesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataExport:ExportTimeDomainChannels": {
      "name": "ExportTimeDomainChannels",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "outputTimestampFormat",
            "valueType": {
              "type": "id",
              "value": "type_DataExport:TimestampFormat"
            }
          },
          {
            "key": "mergeTimestampStrategy",
            "valueType": {
              "type": "id",
              "value": "type_DataExport:MergeTimestampStrategy"
            }
          },
          {
            "key": "channels",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_DataExport:TimeDomainChannel"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataExport:ExportChannels": {
      "name": "ExportChannels",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "timeDomain",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeDomain",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataExport:ExportTimeDomainChannels"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataExport:ExportDataRequest": {
      "name": "ExportDataRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "format",
            "valueType": {
              "type": "id",
              "value": "type_DataExport:ExportFormat"
            }
          },
          {
            "key": "compression",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_DataExport:CompressionFormat"
              }
            }
          },
          {
            "key": "startTime",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "endTime",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "resolution",
            "valueType": {
              "type": "id",
              "value": "type_DataExport:ResolutionOption"
            }
          },
          {
            "key": "channels",
            "valueType": {
              "type": "id",
              "value": "type_DataExport:ExportChannels"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "type_Compute:Context"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:DataReviewRid": {
      "name": "DataReviewRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_DataReview:CheckAlertRid": {
      "name": "CheckAlertRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_DataReview:ManualCheckEvaluationRid": {
      "name": "ManualCheckEvaluationRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_DataReview:AutomaticCheckEvaluationRid": {
      "name": "AutomaticCheckEvaluationRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_DataReview:BatchInitiateDataReviewRequest": {
      "name": "BatchInitiateDataReviewRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "requests",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:CreateDataReviewRequest"
              }
            }
          },
          {
            "description": "If provided, checklist violations will be sent to the specified integrations.",
            "key": "notificationConfigurations",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Integrations:NotificationConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:BatchInitiateDataReviewResponse": {
      "name": "BatchInitiateDataReviewResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rids",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:DataReviewRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:CreateDataReviewRequest": {
      "name": "CreateDataReviewRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "runRid",
            "valueType": {
              "type": "id",
              "value": "type_common:RunRid"
            }
          },
          {
            "key": "checklistRid",
            "valueType": {
              "type": "id",
              "value": "type_common:ChecklistRid"
            }
          },
          {
            "key": "commit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_InternalVersioning:CommitId"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:FindDataReviewsRequest": {
      "name": "FindDataReviewsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "runRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:RunRid"
              }
            }
          },
          {
            "key": "checklistRefs",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:ChecklistRef"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          },
          {
            "description": "Defaults to 1000. Will throw if larger than 1000.",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Defaults to false if not specified.",
            "key": "showArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:DataReviewPage": {
      "name": "DataReviewPage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "dataReviews",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:DataReview"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:RerunFailedAutomaticChecksRequest": {
      "name": "RerunFailedAutomaticChecksRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "dataReviewRid",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:DataReviewRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:DataReview": {
      "name": "DataReview",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:DataReviewRid"
            }
          },
          {
            "key": "runRid",
            "valueType": {
              "type": "id",
              "value": "type_common:RunRid"
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "createdBy",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "checklist",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:ChecklistEvaluation"
            }
          },
          {
            "key": "archived",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:ChecklistEvaluation": {
      "name": "ChecklistEvaluation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "checklist",
            "valueType": {
              "type": "id",
              "value": "type_Checklist:PinnedChecklistRef"
            }
          },
          {
            "key": "dataReviewRid",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:DataReviewRid"
            }
          },
          {
            "key": "checks",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:CheckEvaluation"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:CheckEvaluation": {
      "name": "CheckEvaluation",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "automaticCheck",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "automaticCheck",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:AutomaticCheckEvaluation"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "manualCheck",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "manualCheck",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:ManualCheckEvaluation"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataReview:AutomaticCheckEvaluation": {
      "name": "AutomaticCheckEvaluation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:AutomaticCheckEvaluationRid"
            }
          },
          {
            "key": "checkRid",
            "valueType": {
              "type": "id",
              "value": "type_common:CheckRid"
            }
          },
          {
            "description": "Checks can define a single range computation which can evaluate over multiple implementations of a context.\nThe check implementation index will correspond to the implementation index of the check condition.",
            "key": "checkImplementationIndex",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "dataReviewRid",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:DataReviewRid"
            }
          },
          {
            "key": "state",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:AutomaticCheckEvaluationState"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:ManualCheckEvaluation": {
      "name": "ManualCheckEvaluation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:ManualCheckEvaluationRid"
            }
          },
          {
            "key": "checkRid",
            "valueType": {
              "type": "id",
              "value": "type_common:CheckRid"
            }
          },
          {
            "key": "dataReviewRid",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:DataReviewRid"
            }
          },
          {
            "key": "state",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:ManualCheckEvaluationState"
            }
          },
          {
            "key": "assigneeRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:UserRid"
              }
            }
          },
          {
            "key": "chart",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:VersionedVizId"
              }
            }
          },
          {
            "key": "notes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "notebook",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:NotebookRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:AutomaticCheckEvaluationState": {
      "name": "AutomaticCheckEvaluationState",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "pendingExecution",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "pendingExecution",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:PendingExecutionState"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "failedToExecute",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "failedToExecute",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:FailedToExecuteState"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "passing",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "passing",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:PassingExecutionState"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "generatedAlerts",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "generatedAlerts",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:GeneratedAlertsState"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "tooManyAlerts",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "tooManyAlerts",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:TooManyAlertsState"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "executing",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "executing",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:ExecutingState"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataReview:PendingExecutionState": {
      "name": "PendingExecutionState",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "jobRid",
            "valueType": {
              "type": "id",
              "value": "type_common:JobRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:FailedToExecuteState": {
      "name": "FailedToExecuteState",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "jobRid",
            "valueType": {
              "type": "id",
              "value": "type_common:JobRid"
            }
          },
          {
            "key": "reviewState",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:CheckAlertState"
              }
            }
          },
          {
            "key": "reviewNotes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "assigneeRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:UserRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:PassingExecutionState": {
      "name": "PassingExecutionState",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:GeneratedAlertsState": {
      "name": "GeneratedAlertsState",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:CheckAlertRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:TooManyAlertsState": {
      "name": "TooManyAlertsState",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:ExecutingState": {
      "name": "ExecutingState",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "jobRid",
            "valueType": {
              "type": "id",
              "value": "type_common:JobRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:ManualCheckEvaluationState": {
      "name": "ManualCheckEvaluationState",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "pendingReview",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "pendingReview",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:PendingReviewState"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "closedWithFurtherAction",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "closedWithFurtherAction",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:ClosedWithFurtherActionState"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "passing",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "passing",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:PassState"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataReview:PendingReviewState": {
      "name": "PendingReviewState",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:PassState": {
      "name": "PassState",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "comment",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "closedBy",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:ClosedWithFurtherActionState": {
      "name": "ClosedWithFurtherActionState",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "comment",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "closedBy",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:BatchManualCheckEvaluationActionRequest": {
      "name": "BatchManualCheckEvaluationActionRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "checkAlertAction",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:ManualCheckAlertAction"
            }
          },
          {
            "key": "checkEvaluationRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:ManualCheckEvaluationRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:CheckAlert": {
      "name": "CheckAlert",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:CheckAlertRid"
            }
          },
          {
            "key": "checkRid",
            "valueType": {
              "type": "id",
              "value": "type_common:CheckRid"
            }
          },
          {
            "key": "implementationIndex",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "dataReviewRid",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:DataReviewRid"
            }
          },
          {
            "key": "checkEvaluationRid",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:AutomaticCheckEvaluationRid"
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "autogeneratedCheckTitle",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "autogeneratedCheckDescription",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "assigneeRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:UserRid"
              }
            }
          },
          {
            "key": "start",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "end",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "state",
            "valueType": {
              "type": "id",
              "value": "type_common:CheckAlertState"
            }
          },
          {
            "key": "priority",
            "valueType": {
              "type": "id",
              "value": "type_Checklist:Priority"
            }
          },
          {
            "key": "chart",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:VersionedVizId"
              }
            }
          },
          {
            "key": "notes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "notebook",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:NotebookRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:AutomaticCheckEvaluationAction": {
      "name": "AutomaticCheckEvaluationAction",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "executionFinished",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "executionFinished",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:AutomaticCheckExecutionFinished"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "executionFailedToRun",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "executionFailedToRun",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:AutomaticCheckExecutionFailedToRun"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "executionRetriggered",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "executionRetriggered",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:ExecutionRetriggered"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "executionStarted",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "executionStarted",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:AutomaticCheckExecutionStarted"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataReview:AutomaticCheckExecutionFinished": {
      "name": "AutomaticCheckExecutionFinished",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "jobRid",
            "valueType": {
              "type": "id",
              "value": "type_common:JobRid"
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:Status"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:AutomaticCheckExecutionFailedToRun": {
      "name": "AutomaticCheckExecutionFailedToRun",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "jobRid",
            "valueType": {
              "type": "id",
              "value": "type_common:JobRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:Status": {
      "name": "Status",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PASS"
          },
          {
            "value": "FAIL"
          }
        ]
      }
    },
    "type_DataReview:ExecutionRetriggered": {
      "name": "ExecutionRetriggered",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "jobRid",
            "valueType": {
              "type": "id",
              "value": "type_common:JobRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:AutomaticCheckExecutionStarted": {
      "name": "AutomaticCheckExecutionStarted",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "jobRid",
            "valueType": {
              "type": "id",
              "value": "type_common:JobRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:Pass": {
      "name": "Pass",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "comment",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:ReopenAllLinkedAlerts": {
      "name": "ReopenAllLinkedAlerts",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:ReopenAndDetachFromNotebook": {
      "name": "ReopenAndDetachFromNotebook",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:ReopenAndDuplicatePreviouslyLinkedNotebook": {
      "name": "ReopenAndDuplicatePreviouslyLinkedNotebook",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:ReopenStrategy": {
      "name": "ReopenStrategy",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "reopenAllLinkedAlerts",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "reopenAllLinkedAlerts",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:ReopenAllLinkedAlerts"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "reopenAndDetachFromNotebook",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "reopenAndDetachFromNotebook",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:ReopenAndDetachFromNotebook"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "reopenAndDuplicatePreviouslyLinkedNotebook",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "reopenAndDuplicatePreviouslyLinkedNotebook",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:ReopenAndDuplicatePreviouslyLinkedNotebook"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataReview:Reopen": {
      "name": "Reopen",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "comment",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Defines the strategy for reopening the alert and any alerts linked via an associated notebook. If not\nprovided, the default strategy is reopenAllLinkedAlerts.",
            "key": "strategy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:ReopenStrategy"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:Reassign": {
      "name": "Reassign",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "assigneeRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:UserRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:BatchCheckAlertActionRequest": {
      "name": "BatchCheckAlertActionRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "checkAlertAction",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:CheckAlertAction"
            }
          },
          {
            "key": "checkAlertRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:CheckAlertRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:BatchCheckAlertActionResponse": {
      "name": "BatchCheckAlertActionResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "checkAlerts",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:CheckAlert"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:BatchAutomaticCheckEvaluationActionRequest": {
      "name": "BatchAutomaticCheckEvaluationActionRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "checkEvaluationAction",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:AutomaticCheckEvaluationReviewAction"
            }
          },
          {
            "key": "checkEvaluationRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:AutomaticCheckEvaluationRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:BatchAutomaticCheckEvaluationActionResponse": {
      "name": "BatchAutomaticCheckEvaluationActionResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "checkEvaluations",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:AutomaticCheckEvaluation"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:ManualCheckAlertAction": {
      "name": "ManualCheckAlertAction",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "pass",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "pass",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:Pass"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "closeWithFurtherAction",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "closeWithFurtherAction",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:CloseWithFurtherAction"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "reopen",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "reopen",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:Reopen"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "reassign",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "reassign",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:Reassign"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "updateNotes",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "updateNotes",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:UpdateNotes"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "linkNotebook",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "linkNotebook",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:LinkNotebook"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataReview:CheckAlertAction": {
      "name": "CheckAlertAction",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "closeWithIgnore",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "closeWithIgnore",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:CloseWithIgnoreAlert"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "closeWithFurtherAction",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "closeWithFurtherAction",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:CloseWithFurtherAction"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "reopen",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "reopen",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:Reopen"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "reassign",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "reassign",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:Reassign"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "updateNotes",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "updateNotes",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:UpdateNotes"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "linkNotebook",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "linkNotebook",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:LinkNotebook"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "unlinkNotebook",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "unlinkNotebook",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:UnlinkNotebook"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataReview:AutomaticCheckEvaluationReviewAction": {
      "name": "AutomaticCheckEvaluationReviewAction",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "closeWithIgnore",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "closeWithIgnore",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:CloseWithIgnoreAlert"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "closeWithFurtherAction",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "closeWithFurtherAction",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:CloseWithFurtherAction"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "reopen",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "reopen",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:Reopen"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "reassign",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "reassign",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:Reassign"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "updateNotes",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "updateNotes",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:UpdateNotes"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataReview:CloseAllLinkedAlerts": {
      "name": "CloseAllLinkedAlerts",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:CloseAndDetachFromNotebook": {
      "name": "CloseAndDetachFromNotebook",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:CloseAndDuplicatePreviouslyLinkedNotebook": {
      "name": "CloseAndDuplicatePreviouslyLinkedNotebook",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:CloseStrategy": {
      "name": "CloseStrategy",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "closeAllLinkedAlerts",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "closeAllLinkedAlerts",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:CloseAllLinkedAlerts"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "closeAndDetachFromNotebook",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "closeAndDetachFromNotebook",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:CloseAndDetachFromNotebook"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "closeAndDuplicatePreviouslyLinkedNotebook",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "closeAndDuplicatePreviouslyLinkedNotebook",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:CloseAndDuplicatePreviouslyLinkedNotebook"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataReview:CloseWithIgnoreAlert": {
      "name": "CloseWithIgnoreAlert",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "comment",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Defines the strategy for closing the alert and any alerts linked via an associated notebook. If not\nprovided, the default strategy is closeAllLinkedAlerts.",
            "key": "strategy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:CloseStrategy"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:CloseWithFurtherAction": {
      "name": "CloseWithFurtherAction",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "comment",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Defines the strategy for reopening the alert and any alerts linked via an associated notebook. If not\nprovided, the alert will be closed naively and throw if it leaves a linked notebook in an invalid state.",
            "key": "strategy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:CloseStrategy"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:UpdateNotes": {
      "name": "UpdateNotes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "notes",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:LinkNotebookStrategy": {
      "name": "LinkNotebookStrategy",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "duplicateAndLinkToNewNotebook",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "duplicateAndLinkToNewNotebook",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:DuplicateAndLinkNotebook"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "closeAndLink",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "closeAndLink",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:CloseAndLinkToNotebook"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "reopenAndLink",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "reopenAndLink",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:ReopenAndLinkToNotebook"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataReview:DuplicateAndLinkNotebook": {
      "name": "DuplicateAndLinkNotebook",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:CloseAction": {
      "name": "CloseAction",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "closeWithIgnore",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "closeWithIgnore",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:CloseWithIgnoreAlert"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "closeWithFurtherAction",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "closeWithFurtherAction",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:CloseWithFurtherAction"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataReview:CloseAndLinkToNotebook": {
      "name": "CloseAndLinkToNotebook",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "closeAction",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:CloseAction"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:ReopenAndLinkToNotebook": {
      "name": "ReopenAndLinkToNotebook",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "comment",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:LinkNotebook": {
      "name": "LinkNotebook",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_common:NotebookRid"
            }
          },
          {
            "description": "Defines the strategy for reconciling the alert with any linked alerts via the associated notebook. If not\nprovided, the alert will be linked naively and throw if it leaves a linked notebook in an invalid state.",
            "key": "strategy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:LinkNotebookStrategy"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:UnlinkNotebook": {
      "name": "UnlinkNotebook",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:CheckAlertActionLog": {
      "name": "CheckAlertActionLog",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "entries",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:CheckAlertActionLogEntry"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:CheckAlertActionLogEntry": {
      "name": "CheckAlertActionLogEntry",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "performedBy",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "action",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:CheckAlertAction"
            }
          },
          {
            "key": "timestamp",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:AutomaticCheckEvaluationReviewActionLog": {
      "name": "AutomaticCheckEvaluationReviewActionLog",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "entries",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:AutomaticCheckEvaluationReviewActionLogEntry"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:AutomaticCheckEvaluationReviewActionLogEntry": {
      "name": "AutomaticCheckEvaluationReviewActionLogEntry",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "performedBy",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "action",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:AutomaticCheckEvaluationReviewAction"
            }
          },
          {
            "key": "timestamp",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:AutomaticCheckEvaluationActionLog": {
      "name": "AutomaticCheckEvaluationActionLog",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "entries",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:AutomaticCheckEvaluationActionLogEntry"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:AutomaticCheckEvaluationActionLogEntry": {
      "name": "AutomaticCheckEvaluationActionLogEntry",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "action",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:AutomaticCheckEvaluationAction"
            }
          },
          {
            "key": "timestamp",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:ManualCheckEvaluationActionLog": {
      "name": "ManualCheckEvaluationActionLog",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "entries",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:ManualCheckEvaluationActionLogEntry"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:ManualCheckEvaluationActionLogEntry": {
      "name": "ManualCheckEvaluationActionLogEntry",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "performedBy",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "action",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:ManualCheckAlertAction"
            }
          },
          {
            "key": "timestamp",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:SearchCheckAlertsSortOptions": {
      "name": "SearchCheckAlertsSortOptions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isDescending",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:SearchCheckAlertsSortField"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:SearchCheckAlertsSortField": {
      "name": "SearchCheckAlertsSortField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "CHECK_NAME"
          },
          {
            "value": "START"
          },
          {
            "value": "END"
          },
          {
            "value": "STATUS"
          },
          {
            "value": "PRIORITY"
          },
          {
            "value": "DURATION"
          }
        ]
      }
    },
    "type_DataReview:CheckAlertStatus": {
      "name": "CheckAlertStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PENDING_REVIEW"
          },
          {
            "value": "CLOSED_IGNORED"
          },
          {
            "value": "CLOSED_REQUIRES_FURTHER_ACTION"
          }
        ]
      }
    },
    "type_DataReview:CheckAlertsHistogramRequest": {
      "name": "CheckAlertsHistogramRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Defaults to 100. Throws if larger than 1_000.",
            "key": "numBins",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Matches on check name",
            "key": "searchText",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Represents the data points on the x-axis of a histogram.",
            "key": "distributionVariable",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:HistogramDistributionVariable"
            }
          },
          {
            "description": "The variable that divides the data into distinct groups for comparison within the histogram.",
            "key": "subGroupVariable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:HistogramSubGroupVariable"
              }
            }
          },
          {
            "description": "Filters to start times after this time, inclusive.",
            "key": "startTimeAfter",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "description": "Filters to start times before this time, exclusive.",
            "key": "startTimeBefore",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_DataReview:CheckAlertStatus"
                }
              }
            }
          },
          {
            "key": "checkRids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:CheckRid"
                }
              }
            }
          },
          {
            "key": "dataReviewRids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_DataReview:DataReviewRid"
                }
              }
            }
          },
          {
            "key": "assigneeRids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:UserRid"
                }
              }
            }
          },
          {
            "key": "priorities",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Checklist:Priority"
                }
              }
            }
          },
          {
            "key": "runRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:RunRid"
              }
            }
          },
          {
            "key": "pinnedChecklistRefs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Checklist:PinnedChecklistRef"
                }
              }
            }
          },
          {
            "key": "chartRids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:VersionedVizId"
                }
              }
            }
          },
          {
            "key": "notebookRids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:NotebookRid"
                }
              }
            }
          },
          {
            "description": "If not present, will not show archived data reviews in search results",
            "key": "showArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:HistogramDistributionVariable": {
      "name": "HistogramDistributionVariable",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "startTime",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "startTime",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:HistogramStartTimeVariable"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataReview:HistogramSubGroupVariable": {
      "name": "HistogramSubGroupVariable",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "priority",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "priority",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:HistogramPriorityVariable"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "status",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:HistogramStatusVariable"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataReview:HistogramStartTimeVariable": {
      "name": "HistogramStartTimeVariable",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:HistogramEndTimeVariable": {
      "name": "HistogramEndTimeVariable",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:HistogramStatusVariable": {
      "name": "HistogramStatusVariable",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:HistogramPriorityVariable": {
      "name": "HistogramPriorityVariable",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:CheckAlertsHistogramResponse": {
      "name": "CheckAlertsHistogramResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "buckets",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:CheckAlertsHistogramBuckets"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:CheckAlertsHistogramBuckets": {
      "name": "CheckAlertsHistogramBuckets",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "unstacked",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "unstacked",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:CheckAlertsUnstackedHistogram"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "priority",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "priority",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:CheckAlertsPriorityHistogram"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "status",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataReview:CheckAlertsStatusHistogram"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataReview:CheckAlertsUnstackedHistogram": {
      "name": "CheckAlertsUnstackedHistogram",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "buckets",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:HistogramBucket"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:HistogramBucket": {
      "name": "HistogramBucket",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "startInclusive",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "endExclusive",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:CheckAlertsPriorityHistogram": {
      "name": "CheckAlertsPriorityHistogram",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "buckets",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:HistogramPriorityBucket"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:CheckAlertsStatusHistogram": {
      "name": "CheckAlertsStatusHistogram",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "buckets",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:HistogramStatusBucket"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:HistogramPriorityBucket": {
      "name": "HistogramPriorityBucket",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "startInclusive",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "endExclusive",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "counts",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Checklist:Priority"
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:HistogramStatusBucket": {
      "name": "HistogramStatusBucket",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "startInclusive",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "endExclusive",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "counts",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_DataReview:CheckAlertStatus"
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:SearchCheckAlertsRequest": {
      "name": "SearchCheckAlertsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          },
          {
            "description": "Defaults to 100. Will throw if larger than 1_000.",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "If not present, will sort by start time in descending order.",
            "key": "sortBy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:SearchCheckAlertsSortOptions"
              }
            }
          },
          {
            "description": "Matches on check name",
            "key": "searchText",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Filters to start times after this time, inclusive.",
            "key": "after",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "description": "Filters to start times before this time, exclusive.",
            "key": "before",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_DataReview:CheckAlertStatus"
                }
              }
            }
          },
          {
            "key": "checkRids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:CheckRid"
                }
              }
            }
          },
          {
            "key": "dataReviewRids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_DataReview:DataReviewRid"
                }
              }
            }
          },
          {
            "key": "assigneeRids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:UserRid"
                }
              }
            }
          },
          {
            "key": "priorities",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Checklist:Priority"
                }
              }
            }
          },
          {
            "key": "runRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:RunRid"
              }
            }
          },
          {
            "key": "pinnedChecklistRefs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Checklist:PinnedChecklistRef"
                }
              }
            }
          },
          {
            "key": "chartRids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:VersionedVizId"
                }
              }
            }
          },
          {
            "key": "notebookRids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:NotebookRid"
                }
              }
            }
          },
          {
            "description": "If not present, will not show archived data reviews in search results",
            "key": "showArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataReview:SearchCheckAlertsResponse": {
      "name": "SearchCheckAlertsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          },
          {
            "key": "checkAlerts",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_DataReview:CheckAlert"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataSource:DataSourceRid": {
      "name": "DataSourceRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_DataSource:DatasetRid": {
      "name": "DatasetRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_DataSource:Channel": {
      "name": "Channel",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_DataSource:Unit": {
      "name": "Unit",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "symbol",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataSource:SeriesDataType": {
      "name": "SeriesDataType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "DOUBLE"
          },
          {
            "value": "STRING"
          }
        ]
      }
    },
    "type_DataSource:LogicalSeriesRid": {
      "name": "LogicalSeriesRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_DataSource:SeriesArchetypeRid": {
      "name": "SeriesArchetypeRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_DataSource:ChannelMetadata": {
      "name": "ChannelMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_DataSource:Channel"
            }
          },
          {
            "key": "dataSource",
            "valueType": {
              "type": "id",
              "value": "type_DataSource:DataSourceRid"
            }
          },
          {
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_DataSource:Unit"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "dataType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_DataSource:SeriesDataType"
              }
            }
          },
          {
            "key": "seriesRid",
            "valueType": {
              "type": "id",
              "value": "type_DataSource:SeriesArchetypeRidOrLogicalSeriesRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataSource:SeriesArchetypeRidOrLogicalSeriesRid": {
      "name": "SeriesArchetypeRidOrLogicalSeriesRid",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "seriesArchetype",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "seriesArchetype",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataSource:SeriesArchetypeRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "logicalSeries",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "logicalSeries",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataSource:LogicalSeriesRid"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataSource:SearchChannelsRequest": {
      "name": "SearchChannelsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "fuzzySearchText",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "prefix",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Will return only channels that contain all strings specified as exact matches (case insensitive).",
            "key": "exactMatch",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "dataSources",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_DataSource:DataSourceRid"
              }
            }
          },
          {
            "description": "Data sources with the channels that were previously selected will be weighted more heavily. The previously\nselected channel names will also factor into the similarity score.",
            "key": "previouslySelectedChannels",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_DataSource:DataSourceRid"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_DataSource:Channel"
                }
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          },
          {
            "description": "Defaults to 1000. Will throw if larger than 1000.",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataSource:SearchChannelsResponse": {
      "name": "SearchChannelsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_DataSource:ChannelMetadata"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataSource:SearchFilteredChannelsRequest": {
      "name": "SearchFilteredChannelsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "fuzzySearchText",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Will return only channels that contain all strings specified as exact matches (case insensitive).",
            "key": "exactMatch",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "dataSources",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_DataSource:DataSourceRid"
              }
            }
          },
          {
            "description": "Data sources with the channels that were previously selected will be weighted more heavily. The previously\nselected channel names will also factor into the similarity score.",
            "key": "previouslySelectedChannels",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_DataSource:DataSourceRid"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_DataSource:Channel"
                }
              }
            }
          },
          {
            "description": "Defaults to 10000. Will throw if larger than 10000.",
            "key": "resultSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "If specified, search will only return channels containing a superset of the tags specified for the given datasource.",
            "key": "tags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_DataSource:DataSourceRid"
              },
              "valueType": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_global:TagName"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_global:TagValue"
                }
              }
            }
          },
          {
            "description": "If specified, search will only return channels that have had new data after the specified time.",
            "key": "minDataUpdatedTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Run:UtcTimestamp"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataSource:SearchFilteredChannelsResponse": {
      "name": "SearchFilteredChannelsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_DataSource:ChannelMetadata"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataSource:SearchHierarchicalChannelsRequest": {
      "name": "SearchHierarchicalChannelsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The parent (represented as a list of parts) to search under. If empty, will return all top-level channels.",
            "key": "parent",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "dataSources",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_DataSource:DataSourceRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataSource:SearchHierarchicalChannelsResponse": {
      "name": "SearchHierarchicalChannelsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_DataSource:ChannelOrPrefix"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataSource:ChannelOrPrefix": {
      "name": "ChannelOrPrefix",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "channel",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "channel",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataSource:ChannelMetadata"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "prefix",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "prefix",
                  "valueType": {
                    "type": "id",
                    "value": "type_DataSource:DataSourcePrefixNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_DataSource:DataSourcePrefixNode": {
      "name": "DataSourcePrefixNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Should be combined with the ancestor parts and the delimiter to form the full prefix.",
            "key": "part",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "dataSource",
            "valueType": {
              "type": "id",
              "value": "type_DataSource:DataSourceRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataSource:ChannelPrefixTree": {
      "name": "ChannelPrefixTree",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "roots",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_DataSource:ChannelPrefixTreeNode"
              }
            }
          },
          {
            "key": "delimiter",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataSource:IndexChannelPrefixTreeRequest": {
      "name": "IndexChannelPrefixTreeRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "dataSourceRid",
            "valueType": {
              "type": "id",
              "value": "type_DataSource:DataSourceRid"
            }
          },
          {
            "key": "delimiter",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataSource:ChannelPrefixTreeNode": {
      "name": "ChannelPrefixTreeNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Should be combined with the ancestor parts and the delimiter to form the full prefix.",
            "key": "part",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "children",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_DataSource:ChannelPrefixTreeNode"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataSource:BatchGetChannelPrefixTreeRequest": {
      "name": "BatchGetChannelPrefixTreeRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "dataSourceRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_DataSource:DataSourceRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_DataSource:BatchGetChannelPrefixTreeResponse": {
      "name": "BatchGetChannelPrefixTreeResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "channelPrefixTrees",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_DataSource:DataSourceRid"
              },
              "valueType": {
                "type": "id",
                "value": "type_DataSource:ChannelPrefixTree"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Event:EventType": {
      "name": "EventType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "INFO"
          },
          {
            "value": "FLAG"
          },
          {
            "value": "ERROR"
          },
          {
            "value": "SUCCESS"
          }
        ]
      }
    },
    "type_Event:GetEvents": {
      "name": "GetEvents",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "uuids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "uuid"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Event:Event": {
      "name": "Event",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "uuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "uuid"
              }
            }
          },
          {
            "key": "timestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "duration",
            "valueType": {
              "type": "id",
              "value": "type_common:Duration"
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "datasetRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_Event:EventType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Event:CreateEvent": {
      "name": "CreateEvent",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "associations",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "datasetRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "timestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "duration",
            "valueType": {
              "type": "id",
              "value": "type_common:Duration"
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Event:EventType"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:S3Path": {
      "name": "S3Path",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Ingest:DeprecatedTriggerIngest": {
      "name": "DeprecatedTriggerIngest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:IngestSource"
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "datasetName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "timestampMetadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:DeprecatedTimestampMetadata"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:TriggerIngest": {
      "name": "TriggerIngest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:IngestSource"
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Ingest:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Ingest:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:Label"
              }
            }
          },
          {
            "key": "datasetName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "datasetDescription",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "timestampMetadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:TimestampMetadata"
              }
            }
          },
          {
            "description": "If absent, will default to a channel config that constructs a prefix tree with `.` as the delimiter.",
            "key": "channelConfig",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:ChannelConfig"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:TriggerFileIngest": {
      "name": "TriggerFileIngest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:IngestSource"
            }
          },
          {
            "key": "sourceMetadata",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:IngestSourceMetadata"
            }
          },
          {
            "key": "destination",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:IngestDestination"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:SkipRowsConfig": {
      "name": "SkipRowsConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "headerRowIndex",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "dataStartRowIndex",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:ChannelConfig": {
      "name": "ChannelConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "If set, will construct a prefix tree for channels of the dataset using the given delimiter.",
            "key": "prefixTreeDelimiter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:IngestSource": {
      "name": "IngestSource",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "s3",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "s3",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:S3IngestSource"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Ingest:S3IngestSource": {
      "name": "S3IngestSource",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "path",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:IngestSourceMetadata": {
      "name": "IngestSourceMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timestampMetadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:TimestampMetadata"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:IngestDestination": {
      "name": "IngestDestination",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "newDataset",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "newDataset",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:NewDatasetIngestDestination"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "existingDataset",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "existingDataset",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:ExistingDatasetIngestDestination"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Ingest:NewDatasetIngestDestination": {
      "name": "NewDatasetIngestDestination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "datasetName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "datasetDescription",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Ingest:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Ingest:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:Label"
              }
            }
          },
          {
            "key": "channelConfig",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:ChannelConfig"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:ExistingDatasetIngestDestination": {
      "name": "ExistingDatasetIngestDestination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "datasetRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:DeprecatedTimestampMetadata": {
      "name": "DeprecatedTimestampMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "seriesName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "isAbsolute",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:TimestampMetadata": {
      "name": "TimestampMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "seriesName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "timestampType",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:TimestampType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:TimestampType": {
      "name": "TimestampType",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "relative",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "relative",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:RelativeTimestamp"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "absolute",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "absolute",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:AbsoluteTimestamp"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Ingest:RelativeTimestamp": {
      "name": "RelativeTimestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timeUnit",
            "valueType": {
              "type": "id",
              "value": "type_global:TimeUnit"
            }
          },
          {
            "description": "Starting timestamp to use when indexing the file. This field is required when uploading a new file to an existing dataset.",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:AbsoluteTimestamp": {
      "name": "AbsoluteTimestamp",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "iso8601",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "iso8601",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:Iso8601Timestamp"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "epochOfTimeUnit",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "epochOfTimeUnit",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:EpochTimestamp"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "customFormat",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "customFormat",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:CustomTimestamp"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Ingest:Iso8601Timestamp": {
      "name": "Iso8601Timestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:EpochTimestamp": {
      "name": "EpochTimestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timeUnit",
            "valueType": {
              "type": "id",
              "value": "type_global:TimeUnit"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:CustomTimestamp": {
      "name": "CustomTimestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The format string should be in the format of the `DateTimeFormatter` class in Java.",
            "key": "format",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Default year is accepted as an optional field for cases like IRIG time format and will be overridden by year in time format.",
            "key": "defaultYear",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:DatasetSpec": {
      "name": "DatasetSpec",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:TriggeredIngest": {
      "name": "TriggeredIngest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "datasetRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "datasetFileId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "uuid"
                }
              }
            }
          },
          {
            "key": "asyncHandle",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:AsyncHandle"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:ErrorResult": {
      "name": "ErrorResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "errorType",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:ErrorType"
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:ErrorType": {
      "description": "Should be of the format Namespace:ErrorType",
      "name": "ErrorType",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Ingest:SuccessResult": {
      "name": "SuccessResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:InProgressResult": {
      "name": "InProgressResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:IngestStatus": {
      "name": "IngestStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "IN_PROGRESS"
          },
          {
            "value": "COMPLETED"
          },
          {
            "value": "FAILED"
          }
        ]
      }
    },
    "type_Ingest:IngestStatusV2": {
      "name": "IngestStatusV2",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "success",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:SuccessResult"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:ErrorResult"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "inProgress",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "inProgress",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:InProgressResult"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Ingest:IngestProgressV2": {
      "name": "IngestProgressV2",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Timestamp at start of ingest",
            "key": "startTime",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "description": "Timestamp at end of ingest, empty if still in progress",
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          },
          {
            "description": "Status of ingest, contains error if failed",
            "key": "ingestStatus",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:IngestStatusV2"
            }
          },
          {
            "description": "Whether ingest duration can be reliably calculated",
            "key": "incalculable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:AsyncHandle": {
      "name": "AsyncHandle",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:InitiateMultipartUploadRequest": {
      "name": "InitiateMultipartUploadRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "filename",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "filetype",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:InitiateMultipartUploadResponse": {
      "name": "InitiateMultipartUploadResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "uploadId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:PartWithSize": {
      "name": "PartWithSize",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "partNumber",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "etag",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "size",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:SignPartResponse": {
      "name": "SignPartResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "headers",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:Part": {
      "name": "Part",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "partNumber",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "etag",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:CompleteMultipartUploadResponse": {
      "name": "CompleteMultipartUploadResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "location",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:DeprecatedNewCsv": {
      "name": "DeprecatedNewCsv",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:IngestSource"
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "timeColumnSpec",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:TimestampMetadata"
              }
            }
          },
          {
            "key": "channelConfig",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:ChannelConfig"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:DeprecatedNewDataSource": {
      "name": "DeprecatedNewDataSource",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "csv",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "csv",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:DeprecatedNewCsv"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Ingest:NewDataSource": {
      "name": "NewDataSource",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:IngestSource"
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Ingest:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Ingest:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:Label"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "timeColumnSpec",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:TimestampMetadata"
              }
            }
          },
          {
            "key": "channelConfig",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:ChannelConfig"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:DataSourceRid": {
      "name": "DataSourceRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Ingest:IngestDataSource": {
      "name": "IngestDataSource",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "existingDataSource",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "existingDataSource",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:DataSourceRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "newDataSource",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "newDataSource",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:DeprecatedNewDataSource"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "newDataSourceV2",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "newDataSourceV2",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:NewDataSource"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Ingest:TimeOffsetSpec": {
      "name": "TimeOffsetSpec",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "nanos",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "nanos",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Duration"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Ingest:UtcTimestamp": {
      "name": "UtcTimestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "secondsSinceEpoch",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "offsetNanoseconds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long",
                  "default": 0
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:PropertyName": {
      "name": "PropertyName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Ingest:PropertyValue": {
      "name": "PropertyValue",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Ingest:Label": {
      "name": "Label",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Ingest:DataSourceRefName": {
      "name": "DataSourceRefName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Ingest:IngestRunDataSource": {
      "name": "IngestRunDataSource",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "dataSource",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:IngestDataSource"
            }
          },
          {
            "key": "timeOffsetSpec",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:TimeOffsetSpec"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:IngestRunRequest": {
      "name": "IngestRunRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "If a run with the same rid already exists, the run will be updated.",
            "key": "rid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "startTime",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:UtcTimestamp"
            }
          },
          {
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:UtcTimestamp"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Ingest:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Ingest:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:Label"
              }
            }
          },
          {
            "description": "for example, SIM, HTL, FLT",
            "key": "runPrefix",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "dataSources",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Ingest:DataSourceRefName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Ingest:IngestRunDataSource"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:RunRid": {
      "name": "RunRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Ingest:IngestRunResponse": {
      "name": "IngestRunResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "runRid",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:RunRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:VideoTimestampManifest": {
      "name": "VideoTimestampManifest",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "noManifest",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "noManifest",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:NoTimestampManifest"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestampManifests",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestampManifests",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:TimestampManifest"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Ingest:NoTimestampManifest": {
      "name": "NoTimestampManifest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "startingTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:UtcTimestamp"
            }
          },
          {
            "description": "A field that specifies that the frame rate of the video does not match the frame rate of the camera | i.e. a slowed down or sped up video. Can specify either the camera frame rate or the absolute end time.",
            "key": "scaleParameter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:ScaleParameter"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:TimestampManifest": {
      "name": "TimestampManifest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "sources",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:IngestSource"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:ScaleParameter": {
      "name": "ScaleParameter",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "trueFrameRate",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "trueFrameRate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          },
          {
            "description": "the timestamp corresponding to absolute starting timestamp plus absolute duration of the video.",
            "discriminantValue": "endingTimestamp",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "endingTimestamp",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:UtcTimestamp"
                  }
                }
              ]
            }
          },
          {
            "description": "the scale factor can be used to calculate whether media duration differs from a video's | real duration, and if so, the true frame rate of the camera. The video time will thus be scaled | by the ratio of the real duration to media duration, or media frame rate to true frame rate.",
            "discriminantValue": "scaleFactor",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "scaleFactor",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Ingest:IngestVideoRequest": {
      "name": "IngestVideoRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "sources",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:IngestSource"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Ingest:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Ingest:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:Label"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "timestamps",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:VideoTimestampManifest"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:IngestVideoResponse": {
      "name": "IngestVideoResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "videoRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "asyncHandle",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:AsyncHandle"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:McapChannelConfig": {
      "name": "McapChannelConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "locator",
            "valueType": {
              "type": "id",
              "value": "type_global:McapChannelLocator"
            }
          },
          {
            "key": "channelType",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:McapChannelConfigType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:McapChannelConfigType": {
      "name": "McapChannelConfigType",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "video",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "video",
                  "valueType": {
                    "type": "id",
                    "value": "type_Ingest:McapVideoChannelConfig"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Ingest:McapVideoChannelConfig": {
      "name": "McapVideoChannelConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:IngestMcapRequest": {
      "name": "IngestMcapRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "List of files in S3 to be ingested. These should be ordered by time, as data will be ingested and\nconcatenated across all the files.\nNote: only a single files are currently supported, this field is mostly for forward compatibility.",
            "key": "sources",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:IngestSource"
              }
            }
          },
          {
            "key": "channelConfig",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:McapChannelConfig"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Ingest:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Ingest:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:Label"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:McapSource": {
      "name": "McapSource",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "singleChannel",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "singleChannel",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:McapChannelLocator"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Ingest:McapDestination": {
      "name": "McapDestination",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "videoRid",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "videoRid",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Ingest:McapIngestionOutput": {
      "name": "McapIngestionOutput",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:McapSource"
            }
          },
          {
            "key": "target",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:McapDestination"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Ingest:IngestMcapResponse": {
      "name": "IngestMcapResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "outputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Ingest:McapIngestionOutput"
              }
            }
          },
          {
            "key": "asyncHandle",
            "valueType": {
              "type": "id",
              "value": "type_Ingest:AsyncHandle"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Integrations:IntegrationRid": {
      "name": "IntegrationRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Integrations:Integration": {
      "name": "Integration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_Integrations:IntegrationRid"
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "integrationDetails",
            "valueType": {
              "type": "id",
              "value": "type_Integrations:IntegrationDetails"
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "createdBy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Integrations:IntegrationDetails": {
      "name": "IntegrationDetails",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "slackWebhookIntegration",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "slackWebhookIntegration",
                  "valueType": {
                    "type": "id",
                    "value": "type_Integrations:SlackWebhookIntegration"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "opsgenieIntegration",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "opsgenieIntegration",
                  "valueType": {
                    "type": "id",
                    "value": "type_Integrations:OpsgenieIntegration"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "simpleWebhookIntegration",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "simpleWebhookIntegration",
                  "valueType": {
                    "type": "id",
                    "value": "type_Integrations:SimpleWebhookIntegration"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Integrations:SlackWebhookIntegration": {
      "name": "SlackWebhookIntegration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "teamName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "channel",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "channelId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Integrations:SimpleWebhookIntegration": {
      "name": "SimpleWebhookIntegration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Integrations:OpsgenieIntegration": {
      "name": "OpsgenieIntegration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "region",
            "valueType": {
              "type": "id",
              "value": "type_Integrations:OpsgenieRegion"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Integrations:GenerateSlackWebhookResponse": {
      "name": "GenerateSlackWebhookResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Integrations:CreateIntegrationRequest": {
      "name": "CreateIntegrationRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "createIntegrationDetails",
            "valueType": {
              "type": "id",
              "value": "type_Integrations:CreateIntegrationDetails"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Integrations:CreateIntegrationDetails": {
      "name": "CreateIntegrationDetails",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "createSimpleWebhookDetails",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "createSimpleWebhookDetails",
                  "valueType": {
                    "type": "id",
                    "value": "type_Integrations:CreateSimpleWebhookDetails"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "createOpsgenieIntegrationDetails",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "createOpsgenieIntegrationDetails",
                  "valueType": {
                    "type": "id",
                    "value": "type_Integrations:CreateOpsgenieIntegrationDetails"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Integrations:CreateSimpleWebhookDetails": {
      "name": "CreateSimpleWebhookDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "webhook",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Integrations:CreateOpsgenieIntegrationDetails": {
      "name": "CreateOpsgenieIntegrationDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "apiKey",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "region",
            "valueType": {
              "type": "id",
              "value": "type_Integrations:OpsgenieRegion"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Integrations:OpsgenieRegion": {
      "name": "OpsgenieRegion",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "US"
          },
          {
            "value": "EU"
          }
        ]
      }
    },
    "type_Integrations:UpdateIntegrationRequest": {
      "name": "UpdateIntegrationRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Integrations:SendMessageRequest": {
      "name": "SendMessageRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "integrationRid",
            "valueType": {
              "type": "id",
              "value": "type_Integrations:IntegrationRid"
            }
          },
          {
            "key": "priority",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Checklist:Priority"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Integrations:NotificationConfiguration": {
      "name": "NotificationConfiguration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "integrationRid",
            "valueType": {
              "type": "id",
              "value": "type_Integrations:IntegrationRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_InternalVersioning:CommitId": {
      "description": "40 hex character unique identifier.",
      "name": "CommitId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_InternalVersioning:Commit": {
      "name": "Commit",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:CommitId"
            }
          },
          {
            "key": "resourceRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "parentCommit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_InternalVersioning:CommitId"
              }
            }
          },
          {
            "key": "mergeParentCommit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_InternalVersioning:CommitId"
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "A working state commit is created via the `saveWorkingState` endpoint\nand is non-permanent. In the future, it may be compacted and not exist.",
            "key": "isWorkingState",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "committedBy",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "committedAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_InternalVersioning:BranchRid": {
      "name": "BranchRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_InternalVersioning:BranchName": {
      "name": "BranchName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_InternalVersioning:Branch": {
      "name": "Branch",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:BranchRid"
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:BranchName"
            }
          },
          {
            "key": "resourceRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "commit",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:CommitId"
            }
          },
          {
            "key": "createdBy",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "updatedAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_InternalVersioning:TagRid": {
      "name": "TagRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_InternalVersioning:TagName": {
      "name": "TagName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_InternalVersioning:Tag": {
      "name": "Tag",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:TagRid"
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:TagName"
            }
          },
          {
            "key": "resourceRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "commit",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:CommitId"
            }
          },
          {
            "key": "createdBy",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_InternalVersioning:InitResourceVersioningRequest": {
      "name": "InitResourceVersioningRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "newCommit",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:CommitId"
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_InternalVersioning:CreateBranchRequest": {
      "name": "CreateBranchRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "existingCommit",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:CommitId"
            }
          },
          {
            "key": "branchName",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:BranchName"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_InternalVersioning:CreateTagRequest": {
      "name": "CreateTagRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "existingCommit",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:CommitId"
            }
          },
          {
            "key": "tagName",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:TagName"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_InternalVersioning:GetLeastCommonAncestorRequest": {
      "name": "GetLeastCommonAncestorRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "commit1",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:CommitId"
            }
          },
          {
            "key": "commit2",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:CommitId"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_InternalVersioning:SaveWorkingStateRequest": {
      "name": "SaveWorkingStateRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "newCommit",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:CommitId"
            }
          },
          {
            "key": "latestCommit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_InternalVersioning:CommitId"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_InternalVersioning:CommitRequest": {
      "name": "CommitRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "newCommit",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:CommitId"
            }
          },
          {
            "description": "If present, this existing commit will be the merge parent\nof the new commit. It will be made permanent if not already,\nto prevent the merge parent from being compacted.",
            "key": "mergeParentCommit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_InternalVersioning:CommitId"
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "latestCommit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_InternalVersioning:CommitId"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_InternalVersioning:CompactionStrategy": {
      "name": "CompactionStrategy",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "olderThanDays",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "olderThanDays",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_InternalVersioning:CompactCommitsRequest": {
      "name": "CompactCommitsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "strategy",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:CompactionStrategy"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_InternalVersioning:BranchAndCommit": {
      "name": "BranchAndCommit",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "branch",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:Branch"
            }
          },
          {
            "key": "commit",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:Commit"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_InternalVersioning:ResourceAndCommitId": {
      "name": "ResourceAndCommitId",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "resourceRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "commitId",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:CommitId"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_InternalVersioning:ResourceAndBranchName": {
      "name": "ResourceAndBranchName",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "resourceRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "branchName",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:BranchName"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_InternalVersioning:CommitHistory": {
      "name": "CommitHistory",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "history",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_InternalVersioning:Commit"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Job:DeprecatedCheckJobSpec": {
      "name": "DeprecatedCheckJobSpec",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "dataReviewRid",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:DataReviewRid"
            }
          },
          {
            "key": "checkRid",
            "valueType": {
              "type": "id",
              "value": "type_common:CheckRid"
            }
          },
          {
            "key": "checkEvaluationRid",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:AutomaticCheckEvaluationRid"
            }
          },
          {
            "key": "checkCondition",
            "valueType": {
              "type": "id",
              "value": "type_Checklist:CheckCondition"
            }
          },
          {
            "key": "start",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "end",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:Context"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Job:CheckJobSpec": {
      "name": "CheckJobSpec",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "dataReviewRid",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:DataReviewRid"
            }
          },
          {
            "key": "checkRid",
            "valueType": {
              "type": "id",
              "value": "type_common:CheckRid"
            }
          },
          {
            "key": "runRid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:RunRid"
              }
            }
          },
          {
            "description": "Checks can define a single range computation which can evaluate over multiple implementations of a context.\nThe check implementation index will correspond to the implementation index of the check condition.",
            "key": "checkImplementationIndex",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "checkEvaluationRid",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:AutomaticCheckEvaluationRid"
            }
          },
          {
            "key": "checkCondition",
            "valueType": {
              "type": "id",
              "value": "type_Checklist:CheckCondition"
            }
          },
          {
            "key": "start",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "end",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "type_Compute:Context"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Job:JobSpec": {
      "name": "JobSpec",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "check",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "check",
                  "valueType": {
                    "type": "id",
                    "value": "type_Job:DeprecatedCheckJobSpec"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "checkV2",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "checkV2",
                  "valueType": {
                    "type": "id",
                    "value": "type_Job:CheckJobSpec"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Job:JobReport": {
      "name": "JobReport",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "jobStatus",
            "valueType": {
              "type": "id",
              "value": "type_Job:JobStatus"
            }
          },
          {
            "key": "jobRid",
            "valueType": {
              "type": "id",
              "value": "type_common:JobRid"
            }
          },
          {
            "key": "submittedAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Job:JobStatus": {
      "name": "JobStatus",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "inProgress",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "inProgress",
                  "valueType": {
                    "type": "id",
                    "value": "type_Job:InProgress"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "completed",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "completed",
                  "valueType": {
                    "type": "id",
                    "value": "type_Job:Completed"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "failed",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "failed",
                  "valueType": {
                    "type": "id",
                    "value": "type_Job:Failed"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Job:InProgress": {
      "name": "InProgress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Job:Completed": {
      "name": "Completed",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "result",
            "valueType": {
              "type": "id",
              "value": "type_Job:JobResult"
            }
          },
          {
            "key": "executionStartTime",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "executionEndTime",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Job:JobResult": {
      "name": "JobResult",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "checkJobResult",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "checkJobResult",
                  "valueType": {
                    "type": "id",
                    "value": "type_Job:CheckJobResult"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Job:CheckJobResult": {
      "name": "CheckJobResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_DataReview:Status"
            }
          },
          {
            "key": "failures",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Compute:Range"
              }
            }
          },
          {
            "key": "areFailuresDecimated",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Job:Failed": {
      "name": "Failed",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "failureMessage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "executionStartTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          },
          {
            "key": "executionEndTime",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Job:BatchGetJobReportsRequest": {
      "name": "BatchGetJobReportsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "jobRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:JobRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Job:BatchGetJobReportsResponse": {
      "name": "BatchGetJobReportsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "jobRidsToJobReports",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:JobRid"
              },
              "valueType": {
                "type": "id",
                "value": "type_Job:JobReport"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Job:SubmitJobsRequest": {
      "name": "SubmitJobsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "jobsToExecute",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Job:JobSpec"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Job:SubmittedJob": {
      "name": "SubmittedJob",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "jobRid",
            "valueType": {
              "type": "id",
              "value": "type_common:JobRid"
            }
          },
          {
            "key": "jobSpec",
            "valueType": {
              "type": "id",
              "value": "type_Job:JobSpec"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Job:SubmitJobsResponse": {
      "name": "SubmitJobsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "jobs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Job:SubmittedJob"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogSet:LogSetRid": {
      "name": "LogSetRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogSet:Log": {
      "name": "Log",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "time",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "body",
            "valueType": {
              "type": "id",
              "value": "type_LogSet:LogBody"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogSet:BasicLogBody": {
      "name": "BasicLogBody",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogSet:LogBody": {
      "name": "LogBody",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "basic",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "basic",
                  "valueType": {
                    "type": "id",
                    "value": "type_LogSet:BasicLogBody"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_LogSet:LogHandle": {
      "name": "LogHandle",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "s3",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "s3",
                  "valueType": {
                    "type": "id",
                    "value": "type_LogSet:S3LogHandle"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_LogSet:LogFormat": {
      "name": "LogFormat",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "V1"
          }
        ]
      }
    },
    "type_LogSet:S3LogHandle": {
      "name": "S3LogHandle",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "path",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "format",
            "valueType": {
              "type": "id",
              "value": "type_LogSet:LogFormat"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogSet:CreateLogSetRequest": {
      "name": "CreateLogSetRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "originMetadata",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "timestampType",
            "valueType": {
              "type": "id",
              "value": "type_common:TimestampType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogSet:AttachLogsAndFinalizeRequest": {
      "name": "AttachLogsAndFinalizeRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "logs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_LogSet:Log"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogSet:LogSetMetadata": {
      "name": "LogSetMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_LogSet:LogSetRid"
            }
          },
          {
            "key": "createdBy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "originMetadata",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "updatedAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "logCount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "timestampType",
            "valueType": {
              "type": "id",
              "value": "type_common:TimestampType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogSet:Token": {
      "name": "Token",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogSet:SearchLogSetsRequest": {
      "name": "SearchLogSetsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "token",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogSet:Token"
              }
            }
          },
          {
            "description": "The maximum allowed page size is 1000. Defaults to the maximum if not supplied.",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogSet:SearchLogSetsResponse": {
      "name": "SearchLogSetsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "values",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_LogSet:LogSetMetadata"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogSet:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogSet:SearchLogsResponse": {
      "name": "SearchLogsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "logs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_LogSet:Log"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogSet:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogSet:SearchLogsRequest": {
      "name": "SearchLogsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "token",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogSet:Token"
              }
            }
          },
          {
            "description": "The maximum allowed page size is 10000. Defaults to the maximum if not supplied.",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:LogicalSeriesRid": {
      "name": "LogicalSeriesRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogicalSeries:DataSourceRid": {
      "name": "DataSourceRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogicalSeries:SeriesDataType": {
      "name": "SeriesDataType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "DOUBLE"
          },
          {
            "value": "STRING"
          }
        ]
      }
    },
    "type_LogicalSeries:LogicalSeries": {
      "name": "LogicalSeries",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:LogicalSeriesRid"
            }
          },
          {
            "key": "dataSourceRid",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:DataSourceRid"
            }
          },
          {
            "key": "locator",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:Locator"
            }
          },
          {
            "description": "Only required to be present for legacy CSVs.",
            "key": "timeLocator",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:Locator"
              }
            }
          },
          {
            "key": "channel",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:Channel"
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:Unit"
              }
            }
          },
          {
            "key": "seriesDataType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:SeriesDataType"
              }
            }
          },
          {
            "description": "Time granularity of the series. If omitted, defaults to nanoseconds.",
            "key": "granularity",
            "valueType": {
              "type": "id",
              "value": "type_global:TimeUnit"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:Context": {
      "name": "Context",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "id",
                "value": "type_LogicalSeries:ContextProperty"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:ContextProperty": {
      "name": "ContextProperty",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "value",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_LogicalSeries:Locator": {
      "name": "Locator",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "csvLocator",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "csvLocator",
                  "valueType": {
                    "type": "id",
                    "value": "type_LogicalSeries:CsvLocator"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "csvV2",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "csvV2",
                  "valueType": {
                    "type": "id",
                    "value": "type_LogicalSeries:CsvLocatorV2"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timescaleDbLocator",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timescaleDbLocator",
                  "valueType": {
                    "type": "id",
                    "value": "type_LogicalSeries:TimescaleDbLocator"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "influxLocator",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "influxLocator",
                  "valueType": {
                    "type": "id",
                    "value": "type_LogicalSeries:Influx2Locator"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "influx1Locator",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "influx1Locator",
                  "valueType": {
                    "type": "id",
                    "value": "type_LogicalSeries:Influx1Locator"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "nominalLocator",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "nominalLocator",
                  "valueType": {
                    "type": "id",
                    "value": "type_LogicalSeries:NominalLocator"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestreamLocator",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestreamLocator",
                  "valueType": {
                    "type": "id",
                    "value": "type_LogicalSeries:TimestreamLocator"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "visualCrossingLocator",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "visualCrossingLocator",
                  "valueType": {
                    "type": "id",
                    "value": "type_LogicalSeries:VisualCrossingLocator"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_LogicalSeries:CsvLocator": {
      "name": "CsvLocator",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "s3Path",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "index",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "If empty, defaults to false. This refers to whether the CSV was ingested using legacy format where the timestamp\nand values are split into two separate arrow files.",
            "key": "usesLegacyFormat",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:CsvLocatorV2": {
      "name": "CsvLocatorV2",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "s3Path",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "index",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "timeIndex",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:TimescaleDbLocator": {
      "name": "TimescaleDbLocator",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "table",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:TableName"
            }
          },
          {
            "key": "schema",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:SchemaName"
            }
          },
          {
            "key": "column",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:ColumnName"
            }
          },
          {
            "key": "timeColumn",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:ColumnName"
            }
          },
          {
            "key": "dimensions",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:TimescaleType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:DatabaseName": {
      "name": "DatabaseName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogicalSeries:SchemaName": {
      "name": "SchemaName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogicalSeries:BucketName": {
      "name": "BucketName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogicalSeries:MeasurementName": {
      "name": "MeasurementName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogicalSeries:FieldName": {
      "name": "FieldName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogicalSeries:ColumnName": {
      "name": "ColumnName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogicalSeries:AttributeName": {
      "name": "AttributeName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogicalSeries:TableName": {
      "name": "TableName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogicalSeries:MeasureName": {
      "name": "MeasureName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogicalSeries:LocationName": {
      "name": "LocationName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogicalSeries:InfluxType": {
      "name": "InfluxType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "BOOLEAN"
          },
          {
            "value": "NUMERIC"
          },
          {
            "value": "STRING"
          }
        ]
      }
    },
    "type_LogicalSeries:TimescaleType": {
      "name": "TimescaleType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "BOOLEAN"
          },
          {
            "value": "DOUBLE"
          },
          {
            "value": "STRING"
          }
        ]
      }
    },
    "type_LogicalSeries:NominalType": {
      "name": "NominalType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "DOUBLE"
          },
          {
            "value": "STRING"
          }
        ]
      }
    },
    "type_LogicalSeries:VisualCrossingType": {
      "name": "VisualCrossingType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "DOUBLE"
          },
          {
            "value": "STRING"
          }
        ]
      }
    },
    "type_LogicalSeries:Influx2Locator": {
      "name": "Influx2Locator",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "bucket",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:BucketName"
            }
          },
          {
            "key": "measurement",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:MeasurementName"
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:FieldName"
            }
          },
          {
            "description": "If omitted, defaults to `_value`. Can be used to extract tag values.",
            "key": "valueColumn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:InfluxType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:Influx1Locator": {
      "name": "Influx1Locator",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "database",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:DatabaseName"
            }
          },
          {
            "key": "measurement",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:MeasurementName"
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:FieldName"
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:InfluxType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:NominalLocator": {
      "name": "NominalLocator",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "channel",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:Channel"
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:NominalType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:VisualCrossingEndpointUri": {
      "name": "VisualCrossingEndpointUri",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "HISTORY"
          },
          {
            "value": "TIMELINE"
          }
        ]
      }
    },
    "type_LogicalSeries:VisualCrossingLocator": {
      "name": "VisualCrossingLocator",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Location to fetch data from. Can be any arbitrary string (i.e. name, abbreviation,\nzip code, lat/long, etc.) as remote endpoint performs location resolution.",
            "key": "location",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:LocationName"
            }
          },
          {
            "description": "Defaults to HISTORY. Endpoint to fetch data from for this series.",
            "key": "endpoint",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:VisualCrossingEndpointUri"
              }
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:FieldName"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:VisualCrossingType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:TimestreamLocator": {
      "name": "TimestreamLocator",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "table",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:TableName"
            }
          },
          {
            "key": "dimensions",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          },
          {
            "key": "measure",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:MeasureName"
            }
          },
          {
            "description": "If present, will be the attribute within the measurement for multi-measures.",
            "key": "attribute",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:AttributeName"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:NominalType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:Channel": {
      "name": "Channel",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogicalSeries:Unit": {
      "description": "the symbol of the unit.",
      "name": "Unit",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_LogicalSeries:CreateLogicalSeries": {
      "name": "CreateLogicalSeries",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "channel",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:Channel"
            }
          },
          {
            "key": "locator",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:Locator"
            }
          },
          {
            "description": "If present, will be used as the locator of the LogicalSeriesRid. If a logical series already exists\nwith this id, will throw a CONFLICT.",
            "key": "idLocator",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "uuid"
                }
              }
            }
          },
          {
            "key": "dataSourceRid",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:DataSourceRid"
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:Unit"
              }
            }
          },
          {
            "key": "seriesDataType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:SeriesDataType"
              }
            }
          },
          {
            "key": "granularity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:TimeUnit"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:UnitUpdate": {
      "name": "UnitUpdate",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "unit",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "unit",
                  "valueType": {
                    "type": "id",
                    "value": "type_LogicalSeries:Unit"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "clearUnit",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "clearUnit",
                  "valueType": {
                    "type": "id",
                    "value": "type_LogicalSeries:Empty"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_LogicalSeries:Empty": {
      "name": "Empty",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:UpdateLogicalSeries": {
      "name": "UpdateLogicalSeries",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "logicalSeriesRid",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:LogicalSeriesRid"
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:Unit"
              }
            }
          },
          {
            "key": "unitUpdate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:UnitUpdate"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:BatchCreateLogicalSeriesRequest": {
      "name": "BatchCreateLogicalSeriesRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "requests",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:CreateLogicalSeries"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:BatchCreateLogicalSeriesResponse": {
      "name": "BatchCreateLogicalSeriesResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "responses",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:LogicalSeries"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:BatchUpdateLogicalSeriesRequest": {
      "name": "BatchUpdateLogicalSeriesRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "requests",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:UpdateLogicalSeries"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:BatchUpdateLogicalSeriesResponse": {
      "name": "BatchUpdateLogicalSeriesResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "responses",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:LogicalSeries"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:ResolveSeriesRequest": {
      "name": "ResolveSeriesRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:Channel"
            }
          },
          {
            "key": "datasource",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:DataSourceRid"
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:BatchResolveSeriesRequest": {
      "name": "BatchResolveSeriesRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "requests",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:ResolveSeriesRequest"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:ResolveSeriesResponse": {
      "name": "ResolveSeriesResponse",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "rid",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "rid",
                  "valueType": {
                    "type": "id",
                    "value": "type_LogicalSeries:LogicalSeriesRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_LogicalSeries:ResolveSeriesError"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_LogicalSeries:ResolveSeriesError": {
      "name": "ResolveSeriesError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "args",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:BatchResolveSeriesResponse": {
      "name": "BatchResolveSeriesResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "series",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:ResolveSeriesResponse"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:Confidence": {
      "name": "Confidence",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "LOW"
          },
          {
            "value": "MEDIUM"
          },
          {
            "value": "HIGH"
          }
        ]
      }
    },
    "type_LogicalSeries:GetSuggestedTagsRequest": {
      "name": "GetSuggestedTagsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "currentTags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          },
          {
            "key": "dataSourceRid",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:DataSourceRid"
            }
          },
          {
            "key": "channel",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:Channel"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_LogicalSeries:GetSuggestedTagsResponse": {
      "name": "GetSuggestedTagsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "tags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_global:TagValue"
                }
              }
            }
          },
          {
            "key": "confidence",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:Confidence"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_NominalChannelWriter:WriteTelegrafBatchesRequest": {
      "name": "WriteTelegrafBatchesRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "metrics",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_NominalChannelWriter:TelegrafMetric"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_NominalChannelWriter:TelegrafMetric": {
      "name": "TelegrafMetric",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The values are expected to be either numeric or string values",
            "key": "fields",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_NominalChannelWriter:Field"
              },
              "valueType": {
                "type": "unknown"
              }
            }
          },
          {
            "description": "The measurement name. Measurement name and field are concatenated when creating the Nominal channel name.",
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_NominalChannelWriter:MeasurementName"
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          },
          {
            "key": "timestamp",
            "valueType": {
              "type": "unknown"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_NominalChannelWriter:WriteBatchesRequest": {
      "name": "WriteBatchesRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "batches",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_NominalChannelWriter:RecordsBatch"
              }
            }
          },
          {
            "key": "dataSourceRid",
            "valueType": {
              "type": "id",
              "value": "type_NominalDataSource:NominalDataSourceRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_NominalChannelWriter:RecordsBatch": {
      "name": "RecordsBatch",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "channel",
            "valueType": {
              "type": "id",
              "value": "type_NominalSeries:Channel"
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          },
          {
            "key": "points",
            "valueType": {
              "type": "id",
              "value": "type_NominalChannelWriter:Points"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_NominalChannelWriter:Points": {
      "name": "Points",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "string",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "string",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_NominalChannelWriter:StringPoint"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "double",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "double",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_NominalChannelWriter:DoublePoint"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_NominalChannelWriter:StringPoint": {
      "name": "StringPoint",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_NominalChannelWriter:DoublePoint": {
      "name": "DoublePoint",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_NominalChannelWriter:MeasurementName": {
      "name": "MeasurementName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_NominalChannelWriter:Field": {
      "name": "Field",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_NominalDataSource:NominalDataSourceRid": {
      "name": "NominalDataSourceRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_NominalDataSource:NominalDataSourceId": {
      "name": "NominalDataSourceId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_NominalDataSource:NominalDataSource": {
      "name": "NominalDataSource",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_NominalDataSource:NominalDataSourceRid"
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_NominalDataSource:NominalDataSourceId"
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Returns the approximate timestamp at which data was written to the data source.\nWill be accurate to within 1 minute.",
            "key": "dataLastWrittenAt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_NominalDataSource:CreateNominalDataSourceRequest": {
      "name": "CreateNominalDataSourceRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A human readable identifier. Must be unique within an organization.",
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_NominalDataSource:NominalDataSourceId"
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_NominalSeries:Channel": {
      "name": "Channel",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_NominalSeries:NominalSeriesRid": {
      "name": "NominalSeriesRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_NominalSeries:NominalDataType": {
      "name": "NominalDataType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "DOUBLE"
          },
          {
            "value": "STRING"
          }
        ]
      }
    },
    "type_NominalSeries:CreateSeriesRequest": {
      "name": "CreateSeriesRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_NominalSeries:NominalDataType"
            }
          },
          {
            "key": "dataSourceRid",
            "valueType": {
              "type": "id",
              "value": "type_NominalDataSource:NominalDataSourceRid"
            }
          },
          {
            "key": "channel",
            "valueType": {
              "type": "id",
              "value": "type_NominalSeries:Channel"
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_NominalSeries:NominalSeries": {
      "name": "NominalSeries",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_NominalSeries:NominalSeriesRid"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_NominalSeries:NominalDataType"
            }
          },
          {
            "key": "dataSourceRid",
            "valueType": {
              "type": "id",
              "value": "type_NominalDataSource:NominalDataSourceRid"
            }
          },
          {
            "key": "channel",
            "valueType": {
              "type": "id",
              "value": "type_NominalSeries:Channel"
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_NominalSeries:SearchSeriesRequest": {
      "name": "SearchSeriesRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "channel",
            "valueType": {
              "type": "id",
              "value": "type_NominalSeries:Channel"
            }
          },
          {
            "key": "dataSourceRid",
            "valueType": {
              "type": "id",
              "value": "type_NominalDataSource:NominalDataSourceRid"
            }
          },
          {
            "description": "Returns all series that contain this set of tags, including those\nwhose tags are a superset.",
            "key": "tags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_NominalSeries:SearchSeriesResponse": {
      "name": "SearchSeriesResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "series",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_NominalSeries:NominalSeries"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Notebook:NotebookMetadata": {
      "name": "NotebookMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "deprecated. Use dataScope instead",
            "key": "runRid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:RunRid"
              }
            }
          },
          {
            "key": "dataScope",
            "valueType": {
              "type": "id",
              "value": "type_Notebook:NotebookDataScope"
            }
          },
          {
            "key": "notebookType",
            "valueType": {
              "type": "id",
              "value": "type_Notebook:NotebookType"
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "isDraft",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "isArchived",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "lock",
            "valueType": {
              "type": "id",
              "value": "type_Notebook:Lock"
            }
          },
          {
            "key": "createdByRid",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_common:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Notebook:NotebookType": {
      "name": "NotebookType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "WORKBOOK"
          },
          {
            "value": "COMPARISON_WORKBOOK"
          }
        ]
      }
    },
    "type_Notebook:NotebookDataScope": {
      "name": "NotebookDataScope",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "runRids",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "runRids",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_common:RunRid"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "assetRids",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "assetRids",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_common:AssetRid"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Notebook:NotebookMetadataWithRid": {
      "name": "NotebookMetadataWithRid",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_common:NotebookRid"
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "id",
              "value": "type_Notebook:NotebookMetadata"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Notebook:Lock": {
      "name": "Lock",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isLocked",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "updatedAt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          },
          {
            "key": "updatedByRid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:UserRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Notebook:Notebook": {
      "name": "Notebook",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_common:NotebookRid"
            }
          },
          {
            "key": "snapshotRid",
            "valueType": {
              "type": "id",
              "value": "type_common:SnapshotRid"
            }
          },
          {
            "key": "snapshotAuthorRid",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "snapshotCreatedAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "id",
              "value": "type_Notebook:NotebookMetadata"
            }
          },
          {
            "key": "stateAsJson",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "charts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_Notebook:ChartWithOverlays"
                }
              }
            }
          },
          {
            "key": "layout",
            "valueType": {
              "type": "id",
              "value": "type_layout:WorkbookLayout"
            }
          },
          {
            "key": "content",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_workbook-common:WorkbookContent"
              }
            }
          },
          {
            "key": "contentV2",
            "valueType": {
              "type": "id",
              "value": "type_workbook-common:UnifiedWorkbookContent"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Notebook:ChartWithOverlays": {
      "name": "ChartWithOverlays",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_common:VizId"
            }
          },
          {
            "key": "version",
            "valueType": {
              "type": "id",
              "value": "type_common:Version"
            }
          },
          {
            "key": "overlays",
            "valueType": {
              "type": "unknown"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Notebook:CreateNotebookRequest": {
      "name": "CreateNotebookRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Optional for backcompatibility. Default is a normal workbook.",
            "key": "notebookType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Notebook:NotebookType"
              }
            }
          },
          {
            "key": "isDraft",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "stateAsJson",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "charts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_Notebook:ChartWithOverlays"
                }
              }
            }
          },
          {
            "description": "deprecated. Use dataScope instead",
            "key": "runRid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:RunRid"
              }
            }
          },
          {
            "description": "Optional for back-compatibility.",
            "key": "dataScope",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Notebook:NotebookDataScope"
              }
            }
          },
          {
            "key": "layout",
            "valueType": {
              "type": "id",
              "value": "type_layout:WorkbookLayout"
            }
          },
          {
            "key": "content",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_workbook-common:WorkbookContent"
              }
            }
          },
          {
            "description": "Optional for backcompatibility",
            "key": "contentV2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_workbook-common:UnifiedWorkbookContent"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Notebook:UpdateNotebookRequest": {
      "name": "UpdateNotebookRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "stateAsJson",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "charts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_Notebook:ChartWithOverlays"
                }
              }
            }
          },
          {
            "key": "layout",
            "valueType": {
              "type": "id",
              "value": "type_layout:WorkbookLayout"
            }
          },
          {
            "key": "content",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_workbook-common:WorkbookContent"
              }
            }
          },
          {
            "description": "Optional for backcompatibility",
            "key": "contentV2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_workbook-common:UnifiedWorkbookContent"
              }
            }
          },
          {
            "description": "If provided, will only update the notebook if the latest snapshot matches the provided snapshot rid,\nand throws SaveNotebookConflict otherwise.",
            "key": "latestSnapshotRid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:SnapshotRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Notebook:SortByField": {
      "name": "SortByField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "NAME"
          },
          {
            "value": "CREATED_AT"
          },
          {
            "value": "UPDATED_AT"
          }
        ]
      }
    },
    "type_Notebook:SortBy": {
      "name": "SortBy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isDescending",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_Notebook:SortByField"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Notebook:SearchNotebooksQuery": {
      "name": "SearchNotebooksQuery",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "and",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "and",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_Notebook:SearchNotebooksQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "or",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "or",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_Notebook:SearchNotebooksQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "description": "Performs case insensitive exact match search on the title.",
            "discriminantValue": "exactMatch",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "exactMatch",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "searchText",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "searchText",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "label",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "label",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Label"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "property",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "property",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Property"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "assetRid",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "assetRid",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:AssetRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "authorRid",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "authorRid",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:UserRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "runRid",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "runRid",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:RunRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "notebookType",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "notebookType",
                  "valueType": {
                    "type": "id",
                    "value": "type_Notebook:NotebookType"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Notebook:SearchNotebooksRequest": {
      "name": "SearchNotebooksRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "query",
            "valueType": {
              "type": "id",
              "value": "type_Notebook:SearchNotebooksQuery"
            }
          },
          {
            "key": "showDrafts",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "showArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "UPDATED_AT descending by default",
            "key": "sortBy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Notebook:SortBy"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          },
          {
            "description": "Defaults to 100. Will throw if larger than 1000.",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Notebook:SearchNotebooksResponse": {
      "name": "SearchNotebooksResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Notebook:NotebookMetadataWithRid"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Notebook:GetAllLabelsAndPropertiesResponse": {
      "name": "GetAllLabelsAndPropertiesResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:PropertyValue"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Notebook:UpdateNotebookMetadataRequest": {
      "name": "UpdateNotebookMetadataRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Optional for backcompatibility.",
            "key": "dataScope",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Notebook:NotebookDataScope"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_common:PropertyName"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_common:PropertyValue"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:Label"
                }
              }
            }
          },
          {
            "key": "isDraft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ResourceMetadata:DateTimeField": {
      "name": "DateTimeField",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_ResourceMetadata:Operator"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ResourceMetadata:Operator": {
      "name": "Operator",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "LEQ"
          },
          {
            "value": "LT"
          },
          {
            "value": "GEQ"
          },
          {
            "value": "GT"
          }
        ]
      }
    },
    "type_ResourceMetadata:TimestampField": {
      "name": "TimestampField",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "timestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_ResourceMetadata:Operator"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ResourceMetadata:StringField": {
      "name": "StringField",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ResourceMetadata:LongField": {
      "name": "LongField",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "threshold",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_ResourceMetadata:Operator"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ResourceMetadata:SearchQuery": {
      "name": "SearchQuery",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "dateTimeField",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "dateTimeField",
                  "valueType": {
                    "type": "id",
                    "value": "type_ResourceMetadata:DateTimeField"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "stringField",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "stringField",
                  "valueType": {
                    "type": "id",
                    "value": "type_ResourceMetadata:StringField"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestampField",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestampField",
                  "valueType": {
                    "type": "id",
                    "value": "type_ResourceMetadata:TimestampField"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "longField",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "longField",
                  "valueType": {
                    "type": "id",
                    "value": "type_ResourceMetadata:LongField"
                  }
                }
              ]
            }
          },
          {
            "description": "Performs case insensitive exact match search on the title.",
            "discriminantValue": "exactMatch",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "exactMatch",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "searchText",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "searchText",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "label",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "label",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Label"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "property",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "property",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Property"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "and",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "and",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_ResourceMetadata:SearchQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "or",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "or",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_ResourceMetadata:SearchQuery"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_ResourceMetadata:ResourceType": {
      "name": "ResourceType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "RUN"
          },
          {
            "value": "VIDEO"
          },
          {
            "value": "ASSET"
          }
        ]
      }
    },
    "type_ResourceMetadata:ListPropertiesAndLabelsResponse": {
      "name": "ListPropertiesAndLabelsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:PropertyValue"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_ResourceMetadata:ListPropertiesAndLabelsRequest": {
      "name": "ListPropertiesAndLabelsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "If omitted, all resource types are included.",
            "key": "resourceTypes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_ResourceMetadata:ResourceType"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:UtcTimestamp": {
      "name": "UtcTimestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "secondsSinceEpoch",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "offsetNanoseconds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long",
                  "default": 0
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:WeakTimestampType": {
      "name": "WeakTimestampType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ABSOLUTE"
          },
          {
            "value": "RELATIVE"
          },
          {
            "value": "PENDING"
          }
        ]
      }
    },
    "type_Run:RefNameAndType": {
      "name": "RefNameAndType",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_common:DataSourceRefName"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_common:DataSourceType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:CreateRunDataSource": {
      "name": "CreateRunDataSource",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "dataSource",
            "valueType": {
              "type": "id",
              "value": "type_common:DataSource"
            }
          },
          {
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Duration"
              }
            }
          },
          {
            "description": "Used to resolve logical series for this data source.",
            "key": "seriesTags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:RunDataSource": {
      "name": "RunDataSource",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "dataSource",
            "valueType": {
              "type": "id",
              "value": "type_common:DataSource"
            }
          },
          {
            "description": "This offset is used for small time-sync corrections. Notably, it is\nnot the offset to move a relative data source to the start of the run.",
            "key": "offset",
            "valueType": {
              "type": "id",
              "value": "type_common:Duration"
            }
          },
          {
            "description": "Included for convenience, duplicated from the key of the map",
            "key": "refName",
            "valueType": {
              "type": "id",
              "value": "type_common:DataSourceRefName"
            }
          },
          {
            "key": "timestampType",
            "valueType": {
              "type": "id",
              "value": "type_Run:WeakTimestampType"
            }
          },
          {
            "description": "Used to resolve logical series for this data source.",
            "key": "seriesTags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:RunDataReviewSummary": {
      "name": "RunDataReviewSummary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "evaluationStatus",
            "valueType": {
              "type": "id",
              "value": "type_Run:RunDataReviewEvaluationStatus"
            }
          },
          {
            "key": "totalIssueCount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "reviewedIssueCount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "issuesWithFurtherActionCount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "executionErrorCount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:RunDataReviewEvaluationStatus": {
      "name": "RunDataReviewEvaluationStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "NO_CHECKS_APPLIED"
          },
          {
            "value": "FAILED_TO_EXECUTE"
          },
          {
            "value": "EXECUTING"
          },
          {
            "value": "PENDING_EXECUTION"
          },
          {
            "value": "CLOSED_WITH_FURTHER_ACTION"
          },
          {
            "value": "GENERATED_ALERTS"
          },
          {
            "value": "CLOSED_WITH_IGNORE"
          },
          {
            "value": "PASSING"
          }
        ]
      }
    },
    "type_Run:DataReviewCheckMetrics": {
      "name": "DataReviewCheckMetrics",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "pendingExecution",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "executing",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "passingAutomatic",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "pendingReview",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "closedWithIgnore",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "closedWithFurtherAction",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "failedToExecutePendingReview",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "failedToExecuteClosedWithIgnore",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "failedToExecuteClosedWithFurtherAction",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:DataReviewAlertMetrics": {
      "name": "DataReviewAlertMetrics",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "pendingReview",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "closedWithIgnore",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "closedWithFurtherAction",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:DataReviewMetrics": {
      "name": "DataReviewMetrics",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "checks",
            "valueType": {
              "type": "id",
              "value": "type_Run:DataReviewCheckMetrics"
            }
          },
          {
            "key": "alerts",
            "valueType": {
              "type": "id",
              "value": "type_Run:DataReviewAlertMetrics"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:Run": {
      "name": "Run",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_common:RunRid"
            }
          },
          {
            "key": "runNumber",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "runPrefix",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "authorRid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:UserRid"
              }
            }
          },
          {
            "key": "startTime",
            "valueType": {
              "type": "id",
              "value": "type_Run:UtcTimestamp"
            }
          },
          {
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Run:UtcTimestamp"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_common:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          },
          {
            "key": "links",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_common:Link"
              }
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "updatedAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "dataSources",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:DataSourceRefName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Run:RunDataSource"
              }
            }
          },
          {
            "key": "attachments",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:AttachmentRid"
              }
            }
          },
          {
            "key": "asset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:AssetRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:RunWithDataReviewMetrics": {
      "name": "RunWithDataReviewMetrics",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "run",
            "valueType": {
              "type": "id",
              "value": "type_Run:Run"
            }
          },
          {
            "key": "dataReviewMetrics",
            "valueType": {
              "type": "id",
              "value": "type_Run:DataReviewMetrics"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:RunWithDataReviewSummary": {
      "name": "RunWithDataReviewSummary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "run",
            "valueType": {
              "type": "id",
              "value": "type_Run:Run"
            }
          },
          {
            "key": "dataReviewSummary",
            "valueType": {
              "type": "id",
              "value": "type_Run:RunDataReviewSummary"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:CreateRunRequest": {
      "name": "CreateRunRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "startTime",
            "valueType": {
              "type": "id",
              "value": "type_Run:UtcTimestamp"
            }
          },
          {
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Run:UtcTimestamp"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_common:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          },
          {
            "key": "links",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_common:Link"
              }
            }
          },
          {
            "key": "runPrefix",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "dataSources",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:DataSourceRefName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Run:CreateRunDataSource"
              }
            }
          },
          {
            "key": "attachments",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:AttachmentRid"
              }
            }
          },
          {
            "key": "asset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:AssetRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:UpdateRunRequest": {
      "name": "UpdateRunRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "startTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Run:UtcTimestamp"
              }
            }
          },
          {
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Run:UtcTimestamp"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_common:PropertyName"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_common:PropertyValue"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:Label"
                }
              }
            }
          },
          {
            "key": "links",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_common:Link"
                }
              }
            }
          },
          {
            "key": "runPrefix",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "dataSources",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_common:DataSourceRefName"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_Run:CreateRunDataSource"
                }
              }
            }
          },
          {
            "key": "attachments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:AttachmentRid"
                }
              }
            }
          },
          {
            "key": "asset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:AssetRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:CreateOrUpdateRunRequest": {
      "name": "CreateOrUpdateRunRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "If a run with the same rid already exists, it will be updated.\nOtherwise, a new run will be created.",
            "key": "runRid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:RunRid"
              }
            }
          },
          {
            "key": "createRunRequest",
            "valueType": {
              "type": "id",
              "value": "type_Run:CreateRunRequest"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:GetRunsByAssetRequest": {
      "name": "GetRunsByAssetRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "asset",
            "valueType": {
              "type": "id",
              "value": "type_common:AssetRid"
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "uuid"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:GetRunsByAssetResponse": {
      "name": "GetRunsByAssetResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Run:Run"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "uuid"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:GetRunByIdRequest": {
      "name": "GetRunByIdRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "runNumber",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "runPrefix",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:SortOptions": {
      "name": "SortOptions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isDescending",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_Run:SortField"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:SortField": {
      "name": "SortField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "CREATED_AT"
          },
          {
            "value": "START_TIME"
          },
          {
            "value": "END_TIME"
          },
          {
            "value": "PENDING_CHECK_ALERTS"
          }
        ]
      }
    },
    "type_Run:SearchRunsRequest": {
      "name": "SearchRunsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "sort",
            "valueType": {
              "type": "id",
              "value": "type_Run:SortOptions"
            }
          },
          {
            "description": "Will reject page sizes greater than 10k.",
            "key": "pageSize",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          },
          {
            "key": "query",
            "valueType": {
              "type": "id",
              "value": "type_Run:SearchQuery"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:DataSourceSeriesTag": {
      "name": "DataSourceSeriesTag",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_global:TagName"
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "id",
              "value": "type_global:TagValue"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:SearchQuery": {
      "name": "SearchQuery",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "startTimeInclusive",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "startTimeInclusive",
                  "valueType": {
                    "type": "id",
                    "value": "type_Run:UtcTimestamp"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "endTimeInclusive",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "endTimeInclusive",
                  "valueType": {
                    "type": "id",
                    "value": "type_Run:UtcTimestamp"
                  }
                }
              ]
            }
          },
          {
            "description": "Performs case insensitive exact match search on the title.",
            "discriminantValue": "exactMatch",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "exactMatch",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "searchText",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "searchText",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "asset",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "asset",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:AssetRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "label",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "label",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Label"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "property",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "property",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Property"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "dataSourceSeriesTag",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "dataSourceSeriesTag",
                  "valueType": {
                    "type": "id",
                    "value": "type_Run:DataSourceSeriesTag"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "dataSourceRefName",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "dataSourceRefName",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:DataSourceRefName"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "dataSource",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "dataSource",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:DataSource"
                  }
                }
              ]
            }
          },
          {
            "description": "Search for runs where its aggregated check alert satisfy a given operator and threshold.\n",
            "discriminantValue": "checkAlertStatesFilter",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "checkAlertStatesFilter",
                  "valueType": {
                    "type": "id",
                    "value": "type_Run:CheckAlertStatesFilter"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "and",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "and",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_Run:SearchQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "or",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "or",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_Run:SearchQuery"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Run:CheckAlertStatesFilter": {
      "name": "CheckAlertStatesFilter",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "checkAlertState",
            "valueType": {
              "type": "id",
              "value": "type_common:CheckAlertState"
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_ResourceMetadata:Operator"
            }
          },
          {
            "key": "threshold",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:SearchRunsResponse": {
      "name": "SearchRunsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Run:Run"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:SearchRunsWithDataReviewMetricsResponse": {
      "name": "SearchRunsWithDataReviewMetricsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Run:RunWithDataReviewMetrics"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:SearchRunsWithDataReviewSummaryResponse": {
      "name": "SearchRunsWithDataReviewSummaryResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Run:RunWithDataReviewSummary"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:AllRunsPropertiesAndLabelsResponse": {
      "name": "AllRunsPropertiesAndLabelsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:PropertyValue"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:Unit": {
      "name": "Unit",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "symbol",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:SeriesDataType": {
      "name": "SeriesDataType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "DOUBLE"
          },
          {
            "value": "STRING"
          }
        ]
      }
    },
    "type_Run:ChannelMetadata": {
      "name": "ChannelMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_common:Channel"
            }
          },
          {
            "key": "dataSource",
            "valueType": {
              "type": "id",
              "value": "type_common:DataSource"
            }
          },
          {
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Run:Unit"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "dataType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Run:SeriesDataType"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:SearchRunChannelsRequest": {
      "name": "SearchRunChannelsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "searchText",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "If not empty, will filter to channels from the selected DataSourceRefNames.",
            "key": "refNameFilter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:DataSourceRefName"
                }
              }
            }
          },
          {
            "key": "previouslySelectedChannels",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:DataSourceRefName"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:Channel"
                }
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          },
          {
            "description": "Defaults to 1000. Will throw if larger than 10000.",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:SearchRunChannelsResponse": {
      "name": "SearchRunChannelsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Run:ChannelMetadata"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:GetEventsForRunPage": {
      "name": "GetEventsForRunPage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "events",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_common:EventRid"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:PublishEventsToRunRequest": {
      "name": "PublishEventsToRunRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "events",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:EventRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:DeleteEventsFromRunRequest": {
      "name": "DeleteEventsFromRunRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "events",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:EventRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Run:UpdateAttachmentsRequest": {
      "name": "UpdateAttachmentsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "attachmentsToAdd",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:AttachmentRid"
              }
            }
          },
          {
            "key": "attachmentsToRemove",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:AttachmentRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Secret:SecretRid": {
      "name": "SecretRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Secret:Token": {
      "name": "Token",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Secret:ArchivedStatus": {
      "name": "ArchivedStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "NOT_ARCHIVED"
          },
          {
            "value": "ARCHIVED"
          }
        ]
      }
    },
    "type_Secret:Secret": {
      "name": "Secret",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_Secret:SecretRid"
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "createdBy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Secret:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Secret:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Secret:Label"
              }
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "isArchived",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Secret:PropertyName": {
      "name": "PropertyName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Secret:PropertyValue": {
      "name": "PropertyValue",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Secret:Property": {
      "name": "Property",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_Secret:PropertyName"
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "id",
              "value": "type_Secret:PropertyValue"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Secret:Label": {
      "name": "Label",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Secret:CreateSecretRequest": {
      "name": "CreateSecretRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "decryptedValue",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Secret:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Secret:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Secret:Label"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Secret:UpdateSecretRequest": {
      "name": "UpdateSecretRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_Secret:PropertyName"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_Secret:PropertyValue"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Secret:Label"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Secret:GetSecretsRequest": {
      "name": "GetSecretsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "secretRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Secret:SecretRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Secret:GetSecretsResponse": {
      "name": "GetSecretsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "response",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Secret:Secret"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Secret:SearchSecretsQuery": {
      "name": "SearchSecretsQuery",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "searchText",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "searchText",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "label",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "label",
                  "valueType": {
                    "type": "id",
                    "value": "type_Secret:Label"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "property",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "property",
                  "valueType": {
                    "type": "id",
                    "value": "type_Secret:Property"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "and",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "and",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_Secret:SearchSecretsQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "or",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "or",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_Secret:SearchSecretsQuery"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Secret:SearchSecretsRequest": {
      "name": "SearchSecretsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "query",
            "valueType": {
              "type": "id",
              "value": "type_Secret:SearchSecretsQuery"
            }
          },
          {
            "description": "Defaults to 100. Will throw if larger than 1000.",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "sort",
            "valueType": {
              "type": "id",
              "value": "type_Secret:SortOptions"
            }
          },
          {
            "key": "token",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Secret:Token"
              }
            }
          },
          {
            "description": "Default search status is NOT_ARCHIVED if none are provided. Allows for including archived secrets in search.",
            "key": "archivedStatuses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Secret:ArchivedStatus"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Secret:SortOptions": {
      "name": "SortOptions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isDescending",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_Secret:SortField"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Secret:SortField": {
      "name": "SortField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "CREATED_AT"
          }
        ]
      }
    },
    "type_Secret:SearchSecretsResponse": {
      "name": "SearchSecretsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Secret:Secret"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Secret:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesArchetype:LocatorTemplate": {
      "name": "LocatorTemplate",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "timescaleDb",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timescaleDb",
                  "valueType": {
                    "type": "id",
                    "value": "type_SeriesArchetype:TimescaleDbLocatorTemplate"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "influx",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "influx",
                  "valueType": {
                    "type": "id",
                    "value": "type_SeriesArchetype:Influx2LocatorTemplate"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "influx1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "influx1",
                  "valueType": {
                    "type": "id",
                    "value": "type_SeriesArchetype:Influx1LocatorTemplate"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "nominal",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "nominal",
                  "valueType": {
                    "type": "id",
                    "value": "type_SeriesArchetype:NominalLocatorTemplate"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestream",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestream",
                  "valueType": {
                    "type": "id",
                    "value": "type_SeriesArchetype:TimestreamLocatorTemplate"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "visualCrossing",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "visualCrossing",
                  "valueType": {
                    "type": "id",
                    "value": "type_SeriesArchetype:VisualCrossingLocatorTemplate"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_SeriesArchetype:TimescaleDbLocatorTemplate": {
      "name": "TimescaleDbLocatorTemplate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "table",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:TableName"
            }
          },
          {
            "key": "schema",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:SchemaName"
            }
          },
          {
            "key": "column",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:ColumnName"
            }
          },
          {
            "key": "timeColumn",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:ColumnName"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:TimescaleType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesArchetype:Influx2LocatorTemplate": {
      "name": "Influx2LocatorTemplate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "bucket",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:BucketName"
            }
          },
          {
            "key": "measurement",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:MeasurementName"
            }
          },
          {
            "description": "If omitted, defaults to `_value`. Can be used to extract tag values.",
            "key": "valueColumn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:FieldName"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:InfluxType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesArchetype:Influx1LocatorTemplate": {
      "name": "Influx1LocatorTemplate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "database",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:DatabaseName"
            }
          },
          {
            "key": "measurement",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:MeasurementName"
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:FieldName"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:InfluxType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesArchetype:NominalLocatorTemplate": {
      "name": "NominalLocatorTemplate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "channel",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:Channel"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:NominalType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesArchetype:TimestreamLocatorTemplate": {
      "name": "TimestreamLocatorTemplate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "table",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:TableName"
            }
          },
          {
            "key": "measure",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:MeasureName"
            }
          },
          {
            "key": "attribute",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:AttributeName"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:NominalType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesArchetype:VisualCrossingLocatorTemplate": {
      "name": "VisualCrossingLocatorTemplate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:FieldName"
            }
          },
          {
            "description": "Defaults to HISTORY.",
            "key": "endpoint",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:VisualCrossingEndpointUri"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:VisualCrossingType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesArchetype:SeriesArchetypeRid": {
      "name": "SeriesArchetypeRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_SeriesArchetype:SeriesArchetype": {
      "name": "SeriesArchetype",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_SeriesArchetype:SeriesArchetypeRid"
            }
          },
          {
            "key": "channel",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:Channel"
            }
          },
          {
            "key": "dataSourceRid",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:DataSourceRid"
            }
          },
          {
            "key": "locator",
            "valueType": {
              "type": "id",
              "value": "type_SeriesArchetype:LocatorTemplate"
            }
          },
          {
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:Unit"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Tags specified here will take precedence over tags specified in the RunDatasource, in the case that both specify the same TagName.",
            "key": "tags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          },
          {
            "key": "seriesDataType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:SeriesDataType"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesArchetype:UpdateSeriesArchetypeMetadataRequest": {
      "name": "UpdateSeriesArchetypeMetadataRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Deprecated. Use unitUpdate instead.",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:Unit"
              }
            }
          },
          {
            "key": "unitUpdate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:UnitUpdate"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesArchetype:SeriesArchetypeName": {
      "name": "SeriesArchetypeName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_SeriesArchetype:BatchCreateSeriesArchetypeRequest": {
      "name": "BatchCreateSeriesArchetypeRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "requests",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_SeriesArchetype:CreateSeriesArchetypeRequest"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesArchetype:BatchCreateSeriesArchetypeResponse": {
      "name": "BatchCreateSeriesArchetypeResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "responses",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_SeriesArchetype:SeriesArchetype"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesArchetype:CreateSeriesArchetypeRequest": {
      "name": "CreateSeriesArchetypeRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "This name should be unique amongst SeriesArchetypes within the data source. All series created from this\narchetype will share this name.",
            "key": "channel",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:Channel"
            }
          },
          {
            "key": "dataSourceRid",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:DataSourceRid"
            }
          },
          {
            "key": "locator",
            "valueType": {
              "type": "id",
              "value": "type_SeriesArchetype:LocatorTemplate"
            }
          },
          {
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:Unit"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Tags specified here will take precedence over tags specified in the RunDatasource, in the case that both specify the same TagName.",
            "key": "tags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesArchetype:BatchGetSeriesArchetypeRequest": {
      "name": "BatchGetSeriesArchetypeRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "datasources",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:DataSourceRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesArchetype:BatchGetSeriesArchetypeResponse": {
      "name": "BatchGetSeriesArchetypeResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "responses",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_LogicalSeries:DataSourceRid"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_SeriesArchetype:SeriesArchetype"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesCache:ChunkRid": {
      "name": "ChunkRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_SeriesCache:S3Path": {
      "name": "S3Path",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_SeriesCache:Handle": {
      "name": "Handle",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "s3",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "s3",
                  "valueType": {
                    "type": "id",
                    "value": "type_SeriesCache:S3Handle"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_SeriesCache:S3Handle": {
      "name": "S3Handle",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "s3Path",
            "valueType": {
              "type": "id",
              "value": "type_SeriesCache:S3Path"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesCache:Resolution": {
      "description": "In nanoseconds.",
      "name": "Resolution",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "long",
            "default": 0
          }
        }
      }
    },
    "type_SeriesCache:Chunk": {
      "name": "Chunk",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_SeriesCache:ChunkRid"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_SeriesCache:ChunkType"
            }
          },
          {
            "key": "logicalSeriesRid",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:LogicalSeriesRid"
            }
          },
          {
            "key": "startTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "endTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "description": "The number of distinct timestamps contained within the chunk.",
            "key": "count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "sizeInBytes",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "resolution",
            "valueType": {
              "type": "id",
              "value": "type_SeriesCache:Resolution"
            }
          },
          {
            "key": "handle",
            "valueType": {
              "type": "id",
              "value": "type_SeriesCache:Handle"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesCache:GetChunksParameters": {
      "name": "GetChunksParameters",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "startTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "endTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "resolutionNanos",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesCache:DeleteChunksParameters": {
      "name": "DeleteChunksParameters",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "startTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "endTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesCache:DeleteChunksResponse": {
      "name": "DeleteChunksResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "deletedChunkRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_SeriesCache:ChunkRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesCache:CreateChunksParameters": {
      "name": "CreateChunksParameters",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "createChunks",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_SeriesCache:CreateChunk"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesCache:CreateChunk": {
      "name": "CreateChunk",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_SeriesCache:ChunkType"
            }
          },
          {
            "key": "logicalSeriesRid",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:LogicalSeriesRid"
            }
          },
          {
            "key": "startTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "endTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "sizeInBytes",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "resolution",
            "valueType": {
              "type": "id",
              "value": "type_SeriesCache:Resolution"
            }
          },
          {
            "key": "handle",
            "valueType": {
              "type": "id",
              "value": "type_SeriesCache:Handle"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesCache:ChunkType": {
      "name": "ChunkType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ARROW_WITH_RELATIVE_TIMESTAMPS"
          },
          {
            "value": "ARROW_WITH_ABSOLUTE_TIMESTAMPS"
          }
        ]
      }
    },
    "type_SeriesCache:GetChunksResponse": {
      "name": "GetChunksResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "chunks",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_SeriesCache:Chunk"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesCache:CreateChunksResponse": {
      "name": "CreateChunksResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "chunkRids",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_SeriesCache:ChunkRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesCache:GetCachedSeriesRequest": {
      "name": "GetCachedSeriesRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "logicalSeriesRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_LogicalSeries:LogicalSeriesRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesCache:CachedSeries": {
      "name": "CachedSeries",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "logicalSeriesRid",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:LogicalSeriesRid"
            }
          },
          {
            "key": "startTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "endTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "seriesDataType",
            "valueType": {
              "type": "id",
              "value": "type_LogicalSeries:SeriesDataType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesCache:CreateCachedSeriesRequest": {
      "name": "CreateCachedSeriesRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "seriesToCache",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_SeriesCache:CachedSeries"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_SeriesCache:CachedSeriesResponse": {
      "name": "CachedSeriesResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "cachedSeries",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_SeriesCache:CachedSeries"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Template:TemplateMetadata": {
      "name": "TemplateMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_common:PropertyValue"
              }
            }
          },
          {
            "key": "isArchived",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "isPublished",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "createdBy",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "updatedAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "description": "The time of the last permanent commit to the main branch.",
            "key": "editedAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Template:TemplateSummary": {
      "name": "TemplateSummary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_common:TemplateRid"
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "id",
              "value": "type_Template:TemplateMetadata"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Template:Template": {
      "name": "Template",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_common:TemplateRid"
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "id",
              "value": "type_Template:TemplateMetadata"
            }
          },
          {
            "key": "commit",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:Commit"
            }
          },
          {
            "key": "charts",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_common:VersionedVizId"
              }
            }
          },
          {
            "key": "layout",
            "valueType": {
              "type": "id",
              "value": "type_layout:WorkbookLayout"
            }
          },
          {
            "key": "content",
            "valueType": {
              "type": "id",
              "value": "type_workbook-common:WorkbookContent"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Template:CreateTemplateRequest": {
      "name": "CreateTemplateRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_common:PropertyValue"
              }
            }
          },
          {
            "description": "Default is true",
            "key": "isPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "charts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_common:VersionedVizId"
                }
              }
            }
          },
          {
            "key": "layout",
            "valueType": {
              "type": "id",
              "value": "type_layout:WorkbookLayout"
            }
          },
          {
            "key": "content",
            "valueType": {
              "type": "id",
              "value": "type_workbook-common:WorkbookContent"
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Template:SaveTemplateRequest": {
      "name": "SaveTemplateRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "charts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_common:VersionedVizId"
                }
              }
            }
          },
          {
            "key": "layout",
            "valueType": {
              "type": "id",
              "value": "type_layout:WorkbookLayout"
            }
          },
          {
            "key": "content",
            "valueType": {
              "type": "id",
              "value": "type_workbook-common:WorkbookContent"
            }
          },
          {
            "description": "If present, will validate that the latest commit matches this id,\nand otherwise throw CommitConflict.",
            "key": "latestCommit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_InternalVersioning:CommitId"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Template:CommitTemplateRequest": {
      "name": "CommitTemplateRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "charts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_common:VersionedVizId"
                }
              }
            }
          },
          {
            "key": "layout",
            "valueType": {
              "type": "id",
              "value": "type_layout:WorkbookLayout"
            }
          },
          {
            "key": "content",
            "valueType": {
              "type": "id",
              "value": "type_workbook-common:WorkbookContent"
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "If present, will validate that the latest commit matches this id,\nand otherwise throw CommitConflict.",
            "key": "latestCommit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_InternalVersioning:CommitId"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Template:UpdateMetadataRequest": {
      "name": "UpdateMetadataRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:Label"
                }
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_common:PropertyName"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_common:PropertyValue"
                }
              }
            }
          },
          {
            "key": "isArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "isPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Template:SearchTemplatesQuery": {
      "name": "SearchTemplatesQuery",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "and",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "and",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_Template:SearchTemplatesQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "or",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "or",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_Template:SearchTemplatesQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "description": "Performs case insensitive exact match search on the title.",
            "discriminantValue": "exactMatch",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "exactMatch",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "description": "Searches title and description only",
            "discriminantValue": "searchText",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "searchText",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "label",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "label",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Label"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "property",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "property",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Property"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "createdBy",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "createdBy",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:UserRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "isArchived",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "isArchived",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "isPublished",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "isPublished",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Template:SortByField": {
      "name": "SortByField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "NAME"
          },
          {
            "value": "CREATED_AT"
          },
          {
            "value": "UPDATED_AT"
          },
          {
            "value": "EDITED_AT"
          }
        ]
      }
    },
    "type_Template:SortBy": {
      "name": "SortBy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isDescending",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_Template:SortByField"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Template:SearchTemplatesRequest": {
      "name": "SearchTemplatesRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "query",
            "valueType": {
              "type": "id",
              "value": "type_Template:SearchTemplatesQuery"
            }
          },
          {
            "description": "EDITED_AT descending by default",
            "key": "sortBy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Template:SortBy"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          },
          {
            "description": "Defaults to 100. Will throw if larger than 1_000.",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Template:SearchTemplatesResponse": {
      "name": "SearchTemplatesResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Template:TemplateSummary"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Template:GetAllLabelsAndPropertiesResponse": {
      "name": "GetAllLabelsAndPropertiesResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_common:PropertyName"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:PropertyValue"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_common:Label"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Template:MergeToMainRequest": {
      "name": "MergeToMainRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "If \"main\", the request will throw.",
            "key": "branchName",
            "valueType": {
              "type": "id",
              "value": "type_InternalVersioning:BranchName"
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "If present, will validate that the latest commit matches this id,\nand otherwise throw CommitConflict.",
            "key": "latestCommitOnMain",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_InternalVersioning:CommitId"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Units:UnitSymbol": {
      "name": "UnitSymbol",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Units:UnitName": {
      "description": "The long form name of a unit.",
      "name": "UnitName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Units:UnitProperty": {
      "description": "The physical quality that the unit measures (Electric Current, Time, Angle, etc.)",
      "name": "UnitProperty",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Units:UnitDimension": {
      "name": "UnitDimension",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "baseDimensions",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Units:UnitSystem": {
      "description": "The units system that the unit is defined in.",
      "name": "UnitSystem",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Units:Unit": {
      "name": "Unit",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Units:UnitName"
              }
            }
          },
          {
            "key": "symbol",
            "valueType": {
              "type": "id",
              "value": "type_Units:UnitSymbol"
            }
          },
          {
            "description": "Empty if no property is available. If two units measure different properties, it is not possible to\nconvert between them.",
            "key": "property",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Units:UnitProperty"
              }
            }
          },
          {
            "description": "The physical dimensions in terms of the base units of the system. It is only possible to convert units if\nthey have the same dimension. Empty if the unit is a base unit.",
            "key": "dimension",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Units:UnitDimension"
              }
            }
          },
          {
            "key": "system",
            "valueType": {
              "type": "id",
              "value": "type_Units:UnitSystem"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Units:GetUnitsResponse": {
      "name": "GetUnitsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "unitsByProperty",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Units:UnitProperty"
              },
              "valueType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Units:Unit"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:S3Path": {
      "name": "S3Path",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Upload:DeprecatedTriggerIngest": {
      "name": "DeprecatedTriggerIngest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_Upload:IngestSource"
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "datasetName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "timestampMetadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Upload:DeprecatedTimestampMetadata"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:TriggerIngest": {
      "name": "TriggerIngest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_Upload:IngestSource"
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Upload:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Upload:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Upload:Label"
              }
            }
          },
          {
            "key": "datasetName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "datasetDescription",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "timestampMetadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Upload:TimestampMetadata"
              }
            }
          },
          {
            "description": "If absent, will default to a channel config that constructs a prefix tree with `.` as the delimiter.",
            "key": "channelConfig",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Upload:ChannelConfig"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:TriggerFileIngest": {
      "name": "TriggerFileIngest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_Upload:IngestSource"
            }
          },
          {
            "key": "sourceMetadata",
            "valueType": {
              "type": "id",
              "value": "type_Upload:IngestSourceMetadata"
            }
          },
          {
            "key": "destination",
            "valueType": {
              "type": "id",
              "value": "type_Upload:IngestDestination"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:SkipRowsConfig": {
      "name": "SkipRowsConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "headerRowIndex",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "dataStartRowIndex",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:ChannelConfig": {
      "name": "ChannelConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "If set, will construct a prefix tree for channels of the dataset using the given delimiter.",
            "key": "prefixTreeDelimiter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:IngestSource": {
      "name": "IngestSource",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "s3",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "s3",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:S3IngestSource"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Upload:S3IngestSource": {
      "name": "S3IngestSource",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "path",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:IngestSourceMetadata": {
      "name": "IngestSourceMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timestampMetadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Upload:TimestampMetadata"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:IngestDestination": {
      "name": "IngestDestination",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "newDataset",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "newDataset",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:NewDatasetIngestDestination"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "existingDataset",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "existingDataset",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:ExistingDatasetIngestDestination"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Upload:NewDatasetIngestDestination": {
      "name": "NewDatasetIngestDestination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "datasetName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "datasetDescription",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Upload:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Upload:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Upload:Label"
              }
            }
          },
          {
            "key": "channelConfig",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Upload:ChannelConfig"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:ExistingDatasetIngestDestination": {
      "name": "ExistingDatasetIngestDestination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "datasetRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:DeprecatedTimestampMetadata": {
      "name": "DeprecatedTimestampMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "seriesName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "isAbsolute",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:TimestampMetadata": {
      "name": "TimestampMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "seriesName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "timestampType",
            "valueType": {
              "type": "id",
              "value": "type_Upload:TimestampType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:TimestampType": {
      "name": "TimestampType",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "relative",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "relative",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:RelativeTimestamp"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "absolute",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "absolute",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:AbsoluteTimestamp"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Upload:RelativeTimestamp": {
      "name": "RelativeTimestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timeUnit",
            "valueType": {
              "type": "id",
              "value": "type_global:TimeUnit"
            }
          },
          {
            "description": "Starting timestamp to use when indexing the file. This field is required when uploading a new file to an existing dataset.",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:AbsoluteTimestamp": {
      "name": "AbsoluteTimestamp",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "iso8601",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "iso8601",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:Iso8601Timestamp"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "epochOfTimeUnit",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "epochOfTimeUnit",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:EpochTimestamp"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "customFormat",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "customFormat",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:CustomTimestamp"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Upload:Iso8601Timestamp": {
      "name": "Iso8601Timestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:EpochTimestamp": {
      "name": "EpochTimestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timeUnit",
            "valueType": {
              "type": "id",
              "value": "type_global:TimeUnit"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:CustomTimestamp": {
      "name": "CustomTimestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The format string should be in the format of the `DateTimeFormatter` class in Java.",
            "key": "format",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Default year is accepted as an optional field for cases like IRIG time format and will be overridden by year in time format.",
            "key": "defaultYear",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:DatasetSpec": {
      "name": "DatasetSpec",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:TriggeredIngest": {
      "name": "TriggeredIngest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "datasetRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "datasetFileId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "uuid"
                }
              }
            }
          },
          {
            "key": "asyncHandle",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Upload:AsyncHandle"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:ErrorResult": {
      "name": "ErrorResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "errorType",
            "valueType": {
              "type": "id",
              "value": "type_Upload:ErrorType"
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:ErrorType": {
      "description": "Should be of the format Namespace:ErrorType",
      "name": "ErrorType",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Upload:SuccessResult": {
      "name": "SuccessResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:InProgressResult": {
      "name": "InProgressResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:IngestStatus": {
      "name": "IngestStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "IN_PROGRESS"
          },
          {
            "value": "COMPLETED"
          },
          {
            "value": "FAILED"
          }
        ]
      }
    },
    "type_Upload:IngestStatusV2": {
      "name": "IngestStatusV2",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "success",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:SuccessResult"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:ErrorResult"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "inProgress",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "inProgress",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:InProgressResult"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Upload:IngestProgressV2": {
      "name": "IngestProgressV2",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Timestamp at start of ingest",
            "key": "startTime",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "description": "Timestamp at end of ingest, empty if still in progress",
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          },
          {
            "description": "Status of ingest, contains error if failed",
            "key": "ingestStatus",
            "valueType": {
              "type": "id",
              "value": "type_Upload:IngestStatusV2"
            }
          },
          {
            "description": "Whether ingest duration can be reliably calculated",
            "key": "incalculable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:AsyncHandle": {
      "name": "AsyncHandle",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:InitiateMultipartUploadRequest": {
      "name": "InitiateMultipartUploadRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "filename",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "filetype",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:InitiateMultipartUploadResponse": {
      "name": "InitiateMultipartUploadResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "uploadId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:PartWithSize": {
      "name": "PartWithSize",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "partNumber",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "etag",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "size",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:SignPartResponse": {
      "name": "SignPartResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "headers",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:Part": {
      "name": "Part",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "partNumber",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "etag",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:CompleteMultipartUploadResponse": {
      "name": "CompleteMultipartUploadResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "location",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:DeprecatedNewCsv": {
      "name": "DeprecatedNewCsv",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_Upload:IngestSource"
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "timeColumnSpec",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Upload:TimestampMetadata"
              }
            }
          },
          {
            "key": "channelConfig",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Upload:ChannelConfig"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:DeprecatedNewDataSource": {
      "name": "DeprecatedNewDataSource",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "csv",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "csv",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:DeprecatedNewCsv"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Upload:NewDataSource": {
      "name": "NewDataSource",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_Upload:IngestSource"
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Upload:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Upload:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Upload:Label"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "timeColumnSpec",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Upload:TimestampMetadata"
              }
            }
          },
          {
            "key": "channelConfig",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Upload:ChannelConfig"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:DataSourceRid": {
      "name": "DataSourceRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Upload:IngestDataSource": {
      "name": "IngestDataSource",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "existingDataSource",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "existingDataSource",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:DataSourceRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "newDataSource",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "newDataSource",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:DeprecatedNewDataSource"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "newDataSourceV2",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "newDataSourceV2",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:NewDataSource"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Upload:TimeOffsetSpec": {
      "name": "TimeOffsetSpec",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "nanos",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "nanos",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Duration"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Upload:UtcTimestamp": {
      "name": "UtcTimestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "secondsSinceEpoch",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "offsetNanoseconds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long",
                  "default": 0
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:PropertyName": {
      "name": "PropertyName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Upload:PropertyValue": {
      "name": "PropertyValue",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Upload:Label": {
      "name": "Label",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Upload:DataSourceRefName": {
      "name": "DataSourceRefName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Upload:IngestRunDataSource": {
      "name": "IngestRunDataSource",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "dataSource",
            "valueType": {
              "type": "id",
              "value": "type_Upload:IngestDataSource"
            }
          },
          {
            "key": "timeOffsetSpec",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Upload:TimeOffsetSpec"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:IngestRunRequest": {
      "name": "IngestRunRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "If a run with the same rid already exists, the run will be updated.",
            "key": "rid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "startTime",
            "valueType": {
              "type": "id",
              "value": "type_Upload:UtcTimestamp"
            }
          },
          {
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Upload:UtcTimestamp"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Upload:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Upload:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Upload:Label"
              }
            }
          },
          {
            "description": "for example, SIM, HTL, FLT",
            "key": "runPrefix",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "dataSources",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Upload:DataSourceRefName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Upload:IngestRunDataSource"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:RunRid": {
      "name": "RunRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Upload:IngestRunResponse": {
      "name": "IngestRunResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "runRid",
            "valueType": {
              "type": "id",
              "value": "type_Upload:RunRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:VideoTimestampManifest": {
      "name": "VideoTimestampManifest",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "noManifest",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "noManifest",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:NoTimestampManifest"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestampManifests",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestampManifests",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:TimestampManifest"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Upload:NoTimestampManifest": {
      "name": "NoTimestampManifest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "startingTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_Upload:UtcTimestamp"
            }
          },
          {
            "description": "A field that specifies that the frame rate of the video does not match the frame rate of the camera | i.e. a slowed down or sped up video. Can specify either the camera frame rate or the absolute end time.",
            "key": "scaleParameter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Upload:ScaleParameter"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:TimestampManifest": {
      "name": "TimestampManifest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "sources",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Upload:IngestSource"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:ScaleParameter": {
      "name": "ScaleParameter",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "trueFrameRate",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "trueFrameRate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          },
          {
            "description": "the timestamp corresponding to absolute starting timestamp plus absolute duration of the video.",
            "discriminantValue": "endingTimestamp",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "endingTimestamp",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:UtcTimestamp"
                  }
                }
              ]
            }
          },
          {
            "description": "the scale factor can be used to calculate whether media duration differs from a video's | real duration, and if so, the true frame rate of the camera. The video time will thus be scaled | by the ratio of the real duration to media duration, or media frame rate to true frame rate.",
            "discriminantValue": "scaleFactor",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "scaleFactor",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Upload:IngestVideoRequest": {
      "name": "IngestVideoRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "sources",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Upload:IngestSource"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Upload:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Upload:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Upload:Label"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "timestamps",
            "valueType": {
              "type": "id",
              "value": "type_Upload:VideoTimestampManifest"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:IngestVideoResponse": {
      "name": "IngestVideoResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "videoRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "asyncHandle",
            "valueType": {
              "type": "id",
              "value": "type_Upload:AsyncHandle"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:McapChannelConfig": {
      "name": "McapChannelConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "locator",
            "valueType": {
              "type": "id",
              "value": "type_global:McapChannelLocator"
            }
          },
          {
            "key": "channelType",
            "valueType": {
              "type": "id",
              "value": "type_Upload:McapChannelConfigType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:McapChannelConfigType": {
      "name": "McapChannelConfigType",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "video",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "video",
                  "valueType": {
                    "type": "id",
                    "value": "type_Upload:McapVideoChannelConfig"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Upload:McapVideoChannelConfig": {
      "name": "McapVideoChannelConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:IngestMcapRequest": {
      "name": "IngestMcapRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "List of files in S3 to be ingested. These should be ordered by time, as data will be ingested and\nconcatenated across all the files.\nNote: only a single files are currently supported, this field is mostly for forward compatibility.",
            "key": "sources",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Upload:IngestSource"
              }
            }
          },
          {
            "key": "channelConfig",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Upload:McapChannelConfig"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Upload:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Upload:PropertyValue"
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Upload:Label"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:McapSource": {
      "name": "McapSource",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "singleChannel",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "singleChannel",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:McapChannelLocator"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Upload:McapDestination": {
      "name": "McapDestination",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "videoRid",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "videoRid",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Upload:McapIngestionOutput": {
      "name": "McapIngestionOutput",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "type_Upload:McapSource"
            }
          },
          {
            "key": "target",
            "valueType": {
              "type": "id",
              "value": "type_Upload:McapDestination"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Upload:IngestMcapResponse": {
      "name": "IngestMcapResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "outputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Upload:McapIngestionOutput"
              }
            }
          },
          {
            "key": "asyncHandle",
            "valueType": {
              "type": "id",
              "value": "type_Upload:AsyncHandle"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Versioning:CommitId": {
      "description": "40 hex character unique identifier.",
      "name": "CommitId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Versioning:Commit": {
      "name": "Commit",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:CommitId"
            }
          },
          {
            "key": "resourceRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "parentCommit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Versioning:CommitId"
              }
            }
          },
          {
            "key": "mergeParentCommit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Versioning:CommitId"
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "A working state commit is created via the `saveWorkingState` endpoint\nand is non-permanent. In the future, it may be compacted and not exist.",
            "key": "isWorkingState",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "committedBy",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "committedAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Versioning:BranchRid": {
      "name": "BranchRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Versioning:BranchName": {
      "name": "BranchName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Versioning:Branch": {
      "name": "Branch",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:BranchRid"
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:BranchName"
            }
          },
          {
            "key": "resourceRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "commit",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:CommitId"
            }
          },
          {
            "key": "createdBy",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "updatedAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Versioning:TagRid": {
      "name": "TagRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Versioning:TagName": {
      "name": "TagName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Versioning:Tag": {
      "name": "Tag",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:TagRid"
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:TagName"
            }
          },
          {
            "key": "resourceRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "commit",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:CommitId"
            }
          },
          {
            "key": "createdBy",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Versioning:InitResourceVersioningRequest": {
      "name": "InitResourceVersioningRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "newCommit",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:CommitId"
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Versioning:CreateBranchRequest": {
      "name": "CreateBranchRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "existingCommit",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:CommitId"
            }
          },
          {
            "key": "branchName",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:BranchName"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Versioning:CreateTagRequest": {
      "name": "CreateTagRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "existingCommit",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:CommitId"
            }
          },
          {
            "key": "tagName",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:TagName"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Versioning:GetLeastCommonAncestorRequest": {
      "name": "GetLeastCommonAncestorRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "commit1",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:CommitId"
            }
          },
          {
            "key": "commit2",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:CommitId"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Versioning:SaveWorkingStateRequest": {
      "name": "SaveWorkingStateRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "newCommit",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:CommitId"
            }
          },
          {
            "key": "latestCommit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Versioning:CommitId"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Versioning:CommitRequest": {
      "name": "CommitRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "newCommit",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:CommitId"
            }
          },
          {
            "description": "If present, this existing commit will be the merge parent\nof the new commit. It will be made permanent if not already,\nto prevent the merge parent from being compacted.",
            "key": "mergeParentCommit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Versioning:CommitId"
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "latestCommit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Versioning:CommitId"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Versioning:CompactionStrategy": {
      "name": "CompactionStrategy",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "olderThanDays",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "olderThanDays",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Versioning:CompactCommitsRequest": {
      "name": "CompactCommitsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "strategy",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:CompactionStrategy"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Versioning:BranchAndCommit": {
      "name": "BranchAndCommit",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "branch",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:Branch"
            }
          },
          {
            "key": "commit",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:Commit"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Versioning:ResourceAndCommitId": {
      "name": "ResourceAndCommitId",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "resourceRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "commitId",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:CommitId"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Versioning:ResourceAndBranchName": {
      "name": "ResourceAndBranchName",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "resourceRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "branchName",
            "valueType": {
              "type": "id",
              "value": "type_Versioning:BranchName"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Versioning:CommitHistory": {
      "name": "CommitHistory",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "history",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Versioning:Commit"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:S3Path": {
      "name": "S3Path",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Video:VideoRid": {
      "name": "VideoRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Video:SegmentRid": {
      "name": "SegmentRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Video:Handle": {
      "name": "Handle",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "s3",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "s3",
                  "valueType": {
                    "type": "id",
                    "value": "type_Video:S3Path"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Video:Token": {
      "name": "Token",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Video:PropertyName": {
      "name": "PropertyName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Video:PropertyValue": {
      "name": "PropertyValue",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Video:Property": {
      "name": "Property",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_Video:PropertyName"
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "id",
              "value": "type_Video:PropertyValue"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:Label": {
      "name": "Label",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Video:ArchivedStatus": {
      "name": "ArchivedStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ARCHIVED"
          },
          {
            "value": "NOT_ARCHIVED"
          }
        ]
      }
    },
    "type_Video:Video": {
      "name": "Video",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_Video:VideoRid"
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Video:Label"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Video:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Video:PropertyValue"
              }
            }
          },
          {
            "key": "createdBy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "originMetadata",
            "valueType": {
              "type": "id",
              "value": "type_Video:VideoOriginMetadata"
            }
          },
          {
            "key": "allSegmentsMetadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Video:VideoAllSegmentsMetadata"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:VideoAllSegmentsMetadata": {
      "name": "VideoAllSegmentsMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_Video:VideoRid"
            }
          },
          {
            "key": "numFrames",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "numSegments",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "scaleFactor",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "minAbsoluteTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "description": "the timestamp corresponding to absolute starting timestamp plus absolute duration of the video.",
            "key": "maxAbsoluteTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "mediaDurationSeconds",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "description": "The average media frame rate (FPS) of the video calculated as total frames / duration in seconds.",
            "key": "mediaFrameRate",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "description": "deprecated",
            "key": "minTimestamp",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "description": "deprecated",
            "key": "maxTimestamp",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "description": "deprecated",
            "key": "durationSeconds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "deprecated",
            "key": "frameRate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:SegmentSummary": {
      "name": "SegmentSummary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "minAbsoluteTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "maxAbsoluteTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "minMediaTimestamp",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "maxMediaTimestamp",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:CreateVideoRequest": {
      "name": "CreateVideoRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Video:Label"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Video:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Video:PropertyValue"
              }
            }
          },
          {
            "key": "originMetadata",
            "valueType": {
              "type": "id",
              "value": "type_Video:VideoOriginMetadata"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:VideoOriginMetadata": {
      "name": "VideoOriginMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "videoSources",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Video:Handle"
              }
            }
          },
          {
            "description": "Will be present if the handles were copied from a different bucket to the Nominal bucket.",
            "key": "videoSourcesOriginalHandles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_Video:Handle"
                }
              }
            }
          },
          {
            "key": "timestampManifest",
            "valueType": {
              "type": "id",
              "value": "type_Video:VideoTimestampManifest"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:VideoTimestampManifest": {
      "name": "VideoTimestampManifest",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "mcap",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "mcap",
                  "valueType": {
                    "type": "id",
                    "value": "type_Video:McapTimestampManifest"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "s3paths",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "s3paths",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_Video:S3Path"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "noManifest",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "noManifest",
                  "valueType": {
                    "type": "id",
                    "value": "type_Video:NoTimestampManifest"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Video:McapTimestampManifest": {
      "name": "McapTimestampManifest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "mcapChannelLocator",
            "valueType": {
              "type": "id",
              "value": "type_global:McapChannelLocator"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:NoTimestampManifest": {
      "name": "NoTimestampManifest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Specifies the original starting timestamp of the video.",
            "key": "startingTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "description": "A field that specifies that the frame rate of the video does not match the frame rate of the camera | i.e. a slowed down or sped up video. Can specify either the camera frame rate or the absolute end time.",
            "key": "scaleParameter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Video:ScaleParameter"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:UpdateVideoMetadataRequest": {
      "name": "UpdateVideoMetadataRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Video:Label"
                }
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Video:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Video:PropertyValue"
              }
            }
          },
          {
            "key": "startingTimestamp",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "scaleParameter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Video:ScaleParameter"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:ScaleParameter": {
      "name": "ScaleParameter",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "trueFrameRate",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "trueFrameRate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "endingTimestamp",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "endingTimestamp",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:Timestamp"
                  }
                }
              ]
            }
          },
          {
            "description": "the scale factor can be used to calculate whether media duration differs from a video's | real duration, and if so, the true frame rate of the camera. The video time will thus be scaled | by the ratio of the real duration to media duration, or media frame rate to true frame rate.",
            "discriminantValue": "scaleFactor",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "scaleFactor",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Video:UpdateTargetDurationRequest": {
      "name": "UpdateTargetDurationRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A value used to construct the HLS playlist which must be greater than or equal to the durations of all\nthe segments within a video, when rounded to the nearest integer.",
            "key": "targetDurationSeconds",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:UpdateTargetDurationResponse": {
      "name": "UpdateTargetDurationResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "If the video already has a target duration, then the returned target duration will be the max of the one\nsent in the request and the existing target duration.",
            "key": "targetDurationSeconds",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:GetVideosRequest": {
      "name": "GetVideosRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "videoRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Video:VideoRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:GetVideosResponse": {
      "name": "GetVideosResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "responses",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_Video:Video"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:SearchVideosQuery": {
      "name": "SearchVideosQuery",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "searchText",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "searchText",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "label",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "label",
                  "valueType": {
                    "type": "id",
                    "value": "type_Video:Label"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "property",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "property",
                  "valueType": {
                    "type": "id",
                    "value": "type_Video:Property"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "and",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "and",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_Video:SearchVideosQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "or",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "or",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_Video:SearchVideosQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "ingestStatus",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "ingestStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_Video:IngestStatus"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Video:SearchVideosRequest": {
      "name": "SearchVideosRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "query",
            "valueType": {
              "type": "id",
              "value": "type_Video:SearchVideosQuery"
            }
          },
          {
            "description": "Defaults to 100. Will throw if larger than 1_000.",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "token",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Video:Token"
              }
            }
          },
          {
            "key": "sortOptions",
            "valueType": {
              "type": "id",
              "value": "type_Video:SortOptions"
            }
          },
          {
            "description": "Default search status is NOT_ARCHIVED if none are provided. Allows for including archived videos in search.",
            "key": "archivedStatuses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Video:ArchivedStatus"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:SortOptions": {
      "name": "SortOptions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isDescending",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_Video:SortField"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:SortField": {
      "name": "SortField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "CREATED_AT"
          }
        ]
      }
    },
    "type_Video:SearchVideosResponse": {
      "name": "SearchVideosResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Video:Video"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Video:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:TimestampMappings": {
      "name": "TimestampMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "mediaTimestamps",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "absoluteTimestamps",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:SegmentTimestamps": {
      "name": "SegmentTimestamps",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "timestamps",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestamps",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_global:Timestamp"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestampMappings",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestampMappings",
                  "valueType": {
                    "type": "id",
                    "value": "type_Video:TimestampMappings"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Video:Segment": {
      "name": "Segment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_Video:SegmentRid"
            }
          },
          {
            "key": "videoRid",
            "valueType": {
              "type": "id",
              "value": "type_Video:VideoRid"
            }
          },
          {
            "key": "dataHandle",
            "valueType": {
              "type": "id",
              "value": "type_Video:Handle"
            }
          },
          {
            "description": "The average frame rate (FPS) of the segment calculated as total frames / duration in seconds.",
            "key": "frameRate",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "description": "The duration of a segment in media time.",
            "key": "durationSeconds",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "description": "for videos with frame-level timestamps, we provide mappings, otherwise we just include a single list\nof timestamps.",
            "key": "timestamps",
            "valueType": {
              "type": "id",
              "value": "type_Video:SegmentTimestamps"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:CreateSegment": {
      "name": "CreateSegment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "dataHandle",
            "valueType": {
              "type": "id",
              "value": "type_Video:Handle"
            }
          },
          {
            "description": "The average frame rate (FPS) of the segment calculated as total frames / duration in seconds.",
            "key": "frameRate",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "durationSeconds",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "timestamps",
            "valueType": {
              "type": "id",
              "value": "type_Video:SegmentTimestamps"
            }
          },
          {
            "key": "segmentEndTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:CreateSegmentsRequest": {
      "name": "CreateSegmentsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "requests",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Video:CreateSegment"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:CreateSegmentsResponse": {
      "name": "CreateSegmentsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "segments",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Video:Segment"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:GetSegmentByTimestampRequest": {
      "name": "GetSegmentByTimestampRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:IngestStatus": {
      "name": "IngestStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "SUCCEEDED"
          },
          {
            "value": "FAILED"
          },
          {
            "value": "IN_PROGRESS"
          }
        ]
      }
    },
    "type_Video:DetailedIngestStatus": {
      "name": "DetailedIngestStatus",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "success",
                  "valueType": {
                    "type": "id",
                    "value": "type_Video:SuccessIngestStatus"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_Video:ErrorIngestStatus"
                  }
                }
              ]
            }
          },
          {
            "description": "A number between 0 and 1 representing percentage progress.",
            "discriminantValue": "inProgress",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "inProgress",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Video:UpdateIngestStatus": {
      "name": "UpdateIngestStatus",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "success",
                  "valueType": {
                    "type": "id",
                    "value": "type_Video:SuccessIngestStatus"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_Video:ErrorIngestStatus"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "inProgress",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "inProgress",
                  "valueType": {
                    "type": "id",
                    "value": "type_Video:Empty"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_Video:Empty": {
      "name": "Empty",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:SuccessIngestStatus": {
      "name": "SuccessIngestStatus",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:ErrorIngestStatus": {
      "name": "ErrorIngestStatus",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "errors",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_Video:IngestError"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_Video:ErrorType": {
      "name": "ErrorType",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_Video:IngestError": {
      "name": "IngestError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "errorType",
            "valueType": {
              "type": "id",
              "value": "type_Video:ErrorType"
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:S3Path": {
      "name": "S3Path",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_VideoSegment:VideoRid": {
      "name": "VideoRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_VideoSegment:SegmentRid": {
      "name": "SegmentRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_VideoSegment:Handle": {
      "name": "Handle",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "s3",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "s3",
                  "valueType": {
                    "type": "id",
                    "value": "type_VideoSegment:S3Path"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_VideoSegment:Token": {
      "name": "Token",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_VideoSegment:PropertyName": {
      "name": "PropertyName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_VideoSegment:PropertyValue": {
      "name": "PropertyValue",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_VideoSegment:Property": {
      "name": "Property",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:PropertyName"
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:PropertyValue"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:Label": {
      "name": "Label",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_VideoSegment:ArchivedStatus": {
      "name": "ArchivedStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ARCHIVED"
          },
          {
            "value": "NOT_ARCHIVED"
          }
        ]
      }
    },
    "type_VideoSegment:Video": {
      "name": "Video",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:VideoRid"
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_VideoSegment:Label"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_VideoSegment:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_VideoSegment:PropertyValue"
              }
            }
          },
          {
            "key": "createdBy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "createdAt",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime",
                "default": "1970-01-01T00:00:00.000Z"
              }
            }
          },
          {
            "key": "originMetadata",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:VideoOriginMetadata"
            }
          },
          {
            "key": "allSegmentsMetadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_VideoSegment:VideoAllSegmentsMetadata"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:VideoAllSegmentsMetadata": {
      "name": "VideoAllSegmentsMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:VideoRid"
            }
          },
          {
            "key": "numFrames",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "numSegments",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "scaleFactor",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "minAbsoluteTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "description": "the timestamp corresponding to absolute starting timestamp plus absolute duration of the video.",
            "key": "maxAbsoluteTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "mediaDurationSeconds",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "description": "The average media frame rate (FPS) of the video calculated as total frames / duration in seconds.",
            "key": "mediaFrameRate",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "description": "deprecated",
            "key": "minTimestamp",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "description": "deprecated",
            "key": "maxTimestamp",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "description": "deprecated",
            "key": "durationSeconds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "deprecated",
            "key": "frameRate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:SegmentSummary": {
      "name": "SegmentSummary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "minAbsoluteTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "maxAbsoluteTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "minMediaTimestamp",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "maxMediaTimestamp",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:CreateVideoRequest": {
      "name": "CreateVideoRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_VideoSegment:Label"
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_VideoSegment:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_VideoSegment:PropertyValue"
              }
            }
          },
          {
            "key": "originMetadata",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:VideoOriginMetadata"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:VideoOriginMetadata": {
      "name": "VideoOriginMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "videoSources",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_VideoSegment:Handle"
              }
            }
          },
          {
            "description": "Will be present if the handles were copied from a different bucket to the Nominal bucket.",
            "key": "videoSourcesOriginalHandles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_VideoSegment:Handle"
                }
              }
            }
          },
          {
            "key": "timestampManifest",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:VideoTimestampManifest"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:VideoTimestampManifest": {
      "name": "VideoTimestampManifest",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "mcap",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "mcap",
                  "valueType": {
                    "type": "id",
                    "value": "type_VideoSegment:McapTimestampManifest"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "s3paths",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "s3paths",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_VideoSegment:S3Path"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "noManifest",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "noManifest",
                  "valueType": {
                    "type": "id",
                    "value": "type_VideoSegment:NoTimestampManifest"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_VideoSegment:McapTimestampManifest": {
      "name": "McapTimestampManifest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "mcapChannelLocator",
            "valueType": {
              "type": "id",
              "value": "type_global:McapChannelLocator"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:NoTimestampManifest": {
      "name": "NoTimestampManifest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Specifies the original starting timestamp of the video.",
            "key": "startingTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "description": "A field that specifies that the frame rate of the video does not match the frame rate of the camera | i.e. a slowed down or sped up video. Can specify either the camera frame rate or the absolute end time.",
            "key": "scaleParameter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_VideoSegment:ScaleParameter"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:UpdateVideoMetadataRequest": {
      "name": "UpdateVideoMetadataRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "labels",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_VideoSegment:Label"
                }
              }
            }
          },
          {
            "key": "properties",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_VideoSegment:PropertyName"
              },
              "valueType": {
                "type": "id",
                "value": "type_VideoSegment:PropertyValue"
              }
            }
          },
          {
            "key": "startingTimestamp",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "scaleParameter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_VideoSegment:ScaleParameter"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:ScaleParameter": {
      "name": "ScaleParameter",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "trueFrameRate",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "trueFrameRate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "endingTimestamp",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "endingTimestamp",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:Timestamp"
                  }
                }
              ]
            }
          },
          {
            "description": "the scale factor can be used to calculate whether media duration differs from a video's | real duration, and if so, the true frame rate of the camera. The video time will thus be scaled | by the ratio of the real duration to media duration, or media frame rate to true frame rate.",
            "discriminantValue": "scaleFactor",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "scaleFactor",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_VideoSegment:UpdateTargetDurationRequest": {
      "name": "UpdateTargetDurationRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A value used to construct the HLS playlist which must be greater than or equal to the durations of all\nthe segments within a video, when rounded to the nearest integer.",
            "key": "targetDurationSeconds",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:UpdateTargetDurationResponse": {
      "name": "UpdateTargetDurationResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "If the video already has a target duration, then the returned target duration will be the max of the one\nsent in the request and the existing target duration.",
            "key": "targetDurationSeconds",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:GetVideosRequest": {
      "name": "GetVideosRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "videoRids",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_VideoSegment:VideoRid"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:GetVideosResponse": {
      "name": "GetVideosResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "responses",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "id",
                "value": "type_VideoSegment:Video"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:SearchVideosQuery": {
      "name": "SearchVideosQuery",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "searchText",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "searchText",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "label",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "label",
                  "valueType": {
                    "type": "id",
                    "value": "type_VideoSegment:Label"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "property",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "property",
                  "valueType": {
                    "type": "id",
                    "value": "type_VideoSegment:Property"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "and",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "and",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_VideoSegment:SearchVideosQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "or",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "or",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_VideoSegment:SearchVideosQuery"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "ingestStatus",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "ingestStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_VideoSegment:IngestStatus"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_VideoSegment:SearchVideosRequest": {
      "name": "SearchVideosRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "query",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:SearchVideosQuery"
            }
          },
          {
            "description": "Defaults to 100. Will throw if larger than 1_000.",
            "key": "pageSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "token",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_VideoSegment:Token"
              }
            }
          },
          {
            "key": "sortOptions",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:SortOptions"
            }
          },
          {
            "description": "Default search status is NOT_ARCHIVED if none are provided. Allows for including archived videos in search.",
            "key": "archivedStatuses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_VideoSegment:ArchivedStatus"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:SortOptions": {
      "name": "SortOptions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isDescending",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "field",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:SortField"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:SortField": {
      "name": "SortField",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "CREATED_AT"
          }
        ]
      }
    },
    "type_VideoSegment:SearchVideosResponse": {
      "name": "SearchVideosResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_VideoSegment:Video"
              }
            }
          },
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_VideoSegment:Token"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:TimestampMappings": {
      "name": "TimestampMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "mediaTimestamps",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "absoluteTimestamps",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:SegmentTimestamps": {
      "name": "SegmentTimestamps",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "timestamps",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestamps",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_global:Timestamp"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestampMappings",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestampMappings",
                  "valueType": {
                    "type": "id",
                    "value": "type_VideoSegment:TimestampMappings"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_VideoSegment:Segment": {
      "name": "Segment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:SegmentRid"
            }
          },
          {
            "key": "videoRid",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:VideoRid"
            }
          },
          {
            "key": "dataHandle",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:Handle"
            }
          },
          {
            "description": "The average frame rate (FPS) of the segment calculated as total frames / duration in seconds.",
            "key": "frameRate",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "description": "The duration of a segment in media time.",
            "key": "durationSeconds",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "description": "for videos with frame-level timestamps, we provide mappings, otherwise we just include a single list\nof timestamps.",
            "key": "timestamps",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:SegmentTimestamps"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:CreateSegment": {
      "name": "CreateSegment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "dataHandle",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:Handle"
            }
          },
          {
            "description": "The average frame rate (FPS) of the segment calculated as total frames / duration in seconds.",
            "key": "frameRate",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "durationSeconds",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "timestamps",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:SegmentTimestamps"
            }
          },
          {
            "key": "segmentEndTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:CreateSegmentsRequest": {
      "name": "CreateSegmentsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "requests",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_VideoSegment:CreateSegment"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:CreateSegmentsResponse": {
      "name": "CreateSegmentsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "segments",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_VideoSegment:Segment"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:GetSegmentByTimestampRequest": {
      "name": "GetSegmentByTimestampRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "timestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:IngestStatus": {
      "name": "IngestStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "SUCCEEDED"
          },
          {
            "value": "FAILED"
          },
          {
            "value": "IN_PROGRESS"
          }
        ]
      }
    },
    "type_VideoSegment:DetailedIngestStatus": {
      "name": "DetailedIngestStatus",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "success",
                  "valueType": {
                    "type": "id",
                    "value": "type_VideoSegment:SuccessIngestStatus"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_VideoSegment:ErrorIngestStatus"
                  }
                }
              ]
            }
          },
          {
            "description": "A number between 0 and 1 representing percentage progress.",
            "discriminantValue": "inProgress",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "inProgress",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_VideoSegment:UpdateIngestStatus": {
      "name": "UpdateIngestStatus",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "success",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "success",
                  "valueType": {
                    "type": "id",
                    "value": "type_VideoSegment:SuccessIngestStatus"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "error",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_VideoSegment:ErrorIngestStatus"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "inProgress",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "inProgress",
                  "valueType": {
                    "type": "id",
                    "value": "type_VideoSegment:Empty"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_VideoSegment:Empty": {
      "name": "Empty",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:SuccessIngestStatus": {
      "name": "SuccessIngestStatus",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:ErrorIngestStatus": {
      "name": "ErrorIngestStatus",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "errors",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_VideoSegment:IngestError"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegment:ErrorType": {
      "name": "ErrorType",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_VideoSegment:IngestError": {
      "name": "IngestError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "errorType",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegment:ErrorType"
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegmenter:VideoRid": {
      "name": "VideoRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_VideoSegmenter:SegmentVideoRequest": {
      "name": "SegmentVideoRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "videoRid",
            "valueType": {
              "type": "id",
              "value": "type_VideoSegmenter:VideoRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_VideoSegmenter:SegmentVideoAsyncResponse": {
      "name": "SegmentVideoAsyncResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "jobRid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_channel-variables:ChannelVariableName": {
      "name": "ChannelVariableName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_channel-variables:ChannelVariable": {
      "name": "ChannelVariable",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "variableName",
            "valueType": {
              "type": "id",
              "value": "type_channel-variables:ChannelVariableName"
            }
          },
          {
            "key": "computeSpec",
            "valueType": {
              "type": "id",
              "value": "type_channel-variables:ComputeSpec"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_channel-variables:WorkbookChannelVariableMap": {
      "name": "WorkbookChannelVariableMap",
      "shape": {
        "type": "alias",
        "value": {
          "type": "map",
          "keyType": {
            "type": "id",
            "value": "type_channel-variables:ChannelVariableName"
          },
          "valueType": {
            "type": "id",
            "value": "type_channel-variables:ChannelVariable"
          }
        }
      }
    },
    "type_channel-variables:ComputeSpec": {
      "name": "ComputeSpec",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_channel-variables:ComputeSpecV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_channel-variables:ComputeSpecV1": {
      "name": "ComputeSpecV1",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_chart-api:JsonString": {
      "name": "JsonString",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_chart-api:DeprecatedDefinitionAndSchemaVersion": {
      "name": "DeprecatedDefinitionAndSchemaVersion",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "schemaVersion",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "definition",
            "valueType": {
              "type": "id",
              "value": "type_chart-api:JsonString"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_common:DatasetRid": {
      "name": "DatasetRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:DatasetFileId": {
      "name": "DatasetFileId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "uuid"
          }
        }
      }
    },
    "type_common:TimestampType": {
      "name": "TimestampType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ABSOLUTE"
          },
          {
            "value": "RELATIVE"
          }
        ]
      }
    },
    "type_common:Token": {
      "name": "Token",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:Label": {
      "name": "Label",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:PropertyName": {
      "name": "PropertyName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:PropertyValue": {
      "name": "PropertyValue",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:Property": {
      "name": "Property",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_common:PropertyName"
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "id",
              "value": "type_common:PropertyValue"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_common:AssetRid": {
      "name": "AssetRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:NotebookRid": {
      "name": "NotebookRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:ChecklistRid": {
      "name": "ChecklistRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:VizId": {
      "name": "VizId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:FunctionRid": {
      "name": "FunctionRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:FunctionLineageRid": {
      "name": "FunctionLineageRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:UserRid": {
      "name": "UserRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:Version": {
      "name": "Version",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "type_common:VersionedVizId": {
      "name": "VersionedVizId",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rid",
            "valueType": {
              "type": "id",
              "value": "type_common:VizId"
            }
          },
          {
            "key": "version",
            "valueType": {
              "type": "id",
              "value": "type_common:Version"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_common:CheckLineageRid": {
      "name": "CheckLineageRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:CheckRid": {
      "name": "CheckRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:SnapshotRid": {
      "name": "SnapshotRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:RunRid": {
      "name": "RunRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:AttachmentRid": {
      "name": "AttachmentRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:DataSource": {
      "name": "DataSource",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "dataset",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "dataset",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:DatasetRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "connection",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "connection",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:ConnectionRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "logSet",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "logSet",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:LogSetRid"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "video",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "video",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:VideoRid"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_common:DataSourceType": {
      "name": "DataSourceType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "DATASET"
          },
          {
            "value": "CONNECTION"
          },
          {
            "value": "LOGSET"
          },
          {
            "value": "VIDEO"
          }
        ]
      }
    },
    "type_common:ConnectionRid": {
      "name": "ConnectionRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:LogSetRid": {
      "name": "LogSetRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:VideoRid": {
      "name": "VideoRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:Duration": {
      "name": "Duration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "seconds",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "nanos",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "picos",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_common:Link": {
      "name": "Link",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_common:EventRid": {
      "name": "EventRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:HexColor": {
      "name": "HexColor",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:DataSourceRefName": {
      "name": "DataSourceRefName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:Channel": {
      "name": "Channel",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:ChannelLocator": {
      "name": "ChannelLocator",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "dataSourceRef",
            "valueType": {
              "type": "id",
              "value": "type_common:DataSourceRefName"
            }
          },
          {
            "key": "channel",
            "valueType": {
              "type": "id",
              "value": "type_common:Channel"
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_global:TagName"
              },
              "valueType": {
                "type": "id",
                "value": "type_global:TagValue"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_common:JobRid": {
      "name": "JobRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:TemplateRid": {
      "name": "TemplateRid",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_common:ArchivedStatus": {
      "name": "ArchivedStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ARCHIVED"
          },
          {
            "value": "NOT_ARCHIVED"
          }
        ]
      }
    },
    "type_common:Empty": {
      "name": "Empty",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_common:CheckAlertState": {
      "name": "CheckAlertState",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "pendingReview",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "pendingReview",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:PendingReviewAlertState"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "closedWithFurtherAction",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "closedWithFurtherAction",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:ClosedWithFurtherActionAlertState"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "closedWithIgnore",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "closedWithIgnore",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:ClosedWithIgnoreAlertState"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_common:ClosedWithFurtherActionAlertState": {
      "name": "ClosedWithFurtherActionAlertState",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "comment",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "closedBy",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_common:ClosedWithIgnoreAlertState": {
      "name": "ClosedWithIgnoreAlertState",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "comment",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "closedBy",
            "valueType": {
              "type": "id",
              "value": "type_common:UserRid"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_common:PendingReviewAlertState": {
      "name": "PendingReviewAlertState",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-run:ComparisonRunGroup": {
      "name": "ComparisonRunGroup",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "uuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "uuid"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "offset",
            "valueType": {
              "type": "id",
              "value": "type_comparison-run:Offset"
            }
          },
          {
            "key": "offsetAnchor",
            "valueType": {
              "type": "id",
              "value": "type_comparison-run:OffsetAnchor"
            }
          },
          {
            "key": "runs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_comparison-run:ComparisonRun"
              }
            }
          },
          {
            "key": "color",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:HexColor"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-run:ComparisonRun": {
      "name": "ComparisonRun",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "runRid",
            "valueType": {
              "type": "id",
              "value": "type_common:RunRid"
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "offsetOverride",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_comparison-run:Offset"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-run:Offset": {
      "name": "Offset",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "unit",
            "valueType": {
              "type": "id",
              "value": "type_global:TimeUnit"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-run:OffsetAnchor": {
      "name": "OffsetAnchor",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "run",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "run",
                  "valueType": {
                    "type": "id",
                    "value": "type_comparison-run:OffsetRunAnchor"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "series",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "series",
                  "valueType": {
                    "type": "id",
                    "value": "type_comparison-run:OffsetSeriesAnchor"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_comparison-run:OffsetRunAnchor": {
      "name": "OffsetRunAnchor",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-run:OffsetSeriesAnchor": {
      "name": "OffsetSeriesAnchor",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "seriesVariable",
            "valueType": {
              "type": "id",
              "value": "type_channel-variables:ChannelVariableName"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:ComparisonWorkbookContent": {
      "name": "ComparisonWorkbookContent",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "channelVariables",
            "valueType": {
              "type": "id",
              "value": "type_comparison-workbook-definition:ComparisonChannelVariableMap"
            }
          },
          {
            "description": "visualizations. Charts is a legacy term.",
            "key": "charts",
            "valueType": {
              "type": "id",
              "value": "type_comparison-workbook-definition:ComparisonVizDefinitionMap"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:ComparisonChannelVariableMap": {
      "name": "ComparisonChannelVariableMap",
      "shape": {
        "type": "alias",
        "value": {
          "type": "map",
          "keyType": {
            "type": "id",
            "value": "type_comparison-workbook-definition:VariableName"
          },
          "valueType": {
            "type": "id",
            "value": "type_comparison-workbook-definition:ChannelVariable"
          }
        }
      }
    },
    "type_comparison-workbook-definition:VariableName": {
      "name": "VariableName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_comparison-workbook-definition:ChannelVariable": {
      "name": "ChannelVariable",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "variableName",
            "valueType": {
              "type": "id",
              "value": "type_comparison-workbook-definition:VariableName"
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "id",
              "value": "type_comparison-workbook-definition:ComputeNodeWithContext"
            }
          },
          {
            "key": "dataScope",
            "valueType": {
              "type": "id",
              "value": "type_comparison-workbook-definition:ComparisonWorkbookDataScope"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:ComputeNodeWithContext": {
      "name": "ComputeNodeWithContext",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "computeNode",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ComputeNode"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "type_comparison-workbook-definition:ComparisonWorkbookContext"
            }
          },
          {
            "key": "supplementalContext",
            "valueType": {
              "type": "id",
              "value": "type_comparison-workbook-definition:SupplementalComparisonWorkbookContext"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:ComparisonWorkbookContext": {
      "name": "ComparisonWorkbookContext",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_comparison-workbook-definition:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_comparison-workbook-definition:VariableLocator"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:VariableLocator": {
      "name": "VariableLocator",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "comparisonWorkbookVariable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "comparisonWorkbookVariable",
                  "valueType": {
                    "type": "id",
                    "value": "type_comparison-workbook-definition:VariableName"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "series",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "series",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:ChannelLocator"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_comparison-workbook-definition:SupplementalComparisonWorkbookContext": {
      "name": "SupplementalComparisonWorkbookContext",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "none",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "none",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Empty"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "rangeAggregation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "rangeAggregation",
                  "valueType": {
                    "type": "id",
                    "value": "type_comparison-workbook-definition:RangeAggregationContext"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_comparison-workbook-definition:RangeAggregationContext": {
      "name": "RangeAggregationContext",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variablesToAggregate",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_comparison-workbook-definition:VariableWithAggregation"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:VariableWithAggregation": {
      "name": "VariableWithAggregation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "locator",
            "valueType": {
              "type": "id",
              "value": "type_comparison-workbook-definition:VariableLocator"
            }
          },
          {
            "key": "aggregationType",
            "valueType": {
              "type": "id",
              "value": "type_comparison-workbook-definition:AggregationType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:ComparisonWorkbookDataScope": {
      "name": "ComparisonWorkbookDataScope",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "runs",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "runs",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "id",
                      "value": "type_common:RunRid"
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_comparison-workbook-definition:AggregationType": {
      "name": "AggregationType",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "max",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "max",
                  "valueType": {
                    "type": "id",
                    "value": "type_comparison-workbook-definition:Max"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "min",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "min",
                  "valueType": {
                    "type": "id",
                    "value": "type_comparison-workbook-definition:Min"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "mean",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "mean",
                  "valueType": {
                    "type": "id",
                    "value": "type_comparison-workbook-definition:Mean"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "standardDeviation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "standardDeviation",
                  "valueType": {
                    "type": "id",
                    "value": "type_comparison-workbook-definition:StandardDeviation"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_comparison-workbook-definition:Max": {
      "name": "Max",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:Min": {
      "name": "Min",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:Mean": {
      "name": "Mean",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:StandardDeviation": {
      "name": "StandardDeviation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:ComparisonVizDefinitionMap": {
      "name": "ComparisonVizDefinitionMap",
      "shape": {
        "type": "alias",
        "value": {
          "type": "map",
          "keyType": {
            "type": "id",
            "value": "type_common:VizId"
          },
          "valueType": {
            "type": "id",
            "value": "type_comparison-workbook-definition:VizDefinition"
          }
        }
      }
    },
    "type_comparison-workbook-definition:VizDefinition": {
      "name": "VizDefinition",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "table",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "table",
                  "valueType": {
                    "type": "id",
                    "value": "type_comparison-workbook-definition:ComparisonTableDefinition"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_comparison-workbook-definition:ComparisonTableDefinition": {
      "name": "ComparisonTableDefinition",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_comparison-workbook-definition:ComparisonTableDefinitionV1"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "v2",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v2",
                  "valueType": {
                    "type": "id",
                    "value": "type_comparison-workbook-definition:ComparisonTableDefinitionV2"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_comparison-workbook-definition:RangeAggregationDefinition": {
      "name": "RangeAggregationDefinition",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "dataScope",
            "valueType": {
              "type": "id",
              "value": "type_comparison-workbook-definition:ComparisonWorkbookDataScope"
            }
          },
          {
            "key": "condition",
            "valueType": {
              "type": "id",
              "value": "type_comparison-workbook-definition:ComputeNodeWithContext"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:ComparisonTableDefinitionV1": {
      "name": "ComparisonTableDefinitionV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "rangeAggregations",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_comparison-workbook-definition:VariableName"
              }
            }
          },
          {
            "key": "visualizationOptions",
            "valueType": {
              "type": "id",
              "value": "type_comparison-workbook-definition:ComparisonTableVisualizationOptions"
            }
          },
          {
            "key": "columns",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_comparison-workbook-definition:ComparisonTableColumn"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:ComparisonTableVisualizationOptions": {
      "name": "ComparisonTableVisualizationOptions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "aggregationColors",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_comparison-workbook-definition:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_common:HexColor"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:ComparisonTableDefinitionV2": {
      "name": "ComparisonTableDefinitionV2",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "rangeAggregation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_comparison-workbook-definition:RangeAggregationDefinition"
              }
            }
          },
          {
            "key": "columns",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_comparison-workbook-definition:ComparisonTableColumn"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:ComparisonTableColumn": {
      "name": "ComparisonTableColumn",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "locator",
            "valueType": {
              "type": "id",
              "value": "type_comparison-workbook-definition:VariableLocator"
            }
          },
          {
            "key": "visualizationOptions",
            "valueType": {
              "type": "id",
              "value": "type_comparison-workbook-definition:ComparisonTableColumnVisualizationOptions"
            }
          },
          {
            "description": "optional for backcompatibility.",
            "key": "aggregationType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_comparison-workbook-definition:AggregationType"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:ComparisonTableColumnVisualizationOptions": {
      "name": "ComparisonTableColumnVisualizationOptions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "format",
            "valueType": {
              "type": "id",
              "value": "type_comparison-workbook-definition:ComparisonTableColumnOptions"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_comparison-workbook-definition:ComparisonTableColumnOptions": {
      "name": "ComparisonTableColumnOptions",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "AXIS"
          },
          {
            "value": "BARS"
          }
        ]
      }
    },
    "type_compute-api-v1:ComputableNode": {
      "name": "ComputableNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "ranges",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "ranges",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:SummarizeRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "series",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "series",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:SummarizeSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "value",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:SelectValueNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "cartesian",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "cartesian",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:SummarizeCartesianNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "frequency",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "frequency",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:FrequencyDomainNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_compute-api-v1:NumericSeriesNode": {
      "name": "NumericSeriesNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "raw",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "raw",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RawNumericSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "arithmetic",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "arithmetic",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:ArithmeticSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "bitOperation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "bitOperation",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:BitOperationSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "cumulativeSum",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "cumulativeSum",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:CumulativeSumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "function",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "function",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:NumericSeriesFunction"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "derivative",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "derivative",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:DerivativeSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "rollingOperation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "rollingOperation",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:RollingOperationSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "unaryArithmetic",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "unaryArithmetic",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:UnaryArithmeticSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timeDifference",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeDifference",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:TimeDifferenceSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timeRangeFilter",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeRangeFilter",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:NumericTimeRangeFilterSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timeShift",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeShift",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:NumericTimeShiftSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "union",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "union",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:NumericUnionSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "valueDifference",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "valueDifference",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:ValueDifferenceSeriesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_compute-api-v1:EnumSeriesNode": {
      "name": "EnumSeriesNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "raw",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "raw",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RawEnumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "function",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "function",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:EnumSeriesFunction"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timeRangeFilter",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeRangeFilter",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:EnumTimeRangeFilterSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timeShift",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeShift",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:EnumTimeShiftSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "union",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "union",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:EnumUnionSeriesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_compute-api-v1:RangesNode": {
      "name": "RangesNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "function",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "function",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RangesFunction"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "onChange",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "onChange",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:OnChangeRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "enumFilter",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enumFilter",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:EnumFilterRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "threshold",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "threshold",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:ThresholdingRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "unionRange",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "unionRange",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:UnionRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "intersectRange",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "intersectRange",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:IntersectRangesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_compute-api-v1:CartesianNode": {
      "name": "CartesianNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "scatter",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "scatter",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:ScatterNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_compute-api-v1:SummarizeCartesianNode": {
      "name": "SummarizeCartesianNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:CartesianNode"
            }
          },
          {
            "key": "bounds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_compute-api-v1:CartesianBounds"
              }
            }
          },
          {
            "key": "maxPoints",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:FrequencyDomainNode": {
      "name": "FrequencyDomainNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "fft",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "fft",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:FftNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_compute-api-v1:FftNode": {
      "name": "FftNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:NumericSeriesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:SummarizeSeriesNode": {
      "name": "SummarizeSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:SeriesNode"
            }
          },
          {
            "key": "resolution",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:SeriesNode": {
      "name": "SeriesNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "raw",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "raw",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:RawUntypedSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "enum",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enum",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:EnumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "numeric",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numeric",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:NumericSeriesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_compute-api-v1:SummarizeRangesNode": {
      "name": "SummarizeRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:RangesNode"
            }
          },
          {
            "key": "maxRanges",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:SelectValueNode": {
      "name": "SelectValueNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "firstPoint",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "firstPoint",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:SeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "firstRange",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "firstRange",
                  "valueType": {
                    "type": "id",
                    "value": "type_compute-api-v1:RangesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_compute-api-v1:RollingOperationSeriesNode": {
      "name": "RollingOperationSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:NumericSeriesNode"
            }
          },
          {
            "key": "window",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:Window"
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:RollingOperator"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:Window": {
      "name": "Window",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "duration",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "duration",
                  "valueType": {
                    "type": "id",
                    "value": "type_common:Duration"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_compute-api-v1:VariableValue": {
      "name": "VariableValue",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "series",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "series",
                  "valueType": {
                    "type": "id",
                    "value": "type_Compute:SeriesSpec"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timestamp",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timestamp",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:Timestamp"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_compute-api-v1:Context": {
      "name": "Context",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variables",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_Compute:SeriesSpec"
              }
            }
          },
          {
            "key": "variablesV2",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_compute-api-v1:VariableValue"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:PersistenceWindowConfiguration": {
      "name": "PersistenceWindowConfiguration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "minPoints",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "minDuration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Duration"
              }
            }
          },
          {
            "key": "outputRangeStart",
            "valueType": {
              "type": "id",
              "value": "type_Compute:OutputRangeStart"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:ArithmeticSeriesNode": {
      "name": "ArithmeticSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:LocalVariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_compute-api-v1:NumericSeriesNode"
              }
            }
          },
          {
            "key": "expression",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:CumulativeSumSeriesNode": {
      "name": "CumulativeSumSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:NumericSeriesNode"
            }
          },
          {
            "key": "startTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_Compute:VariableName"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:DerivativeSeriesNode": {
      "name": "DerivativeSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:NumericSeriesNode"
            }
          },
          {
            "key": "timeUnit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:TimeUnit"
              }
            }
          },
          {
            "key": "negativeValuesConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NegativeValueConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:EnumTimeRangeFilterSeriesNode": {
      "name": "EnumTimeRangeFilterSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:EnumSeriesNode"
            }
          },
          {
            "key": "startTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:NumericTimeRangeFilterSeriesNode": {
      "name": "NumericTimeRangeFilterSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:NumericSeriesNode"
            }
          },
          {
            "key": "startTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:EnumTimeShiftSeriesNode": {
      "name": "EnumTimeShiftSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:EnumSeriesNode"
            }
          },
          {
            "key": "duration",
            "valueType": {
              "type": "id",
              "value": "type_common:Duration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:NumericTimeShiftSeriesNode": {
      "name": "NumericTimeShiftSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:NumericSeriesNode"
            }
          },
          {
            "key": "duration",
            "valueType": {
              "type": "id",
              "value": "type_common:Duration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:TimeDifferenceSeriesNode": {
      "name": "TimeDifferenceSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:SeriesNode"
            }
          },
          {
            "key": "timeUnit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:TimeUnit"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:UnaryArithmeticSeriesNode": {
      "name": "UnaryArithmeticSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:NumericSeriesNode"
            }
          },
          {
            "key": "operation",
            "valueType": {
              "type": "id",
              "value": "type_Compute:UnaryArithmeticOperation"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:EnumUnionSeriesNode": {
      "name": "EnumUnionSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_compute-api-v1:EnumSeriesNode"
              }
            }
          },
          {
            "key": "operation",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EnumUnionOperation"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:NumericUnionSeriesNode": {
      "name": "NumericUnionSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_compute-api-v1:NumericSeriesNode"
              }
            }
          },
          {
            "key": "operation",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericUnionOperation"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:ValueDifferenceSeriesNode": {
      "name": "ValueDifferenceSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:NumericSeriesNode"
            }
          },
          {
            "key": "negativeValuesConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NegativeValueConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:BitOperationSeriesNode": {
      "name": "BitOperationSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:NumericSeriesNode"
            }
          },
          {
            "key": "function",
            "valueType": {
              "type": "id",
              "value": "type_Compute:BitOperationFunction"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:UnionRangesNode": {
      "name": "UnionRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_compute-api-v1:RangesNode"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:IntersectRangesNode": {
      "name": "IntersectRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_compute-api-v1:RangesNode"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:EnumFilterRangesNode": {
      "name": "EnumFilterRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:EnumSeriesNode"
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EnumFilterOperator"
            }
          },
          {
            "key": "values",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The minimum number of points for which this condition is satisfied. Must be non-negative. If not present,\nwill default to 1.",
            "key": "minPoints",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The minimum duration for which this condition is satisfied. Must be non-negative. If not present, will\ndefault to 1 nanosecond.",
            "key": "minDuration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Duration"
              }
            }
          },
          {
            "key": "persistenceWindowConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_compute-api-v1:PersistenceWindowConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:ThresholdingRangesNode": {
      "name": "ThresholdingRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:NumericSeriesNode"
            }
          },
          {
            "key": "threshold",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ThresholdOperator"
            }
          },
          {
            "description": "The minimum number of points for which this condition is satisfied. Must be non-negative. If not present,\nwill default to 1.",
            "key": "minPoints",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The minimum duration for which this condition is satisfied. Must be non-negative. If not present, will\ndefault to 1 nanosecond.",
            "key": "minDuration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Duration"
              }
            }
          },
          {
            "key": "persistenceWindowConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_compute-api-v1:PersistenceWindowConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:OnChangeRangesNode": {
      "name": "OnChangeRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:SeriesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:CartesianBounds": {
      "name": "CartesianBounds",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "minX",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "maxX",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "minY",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "maxY",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:ScatterNode": {
      "name": "ScatterNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "x",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:NumericSeriesNode"
            }
          },
          {
            "key": "y",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:NumericSeriesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_compute-api-v1:ComputeNodeRequest": {
      "name": "ComputeNodeRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "node",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:ComputableNode"
            }
          },
          {
            "key": "start",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "end",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "type_compute-api-v1:Context"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_global:TagName": {
      "name": "TagName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_global:TagValue": {
      "name": "TagValue",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_global:Timestamp": {
      "name": "Timestamp",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "seconds",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "nanos",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          },
          {
            "key": "picos",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_global:TimeUnit": {
      "name": "TimeUnit",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "DAYS"
          },
          {
            "value": "HOURS"
          },
          {
            "value": "MINUTES"
          },
          {
            "value": "SECONDS"
          },
          {
            "value": "MILLISECONDS"
          },
          {
            "value": "MICROSECONDS"
          },
          {
            "value": "NANOSECONDS"
          },
          {
            "value": "PICOSECONDS"
          }
        ]
      }
    },
    "type_global:McapChannelTopic": {
      "name": "McapChannelTopic",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_global:McapChannelId": {
      "name": "McapChannelId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "type_global:McapChannelLocator": {
      "name": "McapChannelLocator",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "topic",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "topic",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:McapChannelTopic"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "id",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_global:McapChannelId"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_global:SerializableError": {
      "name": "SerializableError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "errorInstanceId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "statusCode",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_layout:PanelId": {
      "description": "Should expect a uuid. Nested panels should have unique IDs.",
      "name": "PanelId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_layout:VizPanelV1": {
      "name": "VizPanelV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_layout:PanelId"
            }
          },
          {
            "key": "vizId",
            "valueType": {
              "type": "id",
              "value": "type_common:VizId"
            }
          },
          {
            "key": "hideLegend",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_layout:VizPanel": {
      "name": "VizPanel",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_layout:VizPanelV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_layout:ChartPanelV1": {
      "name": "ChartPanelV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_layout:PanelId"
            }
          },
          {
            "key": "chartRid",
            "valueType": {
              "type": "id",
              "value": "type_common:VersionedVizId"
            }
          },
          {
            "key": "hideLegend",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_layout:ChartPanel": {
      "name": "ChartPanel",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_layout:ChartPanelV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_layout:EmptyPanelV1": {
      "name": "EmptyPanelV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_layout:PanelId"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_layout:EmptyPanel": {
      "name": "EmptyPanel",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_layout:EmptyPanelV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_layout:SplitPanelV1": {
      "name": "SplitPanelV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_layout:PanelId"
            }
          },
          {
            "key": "orientation",
            "valueType": {
              "type": "id",
              "value": "type_layout:SplitPanelOrientation"
            }
          },
          {
            "key": "sideOne",
            "valueType": {
              "type": "id",
              "value": "type_layout:Panel"
            }
          },
          {
            "key": "sideTwo",
            "valueType": {
              "type": "id",
              "value": "type_layout:Panel"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_layout:SplitPanel": {
      "name": "SplitPanel",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_layout:SplitPanelV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_layout:SplitPanelOrientation": {
      "name": "SplitPanelOrientation",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "HORIZONTAL"
          },
          {
            "value": "VERTICAL"
          }
        ]
      }
    },
    "type_layout:SingleTabV1": {
      "name": "SingleTabV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "panel",
            "valueType": {
              "type": "id",
              "value": "type_layout:Panel"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_layout:SingleTab": {
      "name": "SingleTab",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_layout:SingleTabV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_layout:TabbedPanelV1": {
      "name": "TabbedPanelV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "type_layout:PanelId"
            }
          },
          {
            "key": "tabs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_layout:SingleTab"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_layout:TabbedPanel": {
      "name": "TabbedPanel",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_layout:TabbedPanelV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_layout:Panel": {
      "name": "Panel",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "viz",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "viz",
                  "valueType": {
                    "type": "id",
                    "value": "type_layout:VizPanel"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "chart",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "chart",
                  "valueType": {
                    "type": "id",
                    "value": "type_layout:ChartPanel"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "empty",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "empty",
                  "valueType": {
                    "type": "id",
                    "value": "type_layout:EmptyPanel"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "split",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "split",
                  "valueType": {
                    "type": "id",
                    "value": "type_layout:SplitPanel"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "tabbed",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "tabbed",
                  "valueType": {
                    "type": "id",
                    "value": "type_layout:TabbedPanel"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_layout:WorkbookLayoutV1": {
      "name": "WorkbookLayoutV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rootPanel",
            "valueType": {
              "type": "id",
              "value": "type_layout:Panel"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_layout:WorkbookLayout": {
      "name": "WorkbookLayout",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_layout:WorkbookLayoutV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_pagination-api:PageToken": {
      "description": "A token that can be used to retrieve the next page of results. This token is intentionally a string to\nallow paging based on a variety of different criteria.",
      "name": "PageToken",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_pagination-api:PageRequest": {
      "name": "PageRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "pageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_pagination-api:PageToken"
              }
            }
          },
          {
            "key": "pageSize",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_pagination-api:PageResponse": {
      "name": "PageResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "nextPageToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_pagination-api:PageToken"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:ResolvedNode": {
      "name": "ResolvedNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "ranges",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "ranges",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:SummarizeRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "series",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "series",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:SummarizeSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "value",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:SelectValueNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "cartesian",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "cartesian",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:SummarizeCartesianNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "frequency",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "frequency",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:FrequencyDomainNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "histogram",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "histogram",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:HistogramNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "geo",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "geo",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:SummarizeGeoNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_resolved-compute-api:NumericSeriesNode": {
      "name": "NumericSeriesNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "arithmetic",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "arithmetic",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:ArithmeticSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "bitOperation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "bitOperation",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:BitOperationSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "cumulativeSum",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "cumulativeSum",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:CumulativeSumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "derivative",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "derivative",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:DerivativeSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "integral",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "integral",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:IntegralSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "max",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "max",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:MaxSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "mean",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "mean",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:MeanSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "min",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "min",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:MinSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "offset",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "offset",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:OffsetSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "product",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "product",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:ProductSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "raw",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "raw",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:RawNumericSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "resample",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "resample",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:NumericResampleSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "rollingOperation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "rollingOperation",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:RollingOperationSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "aggregate",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "aggregate",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:AggregateNumericSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "sum",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "sum",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:SumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "scale",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "scale",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:ScaleSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timeDifference",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeDifference",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:TimeDifferenceSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timeRangeFilter",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeRangeFilter",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:NumericTimeRangeFilterSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timeShift",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeShift",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:NumericTimeShiftSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "unaryArithmetic",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "unaryArithmetic",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:UnaryArithmeticSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "binaryArithmetic",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "binaryArithmetic",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:BinaryArithmeticSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "union",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "union",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:NumericUnionSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "unitConversion",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "unitConversion",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:UnitConversionSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "valueDifference",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "valueDifference",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:ValueDifferenceSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "filterTransformation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "filterTransformation",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:NumericFilterTransformationSeriesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_resolved-compute-api:EnumSeriesNode": {
      "name": "EnumSeriesNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "raw",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "raw",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:RawEnumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "resample",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "resample",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:EnumResampleSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timeRangeFilter",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeRangeFilter",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:EnumTimeRangeFilterSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "timeShift",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeShift",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:EnumTimeShiftSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "union",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "union",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:EnumUnionSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "aggregate",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "aggregate",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:AggregateEnumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "filterTransformation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "filterTransformation",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:EnumFilterTransformationSeriesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_resolved-compute-api:RangesNode": {
      "name": "RangesNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "enumFilter",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enumFilter",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:EnumFilterRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "enumEquality",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enumEquality",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:EnumEqualityRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "extrema",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "extrema",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:ExtremaRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "intersectRange",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "intersectRange",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:IntersectRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "not",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "not",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:NotRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "minMaxThreshold",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "minMaxThreshold",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:MinMaxThresholdRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "onChange",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "onChange",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:OnChangeRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "threshold",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "threshold",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:ThresholdingRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "seriesCrossoverRangesNode",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "seriesCrossoverRangesNode",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:SeriesCrossoverRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "staleRange",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "staleRange",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:StaleRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "unionRange",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "unionRange",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:UnionRangesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "rangeNumericAggregation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "rangeNumericAggregation",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:RangesNumericAggregationNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_resolved-compute-api:CartesianNode": {
      "name": "CartesianNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "scatter",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "scatter",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:ScatterNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_resolved-compute-api:SummarizeCartesianNode": {
      "name": "SummarizeCartesianNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:CartesianNode"
            }
          },
          {
            "key": "bounds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:CartesianBounds"
              }
            }
          },
          {
            "key": "maxPoints",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:FrequencyDomainNode": {
      "name": "FrequencyDomainNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "fft",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "fft",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:FftNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_resolved-compute-api:FftNode": {
      "name": "FftNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:SummarizeGeoNode": {
      "name": "SummarizeGeoNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:GeoNode"
            }
          },
          {
            "key": "summaryStrategy",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:GeoNodeSummaryStrategy"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:GeoNodeSummaryStrategy": {
      "name": "GeoNodeSummaryStrategy",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "temporal",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "temporal",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:GeoNodeTemporalSummary"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_resolved-compute-api:GeoNodeTemporalSummary": {
      "name": "GeoNodeTemporalSummary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "resolution",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long",
                "default": 0
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:GeoNode": {
      "name": "GeoNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "latLongGeoNode",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "latLongGeoNode",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:LatLongGeoNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_resolved-compute-api:LatLongGeoNode": {
      "name": "LatLongGeoNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "latitude",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "longitude",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "bounds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:LatLongBounds"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:LatLongBounds": {
      "name": "LatLongBounds",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "southWest",
            "valueType": {
              "type": "id",
              "value": "type_Compute:LatLongPoint"
            }
          },
          {
            "key": "northEast",
            "valueType": {
              "type": "id",
              "value": "type_Compute:LatLongPoint"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:HistogramNode": {
      "name": "HistogramNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "numericHistogram",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numericHistogram",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:NumericHistogramNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "enumHistogram",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enumHistogram",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:EnumHistogramNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_resolved-compute-api:NumericHistogramNode": {
      "name": "NumericHistogramNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_resolved-compute-api:NumericSeriesNode"
              }
            }
          },
          {
            "key": "bucketStrategy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:NumericHistogramBucketStrategy"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:EnumHistogramNode": {
      "name": "EnumHistogramNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:VariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_resolved-compute-api:EnumSeriesNode"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:NumericHistogramBucketStrategy": {
      "name": "NumericHistogramBucketStrategy",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "bucketCount",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "bucketCount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "bucketWidthAndOffset",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "bucketWidthAndOffset",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:NumericHistogramBucketWidthAndOffset"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_resolved-compute-api:NumericHistogramBucketWidthAndOffset": {
      "name": "NumericHistogramBucketWidthAndOffset",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "width",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:SummarizeSeriesNode": {
      "name": "SummarizeSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:SeriesNode"
            }
          },
          {
            "description": "Resolution of the output series specifying time interval between decimated points.\nPicoseconds for picosecond-granularity dataset, nanoseconds otherwise.",
            "key": "resolution",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Number of points to generate in the output series.",
            "key": "buckets",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:RawUntypedSeriesNode": {
      "name": "RawUntypedSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "series",
            "valueType": {
              "type": "id",
              "value": "type_Compute:SeriesSpec"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:EnumResampleSeriesNode": {
      "name": "EnumResampleSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:EnumSeriesNode"
            }
          },
          {
            "key": "resampleConfiguration",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:ResampleConfiguration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:NumericResampleSeriesNode": {
      "name": "NumericResampleSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "resampleConfiguration",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:ResampleConfiguration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:SeriesNode": {
      "name": "SeriesNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "raw",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "raw",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:RawUntypedSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "enum",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enum",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:EnumSeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "numeric",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numeric",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:NumericSeriesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_resolved-compute-api:SummarizeRangesNode": {
      "name": "SummarizeRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:RangesNode"
            }
          },
          {
            "key": "maxRanges",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:SelectValueNode": {
      "name": "SelectValueNode",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "firstPoint",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "firstPoint",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:SeriesNode"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "firstRange",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "firstRange",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:RangesNode"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_resolved-compute-api:RawNumericSeriesNode": {
      "name": "RawNumericSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "series",
            "valueType": {
              "type": "id",
              "value": "type_Compute:SeriesSpec"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:RawEnumSeriesNode": {
      "name": "RawEnumSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "series",
            "valueType": {
              "type": "id",
              "value": "type_Compute:SeriesSpec"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:RollingOperationSeriesNode": {
      "name": "RollingOperationSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "window",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:Window"
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:RollingOperator"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:Window": {
      "name": "Window",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "duration",
            "valueType": {
              "type": "id",
              "value": "type_common:Duration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:PersistenceWindowConfiguration": {
      "name": "PersistenceWindowConfiguration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "minPoints",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "minDuration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:Duration"
              }
            }
          },
          {
            "key": "outputRangeStart",
            "valueType": {
              "type": "id",
              "value": "type_Compute:OutputRangeStart"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:ArithmeticSeriesNode": {
      "name": "ArithmeticSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "id",
                "value": "type_Compute:LocalVariableName"
              },
              "valueType": {
                "type": "id",
                "value": "type_resolved-compute-api:NumericSeriesNode"
              }
            }
          },
          {
            "key": "expression",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:InterpolationConfiguration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:CumulativeSumSeriesNode": {
      "name": "CumulativeSumSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "startTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:DerivativeSeriesNode": {
      "name": "DerivativeSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "timeUnit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:TimeUnit"
              }
            }
          },
          {
            "key": "negativeValuesConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NegativeValueConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:IntegralSeriesNode": {
      "name": "IntegralSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "startTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          },
          {
            "key": "timeUnit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:TimeUnit"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:EnumTimeRangeFilterSeriesNode": {
      "name": "EnumTimeRangeFilterSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:EnumSeriesNode"
            }
          },
          {
            "key": "startTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:NumericTimeRangeFilterSeriesNode": {
      "name": "NumericTimeRangeFilterSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "startTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          },
          {
            "key": "endTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:Timestamp"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:EnumTimeShiftSeriesNode": {
      "name": "EnumTimeShiftSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:EnumSeriesNode"
            }
          },
          {
            "key": "duration",
            "valueType": {
              "type": "id",
              "value": "type_common:Duration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:NumericTimeShiftSeriesNode": {
      "name": "NumericTimeShiftSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "duration",
            "valueType": {
              "type": "id",
              "value": "type_common:Duration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:TimeDifferenceSeriesNode": {
      "name": "TimeDifferenceSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:SeriesNode"
            }
          },
          {
            "key": "timeUnit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global:TimeUnit"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:UnaryArithmeticSeriesNode": {
      "name": "UnaryArithmeticSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "operation",
            "valueType": {
              "type": "id",
              "value": "type_Compute:UnaryArithmeticOperation"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:BinaryArithmeticSeriesNode": {
      "name": "BinaryArithmeticSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input1",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "input2",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "operation",
            "valueType": {
              "type": "id",
              "value": "type_Compute:BinaryArithmeticOperation"
            }
          },
          {
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:InterpolationConfiguration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:EnumUnionSeriesNode": {
      "name": "EnumUnionSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:EnumSeriesNode"
              }
            }
          },
          {
            "key": "operation",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EnumUnionOperation"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:UnitConversionSeriesNode": {
      "name": "UnitConversionSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "outputUnit",
            "valueType": {
              "type": "id",
              "value": "type_Units:UnitSymbol"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:NumericUnionSeriesNode": {
      "name": "NumericUnionSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:NumericSeriesNode"
              }
            }
          },
          {
            "key": "operation",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericUnionOperation"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:ValueDifferenceSeriesNode": {
      "name": "ValueDifferenceSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "negativeValuesConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NegativeValueConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:NumericFilterTransformationSeriesNode": {
      "name": "NumericFilterTransformationSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "filter",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:RangesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:EnumFilterTransformationSeriesNode": {
      "name": "EnumFilterTransformationSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:EnumSeriesNode"
            }
          },
          {
            "key": "filter",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:RangesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:AggregateEnumSeriesNode": {
      "name": "AggregateEnumSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:EnumSeriesNode"
            }
          },
          {
            "key": "aggregationFunction",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EnumAggregationFunction"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:AggregateNumericSeriesNode": {
      "name": "AggregateNumericSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "aggregationFunction",
            "valueType": {
              "type": "id",
              "value": "type_Compute:NumericAggregationFunction"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:BitOperationSeriesNode": {
      "name": "BitOperationSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "function",
            "valueType": {
              "type": "id",
              "value": "type_Compute:BitOperationFunction"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:MaxSeriesNode": {
      "name": "MaxSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:NumericSeriesNode"
              }
            }
          },
          {
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:InterpolationConfiguration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:MeanSeriesNode": {
      "name": "MeanSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:NumericSeriesNode"
              }
            }
          },
          {
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:InterpolationConfiguration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:MinSeriesNode": {
      "name": "MinSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:NumericSeriesNode"
              }
            }
          },
          {
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:InterpolationConfiguration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:ProductSeriesNode": {
      "name": "ProductSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:NumericSeriesNode"
              }
            }
          },
          {
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:InterpolationConfiguration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:SumSeriesNode": {
      "name": "SumSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:NumericSeriesNode"
              }
            }
          },
          {
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:InterpolationConfiguration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:ScaleSeriesNode": {
      "name": "ScaleSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "scalar",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "scalarUnit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Units:UnitSymbol"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:OffsetSeriesNode": {
      "name": "OffsetSeriesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "scalar",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:InterpolationConfiguration": {
      "name": "InterpolationConfiguration",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "forwardFillInterpolation",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "forwardFillInterpolation",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:ForwardFillInterpolation"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_resolved-compute-api:ForwardFillInterpolation": {
      "name": "ForwardFillInterpolation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "interpolationRadius",
            "valueType": {
              "type": "id",
              "value": "type_common:Duration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:ResampleConfiguration": {
      "name": "ResampleConfiguration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "interval",
            "valueType": {
              "type": "id",
              "value": "type_common:Duration"
            }
          },
          {
            "key": "interpolation",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:ResampleInterpolationConfiguration"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:ResampleInterpolationConfiguration": {
      "name": "ResampleInterpolationConfiguration",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "forwardFillResampleInterpolationConfiguration",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "forwardFillResampleInterpolationConfiguration",
                  "valueType": {
                    "type": "id",
                    "value": "type_resolved-compute-api:ForwardFillResampleInterpolationConfiguration"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_resolved-compute-api:ForwardFillResampleInterpolationConfiguration": {
      "name": "ForwardFillResampleInterpolationConfiguration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:RangesNumericAggregationNode": {
      "name": "RangesNumericAggregationNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "ranges",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:RangesNode"
            }
          },
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "operation",
            "valueType": {
              "type": "id",
              "value": "type_Compute:RangeAggregationOperation"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:UnionRangesNode": {
      "name": "UnionRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:RangesNode"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:IntersectRangesNode": {
      "name": "IntersectRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:RangesNode"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:NotRangesNode": {
      "name": "NotRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:RangesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:SeriesCrossoverRangesNode": {
      "name": "SeriesCrossoverRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputA",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "inputB",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:EnumFilterRangesNode": {
      "name": "EnumFilterRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:EnumSeriesNode"
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EnumFilterOperator"
            }
          },
          {
            "key": "values",
            "valueType": {
              "type": "set",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "persistenceWindowConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:PersistenceWindowConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:EnumEqualityRangesNode": {
      "name": "EnumEqualityRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "inputs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:EnumSeriesNode"
              }
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:EqualityOperator"
            }
          },
          {
            "key": "interpolationConfiguration",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:InterpolationConfiguration"
            }
          },
          {
            "key": "persistenceWindowConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:PersistenceWindowConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:ExtremaRangesNode": {
      "name": "ExtremaRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "returnsPeaks",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "minimumProminence",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:MinMaxThresholdRangesNode": {
      "name": "MinMaxThresholdRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "lowerBound",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "upperBound",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:MinMaxThresholdOperator"
            }
          },
          {
            "key": "persistenceWindowConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:PersistenceWindowConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:ThresholdingRangesNode": {
      "name": "ThresholdingRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "threshold",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "operator",
            "valueType": {
              "type": "id",
              "value": "type_Compute:ThresholdOperator"
            }
          },
          {
            "key": "persistenceWindowConfiguration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_resolved-compute-api:PersistenceWindowConfiguration"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:OnChangeRangesNode": {
      "name": "OnChangeRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:SeriesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:StaleRangesNode": {
      "name": "StaleRangesNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "input",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:SeriesNode"
            }
          },
          {
            "key": "threshold",
            "valueType": {
              "type": "id",
              "value": "type_common:Duration"
            }
          },
          {
            "key": "startTimestamp",
            "valueType": {
              "type": "id",
              "value": "type_global:Timestamp"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:CartesianBounds": {
      "name": "CartesianBounds",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "minX",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "maxX",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "minY",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "maxY",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_resolved-compute-api:ScatterNode": {
      "name": "ScatterNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "x",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          },
          {
            "key": "y",
            "valueType": {
              "type": "id",
              "value": "type_resolved-compute-api:NumericSeriesNode"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:DataSourceRefName": {
      "name": "DataSourceRefName",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_viz-definition:WorkbookVizDefinitionMap": {
      "name": "WorkbookVizDefinitionMap",
      "shape": {
        "type": "alias",
        "value": {
          "type": "map",
          "keyType": {
            "type": "id",
            "value": "type_common:VizId"
          },
          "valueType": {
            "type": "id",
            "value": "type_viz-definition:VizDefinition"
          }
        }
      }
    },
    "type_viz-definition:VizDefinition": {
      "name": "VizDefinition",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "timeSeries",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "timeSeries",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:TimeSeriesChartDefinition"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "cartesian",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "cartesian",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:CartesianChartDefinition"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "frequency",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "frequency",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:FrequencyChartDefinition"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "histogram",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "histogram",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:HistogramChartDefinition"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "video",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "video",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:VideoVizDefinition"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "valueTable",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "valueTable",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:ValueTableDefinition"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "geo",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "geo",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:GeoVizDefinition"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "checklist",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "checklist",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:ChecklistChartDefinition"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:TimeSeriesChartDefinition": {
      "name": "TimeSeriesChartDefinition",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:TimeSeriesChartDefinitionV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:CartesianChartDefinition": {
      "name": "CartesianChartDefinition",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:CartesianChartDefinitionV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:FrequencyChartDefinition": {
      "name": "FrequencyChartDefinition",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:FrequencyChartDefinitionV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:HistogramChartDefinition": {
      "name": "HistogramChartDefinition",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:HistogramChartDefinitionV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:VideoVizDefinition": {
      "name": "VideoVizDefinition",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:VideoVizDefinitionV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:GeoVizDefinition": {
      "name": "GeoVizDefinition",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:GeoVizDefinitionV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:ChecklistChartDefinition": {
      "name": "ChecklistChartDefinition",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:ChecklistChartDefinitionV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:ChecklistChartDefinitionV1": {
      "name": "ChecklistChartDefinitionV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "selectedChecklistRids",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:CartesianChartDefinitionV1": {
      "name": "CartesianChartDefinitionV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "plots",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:CartesianPlot"
              }
            }
          },
          {
            "key": "events",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:Event"
              }
            }
          },
          {
            "key": "comparisonRunGroups",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_comparison-run:ComparisonRunGroup"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "valueAxes",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:ValueAxis"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:FrequencyChartDefinitionV1": {
      "name": "FrequencyChartDefinitionV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "plots",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:FrequencyPlot"
              }
            }
          },
          {
            "key": "events",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:Event"
              }
            }
          },
          {
            "key": "comparisonRunGroups",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_comparison-run:ComparisonRunGroup"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "valueAxes",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:ValueAxis"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:GeoVizDefinitionV1": {
      "name": "GeoVizDefinitionV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "plots",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:GeoPlotFromLatLong"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:GeoPlotFromLatLong": {
      "name": "GeoPlotFromLatLong",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "latitudeVariableName",
            "valueType": {
              "type": "id",
              "value": "type_channel-variables:ChannelVariableName"
            }
          },
          {
            "key": "longitudeVariableName",
            "valueType": {
              "type": "id",
              "value": "type_channel-variables:ChannelVariableName"
            }
          },
          {
            "description": "optional for backcompatibility",
            "key": "secondaryVariables",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_viz-definition:GeoSecondaryVariable"
                }
              }
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "label",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "visualizationOptions",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:GeoPlotVisualizationOptions"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:GeoSecondaryVariable": {
      "name": "GeoSecondaryVariable",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variableName",
            "valueType": {
              "type": "id",
              "value": "type_channel-variables:ChannelVariableName"
            }
          },
          {
            "key": "visualizationOption",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:GeoSecondaryPlotVisualizationOption"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:GeoSecondaryPlotVisualizationOption": {
      "name": "GeoSecondaryPlotVisualizationOption",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "asColors",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "asColors",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:ValueToColorMap"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:ValueToColorMap": {
      "name": "ValueToColorMap",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "numeric",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numeric",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "id",
                      "value": "type_common:HexColor"
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:GeoPlotVisualizationOptions": {
      "name": "GeoPlotVisualizationOptions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "color",
            "valueType": {
              "type": "id",
              "value": "type_common:HexColor"
            }
          },
          {
            "key": "lineStyle",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:GeoLineStyle"
            }
          },
          {
            "description": "If visible, overwrites any existing visualization options on the geo plot.",
            "key": "secondaryColorVisualization",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:GeoPlotSecondaryVisibilityConfig"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:GeoPlotSecondaryVisibilityConfig": {
      "name": "GeoPlotSecondaryVisibilityConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "visible",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "variableName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_channel-variables:ChannelVariableName"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:GeoLineStyle": {
      "name": "GeoLineStyle",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "POINTS"
          }
        ]
      }
    },
    "type_viz-definition:HistogramChartDefinitionV1": {
      "name": "HistogramChartDefinitionV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "plots",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:HistogramPlot"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "displaySettings",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:HistogramDisplaySettings"
            }
          },
          {
            "key": "numericBucketStrategy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_Compute:NumericHistogramBucketStrategy"
              }
            }
          },
          {
            "key": "valueAxis",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:ValueAxis"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:VideoVizDefinitionV1": {
      "name": "VideoVizDefinitionV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "events",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:Event"
              }
            }
          },
          {
            "key": "comparisonRunGroups",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_comparison-run:ComparisonRunGroup"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "refName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:DataSourceRefName"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:TimeSeriesChartDefinitionV1": {
      "name": "TimeSeriesChartDefinitionV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rows",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:TimeSeriesRow"
              }
            }
          },
          {
            "key": "comparisonRunGroups",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_comparison-run:ComparisonRunGroup"
              }
            }
          },
          {
            "key": "events",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:Event"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "valueAxes",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:ValueAxis"
              }
            }
          },
          {
            "key": "thresholds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_viz-definition:AxisThresholdVisualization"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:TimeSeriesRow": {
      "name": "TimeSeriesRow",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "plots",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:TimeSeriesPlot"
              }
            }
          },
          {
            "key": "rowFlexSize",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:TimeSeriesPlot": {
      "name": "TimeSeriesPlot",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variableName",
            "valueType": {
              "type": "id",
              "value": "type_channel-variables:ChannelVariableName"
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "yAxisId",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:AxisId"
            }
          },
          {
            "key": "color",
            "valueType": {
              "type": "id",
              "value": "type_common:HexColor"
            }
          },
          {
            "key": "lineStyle",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:LineStyle"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:CartesianPlot": {
      "name": "CartesianPlot",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "xVariableName",
            "valueType": {
              "type": "id",
              "value": "type_channel-variables:ChannelVariableName"
            }
          },
          {
            "key": "yVariableName",
            "valueType": {
              "type": "id",
              "value": "type_channel-variables:ChannelVariableName"
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "xAxisId",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:AxisId"
            }
          },
          {
            "key": "yAxisId",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:AxisId"
            }
          },
          {
            "key": "color",
            "valueType": {
              "type": "id",
              "value": "type_common:HexColor"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:FrequencyPlot": {
      "name": "FrequencyPlot",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variableName",
            "valueType": {
              "type": "id",
              "value": "type_channel-variables:ChannelVariableName"
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "yAxisId",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:AxisId"
            }
          },
          {
            "key": "color",
            "valueType": {
              "type": "id",
              "value": "type_common:HexColor"
            }
          },
          {
            "key": "lineStyle",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:LineStyle"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:HistogramPlot": {
      "name": "HistogramPlot",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variableName",
            "valueType": {
              "type": "id",
              "value": "type_channel-variables:ChannelVariableName"
            }
          },
          {
            "key": "enabled",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "color",
            "valueType": {
              "type": "id",
              "value": "type_common:HexColor"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:HistogramDisplaySettings": {
      "name": "HistogramDisplaySettings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "stacked",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "sort",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:HistogramSortOrder"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:HistogramSortOrder": {
      "name": "HistogramSortOrder",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "VALUE_ASCENDING"
          },
          {
            "value": "VALUE_DESCENDING"
          },
          {
            "value": "FREQUENCY_ASCENDING"
          },
          {
            "value": "FREQUENCY_DESCENDING"
          }
        ]
      }
    },
    "type_viz-definition:Event": {
      "name": "Event",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "eventUuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "uuid"
              }
            }
          },
          {
            "key": "isPinned",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:ValueAxis": {
      "name": "ValueAxis",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "displayOptions",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:AxisDisplayOptions"
            }
          },
          {
            "key": "range",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:AxisRange"
            }
          },
          {
            "key": "limit",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:AxisRange"
            }
          },
          {
            "key": "position",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:AxisPosition"
            }
          },
          {
            "key": "domainType",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:AxisDomainType"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:AxisDisplayOptions": {
      "name": "AxisDisplayOptions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "showTitle",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "axisWidth",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:AxisDomainType": {
      "name": "AxisDomainType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "NUMERIC"
          },
          {
            "value": "CATEGORICAL"
          }
        ]
      }
    },
    "type_viz-definition:AxisPosition": {
      "name": "AxisPosition",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "LEFT"
          },
          {
            "value": "RIGHT"
          }
        ]
      }
    },
    "type_viz-definition:AxisRange": {
      "name": "AxisRange",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "start",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "end",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:AxisThresholdVisualization": {
      "name": "AxisThresholdVisualization",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "axisId",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:AxisId"
            }
          },
          {
            "description": "Determines it's current visibility in the time series chart.",
            "key": "visibility",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          },
          {
            "key": "thresholds",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:AxisThresholdGroup"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:AxisThresholdGroup": {
      "name": "AxisThresholdGroup",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "lineThresholds",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "lineThresholds",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:LineThresholdGroup"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:LineThresholdGroup": {
      "name": "LineThresholdGroup",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "shadingConfig",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:ThresholdShadingConfig"
            }
          },
          {
            "key": "lines",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:LineThreshold"
              }
            }
          },
          {
            "description": "To supplement a set of line thresholds, the default fill configures how the remaining space (either\nabove or below) should be colored. Transparent if empty.",
            "key": "defaultFill",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:DefaultFill"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:ThresholdShadingConfig": {
      "name": "ThresholdShadingConfig",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ABOVE"
          },
          {
            "value": "BELOW"
          },
          {
            "value": "NONE"
          }
        ]
      }
    },
    "type_viz-definition:DefaultFill": {
      "name": "DefaultFill",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "color",
            "valueType": {
              "type": "id",
              "value": "type_common:HexColor"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:LineThreshold": {
      "name": "LineThreshold",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "label",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "color",
            "valueType": {
              "type": "id",
              "value": "type_common:HexColor"
            }
          },
          {
            "key": "lineStyle",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:ThresholdLineStyle"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:ThresholdLineStyle": {
      "name": "ThresholdLineStyle",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "DOTTED"
          },
          {
            "value": "SOLID"
          },
          {
            "value": "NONE"
          }
        ]
      }
    },
    "type_viz-definition:AxisId": {
      "name": "AxisId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "type_viz-definition:LineStyle": {
      "name": "LineStyle",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:LineStyleV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:LineStyleV1": {
      "name": "LineStyleV1",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "SOLID"
          },
          {
            "value": "DASH"
          }
        ]
      }
    },
    "type_viz-definition:ValueTableDefinition": {
      "name": "ValueTableDefinition",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "v1",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "v1",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:ValueTableDefinitionV1"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:ValueTableDefinitionV1": {
      "name": "ValueTableDefinitionV1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Each channel to be displayed. Based on the data type, the visualisation\noptions and settings will be different.",
            "key": "channels",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_viz-definition:ValueTableChannel"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:ValueTableChannel": {
      "name": "ValueTableChannel",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "numeric",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "numeric",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:NumericValueChannel"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "enum",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "enum",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:EnumValueChannel"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "range",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "range",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:RangeValueChannel"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:NumericValueChannel": {
      "name": "NumericValueChannel",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variableName",
            "valueType": {
              "type": "id",
              "value": "type_channel-variables:ChannelVariableName"
            }
          },
          {
            "key": "visualisation",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:NumericValueVisualisation"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:NumericValueVisualisation": {
      "name": "NumericValueVisualisation",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "raw",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "raw",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:NumericRawVisualisation"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "barGauge",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "barGauge",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:NumericBarGaugeVisualisation"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:NumericRawVisualisation": {
      "name": "NumericRawVisualisation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:NumericBarGaugeVisualisation": {
      "name": "NumericBarGaugeVisualisation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "lowThreshold",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "highThreshold",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:EnumValueChannel": {
      "name": "EnumValueChannel",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variableName",
            "valueType": {
              "type": "id",
              "value": "type_channel-variables:ChannelVariableName"
            }
          },
          {
            "key": "visualisation",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:EnumValueVisualisation"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:EnumValueVisualisation": {
      "name": "EnumValueVisualisation",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "raw",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "raw",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:EnumRawVisualisation"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:EnumRawVisualisation": {
      "name": "EnumRawVisualisation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "colorMap",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "id",
                  "value": "type_common:HexColor"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:RangeValueChannel": {
      "name": "RangeValueChannel",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variableName",
            "valueType": {
              "type": "id",
              "value": "type_channel-variables:ChannelVariableName"
            }
          },
          {
            "key": "visualisation",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:RangeValueVisualisation"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_viz-definition:RangeValueVisualisation": {
      "name": "RangeValueVisualisation",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "raw",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "raw",
                  "valueType": {
                    "type": "id",
                    "value": "type_viz-definition:RangeRawVisualisation"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "type_viz-definition:RangeRawVisualisation": {
      "name": "RangeRawVisualisation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rangeColor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:HexColor"
              }
            }
          },
          {
            "key": "noRangeColor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_common:HexColor"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_workbook-common:WorkbookContent": {
      "name": "WorkbookContent",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "channelVariables",
            "valueType": {
              "type": "id",
              "value": "type_channel-variables:WorkbookChannelVariableMap"
            }
          },
          {
            "description": "map of visualizations. Previously termed \"charts\"",
            "key": "charts",
            "valueType": {
              "type": "id",
              "value": "type_viz-definition:WorkbookVizDefinitionMap"
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "type_workbook-common:UnifiedWorkbookContent": {
      "name": "UnifiedWorkbookContent",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "workbook",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "workbook",
                  "valueType": {
                    "type": "id",
                    "value": "type_workbook-common:WorkbookContent"
                  }
                }
              ]
            }
          },
          {
            "discriminantValue": "comparisonWorkbook",
            "additionalProperties": {
              "extends": [],
              "properties": [
                {
                  "key": "comparisonWorkbook",
                  "valueType": {
                    "type": "id",
                    "value": "type_comparison-workbook-definition:ComparisonWorkbookContent"
                  }
                }
              ]
            }
          }
        ]
      }
    }
  },
  "subpackages": {
    "subpackage_Asset": {
      "subpackageId": "subpackage_Asset",
      "name": "Asset",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-asset",
          "method": "POST",
          "id": "createAsset",
          "originalEndpointId": "endpoint_Asset.createAsset",
          "name": "Create Asset",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/asset"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Asset:CreateAssetRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Asset:Asset"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/asset",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "title": "title",
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "links": [
                  {
                    "url": "url"
                  },
                  {
                    "url": "url"
                  }
                ],
                "dataScopes": [
                  {
                    "dataScopeName": "dataScopeName",
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  }
                ],
                "attachments": ["attachments"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "title": "title",
                "description": "description",
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "links": [
                  {
                    "title": "title",
                    "url": "url"
                  },
                  {
                    "title": "title",
                    "url": "url"
                  }
                ],
                "dataScopes": [
                  {
                    "dataScopeName": "dataScopeName",
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "offset": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "timestampType": "ABSOLUTE",
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  },
                  {
                    "dataScopeName": "dataScopeName",
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "offset": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "timestampType": "ABSOLUTE",
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  }
                ],
                "createdBy": "createdBy",
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z",
                "attachments": ["attachments"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "title",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "url": "url"
                    },
                    {
                      "url": "url"
                    }
                  ],
                  "dataScopes": [
                    {
                      "dataScopeName": "dataScopeName",
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  ],
                  "attachments": ["attachments"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "title": "title",
                  "description": "description",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "title": "title",
                      "url": "url"
                    },
                    {
                      "title": "title",
                      "url": "url"
                    }
                  ],
                  "dataScopes": [
                    {
                      "dataScopeName": "dataScopeName",
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    },
                    {
                      "dataScopeName": "dataScopeName",
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  ],
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "attachments": ["attachments"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-asset",
          "method": "PUT",
          "id": "updateAsset",
          "originalEndpointId": "endpoint_Asset.updateAsset",
          "name": "Update Asset",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:AssetRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/asset/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Asset:UpdateAssetRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Asset:Asset"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/asset/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "title": "title",
                "description": "description",
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "links": [
                  {
                    "title": "title",
                    "url": "url"
                  },
                  {
                    "title": "title",
                    "url": "url"
                  }
                ],
                "dataScopes": [
                  {
                    "dataScopeName": "dataScopeName",
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "offset": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "timestampType": "ABSOLUTE",
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  },
                  {
                    "dataScopeName": "dataScopeName",
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "offset": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "timestampType": "ABSOLUTE",
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  }
                ],
                "createdBy": "createdBy",
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z",
                "attachments": ["attachments"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "title": "title",
                  "description": "description",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "title": "title",
                      "url": "url"
                    },
                    {
                      "title": "title",
                      "url": "url"
                    }
                  ],
                  "dataScopes": [
                    {
                      "dataScopeName": "dataScopeName",
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    },
                    {
                      "dataScopeName": "dataScopeName",
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  ],
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "attachments": ["attachments"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "add-data-scopes-to-asset",
          "method": "POST",
          "id": "addDataScopesToAsset",
          "originalEndpointId": "endpoint_Asset.addDataScopesToAsset",
          "name": "Add Data Scopes To Asset",
          "path": {
            "pathParameters": [
              {
                "key": "assetRid",
                "type": {
                  "type": "id",
                  "value": "type_common:AssetRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/asset/"
              },
              {
                "type": "pathParameter",
                "value": "assetRid"
              },
              {
                "type": "literal",
                "value": "/data-sources"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Asset:AddDataScopesToAssetRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Asset:Asset"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/asset/assetRid/data-sources",
              "pathParameters": {
                "assetRid": "assetRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "dataScopes": [
                  {
                    "dataScopeName": "dataScopeName",
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "title": "title",
                "description": "description",
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "links": [
                  {
                    "title": "title",
                    "url": "url"
                  },
                  {
                    "title": "title",
                    "url": "url"
                  }
                ],
                "dataScopes": [
                  {
                    "dataScopeName": "dataScopeName",
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "offset": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "timestampType": "ABSOLUTE",
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  },
                  {
                    "dataScopeName": "dataScopeName",
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "offset": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "timestampType": "ABSOLUTE",
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  }
                ],
                "createdBy": "createdBy",
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z",
                "attachments": ["attachments"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "dataScopes": [
                    {
                      "dataScopeName": "dataScopeName",
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "title": "title",
                  "description": "description",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "title": "title",
                      "url": "url"
                    },
                    {
                      "title": "title",
                      "url": "url"
                    }
                  ],
                  "dataScopes": [
                    {
                      "dataScopeName": "dataScopeName",
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    },
                    {
                      "dataScopeName": "dataScopeName",
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  ],
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "attachments": ["attachments"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-assets",
          "method": "POST",
          "id": "getAssets",
          "originalEndpointId": "endpoint_Asset.getAssets",
          "name": "Get Assets",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/asset/multiple"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:AssetRid"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_common:AssetRid"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_Asset:Asset"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/asset/multiple",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": ["string"],
              "responseStatusCode": 200,
              "responseBody": {
                "string": {
                  "rid": "rid",
                  "title": "title",
                  "description": "description",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "title": "title",
                      "url": "url"
                    },
                    {
                      "title": "title",
                      "url": "url"
                    }
                  ],
                  "dataScopes": [
                    {
                      "dataScopeName": "dataScopeName",
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    },
                    {
                      "dataScopeName": "dataScopeName",
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  ],
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "attachments": ["attachments"]
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": ["string"]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "string": {
                    "rid": "rid",
                    "title": "title",
                    "description": "description",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "links": [
                      {
                        "title": "title",
                        "url": "url"
                      },
                      {
                        "title": "title",
                        "url": "url"
                      }
                    ],
                    "dataScopes": [
                      {
                        "dataScopeName": "dataScopeName",
                        "dataSource": {
                          "type": "dataset",
                          "dataset": "dataSource"
                        },
                        "offset": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "timestampType": "ABSOLUTE",
                        "seriesTags": {
                          "seriesTags": "seriesTags"
                        }
                      },
                      {
                        "dataScopeName": "dataScopeName",
                        "dataSource": {
                          "type": "dataset",
                          "dataset": "dataSource"
                        },
                        "offset": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "timestampType": "ABSOLUTE",
                        "seriesTags": {
                          "seriesTags": "seriesTags"
                        }
                      }
                    ],
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "attachments": ["attachments"]
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "archive",
          "method": "POST",
          "id": "archive",
          "originalEndpointId": "endpoint_Asset.archive",
          "name": "Archive",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:AssetRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/archive/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/archive/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "unarchive",
          "method": "POST",
          "id": "unarchive",
          "originalEndpointId": "endpoint_Asset.unarchive",
          "name": "Unarchive",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:AssetRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/unarchive/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/unarchive/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-assets",
          "method": "POST",
          "id": "searchAssets",
          "originalEndpointId": "endpoint_Asset.searchAssets",
          "name": "Search Assets",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/search-assets"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Asset:SearchAssetsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Asset:SearchAssetsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/search-assets",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "sort": {
                  "isDescending": true,
                  "field": "CREATED_AT"
                },
                "query": {
                  "type": "searchText",
                  "searchText": "query"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "rid": "rid",
                    "title": "title",
                    "description": "description",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "links": [
                      {
                        "title": "title",
                        "url": "url"
                      },
                      {
                        "title": "title",
                        "url": "url"
                      }
                    ],
                    "dataScopes": [
                      {
                        "dataScopeName": "dataScopeName",
                        "dataSource": {
                          "type": "dataset",
                          "dataset": "dataSource"
                        },
                        "offset": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "timestampType": "ABSOLUTE",
                        "seriesTags": {
                          "seriesTags": "seriesTags"
                        }
                      },
                      {
                        "dataScopeName": "dataScopeName",
                        "dataSource": {
                          "type": "dataset",
                          "dataset": "dataSource"
                        },
                        "offset": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "timestampType": "ABSOLUTE",
                        "seriesTags": {
                          "seriesTags": "seriesTags"
                        }
                      }
                    ],
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "attachments": ["attachments"]
                  },
                  {
                    "rid": "rid",
                    "title": "title",
                    "description": "description",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "links": [
                      {
                        "title": "title",
                        "url": "url"
                      },
                      {
                        "title": "title",
                        "url": "url"
                      }
                    ],
                    "dataScopes": [
                      {
                        "dataScopeName": "dataScopeName",
                        "dataSource": {
                          "type": "dataset",
                          "dataset": "dataSource"
                        },
                        "offset": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "timestampType": "ABSOLUTE",
                        "seriesTags": {
                          "seriesTags": "seriesTags"
                        }
                      },
                      {
                        "dataScopeName": "dataScopeName",
                        "dataSource": {
                          "type": "dataset",
                          "dataset": "dataSource"
                        },
                        "offset": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "timestampType": "ABSOLUTE",
                        "seriesTags": {
                          "seriesTags": "seriesTags"
                        }
                      }
                    ],
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "attachments": ["attachments"]
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "sort": {
                    "isDescending": true,
                    "field": "CREATED_AT"
                  },
                  "query": {
                    "type": "searchText",
                    "searchText": "query"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "rid": "rid",
                      "title": "title",
                      "description": "description",
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "links": [
                        {
                          "title": "title",
                          "url": "url"
                        },
                        {
                          "title": "title",
                          "url": "url"
                        }
                      ],
                      "dataScopes": [
                        {
                          "dataScopeName": "dataScopeName",
                          "dataSource": {
                            "type": "dataset",
                            "dataset": "dataSource"
                          },
                          "offset": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "timestampType": "ABSOLUTE",
                          "seriesTags": {
                            "seriesTags": "seriesTags"
                          }
                        },
                        {
                          "dataScopeName": "dataScopeName",
                          "dataSource": {
                            "type": "dataset",
                            "dataset": "dataSource"
                          },
                          "offset": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "timestampType": "ABSOLUTE",
                          "seriesTags": {
                            "seriesTags": "seriesTags"
                          }
                        }
                      ],
                      "createdBy": "createdBy",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "attachments": ["attachments"]
                    },
                    {
                      "rid": "rid",
                      "title": "title",
                      "description": "description",
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "links": [
                        {
                          "title": "title",
                          "url": "url"
                        },
                        {
                          "title": "title",
                          "url": "url"
                        }
                      ],
                      "dataScopes": [
                        {
                          "dataScopeName": "dataScopeName",
                          "dataSource": {
                            "type": "dataset",
                            "dataset": "dataSource"
                          },
                          "offset": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "timestampType": "ABSOLUTE",
                          "seriesTags": {
                            "seriesTags": "seriesTags"
                          }
                        },
                        {
                          "dataScopeName": "dataScopeName",
                          "dataSource": {
                            "type": "dataset",
                            "dataset": "dataSource"
                          },
                          "offset": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "timestampType": "ABSOLUTE",
                          "seriesTags": {
                            "seriesTags": "seriesTags"
                          }
                        }
                      ],
                      "createdBy": "createdBy",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "attachments": ["attachments"]
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-asset-attachments",
          "method": "POST",
          "id": "updateAssetAttachments",
          "originalEndpointId": "endpoint_Asset.updateAssetAttachments",
          "name": "Update Asset Attachments",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:AssetRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/asset/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/attachments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Asset:UpdateAttachmentsRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/asset/rid/attachments",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "attachmentsToAdd": ["attachmentsToAdd"],
                "attachmentsToRemove": ["attachmentsToRemove"]
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "attachmentsToAdd": ["attachmentsToAdd"],
                  "attachmentsToRemove": ["attachmentsToRemove"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Asset:DataScopeName",
        "type_Asset:SeriesTagName",
        "type_Asset:SeriesTagValue",
        "type_Asset:Asset",
        "type_Asset:AddDataScopesToAssetRequest",
        "type_Asset:CreateAssetRequest",
        "type_Asset:UpdateAssetRequest",
        "type_Asset:SortOptions",
        "type_Asset:SortField",
        "type_Asset:SearchAssetsRequest",
        "type_Asset:SearchAssetsQuery",
        "type_Asset:SearchAssetsResponse",
        "type_Asset:Channel",
        "type_Asset:Unit",
        "type_Asset:SeriesDataType",
        "type_Asset:ChannelMetadata",
        "type_Asset:SearchAssetChannelsRequest",
        "type_Asset:SearchAssetChannelsResponse",
        "type_Asset:CreateAssetDataScope",
        "type_Asset:AssetDataScope",
        "type_Asset:UpdateAttachmentsRequest"
      ],
      "subpackages": [],
      "urlSlug": "asset",
      "description": "An asset is a physical entity within an organization, such as a vehicle or ground station. Assets are comprised\nof some metadata about the data, as well as a set of data scopes that define the data belonging to the asset. API\nendpoints allow for CRUD operations on asset objects.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Attachment": {
      "subpackageId": "subpackage_Attachment",
      "name": "Attachment",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create",
          "method": "POST",
          "id": "create",
          "originalEndpointId": "endpoint_Attachment.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/attachments/v1"
              },
              {
                "type": "literal",
                "value": "/attachments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Attachment:CreateAttachmentRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Attachment:Attachment"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/attachments/v1/attachments",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "s3Path": "s3Path",
                "title": "title",
                "description": "description",
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "title": "title",
                "s3Path": "s3Path",
                "fileType": "fileType",
                "description": "description",
                "createdBy": "createdBy",
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "createdAt": "2024-01-15T09:30:00Z",
                "isArchived": true
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "s3Path": "s3Path",
                  "title": "title",
                  "description": "description",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "title": "title",
                  "s3Path": "s3Path",
                  "fileType": "fileType",
                  "description": "description",
                  "createdBy": "createdBy",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "createdAt": "2024-01-15T09:30:00Z",
                  "isArchived": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get",
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_Attachment.get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Attachment:AttachmentRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/attachments/v1"
              },
              {
                "type": "literal",
                "value": "/attachments/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Attachment:Attachment"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/attachments/v1/attachments/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "title": "title",
                "s3Path": "s3Path",
                "fileType": "fileType",
                "description": "description",
                "createdBy": "createdBy",
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "createdAt": "2024-01-15T09:30:00Z",
                "isArchived": true
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "title": "title",
                  "s3Path": "s3Path",
                  "fileType": "fileType",
                  "description": "description",
                  "createdBy": "createdBy",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "createdAt": "2024-01-15T09:30:00Z",
                  "isArchived": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-batch",
          "method": "POST",
          "id": "getBatch",
          "originalEndpointId": "endpoint_Attachment.getBatch",
          "name": "Get Batch",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/attachments/v1"
              },
              {
                "type": "literal",
                "value": "/attachments/batch"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Attachment:GetAttachmentsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Attachment:GetAttachmentsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/attachments/v1/attachments/batch",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "attachmentRids": ["attachmentRids"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "response": [
                  {
                    "rid": "rid",
                    "title": "title",
                    "s3Path": "s3Path",
                    "fileType": "fileType",
                    "description": "description",
                    "createdBy": "createdBy",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "createdAt": "2024-01-15T09:30:00Z",
                    "isArchived": true
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "attachmentRids": ["attachmentRids"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "response": [
                    {
                      "rid": "rid",
                      "title": "title",
                      "s3Path": "s3Path",
                      "fileType": "fileType",
                      "description": "description",
                      "createdBy": "createdBy",
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "createdAt": "2024-01-15T09:30:00Z",
                      "isArchived": true
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-content",
          "method": "GET",
          "id": "getContent",
          "originalEndpointId": "endpoint_Attachment.getContent",
          "name": "Get Content",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Attachment:AttachmentRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/attachments/v1"
              },
              {
                "type": "literal",
                "value": "/attachments/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/content"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "fileDownload"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/attachments/v1/attachments/rid/content",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "filename",
                "value": "<bytes>"
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update",
          "method": "PUT",
          "id": "update",
          "originalEndpointId": "endpoint_Attachment.update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Attachment:AttachmentRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/attachments/v1"
              },
              {
                "type": "literal",
                "value": "/attachments/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Attachment:UpdateAttachmentRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Attachment:Attachment"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/attachments/v1/attachments/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "title": "title",
                "s3Path": "s3Path",
                "fileType": "fileType",
                "description": "description",
                "createdBy": "createdBy",
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "createdAt": "2024-01-15T09:30:00Z",
                "isArchived": true
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "title": "title",
                  "s3Path": "s3Path",
                  "fileType": "fileType",
                  "description": "description",
                  "createdBy": "createdBy",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "createdAt": "2024-01-15T09:30:00Z",
                  "isArchived": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "archive",
          "method": "PUT",
          "id": "archive",
          "originalEndpointId": "endpoint_Attachment.archive",
          "name": "Archive",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Attachment:AttachmentRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/attachments/v1"
              },
              {
                "type": "literal",
                "value": "/attachments/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/archive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/attachments/v1/attachments/rid/archive",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "unarchive",
          "method": "PUT",
          "id": "unarchive",
          "originalEndpointId": "endpoint_Attachment.unarchive",
          "name": "Unarchive",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Attachment:AttachmentRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/attachments/v1"
              },
              {
                "type": "literal",
                "value": "/attachments/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/unarchive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/attachments/v1/attachments/rid/unarchive",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Attachment:S3Path",
        "type_Attachment:AttachmentRid",
        "type_Attachment:Attachment",
        "type_Attachment:Token",
        "type_Attachment:PropertyName",
        "type_Attachment:PropertyValue",
        "type_Attachment:Property",
        "type_Attachment:Label",
        "type_Attachment:CreateAttachmentRequest",
        "type_Attachment:UpdateAttachmentRequest",
        "type_Attachment:GetAttachmentsRequest",
        "type_Attachment:GetAttachmentsResponse",
        "type_Attachment:SearchAttachmentsQuery"
      ],
      "subpackages": [],
      "urlSlug": "attachment",
      "description": "The attachment service provides functionality for creating, updating, and archiving attachments uploaded to S3.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Authentication": {
      "subpackageId": "subpackage_Authentication",
      "name": "Authentication",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-user",
          "method": "POST",
          "id": "createUser",
          "originalEndpointId": "endpoint_Authentication.createUser",
          "name": "Create User",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authentication/v1"
              },
              {
                "type": "literal",
                "value": "/users"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authentication:CreateUserRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authentication:User"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authentication/v1/users",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "displayName": "displayName",
                "email": "email",
                "orgUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "displayName": "displayName",
                "username": "username",
                "email": "email",
                "orgRid": "orgRid"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "displayName": "displayName",
                  "email": "email",
                  "orgUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "displayName": "displayName",
                  "username": "username",
                  "email": "email",
                  "orgRid": "orgRid"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "add-to-organization",
          "method": "POST",
          "id": "addToOrganization",
          "originalEndpointId": "endpoint_Authentication.addToOrganization",
          "name": "Add To Organization",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authentication/v1"
              },
              {
                "type": "literal",
                "value": "/users/add-to-organization"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authentication:AddToOrganizationRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authentication/v1/users/add-to-organization",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "userUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "orgUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "userUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "orgUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Authentication:User",
        "type_Authentication:CreateUserRequest",
        "type_Authentication:AddToOrganizationRequest"
      ],
      "subpackages": [],
      "urlSlug": "authentication",
      "description": "An internal-use-only service for managing users and org-memberships.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_AuthenticationServiceV2": {
      "subpackageId": "subpackage_AuthenticationServiceV2",
      "name": "AuthenticationServiceV2",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-my-profile",
          "method": "GET",
          "id": "getMyProfile",
          "originalEndpointId": "endpoint_AuthenticationServiceV2.getMyProfile",
          "name": "Get My Profile",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authentication/v2"
              },
              {
                "type": "literal",
                "value": "/my/profile"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:UserV2"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authentication/v2/my/profile",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "orgRid": "orgRid",
                "email": "email",
                "displayName": "displayName",
                "avatarUrl": "avatarUrl"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "orgRid": "orgRid",
                  "email": "email",
                  "displayName": "displayName",
                  "avatarUrl": "avatarUrl"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-my-profile",
          "method": "PUT",
          "id": "updateMyProfile",
          "originalEndpointId": "endpoint_AuthenticationServiceV2.updateMyProfile",
          "name": "Update My Profile",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authentication/v2"
              },
              {
                "type": "literal",
                "value": "/my/profile"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:UpdateMyProfileRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:UserV2"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authentication/v2/my/profile",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "displayName": "displayName"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "orgRid": "orgRid",
                "email": "email",
                "displayName": "displayName",
                "avatarUrl": "avatarUrl"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "displayName": "displayName"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "orgRid": "orgRid",
                  "email": "email",
                  "displayName": "displayName",
                  "avatarUrl": "avatarUrl"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-my-settings",
          "method": "GET",
          "id": "getMySettings",
          "originalEndpointId": "endpoint_AuthenticationServiceV2.getMySettings",
          "name": "Get My Settings",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authentication/v2"
              },
              {
                "type": "literal",
                "value": "/my/settings"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:UserSettings"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authentication/v2/my/settings",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "defaultTimeRangeType": "DEFAULT",
                "appearance": "SYSTEM",
                "timezone": "LOCAL",
                "timeSeriesHoverTooltipConcise": true
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "defaultTimeRangeType": "DEFAULT",
                  "appearance": "SYSTEM",
                  "timezone": "LOCAL",
                  "timeSeriesHoverTooltipConcise": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-my-settings",
          "method": "PUT",
          "id": "updateMySettings",
          "originalEndpointId": "endpoint_AuthenticationServiceV2.updateMySettings",
          "name": "Update My Settings",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authentication/v2"
              },
              {
                "type": "literal",
                "value": "/my/settings"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:UserSettings"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:UserSettings"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authentication/v2/my/settings",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "defaultTimeRangeType": "DEFAULT",
                "appearance": "SYSTEM",
                "timezone": "LOCAL",
                "timeSeriesHoverTooltipConcise": true
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "defaultTimeRangeType": "DEFAULT",
                  "appearance": "SYSTEM",
                  "timezone": "LOCAL",
                  "timeSeriesHoverTooltipConcise": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-my-org-settings",
          "method": "GET",
          "id": "getMyOrgSettings",
          "originalEndpointId": "endpoint_AuthenticationServiceV2.getMyOrgSettings",
          "name": "Get My Org Settings",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authentication/v2"
              },
              {
                "type": "literal",
                "value": "/org/settings"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:OrgSettings"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authentication/v2/org/settings",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "defaultTimeRangeType": "DEFAULT"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "defaultTimeRangeType": "DEFAULT"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-my-org-settings",
          "method": "PUT",
          "id": "updateMyOrgSettings",
          "originalEndpointId": "endpoint_AuthenticationServiceV2.updateMyOrgSettings",
          "name": "Update My Org Settings",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authentication/v2"
              },
              {
                "type": "literal",
                "value": "/org/settings"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:OrgSettings"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:OrgSettings"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authentication/v2/org/settings",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "defaultTimeRangeType": "DEFAULT"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "defaultTimeRangeType": "DEFAULT"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-users",
          "method": "GET",
          "id": "searchUsers",
          "originalEndpointId": "endpoint_AuthenticationServiceV2.searchUsers",
          "name": "Search Users",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authentication/v2"
              },
              {
                "type": "literal",
                "value": "/users"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "searchText",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "pageSize",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:SearchUsersResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authentication/v2/users",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "users": [
                  {
                    "rid": "rid",
                    "orgRid": "orgRid",
                    "email": "email",
                    "displayName": "displayName",
                    "avatarUrl": "avatarUrl"
                  }
                ],
                "total": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "users": [
                    {
                      "rid": "rid",
                      "orgRid": "orgRid",
                      "email": "email",
                      "displayName": "displayName",
                      "avatarUrl": "avatarUrl"
                    }
                  ],
                  "total": 1
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-users-v-2",
          "method": "POST",
          "id": "searchUsersV2",
          "originalEndpointId": "endpoint_AuthenticationServiceV2.searchUsersV2",
          "name": "Search Users V 2",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authentication/v2"
              },
              {
                "type": "literal",
                "value": "/users"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:SearchUsersRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:SearchUsersResponseV2"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authentication/v2/users",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "query": {
                  "type": "and",
                  "and": [
                    {
                      "type": "and",
                      "and": [
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "and": [
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "rid": "rid",
                    "orgRid": "orgRid",
                    "email": "email",
                    "displayName": "displayName",
                    "avatarUrl": "avatarUrl"
                  },
                  {
                    "rid": "rid",
                    "orgRid": "orgRid",
                    "email": "email",
                    "displayName": "displayName",
                    "avatarUrl": "avatarUrl"
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "query": {
                    "type": "and",
                    "and": [
                      {
                        "type": "and",
                        "and": [
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "and",
                        "and": [
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "rid": "rid",
                      "orgRid": "orgRid",
                      "email": "email",
                      "displayName": "displayName",
                      "avatarUrl": "avatarUrl"
                    },
                    {
                      "rid": "rid",
                      "orgRid": "orgRid",
                      "email": "email",
                      "displayName": "displayName",
                      "avatarUrl": "avatarUrl"
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-users",
          "method": "POST",
          "id": "getUsers",
          "originalEndpointId": "endpoint_AuthenticationServiceV2.getUsers",
          "name": "Get Users",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authentication/v2"
              },
              {
                "type": "literal",
                "value": "/users/batch"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_AuthenticationServiceV2:UserRid"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_AuthenticationServiceV2:UserV2"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authentication/v2/users/batch",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": ["string"],
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "orgRid": "orgRid",
                  "email": "email",
                  "displayName": "displayName",
                  "avatarUrl": "avatarUrl"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": ["string"]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "orgRid": "orgRid",
                    "email": "email",
                    "displayName": "displayName",
                    "avatarUrl": "avatarUrl"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-user",
          "method": "GET",
          "id": "getUser",
          "originalEndpointId": "endpoint_AuthenticationServiceV2.getUser",
          "name": "Get User",
          "path": {
            "pathParameters": [
              {
                "key": "userRid",
                "type": {
                  "type": "id",
                  "value": "type_AuthenticationServiceV2:UserRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/authentication/v2"
              },
              {
                "type": "literal",
                "value": "/users/"
              },
              {
                "type": "pathParameter",
                "value": "userRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_AuthenticationServiceV2:UserV2"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authentication/v2/users/userRid",
              "pathParameters": {
                "userRid": "userRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "orgRid": "orgRid",
                "email": "email",
                "displayName": "displayName",
                "avatarUrl": "avatarUrl"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "orgRid": "orgRid",
                  "email": "email",
                  "displayName": "displayName",
                  "avatarUrl": "avatarUrl"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_AuthenticationServiceV2:DefaultTimeRangeTypeSetting",
        "type_AuthenticationServiceV2:AppearanceSetting",
        "type_AuthenticationServiceV2:TimezoneSetting",
        "type_AuthenticationServiceV2:OrgRid",
        "type_AuthenticationServiceV2:OrgSettings",
        "type_AuthenticationServiceV2:UserRid",
        "type_AuthenticationServiceV2:UserV2",
        "type_AuthenticationServiceV2:UserSettings",
        "type_AuthenticationServiceV2:Token",
        "type_AuthenticationServiceV2:SortByField",
        "type_AuthenticationServiceV2:SortBy",
        "type_AuthenticationServiceV2:SearchUsersQuery",
        "type_AuthenticationServiceV2:SearchUsersRequest",
        "type_AuthenticationServiceV2:SearchUsersResponse",
        "type_AuthenticationServiceV2:SearchUsersResponseV2",
        "type_AuthenticationServiceV2:UpdateMyProfileRequest"
      ],
      "subpackages": [],
      "urlSlug": "authentication-service-v-2",
      "description": "This service provides operations for managing user and org profiles/settings.\nIts name is a bit of a misnomer.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Authorization": {
      "subpackageId": "subpackage_Authorization",
      "name": "Authorization",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "authorize",
          "method": "POST",
          "id": "authorize",
          "originalEndpointId": "endpoint_Authorization.authorize",
          "name": "Authorize",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authorization/v1"
              },
              {
                "type": "literal",
                "value": "/authorize"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authorization:AuthorizationRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authorization/v1/authorize",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "rids": ["rids"]
              },
              "responseStatusCode": 200,
              "responseBody": ["string"],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "rids": ["rids"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": ["string"]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "register",
          "method": "POST",
          "id": "register",
          "originalEndpointId": "endpoint_Authorization.register",
          "name": "Register",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authorization/v1"
              },
              {
                "type": "literal",
                "value": "/register"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authorization:RegistrationRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authorization/v1/register",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "rids": ["rids"]
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "rids": ["rids"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "check-admin",
          "method": "GET",
          "id": "checkAdmin",
          "originalEndpointId": "endpoint_Authorization.checkAdmin",
          "name": "Check Admin",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authorization/v1"
              },
              {
                "type": "literal",
                "value": "/checkAdmin"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authorization/v1/checkAdmin",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-access-token",
          "method": "POST",
          "id": "getAccessToken",
          "originalEndpointId": "endpoint_Authorization.getAccessToken",
          "name": "Get Access Token",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authorization/v1"
              },
              {
                "type": "literal",
                "value": "/access-token"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authorization:GetAccessTokenRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authorization:GetAccessTokenResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authorization/v1/access-token",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "idToken": "idToken",
                "accessToken": "accessToken"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "accessToken": "accessToken",
                "expiresAtSeconds": 1000000,
                "userUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "orgUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "idToken": "idToken",
                  "accessToken": "accessToken"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "accessToken": "accessToken",
                  "expiresAtSeconds": 1000000,
                  "userUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "orgUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-org-assignment-rules",
          "method": "GET",
          "id": "getOrgAssignmentRules",
          "originalEndpointId": "endpoint_Authorization.getOrgAssignmentRules",
          "name": "Get Org Assignment Rules",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authorization/v1"
              },
              {
                "type": "literal",
                "value": "/org-assignment-rules"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authorization:OrgAssignmentRulesResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authorization/v1/org-assignment-rules",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rules": [
                  {
                    "condition": {
                      "type": "or",
                      "or": [
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "orgRid": "orgRid"
                  },
                  {
                    "condition": {
                      "type": "or",
                      "or": [
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "orgRid": "orgRid"
                  }
                ],
                "version": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rules": [
                    {
                      "condition": {
                        "type": "or",
                        "or": [
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "orgRid": "orgRid"
                    },
                    {
                      "condition": {
                        "type": "or",
                        "or": [
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "orgRid": "orgRid"
                    }
                  ],
                  "version": 1
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "set-all-org-assignment-rules",
          "method": "POST",
          "id": "setAllOrgAssignmentRules",
          "originalEndpointId": "endpoint_Authorization.setAllOrgAssignmentRules",
          "name": "Set All Org Assignment Rules",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authorization/v1"
              },
              {
                "type": "literal",
                "value": "/org-assignment-rules/set-all"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authorization:SetOrgAssignmentRulesRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authorization:OrgAssignmentRulesResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authorization/v1/org-assignment-rules/set-all",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "rules": [
                  {
                    "condition": {
                      "type": "or",
                      "or": [
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "orgRid": "orgRid"
                  },
                  {
                    "condition": {
                      "type": "or",
                      "or": [
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "orgRid": "orgRid"
                  }
                ],
                "lastVersion": 1
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rules": [
                  {
                    "condition": {
                      "type": "or",
                      "or": [
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "orgRid": "orgRid"
                  },
                  {
                    "condition": {
                      "type": "or",
                      "or": [
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "orgRid": "orgRid"
                  }
                ],
                "version": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "rules": [
                    {
                      "condition": {
                        "type": "or",
                        "or": [
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "orgRid": "orgRid"
                    },
                    {
                      "condition": {
                        "type": "or",
                        "or": [
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "orgRid": "orgRid"
                    }
                  ],
                  "lastVersion": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rules": [
                    {
                      "condition": {
                        "type": "or",
                        "or": [
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "orgRid": "orgRid"
                    },
                    {
                      "condition": {
                        "type": "or",
                        "or": [
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "orgRid": "orgRid"
                    }
                  ],
                  "version": 1
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "append-org-assignment-rules",
          "method": "POST",
          "id": "appendOrgAssignmentRules",
          "originalEndpointId": "endpoint_Authorization.appendOrgAssignmentRules",
          "name": "Append Org Assignment Rules",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authorization/v1"
              },
              {
                "type": "literal",
                "value": "/org-assignment-rules/append"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authorization:AppendOrgAssignmentRulesRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authorization:OrgAssignmentRulesResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authorization/v1/org-assignment-rules/append",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "rules": [
                  {
                    "condition": {
                      "type": "or",
                      "or": [
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "orgRid": "orgRid"
                  },
                  {
                    "condition": {
                      "type": "or",
                      "or": [
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "orgRid": "orgRid"
                  }
                ],
                "lastVersion": 1
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rules": [
                  {
                    "condition": {
                      "type": "or",
                      "or": [
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "orgRid": "orgRid"
                  },
                  {
                    "condition": {
                      "type": "or",
                      "or": [
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "orgRid": "orgRid"
                  }
                ],
                "version": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "rules": [
                    {
                      "condition": {
                        "type": "or",
                        "or": [
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "orgRid": "orgRid"
                    },
                    {
                      "condition": {
                        "type": "or",
                        "or": [
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "orgRid": "orgRid"
                    }
                  ],
                  "lastVersion": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rules": [
                    {
                      "condition": {
                        "type": "or",
                        "or": [
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "orgRid": "orgRid"
                    },
                    {
                      "condition": {
                        "type": "or",
                        "or": [
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "orgRid": "orgRid"
                    }
                  ],
                  "version": 1
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-user-filters",
          "method": "GET",
          "id": "getUserFilters",
          "originalEndpointId": "endpoint_Authorization.getUserFilters",
          "name": "Get User Filters",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authorization/v1"
              },
              {
                "type": "literal",
                "value": "/user-filters"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authorization:UserFiltersResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authorization/v1/user-filters",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "userFiltersByOrg": {
                  "userFiltersByOrg": {
                    "condition": {
                      "type": "or",
                      "or": [
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "version": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "userFiltersByOrg": {
                    "userFiltersByOrg": {
                      "condition": {
                        "type": "or",
                        "or": [
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "version": 1
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "set-user-filter-for-one-org",
          "method": "POST",
          "id": "setUserFilterForOneOrg",
          "originalEndpointId": "endpoint_Authorization.setUserFilterForOneOrg",
          "name": "Set User Filter For One Org",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authorization/v1"
              },
              {
                "type": "literal",
                "value": "/user-filters/set-one"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authorization:SetUserFilterForOneOrgRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authorization:UserFiltersResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authorization/v1/user-filters/set-one",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "orgRid": "orgRid",
                "userFilter": {
                  "condition": {
                    "type": "or",
                    "or": [
                      {
                        "type": "or",
                        "or": [
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": []
                              },
                              {
                                "type": "or",
                                "or": []
                              }
                            ]
                          },
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": []
                              },
                              {
                                "type": "or",
                                "or": []
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "or",
                        "or": [
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": []
                              },
                              {
                                "type": "or",
                                "or": []
                              }
                            ]
                          },
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": []
                              },
                              {
                                "type": "or",
                                "or": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "lastVersion": 1
              },
              "responseStatusCode": 200,
              "responseBody": {
                "userFiltersByOrg": {
                  "userFiltersByOrg": {
                    "condition": {
                      "type": "or",
                      "or": [
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "version": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "orgRid": "orgRid",
                  "userFilter": {
                    "condition": {
                      "type": "or",
                      "or": [
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "lastVersion": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "userFiltersByOrg": {
                    "userFiltersByOrg": {
                      "condition": {
                        "type": "or",
                        "or": [
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "version": 1
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "remove-user-filter-for-one-org",
          "method": "POST",
          "id": "removeUserFilterForOneOrg",
          "originalEndpointId": "endpoint_Authorization.removeUserFilterForOneOrg",
          "name": "Remove User Filter For One Org",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/authorization/v1"
              },
              {
                "type": "literal",
                "value": "/user-filters/remove-one"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authorization:RemoveUserFilterForOneOrgRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Authorization:UserFiltersResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/authorization/v1/user-filters/remove-one",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "orgRid": "orgRid",
                "lastVersion": 1
              },
              "responseStatusCode": 200,
              "responseBody": {
                "userFiltersByOrg": {
                  "userFiltersByOrg": {
                    "condition": {
                      "type": "or",
                      "or": [
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "or",
                          "or": [
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            },
                            {
                              "type": "or",
                              "or": [
                                {
                                  "type": "or",
                                  "or": []
                                },
                                {
                                  "type": "or",
                                  "or": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "version": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "orgRid": "orgRid",
                  "lastVersion": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "userFiltersByOrg": {
                    "userFiltersByOrg": {
                      "condition": {
                        "type": "or",
                        "or": [
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "or",
                            "or": [
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              },
                              {
                                "type": "or",
                                "or": [
                                  {
                                    "type": "or",
                                    "or": []
                                  },
                                  {
                                    "type": "or",
                                    "or": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "version": 1
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Authorization:AuthorizationRequest",
        "type_Authorization:RegistrationRequest",
        "type_Authorization:GetAccessTokenRequest",
        "type_Authorization:GetAccessTokenResponse",
        "type_Authorization:OrgRid",
        "type_Authorization:OrgAssignmentRule",
        "type_Authorization:UserFilter",
        "type_Authorization:Condition",
        "type_Authorization:ExactClaimCondition",
        "type_Authorization:RegexClaimCondition",
        "type_Authorization:ContainsClaimCondition",
        "type_Authorization:OrgAssignmentRulesResponse",
        "type_Authorization:SetOrgAssignmentRulesRequest",
        "type_Authorization:AppendOrgAssignmentRulesRequest",
        "type_Authorization:UserFiltersResponse",
        "type_Authorization:SetUserFilterForOneOrgRequest",
        "type_Authorization:RemoveUserFilterForOneOrgRequest"
      ],
      "subpackages": [],
      "urlSlug": "authorization",
      "description": "Authorization service manages the permissions for a user\nto access resources.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Catalog": {
      "subpackageId": "subpackage_Catalog",
      "name": "Catalog",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-enriched-dataset",
          "method": "GET",
          "id": "getEnrichedDataset",
          "originalEndpointId": "endpoint_Catalog.getEnrichedDataset",
          "name": "Get Enriched Dataset",
          "path": {
            "pathParameters": [
              {
                "key": "datasetUuid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "datasetUuid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:EnrichedDataset"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "datasetUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "name": "name",
                "description": "description",
                "displayName": "displayName",
                "metadata": {
                  "metadata": "metadata"
                },
                "handle": {
                  "type": "s3",
                  "s3": {
                    "bucket": "bucket",
                    "key": "key"
                  }
                },
                "originMetadata": {
                  "path": "path",
                  "xSeriesIsAbsolute": true,
                  "schemaDirectivePath": "schemaDirectivePath",
                  "xSeriesColumnName": "xSeriesColumnName",
                  "xSeriesTimeUnit": "DAYS",
                  "timestampMetadata": {
                    "seriesName": "seriesName",
                    "timestampType": {
                      "type": "relative",
                      "relative": {
                        "timeUnit": "DAYS",
                        "offset": "2024-01-15T09:30:00Z"
                      }
                    }
                  },
                  "channelConfig": {
                    "prefixTreeDelimiter": "prefixTreeDelimiter"
                  }
                },
                "ingestDate": "2024-01-15T09:30:00Z",
                "ingestStatus": "IN_PROGRESS",
                "retentionPolicy": {
                  "type": "KEEP_UNTIL_EXPIRY",
                  "expiryDays": 1
                },
                "runRid": "runRid",
                "runDate": "2024-01-15T09:30:00Z",
                "shorthand": "shorthand",
                "source": "source",
                "bounds": {
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "type": "ABSOLUTE"
                },
                "timestampType": "ABSOLUTE",
                "labels": ["labels"],
                "properties": {
                  "properties": "properties"
                },
                "granularity": "DAYS"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "name": "name",
                  "description": "description",
                  "displayName": "displayName",
                  "metadata": {
                    "metadata": "metadata"
                  },
                  "handle": {
                    "type": "s3",
                    "s3": {
                      "bucket": "bucket",
                      "key": "key"
                    }
                  },
                  "originMetadata": {
                    "path": "path",
                    "xSeriesIsAbsolute": true,
                    "schemaDirectivePath": "schemaDirectivePath",
                    "xSeriesColumnName": "xSeriesColumnName",
                    "xSeriesTimeUnit": "DAYS",
                    "timestampMetadata": {
                      "seriesName": "seriesName",
                      "timestampType": {
                        "type": "relative",
                        "relative": {
                          "timeUnit": "DAYS",
                          "offset": "2024-01-15T09:30:00Z"
                        }
                      }
                    },
                    "channelConfig": {
                      "prefixTreeDelimiter": "prefixTreeDelimiter"
                    }
                  },
                  "ingestDate": "2024-01-15T09:30:00Z",
                  "ingestStatus": "IN_PROGRESS",
                  "retentionPolicy": {
                    "type": "KEEP_UNTIL_EXPIRY",
                    "expiryDays": 1
                  },
                  "runRid": "runRid",
                  "runDate": "2024-01-15T09:30:00Z",
                  "shorthand": "shorthand",
                  "source": "source",
                  "bounds": {
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "type": "ABSOLUTE"
                  },
                  "timestampType": "ABSOLUTE",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "granularity": "DAYS"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-enriched-datasets",
          "method": "POST",
          "id": "getEnrichedDatasets",
          "originalEndpointId": "endpoint_Catalog.getEnrichedDatasets",
          "name": "Get Enriched Datasets",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets/multiple"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:GetDatasetsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Catalog:EnrichedDataset"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets/multiple",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "datasetRids": ["datasetRids"]
              },
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "name": "name",
                  "description": "description",
                  "displayName": "displayName",
                  "metadata": {
                    "metadata": "metadata"
                  },
                  "handle": {
                    "type": "s3",
                    "s3": {
                      "bucket": "bucket",
                      "key": "key"
                    }
                  },
                  "originMetadata": {
                    "path": "path",
                    "xSeriesIsAbsolute": true,
                    "schemaDirectivePath": "schemaDirectivePath",
                    "xSeriesColumnName": "xSeriesColumnName",
                    "xSeriesTimeUnit": "DAYS",
                    "timestampMetadata": {
                      "seriesName": "seriesName",
                      "timestampType": {
                        "type": "relative",
                        "relative": {
                          "timeUnit": "DAYS",
                          "offset": "2024-01-15T09:30:00Z"
                        }
                      }
                    },
                    "channelConfig": {
                      "prefixTreeDelimiter": "prefixTreeDelimiter"
                    }
                  },
                  "ingestDate": "2024-01-15T09:30:00Z",
                  "ingestStatus": "IN_PROGRESS",
                  "retentionPolicy": {
                    "type": "KEEP_UNTIL_EXPIRY",
                    "expiryDays": 1
                  },
                  "runRid": "runRid",
                  "runDate": "2024-01-15T09:30:00Z",
                  "shorthand": "shorthand",
                  "source": "source",
                  "bounds": {
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "type": "ABSOLUTE"
                  },
                  "timestampType": "ABSOLUTE",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "granularity": "DAYS"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "datasetRids": ["datasetRids"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "name": "name",
                    "description": "description",
                    "displayName": "displayName",
                    "metadata": {
                      "metadata": "metadata"
                    },
                    "handle": {
                      "type": "s3",
                      "s3": {
                        "bucket": "bucket",
                        "key": "key"
                      }
                    },
                    "originMetadata": {
                      "path": "path",
                      "xSeriesIsAbsolute": true,
                      "schemaDirectivePath": "schemaDirectivePath",
                      "xSeriesColumnName": "xSeriesColumnName",
                      "xSeriesTimeUnit": "DAYS",
                      "timestampMetadata": {
                        "seriesName": "seriesName",
                        "timestampType": {
                          "type": "relative",
                          "relative": {
                            "timeUnit": "DAYS",
                            "offset": "2024-01-15T09:30:00Z"
                          }
                        }
                      },
                      "channelConfig": {
                        "prefixTreeDelimiter": "prefixTreeDelimiter"
                      }
                    },
                    "ingestDate": "2024-01-15T09:30:00Z",
                    "ingestStatus": "IN_PROGRESS",
                    "retentionPolicy": {
                      "type": "KEEP_UNTIL_EXPIRY",
                      "expiryDays": 1
                    },
                    "runRid": "runRid",
                    "runDate": "2024-01-15T09:30:00Z",
                    "shorthand": "shorthand",
                    "source": "source",
                    "bounds": {
                      "start": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "end": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "type": "ABSOLUTE"
                    },
                    "timestampType": "ABSOLUTE",
                    "labels": ["labels"],
                    "properties": {
                      "properties": "properties"
                    },
                    "granularity": "DAYS"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-dataset",
          "method": "GET",
          "id": "getDataset",
          "originalEndpointId": "endpoint_Catalog.getDataset",
          "name": "Get Dataset",
          "path": {
            "pathParameters": [
              {
                "key": "datasetUuid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets-simple/"
              },
              {
                "type": "pathParameter",
                "value": "datasetUuid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:Dataset"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets-simple/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "datasetUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "name": "name",
                "handle": {
                  "type": "s3",
                  "s3": {
                    "bucket": "bucket",
                    "key": "key"
                  }
                },
                "description": "description",
                "originMetadata": {
                  "path": "path",
                  "xSeriesIsAbsolute": true,
                  "schemaDirectivePath": "schemaDirectivePath",
                  "xSeriesColumnName": "xSeriesColumnName",
                  "xSeriesTimeUnit": "DAYS",
                  "timestampMetadata": {
                    "seriesName": "seriesName",
                    "timestampType": {
                      "type": "relative",
                      "relative": {
                        "timeUnit": "DAYS",
                        "offset": "2024-01-15T09:30:00Z"
                      }
                    }
                  },
                  "channelConfig": {
                    "prefixTreeDelimiter": "prefixTreeDelimiter"
                  }
                },
                "bounds": {
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "type": "ABSOLUTE"
                },
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "timestampType": "ABSOLUTE"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "name": "name",
                  "handle": {
                    "type": "s3",
                    "s3": {
                      "bucket": "bucket",
                      "key": "key"
                    }
                  },
                  "description": "description",
                  "originMetadata": {
                    "path": "path",
                    "xSeriesIsAbsolute": true,
                    "schemaDirectivePath": "schemaDirectivePath",
                    "xSeriesColumnName": "xSeriesColumnName",
                    "xSeriesTimeUnit": "DAYS",
                    "timestampMetadata": {
                      "seriesName": "seriesName",
                      "timestampType": {
                        "type": "relative",
                        "relative": {
                          "timeUnit": "DAYS",
                          "offset": "2024-01-15T09:30:00Z"
                        }
                      }
                    },
                    "channelConfig": {
                      "prefixTreeDelimiter": "prefixTreeDelimiter"
                    }
                  },
                  "bounds": {
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "type": "ABSOLUTE"
                  },
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "timestampType": "ABSOLUTE"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-datasets",
          "method": "POST",
          "id": "getDatasets",
          "originalEndpointId": "endpoint_Catalog.getDatasets",
          "name": "Get Datasets",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets-simple/multiple"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:GetDatasetsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Catalog:Dataset"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets-simple/multiple",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "datasetRids": ["datasetRids"]
              },
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "name": "name",
                  "handle": {
                    "type": "s3",
                    "s3": {
                      "bucket": "bucket",
                      "key": "key"
                    }
                  },
                  "description": "description",
                  "originMetadata": {
                    "path": "path",
                    "xSeriesIsAbsolute": true,
                    "schemaDirectivePath": "schemaDirectivePath",
                    "xSeriesColumnName": "xSeriesColumnName",
                    "xSeriesTimeUnit": "DAYS",
                    "timestampMetadata": {
                      "seriesName": "seriesName",
                      "timestampType": {
                        "type": "relative",
                        "relative": {
                          "timeUnit": "DAYS",
                          "offset": "2024-01-15T09:30:00Z"
                        }
                      }
                    },
                    "channelConfig": {
                      "prefixTreeDelimiter": "prefixTreeDelimiter"
                    }
                  },
                  "bounds": {
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "type": "ABSOLUTE"
                  },
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "timestampType": "ABSOLUTE"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "datasetRids": ["datasetRids"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "name": "name",
                    "handle": {
                      "type": "s3",
                      "s3": {
                        "bucket": "bucket",
                        "key": "key"
                      }
                    },
                    "description": "description",
                    "originMetadata": {
                      "path": "path",
                      "xSeriesIsAbsolute": true,
                      "schemaDirectivePath": "schemaDirectivePath",
                      "xSeriesColumnName": "xSeriesColumnName",
                      "xSeriesTimeUnit": "DAYS",
                      "timestampMetadata": {
                        "seriesName": "seriesName",
                        "timestampType": {
                          "type": "relative",
                          "relative": {
                            "timeUnit": "DAYS",
                            "offset": "2024-01-15T09:30:00Z"
                          }
                        }
                      },
                      "channelConfig": {
                        "prefixTreeDelimiter": "prefixTreeDelimiter"
                      }
                    },
                    "bounds": {
                      "start": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "end": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "type": "ABSOLUTE"
                    },
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "timestampType": "ABSOLUTE"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-dataset-file",
          "method": "GET",
          "id": "getDatasetFile",
          "originalEndpointId": "endpoint_Catalog.getDatasetFile",
          "name": "Get Dataset File",
          "path": {
            "pathParameters": [
              {
                "key": "datasetRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "fileId",
                "type": {
                  "type": "id",
                  "value": "type_common:DatasetFileId"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/dataset/"
              },
              {
                "type": "pathParameter",
                "value": "datasetRid"
              },
              {
                "type": "literal",
                "value": "/file/"
              },
              {
                "type": "pathParameter",
                "value": "fileId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:DatasetFile"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/dataset/datasetRid/file/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
              "pathParameters": {
                "datasetRid": "datasetRid",
                "fileId": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "datasetRid": "datasetRid",
                "name": "name",
                "handle": {
                  "type": "s3",
                  "s3": {
                    "bucket": "bucket",
                    "key": "key"
                  }
                },
                "bounds": {
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "type": "ABSOLUTE"
                },
                "uploadedAt": "2024-01-15T09:30:00Z",
                "ingestedAt": "2024-01-15T09:30:00Z",
                "timestampMetadata": {
                  "seriesName": "seriesName",
                  "timestampType": {
                    "type": "relative",
                    "relative": {
                      "timeUnit": "DAYS",
                      "offset": "2024-01-15T09:30:00Z"
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "datasetRid": "datasetRid",
                  "name": "name",
                  "handle": {
                    "type": "s3",
                    "s3": {
                      "bucket": "bucket",
                      "key": "key"
                    }
                  },
                  "bounds": {
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "type": "ABSOLUTE"
                  },
                  "uploadedAt": "2024-01-15T09:30:00Z",
                  "ingestedAt": "2024-01-15T09:30:00Z",
                  "timestampMetadata": {
                    "seriesName": "seriesName",
                    "timestampType": {
                      "type": "relative",
                      "relative": {
                        "timeUnit": "DAYS",
                        "offset": "2024-01-15T09:30:00Z"
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-datasets-by-text",
          "method": "POST",
          "id": "searchDatasetsByText",
          "originalEndpointId": "endpoint_Catalog.searchDatasetsByText",
          "name": "Search Datasets By Text",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/search-datasets"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:SearchDatasetsByTextRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:SearchDatasetsByTextResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/search-datasets",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "rid": "rid",
                    "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "name": "name",
                    "description": "description",
                    "displayName": "displayName",
                    "metadata": {
                      "metadata": "metadata"
                    },
                    "handle": {
                      "type": "s3",
                      "s3": {
                        "bucket": "bucket",
                        "key": "key"
                      }
                    },
                    "originMetadata": {
                      "path": "path",
                      "xSeriesIsAbsolute": true,
                      "schemaDirectivePath": "schemaDirectivePath",
                      "xSeriesColumnName": "xSeriesColumnName",
                      "xSeriesTimeUnit": "DAYS",
                      "timestampMetadata": {
                        "seriesName": "seriesName",
                        "timestampType": {
                          "type": "relative",
                          "relative": {
                            "timeUnit": "DAYS",
                            "offset": "2024-01-15T09:30:00Z"
                          }
                        }
                      },
                      "channelConfig": {
                        "prefixTreeDelimiter": "prefixTreeDelimiter"
                      }
                    },
                    "ingestDate": "2024-01-15T09:30:00Z",
                    "ingestStatus": "IN_PROGRESS",
                    "retentionPolicy": {
                      "type": "KEEP_UNTIL_EXPIRY",
                      "expiryDays": 1
                    },
                    "runRid": "runRid",
                    "runDate": "2024-01-15T09:30:00Z",
                    "shorthand": "shorthand",
                    "source": "source",
                    "bounds": {
                      "start": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "end": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "type": "ABSOLUTE"
                    },
                    "timestampType": "ABSOLUTE",
                    "labels": ["labels"],
                    "properties": {
                      "properties": "properties"
                    },
                    "granularity": "DAYS"
                  },
                  {
                    "rid": "rid",
                    "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "name": "name",
                    "description": "description",
                    "displayName": "displayName",
                    "metadata": {
                      "metadata": "metadata"
                    },
                    "handle": {
                      "type": "s3",
                      "s3": {
                        "bucket": "bucket",
                        "key": "key"
                      }
                    },
                    "originMetadata": {
                      "path": "path",
                      "xSeriesIsAbsolute": true,
                      "schemaDirectivePath": "schemaDirectivePath",
                      "xSeriesColumnName": "xSeriesColumnName",
                      "xSeriesTimeUnit": "DAYS",
                      "timestampMetadata": {
                        "seriesName": "seriesName",
                        "timestampType": {
                          "type": "relative",
                          "relative": {
                            "timeUnit": "DAYS",
                            "offset": "2024-01-15T09:30:00Z"
                          }
                        }
                      },
                      "channelConfig": {
                        "prefixTreeDelimiter": "prefixTreeDelimiter"
                      }
                    },
                    "ingestDate": "2024-01-15T09:30:00Z",
                    "ingestStatus": "IN_PROGRESS",
                    "retentionPolicy": {
                      "type": "KEEP_UNTIL_EXPIRY",
                      "expiryDays": 1
                    },
                    "runRid": "runRid",
                    "runDate": "2024-01-15T09:30:00Z",
                    "shorthand": "shorthand",
                    "source": "source",
                    "bounds": {
                      "start": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "end": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "type": "ABSOLUTE"
                    },
                    "timestampType": "ABSOLUTE",
                    "labels": ["labels"],
                    "properties": {
                      "properties": "properties"
                    },
                    "granularity": "DAYS"
                  }
                ],
                "pageResponse": {
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "rid": "rid",
                      "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "name": "name",
                      "description": "description",
                      "displayName": "displayName",
                      "metadata": {
                        "metadata": "metadata"
                      },
                      "handle": {
                        "type": "s3",
                        "s3": {
                          "bucket": "bucket",
                          "key": "key"
                        }
                      },
                      "originMetadata": {
                        "path": "path",
                        "xSeriesIsAbsolute": true,
                        "schemaDirectivePath": "schemaDirectivePath",
                        "xSeriesColumnName": "xSeriesColumnName",
                        "xSeriesTimeUnit": "DAYS",
                        "timestampMetadata": {
                          "seriesName": "seriesName",
                          "timestampType": {
                            "type": "relative",
                            "relative": {
                              "timeUnit": "DAYS",
                              "offset": "2024-01-15T09:30:00Z"
                            }
                          }
                        },
                        "channelConfig": {
                          "prefixTreeDelimiter": "prefixTreeDelimiter"
                        }
                      },
                      "ingestDate": "2024-01-15T09:30:00Z",
                      "ingestStatus": "IN_PROGRESS",
                      "retentionPolicy": {
                        "type": "KEEP_UNTIL_EXPIRY",
                        "expiryDays": 1
                      },
                      "runRid": "runRid",
                      "runDate": "2024-01-15T09:30:00Z",
                      "shorthand": "shorthand",
                      "source": "source",
                      "bounds": {
                        "start": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "end": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "type": "ABSOLUTE"
                      },
                      "timestampType": "ABSOLUTE",
                      "labels": ["labels"],
                      "properties": {
                        "properties": "properties"
                      },
                      "granularity": "DAYS"
                    },
                    {
                      "rid": "rid",
                      "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "name": "name",
                      "description": "description",
                      "displayName": "displayName",
                      "metadata": {
                        "metadata": "metadata"
                      },
                      "handle": {
                        "type": "s3",
                        "s3": {
                          "bucket": "bucket",
                          "key": "key"
                        }
                      },
                      "originMetadata": {
                        "path": "path",
                        "xSeriesIsAbsolute": true,
                        "schemaDirectivePath": "schemaDirectivePath",
                        "xSeriesColumnName": "xSeriesColumnName",
                        "xSeriesTimeUnit": "DAYS",
                        "timestampMetadata": {
                          "seriesName": "seriesName",
                          "timestampType": {
                            "type": "relative",
                            "relative": {
                              "timeUnit": "DAYS",
                              "offset": "2024-01-15T09:30:00Z"
                            }
                          }
                        },
                        "channelConfig": {
                          "prefixTreeDelimiter": "prefixTreeDelimiter"
                        }
                      },
                      "ingestDate": "2024-01-15T09:30:00Z",
                      "ingestStatus": "IN_PROGRESS",
                      "retentionPolicy": {
                        "type": "KEEP_UNTIL_EXPIRY",
                        "expiryDays": 1
                      },
                      "runRid": "runRid",
                      "runDate": "2024-01-15T09:30:00Z",
                      "shorthand": "shorthand",
                      "source": "source",
                      "bounds": {
                        "start": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "end": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "type": "ABSOLUTE"
                      },
                      "timestampType": "ABSOLUTE",
                      "labels": ["labels"],
                      "properties": {
                        "properties": "properties"
                      },
                      "granularity": "DAYS"
                    }
                  ],
                  "pageResponse": {
                    "nextPageToken": "nextPageToken"
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-datasets",
          "method": "POST",
          "id": "searchDatasets",
          "originalEndpointId": "endpoint_Catalog.searchDatasets",
          "name": "Search Datasets",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/search-datasets-v2"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:SearchDatasetsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:SearchDatasetsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/search-datasets-v2",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "query": {
                  "type": "searchText",
                  "searchText": "query"
                },
                "sortOptions": {
                  "isDescending": true,
                  "field": "INGEST_DATE"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "rid": "rid",
                    "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "name": "name",
                    "description": "description",
                    "displayName": "displayName",
                    "metadata": {
                      "metadata": "metadata"
                    },
                    "handle": {
                      "type": "s3",
                      "s3": {
                        "bucket": "bucket",
                        "key": "key"
                      }
                    },
                    "originMetadata": {
                      "path": "path",
                      "xSeriesIsAbsolute": true,
                      "schemaDirectivePath": "schemaDirectivePath",
                      "xSeriesColumnName": "xSeriesColumnName",
                      "xSeriesTimeUnit": "DAYS",
                      "timestampMetadata": {
                        "seriesName": "seriesName",
                        "timestampType": {
                          "type": "relative",
                          "relative": {
                            "timeUnit": "DAYS",
                            "offset": "2024-01-15T09:30:00Z"
                          }
                        }
                      },
                      "channelConfig": {
                        "prefixTreeDelimiter": "prefixTreeDelimiter"
                      }
                    },
                    "ingestDate": "2024-01-15T09:30:00Z",
                    "ingestStatus": "IN_PROGRESS",
                    "retentionPolicy": {
                      "type": "KEEP_UNTIL_EXPIRY",
                      "expiryDays": 1
                    },
                    "runRid": "runRid",
                    "runDate": "2024-01-15T09:30:00Z",
                    "shorthand": "shorthand",
                    "source": "source",
                    "bounds": {
                      "start": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "end": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "type": "ABSOLUTE"
                    },
                    "timestampType": "ABSOLUTE",
                    "labels": ["labels"],
                    "properties": {
                      "properties": "properties"
                    },
                    "granularity": "DAYS"
                  },
                  {
                    "rid": "rid",
                    "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "name": "name",
                    "description": "description",
                    "displayName": "displayName",
                    "metadata": {
                      "metadata": "metadata"
                    },
                    "handle": {
                      "type": "s3",
                      "s3": {
                        "bucket": "bucket",
                        "key": "key"
                      }
                    },
                    "originMetadata": {
                      "path": "path",
                      "xSeriesIsAbsolute": true,
                      "schemaDirectivePath": "schemaDirectivePath",
                      "xSeriesColumnName": "xSeriesColumnName",
                      "xSeriesTimeUnit": "DAYS",
                      "timestampMetadata": {
                        "seriesName": "seriesName",
                        "timestampType": {
                          "type": "relative",
                          "relative": {
                            "timeUnit": "DAYS",
                            "offset": "2024-01-15T09:30:00Z"
                          }
                        }
                      },
                      "channelConfig": {
                        "prefixTreeDelimiter": "prefixTreeDelimiter"
                      }
                    },
                    "ingestDate": "2024-01-15T09:30:00Z",
                    "ingestStatus": "IN_PROGRESS",
                    "retentionPolicy": {
                      "type": "KEEP_UNTIL_EXPIRY",
                      "expiryDays": 1
                    },
                    "runRid": "runRid",
                    "runDate": "2024-01-15T09:30:00Z",
                    "shorthand": "shorthand",
                    "source": "source",
                    "bounds": {
                      "start": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "end": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "type": "ABSOLUTE"
                    },
                    "timestampType": "ABSOLUTE",
                    "labels": ["labels"],
                    "properties": {
                      "properties": "properties"
                    },
                    "granularity": "DAYS"
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "query": {
                    "type": "searchText",
                    "searchText": "query"
                  },
                  "sortOptions": {
                    "isDescending": true,
                    "field": "INGEST_DATE"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "rid": "rid",
                      "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "name": "name",
                      "description": "description",
                      "displayName": "displayName",
                      "metadata": {
                        "metadata": "metadata"
                      },
                      "handle": {
                        "type": "s3",
                        "s3": {
                          "bucket": "bucket",
                          "key": "key"
                        }
                      },
                      "originMetadata": {
                        "path": "path",
                        "xSeriesIsAbsolute": true,
                        "schemaDirectivePath": "schemaDirectivePath",
                        "xSeriesColumnName": "xSeriesColumnName",
                        "xSeriesTimeUnit": "DAYS",
                        "timestampMetadata": {
                          "seriesName": "seriesName",
                          "timestampType": {
                            "type": "relative",
                            "relative": {
                              "timeUnit": "DAYS",
                              "offset": "2024-01-15T09:30:00Z"
                            }
                          }
                        },
                        "channelConfig": {
                          "prefixTreeDelimiter": "prefixTreeDelimiter"
                        }
                      },
                      "ingestDate": "2024-01-15T09:30:00Z",
                      "ingestStatus": "IN_PROGRESS",
                      "retentionPolicy": {
                        "type": "KEEP_UNTIL_EXPIRY",
                        "expiryDays": 1
                      },
                      "runRid": "runRid",
                      "runDate": "2024-01-15T09:30:00Z",
                      "shorthand": "shorthand",
                      "source": "source",
                      "bounds": {
                        "start": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "end": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "type": "ABSOLUTE"
                      },
                      "timestampType": "ABSOLUTE",
                      "labels": ["labels"],
                      "properties": {
                        "properties": "properties"
                      },
                      "granularity": "DAYS"
                    },
                    {
                      "rid": "rid",
                      "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "name": "name",
                      "description": "description",
                      "displayName": "displayName",
                      "metadata": {
                        "metadata": "metadata"
                      },
                      "handle": {
                        "type": "s3",
                        "s3": {
                          "bucket": "bucket",
                          "key": "key"
                        }
                      },
                      "originMetadata": {
                        "path": "path",
                        "xSeriesIsAbsolute": true,
                        "schemaDirectivePath": "schemaDirectivePath",
                        "xSeriesColumnName": "xSeriesColumnName",
                        "xSeriesTimeUnit": "DAYS",
                        "timestampMetadata": {
                          "seriesName": "seriesName",
                          "timestampType": {
                            "type": "relative",
                            "relative": {
                              "timeUnit": "DAYS",
                              "offset": "2024-01-15T09:30:00Z"
                            }
                          }
                        },
                        "channelConfig": {
                          "prefixTreeDelimiter": "prefixTreeDelimiter"
                        }
                      },
                      "ingestDate": "2024-01-15T09:30:00Z",
                      "ingestStatus": "IN_PROGRESS",
                      "retentionPolicy": {
                        "type": "KEEP_UNTIL_EXPIRY",
                        "expiryDays": 1
                      },
                      "runRid": "runRid",
                      "runDate": "2024-01-15T09:30:00Z",
                      "shorthand": "shorthand",
                      "source": "source",
                      "bounds": {
                        "start": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "end": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "type": "ABSOLUTE"
                      },
                      "timestampType": "ABSOLUTE",
                      "labels": ["labels"],
                      "properties": {
                        "properties": "properties"
                      },
                      "granularity": "DAYS"
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-dataset-ingest-status-v-2",
          "method": "PUT",
          "id": "updateDatasetIngestStatusV2",
          "originalEndpointId": "endpoint_Catalog.updateDatasetIngestStatusV2",
          "name": "Update Dataset Ingest Status V 2",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets/ingest-status-v2"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:UpdateIngestStatusV2"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:IngestStatusV2"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets/ingest-status-v2",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "status": {
                  "type": "success",
                  "success": {}
                },
                "datasetUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "success",
                "success": {}
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "status": {
                    "type": "success",
                    "success": {}
                  },
                  "datasetUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "success",
                  "success": {}
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-ingest-progress-v-2",
          "method": "GET",
          "id": "getIngestProgressV2",
          "originalEndpointId": "endpoint_Catalog.getIngestProgressV2",
          "name": "Get Ingest Progress V 2",
          "path": {
            "pathParameters": [
              {
                "key": "datasetRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "datasetRid"
              },
              {
                "type": "literal",
                "value": "/ingest-progress-v2"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:IngestProgressV2"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets/datasetRid/ingest-progress-v2",
              "pathParameters": {
                "datasetRid": "datasetRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "startTime": "2024-01-15T09:30:00Z",
                "endTime": "2024-01-15T09:30:00Z",
                "ingestStatus": {
                  "type": "success",
                  "success": {}
                },
                "incalculable": true
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "startTime": "2024-01-15T09:30:00Z",
                  "endTime": "2024-01-15T09:30:00Z",
                  "ingestStatus": {
                    "type": "success",
                    "success": {}
                  },
                  "incalculable": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-handle-for-dataset",
          "method": "GET",
          "id": "getHandleForDataset",
          "originalEndpointId": "endpoint_Catalog.getHandleForDataset",
          "name": "Get Handle For Dataset",
          "path": {
            "pathParameters": [
              {
                "key": "dataset",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "dataset"
              },
              {
                "type": "literal",
                "value": "/handle"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_Catalog:Handle"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/handle",
              "pathParameters": {
                "dataset": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "s3",
                "s3": {
                  "bucket": "bucket",
                  "key": "key"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "s3",
                  "s3": {
                    "bucket": "bucket",
                    "key": "key"
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-series-details",
          "method": "POST",
          "id": "getSeriesDetails",
          "originalEndpointId": "endpoint_Catalog.getSeriesDetails",
          "name": "Get Series Details",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/series/details"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:GetSeriesDetailsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:SeriesDetails"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/series/details",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "type": "byRid",
                "byRid": {
                  "rid": "rid"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "name": "name",
                "originMetadata": {
                  "originMetadata": "originMetadata"
                },
                "csvIndex": 1,
                "datasetRid": "datasetRid",
                "handle": {
                  "type": "s3",
                  "s3": {
                    "bucket": "bucket",
                    "key": "key"
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "type": "byRid",
                  "byRid": {
                    "rid": "rid"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "name": "name",
                  "originMetadata": {
                    "originMetadata": "originMetadata"
                  },
                  "csvIndex": 1,
                  "datasetRid": "datasetRid",
                  "handle": {
                    "type": "s3",
                    "s3": {
                      "bucket": "bucket",
                      "key": "key"
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-dataset",
          "method": "POST",
          "id": "createDataset",
          "originalEndpointId": "endpoint_Catalog.createDataset",
          "name": "Create Dataset",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:CreateDataset"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:EnrichedDataset"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "name",
                "metadata": {
                  "metadata": "metadata"
                },
                "originMetadata": {},
                "labels": ["labels"],
                "properties": {
                  "properties": "properties"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "name": "name",
                "description": "description",
                "displayName": "displayName",
                "metadata": {
                  "metadata": "metadata"
                },
                "handle": {
                  "type": "s3",
                  "s3": {
                    "bucket": "bucket",
                    "key": "key"
                  }
                },
                "originMetadata": {
                  "path": "path",
                  "xSeriesIsAbsolute": true,
                  "schemaDirectivePath": "schemaDirectivePath",
                  "xSeriesColumnName": "xSeriesColumnName",
                  "xSeriesTimeUnit": "DAYS",
                  "timestampMetadata": {
                    "seriesName": "seriesName",
                    "timestampType": {
                      "type": "relative",
                      "relative": {
                        "timeUnit": "DAYS",
                        "offset": "2024-01-15T09:30:00Z"
                      }
                    }
                  },
                  "channelConfig": {
                    "prefixTreeDelimiter": "prefixTreeDelimiter"
                  }
                },
                "ingestDate": "2024-01-15T09:30:00Z",
                "ingestStatus": "IN_PROGRESS",
                "retentionPolicy": {
                  "type": "KEEP_UNTIL_EXPIRY",
                  "expiryDays": 1
                },
                "runRid": "runRid",
                "runDate": "2024-01-15T09:30:00Z",
                "shorthand": "shorthand",
                "source": "source",
                "bounds": {
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "type": "ABSOLUTE"
                },
                "timestampType": "ABSOLUTE",
                "labels": ["labels"],
                "properties": {
                  "properties": "properties"
                },
                "granularity": "DAYS"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "name",
                  "metadata": {
                    "metadata": "metadata"
                  },
                  "originMetadata": {},
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "name": "name",
                  "description": "description",
                  "displayName": "displayName",
                  "metadata": {
                    "metadata": "metadata"
                  },
                  "handle": {
                    "type": "s3",
                    "s3": {
                      "bucket": "bucket",
                      "key": "key"
                    }
                  },
                  "originMetadata": {
                    "path": "path",
                    "xSeriesIsAbsolute": true,
                    "schemaDirectivePath": "schemaDirectivePath",
                    "xSeriesColumnName": "xSeriesColumnName",
                    "xSeriesTimeUnit": "DAYS",
                    "timestampMetadata": {
                      "seriesName": "seriesName",
                      "timestampType": {
                        "type": "relative",
                        "relative": {
                          "timeUnit": "DAYS",
                          "offset": "2024-01-15T09:30:00Z"
                        }
                      }
                    },
                    "channelConfig": {
                      "prefixTreeDelimiter": "prefixTreeDelimiter"
                    }
                  },
                  "ingestDate": "2024-01-15T09:30:00Z",
                  "ingestStatus": "IN_PROGRESS",
                  "retentionPolicy": {
                    "type": "KEEP_UNTIL_EXPIRY",
                    "expiryDays": 1
                  },
                  "runRid": "runRid",
                  "runDate": "2024-01-15T09:30:00Z",
                  "shorthand": "shorthand",
                  "source": "source",
                  "bounds": {
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "type": "ABSOLUTE"
                  },
                  "timestampType": "ABSOLUTE",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "granularity": "DAYS"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-or-update-dataset",
          "method": "POST",
          "id": "createOrUpdateDataset",
          "originalEndpointId": "endpoint_Catalog.createOrUpdateDataset",
          "name": "Create Or Update Dataset",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets/create-or-update"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:CreateDataset"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:EnrichedDataset"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets/create-or-update",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "name",
                "metadata": {
                  "metadata": "metadata"
                },
                "originMetadata": {},
                "labels": ["labels"],
                "properties": {
                  "properties": "properties"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "name": "name",
                "description": "description",
                "displayName": "displayName",
                "metadata": {
                  "metadata": "metadata"
                },
                "handle": {
                  "type": "s3",
                  "s3": {
                    "bucket": "bucket",
                    "key": "key"
                  }
                },
                "originMetadata": {
                  "path": "path",
                  "xSeriesIsAbsolute": true,
                  "schemaDirectivePath": "schemaDirectivePath",
                  "xSeriesColumnName": "xSeriesColumnName",
                  "xSeriesTimeUnit": "DAYS",
                  "timestampMetadata": {
                    "seriesName": "seriesName",
                    "timestampType": {
                      "type": "relative",
                      "relative": {
                        "timeUnit": "DAYS",
                        "offset": "2024-01-15T09:30:00Z"
                      }
                    }
                  },
                  "channelConfig": {
                    "prefixTreeDelimiter": "prefixTreeDelimiter"
                  }
                },
                "ingestDate": "2024-01-15T09:30:00Z",
                "ingestStatus": "IN_PROGRESS",
                "retentionPolicy": {
                  "type": "KEEP_UNTIL_EXPIRY",
                  "expiryDays": 1
                },
                "runRid": "runRid",
                "runDate": "2024-01-15T09:30:00Z",
                "shorthand": "shorthand",
                "source": "source",
                "bounds": {
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "type": "ABSOLUTE"
                },
                "timestampType": "ABSOLUTE",
                "labels": ["labels"],
                "properties": {
                  "properties": "properties"
                },
                "granularity": "DAYS"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "name",
                  "metadata": {
                    "metadata": "metadata"
                  },
                  "originMetadata": {},
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "name": "name",
                  "description": "description",
                  "displayName": "displayName",
                  "metadata": {
                    "metadata": "metadata"
                  },
                  "handle": {
                    "type": "s3",
                    "s3": {
                      "bucket": "bucket",
                      "key": "key"
                    }
                  },
                  "originMetadata": {
                    "path": "path",
                    "xSeriesIsAbsolute": true,
                    "schemaDirectivePath": "schemaDirectivePath",
                    "xSeriesColumnName": "xSeriesColumnName",
                    "xSeriesTimeUnit": "DAYS",
                    "timestampMetadata": {
                      "seriesName": "seriesName",
                      "timestampType": {
                        "type": "relative",
                        "relative": {
                          "timeUnit": "DAYS",
                          "offset": "2024-01-15T09:30:00Z"
                        }
                      }
                    },
                    "channelConfig": {
                      "prefixTreeDelimiter": "prefixTreeDelimiter"
                    }
                  },
                  "ingestDate": "2024-01-15T09:30:00Z",
                  "ingestStatus": "IN_PROGRESS",
                  "retentionPolicy": {
                    "type": "KEEP_UNTIL_EXPIRY",
                    "expiryDays": 1
                  },
                  "runRid": "runRid",
                  "runDate": "2024-01-15T09:30:00Z",
                  "shorthand": "shorthand",
                  "source": "source",
                  "bounds": {
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "type": "ABSOLUTE"
                  },
                  "timestampType": "ABSOLUTE",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "granularity": "DAYS"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "add-file-to-dataset",
          "method": "POST",
          "id": "addFileToDataset",
          "originalEndpointId": "endpoint_Catalog.addFileToDataset",
          "name": "Add File To Dataset",
          "path": {
            "pathParameters": [
              {
                "key": "datasetRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "datasetRid"
              },
              {
                "type": "literal",
                "value": "/add-file"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:AddFileToDataset"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:DatasetFile"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets/datasetRid/add-file",
              "pathParameters": {
                "datasetRid": "datasetRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "handle": {
                  "type": "s3",
                  "s3": {
                    "bucket": "bucket",
                    "key": "key"
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "datasetRid": "datasetRid",
                "name": "name",
                "handle": {
                  "type": "s3",
                  "s3": {
                    "bucket": "bucket",
                    "key": "key"
                  }
                },
                "bounds": {
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "type": "ABSOLUTE"
                },
                "uploadedAt": "2024-01-15T09:30:00Z",
                "ingestedAt": "2024-01-15T09:30:00Z",
                "timestampMetadata": {
                  "seriesName": "seriesName",
                  "timestampType": {
                    "type": "relative",
                    "relative": {
                      "timeUnit": "DAYS",
                      "offset": "2024-01-15T09:30:00Z"
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "handle": {
                    "type": "s3",
                    "s3": {
                      "bucket": "bucket",
                      "key": "key"
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "datasetRid": "datasetRid",
                  "name": "name",
                  "handle": {
                    "type": "s3",
                    "s3": {
                      "bucket": "bucket",
                      "key": "key"
                    }
                  },
                  "bounds": {
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "type": "ABSOLUTE"
                  },
                  "uploadedAt": "2024-01-15T09:30:00Z",
                  "ingestedAt": "2024-01-15T09:30:00Z",
                  "timestampMetadata": {
                    "seriesName": "seriesName",
                    "timestampType": {
                      "type": "relative",
                      "relative": {
                        "timeUnit": "DAYS",
                        "offset": "2024-01-15T09:30:00Z"
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "list-dataset-files",
          "method": "GET",
          "id": "listDatasetFiles",
          "originalEndpointId": "endpoint_Catalog.listDatasetFiles",
          "name": "List Dataset Files",
          "path": {
            "pathParameters": [
              {
                "key": "datasetRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "datasetRid"
              },
              {
                "type": "literal",
                "value": "/files"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "nextPageToken",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_common:Token"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:DatasetFilesPage"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets/datasetRid/files",
              "pathParameters": {
                "datasetRid": "datasetRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "files": [
                  {
                    "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "datasetRid": "datasetRid",
                    "name": "name",
                    "handle": {
                      "type": "s3",
                      "s3": {
                        "bucket": "bucket",
                        "key": "key"
                      }
                    },
                    "bounds": {
                      "start": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "end": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "type": "ABSOLUTE"
                    },
                    "uploadedAt": "2024-01-15T09:30:00Z",
                    "ingestedAt": "2024-01-15T09:30:00Z",
                    "timestampMetadata": {
                      "seriesName": "seriesName",
                      "timestampType": {
                        "type": "relative",
                        "relative": {
                          "timeUnit": "DAYS",
                          "offset": "2024-01-15T09:30:00Z"
                        }
                      }
                    }
                  },
                  {
                    "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "datasetRid": "datasetRid",
                    "name": "name",
                    "handle": {
                      "type": "s3",
                      "s3": {
                        "bucket": "bucket",
                        "key": "key"
                      }
                    },
                    "bounds": {
                      "start": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "end": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "type": "ABSOLUTE"
                    },
                    "uploadedAt": "2024-01-15T09:30:00Z",
                    "ingestedAt": "2024-01-15T09:30:00Z",
                    "timestampMetadata": {
                      "seriesName": "seriesName",
                      "timestampType": {
                        "type": "relative",
                        "relative": {
                          "timeUnit": "DAYS",
                          "offset": "2024-01-15T09:30:00Z"
                        }
                      }
                    }
                  }
                ],
                "nextPage": "nextPage"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "files": [
                    {
                      "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "datasetRid": "datasetRid",
                      "name": "name",
                      "handle": {
                        "type": "s3",
                        "s3": {
                          "bucket": "bucket",
                          "key": "key"
                        }
                      },
                      "bounds": {
                        "start": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "end": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "type": "ABSOLUTE"
                      },
                      "uploadedAt": "2024-01-15T09:30:00Z",
                      "ingestedAt": "2024-01-15T09:30:00Z",
                      "timestampMetadata": {
                        "seriesName": "seriesName",
                        "timestampType": {
                          "type": "relative",
                          "relative": {
                            "timeUnit": "DAYS",
                            "offset": "2024-01-15T09:30:00Z"
                          }
                        }
                      }
                    },
                    {
                      "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                      "datasetRid": "datasetRid",
                      "name": "name",
                      "handle": {
                        "type": "s3",
                        "s3": {
                          "bucket": "bucket",
                          "key": "key"
                        }
                      },
                      "bounds": {
                        "start": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "end": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "type": "ABSOLUTE"
                      },
                      "uploadedAt": "2024-01-15T09:30:00Z",
                      "ingestedAt": "2024-01-15T09:30:00Z",
                      "timestampMetadata": {
                        "seriesName": "seriesName",
                        "timestampType": {
                          "type": "relative",
                          "relative": {
                            "timeUnit": "DAYS",
                            "offset": "2024-01-15T09:30:00Z"
                          }
                        }
                      }
                    }
                  ],
                  "nextPage": "nextPage"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "mark-file-ingest-successful",
          "method": "PUT",
          "id": "markFileIngestSuccessful",
          "originalEndpointId": "endpoint_Catalog.markFileIngestSuccessful",
          "name": "Mark File Ingest Successful",
          "path": {
            "pathParameters": [
              {
                "key": "datasetRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "fileId",
                "type": {
                  "type": "id",
                  "value": "type_common:DatasetFileId"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "datasetRid"
              },
              {
                "type": "literal",
                "value": "/file/"
              },
              {
                "type": "pathParameter",
                "value": "fileId"
              },
              {
                "type": "literal",
                "value": "/success"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:MarkFileIngestSuccessful"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:DatasetFile"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets/datasetRid/file/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/success",
              "pathParameters": {
                "datasetRid": "datasetRid",
                "fileId": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "bounds": {
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "type": "ABSOLUTE"
                },
                "ingestedAt": {
                  "seconds": 1000000,
                  "nanos": 1000000
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "datasetRid": "datasetRid",
                "name": "name",
                "handle": {
                  "type": "s3",
                  "s3": {
                    "bucket": "bucket",
                    "key": "key"
                  }
                },
                "bounds": {
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "type": "ABSOLUTE"
                },
                "uploadedAt": "2024-01-15T09:30:00Z",
                "ingestedAt": "2024-01-15T09:30:00Z",
                "timestampMetadata": {
                  "seriesName": "seriesName",
                  "timestampType": {
                    "type": "relative",
                    "relative": {
                      "timeUnit": "DAYS",
                      "offset": "2024-01-15T09:30:00Z"
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "bounds": {
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "type": "ABSOLUTE"
                  },
                  "ingestedAt": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "datasetRid": "datasetRid",
                  "name": "name",
                  "handle": {
                    "type": "s3",
                    "s3": {
                      "bucket": "bucket",
                      "key": "key"
                    }
                  },
                  "bounds": {
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "type": "ABSOLUTE"
                  },
                  "uploadedAt": "2024-01-15T09:30:00Z",
                  "ingestedAt": "2024-01-15T09:30:00Z",
                  "timestampMetadata": {
                    "seriesName": "seriesName",
                    "timestampType": {
                      "type": "relative",
                      "relative": {
                        "timeUnit": "DAYS",
                        "offset": "2024-01-15T09:30:00Z"
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "mark-file-ingest-error",
          "method": "PUT",
          "id": "markFileIngestError",
          "originalEndpointId": "endpoint_Catalog.markFileIngestError",
          "name": "Mark File Ingest Error",
          "path": {
            "pathParameters": [
              {
                "key": "datasetRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "fileId",
                "type": {
                  "type": "id",
                  "value": "type_common:DatasetFileId"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "datasetRid"
              },
              {
                "type": "literal",
                "value": "/file/"
              },
              {
                "type": "pathParameter",
                "value": "fileId"
              },
              {
                "type": "literal",
                "value": "/error"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:MarkFileIngestError"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:DatasetFile"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets/datasetRid/file/d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32/error",
              "pathParameters": {
                "datasetRid": "datasetRid",
                "fileId": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "errorResult": {
                  "errorType": "errorType",
                  "message": "message"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "datasetRid": "datasetRid",
                "name": "name",
                "handle": {
                  "type": "s3",
                  "s3": {
                    "bucket": "bucket",
                    "key": "key"
                  }
                },
                "bounds": {
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "type": "ABSOLUTE"
                },
                "uploadedAt": "2024-01-15T09:30:00Z",
                "ingestedAt": "2024-01-15T09:30:00Z",
                "timestampMetadata": {
                  "seriesName": "seriesName",
                  "timestampType": {
                    "type": "relative",
                    "relative": {
                      "timeUnit": "DAYS",
                      "offset": "2024-01-15T09:30:00Z"
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "errorResult": {
                    "errorType": "errorType",
                    "message": "message"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "datasetRid": "datasetRid",
                  "name": "name",
                  "handle": {
                    "type": "s3",
                    "s3": {
                      "bucket": "bucket",
                      "key": "key"
                    }
                  },
                  "bounds": {
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "type": "ABSOLUTE"
                  },
                  "uploadedAt": "2024-01-15T09:30:00Z",
                  "ingestedAt": "2024-01-15T09:30:00Z",
                  "timestampMetadata": {
                    "seriesName": "seriesName",
                    "timestampType": {
                      "type": "relative",
                      "relative": {
                        "timeUnit": "DAYS",
                        "offset": "2024-01-15T09:30:00Z"
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-dataset-metadata",
          "method": "PUT",
          "id": "updateDatasetMetadata",
          "originalEndpointId": "endpoint_Catalog.updateDatasetMetadata",
          "name": "Update Dataset Metadata",
          "path": {
            "pathParameters": [
              {
                "key": "datasetRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "datasetRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:UpdateDatasetMetadata"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:EnrichedDataset"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets/datasetRid",
              "pathParameters": {
                "datasetRid": "datasetRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "name": "name",
                "description": "description",
                "displayName": "displayName",
                "metadata": {
                  "metadata": "metadata"
                },
                "handle": {
                  "type": "s3",
                  "s3": {
                    "bucket": "bucket",
                    "key": "key"
                  }
                },
                "originMetadata": {
                  "path": "path",
                  "xSeriesIsAbsolute": true,
                  "schemaDirectivePath": "schemaDirectivePath",
                  "xSeriesColumnName": "xSeriesColumnName",
                  "xSeriesTimeUnit": "DAYS",
                  "timestampMetadata": {
                    "seriesName": "seriesName",
                    "timestampType": {
                      "type": "relative",
                      "relative": {
                        "timeUnit": "DAYS",
                        "offset": "2024-01-15T09:30:00Z"
                      }
                    }
                  },
                  "channelConfig": {
                    "prefixTreeDelimiter": "prefixTreeDelimiter"
                  }
                },
                "ingestDate": "2024-01-15T09:30:00Z",
                "ingestStatus": "IN_PROGRESS",
                "retentionPolicy": {
                  "type": "KEEP_UNTIL_EXPIRY",
                  "expiryDays": 1
                },
                "runRid": "runRid",
                "runDate": "2024-01-15T09:30:00Z",
                "shorthand": "shorthand",
                "source": "source",
                "bounds": {
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "type": "ABSOLUTE"
                },
                "timestampType": "ABSOLUTE",
                "labels": ["labels"],
                "properties": {
                  "properties": "properties"
                },
                "granularity": "DAYS"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "name": "name",
                  "description": "description",
                  "displayName": "displayName",
                  "metadata": {
                    "metadata": "metadata"
                  },
                  "handle": {
                    "type": "s3",
                    "s3": {
                      "bucket": "bucket",
                      "key": "key"
                    }
                  },
                  "originMetadata": {
                    "path": "path",
                    "xSeriesIsAbsolute": true,
                    "schemaDirectivePath": "schemaDirectivePath",
                    "xSeriesColumnName": "xSeriesColumnName",
                    "xSeriesTimeUnit": "DAYS",
                    "timestampMetadata": {
                      "seriesName": "seriesName",
                      "timestampType": {
                        "type": "relative",
                        "relative": {
                          "timeUnit": "DAYS",
                          "offset": "2024-01-15T09:30:00Z"
                        }
                      }
                    },
                    "channelConfig": {
                      "prefixTreeDelimiter": "prefixTreeDelimiter"
                    }
                  },
                  "ingestDate": "2024-01-15T09:30:00Z",
                  "ingestStatus": "IN_PROGRESS",
                  "retentionPolicy": {
                    "type": "KEEP_UNTIL_EXPIRY",
                    "expiryDays": 1
                  },
                  "runRid": "runRid",
                  "runDate": "2024-01-15T09:30:00Z",
                  "shorthand": "shorthand",
                  "source": "source",
                  "bounds": {
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "type": "ABSOLUTE"
                  },
                  "timestampType": "ABSOLUTE",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "granularity": "DAYS"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-bounds",
          "method": "PUT",
          "id": "updateBounds",
          "originalEndpointId": "endpoint_Catalog.updateBounds",
          "name": "Update Bounds",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/bounds"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:UpdateBoundsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:EnrichedDataset"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets/rid/bounds",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "bounds": {
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "type": "ABSOLUTE"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "name": "name",
                "description": "description",
                "displayName": "displayName",
                "metadata": {
                  "metadata": "metadata"
                },
                "handle": {
                  "type": "s3",
                  "s3": {
                    "bucket": "bucket",
                    "key": "key"
                  }
                },
                "originMetadata": {
                  "path": "path",
                  "xSeriesIsAbsolute": true,
                  "schemaDirectivePath": "schemaDirectivePath",
                  "xSeriesColumnName": "xSeriesColumnName",
                  "xSeriesTimeUnit": "DAYS",
                  "timestampMetadata": {
                    "seriesName": "seriesName",
                    "timestampType": {
                      "type": "relative",
                      "relative": {
                        "timeUnit": "DAYS",
                        "offset": "2024-01-15T09:30:00Z"
                      }
                    }
                  },
                  "channelConfig": {
                    "prefixTreeDelimiter": "prefixTreeDelimiter"
                  }
                },
                "ingestDate": "2024-01-15T09:30:00Z",
                "ingestStatus": "IN_PROGRESS",
                "retentionPolicy": {
                  "type": "KEEP_UNTIL_EXPIRY",
                  "expiryDays": 1
                },
                "runRid": "runRid",
                "runDate": "2024-01-15T09:30:00Z",
                "shorthand": "shorthand",
                "source": "source",
                "bounds": {
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "type": "ABSOLUTE"
                },
                "timestampType": "ABSOLUTE",
                "labels": ["labels"],
                "properties": {
                  "properties": "properties"
                },
                "granularity": "DAYS"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "bounds": {
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "type": "ABSOLUTE"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "name": "name",
                  "description": "description",
                  "displayName": "displayName",
                  "metadata": {
                    "metadata": "metadata"
                  },
                  "handle": {
                    "type": "s3",
                    "s3": {
                      "bucket": "bucket",
                      "key": "key"
                    }
                  },
                  "originMetadata": {
                    "path": "path",
                    "xSeriesIsAbsolute": true,
                    "schemaDirectivePath": "schemaDirectivePath",
                    "xSeriesColumnName": "xSeriesColumnName",
                    "xSeriesTimeUnit": "DAYS",
                    "timestampMetadata": {
                      "seriesName": "seriesName",
                      "timestampType": {
                        "type": "relative",
                        "relative": {
                          "timeUnit": "DAYS",
                          "offset": "2024-01-15T09:30:00Z"
                        }
                      }
                    },
                    "channelConfig": {
                      "prefixTreeDelimiter": "prefixTreeDelimiter"
                    }
                  },
                  "ingestDate": "2024-01-15T09:30:00Z",
                  "ingestStatus": "IN_PROGRESS",
                  "retentionPolicy": {
                    "type": "KEEP_UNTIL_EXPIRY",
                    "expiryDays": 1
                  },
                  "runRid": "runRid",
                  "runDate": "2024-01-15T09:30:00Z",
                  "shorthand": "shorthand",
                  "source": "source",
                  "bounds": {
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "type": "ABSOLUTE"
                  },
                  "timestampType": "ABSOLUTE",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "granularity": "DAYS"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "delete-dataset-series",
          "method": "DELETE",
          "id": "deleteDatasetSeries",
          "originalEndpointId": "endpoint_Catalog.deleteDatasetSeries",
          "name": "Delete Dataset Series",
          "path": {
            "pathParameters": [
              {
                "key": "datasetRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/series/for-dataset/"
              },
              {
                "type": "pathParameter",
                "value": "datasetRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:DeleteSeriesResult"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/series/for-dataset/datasetRid",
              "pathParameters": {
                "datasetRid": "datasetRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "numberDeleted": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "numberDeleted": 1
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "archive-dataset",
          "method": "POST",
          "id": "archiveDataset",
          "originalEndpointId": "endpoint_Catalog.archiveDataset",
          "name": "Archive Dataset",
          "path": {
            "pathParameters": [
              {
                "key": "datasetRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "datasetRid"
              },
              {
                "type": "literal",
                "value": "/archive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets/datasetRid/archive",
              "pathParameters": {
                "datasetRid": "datasetRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "unarchive-dataset",
          "method": "POST",
          "id": "unarchiveDataset",
          "originalEndpointId": "endpoint_Catalog.unarchiveDataset",
          "name": "Unarchive Dataset",
          "path": {
            "pathParameters": [
              {
                "key": "datasetRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "datasetRid"
              },
              {
                "type": "literal",
                "value": "/unarchive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets/datasetRid/unarchive",
              "pathParameters": {
                "datasetRid": "datasetRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-all-properties-and-labels",
          "method": "GET",
          "id": "getAllPropertiesAndLabels",
          "originalEndpointId": "endpoint_Catalog.getAllPropertiesAndLabels",
          "name": "Get All Properties And Labels",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/catalog/v1"
              },
              {
                "type": "literal",
                "value": "/datasets/all-properties-labels"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Catalog:AllPropertiesAndLabelsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/catalog/v1/datasets/all-properties-labels",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "properties": {
                  "properties": ["properties"]
                },
                "labels": ["labels"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "properties": {
                    "properties": ["properties"]
                  },
                  "labels": ["labels"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Catalog:RetentionPolicyType",
        "type_Catalog:RetentionPolicy",
        "type_Catalog:WeakTimestampType",
        "type_Catalog:EnrichedDataset",
        "type_Catalog:Dataset",
        "type_Catalog:DatasetOriginMetadata",
        "type_Catalog:DatasetFile",
        "type_Catalog:DatasetFilesPage",
        "type_Catalog:ChannelConfig",
        "type_Catalog:SkipRowsConfig",
        "type_Catalog:UnitConfig",
        "type_Catalog:TimestampMetadata",
        "type_Catalog:TimestampType",
        "type_Catalog:RelativeTimestamp",
        "type_Catalog:AbsoluteTimestamp",
        "type_Catalog:Iso8601Timestamp",
        "type_Catalog:EpochTimestamp",
        "type_Catalog:CustomTimestamp",
        "type_Catalog:DatasetFilter",
        "type_Catalog:GetDatasetsRequest",
        "type_Catalog:ListDatasetsRequest",
        "type_Catalog:IngestStatus",
        "type_Catalog:SuccessResult",
        "type_Catalog:InProgressResult",
        "type_Catalog:IngestStatusV2",
        "type_Catalog:UpdateIngestStatus",
        "type_Catalog:UpdateIngestStatusV2",
        "type_Catalog:ErrorResult",
        "type_Catalog:ErrorType",
        "type_Catalog:IngestProgressV2",
        "type_Catalog:Channel",
        "type_Catalog:ChannelDetails",
        "type_Catalog:Handle",
        "type_Catalog:S3Handle",
        "type_Catalog:GetHandlesForDatasetsRequest",
        "type_Catalog:GetChannelsForDatasetsRequest",
        "type_Catalog:GetDetailsForChannelsRequest",
        "type_Catalog:GetSeriesDetailsRequest",
        "type_Catalog:GetSeriesDetailsByRid",
        "type_Catalog:GetSeriesDetailsByName",
        "type_Catalog:SeriesDetails",
        "type_Catalog:CreateDataset",
        "type_Catalog:AddFileToDataset",
        "type_Catalog:UpdateDatasetMetadata",
        "type_Catalog:MarkFileIngestSuccessful",
        "type_Catalog:MarkFileIngestError",
        "type_Catalog:Bounds",
        "type_Catalog:UpdateBoundsRequest",
        "type_Catalog:DeleteSeriesResult",
        "type_Catalog:SearchDatasetsByTextRequest",
        "type_Catalog:SearchDatasetsQuery",
        "type_Catalog:SearchDatasetsRequest",
        "type_Catalog:SortOptions",
        "type_Catalog:SortField",
        "type_Catalog:SearchDatasetsByTextResponse",
        "type_Catalog:SearchDatasetsResponse",
        "type_Catalog:AllPropertiesAndLabelsResponse"
      ],
      "subpackages": [],
      "urlSlug": "catalog",
      "description": "The Catalog Service provides the ability to query for information about Datasets that are stored in\nthe Nominal platform. A Dataset is the Nominal representation of data that has been uploaded to Nominal via\na file, primarily CSV.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Checklist": {
      "subpackageId": "subpackage_Checklist",
      "name": "Checklist",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create",
          "method": "POST",
          "id": "create",
          "originalEndpointId": "endpoint_Checklist.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/checklists"
              },
              {
                "type": "literal",
                "value": "/"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:CreateChecklistRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:VersionedChecklist"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/checklists/",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "commitMessage": "commitMessage",
                "assigneeRid": "assigneeRid",
                "title": "title",
                "description": "description",
                "functions": {
                  "functions": {
                    "title": "title",
                    "description": "description",
                    "node": {
                      "type": "enum",
                      "enum": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      }
                    }
                  }
                },
                "checks": [
                  {
                    "type": "createCheck",
                    "createCheck": {
                      "title": "title",
                      "description": "description",
                      "priority": "P0"
                    }
                  },
                  {
                    "type": "createCheck",
                    "createCheck": {
                      "title": "title",
                      "description": "description",
                      "priority": "P0"
                    }
                  }
                ],
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "checklistVariables": [
                  {
                    "name": "name",
                    "value": {
                      "type": "checklistFunction",
                      "checklistFunction": "value"
                    }
                  },
                  {
                    "name": "name",
                    "value": {
                      "type": "checklistFunction",
                      "checklistFunction": "value"
                    }
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "metadata": {
                  "authorRid": "authorRid",
                  "assigneeRid": "assigneeRid",
                  "title": "title",
                  "description": "description",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "lastUsed": "2024-01-15T09:30:00Z",
                  "isArchived": true,
                  "isPublished": true
                },
                "commit": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                },
                "functions": [
                  {
                    "rid": "rid",
                    "functionLineageRid": "functionLineageRid",
                    "title": "title",
                    "description": "description",
                    "autoGeneratedTitle": "autoGeneratedTitle",
                    "autoGeneratedDescription": "autoGeneratedDescription",
                    "functionNode": {
                      "type": "enum",
                      "enum": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      }
                    }
                  },
                  {
                    "rid": "rid",
                    "functionLineageRid": "functionLineageRid",
                    "title": "title",
                    "description": "description",
                    "autoGeneratedTitle": "autoGeneratedTitle",
                    "autoGeneratedDescription": "autoGeneratedDescription",
                    "functionNode": {
                      "type": "enum",
                      "enum": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      }
                    }
                  }
                ],
                "checks": [
                  {
                    "type": "check",
                    "check": {
                      "rid": "rid",
                      "checkLineageRid": "checkLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "priority": "P0",
                      "chart": {
                        "rid": "rid",
                        "version": 1
                      },
                      "condition": {
                        "type": "numRanges",
                        "numRanges": {
                          "ranges": {
                            "type": "function",
                            "function": {
                              "functionReference": "functionReference",
                              "functionIdentifier": {
                                "type": "variable",
                                "variable": "functionIdentifier"
                              }
                            }
                          },
                          "functionSpec": {
                            "key": "value"
                          },
                          "threshold": 1,
                          "operator": "GREATER_THAN",
                          "variables": {
                            "variables": {
                              "dataSourceRef": "dataSourceRef",
                              "channel": "channel",
                              "tags": {
                                "tags": "tags"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "check",
                    "check": {
                      "rid": "rid",
                      "checkLineageRid": "checkLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "priority": "P0",
                      "chart": {
                        "rid": "rid",
                        "version": 1
                      },
                      "condition": {
                        "type": "numRanges",
                        "numRanges": {
                          "ranges": {
                            "type": "function",
                            "function": {
                              "functionReference": "functionReference",
                              "functionIdentifier": {
                                "type": "variable",
                                "variable": "functionIdentifier"
                              }
                            }
                          },
                          "functionSpec": {
                            "key": "value"
                          },
                          "threshold": 1,
                          "operator": "GREATER_THAN",
                          "variables": {
                            "variables": {
                              "dataSourceRef": "dataSourceRef",
                              "channel": "channel",
                              "tags": {
                                "tags": "tags"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ],
                "checklistVariables": [
                  {
                    "name": "name",
                    "displayName": "displayName",
                    "value": {
                      "type": "checklistVariable",
                      "checklistVariable": "value"
                    }
                  },
                  {
                    "name": "name",
                    "displayName": "displayName",
                    "value": {
                      "type": "checklistVariable",
                      "checklistVariable": "value"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "commitMessage": "commitMessage",
                  "assigneeRid": "assigneeRid",
                  "title": "title",
                  "description": "description",
                  "functions": {
                    "functions": {
                      "title": "title",
                      "description": "description",
                      "node": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    }
                  },
                  "checks": [
                    {
                      "type": "createCheck",
                      "createCheck": {
                        "title": "title",
                        "description": "description",
                        "priority": "P0"
                      }
                    },
                    {
                      "type": "createCheck",
                      "createCheck": {
                        "title": "title",
                        "description": "description",
                        "priority": "P0"
                      }
                    }
                  ],
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "checklistVariables": [
                    {
                      "name": "name",
                      "value": {
                        "type": "checklistFunction",
                        "checklistFunction": "value"
                      }
                    },
                    {
                      "name": "name",
                      "value": {
                        "type": "checklistFunction",
                        "checklistFunction": "value"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "metadata": {
                    "authorRid": "authorRid",
                    "assigneeRid": "assigneeRid",
                    "title": "title",
                    "description": "description",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "lastUsed": "2024-01-15T09:30:00Z",
                    "isArchived": true,
                    "isPublished": true
                  },
                  "commit": {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  },
                  "functions": [
                    {
                      "rid": "rid",
                      "functionLineageRid": "functionLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "functionNode": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    },
                    {
                      "rid": "rid",
                      "functionLineageRid": "functionLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "functionNode": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    }
                  ],
                  "checks": [
                    {
                      "type": "check",
                      "check": {
                        "rid": "rid",
                        "checkLineageRid": "checkLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "priority": "P0",
                        "chart": {
                          "rid": "rid",
                          "version": 1
                        },
                        "condition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {
                                  "tags": "tags"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "check",
                      "check": {
                        "rid": "rid",
                        "checkLineageRid": "checkLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "priority": "P0",
                        "chart": {
                          "rid": "rid",
                          "version": 1
                        },
                        "condition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {
                                  "tags": "tags"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "checklistVariables": [
                    {
                      "name": "name",
                      "displayName": "displayName",
                      "value": {
                        "type": "checklistVariable",
                        "checklistVariable": "value"
                      }
                    },
                    {
                      "name": "name",
                      "displayName": "displayName",
                      "value": {
                        "type": "checklistVariable",
                        "checklistVariable": "value"
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "commit",
          "method": "POST",
          "id": "commit",
          "originalEndpointId": "endpoint_Checklist.commit",
          "name": "Commit",
          "path": {
            "pathParameters": [
              {
                "key": "checklistRid",
                "type": {
                  "type": "id",
                  "value": "type_common:ChecklistRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/checklists"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "checklistRid"
              },
              {
                "type": "literal",
                "value": "/commit"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:CommitChecklistRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:VersionedChecklist"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/checklists/checklistRid/commit",
              "pathParameters": {
                "checklistRid": "checklistRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "commitMessage": "commitMessage",
                "checks": [
                  {
                    "type": "createCheck",
                    "createCheck": {
                      "title": "title",
                      "description": "description",
                      "priority": "P0"
                    }
                  },
                  {
                    "type": "createCheck",
                    "createCheck": {
                      "title": "title",
                      "description": "description",
                      "priority": "P0"
                    }
                  }
                ],
                "functions": {
                  "functions": {
                    "type": "createFunction",
                    "createFunction": {
                      "title": "title",
                      "description": "description",
                      "node": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    }
                  }
                },
                "checklistVariables": [
                  {
                    "name": "name",
                    "value": {
                      "type": "checklistFunction",
                      "checklistFunction": "value"
                    }
                  },
                  {
                    "name": "name",
                    "value": {
                      "type": "checklistFunction",
                      "checklistFunction": "value"
                    }
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "metadata": {
                  "authorRid": "authorRid",
                  "assigneeRid": "assigneeRid",
                  "title": "title",
                  "description": "description",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "lastUsed": "2024-01-15T09:30:00Z",
                  "isArchived": true,
                  "isPublished": true
                },
                "commit": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                },
                "functions": [
                  {
                    "rid": "rid",
                    "functionLineageRid": "functionLineageRid",
                    "title": "title",
                    "description": "description",
                    "autoGeneratedTitle": "autoGeneratedTitle",
                    "autoGeneratedDescription": "autoGeneratedDescription",
                    "functionNode": {
                      "type": "enum",
                      "enum": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      }
                    }
                  },
                  {
                    "rid": "rid",
                    "functionLineageRid": "functionLineageRid",
                    "title": "title",
                    "description": "description",
                    "autoGeneratedTitle": "autoGeneratedTitle",
                    "autoGeneratedDescription": "autoGeneratedDescription",
                    "functionNode": {
                      "type": "enum",
                      "enum": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      }
                    }
                  }
                ],
                "checks": [
                  {
                    "type": "check",
                    "check": {
                      "rid": "rid",
                      "checkLineageRid": "checkLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "priority": "P0",
                      "chart": {
                        "rid": "rid",
                        "version": 1
                      },
                      "condition": {
                        "type": "numRanges",
                        "numRanges": {
                          "ranges": {
                            "type": "function",
                            "function": {
                              "functionReference": "functionReference",
                              "functionIdentifier": {
                                "type": "variable",
                                "variable": "functionIdentifier"
                              }
                            }
                          },
                          "functionSpec": {
                            "key": "value"
                          },
                          "threshold": 1,
                          "operator": "GREATER_THAN",
                          "variables": {
                            "variables": {
                              "dataSourceRef": "dataSourceRef",
                              "channel": "channel",
                              "tags": {
                                "tags": "tags"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "check",
                    "check": {
                      "rid": "rid",
                      "checkLineageRid": "checkLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "priority": "P0",
                      "chart": {
                        "rid": "rid",
                        "version": 1
                      },
                      "condition": {
                        "type": "numRanges",
                        "numRanges": {
                          "ranges": {
                            "type": "function",
                            "function": {
                              "functionReference": "functionReference",
                              "functionIdentifier": {
                                "type": "variable",
                                "variable": "functionIdentifier"
                              }
                            }
                          },
                          "functionSpec": {
                            "key": "value"
                          },
                          "threshold": 1,
                          "operator": "GREATER_THAN",
                          "variables": {
                            "variables": {
                              "dataSourceRef": "dataSourceRef",
                              "channel": "channel",
                              "tags": {
                                "tags": "tags"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ],
                "checklistVariables": [
                  {
                    "name": "name",
                    "displayName": "displayName",
                    "value": {
                      "type": "checklistVariable",
                      "checklistVariable": "value"
                    }
                  },
                  {
                    "name": "name",
                    "displayName": "displayName",
                    "value": {
                      "type": "checklistVariable",
                      "checklistVariable": "value"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "commitMessage": "commitMessage",
                  "checks": [
                    {
                      "type": "createCheck",
                      "createCheck": {
                        "title": "title",
                        "description": "description",
                        "priority": "P0"
                      }
                    },
                    {
                      "type": "createCheck",
                      "createCheck": {
                        "title": "title",
                        "description": "description",
                        "priority": "P0"
                      }
                    }
                  ],
                  "functions": {
                    "functions": {
                      "type": "createFunction",
                      "createFunction": {
                        "title": "title",
                        "description": "description",
                        "node": {
                          "type": "enum",
                          "enum": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "function",
                                "function": {
                                  "functionReference": "functionReference",
                                  "functionIdentifier": {
                                    "type": "variable",
                                    "variable": "functionIdentifier"
                                  }
                                }
                              },
                              "function": "MIN"
                            }
                          }
                        }
                      }
                    }
                  },
                  "checklistVariables": [
                    {
                      "name": "name",
                      "value": {
                        "type": "checklistFunction",
                        "checklistFunction": "value"
                      }
                    },
                    {
                      "name": "name",
                      "value": {
                        "type": "checklistFunction",
                        "checklistFunction": "value"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "metadata": {
                    "authorRid": "authorRid",
                    "assigneeRid": "assigneeRid",
                    "title": "title",
                    "description": "description",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "lastUsed": "2024-01-15T09:30:00Z",
                    "isArchived": true,
                    "isPublished": true
                  },
                  "commit": {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  },
                  "functions": [
                    {
                      "rid": "rid",
                      "functionLineageRid": "functionLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "functionNode": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    },
                    {
                      "rid": "rid",
                      "functionLineageRid": "functionLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "functionNode": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    }
                  ],
                  "checks": [
                    {
                      "type": "check",
                      "check": {
                        "rid": "rid",
                        "checkLineageRid": "checkLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "priority": "P0",
                        "chart": {
                          "rid": "rid",
                          "version": 1
                        },
                        "condition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {
                                  "tags": "tags"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "check",
                      "check": {
                        "rid": "rid",
                        "checkLineageRid": "checkLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "priority": "P0",
                        "chart": {
                          "rid": "rid",
                          "version": 1
                        },
                        "condition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {
                                  "tags": "tags"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "checklistVariables": [
                    {
                      "name": "name",
                      "displayName": "displayName",
                      "value": {
                        "type": "checklistVariable",
                        "checklistVariable": "value"
                      }
                    },
                    {
                      "name": "name",
                      "displayName": "displayName",
                      "value": {
                        "type": "checklistVariable",
                        "checklistVariable": "value"
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "save-working-state",
          "method": "POST",
          "id": "saveWorkingState",
          "originalEndpointId": "endpoint_Checklist.saveWorkingState",
          "name": "Save Working State",
          "path": {
            "pathParameters": [
              {
                "key": "checklistRid",
                "type": {
                  "type": "id",
                  "value": "type_common:ChecklistRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/checklists"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "checklistRid"
              },
              {
                "type": "literal",
                "value": "/save-working-state"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:SaveChecklistRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:VersionedChecklist"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/checklists/checklistRid/save-working-state",
              "pathParameters": {
                "checklistRid": "checklistRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "checks": [
                  {
                    "type": "createCheck",
                    "createCheck": {
                      "title": "title",
                      "description": "description",
                      "priority": "P0"
                    }
                  },
                  {
                    "type": "createCheck",
                    "createCheck": {
                      "title": "title",
                      "description": "description",
                      "priority": "P0"
                    }
                  }
                ],
                "functions": {
                  "functions": {
                    "type": "createFunction",
                    "createFunction": {
                      "title": "title",
                      "description": "description",
                      "node": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    }
                  }
                },
                "checklistVariables": [
                  {
                    "name": "name",
                    "value": {
                      "type": "checklistFunction",
                      "checklistFunction": "value"
                    }
                  },
                  {
                    "name": "name",
                    "value": {
                      "type": "checklistFunction",
                      "checklistFunction": "value"
                    }
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "metadata": {
                  "authorRid": "authorRid",
                  "assigneeRid": "assigneeRid",
                  "title": "title",
                  "description": "description",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "lastUsed": "2024-01-15T09:30:00Z",
                  "isArchived": true,
                  "isPublished": true
                },
                "commit": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                },
                "functions": [
                  {
                    "rid": "rid",
                    "functionLineageRid": "functionLineageRid",
                    "title": "title",
                    "description": "description",
                    "autoGeneratedTitle": "autoGeneratedTitle",
                    "autoGeneratedDescription": "autoGeneratedDescription",
                    "functionNode": {
                      "type": "enum",
                      "enum": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      }
                    }
                  },
                  {
                    "rid": "rid",
                    "functionLineageRid": "functionLineageRid",
                    "title": "title",
                    "description": "description",
                    "autoGeneratedTitle": "autoGeneratedTitle",
                    "autoGeneratedDescription": "autoGeneratedDescription",
                    "functionNode": {
                      "type": "enum",
                      "enum": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      }
                    }
                  }
                ],
                "checks": [
                  {
                    "type": "check",
                    "check": {
                      "rid": "rid",
                      "checkLineageRid": "checkLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "priority": "P0",
                      "chart": {
                        "rid": "rid",
                        "version": 1
                      },
                      "condition": {
                        "type": "numRanges",
                        "numRanges": {
                          "ranges": {
                            "type": "function",
                            "function": {
                              "functionReference": "functionReference",
                              "functionIdentifier": {
                                "type": "variable",
                                "variable": "functionIdentifier"
                              }
                            }
                          },
                          "functionSpec": {
                            "key": "value"
                          },
                          "threshold": 1,
                          "operator": "GREATER_THAN",
                          "variables": {
                            "variables": {
                              "dataSourceRef": "dataSourceRef",
                              "channel": "channel",
                              "tags": {
                                "tags": "tags"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "check",
                    "check": {
                      "rid": "rid",
                      "checkLineageRid": "checkLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "priority": "P0",
                      "chart": {
                        "rid": "rid",
                        "version": 1
                      },
                      "condition": {
                        "type": "numRanges",
                        "numRanges": {
                          "ranges": {
                            "type": "function",
                            "function": {
                              "functionReference": "functionReference",
                              "functionIdentifier": {
                                "type": "variable",
                                "variable": "functionIdentifier"
                              }
                            }
                          },
                          "functionSpec": {
                            "key": "value"
                          },
                          "threshold": 1,
                          "operator": "GREATER_THAN",
                          "variables": {
                            "variables": {
                              "dataSourceRef": "dataSourceRef",
                              "channel": "channel",
                              "tags": {
                                "tags": "tags"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ],
                "checklistVariables": [
                  {
                    "name": "name",
                    "displayName": "displayName",
                    "value": {
                      "type": "checklistVariable",
                      "checklistVariable": "value"
                    }
                  },
                  {
                    "name": "name",
                    "displayName": "displayName",
                    "value": {
                      "type": "checklistVariable",
                      "checklistVariable": "value"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "checks": [
                    {
                      "type": "createCheck",
                      "createCheck": {
                        "title": "title",
                        "description": "description",
                        "priority": "P0"
                      }
                    },
                    {
                      "type": "createCheck",
                      "createCheck": {
                        "title": "title",
                        "description": "description",
                        "priority": "P0"
                      }
                    }
                  ],
                  "functions": {
                    "functions": {
                      "type": "createFunction",
                      "createFunction": {
                        "title": "title",
                        "description": "description",
                        "node": {
                          "type": "enum",
                          "enum": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "function",
                                "function": {
                                  "functionReference": "functionReference",
                                  "functionIdentifier": {
                                    "type": "variable",
                                    "variable": "functionIdentifier"
                                  }
                                }
                              },
                              "function": "MIN"
                            }
                          }
                        }
                      }
                    }
                  },
                  "checklistVariables": [
                    {
                      "name": "name",
                      "value": {
                        "type": "checklistFunction",
                        "checklistFunction": "value"
                      }
                    },
                    {
                      "name": "name",
                      "value": {
                        "type": "checklistFunction",
                        "checklistFunction": "value"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "metadata": {
                    "authorRid": "authorRid",
                    "assigneeRid": "assigneeRid",
                    "title": "title",
                    "description": "description",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "lastUsed": "2024-01-15T09:30:00Z",
                    "isArchived": true,
                    "isPublished": true
                  },
                  "commit": {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  },
                  "functions": [
                    {
                      "rid": "rid",
                      "functionLineageRid": "functionLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "functionNode": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    },
                    {
                      "rid": "rid",
                      "functionLineageRid": "functionLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "functionNode": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    }
                  ],
                  "checks": [
                    {
                      "type": "check",
                      "check": {
                        "rid": "rid",
                        "checkLineageRid": "checkLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "priority": "P0",
                        "chart": {
                          "rid": "rid",
                          "version": 1
                        },
                        "condition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {
                                  "tags": "tags"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "check",
                      "check": {
                        "rid": "rid",
                        "checkLineageRid": "checkLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "priority": "P0",
                        "chart": {
                          "rid": "rid",
                          "version": 1
                        },
                        "condition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {
                                  "tags": "tags"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "checklistVariables": [
                    {
                      "name": "name",
                      "displayName": "displayName",
                      "value": {
                        "type": "checklistVariable",
                        "checklistVariable": "value"
                      }
                    },
                    {
                      "name": "name",
                      "displayName": "displayName",
                      "value": {
                        "type": "checklistVariable",
                        "checklistVariable": "value"
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "merge-to-main",
          "method": "POST",
          "id": "mergeToMain",
          "originalEndpointId": "endpoint_Checklist.mergeToMain",
          "name": "Merge To Main",
          "path": {
            "pathParameters": [
              {
                "key": "checklistRid",
                "type": {
                  "type": "id",
                  "value": "type_common:ChecklistRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/checklists"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "checklistRid"
              },
              {
                "type": "literal",
                "value": "/merge-to-main"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:MergeToMainRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:VersionedChecklist"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/checklists/checklistRid/merge-to-main",
              "pathParameters": {
                "checklistRid": "checklistRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "branchName": "branchName",
                "message": "message"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "metadata": {
                  "authorRid": "authorRid",
                  "assigneeRid": "assigneeRid",
                  "title": "title",
                  "description": "description",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "lastUsed": "2024-01-15T09:30:00Z",
                  "isArchived": true,
                  "isPublished": true
                },
                "commit": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                },
                "functions": [
                  {
                    "rid": "rid",
                    "functionLineageRid": "functionLineageRid",
                    "title": "title",
                    "description": "description",
                    "autoGeneratedTitle": "autoGeneratedTitle",
                    "autoGeneratedDescription": "autoGeneratedDescription",
                    "functionNode": {
                      "type": "enum",
                      "enum": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      }
                    }
                  },
                  {
                    "rid": "rid",
                    "functionLineageRid": "functionLineageRid",
                    "title": "title",
                    "description": "description",
                    "autoGeneratedTitle": "autoGeneratedTitle",
                    "autoGeneratedDescription": "autoGeneratedDescription",
                    "functionNode": {
                      "type": "enum",
                      "enum": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      }
                    }
                  }
                ],
                "checks": [
                  {
                    "type": "check",
                    "check": {
                      "rid": "rid",
                      "checkLineageRid": "checkLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "priority": "P0",
                      "chart": {
                        "rid": "rid",
                        "version": 1
                      },
                      "condition": {
                        "type": "numRanges",
                        "numRanges": {
                          "ranges": {
                            "type": "function",
                            "function": {
                              "functionReference": "functionReference",
                              "functionIdentifier": {
                                "type": "variable",
                                "variable": "functionIdentifier"
                              }
                            }
                          },
                          "functionSpec": {
                            "key": "value"
                          },
                          "threshold": 1,
                          "operator": "GREATER_THAN",
                          "variables": {
                            "variables": {
                              "dataSourceRef": "dataSourceRef",
                              "channel": "channel",
                              "tags": {
                                "tags": "tags"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "check",
                    "check": {
                      "rid": "rid",
                      "checkLineageRid": "checkLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "priority": "P0",
                      "chart": {
                        "rid": "rid",
                        "version": 1
                      },
                      "condition": {
                        "type": "numRanges",
                        "numRanges": {
                          "ranges": {
                            "type": "function",
                            "function": {
                              "functionReference": "functionReference",
                              "functionIdentifier": {
                                "type": "variable",
                                "variable": "functionIdentifier"
                              }
                            }
                          },
                          "functionSpec": {
                            "key": "value"
                          },
                          "threshold": 1,
                          "operator": "GREATER_THAN",
                          "variables": {
                            "variables": {
                              "dataSourceRef": "dataSourceRef",
                              "channel": "channel",
                              "tags": {
                                "tags": "tags"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ],
                "checklistVariables": [
                  {
                    "name": "name",
                    "displayName": "displayName",
                    "value": {
                      "type": "checklistVariable",
                      "checklistVariable": "value"
                    }
                  },
                  {
                    "name": "name",
                    "displayName": "displayName",
                    "value": {
                      "type": "checklistVariable",
                      "checklistVariable": "value"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "branchName": "branchName",
                  "message": "message"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "metadata": {
                    "authorRid": "authorRid",
                    "assigneeRid": "assigneeRid",
                    "title": "title",
                    "description": "description",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "lastUsed": "2024-01-15T09:30:00Z",
                    "isArchived": true,
                    "isPublished": true
                  },
                  "commit": {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  },
                  "functions": [
                    {
                      "rid": "rid",
                      "functionLineageRid": "functionLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "functionNode": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    },
                    {
                      "rid": "rid",
                      "functionLineageRid": "functionLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "functionNode": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    }
                  ],
                  "checks": [
                    {
                      "type": "check",
                      "check": {
                        "rid": "rid",
                        "checkLineageRid": "checkLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "priority": "P0",
                        "chart": {
                          "rid": "rid",
                          "version": 1
                        },
                        "condition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {
                                  "tags": "tags"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "check",
                      "check": {
                        "rid": "rid",
                        "checkLineageRid": "checkLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "priority": "P0",
                        "chart": {
                          "rid": "rid",
                          "version": 1
                        },
                        "condition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {
                                  "tags": "tags"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "checklistVariables": [
                    {
                      "name": "name",
                      "displayName": "displayName",
                      "value": {
                        "type": "checklistVariable",
                        "checklistVariable": "value"
                      }
                    },
                    {
                      "name": "name",
                      "displayName": "displayName",
                      "value": {
                        "type": "checklistVariable",
                        "checklistVariable": "value"
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-data-source-ref-names",
          "method": "POST",
          "id": "updateDataSourceRefNames",
          "originalEndpointId": "endpoint_Checklist.updateDataSourceRefNames",
          "name": "Update Data Source Ref Names",
          "path": {
            "pathParameters": [
              {
                "key": "checklistRid",
                "type": {
                  "type": "id",
                  "value": "type_common:ChecklistRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/checklists"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "checklistRid"
              },
              {
                "type": "literal",
                "value": "/update-ref-names"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_common:DataSourceRefName"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_common:DataSourceRefName"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:VersionedChecklist"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/checklists/checklistRid/update-ref-names",
              "pathParameters": {
                "checklistRid": "checklistRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "string": "string"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "metadata": {
                  "authorRid": "authorRid",
                  "assigneeRid": "assigneeRid",
                  "title": "title",
                  "description": "description",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "lastUsed": "2024-01-15T09:30:00Z",
                  "isArchived": true,
                  "isPublished": true
                },
                "commit": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                },
                "functions": [
                  {
                    "rid": "rid",
                    "functionLineageRid": "functionLineageRid",
                    "title": "title",
                    "description": "description",
                    "autoGeneratedTitle": "autoGeneratedTitle",
                    "autoGeneratedDescription": "autoGeneratedDescription",
                    "functionNode": {
                      "type": "enum",
                      "enum": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      }
                    }
                  },
                  {
                    "rid": "rid",
                    "functionLineageRid": "functionLineageRid",
                    "title": "title",
                    "description": "description",
                    "autoGeneratedTitle": "autoGeneratedTitle",
                    "autoGeneratedDescription": "autoGeneratedDescription",
                    "functionNode": {
                      "type": "enum",
                      "enum": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      }
                    }
                  }
                ],
                "checks": [
                  {
                    "type": "check",
                    "check": {
                      "rid": "rid",
                      "checkLineageRid": "checkLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "priority": "P0",
                      "chart": {
                        "rid": "rid",
                        "version": 1
                      },
                      "condition": {
                        "type": "numRanges",
                        "numRanges": {
                          "ranges": {
                            "type": "function",
                            "function": {
                              "functionReference": "functionReference",
                              "functionIdentifier": {
                                "type": "variable",
                                "variable": "functionIdentifier"
                              }
                            }
                          },
                          "functionSpec": {
                            "key": "value"
                          },
                          "threshold": 1,
                          "operator": "GREATER_THAN",
                          "variables": {
                            "variables": {
                              "dataSourceRef": "dataSourceRef",
                              "channel": "channel",
                              "tags": {
                                "tags": "tags"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "check",
                    "check": {
                      "rid": "rid",
                      "checkLineageRid": "checkLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "priority": "P0",
                      "chart": {
                        "rid": "rid",
                        "version": 1
                      },
                      "condition": {
                        "type": "numRanges",
                        "numRanges": {
                          "ranges": {
                            "type": "function",
                            "function": {
                              "functionReference": "functionReference",
                              "functionIdentifier": {
                                "type": "variable",
                                "variable": "functionIdentifier"
                              }
                            }
                          },
                          "functionSpec": {
                            "key": "value"
                          },
                          "threshold": 1,
                          "operator": "GREATER_THAN",
                          "variables": {
                            "variables": {
                              "dataSourceRef": "dataSourceRef",
                              "channel": "channel",
                              "tags": {
                                "tags": "tags"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ],
                "checklistVariables": [
                  {
                    "name": "name",
                    "displayName": "displayName",
                    "value": {
                      "type": "checklistVariable",
                      "checklistVariable": "value"
                    }
                  },
                  {
                    "name": "name",
                    "displayName": "displayName",
                    "value": {
                      "type": "checklistVariable",
                      "checklistVariable": "value"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "string": "string"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "metadata": {
                    "authorRid": "authorRid",
                    "assigneeRid": "assigneeRid",
                    "title": "title",
                    "description": "description",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "lastUsed": "2024-01-15T09:30:00Z",
                    "isArchived": true,
                    "isPublished": true
                  },
                  "commit": {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  },
                  "functions": [
                    {
                      "rid": "rid",
                      "functionLineageRid": "functionLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "functionNode": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    },
                    {
                      "rid": "rid",
                      "functionLineageRid": "functionLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "functionNode": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    }
                  ],
                  "checks": [
                    {
                      "type": "check",
                      "check": {
                        "rid": "rid",
                        "checkLineageRid": "checkLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "priority": "P0",
                        "chart": {
                          "rid": "rid",
                          "version": 1
                        },
                        "condition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {
                                  "tags": "tags"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "check",
                      "check": {
                        "rid": "rid",
                        "checkLineageRid": "checkLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "priority": "P0",
                        "chart": {
                          "rid": "rid",
                          "version": 1
                        },
                        "condition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {
                                  "tags": "tags"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "checklistVariables": [
                    {
                      "name": "name",
                      "displayName": "displayName",
                      "value": {
                        "type": "checklistVariable",
                        "checklistVariable": "value"
                      }
                    },
                    {
                      "name": "name",
                      "displayName": "displayName",
                      "value": {
                        "type": "checklistVariable",
                        "checklistVariable": "value"
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-metadata",
          "method": "PUT",
          "id": "updateMetadata",
          "originalEndpointId": "endpoint_Checklist.updateMetadata",
          "name": "Update Metadata",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:ChecklistRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/checklists"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/update-metadata"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:UpdateChecklistMetadataRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:ChecklistMetadata"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/checklists/rid/update-metadata",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "authorRid": "authorRid",
                "assigneeRid": "assigneeRid",
                "title": "title",
                "description": "description",
                "createdAt": "2024-01-15T09:30:00Z",
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "lastUsed": "2024-01-15T09:30:00Z",
                "isArchived": true,
                "isPublished": true
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "authorRid": "authorRid",
                  "assigneeRid": "assigneeRid",
                  "title": "title",
                  "description": "description",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "lastUsed": "2024-01-15T09:30:00Z",
                  "isArchived": true,
                  "isPublished": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get",
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_Checklist.get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:ChecklistRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/checklists"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "key": "branch",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_InternalVersioning:BranchName"
                }
              }
            },
            {
              "key": "commit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_InternalVersioning:CommitId"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:VersionedChecklist"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/checklists/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "metadata": {
                  "authorRid": "authorRid",
                  "assigneeRid": "assigneeRid",
                  "title": "title",
                  "description": "description",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "lastUsed": "2024-01-15T09:30:00Z",
                  "isArchived": true,
                  "isPublished": true
                },
                "commit": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                },
                "functions": [
                  {
                    "rid": "rid",
                    "functionLineageRid": "functionLineageRid",
                    "title": "title",
                    "description": "description",
                    "autoGeneratedTitle": "autoGeneratedTitle",
                    "autoGeneratedDescription": "autoGeneratedDescription",
                    "functionNode": {
                      "type": "enum",
                      "enum": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      }
                    }
                  },
                  {
                    "rid": "rid",
                    "functionLineageRid": "functionLineageRid",
                    "title": "title",
                    "description": "description",
                    "autoGeneratedTitle": "autoGeneratedTitle",
                    "autoGeneratedDescription": "autoGeneratedDescription",
                    "functionNode": {
                      "type": "enum",
                      "enum": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      }
                    }
                  }
                ],
                "checks": [
                  {
                    "type": "check",
                    "check": {
                      "rid": "rid",
                      "checkLineageRid": "checkLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "priority": "P0",
                      "chart": {
                        "rid": "rid",
                        "version": 1
                      },
                      "condition": {
                        "type": "numRanges",
                        "numRanges": {
                          "ranges": {
                            "type": "function",
                            "function": {
                              "functionReference": "functionReference",
                              "functionIdentifier": {
                                "type": "variable",
                                "variable": "functionIdentifier"
                              }
                            }
                          },
                          "functionSpec": {
                            "key": "value"
                          },
                          "threshold": 1,
                          "operator": "GREATER_THAN",
                          "variables": {
                            "variables": {
                              "dataSourceRef": "dataSourceRef",
                              "channel": "channel",
                              "tags": {
                                "tags": "tags"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "check",
                    "check": {
                      "rid": "rid",
                      "checkLineageRid": "checkLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "priority": "P0",
                      "chart": {
                        "rid": "rid",
                        "version": 1
                      },
                      "condition": {
                        "type": "numRanges",
                        "numRanges": {
                          "ranges": {
                            "type": "function",
                            "function": {
                              "functionReference": "functionReference",
                              "functionIdentifier": {
                                "type": "variable",
                                "variable": "functionIdentifier"
                              }
                            }
                          },
                          "functionSpec": {
                            "key": "value"
                          },
                          "threshold": 1,
                          "operator": "GREATER_THAN",
                          "variables": {
                            "variables": {
                              "dataSourceRef": "dataSourceRef",
                              "channel": "channel",
                              "tags": {
                                "tags": "tags"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ],
                "checklistVariables": [
                  {
                    "name": "name",
                    "displayName": "displayName",
                    "value": {
                      "type": "checklistVariable",
                      "checklistVariable": "value"
                    }
                  },
                  {
                    "name": "name",
                    "displayName": "displayName",
                    "value": {
                      "type": "checklistVariable",
                      "checklistVariable": "value"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "metadata": {
                    "authorRid": "authorRid",
                    "assigneeRid": "assigneeRid",
                    "title": "title",
                    "description": "description",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "lastUsed": "2024-01-15T09:30:00Z",
                    "isArchived": true,
                    "isPublished": true
                  },
                  "commit": {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  },
                  "functions": [
                    {
                      "rid": "rid",
                      "functionLineageRid": "functionLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "functionNode": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    },
                    {
                      "rid": "rid",
                      "functionLineageRid": "functionLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "functionNode": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    }
                  ],
                  "checks": [
                    {
                      "type": "check",
                      "check": {
                        "rid": "rid",
                        "checkLineageRid": "checkLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "priority": "P0",
                        "chart": {
                          "rid": "rid",
                          "version": 1
                        },
                        "condition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {
                                  "tags": "tags"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "check",
                      "check": {
                        "rid": "rid",
                        "checkLineageRid": "checkLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "priority": "P0",
                        "chart": {
                          "rid": "rid",
                          "version": 1
                        },
                        "condition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {
                                  "tags": "tags"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "checklistVariables": [
                    {
                      "name": "name",
                      "displayName": "displayName",
                      "value": {
                        "type": "checklistVariable",
                        "checklistVariable": "value"
                      }
                    },
                    {
                      "name": "name",
                      "displayName": "displayName",
                      "value": {
                        "type": "checklistVariable",
                        "checklistVariable": "value"
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get",
          "method": "POST",
          "id": "batchGet",
          "originalEndpointId": "endpoint_Checklist.batchGet",
          "name": "Batch Get",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/checklists"
              },
              {
                "type": "literal",
                "value": "/batch-get"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Checklist:PinnedChecklistRef"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Checklist:VersionedChecklist"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/checklists/batch-get",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": [
                {
                  "rid": "rid",
                  "commit": "commit"
                }
              ],
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "metadata": {
                    "authorRid": "authorRid",
                    "assigneeRid": "assigneeRid",
                    "title": "title",
                    "description": "description",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "lastUsed": "2024-01-15T09:30:00Z",
                    "isArchived": true,
                    "isPublished": true
                  },
                  "commit": {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  },
                  "functions": [
                    {
                      "rid": "rid",
                      "functionLineageRid": "functionLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "functionNode": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    },
                    {
                      "rid": "rid",
                      "functionLineageRid": "functionLineageRid",
                      "title": "title",
                      "description": "description",
                      "autoGeneratedTitle": "autoGeneratedTitle",
                      "autoGeneratedDescription": "autoGeneratedDescription",
                      "functionNode": {
                        "type": "enum",
                        "enum": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      }
                    }
                  ],
                  "checks": [
                    {
                      "type": "check",
                      "check": {
                        "rid": "rid",
                        "checkLineageRid": "checkLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "priority": "P0",
                        "chart": {
                          "rid": "rid",
                          "version": 1
                        },
                        "condition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "unionRange",
                              "unionRange": {
                                "inputs": []
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "check",
                      "check": {
                        "rid": "rid",
                        "checkLineageRid": "checkLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "priority": "P0",
                        "chart": {
                          "rid": "rid",
                          "version": 1
                        },
                        "condition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "unionRange",
                              "unionRange": {
                                "inputs": []
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {}
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "checklistVariables": [
                    {
                      "name": "name",
                      "displayName": "displayName",
                      "value": {
                        "type": "checklistVariable",
                        "checklistVariable": "value"
                      }
                    },
                    {
                      "name": "name",
                      "displayName": "displayName",
                      "value": {
                        "type": "checklistVariable",
                        "checklistVariable": "value"
                      }
                    }
                  ]
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "commit": "commit"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "metadata": {
                      "authorRid": "authorRid",
                      "assigneeRid": "assigneeRid",
                      "title": "title",
                      "description": "description",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "lastUsed": "2024-01-15T09:30:00Z",
                      "isArchived": true,
                      "isPublished": true
                    },
                    "commit": {
                      "id": "id",
                      "resourceRid": "resourceRid",
                      "parentCommit": "parentCommit",
                      "mergeParentCommit": "mergeParentCommit",
                      "message": "message",
                      "isWorkingState": true,
                      "committedBy": "committedBy",
                      "committedAt": "2024-01-15T09:30:00Z"
                    },
                    "functions": [
                      {
                        "rid": "rid",
                        "functionLineageRid": "functionLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "functionNode": {
                          "type": "enum",
                          "enum": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "function",
                                "function": {
                                  "functionReference": "functionReference",
                                  "functionIdentifier": {
                                    "type": "variable",
                                    "variable": "functionIdentifier"
                                  }
                                }
                              },
                              "function": "MIN"
                            }
                          }
                        }
                      },
                      {
                        "rid": "rid",
                        "functionLineageRid": "functionLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "functionNode": {
                          "type": "enum",
                          "enum": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "function",
                                "function": {
                                  "functionReference": "functionReference",
                                  "functionIdentifier": {
                                    "type": "variable",
                                    "variable": "functionIdentifier"
                                  }
                                }
                              },
                              "function": "MIN"
                            }
                          }
                        }
                      }
                    ],
                    "checks": [
                      {
                        "type": "check",
                        "check": {
                          "rid": "rid",
                          "checkLineageRid": "checkLineageRid",
                          "title": "title",
                          "description": "description",
                          "autoGeneratedTitle": "autoGeneratedTitle",
                          "autoGeneratedDescription": "autoGeneratedDescription",
                          "priority": "P0",
                          "chart": {
                            "rid": "rid",
                            "version": 1
                          },
                          "condition": {
                            "type": "numRanges",
                            "numRanges": {
                              "ranges": {
                                "type": "unionRange",
                                "unionRange": {
                                  "inputs": []
                                }
                              },
                              "functionSpec": {
                                "key": "value"
                              },
                              "threshold": 1,
                              "operator": "GREATER_THAN",
                              "variables": {
                                "variables": {
                                  "dataSourceRef": "dataSourceRef",
                                  "channel": "channel",
                                  "tags": {}
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "check",
                        "check": {
                          "rid": "rid",
                          "checkLineageRid": "checkLineageRid",
                          "title": "title",
                          "description": "description",
                          "autoGeneratedTitle": "autoGeneratedTitle",
                          "autoGeneratedDescription": "autoGeneratedDescription",
                          "priority": "P0",
                          "chart": {
                            "rid": "rid",
                            "version": 1
                          },
                          "condition": {
                            "type": "numRanges",
                            "numRanges": {
                              "ranges": {
                                "type": "unionRange",
                                "unionRange": {
                                  "inputs": []
                                }
                              },
                              "functionSpec": {
                                "key": "value"
                              },
                              "threshold": 1,
                              "operator": "GREATER_THAN",
                              "variables": {
                                "variables": {
                                  "dataSourceRef": "dataSourceRef",
                                  "channel": "channel",
                                  "tags": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    ],
                    "checklistVariables": [
                      {
                        "name": "name",
                        "displayName": "displayName",
                        "value": {
                          "type": "checklistVariable",
                          "checklistVariable": "value"
                        }
                      },
                      {
                        "name": "name",
                        "displayName": "displayName",
                        "value": {
                          "type": "checklistVariable",
                          "checklistVariable": "value"
                        }
                      }
                    ]
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get-metadata",
          "method": "POST",
          "id": "batchGetMetadata",
          "originalEndpointId": "endpoint_Checklist.batchGetMetadata",
          "name": "Batch Get Metadata",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/checklists"
              },
              {
                "type": "literal",
                "value": "/batch-get-metadata"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:BatchGetChecklistMetadataRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:BatchGetChecklistMetadataResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/checklists/batch-get-metadata",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "rids": ["rids"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "metadata": {
                  "metadata": {
                    "authorRid": "authorRid",
                    "assigneeRid": "assigneeRid",
                    "title": "title",
                    "description": "description",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "lastUsed": "2024-01-15T09:30:00Z",
                    "isArchived": true,
                    "isPublished": true
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "rids": ["rids"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "metadata": {
                    "metadata": {
                      "authorRid": "authorRid",
                      "assigneeRid": "assigneeRid",
                      "title": "title",
                      "description": "description",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "lastUsed": "2024-01-15T09:30:00Z",
                      "isArchived": true,
                      "isPublished": true
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search",
          "method": "POST",
          "id": "search",
          "originalEndpointId": "endpoint_Checklist.search",
          "name": "Search",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/checklists"
              },
              {
                "type": "literal",
                "value": "/search"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:SearchChecklistsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:VersionedChecklistPage"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/checklists/search",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "query": {
                  "type": "and",
                  "and": [
                    {
                      "type": "and",
                      "and": [
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "and": [
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "values": [
                  {
                    "rid": "rid",
                    "metadata": {
                      "authorRid": "authorRid",
                      "assigneeRid": "assigneeRid",
                      "title": "title",
                      "description": "description",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "lastUsed": "2024-01-15T09:30:00Z",
                      "isArchived": true,
                      "isPublished": true
                    },
                    "commit": {
                      "id": "id",
                      "resourceRid": "resourceRid",
                      "parentCommit": "parentCommit",
                      "mergeParentCommit": "mergeParentCommit",
                      "message": "message",
                      "isWorkingState": true,
                      "committedBy": "committedBy",
                      "committedAt": "2024-01-15T09:30:00Z"
                    },
                    "functions": [
                      {
                        "rid": "rid",
                        "functionLineageRid": "functionLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "functionNode": {
                          "type": "enum",
                          "enum": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          }
                        }
                      },
                      {
                        "rid": "rid",
                        "functionLineageRid": "functionLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "functionNode": {
                          "type": "enum",
                          "enum": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          }
                        }
                      }
                    ],
                    "checks": [
                      {
                        "type": "check",
                        "check": {
                          "rid": "rid",
                          "checkLineageRid": "checkLineageRid",
                          "title": "title",
                          "description": "description",
                          "autoGeneratedTitle": "autoGeneratedTitle",
                          "autoGeneratedDescription": "autoGeneratedDescription",
                          "priority": "P0",
                          "chart": {
                            "rid": "rid",
                            "version": 1
                          }
                        }
                      },
                      {
                        "type": "check",
                        "check": {
                          "rid": "rid",
                          "checkLineageRid": "checkLineageRid",
                          "title": "title",
                          "description": "description",
                          "autoGeneratedTitle": "autoGeneratedTitle",
                          "autoGeneratedDescription": "autoGeneratedDescription",
                          "priority": "P0",
                          "chart": {
                            "rid": "rid",
                            "version": 1
                          }
                        }
                      }
                    ],
                    "checklistVariables": [
                      {
                        "name": "name",
                        "displayName": "displayName",
                        "value": {
                          "type": "checklistVariable",
                          "checklistVariable": "value"
                        }
                      },
                      {
                        "name": "name",
                        "displayName": "displayName",
                        "value": {
                          "type": "checklistVariable",
                          "checklistVariable": "value"
                        }
                      }
                    ]
                  },
                  {
                    "rid": "rid",
                    "metadata": {
                      "authorRid": "authorRid",
                      "assigneeRid": "assigneeRid",
                      "title": "title",
                      "description": "description",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "lastUsed": "2024-01-15T09:30:00Z",
                      "isArchived": true,
                      "isPublished": true
                    },
                    "commit": {
                      "id": "id",
                      "resourceRid": "resourceRid",
                      "parentCommit": "parentCommit",
                      "mergeParentCommit": "mergeParentCommit",
                      "message": "message",
                      "isWorkingState": true,
                      "committedBy": "committedBy",
                      "committedAt": "2024-01-15T09:30:00Z"
                    },
                    "functions": [
                      {
                        "rid": "rid",
                        "functionLineageRid": "functionLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "functionNode": {
                          "type": "enum",
                          "enum": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          }
                        }
                      },
                      {
                        "rid": "rid",
                        "functionLineageRid": "functionLineageRid",
                        "title": "title",
                        "description": "description",
                        "autoGeneratedTitle": "autoGeneratedTitle",
                        "autoGeneratedDescription": "autoGeneratedDescription",
                        "functionNode": {
                          "type": "enum",
                          "enum": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          }
                        }
                      }
                    ],
                    "checks": [
                      {
                        "type": "check",
                        "check": {
                          "rid": "rid",
                          "checkLineageRid": "checkLineageRid",
                          "title": "title",
                          "description": "description",
                          "autoGeneratedTitle": "autoGeneratedTitle",
                          "autoGeneratedDescription": "autoGeneratedDescription",
                          "priority": "P0",
                          "chart": {
                            "rid": "rid",
                            "version": 1
                          }
                        }
                      },
                      {
                        "type": "check",
                        "check": {
                          "rid": "rid",
                          "checkLineageRid": "checkLineageRid",
                          "title": "title",
                          "description": "description",
                          "autoGeneratedTitle": "autoGeneratedTitle",
                          "autoGeneratedDescription": "autoGeneratedDescription",
                          "priority": "P0",
                          "chart": {
                            "rid": "rid",
                            "version": 1
                          }
                        }
                      }
                    ],
                    "checklistVariables": [
                      {
                        "name": "name",
                        "displayName": "displayName",
                        "value": {
                          "type": "checklistVariable",
                          "checklistVariable": "value"
                        }
                      },
                      {
                        "name": "name",
                        "displayName": "displayName",
                        "value": {
                          "type": "checklistVariable",
                          "checklistVariable": "value"
                        }
                      }
                    ]
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "query": {
                    "type": "and",
                    "and": [
                      {
                        "type": "and",
                        "and": [
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "and",
                        "and": [
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "values": [
                    {
                      "rid": "rid",
                      "metadata": {
                        "authorRid": "authorRid",
                        "assigneeRid": "assigneeRid",
                        "title": "title",
                        "description": "description",
                        "createdAt": "2024-01-15T09:30:00Z",
                        "properties": {
                          "properties": "properties"
                        },
                        "labels": ["labels"],
                        "lastUsed": "2024-01-15T09:30:00Z",
                        "isArchived": true,
                        "isPublished": true
                      },
                      "commit": {
                        "id": "id",
                        "resourceRid": "resourceRid",
                        "parentCommit": "parentCommit",
                        "mergeParentCommit": "mergeParentCommit",
                        "message": "message",
                        "isWorkingState": true,
                        "committedBy": "committedBy",
                        "committedAt": "2024-01-15T09:30:00Z"
                      },
                      "functions": [
                        {
                          "rid": "rid",
                          "functionLineageRid": "functionLineageRid",
                          "title": "title",
                          "description": "description",
                          "autoGeneratedTitle": "autoGeneratedTitle",
                          "autoGeneratedDescription": "autoGeneratedDescription",
                          "functionNode": {
                            "type": "enum",
                            "enum": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            }
                          }
                        },
                        {
                          "rid": "rid",
                          "functionLineageRid": "functionLineageRid",
                          "title": "title",
                          "description": "description",
                          "autoGeneratedTitle": "autoGeneratedTitle",
                          "autoGeneratedDescription": "autoGeneratedDescription",
                          "functionNode": {
                            "type": "enum",
                            "enum": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            }
                          }
                        }
                      ],
                      "checks": [
                        {
                          "type": "check",
                          "check": {
                            "rid": "rid",
                            "checkLineageRid": "checkLineageRid",
                            "title": "title",
                            "description": "description",
                            "autoGeneratedTitle": "autoGeneratedTitle",
                            "autoGeneratedDescription": "autoGeneratedDescription",
                            "priority": "P0",
                            "chart": {
                              "rid": "rid",
                              "version": 1
                            }
                          }
                        },
                        {
                          "type": "check",
                          "check": {
                            "rid": "rid",
                            "checkLineageRid": "checkLineageRid",
                            "title": "title",
                            "description": "description",
                            "autoGeneratedTitle": "autoGeneratedTitle",
                            "autoGeneratedDescription": "autoGeneratedDescription",
                            "priority": "P0",
                            "chart": {
                              "rid": "rid",
                              "version": 1
                            }
                          }
                        }
                      ],
                      "checklistVariables": [
                        {
                          "name": "name",
                          "displayName": "displayName",
                          "value": {
                            "type": "checklistVariable",
                            "checklistVariable": "value"
                          }
                        },
                        {
                          "name": "name",
                          "displayName": "displayName",
                          "value": {
                            "type": "checklistVariable",
                            "checklistVariable": "value"
                          }
                        }
                      ]
                    },
                    {
                      "rid": "rid",
                      "metadata": {
                        "authorRid": "authorRid",
                        "assigneeRid": "assigneeRid",
                        "title": "title",
                        "description": "description",
                        "createdAt": "2024-01-15T09:30:00Z",
                        "properties": {
                          "properties": "properties"
                        },
                        "labels": ["labels"],
                        "lastUsed": "2024-01-15T09:30:00Z",
                        "isArchived": true,
                        "isPublished": true
                      },
                      "commit": {
                        "id": "id",
                        "resourceRid": "resourceRid",
                        "parentCommit": "parentCommit",
                        "mergeParentCommit": "mergeParentCommit",
                        "message": "message",
                        "isWorkingState": true,
                        "committedBy": "committedBy",
                        "committedAt": "2024-01-15T09:30:00Z"
                      },
                      "functions": [
                        {
                          "rid": "rid",
                          "functionLineageRid": "functionLineageRid",
                          "title": "title",
                          "description": "description",
                          "autoGeneratedTitle": "autoGeneratedTitle",
                          "autoGeneratedDescription": "autoGeneratedDescription",
                          "functionNode": {
                            "type": "enum",
                            "enum": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            }
                          }
                        },
                        {
                          "rid": "rid",
                          "functionLineageRid": "functionLineageRid",
                          "title": "title",
                          "description": "description",
                          "autoGeneratedTitle": "autoGeneratedTitle",
                          "autoGeneratedDescription": "autoGeneratedDescription",
                          "functionNode": {
                            "type": "enum",
                            "enum": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            }
                          }
                        }
                      ],
                      "checks": [
                        {
                          "type": "check",
                          "check": {
                            "rid": "rid",
                            "checkLineageRid": "checkLineageRid",
                            "title": "title",
                            "description": "description",
                            "autoGeneratedTitle": "autoGeneratedTitle",
                            "autoGeneratedDescription": "autoGeneratedDescription",
                            "priority": "P0",
                            "chart": {
                              "rid": "rid",
                              "version": 1
                            }
                          }
                        },
                        {
                          "type": "check",
                          "check": {
                            "rid": "rid",
                            "checkLineageRid": "checkLineageRid",
                            "title": "title",
                            "description": "description",
                            "autoGeneratedTitle": "autoGeneratedTitle",
                            "autoGeneratedDescription": "autoGeneratedDescription",
                            "priority": "P0",
                            "chart": {
                              "rid": "rid",
                              "version": 1
                            }
                          }
                        }
                      ],
                      "checklistVariables": [
                        {
                          "name": "name",
                          "displayName": "displayName",
                          "value": {
                            "type": "checklistVariable",
                            "checklistVariable": "value"
                          }
                        },
                        {
                          "name": "name",
                          "displayName": "displayName",
                          "value": {
                            "type": "checklistVariable",
                            "checklistVariable": "value"
                          }
                        }
                      ]
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "archive",
          "method": "POST",
          "id": "archive",
          "originalEndpointId": "endpoint_Checklist.archive",
          "name": "Archive",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/checklists"
              },
              {
                "type": "literal",
                "value": "/archive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:ArchiveChecklistsRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/checklists/archive",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "rids": ["rids"]
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "rids": ["rids"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "unarchive",
          "method": "POST",
          "id": "unarchive",
          "originalEndpointId": "endpoint_Checklist.unarchive",
          "name": "Unarchive",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/checklists"
              },
              {
                "type": "literal",
                "value": "/unarchive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:UnarchiveChecklistsRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/checklists/unarchive",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "rids": ["rids"]
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "rids": ["rids"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-check",
          "method": "GET",
          "id": "getCheck",
          "originalEndpointId": "endpoint_Checklist.getCheck",
          "name": "Get Check",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:CheckRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/checklists"
              },
              {
                "type": "literal",
                "value": "/check/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:Check"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/checklists/check/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "checkLineageRid": "checkLineageRid",
                "title": "title",
                "description": "description",
                "autoGeneratedTitle": "autoGeneratedTitle",
                "autoGeneratedDescription": "autoGeneratedDescription",
                "priority": "P0",
                "chart": {
                  "rid": "rid",
                  "version": 1
                },
                "condition": {
                  "type": "numRanges",
                  "numRanges": {
                    "ranges": {
                      "type": "function",
                      "function": {
                        "functionReference": "functionReference",
                        "functionIdentifier": {
                          "type": "variable",
                          "variable": "functionIdentifier"
                        }
                      }
                    },
                    "functionSpec": {
                      "key": "value"
                    },
                    "threshold": 1,
                    "operator": "GREATER_THAN",
                    "variables": {
                      "variables": {
                        "dataSourceRef": "dataSourceRef",
                        "channel": "channel",
                        "tags": {
                          "tags": "tags"
                        }
                      }
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "checkLineageRid": "checkLineageRid",
                  "title": "title",
                  "description": "description",
                  "autoGeneratedTitle": "autoGeneratedTitle",
                  "autoGeneratedDescription": "autoGeneratedDescription",
                  "priority": "P0",
                  "chart": {
                    "rid": "rid",
                    "version": 1
                  },
                  "condition": {
                    "type": "numRanges",
                    "numRanges": {
                      "ranges": {
                        "type": "function",
                        "function": {
                          "functionReference": "functionReference",
                          "functionIdentifier": {
                            "type": "variable",
                            "variable": "functionIdentifier"
                          }
                        }
                      },
                      "functionSpec": {
                        "key": "value"
                      },
                      "threshold": 1,
                      "operator": "GREATER_THAN",
                      "variables": {
                        "variables": {
                          "dataSourceRef": "dataSourceRef",
                          "channel": "channel",
                          "tags": {
                            "tags": "tags"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get-checks",
          "method": "POST",
          "id": "batchGetChecks",
          "originalEndpointId": "endpoint_Checklist.batchGetChecks",
          "name": "Batch Get Checks",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/checklists"
              },
              {
                "type": "literal",
                "value": "/check/batch-get"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:CheckRid"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Checklist:Check"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/checklists/check/batch-get",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": ["string"],
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "checkLineageRid": "checkLineageRid",
                  "title": "title",
                  "description": "description",
                  "autoGeneratedTitle": "autoGeneratedTitle",
                  "autoGeneratedDescription": "autoGeneratedDescription",
                  "priority": "P0",
                  "chart": {
                    "rid": "rid",
                    "version": 1
                  },
                  "condition": {
                    "type": "numRanges",
                    "numRanges": {
                      "ranges": {
                        "type": "function",
                        "function": {
                          "functionReference": "functionReference",
                          "functionIdentifier": {
                            "type": "variable",
                            "variable": "functionIdentifier"
                          }
                        }
                      },
                      "functionSpec": {
                        "key": "value"
                      },
                      "threshold": 1,
                      "operator": "GREATER_THAN",
                      "variables": {
                        "variables": {
                          "dataSourceRef": "dataSourceRef",
                          "channel": "channel",
                          "tags": {
                            "tags": "tags"
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": ["string"]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "checkLineageRid": "checkLineageRid",
                    "title": "title",
                    "description": "description",
                    "autoGeneratedTitle": "autoGeneratedTitle",
                    "autoGeneratedDescription": "autoGeneratedDescription",
                    "priority": "P0",
                    "chart": {
                      "rid": "rid",
                      "version": 1
                    },
                    "condition": {
                      "type": "numRanges",
                      "numRanges": {
                        "ranges": {
                          "type": "function",
                          "function": {
                            "functionReference": "functionReference",
                            "functionIdentifier": {
                              "type": "variable",
                              "variable": "functionIdentifier"
                            }
                          }
                        },
                        "functionSpec": {
                          "key": "value"
                        },
                        "threshold": 1,
                        "operator": "GREATER_THAN",
                        "variables": {
                          "variables": {
                            "dataSourceRef": "dataSourceRef",
                            "channel": "channel",
                            "tags": {
                              "tags": "tags"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-all-labels-and-properties",
          "method": "GET",
          "id": "getAllLabelsAndProperties",
          "originalEndpointId": "endpoint_Checklist.getAllLabelsAndProperties",
          "name": "Get All Labels And Properties",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/checklists"
              },
              {
                "type": "literal",
                "value": "/get-all-labels-properties"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Checklist:GetAllLabelsAndPropertiesResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/checklists/get-all-labels-properties",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "properties": {
                  "properties": ["properties"]
                },
                "labels": ["labels"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "properties": {
                    "properties": ["properties"]
                  },
                  "labels": ["labels"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Checklist:Check",
        "type_Checklist:Priority",
        "type_Checklist:CheckCondition",
        "type_Checklist:UnresolvedCheckCondition",
        "type_Checklist:UnresolvedNumRangesConditionV2",
        "type_Checklist:UnresolvedNumRangesConditionV3",
        "type_Checklist:UnresolvedParameterizedNumRangesConditionV1",
        "type_Checklist:UnresolvedVariables",
        "type_Checklist:NumRangesConditionV1",
        "type_Checklist:NumRangesConditionV2",
        "type_Checklist:NumRangesConditionV3",
        "type_Checklist:ParameterizedNumRangesConditionV1",
        "type_Checklist:CheckContext",
        "type_Checklist:UnresolvedComputeNodeWithContext",
        "type_Checklist:ComputeNodeWithContext",
        "type_Checklist:UnresolvedChecklistVariable",
        "type_Checklist:ChecklistVariable",
        "type_Checklist:UnresolvedVariableLocator",
        "type_Checklist:VariableLocator",
        "type_Checklist:TimestampLocator",
        "type_Checklist:Function",
        "type_Checklist:FunctionNode",
        "type_Checklist:PinnedChecklistRef",
        "type_Checklist:ChecklistRef",
        "type_Checklist:VersionedChecklist",
        "type_Checklist:ChecklistMetadata",
        "type_Checklist:VersionedChecklistPage",
        "type_Checklist:CreateChecklistRequest",
        "type_Checklist:CommitChecklistRequest",
        "type_Checklist:SaveChecklistRequest",
        "type_Checklist:MergeToMainRequest",
        "type_Checklist:UpdateChecklistMetadataRequest",
        "type_Checklist:ChecklistEntry",
        "type_Checklist:CreateChecklistEntryRequest",
        "type_Checklist:UpdateChecklistEntryRequest",
        "type_Checklist:CreateCheckRequest",
        "type_Checklist:CreateFunctionRequest",
        "type_Checklist:UpdateFunctionEntryRequest",
        "type_Checklist:SortOptions",
        "type_Checklist:SortField",
        "type_Checklist:SearchChecklistsRequest",
        "type_Checklist:ChecklistSearchQuery",
        "type_Checklist:BatchGetChecklistMetadataRequest",
        "type_Checklist:BatchGetChecklistMetadataResponse",
        "type_Checklist:ArchiveChecklistsRequest",
        "type_Checklist:UnarchiveChecklistsRequest",
        "type_Checklist:GetAllLabelsAndPropertiesResponse"
      ],
      "subpackages": [],
      "urlSlug": "checklist",
      "description": "The Checklist Service is responsible for managing checklists and checks.\nA checklist is a collection of checks and functions that can be executed against a set of data sources.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_ChecklistExecution": {
      "subpackageId": "subpackage_ChecklistExecution",
      "name": "ChecklistExecution",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "checklist-live-status",
          "method": "POST",
          "id": "checklistLiveStatus",
          "originalEndpointId": "endpoint_ChecklistExecution.checklistLiveStatus",
          "name": "Checklist Live Status",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/checklist-execution"
              },
              {
                "type": "literal",
                "value": "/checklist-live-status"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_ChecklistExecution:BatchChecklistLiveStatusRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_ChecklistExecution:BatchChecklistLiveStatusResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/checklist-execution/checklist-live-status",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "requests": [
                  {
                    "checklistRid": "checklistRid",
                    "runRid": "runRid"
                  },
                  {
                    "checklistRid": "checklistRid",
                    "runRid": "runRid"
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "computationRange": {
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  }
                },
                "checklistResults": [
                  {
                    "checklistRid": "checklistRid",
                    "checkResults": [
                      {
                        "result": {
                          "type": "computed",
                          "computed": {
                            "status": {
                              "type": "pass",
                              "pass": {}
                            },
                            "lastFailure": {
                              "type": "notComputed",
                              "notComputed": {}
                            }
                          }
                        },
                        "checkRid": "checkRid",
                        "checkImplementationIndex": 1
                      },
                      {
                        "result": {
                          "type": "computed",
                          "computed": {
                            "status": {
                              "type": "pass",
                              "pass": {}
                            },
                            "lastFailure": {
                              "type": "notComputed",
                              "notComputed": {}
                            }
                          }
                        },
                        "checkRid": "checkRid",
                        "checkImplementationIndex": 1
                      }
                    ]
                  },
                  {
                    "checklistRid": "checklistRid",
                    "checkResults": [
                      {
                        "result": {
                          "type": "computed",
                          "computed": {
                            "status": {
                              "type": "pass",
                              "pass": {}
                            },
                            "lastFailure": {
                              "type": "notComputed",
                              "notComputed": {}
                            }
                          }
                        },
                        "checkRid": "checkRid",
                        "checkImplementationIndex": 1
                      },
                      {
                        "result": {
                          "type": "computed",
                          "computed": {
                            "status": {
                              "type": "pass",
                              "pass": {}
                            },
                            "lastFailure": {
                              "type": "notComputed",
                              "notComputed": {}
                            }
                          }
                        },
                        "checkRid": "checkRid",
                        "checkImplementationIndex": 1
                      }
                    ]
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "requests": [
                    {
                      "checklistRid": "checklistRid",
                      "runRid": "runRid"
                    },
                    {
                      "checklistRid": "checklistRid",
                      "runRid": "runRid"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "computationRange": {
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    }
                  },
                  "checklistResults": [
                    {
                      "checklistRid": "checklistRid",
                      "checkResults": [
                        {
                          "result": {
                            "type": "computed",
                            "computed": {
                              "status": {
                                "type": "pass",
                                "pass": {}
                              },
                              "lastFailure": {
                                "type": "notComputed",
                                "notComputed": {}
                              }
                            }
                          },
                          "checkRid": "checkRid",
                          "checkImplementationIndex": 1
                        },
                        {
                          "result": {
                            "type": "computed",
                            "computed": {
                              "status": {
                                "type": "pass",
                                "pass": {}
                              },
                              "lastFailure": {
                                "type": "notComputed",
                                "notComputed": {}
                              }
                            }
                          },
                          "checkRid": "checkRid",
                          "checkImplementationIndex": 1
                        }
                      ]
                    },
                    {
                      "checklistRid": "checklistRid",
                      "checkResults": [
                        {
                          "result": {
                            "type": "computed",
                            "computed": {
                              "status": {
                                "type": "pass",
                                "pass": {}
                              },
                              "lastFailure": {
                                "type": "notComputed",
                                "notComputed": {}
                              }
                            }
                          },
                          "checkRid": "checkRid",
                          "checkImplementationIndex": 1
                        },
                        {
                          "result": {
                            "type": "computed",
                            "computed": {
                              "status": {
                                "type": "pass",
                                "pass": {}
                              },
                              "lastFailure": {
                                "type": "notComputed",
                                "notComputed": {}
                              }
                            }
                          },
                          "checkRid": "checkRid",
                          "checkImplementationIndex": 1
                        }
                      ]
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "execute-streaming-checklist",
          "method": "POST",
          "id": "executeStreamingChecklist",
          "originalEndpointId": "endpoint_ChecklistExecution.executeStreamingChecklist",
          "name": "Execute Streaming Checklist",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/checklist-execution"
              },
              {
                "type": "literal",
                "value": "/execute-streaming-checklist"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_ChecklistExecution:ExecuteChecklistForAssetsRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/checklist-execution/execute-streaming-checklist",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "checklist": "checklist",
                "assets": ["assets"],
                "notificationConfigurations": [
                  {
                    "integrationRid": "integrationRid"
                  },
                  {
                    "integrationRid": "integrationRid"
                  }
                ],
                "streamDelay": {
                  "seconds": 1000000,
                  "nanos": 1000000
                }
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "checklist": "checklist",
                  "assets": ["assets"],
                  "notificationConfigurations": [
                    {
                      "integrationRid": "integrationRid"
                    },
                    {
                      "integrationRid": "integrationRid"
                    }
                  ],
                  "streamDelay": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "list-streaming-checklist",
          "method": "GET",
          "id": "listStreamingChecklist",
          "originalEndpointId": "endpoint_ChecklistExecution.listStreamingChecklist",
          "name": "List Streaming Checklist",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/checklist-execution"
              },
              {
                "type": "literal",
                "value": "/list-streaming-checklists"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:ChecklistRid"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/checklist-execution/list-streaming-checklists",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": ["string"],
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": ["string"]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-streaming-checklist",
          "method": "GET",
          "id": "getStreamingChecklist",
          "originalEndpointId": "endpoint_ChecklistExecution.getStreamingChecklist",
          "name": "Get Streaming Checklist",
          "path": {
            "pathParameters": [
              {
                "key": "checklistRid",
                "type": {
                  "type": "id",
                  "value": "type_common:ChecklistRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/checklist-execution"
              },
              {
                "type": "literal",
                "value": "/get-streaming-checklist/"
              },
              {
                "type": "pathParameter",
                "value": "checklistRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_ChecklistExecution:StreamingChecklistInfo"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/checklist-execution/get-streaming-checklist/checklistRid",
              "pathParameters": {
                "checklistRid": "checklistRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "checklistRid": "checklistRid",
                "assetConfigurations": {
                  "assetConfigurations": {
                    "notificationConfigurations": [
                      {
                        "integrationRid": "integrationRid"
                      },
                      {
                        "integrationRid": "integrationRid"
                      }
                    ],
                    "streamDelay": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "checklistRid": "checklistRid",
                  "assetConfigurations": {
                    "assetConfigurations": {
                      "notificationConfigurations": [
                        {
                          "integrationRid": "integrationRid"
                        },
                        {
                          "integrationRid": "integrationRid"
                        }
                      ],
                      "streamDelay": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "stop-streaming-checklist",
          "method": "DELETE",
          "id": "stopStreamingChecklist",
          "originalEndpointId": "endpoint_ChecklistExecution.stopStreamingChecklist",
          "name": "Stop Streaming Checklist",
          "path": {
            "pathParameters": [
              {
                "key": "checklistRid",
                "type": {
                  "type": "id",
                  "value": "type_common:ChecklistRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/checklist-execution"
              },
              {
                "type": "literal",
                "value": "/stop-streaming-checklist/"
              },
              {
                "type": "pathParameter",
                "value": "checklistRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/checklist-execution/stop-streaming-checklist/checklistRid",
              "pathParameters": {
                "checklistRid": "checklistRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "stop-streaming-checklist-for-assets",
          "method": "POST",
          "id": "stopStreamingChecklistForAssets",
          "originalEndpointId": "endpoint_ChecklistExecution.stopStreamingChecklistForAssets",
          "name": "Stop Streaming Checklist For Assets",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/checklist-execution"
              },
              {
                "type": "literal",
                "value": "/stop-streaming-checklist-for-assets"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_ChecklistExecution:StopStreamingChecklistForAssetsRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/checklist-execution/stop-streaming-checklist-for-assets",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "checklist": "checklist",
                "assets": ["assets"]
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "checklist": "checklist",
                  "assets": ["assets"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "reload-streaming-checklist",
          "method": "POST",
          "id": "reloadStreamingChecklist",
          "originalEndpointId": "endpoint_ChecklistExecution.reloadStreamingChecklist",
          "name": "Reload Streaming Checklist",
          "path": {
            "pathParameters": [
              {
                "key": "checklistRid",
                "type": {
                  "type": "id",
                  "value": "type_common:ChecklistRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/checklist-execution"
              },
              {
                "type": "literal",
                "value": "/reload-streaming-checklist/"
              },
              {
                "type": "pathParameter",
                "value": "checklistRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/checklist-execution/reload-streaming-checklist/checklistRid",
              "pathParameters": {
                "checklistRid": "checklistRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_ChecklistExecution:BatchChecklistLiveStatusRequest",
        "type_ChecklistExecution:ChecklistLiveStatusRequest",
        "type_ChecklistExecution:ExecuteChecklistForAssetsRequest",
        "type_ChecklistExecution:BatchChecklistLiveStatusResponse",
        "type_ChecklistExecution:ChecklistLiveStatusResponse",
        "type_ChecklistExecution:CheckLiveStatusResponse",
        "type_ChecklistExecution:CheckLiveStatusResult",
        "type_ChecklistExecution:StopStreamingChecklistForAssetsRequest",
        "type_ChecklistExecution:StreamingChecklistInfo",
        "type_ChecklistExecution:AssetStreamConfiguration",
        "type_ChecklistExecution:ComputedResult",
        "type_ChecklistExecution:ComputationRange",
        "type_ChecklistExecution:CheckStatus",
        "type_ChecklistExecution:Pass",
        "type_ChecklistExecution:Fail",
        "type_ChecklistExecution:LastFailure",
        "type_ChecklistExecution:NotComputable",
        "type_ChecklistExecution:FailedToResolve",
        "type_ChecklistExecution:NotComputed",
        "type_ChecklistExecution:Computing",
        "type_ChecklistExecution:NoPreviousFailure",
        "type_ChecklistExecution:Failure"
      ],
      "subpackages": [],
      "urlSlug": "checklist-execution",
      "description": "The Checklist Execution Service checks the status of checklist executions.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Comments": {
      "subpackageId": "subpackage_Comments",
      "name": "Comments",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-conversation",
          "method": "GET",
          "id": "getConversation",
          "originalEndpointId": "endpoint_Comments.getConversation",
          "name": "Get Conversation",
          "path": {
            "pathParameters": [
              {
                "key": "resourceType",
                "type": {
                  "type": "id",
                  "value": "type_Comments:ResourceType"
                }
              },
              {
                "key": "resourceRid",
                "type": {
                  "type": "id",
                  "value": "type_Comments:ResourceRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/comments/v1"
              },
              {
                "type": "literal",
                "value": "/conversations/"
              },
              {
                "type": "pathParameter",
                "value": "resourceType"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Comments:Conversation"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/comments/v1/conversations/RUN/resourceRid",
              "pathParameters": {
                "resourceType": "RUN",
                "resourceRid": "resourceRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "resourceRid": "resourceRid",
                "resourceType": "RUN",
                "comments": [
                  {
                    "comment": {
                      "rid": "rid",
                      "parent": {
                        "type": "resource",
                        "resource": {
                          "resourceType": "RUN",
                          "resourceRid": "resourceRid"
                        }
                      },
                      "authorRid": "authorRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "editedAt": "2024-01-15T09:30:00Z",
                      "deletedAt": "2024-01-15T09:30:00Z",
                      "content": "content",
                      "pinnedBy": "pinnedBy",
                      "pinnedAt": "2024-01-15T09:30:00Z",
                      "reactions": [
                        {
                          "rid": "rid",
                          "userRid": "userRid",
                          "createdAt": "2024-01-15T09:30:00Z",
                          "type": "LIKE"
                        },
                        {
                          "rid": "rid",
                          "userRid": "userRid",
                          "createdAt": "2024-01-15T09:30:00Z",
                          "type": "LIKE"
                        }
                      ],
                      "attachments": ["attachments"]
                    },
                    "replies": [
                      {
                        "comment": {
                          "rid": "rid",
                          "parent": {
                            "type": "resource",
                            "resource": {
                              "resourceType": "RUN",
                              "resourceRid": "resourceRid"
                            }
                          },
                          "authorRid": "authorRid",
                          "createdAt": "2024-01-15T09:30:00Z",
                          "editedAt": "2024-01-15T09:30:00Z",
                          "deletedAt": "2024-01-15T09:30:00Z",
                          "content": "content",
                          "pinnedBy": "pinnedBy",
                          "pinnedAt": "2024-01-15T09:30:00Z",
                          "reactions": [
                            {
                              "rid": "rid",
                              "userRid": "userRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "type": "LIKE"
                            },
                            {
                              "rid": "rid",
                              "userRid": "userRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "type": "LIKE"
                            }
                          ],
                          "attachments": ["attachments"]
                        },
                        "replies": [
                          {
                            "comment": {
                              "rid": "rid",
                              "parent": {
                                "type": "resource",
                                "resource": {
                                  "resourceType": "RUN",
                                  "resourceRid": "resourceRid"
                                }
                              },
                              "authorRid": "authorRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "editedAt": "2024-01-15T09:30:00Z",
                              "deletedAt": "2024-01-15T09:30:00Z",
                              "content": "content",
                              "pinnedBy": "pinnedBy",
                              "pinnedAt": "2024-01-15T09:30:00Z",
                              "reactions": [
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                },
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                }
                              ],
                              "attachments": ["attachments"]
                            },
                            "replies": []
                          },
                          {
                            "comment": {
                              "rid": "rid",
                              "parent": {
                                "type": "resource",
                                "resource": {
                                  "resourceType": "RUN",
                                  "resourceRid": "resourceRid"
                                }
                              },
                              "authorRid": "authorRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "editedAt": "2024-01-15T09:30:00Z",
                              "deletedAt": "2024-01-15T09:30:00Z",
                              "content": "content",
                              "pinnedBy": "pinnedBy",
                              "pinnedAt": "2024-01-15T09:30:00Z",
                              "reactions": [
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                },
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                }
                              ],
                              "attachments": ["attachments"]
                            },
                            "replies": []
                          }
                        ]
                      },
                      {
                        "comment": {
                          "rid": "rid",
                          "parent": {
                            "type": "resource",
                            "resource": {
                              "resourceType": "RUN",
                              "resourceRid": "resourceRid"
                            }
                          },
                          "authorRid": "authorRid",
                          "createdAt": "2024-01-15T09:30:00Z",
                          "editedAt": "2024-01-15T09:30:00Z",
                          "deletedAt": "2024-01-15T09:30:00Z",
                          "content": "content",
                          "pinnedBy": "pinnedBy",
                          "pinnedAt": "2024-01-15T09:30:00Z",
                          "reactions": [
                            {
                              "rid": "rid",
                              "userRid": "userRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "type": "LIKE"
                            },
                            {
                              "rid": "rid",
                              "userRid": "userRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "type": "LIKE"
                            }
                          ],
                          "attachments": ["attachments"]
                        },
                        "replies": [
                          {
                            "comment": {
                              "rid": "rid",
                              "parent": {
                                "type": "resource",
                                "resource": {
                                  "resourceType": "RUN",
                                  "resourceRid": "resourceRid"
                                }
                              },
                              "authorRid": "authorRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "editedAt": "2024-01-15T09:30:00Z",
                              "deletedAt": "2024-01-15T09:30:00Z",
                              "content": "content",
                              "pinnedBy": "pinnedBy",
                              "pinnedAt": "2024-01-15T09:30:00Z",
                              "reactions": [
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                },
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                }
                              ],
                              "attachments": ["attachments"]
                            },
                            "replies": []
                          },
                          {
                            "comment": {
                              "rid": "rid",
                              "parent": {
                                "type": "resource",
                                "resource": {
                                  "resourceType": "RUN",
                                  "resourceRid": "resourceRid"
                                }
                              },
                              "authorRid": "authorRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "editedAt": "2024-01-15T09:30:00Z",
                              "deletedAt": "2024-01-15T09:30:00Z",
                              "content": "content",
                              "pinnedBy": "pinnedBy",
                              "pinnedAt": "2024-01-15T09:30:00Z",
                              "reactions": [
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                },
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                }
                              ],
                              "attachments": ["attachments"]
                            },
                            "replies": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "comment": {
                      "rid": "rid",
                      "parent": {
                        "type": "resource",
                        "resource": {
                          "resourceType": "RUN",
                          "resourceRid": "resourceRid"
                        }
                      },
                      "authorRid": "authorRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "editedAt": "2024-01-15T09:30:00Z",
                      "deletedAt": "2024-01-15T09:30:00Z",
                      "content": "content",
                      "pinnedBy": "pinnedBy",
                      "pinnedAt": "2024-01-15T09:30:00Z",
                      "reactions": [
                        {
                          "rid": "rid",
                          "userRid": "userRid",
                          "createdAt": "2024-01-15T09:30:00Z",
                          "type": "LIKE"
                        },
                        {
                          "rid": "rid",
                          "userRid": "userRid",
                          "createdAt": "2024-01-15T09:30:00Z",
                          "type": "LIKE"
                        }
                      ],
                      "attachments": ["attachments"]
                    },
                    "replies": [
                      {
                        "comment": {
                          "rid": "rid",
                          "parent": {
                            "type": "resource",
                            "resource": {
                              "resourceType": "RUN",
                              "resourceRid": "resourceRid"
                            }
                          },
                          "authorRid": "authorRid",
                          "createdAt": "2024-01-15T09:30:00Z",
                          "editedAt": "2024-01-15T09:30:00Z",
                          "deletedAt": "2024-01-15T09:30:00Z",
                          "content": "content",
                          "pinnedBy": "pinnedBy",
                          "pinnedAt": "2024-01-15T09:30:00Z",
                          "reactions": [
                            {
                              "rid": "rid",
                              "userRid": "userRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "type": "LIKE"
                            },
                            {
                              "rid": "rid",
                              "userRid": "userRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "type": "LIKE"
                            }
                          ],
                          "attachments": ["attachments"]
                        },
                        "replies": [
                          {
                            "comment": {
                              "rid": "rid",
                              "parent": {
                                "type": "resource",
                                "resource": {
                                  "resourceType": "RUN",
                                  "resourceRid": "resourceRid"
                                }
                              },
                              "authorRid": "authorRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "editedAt": "2024-01-15T09:30:00Z",
                              "deletedAt": "2024-01-15T09:30:00Z",
                              "content": "content",
                              "pinnedBy": "pinnedBy",
                              "pinnedAt": "2024-01-15T09:30:00Z",
                              "reactions": [
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                },
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                }
                              ],
                              "attachments": ["attachments"]
                            },
                            "replies": []
                          },
                          {
                            "comment": {
                              "rid": "rid",
                              "parent": {
                                "type": "resource",
                                "resource": {
                                  "resourceType": "RUN",
                                  "resourceRid": "resourceRid"
                                }
                              },
                              "authorRid": "authorRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "editedAt": "2024-01-15T09:30:00Z",
                              "deletedAt": "2024-01-15T09:30:00Z",
                              "content": "content",
                              "pinnedBy": "pinnedBy",
                              "pinnedAt": "2024-01-15T09:30:00Z",
                              "reactions": [
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                },
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                }
                              ],
                              "attachments": ["attachments"]
                            },
                            "replies": []
                          }
                        ]
                      },
                      {
                        "comment": {
                          "rid": "rid",
                          "parent": {
                            "type": "resource",
                            "resource": {
                              "resourceType": "RUN",
                              "resourceRid": "resourceRid"
                            }
                          },
                          "authorRid": "authorRid",
                          "createdAt": "2024-01-15T09:30:00Z",
                          "editedAt": "2024-01-15T09:30:00Z",
                          "deletedAt": "2024-01-15T09:30:00Z",
                          "content": "content",
                          "pinnedBy": "pinnedBy",
                          "pinnedAt": "2024-01-15T09:30:00Z",
                          "reactions": [
                            {
                              "rid": "rid",
                              "userRid": "userRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "type": "LIKE"
                            },
                            {
                              "rid": "rid",
                              "userRid": "userRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "type": "LIKE"
                            }
                          ],
                          "attachments": ["attachments"]
                        },
                        "replies": [
                          {
                            "comment": {
                              "rid": "rid",
                              "parent": {
                                "type": "resource",
                                "resource": {
                                  "resourceType": "RUN",
                                  "resourceRid": "resourceRid"
                                }
                              },
                              "authorRid": "authorRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "editedAt": "2024-01-15T09:30:00Z",
                              "deletedAt": "2024-01-15T09:30:00Z",
                              "content": "content",
                              "pinnedBy": "pinnedBy",
                              "pinnedAt": "2024-01-15T09:30:00Z",
                              "reactions": [
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                },
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                }
                              ],
                              "attachments": ["attachments"]
                            },
                            "replies": []
                          },
                          {
                            "comment": {
                              "rid": "rid",
                              "parent": {
                                "type": "resource",
                                "resource": {
                                  "resourceType": "RUN",
                                  "resourceRid": "resourceRid"
                                }
                              },
                              "authorRid": "authorRid",
                              "createdAt": "2024-01-15T09:30:00Z",
                              "editedAt": "2024-01-15T09:30:00Z",
                              "deletedAt": "2024-01-15T09:30:00Z",
                              "content": "content",
                              "pinnedBy": "pinnedBy",
                              "pinnedAt": "2024-01-15T09:30:00Z",
                              "reactions": [
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                },
                                {
                                  "rid": "rid",
                                  "userRid": "userRid",
                                  "createdAt": "2024-01-15T09:30:00Z",
                                  "type": "LIKE"
                                }
                              ],
                              "attachments": ["attachments"]
                            },
                            "replies": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "resourceRid": "resourceRid",
                  "resourceType": "RUN",
                  "comments": [
                    {
                      "comment": {
                        "rid": "rid",
                        "parent": {
                          "type": "resource",
                          "resource": {
                            "resourceType": "RUN",
                            "resourceRid": "resourceRid"
                          }
                        },
                        "authorRid": "authorRid",
                        "createdAt": "2024-01-15T09:30:00Z",
                        "editedAt": "2024-01-15T09:30:00Z",
                        "deletedAt": "2024-01-15T09:30:00Z",
                        "content": "content",
                        "pinnedBy": "pinnedBy",
                        "pinnedAt": "2024-01-15T09:30:00Z",
                        "reactions": [
                          {
                            "rid": "rid",
                            "userRid": "userRid",
                            "createdAt": "2024-01-15T09:30:00Z",
                            "type": "LIKE"
                          },
                          {
                            "rid": "rid",
                            "userRid": "userRid",
                            "createdAt": "2024-01-15T09:30:00Z",
                            "type": "LIKE"
                          }
                        ],
                        "attachments": ["attachments"]
                      },
                      "replies": [
                        {
                          "comment": {
                            "rid": "rid",
                            "parent": {
                              "type": "resource",
                              "resource": {
                                "resourceType": "RUN",
                                "resourceRid": "resourceRid"
                              }
                            },
                            "authorRid": "authorRid",
                            "createdAt": "2024-01-15T09:30:00Z",
                            "editedAt": "2024-01-15T09:30:00Z",
                            "deletedAt": "2024-01-15T09:30:00Z",
                            "content": "content",
                            "pinnedBy": "pinnedBy",
                            "pinnedAt": "2024-01-15T09:30:00Z",
                            "reactions": [
                              {
                                "rid": "rid",
                                "userRid": "userRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "type": "LIKE"
                              },
                              {
                                "rid": "rid",
                                "userRid": "userRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "type": "LIKE"
                              }
                            ],
                            "attachments": ["attachments"]
                          },
                          "replies": [
                            {
                              "comment": {
                                "rid": "rid",
                                "parent": {
                                  "type": "resource",
                                  "resource": {
                                    "resourceType": "RUN",
                                    "resourceRid": "resourceRid"
                                  }
                                },
                                "authorRid": "authorRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "editedAt": "2024-01-15T09:30:00Z",
                                "deletedAt": "2024-01-15T09:30:00Z",
                                "content": "content",
                                "pinnedBy": "pinnedBy",
                                "pinnedAt": "2024-01-15T09:30:00Z",
                                "reactions": [
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  },
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  }
                                ],
                                "attachments": ["attachments"]
                              },
                              "replies": []
                            },
                            {
                              "comment": {
                                "rid": "rid",
                                "parent": {
                                  "type": "resource",
                                  "resource": {
                                    "resourceType": "RUN",
                                    "resourceRid": "resourceRid"
                                  }
                                },
                                "authorRid": "authorRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "editedAt": "2024-01-15T09:30:00Z",
                                "deletedAt": "2024-01-15T09:30:00Z",
                                "content": "content",
                                "pinnedBy": "pinnedBy",
                                "pinnedAt": "2024-01-15T09:30:00Z",
                                "reactions": [
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  },
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  }
                                ],
                                "attachments": ["attachments"]
                              },
                              "replies": []
                            }
                          ]
                        },
                        {
                          "comment": {
                            "rid": "rid",
                            "parent": {
                              "type": "resource",
                              "resource": {
                                "resourceType": "RUN",
                                "resourceRid": "resourceRid"
                              }
                            },
                            "authorRid": "authorRid",
                            "createdAt": "2024-01-15T09:30:00Z",
                            "editedAt": "2024-01-15T09:30:00Z",
                            "deletedAt": "2024-01-15T09:30:00Z",
                            "content": "content",
                            "pinnedBy": "pinnedBy",
                            "pinnedAt": "2024-01-15T09:30:00Z",
                            "reactions": [
                              {
                                "rid": "rid",
                                "userRid": "userRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "type": "LIKE"
                              },
                              {
                                "rid": "rid",
                                "userRid": "userRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "type": "LIKE"
                              }
                            ],
                            "attachments": ["attachments"]
                          },
                          "replies": [
                            {
                              "comment": {
                                "rid": "rid",
                                "parent": {
                                  "type": "resource",
                                  "resource": {
                                    "resourceType": "RUN",
                                    "resourceRid": "resourceRid"
                                  }
                                },
                                "authorRid": "authorRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "editedAt": "2024-01-15T09:30:00Z",
                                "deletedAt": "2024-01-15T09:30:00Z",
                                "content": "content",
                                "pinnedBy": "pinnedBy",
                                "pinnedAt": "2024-01-15T09:30:00Z",
                                "reactions": [
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  },
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  }
                                ],
                                "attachments": ["attachments"]
                              },
                              "replies": []
                            },
                            {
                              "comment": {
                                "rid": "rid",
                                "parent": {
                                  "type": "resource",
                                  "resource": {
                                    "resourceType": "RUN",
                                    "resourceRid": "resourceRid"
                                  }
                                },
                                "authorRid": "authorRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "editedAt": "2024-01-15T09:30:00Z",
                                "deletedAt": "2024-01-15T09:30:00Z",
                                "content": "content",
                                "pinnedBy": "pinnedBy",
                                "pinnedAt": "2024-01-15T09:30:00Z",
                                "reactions": [
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  },
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  }
                                ],
                                "attachments": ["attachments"]
                              },
                              "replies": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "comment": {
                        "rid": "rid",
                        "parent": {
                          "type": "resource",
                          "resource": {
                            "resourceType": "RUN",
                            "resourceRid": "resourceRid"
                          }
                        },
                        "authorRid": "authorRid",
                        "createdAt": "2024-01-15T09:30:00Z",
                        "editedAt": "2024-01-15T09:30:00Z",
                        "deletedAt": "2024-01-15T09:30:00Z",
                        "content": "content",
                        "pinnedBy": "pinnedBy",
                        "pinnedAt": "2024-01-15T09:30:00Z",
                        "reactions": [
                          {
                            "rid": "rid",
                            "userRid": "userRid",
                            "createdAt": "2024-01-15T09:30:00Z",
                            "type": "LIKE"
                          },
                          {
                            "rid": "rid",
                            "userRid": "userRid",
                            "createdAt": "2024-01-15T09:30:00Z",
                            "type": "LIKE"
                          }
                        ],
                        "attachments": ["attachments"]
                      },
                      "replies": [
                        {
                          "comment": {
                            "rid": "rid",
                            "parent": {
                              "type": "resource",
                              "resource": {
                                "resourceType": "RUN",
                                "resourceRid": "resourceRid"
                              }
                            },
                            "authorRid": "authorRid",
                            "createdAt": "2024-01-15T09:30:00Z",
                            "editedAt": "2024-01-15T09:30:00Z",
                            "deletedAt": "2024-01-15T09:30:00Z",
                            "content": "content",
                            "pinnedBy": "pinnedBy",
                            "pinnedAt": "2024-01-15T09:30:00Z",
                            "reactions": [
                              {
                                "rid": "rid",
                                "userRid": "userRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "type": "LIKE"
                              },
                              {
                                "rid": "rid",
                                "userRid": "userRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "type": "LIKE"
                              }
                            ],
                            "attachments": ["attachments"]
                          },
                          "replies": [
                            {
                              "comment": {
                                "rid": "rid",
                                "parent": {
                                  "type": "resource",
                                  "resource": {
                                    "resourceType": "RUN",
                                    "resourceRid": "resourceRid"
                                  }
                                },
                                "authorRid": "authorRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "editedAt": "2024-01-15T09:30:00Z",
                                "deletedAt": "2024-01-15T09:30:00Z",
                                "content": "content",
                                "pinnedBy": "pinnedBy",
                                "pinnedAt": "2024-01-15T09:30:00Z",
                                "reactions": [
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  },
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  }
                                ],
                                "attachments": ["attachments"]
                              },
                              "replies": []
                            },
                            {
                              "comment": {
                                "rid": "rid",
                                "parent": {
                                  "type": "resource",
                                  "resource": {
                                    "resourceType": "RUN",
                                    "resourceRid": "resourceRid"
                                  }
                                },
                                "authorRid": "authorRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "editedAt": "2024-01-15T09:30:00Z",
                                "deletedAt": "2024-01-15T09:30:00Z",
                                "content": "content",
                                "pinnedBy": "pinnedBy",
                                "pinnedAt": "2024-01-15T09:30:00Z",
                                "reactions": [
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  },
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  }
                                ],
                                "attachments": ["attachments"]
                              },
                              "replies": []
                            }
                          ]
                        },
                        {
                          "comment": {
                            "rid": "rid",
                            "parent": {
                              "type": "resource",
                              "resource": {
                                "resourceType": "RUN",
                                "resourceRid": "resourceRid"
                              }
                            },
                            "authorRid": "authorRid",
                            "createdAt": "2024-01-15T09:30:00Z",
                            "editedAt": "2024-01-15T09:30:00Z",
                            "deletedAt": "2024-01-15T09:30:00Z",
                            "content": "content",
                            "pinnedBy": "pinnedBy",
                            "pinnedAt": "2024-01-15T09:30:00Z",
                            "reactions": [
                              {
                                "rid": "rid",
                                "userRid": "userRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "type": "LIKE"
                              },
                              {
                                "rid": "rid",
                                "userRid": "userRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "type": "LIKE"
                              }
                            ],
                            "attachments": ["attachments"]
                          },
                          "replies": [
                            {
                              "comment": {
                                "rid": "rid",
                                "parent": {
                                  "type": "resource",
                                  "resource": {
                                    "resourceType": "RUN",
                                    "resourceRid": "resourceRid"
                                  }
                                },
                                "authorRid": "authorRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "editedAt": "2024-01-15T09:30:00Z",
                                "deletedAt": "2024-01-15T09:30:00Z",
                                "content": "content",
                                "pinnedBy": "pinnedBy",
                                "pinnedAt": "2024-01-15T09:30:00Z",
                                "reactions": [
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  },
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  }
                                ],
                                "attachments": ["attachments"]
                              },
                              "replies": []
                            },
                            {
                              "comment": {
                                "rid": "rid",
                                "parent": {
                                  "type": "resource",
                                  "resource": {
                                    "resourceType": "RUN",
                                    "resourceRid": "resourceRid"
                                  }
                                },
                                "authorRid": "authorRid",
                                "createdAt": "2024-01-15T09:30:00Z",
                                "editedAt": "2024-01-15T09:30:00Z",
                                "deletedAt": "2024-01-15T09:30:00Z",
                                "content": "content",
                                "pinnedBy": "pinnedBy",
                                "pinnedAt": "2024-01-15T09:30:00Z",
                                "reactions": [
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  },
                                  {
                                    "rid": "rid",
                                    "userRid": "userRid",
                                    "createdAt": "2024-01-15T09:30:00Z",
                                    "type": "LIKE"
                                  }
                                ],
                                "attachments": ["attachments"]
                              },
                              "replies": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-conversation-count",
          "method": "GET",
          "id": "getConversationCount",
          "originalEndpointId": "endpoint_Comments.getConversationCount",
          "name": "Get Conversation Count",
          "path": {
            "pathParameters": [
              {
                "key": "resourceType",
                "type": {
                  "type": "id",
                  "value": "type_Comments:ResourceType"
                }
              },
              {
                "key": "resourceRid",
                "type": {
                  "type": "id",
                  "value": "type_Comments:ResourceRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/comments/v1"
              },
              {
                "type": "literal",
                "value": "/conversations/"
              },
              {
                "type": "pathParameter",
                "value": "resourceType"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/count"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "includeDeleted",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/comments/v1/conversations/RUN/resourceRid/count",
              "pathParameters": {
                "resourceType": "RUN",
                "resourceRid": "resourceRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": 1,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": 1
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-comment",
          "method": "GET",
          "id": "getComment",
          "originalEndpointId": "endpoint_Comments.getComment",
          "name": "Get Comment",
          "path": {
            "pathParameters": [
              {
                "key": "commentRid",
                "type": {
                  "type": "id",
                  "value": "type_Comments:CommentRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/comments/v1"
              },
              {
                "type": "literal",
                "value": "/comments/"
              },
              {
                "type": "pathParameter",
                "value": "commentRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Comments:Comment"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/comments/v1/comments/commentRid",
              "pathParameters": {
                "commentRid": "commentRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "parent": {
                  "type": "resource",
                  "resource": {
                    "resourceType": "RUN",
                    "resourceRid": "resourceRid"
                  }
                },
                "authorRid": "authorRid",
                "createdAt": "2024-01-15T09:30:00Z",
                "editedAt": "2024-01-15T09:30:00Z",
                "deletedAt": "2024-01-15T09:30:00Z",
                "content": "content",
                "pinnedBy": "pinnedBy",
                "pinnedAt": "2024-01-15T09:30:00Z",
                "reactions": [
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  },
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  }
                ],
                "attachments": ["attachments"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "parent": {
                    "type": "resource",
                    "resource": {
                      "resourceType": "RUN",
                      "resourceRid": "resourceRid"
                    }
                  },
                  "authorRid": "authorRid",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "editedAt": "2024-01-15T09:30:00Z",
                  "deletedAt": "2024-01-15T09:30:00Z",
                  "content": "content",
                  "pinnedBy": "pinnedBy",
                  "pinnedAt": "2024-01-15T09:30:00Z",
                  "reactions": [
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    },
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    }
                  ],
                  "attachments": ["attachments"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-comment",
          "method": "POST",
          "id": "createComment",
          "originalEndpointId": "endpoint_Comments.createComment",
          "name": "Create Comment",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/comments/v1"
              },
              {
                "type": "literal",
                "value": "/comments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Comments:CreateCommentRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Comments:Comment"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/comments/v1/comments",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "parent": {
                  "type": "resource",
                  "resource": {
                    "resourceType": "RUN",
                    "resourceRid": "resourceRid"
                  }
                },
                "content": "content",
                "attachments": ["attachments"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "parent": {
                  "type": "resource",
                  "resource": {
                    "resourceType": "RUN",
                    "resourceRid": "resourceRid"
                  }
                },
                "authorRid": "authorRid",
                "createdAt": "2024-01-15T09:30:00Z",
                "editedAt": "2024-01-15T09:30:00Z",
                "deletedAt": "2024-01-15T09:30:00Z",
                "content": "content",
                "pinnedBy": "pinnedBy",
                "pinnedAt": "2024-01-15T09:30:00Z",
                "reactions": [
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  },
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  }
                ],
                "attachments": ["attachments"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "parent": {
                    "type": "resource",
                    "resource": {
                      "resourceType": "RUN",
                      "resourceRid": "resourceRid"
                    }
                  },
                  "content": "content",
                  "attachments": ["attachments"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "parent": {
                    "type": "resource",
                    "resource": {
                      "resourceType": "RUN",
                      "resourceRid": "resourceRid"
                    }
                  },
                  "authorRid": "authorRid",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "editedAt": "2024-01-15T09:30:00Z",
                  "deletedAt": "2024-01-15T09:30:00Z",
                  "content": "content",
                  "pinnedBy": "pinnedBy",
                  "pinnedAt": "2024-01-15T09:30:00Z",
                  "reactions": [
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    },
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    }
                  ],
                  "attachments": ["attachments"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "edit-comment",
          "method": "PUT",
          "id": "editComment",
          "originalEndpointId": "endpoint_Comments.editComment",
          "name": "Edit Comment",
          "path": {
            "pathParameters": [
              {
                "key": "commentRid",
                "type": {
                  "type": "id",
                  "value": "type_Comments:CommentRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/comments/v1"
              },
              {
                "type": "literal",
                "value": "/comments/"
              },
              {
                "type": "pathParameter",
                "value": "commentRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Comments:EditCommentRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Comments:Comment"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/comments/v1/comments/commentRid",
              "pathParameters": {
                "commentRid": "commentRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "content": "content",
                "attachments": ["attachments"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "parent": {
                  "type": "resource",
                  "resource": {
                    "resourceType": "RUN",
                    "resourceRid": "resourceRid"
                  }
                },
                "authorRid": "authorRid",
                "createdAt": "2024-01-15T09:30:00Z",
                "editedAt": "2024-01-15T09:30:00Z",
                "deletedAt": "2024-01-15T09:30:00Z",
                "content": "content",
                "pinnedBy": "pinnedBy",
                "pinnedAt": "2024-01-15T09:30:00Z",
                "reactions": [
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  },
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  }
                ],
                "attachments": ["attachments"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "content": "content",
                  "attachments": ["attachments"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "parent": {
                    "type": "resource",
                    "resource": {
                      "resourceType": "RUN",
                      "resourceRid": "resourceRid"
                    }
                  },
                  "authorRid": "authorRid",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "editedAt": "2024-01-15T09:30:00Z",
                  "deletedAt": "2024-01-15T09:30:00Z",
                  "content": "content",
                  "pinnedBy": "pinnedBy",
                  "pinnedAt": "2024-01-15T09:30:00Z",
                  "reactions": [
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    },
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    }
                  ],
                  "attachments": ["attachments"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "delete-comment",
          "method": "DELETE",
          "id": "deleteComment",
          "originalEndpointId": "endpoint_Comments.deleteComment",
          "name": "Delete Comment",
          "path": {
            "pathParameters": [
              {
                "key": "commentRid",
                "type": {
                  "type": "id",
                  "value": "type_Comments:CommentRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/comments/v1"
              },
              {
                "type": "literal",
                "value": "/comments/"
              },
              {
                "type": "pathParameter",
                "value": "commentRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Comments:Comment"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/comments/v1/comments/commentRid",
              "pathParameters": {
                "commentRid": "commentRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "parent": {
                  "type": "resource",
                  "resource": {
                    "resourceType": "RUN",
                    "resourceRid": "resourceRid"
                  }
                },
                "authorRid": "authorRid",
                "createdAt": "2024-01-15T09:30:00Z",
                "editedAt": "2024-01-15T09:30:00Z",
                "deletedAt": "2024-01-15T09:30:00Z",
                "content": "content",
                "pinnedBy": "pinnedBy",
                "pinnedAt": "2024-01-15T09:30:00Z",
                "reactions": [
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  },
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  }
                ],
                "attachments": ["attachments"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "parent": {
                    "type": "resource",
                    "resource": {
                      "resourceType": "RUN",
                      "resourceRid": "resourceRid"
                    }
                  },
                  "authorRid": "authorRid",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "editedAt": "2024-01-15T09:30:00Z",
                  "deletedAt": "2024-01-15T09:30:00Z",
                  "content": "content",
                  "pinnedBy": "pinnedBy",
                  "pinnedAt": "2024-01-15T09:30:00Z",
                  "reactions": [
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    },
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    }
                  ],
                  "attachments": ["attachments"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "pin-comment",
          "method": "PUT",
          "id": "pinComment",
          "originalEndpointId": "endpoint_Comments.pinComment",
          "name": "Pin Comment",
          "path": {
            "pathParameters": [
              {
                "key": "commentRid",
                "type": {
                  "type": "id",
                  "value": "type_Comments:CommentRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/comments/v1"
              },
              {
                "type": "literal",
                "value": "/comments/"
              },
              {
                "type": "pathParameter",
                "value": "commentRid"
              },
              {
                "type": "literal",
                "value": "/pin"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Comments:Comment"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/comments/v1/comments/commentRid/pin",
              "pathParameters": {
                "commentRid": "commentRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "parent": {
                  "type": "resource",
                  "resource": {
                    "resourceType": "RUN",
                    "resourceRid": "resourceRid"
                  }
                },
                "authorRid": "authorRid",
                "createdAt": "2024-01-15T09:30:00Z",
                "editedAt": "2024-01-15T09:30:00Z",
                "deletedAt": "2024-01-15T09:30:00Z",
                "content": "content",
                "pinnedBy": "pinnedBy",
                "pinnedAt": "2024-01-15T09:30:00Z",
                "reactions": [
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  },
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  }
                ],
                "attachments": ["attachments"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "parent": {
                    "type": "resource",
                    "resource": {
                      "resourceType": "RUN",
                      "resourceRid": "resourceRid"
                    }
                  },
                  "authorRid": "authorRid",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "editedAt": "2024-01-15T09:30:00Z",
                  "deletedAt": "2024-01-15T09:30:00Z",
                  "content": "content",
                  "pinnedBy": "pinnedBy",
                  "pinnedAt": "2024-01-15T09:30:00Z",
                  "reactions": [
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    },
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    }
                  ],
                  "attachments": ["attachments"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "unpin-comment",
          "method": "DELETE",
          "id": "unpinComment",
          "originalEndpointId": "endpoint_Comments.unpinComment",
          "name": "Unpin Comment",
          "path": {
            "pathParameters": [
              {
                "key": "commentRid",
                "type": {
                  "type": "id",
                  "value": "type_Comments:CommentRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/comments/v1"
              },
              {
                "type": "literal",
                "value": "/comments/"
              },
              {
                "type": "pathParameter",
                "value": "commentRid"
              },
              {
                "type": "literal",
                "value": "/pin"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Comments:Comment"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/comments/v1/comments/commentRid/pin",
              "pathParameters": {
                "commentRid": "commentRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "parent": {
                  "type": "resource",
                  "resource": {
                    "resourceType": "RUN",
                    "resourceRid": "resourceRid"
                  }
                },
                "authorRid": "authorRid",
                "createdAt": "2024-01-15T09:30:00Z",
                "editedAt": "2024-01-15T09:30:00Z",
                "deletedAt": "2024-01-15T09:30:00Z",
                "content": "content",
                "pinnedBy": "pinnedBy",
                "pinnedAt": "2024-01-15T09:30:00Z",
                "reactions": [
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  },
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  }
                ],
                "attachments": ["attachments"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "parent": {
                    "type": "resource",
                    "resource": {
                      "resourceType": "RUN",
                      "resourceRid": "resourceRid"
                    }
                  },
                  "authorRid": "authorRid",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "editedAt": "2024-01-15T09:30:00Z",
                  "deletedAt": "2024-01-15T09:30:00Z",
                  "content": "content",
                  "pinnedBy": "pinnedBy",
                  "pinnedAt": "2024-01-15T09:30:00Z",
                  "reactions": [
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    },
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    }
                  ],
                  "attachments": ["attachments"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "add-reaction",
          "method": "PUT",
          "id": "addReaction",
          "originalEndpointId": "endpoint_Comments.addReaction",
          "name": "Add Reaction",
          "path": {
            "pathParameters": [
              {
                "key": "commentRid",
                "type": {
                  "type": "id",
                  "value": "type_Comments:CommentRid"
                }
              },
              {
                "key": "type",
                "type": {
                  "type": "id",
                  "value": "type_Comments:ReactionType"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/comments/v1"
              },
              {
                "type": "literal",
                "value": "/comments/"
              },
              {
                "type": "pathParameter",
                "value": "commentRid"
              },
              {
                "type": "literal",
                "value": "/reactions/"
              },
              {
                "type": "pathParameter",
                "value": "type"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Comments:Comment"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/comments/v1/comments/commentRid/reactions/LIKE",
              "pathParameters": {
                "commentRid": "commentRid",
                "type": "LIKE"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "parent": {
                  "type": "resource",
                  "resource": {
                    "resourceType": "RUN",
                    "resourceRid": "resourceRid"
                  }
                },
                "authorRid": "authorRid",
                "createdAt": "2024-01-15T09:30:00Z",
                "editedAt": "2024-01-15T09:30:00Z",
                "deletedAt": "2024-01-15T09:30:00Z",
                "content": "content",
                "pinnedBy": "pinnedBy",
                "pinnedAt": "2024-01-15T09:30:00Z",
                "reactions": [
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  },
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  }
                ],
                "attachments": ["attachments"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "parent": {
                    "type": "resource",
                    "resource": {
                      "resourceType": "RUN",
                      "resourceRid": "resourceRid"
                    }
                  },
                  "authorRid": "authorRid",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "editedAt": "2024-01-15T09:30:00Z",
                  "deletedAt": "2024-01-15T09:30:00Z",
                  "content": "content",
                  "pinnedBy": "pinnedBy",
                  "pinnedAt": "2024-01-15T09:30:00Z",
                  "reactions": [
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    },
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    }
                  ],
                  "attachments": ["attachments"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "remove-reaction",
          "method": "DELETE",
          "id": "removeReaction",
          "originalEndpointId": "endpoint_Comments.removeReaction",
          "name": "Remove Reaction",
          "path": {
            "pathParameters": [
              {
                "key": "commentRid",
                "type": {
                  "type": "id",
                  "value": "type_Comments:CommentRid"
                }
              },
              {
                "key": "type",
                "type": {
                  "type": "id",
                  "value": "type_Comments:ReactionType"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/comments/v1"
              },
              {
                "type": "literal",
                "value": "/comments/"
              },
              {
                "type": "pathParameter",
                "value": "commentRid"
              },
              {
                "type": "literal",
                "value": "/reactions/"
              },
              {
                "type": "pathParameter",
                "value": "type"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Comments:Comment"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/comments/v1/comments/commentRid/reactions/LIKE",
              "pathParameters": {
                "commentRid": "commentRid",
                "type": "LIKE"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "parent": {
                  "type": "resource",
                  "resource": {
                    "resourceType": "RUN",
                    "resourceRid": "resourceRid"
                  }
                },
                "authorRid": "authorRid",
                "createdAt": "2024-01-15T09:30:00Z",
                "editedAt": "2024-01-15T09:30:00Z",
                "deletedAt": "2024-01-15T09:30:00Z",
                "content": "content",
                "pinnedBy": "pinnedBy",
                "pinnedAt": "2024-01-15T09:30:00Z",
                "reactions": [
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  },
                  {
                    "rid": "rid",
                    "userRid": "userRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "type": "LIKE"
                  }
                ],
                "attachments": ["attachments"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "parent": {
                    "type": "resource",
                    "resource": {
                      "resourceType": "RUN",
                      "resourceRid": "resourceRid"
                    }
                  },
                  "authorRid": "authorRid",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "editedAt": "2024-01-15T09:30:00Z",
                  "deletedAt": "2024-01-15T09:30:00Z",
                  "content": "content",
                  "pinnedBy": "pinnedBy",
                  "pinnedAt": "2024-01-15T09:30:00Z",
                  "reactions": [
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    },
                    {
                      "rid": "rid",
                      "userRid": "userRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "type": "LIKE"
                    }
                  ],
                  "attachments": ["attachments"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Comments:CommentRid",
        "type_Comments:ResourceRid",
        "type_Comments:ReactionRid",
        "type_Comments:ResourceType",
        "type_Comments:ReactionType",
        "type_Comments:Conversation",
        "type_Comments:ConversationNode",
        "type_Comments:Comment",
        "type_Comments:CommentParent",
        "type_Comments:CommentParentResource",
        "type_Comments:CommentParentComment",
        "type_Comments:Reaction",
        "type_Comments:CreateCommentRequest",
        "type_Comments:EditCommentRequest"
      ],
      "subpackages": [],
      "urlSlug": "comments",
      "description": "Comments service manages conversations about resources.",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Compute": {
      "subpackageId": "subpackage_Compute",
      "name": "Compute",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "compute",
          "method": "POST",
          "id": "compute",
          "originalEndpointId": "endpoint_Compute.compute",
          "name": "Compute",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/compute/v2"
              },
              {
                "type": "literal",
                "value": "/compute"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Compute:ComputeNodeRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Compute:ComputeNodeResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/compute/v2/compute",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "node": {
                  "type": "ranges",
                  "ranges": {
                    "input": {
                      "type": "enumFilter",
                      "enumFilter": {
                        "input": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "function": "MIN"
                          }
                        },
                        "operator": "IS_IN",
                        "values": {
                          "type": "literal",
                          "literal": ["values"]
                        }
                      }
                    }
                  }
                },
                "start": {
                  "seconds": 1000000,
                  "nanos": 1000000
                },
                "end": {
                  "seconds": 1000000,
                  "nanos": 1000000
                },
                "context": {
                  "variables": {
                    "variables": {
                      "type": "double",
                      "double": 1.1
                    }
                  },
                  "functionVariables": {
                    "functionVariables": {
                      "variables": {
                        "variables": {
                          "type": "double",
                          "double": 1.1
                        }
                      },
                      "subFunctionVariables": {
                        "subFunctionVariables": {
                          "variables": {
                            "variables": {
                              "type": "double",
                              "double": 1.1
                            }
                          },
                          "subFunctionVariables": {
                            "subFunctionVariables": {
                              "variables": {
                                "variables": {
                                  "type": "double",
                                  "double": 1.1
                                }
                              },
                              "subFunctionVariables": {
                                "subFunctionVariables": {
                                  "variables": {},
                                  "subFunctionVariables": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "numeric",
                "numeric": {
                  "timestamps": [
                    {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    }
                  ],
                  "values": [1.1, 1.1]
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "node": {
                    "type": "ranges",
                    "ranges": {
                      "input": {
                        "type": "enumFilter",
                        "enumFilter": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "function",
                                "function": {
                                  "functionReference": "functionReference",
                                  "functionIdentifier": {
                                    "type": "variable",
                                    "variable": "functionIdentifier"
                                  }
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "operator": "IS_IN",
                          "values": {
                            "type": "literal",
                            "literal": ["values"]
                          }
                        }
                      }
                    }
                  },
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "context": {
                    "variables": {
                      "variables": {
                        "type": "double",
                        "double": 1.1
                      }
                    },
                    "functionVariables": {
                      "functionVariables": {
                        "variables": {
                          "variables": {
                            "type": "double",
                            "double": 1.1
                          }
                        },
                        "subFunctionVariables": {
                          "subFunctionVariables": {
                            "variables": {
                              "variables": {
                                "type": "double",
                                "double": 1.1
                              }
                            },
                            "subFunctionVariables": {
                              "subFunctionVariables": {
                                "variables": {
                                  "variables": {
                                    "type": "double",
                                    "double": 1.1
                                  }
                                },
                                "subFunctionVariables": {
                                  "subFunctionVariables": {
                                    "variables": {},
                                    "subFunctionVariables": {}
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "numeric",
                  "numeric": {
                    "timestamps": [
                      {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      }
                    ],
                    "values": [1.1, 1.1]
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "parameterized-compute",
          "method": "POST",
          "id": "parameterizedCompute",
          "originalEndpointId": "endpoint_Compute.parameterizedCompute",
          "name": "Parameterized Compute",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/compute/v2"
              },
              {
                "type": "literal",
                "value": "/compute/parameterized"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Compute:ParameterizedComputeNodeRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Compute:ParameterizedComputeNodeResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/compute/v2/compute/parameterized",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "node": {
                  "type": "ranges",
                  "ranges": {
                    "input": {
                      "type": "enumFilter",
                      "enumFilter": {
                        "input": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "function": "MIN"
                          }
                        },
                        "operator": "IS_IN",
                        "values": {
                          "type": "literal",
                          "literal": ["values"]
                        }
                      }
                    }
                  }
                },
                "start": {
                  "seconds": 1000000,
                  "nanos": 1000000
                },
                "end": {
                  "seconds": 1000000,
                  "nanos": 1000000
                },
                "context": {
                  "variables": {
                    "variables": {
                      "type": "double",
                      "double": 1.1
                    }
                  },
                  "functionVariables": {
                    "functionVariables": {
                      "variables": {
                        "variables": {
                          "type": "double",
                          "double": 1.1
                        }
                      },
                      "subFunctionVariables": {
                        "subFunctionVariables": {
                          "variables": {
                            "variables": {
                              "type": "double",
                              "double": 1.1
                            }
                          },
                          "subFunctionVariables": {
                            "subFunctionVariables": {
                              "variables": {
                                "variables": {
                                  "type": "double",
                                  "double": 1.1
                                }
                              },
                              "subFunctionVariables": {
                                "subFunctionVariables": {
                                  "variables": {},
                                  "subFunctionVariables": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "parameterizedContext": {
                  "parameterInputs": [
                    {
                      "variables": {
                        "variables": {
                          "type": "double",
                          "double": 1.1
                        }
                      },
                      "functionVariables": {
                        "functionVariables": {
                          "variables": {
                            "variables": {
                              "type": "double",
                              "double": 1.1
                            }
                          },
                          "subFunctionVariables": {
                            "subFunctionVariables": {
                              "variables": {
                                "variables": {
                                  "type": "double",
                                  "double": 1.1
                                }
                              },
                              "subFunctionVariables": {
                                "subFunctionVariables": {
                                  "variables": {},
                                  "subFunctionVariables": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "variables": {
                        "variables": {
                          "type": "double",
                          "double": 1.1
                        }
                      },
                      "functionVariables": {
                        "functionVariables": {
                          "variables": {
                            "variables": {
                              "type": "double",
                              "double": 1.1
                            }
                          },
                          "subFunctionVariables": {
                            "subFunctionVariables": {
                              "variables": {
                                "variables": {
                                  "type": "double",
                                  "double": 1.1
                                }
                              },
                              "subFunctionVariables": {
                                "subFunctionVariables": {
                                  "variables": {},
                                  "subFunctionVariables": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "type": "success",
                    "success": {
                      "type": "numeric",
                      "numeric": {
                        "timestamps": [
                          {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          }
                        ],
                        "values": [1.1, 1.1]
                      }
                    }
                  },
                  {
                    "type": "success",
                    "success": {
                      "type": "numeric",
                      "numeric": {
                        "timestamps": [
                          {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          }
                        ],
                        "values": [1.1, 1.1]
                      }
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "node": {
                    "type": "ranges",
                    "ranges": {
                      "input": {
                        "type": "enumFilter",
                        "enumFilter": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "function",
                                "function": {
                                  "functionReference": "functionReference",
                                  "functionIdentifier": {
                                    "type": "variable",
                                    "variable": "functionIdentifier"
                                  }
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "operator": "IS_IN",
                          "values": {
                            "type": "literal",
                            "literal": ["values"]
                          }
                        }
                      }
                    }
                  },
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "context": {
                    "variables": {
                      "variables": {
                        "type": "double",
                        "double": 1.1
                      }
                    },
                    "functionVariables": {
                      "functionVariables": {
                        "variables": {
                          "variables": {
                            "type": "double",
                            "double": 1.1
                          }
                        },
                        "subFunctionVariables": {
                          "subFunctionVariables": {
                            "variables": {
                              "variables": {
                                "type": "double",
                                "double": 1.1
                              }
                            },
                            "subFunctionVariables": {
                              "subFunctionVariables": {
                                "variables": {
                                  "variables": {
                                    "type": "double",
                                    "double": 1.1
                                  }
                                },
                                "subFunctionVariables": {
                                  "subFunctionVariables": {
                                    "variables": {},
                                    "subFunctionVariables": {}
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "parameterizedContext": {
                    "parameterInputs": [
                      {
                        "variables": {
                          "variables": {
                            "type": "double",
                            "double": 1.1
                          }
                        },
                        "functionVariables": {
                          "functionVariables": {
                            "variables": {
                              "variables": {
                                "type": "double",
                                "double": 1.1
                              }
                            },
                            "subFunctionVariables": {
                              "subFunctionVariables": {
                                "variables": {
                                  "variables": {
                                    "type": "double",
                                    "double": 1.1
                                  }
                                },
                                "subFunctionVariables": {
                                  "subFunctionVariables": {
                                    "variables": {},
                                    "subFunctionVariables": {}
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "variables": {
                          "variables": {
                            "type": "double",
                            "double": 1.1
                          }
                        },
                        "functionVariables": {
                          "functionVariables": {
                            "variables": {
                              "variables": {
                                "type": "double",
                                "double": 1.1
                              }
                            },
                            "subFunctionVariables": {
                              "subFunctionVariables": {
                                "variables": {
                                  "variables": {
                                    "type": "double",
                                    "double": 1.1
                                  }
                                },
                                "subFunctionVariables": {
                                  "subFunctionVariables": {
                                    "variables": {},
                                    "subFunctionVariables": {}
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "type": "success",
                      "success": {
                        "type": "numeric",
                        "numeric": {
                          "timestamps": [
                            {
                              "seconds": 1000000,
                              "nanos": 1000000,
                              "picos": 1
                            },
                            {
                              "seconds": 1000000,
                              "nanos": 1000000,
                              "picos": 1
                            }
                          ],
                          "values": [1.1, 1.1]
                        }
                      }
                    },
                    {
                      "type": "success",
                      "success": {
                        "type": "numeric",
                        "numeric": {
                          "timestamps": [
                            {
                              "seconds": 1000000,
                              "nanos": 1000000,
                              "picos": 1
                            },
                            {
                              "seconds": 1000000,
                              "nanos": 1000000,
                              "picos": 1
                            }
                          ],
                          "values": [1.1, 1.1]
                        }
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "compute-units",
          "method": "POST",
          "id": "computeUnits",
          "originalEndpointId": "endpoint_Compute.computeUnits",
          "name": "Compute Units",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/compute/v2"
              },
              {
                "type": "literal",
                "value": "/compute/units"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Compute:ComputeUnitsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Compute:ComputeUnitResult"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/compute/v2/compute/units",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "node": {
                  "type": "ranges",
                  "ranges": {
                    "input": {
                      "type": "enumFilter",
                      "enumFilter": {
                        "input": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "function": "MIN"
                          }
                        },
                        "operator": "IS_IN",
                        "values": {
                          "type": "literal",
                          "literal": ["values"]
                        }
                      }
                    }
                  }
                },
                "context": {
                  "variables": {
                    "variables": {
                      "type": "double",
                      "double": 1.1
                    }
                  },
                  "functionVariables": {
                    "functionVariables": {
                      "variables": {
                        "variables": {
                          "type": "double",
                          "double": 1.1
                        }
                      },
                      "subFunctionVariables": {
                        "subFunctionVariables": {
                          "variables": {
                            "variables": {
                              "type": "double",
                              "double": 1.1
                            }
                          },
                          "subFunctionVariables": {
                            "subFunctionVariables": {
                              "variables": {
                                "variables": {
                                  "type": "double",
                                  "double": 1.1
                                }
                              },
                              "subFunctionVariables": {
                                "subFunctionVariables": {
                                  "variables": {},
                                  "subFunctionVariables": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "single",
                "single": {
                  "type": "success",
                  "success": "string"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "node": {
                    "type": "ranges",
                    "ranges": {
                      "input": {
                        "type": "enumFilter",
                        "enumFilter": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "function",
                                "function": {
                                  "functionReference": "functionReference",
                                  "functionIdentifier": {
                                    "type": "variable",
                                    "variable": "functionIdentifier"
                                  }
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "operator": "IS_IN",
                          "values": {
                            "type": "literal",
                            "literal": ["values"]
                          }
                        }
                      }
                    }
                  },
                  "context": {
                    "variables": {
                      "variables": {
                        "type": "double",
                        "double": 1.1
                      }
                    },
                    "functionVariables": {
                      "functionVariables": {
                        "variables": {
                          "variables": {
                            "type": "double",
                            "double": 1.1
                          }
                        },
                        "subFunctionVariables": {
                          "subFunctionVariables": {
                            "variables": {
                              "variables": {
                                "type": "double",
                                "double": 1.1
                              }
                            },
                            "subFunctionVariables": {
                              "subFunctionVariables": {
                                "variables": {
                                  "variables": {
                                    "type": "double",
                                    "double": 1.1
                                  }
                                },
                                "subFunctionVariables": {
                                  "subFunctionVariables": {
                                    "variables": {},
                                    "subFunctionVariables": {}
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "single",
                  "single": {
                    "type": "success",
                    "success": "string"
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-compute-units",
          "method": "POST",
          "id": "batchComputeUnits",
          "originalEndpointId": "endpoint_Compute.batchComputeUnits",
          "name": "Batch Compute Units",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/compute/v2"
              },
              {
                "type": "literal",
                "value": "/compute/batch-units"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Compute:BatchComputeUnitsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Compute:BatchComputeUnitResult"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/compute/v2/compute/batch-units",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "requests": [
                  {
                    "node": {
                      "type": "ranges",
                      "ranges": {
                        "input": {
                          "type": "enumFilter",
                          "enumFilter": {
                            "input": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "operator": "IS_IN",
                            "values": {
                              "type": "literal",
                              "literal": ["values"]
                            }
                          }
                        }
                      }
                    },
                    "context": {
                      "variables": {
                        "variables": {
                          "type": "double",
                          "double": 1.1
                        }
                      },
                      "functionVariables": {
                        "functionVariables": {
                          "variables": {
                            "variables": {
                              "type": "double",
                              "double": 1.1
                            }
                          },
                          "subFunctionVariables": {
                            "subFunctionVariables": {
                              "variables": {
                                "variables": {
                                  "type": "double",
                                  "double": 1.1
                                }
                              },
                              "subFunctionVariables": {
                                "subFunctionVariables": {
                                  "variables": {},
                                  "subFunctionVariables": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "node": {
                      "type": "ranges",
                      "ranges": {
                        "input": {
                          "type": "enumFilter",
                          "enumFilter": {
                            "input": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "operator": "IS_IN",
                            "values": {
                              "type": "literal",
                              "literal": ["values"]
                            }
                          }
                        }
                      }
                    },
                    "context": {
                      "variables": {
                        "variables": {
                          "type": "double",
                          "double": 1.1
                        }
                      },
                      "functionVariables": {
                        "functionVariables": {
                          "variables": {
                            "variables": {
                              "type": "double",
                              "double": 1.1
                            }
                          },
                          "subFunctionVariables": {
                            "subFunctionVariables": {
                              "variables": {
                                "variables": {
                                  "type": "double",
                                  "double": 1.1
                                }
                              },
                              "subFunctionVariables": {
                                "subFunctionVariables": {
                                  "variables": {},
                                  "subFunctionVariables": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "type": "single",
                    "single": {
                      "type": "success",
                      "success": "results"
                    }
                  },
                  {
                    "type": "single",
                    "single": {
                      "type": "success",
                      "success": "results"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "requests": [
                    {
                      "node": {
                        "type": "ranges",
                        "ranges": {
                          "input": {
                            "type": "enumFilter",
                            "enumFilter": {
                              "input": {
                                "type": "function",
                                "function": {
                                  "functionReference": "functionReference",
                                  "functionIdentifier": {
                                    "type": "variable",
                                    "variable": "functionIdentifier"
                                  }
                                }
                              },
                              "operator": "IS_IN",
                              "values": {
                                "type": "literal",
                                "literal": ["values"]
                              }
                            }
                          }
                        }
                      },
                      "context": {
                        "variables": {
                          "variables": {
                            "type": "double",
                            "double": 1.1
                          }
                        },
                        "functionVariables": {
                          "functionVariables": {
                            "variables": {
                              "variables": {
                                "type": "double",
                                "double": 1.1
                              }
                            },
                            "subFunctionVariables": {
                              "subFunctionVariables": {
                                "variables": {
                                  "variables": {
                                    "type": "double",
                                    "double": 1.1
                                  }
                                },
                                "subFunctionVariables": {
                                  "subFunctionVariables": {
                                    "variables": {},
                                    "subFunctionVariables": {}
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "node": {
                        "type": "ranges",
                        "ranges": {
                          "input": {
                            "type": "enumFilter",
                            "enumFilter": {
                              "input": {
                                "type": "function",
                                "function": {
                                  "functionReference": "functionReference",
                                  "functionIdentifier": {
                                    "type": "variable",
                                    "variable": "functionIdentifier"
                                  }
                                }
                              },
                              "operator": "IS_IN",
                              "values": {
                                "type": "literal",
                                "literal": ["values"]
                              }
                            }
                          }
                        }
                      },
                      "context": {
                        "variables": {
                          "variables": {
                            "type": "double",
                            "double": 1.1
                          }
                        },
                        "functionVariables": {
                          "functionVariables": {
                            "variables": {
                              "variables": {
                                "type": "double",
                                "double": 1.1
                              }
                            },
                            "subFunctionVariables": {
                              "subFunctionVariables": {
                                "variables": {
                                  "variables": {
                                    "type": "double",
                                    "double": 1.1
                                  }
                                },
                                "subFunctionVariables": {
                                  "subFunctionVariables": {
                                    "variables": {},
                                    "subFunctionVariables": {}
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "type": "single",
                      "single": {
                        "type": "success",
                        "success": "results"
                      }
                    },
                    {
                      "type": "single",
                      "single": {
                        "type": "success",
                        "success": "results"
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "compute-with-units",
          "method": "POST",
          "id": "computeWithUnits",
          "originalEndpointId": "endpoint_Compute.computeWithUnits",
          "name": "Compute With Units",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/compute/v2"
              },
              {
                "type": "literal",
                "value": "/computeWithUnits"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Compute:ComputeWithUnitsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Compute:ComputeWithUnitsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/compute/v2/computeWithUnits",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "node": {
                  "type": "ranges",
                  "ranges": {
                    "input": {
                      "type": "enumFilter",
                      "enumFilter": {
                        "input": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "function": "MIN"
                          }
                        },
                        "operator": "IS_IN",
                        "values": {
                          "type": "literal",
                          "literal": ["values"]
                        }
                      }
                    }
                  }
                },
                "start": {
                  "seconds": 1000000,
                  "nanos": 1000000
                },
                "end": {
                  "seconds": 1000000,
                  "nanos": 1000000
                },
                "context": {
                  "variables": {
                    "variables": {
                      "type": "double",
                      "double": 1.1
                    }
                  },
                  "functionVariables": {
                    "functionVariables": {
                      "variables": {
                        "variables": {
                          "type": "double",
                          "double": 1.1
                        }
                      },
                      "subFunctionVariables": {
                        "subFunctionVariables": {
                          "variables": {
                            "variables": {
                              "type": "double",
                              "double": 1.1
                            }
                          },
                          "subFunctionVariables": {
                            "subFunctionVariables": {
                              "variables": {
                                "variables": {
                                  "type": "double",
                                  "double": 1.1
                                }
                              },
                              "subFunctionVariables": {
                                "subFunctionVariables": {
                                  "variables": {},
                                  "subFunctionVariables": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "computeResult": {
                  "type": "numeric",
                  "numeric": {
                    "timestamps": [
                      {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      }
                    ],
                    "values": [1.1, 1.1]
                  }
                },
                "computeUnit": {
                  "type": "single",
                  "single": {
                    "type": "success",
                    "success": "computeUnit"
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "node": {
                    "type": "ranges",
                    "ranges": {
                      "input": {
                        "type": "enumFilter",
                        "enumFilter": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "function",
                                "function": {
                                  "functionReference": "functionReference",
                                  "functionIdentifier": {
                                    "type": "variable",
                                    "variable": "functionIdentifier"
                                  }
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "operator": "IS_IN",
                          "values": {
                            "type": "literal",
                            "literal": ["values"]
                          }
                        }
                      }
                    }
                  },
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "context": {
                    "variables": {
                      "variables": {
                        "type": "double",
                        "double": 1.1
                      }
                    },
                    "functionVariables": {
                      "functionVariables": {
                        "variables": {
                          "variables": {
                            "type": "double",
                            "double": 1.1
                          }
                        },
                        "subFunctionVariables": {
                          "subFunctionVariables": {
                            "variables": {
                              "variables": {
                                "type": "double",
                                "double": 1.1
                              }
                            },
                            "subFunctionVariables": {
                              "subFunctionVariables": {
                                "variables": {
                                  "variables": {
                                    "type": "double",
                                    "double": 1.1
                                  }
                                },
                                "subFunctionVariables": {
                                  "subFunctionVariables": {
                                    "variables": {},
                                    "subFunctionVariables": {}
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "computeResult": {
                    "type": "numeric",
                    "numeric": {
                      "timestamps": [
                        {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        }
                      ],
                      "values": [1.1, 1.1]
                    }
                  },
                  "computeUnit": {
                    "type": "single",
                    "single": {
                      "type": "success",
                      "success": "computeUnit"
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Compute:ComputableNode",
        "type_Compute:NumericSeriesNode",
        "type_Compute:EnumSeriesNode",
        "type_Compute:RangesNode",
        "type_Compute:CartesianNode",
        "type_Compute:SummarizeCartesianNode",
        "type_Compute:FrequencyDomainNode",
        "type_Compute:FftNode",
        "type_Compute:SummarizeGeoNode",
        "type_Compute:GeoNodeSummaryStrategy",
        "type_Compute:GeoNodeTemporalSummary",
        "type_Compute:GeoNode",
        "type_Compute:LatLongGeoNode",
        "type_Compute:LatLongBounds",
        "type_Compute:LatLongPoint",
        "type_Compute:HistogramNode",
        "type_Compute:NumericHistogramNode",
        "type_Compute:EnumHistogramNode",
        "type_Compute:NumericHistogramBucketStrategy",
        "type_Compute:NumericHistogramBucketWidthAndOffset",
        "type_Compute:SummarizeSeriesNode",
        "type_Compute:RawUntypedSeriesNode",
        "type_Compute:SeriesNode",
        "type_Compute:ComputeNode",
        "type_Compute:SummarizeRangesNode",
        "type_Compute:SelectValueNode",
        "type_Compute:RawNumericSeriesNode",
        "type_Compute:RawEnumSeriesNode",
        "type_Compute:RollingOperationSeriesNode",
        "type_Compute:RollingOperator",
        "type_Compute:ExponentialAverage",
        "type_Compute:Average",
        "type_Compute:Count",
        "type_Compute:Minimum",
        "type_Compute:Maximum",
        "type_Compute:StandardDeviation",
        "type_Compute:Sum",
        "type_Compute:Window",
        "type_Compute:VariableName",
        "type_Compute:LogicalSeriesRid",
        "type_Compute:SeriesName",
        "type_Compute:SeriesSpec",
        "type_Compute:VariableValue",
        "type_Compute:ComputeNodeWithContext",
        "type_Compute:FunctionReference",
        "type_Compute:Context",
        "type_Compute:FunctionVariables",
        "type_Compute:LocalVariableName",
        "type_Compute:NegativeValueConfiguration",
        "type_Compute:AllowNegativeValues",
        "type_Compute:SetNegativeValuesToZero",
        "type_Compute:ExcludeNegativeValues",
        "type_Compute:PersistenceWindowConfiguration",
        "type_Compute:OutputRangeStart",
        "type_Compute:FirstPointMatchingCondition",
        "type_Compute:AfterPersistenceWindow",
        "type_Compute:ArithmeticSeriesNode",
        "type_Compute:CumulativeSumSeriesNode",
        "type_Compute:DerivativeSeriesNode",
        "type_Compute:IntegralSeriesNode",
        "type_Compute:EnumTimeRangeFilterSeriesNode",
        "type_Compute:NumericTimeRangeFilterSeriesNode",
        "type_Compute:EnumTimeShiftSeriesNode",
        "type_Compute:NumericTimeShiftSeriesNode",
        "type_Compute:TimeDifferenceSeriesNode",
        "type_Compute:UnaryArithmeticSeriesNode",
        "type_Compute:BinaryArithmeticSeriesNode",
        "type_Compute:BinaryArithmeticOperation",
        "type_Compute:UnaryArithmeticOperation",
        "type_Compute:EnumUnionSeriesNode",
        "type_Compute:EnumUnionOperation",
        "type_Compute:NumericUnionSeriesNode",
        "type_Compute:NumericUnionOperation",
        "type_Compute:ValueDifferenceSeriesNode",
        "type_Compute:NumericFilterTransformationSeriesNode",
        "type_Compute:EnumFilterTransformationSeriesNode",
        "type_Compute:AggregateEnumSeriesNode",
        "type_Compute:AggregateNumericSeriesNode",
        "type_Compute:BitOperationSeriesNode",
        "type_Compute:BitOperationFunction",
        "type_Compute:NumericAggregationFunction",
        "type_Compute:EnumAggregationFunction",
        "type_Compute:BitAndFunction",
        "type_Compute:BitOrFunction",
        "type_Compute:BitXorFunction",
        "type_Compute:BitTestFunction",
        "type_Compute:EnumSeriesFunction",
        "type_Compute:NumericSeriesFunction",
        "type_Compute:MaxSeriesNode",
        "type_Compute:MeanSeriesNode",
        "type_Compute:MinSeriesNode",
        "type_Compute:ProductSeriesNode",
        "type_Compute:EnumResampleSeriesNode",
        "type_Compute:NumericResampleSeriesNode",
        "type_Compute:SumSeriesNode",
        "type_Compute:ScaleSeriesNode",
        "type_Compute:OffsetSeriesNode",
        "type_Compute:UnitConversionSeriesNode",
        "type_Compute:InterpolationConfiguration",
        "type_Compute:ForwardFillInterpolation",
        "type_Compute:ResampleConfiguration",
        "type_Compute:ResampleInterpolationConfiguration",
        "type_Compute:ForwardFillResampleInterpolationConfiguration",
        "type_Compute:RangesNumericAggregationNode",
        "type_Compute:RangeAggregationOperation",
        "type_Compute:RangesFunction",
        "type_Compute:UnionRangesNode",
        "type_Compute:IntersectRangesNode",
        "type_Compute:NotRangesNode",
        "type_Compute:SeriesCrossoverRangesNode",
        "type_Compute:SeriesEqualityRangesNode",
        "type_Compute:EnumSeriesEqualityRangesNode",
        "type_Compute:EqualityOperator",
        "type_Compute:EnumFilterRangesNode",
        "type_Compute:EnumFilterOperator",
        "type_Compute:ThresholdingRangesNode",
        "type_Compute:MinMaxThresholdRangesNode",
        "type_Compute:OnChangeRangesNode",
        "type_Compute:PeakRangesNode",
        "type_Compute:PeakType",
        "type_Compute:RawRangesNode",
        "type_Compute:ThresholdOperator",
        "type_Compute:MinMaxThresholdOperator",
        "type_Compute:StaleRangesNode",
        "type_Compute:CartesianBounds",
        "type_Compute:ScatterNode",
        "type_Compute:ParameterizedComputeNodeRequest",
        "type_Compute:ParameterizedContext",
        "type_Compute:ParameterInput",
        "type_Compute:ParameterizedComputeNodeResponse",
        "type_Compute:ParameterizedComputeNodeResult",
        "type_Compute:ErrorResult",
        "type_Compute:ErrorType",
        "type_Compute:ErrorCode",
        "type_Compute:ComputeNodeRequest",
        "type_Compute:ComputeUnitsRequest",
        "type_Compute:BatchComputeUnitsRequest",
        "type_Compute:ComputeNodeResponse",
        "type_Compute:ComputeWithUnitsRequest",
        "type_Compute:ComputeWithUnitsResponse",
        "type_Compute:Range",
        "type_Compute:RangeValue",
        "type_Compute:RangeAggregation",
        "type_Compute:Empty",
        "type_Compute:RangesSummary",
        "type_Compute:RangeSummary",
        "type_Compute:NumericPlot",
        "type_Compute:BucketedNumericPlot",
        "type_Compute:EnumPlot",
        "type_Compute:BucketedEnumPlot",
        "type_Compute:CartesianPlot",
        "type_Compute:BucketedCartesianPlot",
        "type_Compute:CartesianBucket",
        "type_Compute:BucketedGeoPlot",
        "type_Compute:TimeBucketedGeoPlot",
        "type_Compute:GeoTimeBucket",
        "type_Compute:GeoPoint",
        "type_Compute:GeoPointWithTimestamp",
        "type_Compute:NumericHistogramPlot",
        "type_Compute:NumericHistogramBucket",
        "type_Compute:EnumHistogramPlot",
        "type_Compute:EnumHistogramBucket",
        "type_Compute:HistogramChannelCount",
        "type_Compute:FrequencyDomainPlot",
        "type_Compute:NumericBucket",
        "type_Compute:NumericPoint",
        "type_Compute:CompactEnumPoint",
        "type_Compute:EnumPoint",
        "type_Compute:EnumBucket",
        "type_Compute:BatchComputeUnitResult",
        "type_Compute:ComputeUnitResult",
        "type_Compute:CartesianUnitResult",
        "type_Compute:UnitResult",
        "type_Compute:UnitComputationError",
        "type_Compute:IncompatibleUnitOperation",
        "type_Compute:UnitsMissing",
        "type_Compute:UnitOperation",
        "type_Compute:DoubleConstant",
        "type_Compute:DurationConstant",
        "type_Compute:FunctionVariable",
        "type_Compute:IntegerConstant",
        "type_Compute:StringSetConstant",
        "type_Compute:TimestampConstant"
      ],
      "subpackages": [],
      "urlSlug": "compute",
      "description": "The Compute Service provides the ability to compute the output of compute graphs.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_ComputeRepresentation": {
      "subpackageId": "subpackage_ComputeRepresentation",
      "name": "ComputeRepresentation",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "compute-to-expression",
          "method": "POST",
          "id": "computeToExpression",
          "originalEndpointId": "endpoint_ComputeRepresentation.computeToExpression",
          "name": "Compute To Expression",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/compute/representation/v1"
              },
              {
                "type": "literal",
                "value": "/compute-to-expression"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_ComputeRepresentation:CompiledNode"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_ComputeRepresentation:ComputeExpression"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/compute/representation/v1/compute-to-expression",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "node": {
                  "type": "enumeratedSeries",
                  "enumeratedSeries": {
                    "type": "aggregate",
                    "aggregate": {
                      "input": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      },
                      "function": "MIN"
                    }
                  }
                },
                "context": {
                  "variables": {
                    "variables": {
                      "type": "double",
                      "double": 1.1
                    }
                  },
                  "functionVariables": {
                    "functionVariables": {
                      "variables": {
                        "variables": {
                          "type": "double",
                          "double": 1.1
                        }
                      },
                      "functionVariables": {
                        "functionVariables": {
                          "variables": {
                            "variables": {
                              "type": "double",
                              "double": 1.1
                            }
                          },
                          "functionVariables": {
                            "functionVariables": {
                              "variables": {
                                "variables": {
                                  "type": "double",
                                  "double": 1.1
                                }
                              },
                              "functionVariables": {
                                "functionVariables": {
                                  "variables": {},
                                  "functionVariables": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": "string",
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "node": {
                    "type": "enumeratedSeries",
                    "enumeratedSeries": {
                      "type": "aggregate",
                      "aggregate": {
                        "input": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            },
                            "function": "MIN"
                          }
                        },
                        "function": "MIN"
                      }
                    }
                  },
                  "context": {
                    "variables": {
                      "variables": {
                        "type": "double",
                        "double": 1.1
                      }
                    },
                    "functionVariables": {
                      "functionVariables": {
                        "variables": {
                          "variables": {
                            "type": "double",
                            "double": 1.1
                          }
                        },
                        "functionVariables": {
                          "functionVariables": {
                            "variables": {
                              "variables": {
                                "type": "double",
                                "double": 1.1
                              }
                            },
                            "functionVariables": {
                              "functionVariables": {
                                "variables": {
                                  "variables": {
                                    "type": "double",
                                    "double": 1.1
                                  }
                                },
                                "functionVariables": {
                                  "functionVariables": {
                                    "variables": {},
                                    "functionVariables": {}
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": "string"
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-compute-to-expression",
          "method": "POST",
          "id": "batchComputeToExpression",
          "originalEndpointId": "endpoint_ComputeRepresentation.batchComputeToExpression",
          "name": "Batch Compute To Expression",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/compute/representation/v1"
              },
              {
                "type": "literal",
                "value": "/batch-compute-to-expression"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "id",
                  "value": "type_ComputeRepresentation:CompiledNode"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "id",
                  "value": "type_ComputeRepresentation:ComputeExpression"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/compute/representation/v1/batch-compute-to-expression",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "string": {
                  "node": {
                    "type": "enumeratedSeries",
                    "enumeratedSeries": {
                      "type": "aggregate",
                      "aggregate": {
                        "input": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "function": "MIN"
                          }
                        },
                        "function": "MIN"
                      }
                    }
                  },
                  "context": {
                    "variables": {
                      "variables": {
                        "type": "double",
                        "double": 1.1
                      }
                    },
                    "functionVariables": {
                      "functionVariables": {
                        "variables": {
                          "variables": {
                            "type": "double",
                            "double": 1.1
                          }
                        },
                        "functionVariables": {
                          "functionVariables": {
                            "variables": {
                              "variables": {
                                "type": "double",
                                "double": 1.1
                              }
                            },
                            "functionVariables": {
                              "functionVariables": {
                                "variables": {},
                                "functionVariables": {}
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "string": "string"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "string": {
                    "node": {
                      "type": "enumeratedSeries",
                      "enumeratedSeries": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "function",
                                "function": {
                                  "functionReference": "functionReference",
                                  "functionIdentifier": {
                                    "type": "variable",
                                    "variable": "functionIdentifier"
                                  }
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      }
                    },
                    "context": {
                      "variables": {
                        "variables": {
                          "type": "double",
                          "double": 1.1
                        }
                      },
                      "functionVariables": {
                        "functionVariables": {
                          "variables": {
                            "variables": {
                              "type": "double",
                              "double": 1.1
                            }
                          },
                          "functionVariables": {
                            "functionVariables": {
                              "variables": {
                                "variables": {
                                  "type": "double",
                                  "double": 1.1
                                }
                              },
                              "functionVariables": {
                                "functionVariables": {
                                  "variables": {},
                                  "functionVariables": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "string": "string"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "expression-to-compute",
          "method": "POST",
          "id": "expressionToCompute",
          "originalEndpointId": "endpoint_ComputeRepresentation.expressionToCompute",
          "name": "Expression To Compute",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/compute/representation/v1"
              },
              {
                "type": "literal",
                "value": "/expression-to-compute"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_ComputeRepresentation:ExpressionToComputeRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_ComputeRepresentation:ExpressionToComputeResult"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/compute/representation/v1/expression-to-compute",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "expression": "expression"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "success",
                "success": {
                  "node": {
                    "node": {
                      "type": "enumeratedSeries",
                      "enumeratedSeries": {
                        "type": "aggregate",
                        "aggregate": {
                          "input": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "raw",
                                "raw": {
                                  "name": "name"
                                }
                              },
                              "function": "MIN"
                            }
                          },
                          "function": "MIN"
                        }
                      }
                    },
                    "context": {
                      "variables": {
                        "variables": {
                          "type": "double",
                          "double": 1.1
                        }
                      },
                      "functionVariables": {
                        "functionVariables": {
                          "variables": {
                            "variables": {
                              "type": "double",
                              "double": 1.1
                            }
                          },
                          "functionVariables": {
                            "functionVariables": {
                              "variables": {
                                "variables": {
                                  "type": "double",
                                  "double": 1.1
                                }
                              },
                              "functionVariables": {
                                "functionVariables": {
                                  "variables": {},
                                  "functionVariables": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "expression": "expression"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "success",
                  "success": {
                    "node": {
                      "node": {
                        "type": "enumeratedSeries",
                        "enumeratedSeries": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "aggregate",
                              "aggregate": {
                                "input": {
                                  "type": "raw",
                                  "raw": {
                                    "name": "name"
                                  }
                                },
                                "function": "MIN"
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      },
                      "context": {
                        "variables": {
                          "variables": {
                            "type": "double",
                            "double": 1.1
                          }
                        },
                        "functionVariables": {
                          "functionVariables": {
                            "variables": {
                              "variables": {
                                "type": "double",
                                "double": 1.1
                              }
                            },
                            "functionVariables": {
                              "functionVariables": {
                                "variables": {
                                  "variables": {
                                    "type": "double",
                                    "double": 1.1
                                  }
                                },
                                "functionVariables": {
                                  "functionVariables": {
                                    "variables": {},
                                    "functionVariables": {}
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-expression-to-compute",
          "method": "POST",
          "id": "batchExpressionToCompute",
          "originalEndpointId": "endpoint_ComputeRepresentation.batchExpressionToCompute",
          "name": "Batch Expression To Compute",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/compute/representation/v1"
              },
              {
                "type": "literal",
                "value": "/batch-expression-to-compute"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_ComputeRepresentation:BatchExpressionToComputeRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_ComputeRepresentation:ComputeExpression"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_ComputeRepresentation:ExpressionToComputeResult"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/compute/representation/v1/batch-expression-to-compute",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "expressions": ["expressions"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "string": {
                  "type": "success",
                  "success": {
                    "node": {
                      "node": {
                        "type": "enumeratedSeries",
                        "enumeratedSeries": {
                          "type": "aggregate",
                          "aggregate": {
                            "input": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "function": "MIN"
                          }
                        }
                      },
                      "context": {
                        "variables": {
                          "variables": {
                            "type": "double",
                            "double": 1.1
                          }
                        },
                        "functionVariables": {
                          "functionVariables": {
                            "variables": {
                              "variables": {
                                "type": "double",
                                "double": 1.1
                              }
                            },
                            "functionVariables": {
                              "functionVariables": {
                                "variables": {},
                                "functionVariables": {}
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "expressions": ["expressions"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "string": {
                    "type": "success",
                    "success": {
                      "node": {
                        "node": {
                          "type": "enumeratedSeries",
                          "enumeratedSeries": {
                            "type": "aggregate",
                            "aggregate": {
                              "input": {
                                "type": "function",
                                "function": {
                                  "functionReference": "functionReference",
                                  "functionIdentifier": {
                                    "type": "variable",
                                    "variable": "functionIdentifier"
                                  }
                                }
                              },
                              "function": "MIN"
                            }
                          }
                        },
                        "context": {
                          "variables": {
                            "variables": {
                              "type": "double",
                              "double": 1.1
                            }
                          },
                          "functionVariables": {
                            "functionVariables": {
                              "variables": {
                                "variables": {
                                  "type": "double",
                                  "double": 1.1
                                }
                              },
                              "functionVariables": {
                                "functionVariables": {
                                  "variables": {},
                                  "functionVariables": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_ComputeRepresentation:Node",
        "type_ComputeRepresentation:CompiledNode",
        "type_ComputeRepresentation:CompiledNumericSeries",
        "type_ComputeRepresentation:CompiledEnumeratedSeries",
        "type_ComputeRepresentation:CompiledRangeSeries",
        "type_ComputeRepresentation:ComputeRepresentationContext",
        "type_ComputeRepresentation:ComputeRepresentationVariableValue",
        "type_ComputeRepresentation:ChannelLocator",
        "type_ComputeRepresentation:ComputeExpression",
        "type_ComputeRepresentation:ExpressionToComputeRequest",
        "type_ComputeRepresentation:BatchExpressionToComputeRequest",
        "type_ComputeRepresentation:ExpressionToComputeResult",
        "type_ComputeRepresentation:SuccessExpressionToComputeResult",
        "type_ComputeRepresentation:ErrorExpressionToComputeResult"
      ],
      "subpackages": [],
      "urlSlug": "compute-representation",
      "description": "The Compute Representation Service provides the ability to translate between a human-readable expression language\nand a compute graph. Bidirectional translation is supported.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Connection": {
      "subpackageId": "subpackage_Connection",
      "name": "Connection",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-connection",
          "method": "POST",
          "id": "createConnection",
          "originalEndpointId": "endpoint_Connection.createConnection",
          "name": "Create Connection",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/connection/v1"
              },
              {
                "type": "literal",
                "value": "/connections"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Connection:CreateConnection"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Connection:Connection"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/connection/v1/connections",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "name",
                "connectionDetails": {
                  "type": "timescale",
                  "timescale": {
                    "database": "database",
                    "host": "host",
                    "port": 1,
                    "username": "username",
                    "passwordSecretRid": "passwordSecretRid"
                  }
                },
                "metadata": {
                  "metadata": "metadata"
                },
                "requiredTagNames": ["requiredTagNames"],
                "availableTagValues": {
                  "availableTagValues": ["availableTagValues"]
                },
                "shouldScrape": true
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "displayName": "displayName",
                "description": "description",
                "connectionDetails": {
                  "type": "timescale",
                  "timescale": {
                    "database": "database",
                    "host": "host",
                    "port": 1,
                    "username": "username",
                    "passwordSecretRid": "passwordSecretRid"
                  }
                },
                "requiredTagNames": ["requiredTagNames"],
                "availableTagValues": {
                  "availableTagValues": ["availableTagValues"]
                },
                "metadata": {
                  "metadata": "metadata"
                },
                "scraping": {
                  "type": "influx",
                  "influx": {
                    "filter": [
                      {
                        "type": "not",
                        "not": {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "matchBucket",
                                "matchBucket": []
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "not",
                        "not": {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "matchBucket",
                                "matchBucket": []
                              }
                            }
                          }
                        }
                      }
                    ],
                    "seriesArchetypeConstruction": {
                      "channelNameComponents": [
                        {
                          "type": "bucket",
                          "bucket": {}
                        },
                        {
                          "type": "bucket",
                          "bucket": {}
                        }
                      ],
                      "separator": "separator"
                    }
                  }
                },
                "shouldScrape": true,
                "limits": {
                  "maxQueryRange": {
                    "unit": "HOURS",
                    "count": 1
                  }
                },
                "connectionStatus": {
                  "isConnected": true
                },
                "isArchived": true
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "name",
                  "connectionDetails": {
                    "type": "timescale",
                    "timescale": {
                      "database": "database",
                      "host": "host",
                      "port": 1,
                      "username": "username",
                      "passwordSecretRid": "passwordSecretRid"
                    }
                  },
                  "metadata": {
                    "metadata": "metadata"
                  },
                  "requiredTagNames": ["requiredTagNames"],
                  "availableTagValues": {
                    "availableTagValues": ["availableTagValues"]
                  },
                  "shouldScrape": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "displayName": "displayName",
                  "description": "description",
                  "connectionDetails": {
                    "type": "timescale",
                    "timescale": {
                      "database": "database",
                      "host": "host",
                      "port": 1,
                      "username": "username",
                      "passwordSecretRid": "passwordSecretRid"
                    }
                  },
                  "requiredTagNames": ["requiredTagNames"],
                  "availableTagValues": {
                    "availableTagValues": ["availableTagValues"]
                  },
                  "metadata": {
                    "metadata": "metadata"
                  },
                  "scraping": {
                    "type": "influx",
                    "influx": {
                      "filter": [
                        {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "not",
                                "not": {
                                  "type": "matchBucket",
                                  "matchBucket": []
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "not",
                                "not": {
                                  "type": "matchBucket",
                                  "matchBucket": []
                                }
                              }
                            }
                          }
                        }
                      ],
                      "seriesArchetypeConstruction": {
                        "channelNameComponents": [
                          {
                            "type": "bucket",
                            "bucket": {}
                          },
                          {
                            "type": "bucket",
                            "bucket": {}
                          }
                        ],
                        "separator": "separator"
                      }
                    }
                  },
                  "shouldScrape": true,
                  "limits": {
                    "maxQueryRange": {
                      "unit": "HOURS",
                      "count": 1
                    }
                  },
                  "connectionStatus": {
                    "isConnected": true
                  },
                  "isArchived": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-connection",
          "method": "PUT",
          "id": "updateConnection",
          "originalEndpointId": "endpoint_Connection.updateConnection",
          "name": "Update Connection",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Connection:ConnectionRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/connection/v1"
              },
              {
                "type": "literal",
                "value": "/connection/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/details"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Connection:UpdateConnectionRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Connection:Connection"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/connection/v1/connection/rid/details",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "displayName": "displayName",
                "description": "description",
                "connectionDetails": {
                  "type": "timescale",
                  "timescale": {
                    "database": "database",
                    "host": "host",
                    "port": 1,
                    "username": "username",
                    "passwordSecretRid": "passwordSecretRid"
                  }
                },
                "requiredTagNames": ["requiredTagNames"],
                "availableTagValues": {
                  "availableTagValues": ["availableTagValues"]
                },
                "metadata": {
                  "metadata": "metadata"
                },
                "scraping": {
                  "type": "influx",
                  "influx": {
                    "filter": [
                      {
                        "type": "not",
                        "not": {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "matchBucket",
                                "matchBucket": []
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "not",
                        "not": {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "matchBucket",
                                "matchBucket": []
                              }
                            }
                          }
                        }
                      }
                    ],
                    "seriesArchetypeConstruction": {
                      "channelNameComponents": [
                        {
                          "type": "bucket",
                          "bucket": {}
                        },
                        {
                          "type": "bucket",
                          "bucket": {}
                        }
                      ],
                      "separator": "separator"
                    }
                  }
                },
                "shouldScrape": true,
                "limits": {
                  "maxQueryRange": {
                    "unit": "HOURS",
                    "count": 1
                  }
                },
                "connectionStatus": {
                  "isConnected": true
                },
                "isArchived": true
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "displayName": "displayName",
                  "description": "description",
                  "connectionDetails": {
                    "type": "timescale",
                    "timescale": {
                      "database": "database",
                      "host": "host",
                      "port": 1,
                      "username": "username",
                      "passwordSecretRid": "passwordSecretRid"
                    }
                  },
                  "requiredTagNames": ["requiredTagNames"],
                  "availableTagValues": {
                    "availableTagValues": ["availableTagValues"]
                  },
                  "metadata": {
                    "metadata": "metadata"
                  },
                  "scraping": {
                    "type": "influx",
                    "influx": {
                      "filter": [
                        {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "not",
                                "not": {
                                  "type": "matchBucket",
                                  "matchBucket": []
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "not",
                                "not": {
                                  "type": "matchBucket",
                                  "matchBucket": []
                                }
                              }
                            }
                          }
                        }
                      ],
                      "seriesArchetypeConstruction": {
                        "channelNameComponents": [
                          {
                            "type": "bucket",
                            "bucket": {}
                          },
                          {
                            "type": "bucket",
                            "bucket": {}
                          }
                        ],
                        "separator": "separator"
                      }
                    }
                  },
                  "shouldScrape": true,
                  "limits": {
                    "maxQueryRange": {
                      "unit": "HOURS",
                      "count": 1
                    }
                  },
                  "connectionStatus": {
                    "isConnected": true
                  },
                  "isArchived": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-connection-status",
          "method": "PUT",
          "id": "updateConnectionStatus",
          "originalEndpointId": "endpoint_Connection.updateConnectionStatus",
          "name": "Update Connection Status",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Connection:ConnectionRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/connection/v1"
              },
              {
                "type": "literal",
                "value": "/connection/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/status"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Connection:ConnectionStatus"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/connection/v1/connection/rid/status",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "isConnected": true
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "isConnected": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "add-available-tags",
          "method": "POST",
          "id": "addAvailableTags",
          "originalEndpointId": "endpoint_Connection.addAvailableTags",
          "name": "Add Available Tags",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Connection:ConnectionRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/connection/v1"
              },
              {
                "type": "literal",
                "value": "/connection/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/available-tags"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_global:TagName"
                },
                "valueType": {
                  "type": "set",
                  "itemType": {
                    "type": "id",
                    "value": "type_global:TagValue"
                  }
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Connection:Connection"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/connection/v1/connection/rid/available-tags",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "string": ["string"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "displayName": "displayName",
                "description": "description",
                "connectionDetails": {
                  "type": "timescale",
                  "timescale": {
                    "database": "database",
                    "host": "host",
                    "port": 1,
                    "username": "username",
                    "passwordSecretRid": "passwordSecretRid"
                  }
                },
                "requiredTagNames": ["requiredTagNames"],
                "availableTagValues": {
                  "availableTagValues": ["availableTagValues"]
                },
                "metadata": {
                  "metadata": "metadata"
                },
                "scraping": {
                  "type": "influx",
                  "influx": {
                    "filter": [
                      {
                        "type": "not",
                        "not": {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "matchBucket",
                                "matchBucket": []
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "not",
                        "not": {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "matchBucket",
                                "matchBucket": []
                              }
                            }
                          }
                        }
                      }
                    ],
                    "seriesArchetypeConstruction": {
                      "channelNameComponents": [
                        {
                          "type": "bucket",
                          "bucket": {}
                        },
                        {
                          "type": "bucket",
                          "bucket": {}
                        }
                      ],
                      "separator": "separator"
                    }
                  }
                },
                "shouldScrape": true,
                "limits": {
                  "maxQueryRange": {
                    "unit": "HOURS",
                    "count": 1
                  }
                },
                "connectionStatus": {
                  "isConnected": true
                },
                "isArchived": true
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "string": ["string"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "displayName": "displayName",
                  "description": "description",
                  "connectionDetails": {
                    "type": "timescale",
                    "timescale": {
                      "database": "database",
                      "host": "host",
                      "port": 1,
                      "username": "username",
                      "passwordSecretRid": "passwordSecretRid"
                    }
                  },
                  "requiredTagNames": ["requiredTagNames"],
                  "availableTagValues": {
                    "availableTagValues": ["availableTagValues"]
                  },
                  "metadata": {
                    "metadata": "metadata"
                  },
                  "scraping": {
                    "type": "influx",
                    "influx": {
                      "filter": [
                        {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "not",
                                "not": {
                                  "type": "matchBucket",
                                  "matchBucket": []
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "not",
                                "not": {
                                  "type": "matchBucket",
                                  "matchBucket": []
                                }
                              }
                            }
                          }
                        }
                      ],
                      "seriesArchetypeConstruction": {
                        "channelNameComponents": [
                          {
                            "type": "bucket",
                            "bucket": {}
                          },
                          {
                            "type": "bucket",
                            "bucket": {}
                          }
                        ],
                        "separator": "separator"
                      }
                    }
                  },
                  "shouldScrape": true,
                  "limits": {
                    "maxQueryRange": {
                      "unit": "HOURS",
                      "count": 1
                    }
                  },
                  "connectionStatus": {
                    "isConnected": true
                  },
                  "isArchived": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-connection",
          "method": "GET",
          "id": "getConnection",
          "originalEndpointId": "endpoint_Connection.getConnection",
          "name": "Get Connection",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Connection:ConnectionRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/connection/v1"
              },
              {
                "type": "literal",
                "value": "/connection/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Connection:Connection"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/connection/v1/connection/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "displayName": "displayName",
                "description": "description",
                "connectionDetails": {
                  "type": "timescale",
                  "timescale": {
                    "database": "database",
                    "host": "host",
                    "port": 1,
                    "username": "username",
                    "passwordSecretRid": "passwordSecretRid"
                  }
                },
                "requiredTagNames": ["requiredTagNames"],
                "availableTagValues": {
                  "availableTagValues": ["availableTagValues"]
                },
                "metadata": {
                  "metadata": "metadata"
                },
                "scraping": {
                  "type": "influx",
                  "influx": {
                    "filter": [
                      {
                        "type": "not",
                        "not": {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "matchBucket",
                                "matchBucket": []
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "not",
                        "not": {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "matchBucket",
                                "matchBucket": []
                              }
                            }
                          }
                        }
                      }
                    ],
                    "seriesArchetypeConstruction": {
                      "channelNameComponents": [
                        {
                          "type": "bucket",
                          "bucket": {}
                        },
                        {
                          "type": "bucket",
                          "bucket": {}
                        }
                      ],
                      "separator": "separator"
                    }
                  }
                },
                "shouldScrape": true,
                "limits": {
                  "maxQueryRange": {
                    "unit": "HOURS",
                    "count": 1
                  }
                },
                "connectionStatus": {
                  "isConnected": true
                },
                "isArchived": true
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "displayName": "displayName",
                  "description": "description",
                  "connectionDetails": {
                    "type": "timescale",
                    "timescale": {
                      "database": "database",
                      "host": "host",
                      "port": 1,
                      "username": "username",
                      "passwordSecretRid": "passwordSecretRid"
                    }
                  },
                  "requiredTagNames": ["requiredTagNames"],
                  "availableTagValues": {
                    "availableTagValues": ["availableTagValues"]
                  },
                  "metadata": {
                    "metadata": "metadata"
                  },
                  "scraping": {
                    "type": "influx",
                    "influx": {
                      "filter": [
                        {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "not",
                                "not": {
                                  "type": "matchBucket",
                                  "matchBucket": []
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "not",
                                "not": {
                                  "type": "matchBucket",
                                  "matchBucket": []
                                }
                              }
                            }
                          }
                        }
                      ],
                      "seriesArchetypeConstruction": {
                        "channelNameComponents": [
                          {
                            "type": "bucket",
                            "bucket": {}
                          },
                          {
                            "type": "bucket",
                            "bucket": {}
                          }
                        ],
                        "separator": "separator"
                      }
                    }
                  },
                  "shouldScrape": true,
                  "limits": {
                    "maxQueryRange": {
                      "unit": "HOURS",
                      "count": 1
                    }
                  },
                  "connectionStatus": {
                    "isConnected": true
                  },
                  "isArchived": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-connections",
          "method": "POST",
          "id": "getConnections",
          "originalEndpointId": "endpoint_Connection.getConnections",
          "name": "Get Connections",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/connection/v1"
              },
              {
                "type": "literal",
                "value": "/connection/multiple"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Connection:ConnectionRid"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Connection:Connection"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/connection/v1/connection/multiple",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": ["string"],
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "displayName": "displayName",
                  "description": "description",
                  "connectionDetails": {
                    "type": "timescale",
                    "timescale": {
                      "database": "database",
                      "host": "host",
                      "port": 1,
                      "username": "username",
                      "passwordSecretRid": "passwordSecretRid"
                    }
                  },
                  "requiredTagNames": ["requiredTagNames"],
                  "availableTagValues": {
                    "availableTagValues": ["availableTagValues"]
                  },
                  "metadata": {
                    "metadata": "metadata"
                  },
                  "scraping": {
                    "type": "influx",
                    "influx": {
                      "filter": [
                        {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "matchBucket",
                                "matchBucket": []
                              }
                            }
                          }
                        },
                        {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "matchBucket",
                                "matchBucket": []
                              }
                            }
                          }
                        }
                      ],
                      "seriesArchetypeConstruction": {
                        "channelNameComponents": [
                          {
                            "type": "bucket",
                            "bucket": {}
                          },
                          {
                            "type": "bucket",
                            "bucket": {}
                          }
                        ],
                        "separator": "separator"
                      }
                    }
                  },
                  "shouldScrape": true,
                  "limits": {
                    "maxQueryRange": {
                      "unit": "HOURS",
                      "count": 1
                    }
                  },
                  "connectionStatus": {
                    "isConnected": true
                  },
                  "isArchived": true
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": ["string"]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "displayName": "displayName",
                    "description": "description",
                    "connectionDetails": {
                      "type": "timescale",
                      "timescale": {
                        "database": "database",
                        "host": "host",
                        "port": 1,
                        "username": "username",
                        "passwordSecretRid": "passwordSecretRid"
                      }
                    },
                    "requiredTagNames": ["requiredTagNames"],
                    "availableTagValues": {
                      "availableTagValues": ["availableTagValues"]
                    },
                    "metadata": {
                      "metadata": "metadata"
                    },
                    "scraping": {
                      "type": "influx",
                      "influx": {
                        "filter": [
                          {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "not",
                                "not": {
                                  "type": "matchBucket",
                                  "matchBucket": []
                                }
                              }
                            }
                          },
                          {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "not",
                                "not": {
                                  "type": "matchBucket",
                                  "matchBucket": []
                                }
                              }
                            }
                          }
                        ],
                        "seriesArchetypeConstruction": {
                          "channelNameComponents": [
                            {
                              "type": "bucket",
                              "bucket": {}
                            },
                            {
                              "type": "bucket",
                              "bucket": {}
                            }
                          ],
                          "separator": "separator"
                        }
                      }
                    },
                    "shouldScrape": true,
                    "limits": {
                      "maxQueryRange": {
                        "unit": "HOURS",
                        "count": 1
                      }
                    },
                    "connectionStatus": {
                      "isConnected": true
                    },
                    "isArchived": true
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "list-connections",
          "method": "GET",
          "id": "listConnections",
          "originalEndpointId": "endpoint_Connection.listConnections",
          "name": "List Connections",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/connection/v1"
              },
              {
                "type": "literal",
                "value": "/connections"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Connection:Connection"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/connection/v1/connections",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "displayName": "displayName",
                  "description": "description",
                  "connectionDetails": {
                    "type": "timescale",
                    "timescale": {
                      "database": "database",
                      "host": "host",
                      "port": 1,
                      "username": "username",
                      "passwordSecretRid": "passwordSecretRid"
                    }
                  },
                  "requiredTagNames": ["requiredTagNames"],
                  "availableTagValues": {
                    "availableTagValues": ["availableTagValues"]
                  },
                  "metadata": {
                    "metadata": "metadata"
                  },
                  "scraping": {
                    "type": "influx",
                    "influx": {
                      "filter": [
                        {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "matchBucket",
                                "matchBucket": []
                              }
                            }
                          }
                        },
                        {
                          "type": "not",
                          "not": {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "matchBucket",
                                "matchBucket": []
                              }
                            }
                          }
                        }
                      ],
                      "seriesArchetypeConstruction": {
                        "channelNameComponents": [
                          {
                            "type": "bucket",
                            "bucket": {}
                          },
                          {
                            "type": "bucket",
                            "bucket": {}
                          }
                        ],
                        "separator": "separator"
                      }
                    }
                  },
                  "shouldScrape": true,
                  "limits": {
                    "maxQueryRange": {
                      "unit": "HOURS",
                      "count": 1
                    }
                  },
                  "connectionStatus": {
                    "isConnected": true
                  },
                  "isArchived": true
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "displayName": "displayName",
                    "description": "description",
                    "connectionDetails": {
                      "type": "timescale",
                      "timescale": {
                        "database": "database",
                        "host": "host",
                        "port": 1,
                        "username": "username",
                        "passwordSecretRid": "passwordSecretRid"
                      }
                    },
                    "requiredTagNames": ["requiredTagNames"],
                    "availableTagValues": {
                      "availableTagValues": ["availableTagValues"]
                    },
                    "metadata": {
                      "metadata": "metadata"
                    },
                    "scraping": {
                      "type": "influx",
                      "influx": {
                        "filter": [
                          {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "not",
                                "not": {
                                  "type": "matchBucket",
                                  "matchBucket": []
                                }
                              }
                            }
                          },
                          {
                            "type": "not",
                            "not": {
                              "type": "not",
                              "not": {
                                "type": "not",
                                "not": {
                                  "type": "matchBucket",
                                  "matchBucket": []
                                }
                              }
                            }
                          }
                        ],
                        "seriesArchetypeConstruction": {
                          "channelNameComponents": [
                            {
                              "type": "bucket",
                              "bucket": {}
                            },
                            {
                              "type": "bucket",
                              "bucket": {}
                            }
                          ],
                          "separator": "separator"
                        }
                      }
                    },
                    "shouldScrape": true,
                    "limits": {
                      "maxQueryRange": {
                        "unit": "HOURS",
                        "count": 1
                      }
                    },
                    "connectionStatus": {
                      "isConnected": true
                    },
                    "isArchived": true
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "archive-connection",
          "method": "POST",
          "id": "archiveConnection",
          "originalEndpointId": "endpoint_Connection.archiveConnection",
          "name": "Archive Connection",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Connection:ConnectionRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/connection/v1"
              },
              {
                "type": "literal",
                "value": "/connections/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/archive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/connection/v1/connections/rid/archive",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "unarchive-connection",
          "method": "POST",
          "id": "unarchiveConnection",
          "originalEndpointId": "endpoint_Connection.unarchiveConnection",
          "name": "Unarchive Connection",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Connection:ConnectionRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/connection/v1"
              },
              {
                "type": "literal",
                "value": "/connections/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/unarchive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/connection/v1/connections/rid/unarchive",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Connection:ConnectionRid",
        "type_Connection:ScrapingConfig",
        "type_Connection:InfluxScrapingConfig",
        "type_Connection:NominalScrapingConfig",
        "type_Connection:VisualCrossingScrapingConfig",
        "type_Connection:Channel",
        "type_Connection:Unit",
        "type_Connection:VisualCrossingType",
        "type_Connection:VisualCrossingAvailableSeries",
        "type_Connection:TimestreamScrapingConfig",
        "type_Connection:PivotedTimescaleScrapingConfig",
        "type_Connection:TableName",
        "type_Connection:SchemaName",
        "type_Connection:LocationName",
        "type_Connection:TimestreamScrapingFilter",
        "type_Connection:TimescaleScrapingFilter",
        "type_Connection:TimestreamChannelNameComponent",
        "type_Connection:NominalChannelNameComponent",
        "type_Connection:ColumnName",
        "type_Connection:PivotedTimescaleChannelNameComponent",
        "type_Connection:InfluxSeriesArchetypeConstructionConfig",
        "type_Connection:Empty",
        "type_Connection:InfluxChannelNameComponent",
        "type_Connection:BucketName",
        "type_Connection:MeasurementName",
        "type_Connection:InfluxScrapingFilter",
        "type_Connection:Connection",
        "type_Connection:ConnectionDetails",
        "type_Connection:ConnectionStatus",
        "type_Connection:TimescaleConnectionDetails",
        "type_Connection:SecretName",
        "type_Connection:SecretRid",
        "type_Connection:HeaderValue",
        "type_Connection:OrgId",
        "type_Connection:Influx2ConnectionDetails",
        "type_Connection:Duration",
        "type_Connection:TemporalUnit",
        "type_Connection:LimitsConfig",
        "type_Connection:Influx1ConnectionDetails",
        "type_Connection:PasswordCredentials",
        "type_Connection:TimestreamConnectionDetails",
        "type_Connection:VisualCrossingConnectionDetails",
        "type_Connection:ConnectionPlottingConfiguration",
        "type_Connection:OrganizationRid",
        "type_Connection:CreateConnection",
        "type_Connection:UpdateConnectionRequest",
        "type_Connection:NominalDataSourceRid",
        "type_Connection:NominalConnectionDetails",
        "type_Connection:PopulateSeriesRequest"
      ],
      "subpackages": [],
      "urlSlug": "connection",
      "description": "A Connection contains the relevant metadata and information to be used as a data source for runs.\nThe Connection Service is responsible for creating, updating, and retrieving database connections.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_ConnectionBootstrapper": {
      "subpackageId": "subpackage_ConnectionBootstrapper",
      "name": "ConnectionBootstrapper",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "populate-series",
          "method": "POST",
          "id": "populateSeries",
          "originalEndpointId": "endpoint_ConnectionBootstrapper.populateSeries",
          "name": "Populate Series",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_ConnectionBootstrapper:ConnectionRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/connection/v1"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/populateSeries"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_ConnectionBootstrapper:PopulateSeriesRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/connection/v1/rid/populateSeries",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_ConnectionBootstrapper:ConnectionRid",
        "type_ConnectionBootstrapper:ScrapingConfig",
        "type_ConnectionBootstrapper:InfluxScrapingConfig",
        "type_ConnectionBootstrapper:NominalScrapingConfig",
        "type_ConnectionBootstrapper:VisualCrossingScrapingConfig",
        "type_ConnectionBootstrapper:Channel",
        "type_ConnectionBootstrapper:Unit",
        "type_ConnectionBootstrapper:VisualCrossingType",
        "type_ConnectionBootstrapper:VisualCrossingAvailableSeries",
        "type_ConnectionBootstrapper:TimestreamScrapingConfig",
        "type_ConnectionBootstrapper:PivotedTimescaleScrapingConfig",
        "type_ConnectionBootstrapper:TableName",
        "type_ConnectionBootstrapper:SchemaName",
        "type_ConnectionBootstrapper:LocationName",
        "type_ConnectionBootstrapper:TimestreamScrapingFilter",
        "type_ConnectionBootstrapper:TimescaleScrapingFilter",
        "type_ConnectionBootstrapper:TimestreamChannelNameComponent",
        "type_ConnectionBootstrapper:NominalChannelNameComponent",
        "type_ConnectionBootstrapper:ColumnName",
        "type_ConnectionBootstrapper:PivotedTimescaleChannelNameComponent",
        "type_ConnectionBootstrapper:InfluxSeriesArchetypeConstructionConfig",
        "type_ConnectionBootstrapper:Empty",
        "type_ConnectionBootstrapper:InfluxChannelNameComponent",
        "type_ConnectionBootstrapper:BucketName",
        "type_ConnectionBootstrapper:MeasurementName",
        "type_ConnectionBootstrapper:InfluxScrapingFilter",
        "type_ConnectionBootstrapper:Connection",
        "type_ConnectionBootstrapper:ConnectionDetails",
        "type_ConnectionBootstrapper:ConnectionStatus",
        "type_ConnectionBootstrapper:TimescaleConnectionDetails",
        "type_ConnectionBootstrapper:SecretName",
        "type_ConnectionBootstrapper:SecretRid",
        "type_ConnectionBootstrapper:HeaderValue",
        "type_ConnectionBootstrapper:OrgId",
        "type_ConnectionBootstrapper:Influx2ConnectionDetails",
        "type_ConnectionBootstrapper:Duration",
        "type_ConnectionBootstrapper:TemporalUnit",
        "type_ConnectionBootstrapper:LimitsConfig",
        "type_ConnectionBootstrapper:Influx1ConnectionDetails",
        "type_ConnectionBootstrapper:PasswordCredentials",
        "type_ConnectionBootstrapper:TimestreamConnectionDetails",
        "type_ConnectionBootstrapper:VisualCrossingConnectionDetails",
        "type_ConnectionBootstrapper:ConnectionPlottingConfiguration",
        "type_ConnectionBootstrapper:OrganizationRid",
        "type_ConnectionBootstrapper:CreateConnection",
        "type_ConnectionBootstrapper:UpdateConnectionRequest",
        "type_ConnectionBootstrapper:NominalDataSourceRid",
        "type_ConnectionBootstrapper:NominalConnectionDetails",
        "type_ConnectionBootstrapper:PopulateSeriesRequest"
      ],
      "subpackages": [],
      "urlSlug": "connection-bootstrapper",
      "description": "Nominal periodically scrapes connected databases (Connections) in order to maintain a database of all\nseries that can be read from that database. This service is responsible for executing the scrape, and can\nbe used manually to trigger a rescrape for any reason (for example, when updating a schema).\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_CsvSplitter": {
      "subpackageId": "subpackage_CsvSplitter",
      "name": "CsvSplitter",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "split-csv-async",
          "method": "POST",
          "id": "splitCsvAsync",
          "originalEndpointId": "endpoint_CsvSplitter.splitCsvAsync",
          "name": "Split Csv Async",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/jobs/csv-splitter/v1"
              },
              {
                "type": "literal",
                "value": "/split-csv-async"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_CsvSplitter:SplitCsvRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_CsvSplitter:SplitCsvAsyncResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/jobs/csv-splitter/v1/split-csv-async",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "datasetRid": "datasetRid"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "datasetRid": "datasetRid"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "force-split-csv-async",
          "method": "POST",
          "id": "forceSplitCsvAsync",
          "originalEndpointId": "endpoint_CsvSplitter.forceSplitCsvAsync",
          "name": "Force Split Csv Async",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/jobs/csv-splitter/v1"
              },
              {
                "type": "literal",
                "value": "/force-split-csv-async"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_CsvSplitter:SplitCsvRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_CsvSplitter:SplitCsvAsyncResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/jobs/csv-splitter/v1/force-split-csv-async",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "datasetRid": "datasetRid"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "datasetRid": "datasetRid"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_CsvSplitter:SuccessResult",
        "type_CsvSplitter:ErrorResult",
        "type_CsvSplitter:ErrorType",
        "type_CsvSplitter:SplitCsvRequest",
        "type_CsvSplitter:SplitCsvResponse",
        "type_CsvSplitter:SplitCsvAsyncResponse"
      ],
      "subpackages": [],
      "urlSlug": "csv-splitter",
      "description": "CSV Splitter is responsible for ETLing an uploaded Dataset into a format that is efficient for use by\nthe Nominal compute engine.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_DataExport": {
      "subpackageId": "subpackage_DataExport",
      "name": "DataExport",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "export-channel-data",
          "method": "POST",
          "id": "exportChannelData",
          "originalEndpointId": "endpoint_DataExport.exportChannelData",
          "name": "Export Channel Data",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/export/v1"
              },
              {
                "type": "literal",
                "value": "/export"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataExport:ExportDataRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "fileDownload"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/export/v1/export",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "format": {
                  "type": "csv",
                  "csv": {}
                },
                "startTime": {
                  "seconds": 1000000,
                  "nanos": 1000000
                },
                "endTime": {
                  "seconds": 1000000,
                  "nanos": 1000000
                },
                "resolution": {
                  "type": "nanoseconds",
                  "nanoseconds": 1000000
                },
                "channels": {
                  "type": "timeDomain",
                  "timeDomain": {
                    "outputTimestampFormat": {
                      "type": "iso8601",
                      "iso8601": {}
                    },
                    "mergeTimestampStrategy": {
                      "type": "none",
                      "none": {}
                    },
                    "channels": [
                      {
                        "columnName": "columnName",
                        "computeNode": {
                          "type": "raw",
                          "raw": {
                            "name": "name"
                          }
                        }
                      },
                      {
                        "columnName": "columnName",
                        "computeNode": {
                          "type": "raw",
                          "raw": {
                            "name": "name"
                          }
                        }
                      }
                    ]
                  }
                },
                "context": {
                  "variables": {
                    "variables": {
                      "type": "double",
                      "double": 1.1
                    }
                  },
                  "functionVariables": {
                    "functionVariables": {
                      "variables": {
                        "variables": {
                          "type": "double",
                          "double": 1.1
                        }
                      },
                      "subFunctionVariables": {
                        "subFunctionVariables": {
                          "variables": {
                            "variables": {
                              "type": "double",
                              "double": 1.1
                            }
                          },
                          "subFunctionVariables": {
                            "subFunctionVariables": {
                              "variables": {
                                "variables": {
                                  "type": "double",
                                  "double": 1.1
                                }
                              },
                              "subFunctionVariables": {
                                "subFunctionVariables": {
                                  "variables": {},
                                  "subFunctionVariables": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "format": {
                    "type": "csv",
                    "csv": {}
                  },
                  "startTime": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "endTime": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "resolution": {
                    "type": "nanoseconds",
                    "nanoseconds": 1000000
                  },
                  "channels": {
                    "type": "timeDomain",
                    "timeDomain": {
                      "outputTimestampFormat": {
                        "type": "iso8601",
                        "iso8601": {}
                      },
                      "mergeTimestampStrategy": {
                        "type": "none",
                        "none": {}
                      },
                      "channels": [
                        {
                          "columnName": "columnName",
                          "computeNode": {
                            "type": "raw",
                            "raw": {
                              "name": "name"
                            }
                          }
                        },
                        {
                          "columnName": "columnName",
                          "computeNode": {
                            "type": "raw",
                            "raw": {
                              "name": "name"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "context": {
                    "variables": {
                      "variables": {
                        "type": "double",
                        "double": 1.1
                      }
                    },
                    "functionVariables": {
                      "functionVariables": {
                        "variables": {
                          "variables": {
                            "type": "double",
                            "double": 1.1
                          }
                        },
                        "subFunctionVariables": {
                          "subFunctionVariables": {
                            "variables": {
                              "variables": {
                                "type": "double",
                                "double": 1.1
                              }
                            },
                            "subFunctionVariables": {
                              "subFunctionVariables": {
                                "variables": {
                                  "variables": {
                                    "type": "double",
                                    "double": 1.1
                                  }
                                },
                                "subFunctionVariables": {
                                  "subFunctionVariables": {
                                    "variables": {},
                                    "subFunctionVariables": {}
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "filename",
                "value": "<bytes>"
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_DataExport:CompressionFormat",
        "type_DataExport:Csv",
        "type_DataExport:ExportFormat",
        "type_DataExport:UndecimatedResolution",
        "type_DataExport:ResolutionOption",
        "type_DataExport:Iso8601TimestampFormat",
        "type_DataExport:RelativeTimestampFormat",
        "type_DataExport:TimestampFormat",
        "type_DataExport:NoneStrategy",
        "type_DataExport:AllTimestampsForwardFillStrategy",
        "type_DataExport:MergeTimestampStrategy",
        "type_DataExport:TimeDomainChannel",
        "type_DataExport:ExportTimeDomainChannels",
        "type_DataExport:ExportChannels",
        "type_DataExport:ExportDataRequest"
      ],
      "subpackages": [],
      "urlSlug": "data-export",
      "description": "Provides functionality for exporting data from Scout.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_DataReview": {
      "subpackageId": "subpackage_DataReview",
      "name": "DataReview",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-initiate",
          "method": "POST",
          "id": "batchInitiate",
          "originalEndpointId": "endpoint_DataReview.batchInitiate",
          "name": "Batch Initiate",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/batch-initiate"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:BatchInitiateDataReviewRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:BatchInitiateDataReviewResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/batch-initiate",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "requests": [
                  {
                    "runRid": "runRid",
                    "checklistRid": "checklistRid"
                  },
                  {
                    "runRid": "runRid",
                    "checklistRid": "checklistRid"
                  }
                ],
                "notificationConfigurations": [
                  {
                    "integrationRid": "integrationRid"
                  },
                  {
                    "integrationRid": "integrationRid"
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rids": ["rids", "rids"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "requests": [
                    {
                      "runRid": "runRid",
                      "checklistRid": "checklistRid"
                    },
                    {
                      "runRid": "runRid",
                      "checklistRid": "checklistRid"
                    }
                  ],
                  "notificationConfigurations": [
                    {
                      "integrationRid": "integrationRid"
                    },
                    {
                      "integrationRid": "integrationRid"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rids": ["rids", "rids"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "rerun-failed-automatic-checks",
          "method": "POST",
          "id": "rerunFailedAutomaticChecks",
          "originalEndpointId": "endpoint_DataReview.rerunFailedAutomaticChecks",
          "name": "Rerun Failed Automatic Checks",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/rerun-failed-automatic-checks"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:RerunFailedAutomaticChecksRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/rerun-failed-automatic-checks",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "dataReviewRid": "dataReviewRid"
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "dataReviewRid": "dataReviewRid"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "find-data-reviews",
          "method": "POST",
          "id": "findDataReviews",
          "originalEndpointId": "endpoint_DataReview.findDataReviews",
          "name": "Find Data Reviews",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/search"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:FindDataReviewsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:DataReviewPage"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/search",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "runRids": ["runRids"],
                "checklistRefs": [
                  {
                    "rid": "rid"
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "dataReviews": [
                  {
                    "rid": "rid",
                    "runRid": "runRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "createdBy": "createdBy",
                    "checklist": {
                      "checklist": {
                        "rid": "rid",
                        "commit": "commit"
                      },
                      "dataReviewRid": "dataReviewRid",
                      "checks": [
                        {
                          "type": "automaticCheck",
                          "automaticCheck": {
                            "rid": "rid",
                            "checkRid": "checkRid",
                            "checkImplementationIndex": 1,
                            "dataReviewRid": "dataReviewRid",
                            "state": {
                              "type": "pendingExecution",
                              "pendingExecution": {
                                "jobRid": "jobRid"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "archived": true
                  },
                  {
                    "rid": "rid",
                    "runRid": "runRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "createdBy": "createdBy",
                    "checklist": {
                      "checklist": {
                        "rid": "rid",
                        "commit": "commit"
                      },
                      "dataReviewRid": "dataReviewRid",
                      "checks": [
                        {
                          "type": "automaticCheck",
                          "automaticCheck": {
                            "rid": "rid",
                            "checkRid": "checkRid",
                            "checkImplementationIndex": 1,
                            "dataReviewRid": "dataReviewRid",
                            "state": {
                              "type": "pendingExecution",
                              "pendingExecution": {
                                "jobRid": "jobRid"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "archived": true
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "runRids": ["runRids"],
                  "checklistRefs": [
                    {
                      "rid": "rid"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "dataReviews": [
                    {
                      "rid": "rid",
                      "runRid": "runRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "createdBy": "createdBy",
                      "checklist": {
                        "checklist": {
                          "rid": "rid",
                          "commit": "commit"
                        },
                        "dataReviewRid": "dataReviewRid",
                        "checks": [
                          {
                            "type": "automaticCheck",
                            "automaticCheck": {
                              "rid": "rid",
                              "checkRid": "checkRid",
                              "checkImplementationIndex": 1,
                              "dataReviewRid": "dataReviewRid",
                              "state": {
                                "type": "pendingExecution",
                                "pendingExecution": {
                                  "jobRid": "jobRid"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "archived": true
                    },
                    {
                      "rid": "rid",
                      "runRid": "runRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "createdBy": "createdBy",
                      "checklist": {
                        "checklist": {
                          "rid": "rid",
                          "commit": "commit"
                        },
                        "dataReviewRid": "dataReviewRid",
                        "checks": [
                          {
                            "type": "automaticCheck",
                            "automaticCheck": {
                              "rid": "rid",
                              "checkRid": "checkRid",
                              "checkImplementationIndex": 1,
                              "dataReviewRid": "dataReviewRid",
                              "state": {
                                "type": "pendingExecution",
                                "pendingExecution": {
                                  "jobRid": "jobRid"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "archived": true
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get",
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_DataReview.get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "dataReviewRid",
                "type": {
                  "type": "id",
                  "value": "type_DataReview:DataReviewRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "dataReviewRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:DataReview"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/dataReviewRid",
              "pathParameters": {
                "dataReviewRid": "dataReviewRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "runRid": "runRid",
                "createdAt": "2024-01-15T09:30:00Z",
                "createdBy": "createdBy",
                "checklist": {
                  "checklist": {
                    "rid": "rid",
                    "commit": "commit"
                  },
                  "dataReviewRid": "dataReviewRid",
                  "checks": [
                    {
                      "type": "automaticCheck",
                      "automaticCheck": {
                        "rid": "rid",
                        "checkRid": "checkRid",
                        "checkImplementationIndex": 1,
                        "dataReviewRid": "dataReviewRid",
                        "state": {
                          "type": "pendingExecution",
                          "pendingExecution": {
                            "jobRid": "jobRid"
                          }
                        }
                      }
                    }
                  ]
                },
                "archived": true
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "runRid": "runRid",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "createdBy": "createdBy",
                  "checklist": {
                    "checklist": {
                      "rid": "rid",
                      "commit": "commit"
                    },
                    "dataReviewRid": "dataReviewRid",
                    "checks": [
                      {
                        "type": "automaticCheck",
                        "automaticCheck": {
                          "rid": "rid",
                          "checkRid": "checkRid",
                          "checkImplementationIndex": 1,
                          "dataReviewRid": "dataReviewRid",
                          "state": {
                            "type": "pendingExecution",
                            "pendingExecution": {
                              "jobRid": "jobRid"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "archived": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-check-alert",
          "method": "GET",
          "id": "getCheckAlert",
          "originalEndpointId": "endpoint_DataReview.getCheckAlert",
          "name": "Get Check Alert",
          "path": {
            "pathParameters": [
              {
                "key": "checkAlertRid",
                "type": {
                  "type": "id",
                  "value": "type_DataReview:CheckAlertRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/check-alerts/"
              },
              {
                "type": "pathParameter",
                "value": "checkAlertRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:CheckAlert"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/check-alerts/checkAlertRid",
              "pathParameters": {
                "checkAlertRid": "checkAlertRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "checkRid": "checkRid",
                "implementationIndex": 1,
                "dataReviewRid": "dataReviewRid",
                "checkEvaluationRid": "checkEvaluationRid",
                "name": "name",
                "autogeneratedCheckTitle": "autogeneratedCheckTitle",
                "autogeneratedCheckDescription": "autogeneratedCheckDescription",
                "assigneeRids": ["assigneeRids"],
                "start": {
                  "seconds": 1000000,
                  "nanos": 1000000,
                  "picos": 1
                },
                "end": {
                  "seconds": 1000000,
                  "nanos": 1000000,
                  "picos": 1
                },
                "state": {
                  "type": "pendingReview",
                  "pendingReview": {}
                },
                "priority": "P0",
                "chart": {
                  "rid": "rid",
                  "version": 1
                },
                "notes": "notes",
                "notebook": "notebook"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "checkRid": "checkRid",
                  "implementationIndex": 1,
                  "dataReviewRid": "dataReviewRid",
                  "checkEvaluationRid": "checkEvaluationRid",
                  "name": "name",
                  "autogeneratedCheckTitle": "autogeneratedCheckTitle",
                  "autogeneratedCheckDescription": "autogeneratedCheckDescription",
                  "assigneeRids": ["assigneeRids"],
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "state": {
                    "type": "pendingReview",
                    "pendingReview": {}
                  },
                  "priority": "P0",
                  "chart": {
                    "rid": "rid",
                    "version": 1
                  },
                  "notes": "notes",
                  "notebook": "notebook"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-check-alerts-for-data-review",
          "method": "GET",
          "id": "getCheckAlertsForDataReview",
          "originalEndpointId": "endpoint_DataReview.getCheckAlertsForDataReview",
          "name": "Get Check Alerts For Data Review",
          "path": {
            "pathParameters": [
              {
                "key": "dataReviewRid",
                "type": {
                  "type": "id",
                  "value": "type_DataReview:DataReviewRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "dataReviewRid"
              },
              {
                "type": "literal",
                "value": "/check-alerts"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_DataReview:CheckAlert"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/dataReviewRid/check-alerts",
              "pathParameters": {
                "dataReviewRid": "dataReviewRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "checkRid": "checkRid",
                  "implementationIndex": 1,
                  "dataReviewRid": "dataReviewRid",
                  "checkEvaluationRid": "checkEvaluationRid",
                  "name": "name",
                  "autogeneratedCheckTitle": "autogeneratedCheckTitle",
                  "autogeneratedCheckDescription": "autogeneratedCheckDescription",
                  "assigneeRids": ["assigneeRids"],
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "state": {
                    "type": "pendingReview",
                    "pendingReview": {}
                  },
                  "priority": "P0",
                  "chart": {
                    "rid": "rid",
                    "version": 1
                  },
                  "notes": "notes",
                  "notebook": "notebook"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "checkRid": "checkRid",
                    "implementationIndex": 1,
                    "dataReviewRid": "dataReviewRid",
                    "checkEvaluationRid": "checkEvaluationRid",
                    "name": "name",
                    "autogeneratedCheckTitle": "autogeneratedCheckTitle",
                    "autogeneratedCheckDescription": "autogeneratedCheckDescription",
                    "assigneeRids": ["assigneeRids"],
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "state": {
                      "type": "pendingReview",
                      "pendingReview": {}
                    },
                    "priority": "P0",
                    "chart": {
                      "rid": "rid",
                      "version": 1
                    },
                    "notes": "notes",
                    "notebook": "notebook"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-check-alerts-histogram",
          "method": "POST",
          "id": "getCheckAlertsHistogram",
          "originalEndpointId": "endpoint_DataReview.getCheckAlertsHistogram",
          "name": "Get Check Alerts Histogram",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/check-alerts/histogram"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:CheckAlertsHistogramRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:CheckAlertsHistogramResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/check-alerts/histogram",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "distributionVariable": {
                  "type": "startTime",
                  "startTime": {}
                },
                "startTimeAfter": {
                  "seconds": 1000000,
                  "nanos": 1000000
                },
                "startTimeBefore": {
                  "seconds": 1000000,
                  "nanos": 1000000
                },
                "runRids": ["runRids"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "buckets": {
                  "type": "unstacked",
                  "unstacked": {
                    "buckets": [
                      {
                        "startInclusive": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "endExclusive": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "count": 1
                      },
                      {
                        "startInclusive": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "endExclusive": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "count": 1
                      }
                    ]
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "distributionVariable": {
                    "type": "startTime",
                    "startTime": {}
                  },
                  "startTimeAfter": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "startTimeBefore": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "runRids": ["runRids"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "buckets": {
                    "type": "unstacked",
                    "unstacked": {
                      "buckets": [
                        {
                          "startInclusive": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "endExclusive": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "count": 1
                        },
                        {
                          "startInclusive": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "endExclusive": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "count": 1
                        }
                      ]
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-check-alerts",
          "method": "POST",
          "id": "searchCheckAlerts",
          "originalEndpointId": "endpoint_DataReview.searchCheckAlerts",
          "name": "Search Check Alerts",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/check-alerts"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:SearchCheckAlertsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:SearchCheckAlertsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/check-alerts",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "runRids": ["runRids"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "nextPageToken": "nextPageToken",
                "checkAlerts": [
                  {
                    "rid": "rid",
                    "checkRid": "checkRid",
                    "implementationIndex": 1,
                    "dataReviewRid": "dataReviewRid",
                    "checkEvaluationRid": "checkEvaluationRid",
                    "name": "name",
                    "autogeneratedCheckTitle": "autogeneratedCheckTitle",
                    "autogeneratedCheckDescription": "autogeneratedCheckDescription",
                    "assigneeRids": ["assigneeRids"],
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "state": {
                      "type": "pendingReview",
                      "pendingReview": {}
                    },
                    "priority": "P0",
                    "chart": {
                      "rid": "rid",
                      "version": 1
                    },
                    "notes": "notes",
                    "notebook": "notebook"
                  },
                  {
                    "rid": "rid",
                    "checkRid": "checkRid",
                    "implementationIndex": 1,
                    "dataReviewRid": "dataReviewRid",
                    "checkEvaluationRid": "checkEvaluationRid",
                    "name": "name",
                    "autogeneratedCheckTitle": "autogeneratedCheckTitle",
                    "autogeneratedCheckDescription": "autogeneratedCheckDescription",
                    "assigneeRids": ["assigneeRids"],
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "state": {
                      "type": "pendingReview",
                      "pendingReview": {}
                    },
                    "priority": "P0",
                    "chart": {
                      "rid": "rid",
                      "version": 1
                    },
                    "notes": "notes",
                    "notebook": "notebook"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "runRids": ["runRids"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "nextPageToken": "nextPageToken",
                  "checkAlerts": [
                    {
                      "rid": "rid",
                      "checkRid": "checkRid",
                      "implementationIndex": 1,
                      "dataReviewRid": "dataReviewRid",
                      "checkEvaluationRid": "checkEvaluationRid",
                      "name": "name",
                      "autogeneratedCheckTitle": "autogeneratedCheckTitle",
                      "autogeneratedCheckDescription": "autogeneratedCheckDescription",
                      "assigneeRids": ["assigneeRids"],
                      "start": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "end": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "state": {
                        "type": "pendingReview",
                        "pendingReview": {}
                      },
                      "priority": "P0",
                      "chart": {
                        "rid": "rid",
                        "version": 1
                      },
                      "notes": "notes",
                      "notebook": "notebook"
                    },
                    {
                      "rid": "rid",
                      "checkRid": "checkRid",
                      "implementationIndex": 1,
                      "dataReviewRid": "dataReviewRid",
                      "checkEvaluationRid": "checkEvaluationRid",
                      "name": "name",
                      "autogeneratedCheckTitle": "autogeneratedCheckTitle",
                      "autogeneratedCheckDescription": "autogeneratedCheckDescription",
                      "assigneeRids": ["assigneeRids"],
                      "start": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "end": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "state": {
                        "type": "pendingReview",
                        "pendingReview": {}
                      },
                      "priority": "P0",
                      "chart": {
                        "rid": "rid",
                        "version": 1
                      },
                      "notes": "notes",
                      "notebook": "notebook"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-check-alert-action-log",
          "method": "GET",
          "id": "getCheckAlertActionLog",
          "originalEndpointId": "endpoint_DataReview.getCheckAlertActionLog",
          "name": "Get Check Alert Action Log",
          "path": {
            "pathParameters": [
              {
                "key": "checkAlertRid",
                "type": {
                  "type": "id",
                  "value": "type_DataReview:CheckAlertRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/check-alerts/"
              },
              {
                "type": "pathParameter",
                "value": "checkAlertRid"
              },
              {
                "type": "literal",
                "value": "/action-log"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:CheckAlertActionLog"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/check-alerts/checkAlertRid/action-log",
              "pathParameters": {
                "checkAlertRid": "checkAlertRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "entries": [
                  {
                    "performedBy": "performedBy",
                    "action": {
                      "type": "closeWithIgnore",
                      "closeWithIgnore": {
                        "comment": "comment",
                        "strategy": {
                          "type": "closeAllLinkedAlerts",
                          "closeAllLinkedAlerts": {}
                        }
                      }
                    },
                    "timestamp": "2024-01-15T09:30:00Z"
                  },
                  {
                    "performedBy": "performedBy",
                    "action": {
                      "type": "closeWithIgnore",
                      "closeWithIgnore": {
                        "comment": "comment",
                        "strategy": {
                          "type": "closeAllLinkedAlerts",
                          "closeAllLinkedAlerts": {}
                        }
                      }
                    },
                    "timestamp": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "entries": [
                    {
                      "performedBy": "performedBy",
                      "action": {
                        "type": "closeWithIgnore",
                        "closeWithIgnore": {
                          "comment": "comment",
                          "strategy": {
                            "type": "closeAllLinkedAlerts",
                            "closeAllLinkedAlerts": {}
                          }
                        }
                      },
                      "timestamp": "2024-01-15T09:30:00Z"
                    },
                    {
                      "performedBy": "performedBy",
                      "action": {
                        "type": "closeWithIgnore",
                        "closeWithIgnore": {
                          "comment": "comment",
                          "strategy": {
                            "type": "closeAllLinkedAlerts",
                            "closeAllLinkedAlerts": {}
                          }
                        }
                      },
                      "timestamp": "2024-01-15T09:30:00Z"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-check-alert-counts-for-notebooks",
          "method": "POST",
          "id": "getCheckAlertCountsForNotebooks",
          "originalEndpointId": "endpoint_DataReview.getCheckAlertCountsForNotebooks",
          "name": "Get Check Alert Counts For Notebooks",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/get-check-alert-counts-for-notebooks"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:NotebookRid"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_common:NotebookRid"
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/get-check-alert-counts-for-notebooks",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": ["string"],
              "responseStatusCode": 200,
              "responseBody": {
                "string": 1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": ["string"]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "string": 1
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-check-alert-status-for-notebooks",
          "method": "POST",
          "id": "getCheckAlertStatusForNotebooks",
          "originalEndpointId": "endpoint_DataReview.getCheckAlertStatusForNotebooks",
          "name": "Get Check Alert Status For Notebooks",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/get-check-alert-status-for-notebooks"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:NotebookRid"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_common:NotebookRid"
                },
                "valueType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "type_DataReview:CheckAlertStatus"
                  }
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/get-check-alert-status-for-notebooks",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": ["string"],
              "responseStatusCode": 200,
              "responseBody": {
                "string": "PENDING_REVIEW"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": ["string"]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "string": "PENDING_REVIEW"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "perform-check-alert-action",
          "method": "PUT",
          "id": "performCheckAlertAction",
          "originalEndpointId": "endpoint_DataReview.performCheckAlertAction",
          "name": "Perform Check Alert Action",
          "path": {
            "pathParameters": [
              {
                "key": "checkAlertRid",
                "type": {
                  "type": "id",
                  "value": "type_DataReview:CheckAlertRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/check-alerts/"
              },
              {
                "type": "pathParameter",
                "value": "checkAlertRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:CheckAlertAction"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:CheckAlert"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/check-alerts/checkAlertRid",
              "pathParameters": {
                "checkAlertRid": "checkAlertRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "type": "closeWithIgnore",
                "closeWithIgnore": {
                  "comment": "comment"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "checkRid": "checkRid",
                "implementationIndex": 1,
                "dataReviewRid": "dataReviewRid",
                "checkEvaluationRid": "checkEvaluationRid",
                "name": "name",
                "autogeneratedCheckTitle": "autogeneratedCheckTitle",
                "autogeneratedCheckDescription": "autogeneratedCheckDescription",
                "assigneeRids": ["assigneeRids"],
                "start": {
                  "seconds": 1000000,
                  "nanos": 1000000,
                  "picos": 1
                },
                "end": {
                  "seconds": 1000000,
                  "nanos": 1000000,
                  "picos": 1
                },
                "state": {
                  "type": "pendingReview",
                  "pendingReview": {}
                },
                "priority": "P0",
                "chart": {
                  "rid": "rid",
                  "version": 1
                },
                "notes": "notes",
                "notebook": "notebook"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "type": "closeWithIgnore",
                  "closeWithIgnore": {
                    "comment": "comment"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "checkRid": "checkRid",
                  "implementationIndex": 1,
                  "dataReviewRid": "dataReviewRid",
                  "checkEvaluationRid": "checkEvaluationRid",
                  "name": "name",
                  "autogeneratedCheckTitle": "autogeneratedCheckTitle",
                  "autogeneratedCheckDescription": "autogeneratedCheckDescription",
                  "assigneeRids": ["assigneeRids"],
                  "start": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "end": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "state": {
                    "type": "pendingReview",
                    "pendingReview": {}
                  },
                  "priority": "P0",
                  "chart": {
                    "rid": "rid",
                    "version": 1
                  },
                  "notes": "notes",
                  "notebook": "notebook"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-perform-check-alert-action",
          "method": "POST",
          "id": "batchPerformCheckAlertAction",
          "originalEndpointId": "endpoint_DataReview.batchPerformCheckAlertAction",
          "name": "Batch Perform Check Alert Action",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/check-alerts/batch-perform-action"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:BatchCheckAlertActionRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:BatchCheckAlertActionResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/check-alerts/batch-perform-action",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "checkAlertAction": {
                  "type": "closeWithIgnore",
                  "closeWithIgnore": {
                    "comment": "comment"
                  }
                },
                "checkAlertRids": ["checkAlertRids"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "checkAlerts": [
                  {
                    "rid": "rid",
                    "checkRid": "checkRid",
                    "implementationIndex": 1,
                    "dataReviewRid": "dataReviewRid",
                    "checkEvaluationRid": "checkEvaluationRid",
                    "name": "name",
                    "autogeneratedCheckTitle": "autogeneratedCheckTitle",
                    "autogeneratedCheckDescription": "autogeneratedCheckDescription",
                    "assigneeRids": ["assigneeRids"],
                    "start": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "end": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "state": {
                      "type": "pendingReview",
                      "pendingReview": {}
                    },
                    "priority": "P0",
                    "chart": {
                      "rid": "rid",
                      "version": 1
                    },
                    "notes": "notes",
                    "notebook": "notebook"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "checkAlertAction": {
                    "type": "closeWithIgnore",
                    "closeWithIgnore": {
                      "comment": "comment"
                    }
                  },
                  "checkAlertRids": ["checkAlertRids"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "checkAlerts": [
                    {
                      "rid": "rid",
                      "checkRid": "checkRid",
                      "implementationIndex": 1,
                      "dataReviewRid": "dataReviewRid",
                      "checkEvaluationRid": "checkEvaluationRid",
                      "name": "name",
                      "autogeneratedCheckTitle": "autogeneratedCheckTitle",
                      "autogeneratedCheckDescription": "autogeneratedCheckDescription",
                      "assigneeRids": ["assigneeRids"],
                      "start": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "end": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "state": {
                        "type": "pendingReview",
                        "pendingReview": {}
                      },
                      "priority": "P0",
                      "chart": {
                        "rid": "rid",
                        "version": 1
                      },
                      "notes": "notes",
                      "notebook": "notebook"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-perform-automatic-check-evaluation-review-action",
          "method": "POST",
          "id": "batchPerformAutomaticCheckEvaluationReviewAction",
          "originalEndpointId": "endpoint_DataReview.batchPerformAutomaticCheckEvaluationReviewAction",
          "name": "Batch Perform Automatic Check Evaluation Review Action",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/automatic-check-evaluation/batch-perform-action"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:BatchAutomaticCheckEvaluationActionRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:BatchAutomaticCheckEvaluationActionResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/automatic-check-evaluation/batch-perform-action",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "checkEvaluationAction": {
                  "type": "closeWithIgnore",
                  "closeWithIgnore": {
                    "comment": "comment"
                  }
                },
                "checkEvaluationRids": ["checkEvaluationRids"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "checkEvaluations": [
                  {
                    "rid": "rid",
                    "checkRid": "checkRid",
                    "checkImplementationIndex": 1,
                    "dataReviewRid": "dataReviewRid",
                    "state": {
                      "type": "pendingExecution",
                      "pendingExecution": {
                        "jobRid": "jobRid"
                      }
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "checkEvaluationAction": {
                    "type": "closeWithIgnore",
                    "closeWithIgnore": {
                      "comment": "comment"
                    }
                  },
                  "checkEvaluationRids": ["checkEvaluationRids"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "checkEvaluations": [
                    {
                      "rid": "rid",
                      "checkRid": "checkRid",
                      "checkImplementationIndex": 1,
                      "dataReviewRid": "dataReviewRid",
                      "state": {
                        "type": "pendingExecution",
                        "pendingExecution": {
                          "jobRid": "jobRid"
                        }
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-automatic-check-evaluation-action-log",
          "method": "GET",
          "id": "getAutomaticCheckEvaluationActionLog",
          "originalEndpointId": "endpoint_DataReview.getAutomaticCheckEvaluationActionLog",
          "name": "Get Automatic Check Evaluation Action Log",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_DataReview:AutomaticCheckEvaluationRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/automatic-check-evaluation/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/action-log"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:AutomaticCheckEvaluationActionLog"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/automatic-check-evaluation/rid/action-log",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "entries": [
                  {
                    "action": {
                      "type": "executionFinished",
                      "executionFinished": {
                        "jobRid": "jobRid",
                        "status": "PASS"
                      }
                    },
                    "timestamp": "2024-01-15T09:30:00Z"
                  },
                  {
                    "action": {
                      "type": "executionFinished",
                      "executionFinished": {
                        "jobRid": "jobRid",
                        "status": "PASS"
                      }
                    },
                    "timestamp": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "entries": [
                    {
                      "action": {
                        "type": "executionFinished",
                        "executionFinished": {
                          "jobRid": "jobRid",
                          "status": "PASS"
                        }
                      },
                      "timestamp": "2024-01-15T09:30:00Z"
                    },
                    {
                      "action": {
                        "type": "executionFinished",
                        "executionFinished": {
                          "jobRid": "jobRid",
                          "status": "PASS"
                        }
                      },
                      "timestamp": "2024-01-15T09:30:00Z"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-perform-manual-check-alert-action",
          "method": "POST",
          "id": "batchPerformManualCheckAlertAction",
          "originalEndpointId": "endpoint_DataReview.batchPerformManualCheckAlertAction",
          "name": "Batch Perform Manual Check Alert Action",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/manual-check-evaluation/batch-perform-action"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:BatchManualCheckEvaluationActionRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/manual-check-evaluation/batch-perform-action",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "checkAlertAction": {
                  "type": "pass",
                  "pass": {
                    "comment": "comment"
                  }
                },
                "checkEvaluationRids": ["checkEvaluationRids"]
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "checkAlertAction": {
                    "type": "pass",
                    "pass": {
                      "comment": "comment"
                    }
                  },
                  "checkEvaluationRids": ["checkEvaluationRids"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-manual-check-evaluation-action-log",
          "method": "GET",
          "id": "getManualCheckEvaluationActionLog",
          "originalEndpointId": "endpoint_DataReview.getManualCheckEvaluationActionLog",
          "name": "Get Manual Check Evaluation Action Log",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_DataReview:ManualCheckEvaluationRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/manual-check-evaluation/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/action-log"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataReview:ManualCheckEvaluationActionLog"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/manual-check-evaluation/rid/action-log",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "entries": [
                  {
                    "performedBy": "performedBy",
                    "action": {
                      "type": "pass",
                      "pass": {
                        "comment": "comment"
                      }
                    },
                    "timestamp": "2024-01-15T09:30:00Z"
                  },
                  {
                    "performedBy": "performedBy",
                    "action": {
                      "type": "pass",
                      "pass": {
                        "comment": "comment"
                      }
                    },
                    "timestamp": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "entries": [
                    {
                      "performedBy": "performedBy",
                      "action": {
                        "type": "pass",
                        "pass": {
                          "comment": "comment"
                        }
                      },
                      "timestamp": "2024-01-15T09:30:00Z"
                    },
                    {
                      "performedBy": "performedBy",
                      "action": {
                        "type": "pass",
                        "pass": {
                          "comment": "comment"
                        }
                      },
                      "timestamp": "2024-01-15T09:30:00Z"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "archive-data-review",
          "method": "POST",
          "id": "archiveDataReview",
          "originalEndpointId": "endpoint_DataReview.archiveDataReview",
          "name": "Archive Data Review",
          "path": {
            "pathParameters": [
              {
                "key": "dataReviewRid",
                "type": {
                  "type": "id",
                  "value": "type_DataReview:DataReviewRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/data-review"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "dataReviewRid"
              },
              {
                "type": "literal",
                "value": "/archive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/data-review/dataReviewRid/archive",
              "pathParameters": {
                "dataReviewRid": "dataReviewRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": true,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": true
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_DataReview:DataReviewRid",
        "type_DataReview:CheckAlertRid",
        "type_DataReview:ManualCheckEvaluationRid",
        "type_DataReview:AutomaticCheckEvaluationRid",
        "type_DataReview:BatchInitiateDataReviewRequest",
        "type_DataReview:BatchInitiateDataReviewResponse",
        "type_DataReview:CreateDataReviewRequest",
        "type_DataReview:FindDataReviewsRequest",
        "type_DataReview:DataReviewPage",
        "type_DataReview:RerunFailedAutomaticChecksRequest",
        "type_DataReview:DataReview",
        "type_DataReview:ChecklistEvaluation",
        "type_DataReview:CheckEvaluation",
        "type_DataReview:AutomaticCheckEvaluation",
        "type_DataReview:ManualCheckEvaluation",
        "type_DataReview:AutomaticCheckEvaluationState",
        "type_DataReview:PendingExecutionState",
        "type_DataReview:FailedToExecuteState",
        "type_DataReview:PassingExecutionState",
        "type_DataReview:GeneratedAlertsState",
        "type_DataReview:TooManyAlertsState",
        "type_DataReview:ExecutingState",
        "type_DataReview:ManualCheckEvaluationState",
        "type_DataReview:PendingReviewState",
        "type_DataReview:PassState",
        "type_DataReview:ClosedWithFurtherActionState",
        "type_DataReview:BatchManualCheckEvaluationActionRequest",
        "type_DataReview:CheckAlert",
        "type_DataReview:AutomaticCheckEvaluationAction",
        "type_DataReview:AutomaticCheckExecutionFinished",
        "type_DataReview:AutomaticCheckExecutionFailedToRun",
        "type_DataReview:Status",
        "type_DataReview:ExecutionRetriggered",
        "type_DataReview:AutomaticCheckExecutionStarted",
        "type_DataReview:Pass",
        "type_DataReview:ReopenAllLinkedAlerts",
        "type_DataReview:ReopenAndDetachFromNotebook",
        "type_DataReview:ReopenAndDuplicatePreviouslyLinkedNotebook",
        "type_DataReview:ReopenStrategy",
        "type_DataReview:Reopen",
        "type_DataReview:Reassign",
        "type_DataReview:BatchCheckAlertActionRequest",
        "type_DataReview:BatchCheckAlertActionResponse",
        "type_DataReview:BatchAutomaticCheckEvaluationActionRequest",
        "type_DataReview:BatchAutomaticCheckEvaluationActionResponse",
        "type_DataReview:ManualCheckAlertAction",
        "type_DataReview:CheckAlertAction",
        "type_DataReview:AutomaticCheckEvaluationReviewAction",
        "type_DataReview:CloseAllLinkedAlerts",
        "type_DataReview:CloseAndDetachFromNotebook",
        "type_DataReview:CloseAndDuplicatePreviouslyLinkedNotebook",
        "type_DataReview:CloseStrategy",
        "type_DataReview:CloseWithIgnoreAlert",
        "type_DataReview:CloseWithFurtherAction",
        "type_DataReview:UpdateNotes",
        "type_DataReview:LinkNotebookStrategy",
        "type_DataReview:DuplicateAndLinkNotebook",
        "type_DataReview:CloseAction",
        "type_DataReview:CloseAndLinkToNotebook",
        "type_DataReview:ReopenAndLinkToNotebook",
        "type_DataReview:LinkNotebook",
        "type_DataReview:UnlinkNotebook",
        "type_DataReview:CheckAlertActionLog",
        "type_DataReview:CheckAlertActionLogEntry",
        "type_DataReview:AutomaticCheckEvaluationReviewActionLog",
        "type_DataReview:AutomaticCheckEvaluationReviewActionLogEntry",
        "type_DataReview:AutomaticCheckEvaluationActionLog",
        "type_DataReview:AutomaticCheckEvaluationActionLogEntry",
        "type_DataReview:ManualCheckEvaluationActionLog",
        "type_DataReview:ManualCheckEvaluationActionLogEntry",
        "type_DataReview:SearchCheckAlertsSortOptions",
        "type_DataReview:SearchCheckAlertsSortField",
        "type_DataReview:CheckAlertStatus",
        "type_DataReview:CheckAlertsHistogramRequest",
        "type_DataReview:HistogramDistributionVariable",
        "type_DataReview:HistogramSubGroupVariable",
        "type_DataReview:HistogramStartTimeVariable",
        "type_DataReview:HistogramEndTimeVariable",
        "type_DataReview:HistogramStatusVariable",
        "type_DataReview:HistogramPriorityVariable",
        "type_DataReview:CheckAlertsHistogramResponse",
        "type_DataReview:CheckAlertsHistogramBuckets",
        "type_DataReview:CheckAlertsUnstackedHistogram",
        "type_DataReview:HistogramBucket",
        "type_DataReview:CheckAlertsPriorityHistogram",
        "type_DataReview:CheckAlertsStatusHistogram",
        "type_DataReview:HistogramPriorityBucket",
        "type_DataReview:HistogramStatusBucket",
        "type_DataReview:SearchCheckAlertsRequest",
        "type_DataReview:SearchCheckAlertsResponse"
      ],
      "subpackages": [],
      "urlSlug": "data-review",
      "description": "The data review service manages the evaluation, disposition, and historical record of checks alerts.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_DataSource": {
      "subpackageId": "subpackage_DataSource",
      "name": "DataSource",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-channels",
          "method": "POST",
          "id": "searchChannels",
          "originalEndpointId": "endpoint_DataSource.searchChannels",
          "name": "Search Channels",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/v1"
              },
              {
                "type": "literal",
                "value": "/data-sources/search-channels"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataSource:SearchChannelsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataSource:SearchChannelsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/v1/data-sources/search-channels",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "fuzzySearchText": "fuzzySearchText",
                "exactMatch": ["exactMatch"],
                "dataSources": ["dataSources"],
                "previouslySelectedChannels": {
                  "previouslySelectedChannels": ["previouslySelectedChannels"]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "name": "name",
                    "dataSource": "dataSource",
                    "unit": {
                      "name": "name",
                      "symbol": "symbol"
                    },
                    "description": "description",
                    "dataType": "DOUBLE",
                    "seriesRid": {
                      "type": "seriesArchetype",
                      "seriesArchetype": "seriesRid"
                    }
                  },
                  {
                    "name": "name",
                    "dataSource": "dataSource",
                    "unit": {
                      "name": "name",
                      "symbol": "symbol"
                    },
                    "description": "description",
                    "dataType": "DOUBLE",
                    "seriesRid": {
                      "type": "seriesArchetype",
                      "seriesArchetype": "seriesRid"
                    }
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "fuzzySearchText": "fuzzySearchText",
                  "exactMatch": ["exactMatch"],
                  "dataSources": ["dataSources"],
                  "previouslySelectedChannels": {
                    "previouslySelectedChannels": ["previouslySelectedChannels"]
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "name": "name",
                      "dataSource": "dataSource",
                      "unit": {
                        "name": "name",
                        "symbol": "symbol"
                      },
                      "description": "description",
                      "dataType": "DOUBLE",
                      "seriesRid": {
                        "type": "seriesArchetype",
                        "seriesArchetype": "seriesRid"
                      }
                    },
                    {
                      "name": "name",
                      "dataSource": "dataSource",
                      "unit": {
                        "name": "name",
                        "symbol": "symbol"
                      },
                      "description": "description",
                      "dataType": "DOUBLE",
                      "seriesRid": {
                        "type": "seriesArchetype",
                        "seriesArchetype": "seriesRid"
                      }
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-filtered-channels",
          "method": "POST",
          "id": "searchFilteredChannels",
          "originalEndpointId": "endpoint_DataSource.searchFilteredChannels",
          "name": "Search Filtered Channels",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/v1"
              },
              {
                "type": "literal",
                "value": "/data-sources/search-filtered-channels"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataSource:SearchFilteredChannelsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataSource:SearchFilteredChannelsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/v1/data-sources/search-filtered-channels",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "fuzzySearchText": "fuzzySearchText",
                "exactMatch": ["exactMatch"],
                "dataSources": ["dataSources"],
                "previouslySelectedChannels": {
                  "previouslySelectedChannels": ["previouslySelectedChannels"]
                },
                "tags": {
                  "tags": {
                    "tags": "tags"
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "name": "name",
                    "dataSource": "dataSource",
                    "unit": {
                      "name": "name",
                      "symbol": "symbol"
                    },
                    "description": "description",
                    "dataType": "DOUBLE",
                    "seriesRid": {
                      "type": "seriesArchetype",
                      "seriesArchetype": "seriesRid"
                    }
                  },
                  {
                    "name": "name",
                    "dataSource": "dataSource",
                    "unit": {
                      "name": "name",
                      "symbol": "symbol"
                    },
                    "description": "description",
                    "dataType": "DOUBLE",
                    "seriesRid": {
                      "type": "seriesArchetype",
                      "seriesArchetype": "seriesRid"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "fuzzySearchText": "fuzzySearchText",
                  "exactMatch": ["exactMatch"],
                  "dataSources": ["dataSources"],
                  "previouslySelectedChannels": {
                    "previouslySelectedChannels": ["previouslySelectedChannels"]
                  },
                  "tags": {
                    "tags": {
                      "tags": "tags"
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "name": "name",
                      "dataSource": "dataSource",
                      "unit": {
                        "name": "name",
                        "symbol": "symbol"
                      },
                      "description": "description",
                      "dataType": "DOUBLE",
                      "seriesRid": {
                        "type": "seriesArchetype",
                        "seriesArchetype": "seriesRid"
                      }
                    },
                    {
                      "name": "name",
                      "dataSource": "dataSource",
                      "unit": {
                        "name": "name",
                        "symbol": "symbol"
                      },
                      "description": "description",
                      "dataType": "DOUBLE",
                      "seriesRid": {
                        "type": "seriesArchetype",
                        "seriesArchetype": "seriesRid"
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-hierarchical-channels",
          "method": "POST",
          "id": "searchHierarchicalChannels",
          "originalEndpointId": "endpoint_DataSource.searchHierarchicalChannels",
          "name": "Search Hierarchical Channels",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/v1"
              },
              {
                "type": "literal",
                "value": "/data-sources/search-hierarchical-channels"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataSource:SearchHierarchicalChannelsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataSource:SearchHierarchicalChannelsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/v1/data-sources/search-hierarchical-channels",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "parent": ["parent", "parent"],
                "dataSources": ["dataSources"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "type": "channel",
                    "channel": {
                      "name": "name",
                      "dataSource": "dataSource",
                      "unit": {
                        "name": "name",
                        "symbol": "symbol"
                      },
                      "description": "description",
                      "dataType": "DOUBLE",
                      "seriesRid": {
                        "type": "seriesArchetype",
                        "seriesArchetype": "seriesRid"
                      }
                    }
                  },
                  {
                    "type": "channel",
                    "channel": {
                      "name": "name",
                      "dataSource": "dataSource",
                      "unit": {
                        "name": "name",
                        "symbol": "symbol"
                      },
                      "description": "description",
                      "dataType": "DOUBLE",
                      "seriesRid": {
                        "type": "seriesArchetype",
                        "seriesArchetype": "seriesRid"
                      }
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "parent": ["parent", "parent"],
                  "dataSources": ["dataSources"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "type": "channel",
                      "channel": {
                        "name": "name",
                        "dataSource": "dataSource",
                        "unit": {
                          "name": "name",
                          "symbol": "symbol"
                        },
                        "description": "description",
                        "dataType": "DOUBLE",
                        "seriesRid": {
                          "type": "seriesArchetype",
                          "seriesArchetype": "seriesRid"
                        }
                      }
                    },
                    {
                      "type": "channel",
                      "channel": {
                        "name": "name",
                        "dataSource": "dataSource",
                        "unit": {
                          "name": "name",
                          "symbol": "symbol"
                        },
                        "description": "description",
                        "dataType": "DOUBLE",
                        "seriesRid": {
                          "type": "seriesArchetype",
                          "seriesArchetype": "seriesRid"
                        }
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "index-channel-prefix-tree",
          "method": "POST",
          "id": "indexChannelPrefixTree",
          "originalEndpointId": "endpoint_DataSource.indexChannelPrefixTree",
          "name": "Index Channel Prefix Tree",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/v1"
              },
              {
                "type": "literal",
                "value": "/data-sources/index-channel-prefix-tree"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataSource:IndexChannelPrefixTreeRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataSource:ChannelPrefixTree"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/v1/data-sources/index-channel-prefix-tree",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "dataSourceRid": "dataSourceRid",
                "delimiter": "delimiter"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "roots": [
                  {
                    "part": "part",
                    "children": [
                      {
                        "part": "part",
                        "children": [
                          {
                            "part": "part",
                            "children": [
                              {
                                "part": "part",
                                "children": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ],
                "delimiter": "delimiter"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "dataSourceRid": "dataSourceRid",
                  "delimiter": "delimiter"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "roots": [
                    {
                      "part": "part",
                      "children": [
                        {
                          "part": "part",
                          "children": [
                            {
                              "part": "part",
                              "children": [
                                {
                                  "part": "part",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "delimiter": "delimiter"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get-channel-prefix-trees",
          "method": "POST",
          "id": "batchGetChannelPrefixTrees",
          "originalEndpointId": "endpoint_DataSource.batchGetChannelPrefixTrees",
          "name": "Batch Get Channel Prefix Trees",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/v1"
              },
              {
                "type": "literal",
                "value": "/data-sources/batch-get-channel-prefix-tree"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataSource:BatchGetChannelPrefixTreeRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_DataSource:BatchGetChannelPrefixTreeResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/v1/data-sources/batch-get-channel-prefix-tree",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "dataSourceRids": ["dataSourceRids"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "channelPrefixTrees": {
                  "channelPrefixTrees": {
                    "roots": [
                      {
                        "part": "part",
                        "children": [
                          {
                            "part": "part",
                            "children": [
                              {
                                "part": "part",
                                "children": []
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "delimiter": "delimiter"
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "dataSourceRids": ["dataSourceRids"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "channelPrefixTrees": {
                    "channelPrefixTrees": {
                      "roots": [
                        {
                          "part": "part",
                          "children": [
                            {
                              "part": "part",
                              "children": [
                                {
                                  "part": "part",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "delimiter": "delimiter"
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_DataSource:DataSourceRid",
        "type_DataSource:DatasetRid",
        "type_DataSource:Channel",
        "type_DataSource:Unit",
        "type_DataSource:SeriesDataType",
        "type_DataSource:LogicalSeriesRid",
        "type_DataSource:SeriesArchetypeRid",
        "type_DataSource:ChannelMetadata",
        "type_DataSource:SeriesArchetypeRidOrLogicalSeriesRid",
        "type_DataSource:SearchChannelsRequest",
        "type_DataSource:SearchChannelsResponse",
        "type_DataSource:SearchFilteredChannelsRequest",
        "type_DataSource:SearchFilteredChannelsResponse",
        "type_DataSource:SearchHierarchicalChannelsRequest",
        "type_DataSource:SearchHierarchicalChannelsResponse",
        "type_DataSource:ChannelOrPrefix",
        "type_DataSource:DataSourcePrefixNode",
        "type_DataSource:ChannelPrefixTree",
        "type_DataSource:IndexChannelPrefixTreeRequest",
        "type_DataSource:ChannelPrefixTreeNode",
        "type_DataSource:BatchGetChannelPrefixTreeRequest",
        "type_DataSource:BatchGetChannelPrefixTreeResponse"
      ],
      "subpackages": [],
      "urlSlug": "data-source",
      "description": "Data sources are data input to runs, including databases, CSV, video, and streaming data. They contain channels that represent the series data.\nThe DataSource Service is responsible for indexing and searching channels across data sources.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Event": {
      "subpackageId": "subpackage_Event",
      "name": "Event",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-event",
          "method": "POST",
          "id": "createEvent",
          "originalEndpointId": "endpoint_Event.createEvent",
          "name": "Create Event",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/event/v1"
              },
              {
                "type": "literal",
                "value": "/events"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Event:CreateEvent"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Event:Event"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/event/v1/events",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "associations": ["associations"],
                "datasetRid": "datasetRid",
                "timestamp": {
                  "seconds": 1000000,
                  "nanos": 1000000
                },
                "duration": {
                  "seconds": 1000000,
                  "nanos": 1000000
                },
                "name": "name"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "timestamp": {
                  "seconds": 1000000,
                  "nanos": 1000000,
                  "picos": 1
                },
                "duration": {
                  "seconds": 1000000,
                  "nanos": 1000000,
                  "picos": 1
                },
                "name": "name",
                "datasetRid": "datasetRid",
                "type": "INFO"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "associations": ["associations"],
                  "datasetRid": "datasetRid",
                  "timestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "duration": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "name": "name"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "timestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "duration": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "name": "name",
                  "datasetRid": "datasetRid",
                  "type": "INFO"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-events",
          "method": "POST",
          "id": "getEvents",
          "originalEndpointId": "endpoint_Event.getEvents",
          "name": "Get Events",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/event/v1"
              },
              {
                "type": "literal",
                "value": "/get-events"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Event:GetEvents"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Event:Event"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/event/v1/get-events",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "uuids": ["d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"]
              },
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "timestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "duration": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "name": "name",
                  "datasetRid": "datasetRid",
                  "type": "INFO"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "uuids": ["d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                    "timestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "duration": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "name": "name",
                    "datasetRid": "datasetRid",
                    "type": "INFO"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": ["type_Event:EventType", "type_Event:GetEvents", "type_Event:Event", "type_Event:CreateEvent"],
      "subpackages": [],
      "urlSlug": "event",
      "description": "An Event is an annotated moment or time range.\nThe Event Service is responsible for creating and retrieving events for a particular data source.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Ingest": {
      "subpackageId": "subpackage_Ingest",
      "name": "Ingest",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "deprecated-trigger-ingest",
          "method": "POST",
          "id": "deprecatedTriggerIngest",
          "originalEndpointId": "endpoint_Ingest.deprecatedTriggerIngest",
          "name": "Deprecated Trigger Ingest",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/ingest/v1"
              },
              {
                "type": "literal",
                "value": "/trigger-ingest"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Ingest:DeprecatedTriggerIngest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Ingest:TriggeredIngest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/ingest/v1/trigger-ingest",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "source": {
                  "type": "s3",
                  "s3": {
                    "path": "path"
                  }
                },
                "properties": {
                  "properties": "properties"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "datasetRid": "datasetRid",
                "datasetFileId": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "asyncHandle": {
                  "rid": "rid"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "source": {
                    "type": "s3",
                    "s3": {
                      "path": "path"
                    }
                  },
                  "properties": {
                    "properties": "properties"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "datasetRid": "datasetRid",
                  "datasetFileId": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "asyncHandle": {
                    "rid": "rid"
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "trigger-ingest",
          "method": "POST",
          "id": "triggerIngest",
          "originalEndpointId": "endpoint_Ingest.triggerIngest",
          "name": "Trigger Ingest",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/ingest/v1"
              },
              {
                "type": "literal",
                "value": "/trigger-ingest-v2"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Ingest:TriggerIngest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Ingest:TriggeredIngest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/ingest/v1/trigger-ingest-v2",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "source": {
                  "type": "s3",
                  "s3": {
                    "path": "path"
                  }
                },
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "datasetRid": "datasetRid",
                "datasetFileId": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "asyncHandle": {
                  "rid": "rid"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "source": {
                    "type": "s3",
                    "s3": {
                      "path": "path"
                    }
                  },
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "datasetRid": "datasetRid",
                  "datasetFileId": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "asyncHandle": {
                    "rid": "rid"
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "trigger-file-ingest",
          "method": "POST",
          "id": "triggerFileIngest",
          "originalEndpointId": "endpoint_Ingest.triggerFileIngest",
          "name": "Trigger File Ingest",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/ingest/v1"
              },
              {
                "type": "literal",
                "value": "/trigger-file-ingest"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Ingest:TriggerFileIngest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Ingest:TriggeredIngest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/ingest/v1/trigger-file-ingest",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "source": {
                  "type": "s3",
                  "s3": {
                    "path": "path"
                  }
                },
                "sourceMetadata": {},
                "destination": {
                  "type": "newDataset",
                  "newDataset": {
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"]
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "datasetRid": "datasetRid",
                "datasetFileId": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                "asyncHandle": {
                  "rid": "rid"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "source": {
                    "type": "s3",
                    "s3": {
                      "path": "path"
                    }
                  },
                  "sourceMetadata": {},
                  "destination": {
                    "type": "newDataset",
                    "newDataset": {
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"]
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "datasetRid": "datasetRid",
                  "datasetFileId": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                  "asyncHandle": {
                    "rid": "rid"
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "ingest-run",
          "method": "POST",
          "id": "ingestRun",
          "originalEndpointId": "endpoint_Ingest.ingestRun",
          "name": "Ingest Run",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/ingest/v1"
              },
              {
                "type": "literal",
                "value": "/ingest-run"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Ingest:IngestRunRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Ingest:IngestRunResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/ingest/v1/ingest-run",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "title": "title",
                "description": "description",
                "startTime": {
                  "secondsSinceEpoch": 1000000
                },
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "dataSources": {
                  "dataSources": {
                    "dataSource": {
                      "type": "existingDataSource",
                      "existingDataSource": "dataSource"
                    }
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "runRid": "runRid"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "title",
                  "description": "description",
                  "startTime": {
                    "secondsSinceEpoch": 1000000
                  },
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "dataSources": {
                    "dataSources": {
                      "dataSource": {
                        "type": "existingDataSource",
                        "existingDataSource": "dataSource"
                      }
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "runRid": "runRid"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "ingest-video",
          "method": "POST",
          "id": "ingestVideo",
          "originalEndpointId": "endpoint_Ingest.ingestVideo",
          "name": "Ingest Video",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/ingest/v1"
              },
              {
                "type": "literal",
                "value": "/ingest-video"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Ingest:IngestVideoRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Ingest:IngestVideoResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/ingest/v1/ingest-video",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "sources": [
                  {
                    "type": "s3",
                    "s3": {
                      "path": "path"
                    }
                  },
                  {
                    "type": "s3",
                    "s3": {
                      "path": "path"
                    }
                  }
                ],
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "timestamps": {
                  "type": "noManifest",
                  "noManifest": {
                    "startingTimestamp": {
                      "secondsSinceEpoch": 1000000
                    }
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "videoRid": "videoRid",
                "asyncHandle": {
                  "rid": "rid"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "sources": [
                    {
                      "type": "s3",
                      "s3": {
                        "path": "path"
                      }
                    },
                    {
                      "type": "s3",
                      "s3": {
                        "path": "path"
                      }
                    }
                  ],
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "timestamps": {
                    "type": "noManifest",
                    "noManifest": {
                      "startingTimestamp": {
                        "secondsSinceEpoch": 1000000
                      }
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "videoRid": "videoRid",
                  "asyncHandle": {
                    "rid": "rid"
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "ingest-mcap",
          "method": "POST",
          "id": "ingestMcap",
          "originalEndpointId": "endpoint_Ingest.ingestMcap",
          "name": "Ingest Mcap",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/ingest/v1"
              },
              {
                "type": "literal",
                "value": "/ingest-mcap"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Ingest:IngestMcapRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Ingest:IngestMcapResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/ingest/v1/ingest-mcap",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "sources": [
                  {
                    "type": "s3",
                    "s3": {
                      "path": "path"
                    }
                  },
                  {
                    "type": "s3",
                    "s3": {
                      "path": "path"
                    }
                  }
                ],
                "channelConfig": [
                  {
                    "locator": {
                      "type": "topic",
                      "topic": "locator"
                    },
                    "channelType": {
                      "type": "video",
                      "video": {}
                    }
                  },
                  {
                    "locator": {
                      "type": "topic",
                      "topic": "locator"
                    },
                    "channelType": {
                      "type": "video",
                      "video": {}
                    }
                  }
                ],
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "outputs": [
                  {
                    "source": {
                      "type": "singleChannel",
                      "singleChannel": {
                        "type": "topic",
                        "topic": "source"
                      }
                    },
                    "target": {
                      "type": "videoRid",
                      "videoRid": "target"
                    }
                  },
                  {
                    "source": {
                      "type": "singleChannel",
                      "singleChannel": {
                        "type": "topic",
                        "topic": "source"
                      }
                    },
                    "target": {
                      "type": "videoRid",
                      "videoRid": "target"
                    }
                  }
                ],
                "asyncHandle": {
                  "rid": "rid"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "sources": [
                    {
                      "type": "s3",
                      "s3": {
                        "path": "path"
                      }
                    },
                    {
                      "type": "s3",
                      "s3": {
                        "path": "path"
                      }
                    }
                  ],
                  "channelConfig": [
                    {
                      "locator": {
                        "type": "topic",
                        "topic": "locator"
                      },
                      "channelType": {
                        "type": "video",
                        "video": {}
                      }
                    },
                    {
                      "locator": {
                        "type": "topic",
                        "topic": "locator"
                      },
                      "channelType": {
                        "type": "video",
                        "video": {}
                      }
                    }
                  ],
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "outputs": [
                    {
                      "source": {
                        "type": "singleChannel",
                        "singleChannel": {
                          "type": "topic",
                          "topic": "source"
                        }
                      },
                      "target": {
                        "type": "videoRid",
                        "videoRid": "target"
                      }
                    },
                    {
                      "source": {
                        "type": "singleChannel",
                        "singleChannel": {
                          "type": "topic",
                          "topic": "source"
                        }
                      },
                      "target": {
                        "type": "videoRid",
                        "videoRid": "target"
                      }
                    }
                  ],
                  "asyncHandle": {
                    "rid": "rid"
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Ingest:S3Path",
        "type_Ingest:DeprecatedTriggerIngest",
        "type_Ingest:TriggerIngest",
        "type_Ingest:TriggerFileIngest",
        "type_Ingest:SkipRowsConfig",
        "type_Ingest:ChannelConfig",
        "type_Ingest:IngestSource",
        "type_Ingest:S3IngestSource",
        "type_Ingest:IngestSourceMetadata",
        "type_Ingest:IngestDestination",
        "type_Ingest:NewDatasetIngestDestination",
        "type_Ingest:ExistingDatasetIngestDestination",
        "type_Ingest:DeprecatedTimestampMetadata",
        "type_Ingest:TimestampMetadata",
        "type_Ingest:TimestampType",
        "type_Ingest:RelativeTimestamp",
        "type_Ingest:AbsoluteTimestamp",
        "type_Ingest:Iso8601Timestamp",
        "type_Ingest:EpochTimestamp",
        "type_Ingest:CustomTimestamp",
        "type_Ingest:DatasetSpec",
        "type_Ingest:TriggeredIngest",
        "type_Ingest:ErrorResult",
        "type_Ingest:ErrorType",
        "type_Ingest:SuccessResult",
        "type_Ingest:InProgressResult",
        "type_Ingest:IngestStatus",
        "type_Ingest:IngestStatusV2",
        "type_Ingest:IngestProgressV2",
        "type_Ingest:AsyncHandle",
        "type_Ingest:InitiateMultipartUploadRequest",
        "type_Ingest:InitiateMultipartUploadResponse",
        "type_Ingest:PartWithSize",
        "type_Ingest:SignPartResponse",
        "type_Ingest:Part",
        "type_Ingest:CompleteMultipartUploadResponse",
        "type_Ingest:DeprecatedNewCsv",
        "type_Ingest:DeprecatedNewDataSource",
        "type_Ingest:NewDataSource",
        "type_Ingest:DataSourceRid",
        "type_Ingest:IngestDataSource",
        "type_Ingest:TimeOffsetSpec",
        "type_Ingest:UtcTimestamp",
        "type_Ingest:PropertyName",
        "type_Ingest:PropertyValue",
        "type_Ingest:Label",
        "type_Ingest:DataSourceRefName",
        "type_Ingest:IngestRunDataSource",
        "type_Ingest:IngestRunRequest",
        "type_Ingest:RunRid",
        "type_Ingest:IngestRunResponse",
        "type_Ingest:VideoTimestampManifest",
        "type_Ingest:NoTimestampManifest",
        "type_Ingest:TimestampManifest",
        "type_Ingest:ScaleParameter",
        "type_Ingest:IngestVideoRequest",
        "type_Ingest:IngestVideoResponse",
        "type_Ingest:McapChannelConfig",
        "type_Ingest:McapChannelConfigType",
        "type_Ingest:McapVideoChannelConfig",
        "type_Ingest:IngestMcapRequest",
        "type_Ingest:McapSource",
        "type_Ingest:McapDestination",
        "type_Ingest:McapIngestionOutput",
        "type_Ingest:IngestMcapResponse"
      ],
      "subpackages": [],
      "urlSlug": "ingest",
      "description": "The Ingest Service handles the data ingestion into Nominal/Clickhouse.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Integrations": {
      "subpackageId": "subpackage_Integrations",
      "name": "Integrations",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "generate-slack-webhook-link",
          "method": "GET",
          "id": "generateSlackWebhookLink",
          "originalEndpointId": "endpoint_Integrations.generateSlackWebhookLink",
          "name": "Generate Slack Webhook Link",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/integrations"
              },
              {
                "type": "literal",
                "value": "/slack-oauth/init-webhook"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Integrations:GenerateSlackWebhookResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/integrations/slack-oauth/init-webhook",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "url": "url"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "url": "url"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-slack-webhook",
          "method": "GET",
          "id": "createSlackWebhook",
          "originalEndpointId": "endpoint_Integrations.createSlackWebhook",
          "name": "Create Slack Webhook",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/integrations"
              },
              {
                "type": "literal",
                "value": "/slack-oauth/redirect"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "code",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            {
              "key": "state",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/integrations/slack-oauth/redirect",
              "pathParameters": {},
              "queryParameters": {
                "code": "code",
                "state": "state"
              },
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-integration",
          "method": "POST",
          "id": "createIntegration",
          "originalEndpointId": "endpoint_Integrations.createIntegration",
          "name": "Create Integration",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/integrations"
              },
              {
                "type": "literal",
                "value": "/"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Integrations:CreateIntegrationRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Integrations:Integration"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/integrations/",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "name",
                "createIntegrationDetails": {
                  "type": "createSimpleWebhookDetails",
                  "createSimpleWebhookDetails": {
                    "webhook": "webhook"
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "name": "name",
                "description": "description",
                "integrationDetails": {
                  "type": "slackWebhookIntegration",
                  "slackWebhookIntegration": {
                    "teamName": "teamName",
                    "channel": "channel",
                    "channelId": "channelId"
                  }
                },
                "createdAt": "2024-01-15T09:30:00Z",
                "createdBy": "createdBy"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "name",
                  "createIntegrationDetails": {
                    "type": "createSimpleWebhookDetails",
                    "createSimpleWebhookDetails": {
                      "webhook": "webhook"
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "name": "name",
                  "description": "description",
                  "integrationDetails": {
                    "type": "slackWebhookIntegration",
                    "slackWebhookIntegration": {
                      "teamName": "teamName",
                      "channel": "channel",
                      "channelId": "channelId"
                    }
                  },
                  "createdAt": "2024-01-15T09:30:00Z",
                  "createdBy": "createdBy"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "delete-integration",
          "method": "DELETE",
          "id": "deleteIntegration",
          "originalEndpointId": "endpoint_Integrations.deleteIntegration",
          "name": "Delete Integration",
          "path": {
            "pathParameters": [
              {
                "key": "integrationRid",
                "type": {
                  "type": "id",
                  "value": "type_Integrations:IntegrationRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/integrations"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "integrationRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/integrations/integrationRid",
              "pathParameters": {
                "integrationRid": "integrationRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-integration-metadata",
          "method": "PUT",
          "id": "updateIntegrationMetadata",
          "originalEndpointId": "endpoint_Integrations.updateIntegrationMetadata",
          "name": "Update Integration Metadata",
          "path": {
            "pathParameters": [
              {
                "key": "integrationRid",
                "type": {
                  "type": "id",
                  "value": "type_Integrations:IntegrationRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/integrations"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "integrationRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Integrations:UpdateIntegrationRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Integrations:Integration"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/integrations/integrationRid",
              "pathParameters": {
                "integrationRid": "integrationRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "name": "name",
                "description": "description",
                "integrationDetails": {
                  "type": "slackWebhookIntegration",
                  "slackWebhookIntegration": {
                    "teamName": "teamName",
                    "channel": "channel",
                    "channelId": "channelId"
                  }
                },
                "createdAt": "2024-01-15T09:30:00Z",
                "createdBy": "createdBy"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "name": "name",
                  "description": "description",
                  "integrationDetails": {
                    "type": "slackWebhookIntegration",
                    "slackWebhookIntegration": {
                      "teamName": "teamName",
                      "channel": "channel",
                      "channelId": "channelId"
                    }
                  },
                  "createdAt": "2024-01-15T09:30:00Z",
                  "createdBy": "createdBy"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-integration",
          "method": "GET",
          "id": "getIntegration",
          "originalEndpointId": "endpoint_Integrations.getIntegration",
          "name": "Get Integration",
          "path": {
            "pathParameters": [
              {
                "key": "integrationRid",
                "type": {
                  "type": "id",
                  "value": "type_Integrations:IntegrationRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/integrations"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "integrationRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Integrations:Integration"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/integrations/integrationRid",
              "pathParameters": {
                "integrationRid": "integrationRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "name": "name",
                "description": "description",
                "integrationDetails": {
                  "type": "slackWebhookIntegration",
                  "slackWebhookIntegration": {
                    "teamName": "teamName",
                    "channel": "channel",
                    "channelId": "channelId"
                  }
                },
                "createdAt": "2024-01-15T09:30:00Z",
                "createdBy": "createdBy"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "name": "name",
                  "description": "description",
                  "integrationDetails": {
                    "type": "slackWebhookIntegration",
                    "slackWebhookIntegration": {
                      "teamName": "teamName",
                      "channel": "channel",
                      "channelId": "channelId"
                    }
                  },
                  "createdAt": "2024-01-15T09:30:00Z",
                  "createdBy": "createdBy"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "list-integrations",
          "method": "GET",
          "id": "listIntegrations",
          "originalEndpointId": "endpoint_Integrations.listIntegrations",
          "name": "List Integrations",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/integrations"
              },
              {
                "type": "literal",
                "value": "/list"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_Integrations:Integration"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/integrations/list",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "name": "name",
                  "description": "description",
                  "integrationDetails": {
                    "type": "slackWebhookIntegration",
                    "slackWebhookIntegration": {
                      "teamName": "teamName",
                      "channel": "channel",
                      "channelId": "channelId"
                    }
                  },
                  "createdAt": "2024-01-15T09:30:00Z",
                  "createdBy": "createdBy"
                },
                {
                  "rid": "rid",
                  "name": "name",
                  "description": "description",
                  "integrationDetails": {
                    "type": "slackWebhookIntegration",
                    "slackWebhookIntegration": {
                      "teamName": "teamName",
                      "channel": "channel",
                      "channelId": "channelId"
                    }
                  },
                  "createdAt": "2024-01-15T09:30:00Z",
                  "createdBy": "createdBy"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "name": "name",
                    "description": "description",
                    "integrationDetails": {
                      "type": "slackWebhookIntegration",
                      "slackWebhookIntegration": {
                        "teamName": "teamName",
                        "channel": "channel",
                        "channelId": "channelId"
                      }
                    },
                    "createdAt": "2024-01-15T09:30:00Z",
                    "createdBy": "createdBy"
                  },
                  {
                    "rid": "rid",
                    "name": "name",
                    "description": "description",
                    "integrationDetails": {
                      "type": "slackWebhookIntegration",
                      "slackWebhookIntegration": {
                        "teamName": "teamName",
                        "channel": "channel",
                        "channelId": "channelId"
                      }
                    },
                    "createdAt": "2024-01-15T09:30:00Z",
                    "createdBy": "createdBy"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "send-message",
          "method": "POST",
          "id": "sendMessage",
          "originalEndpointId": "endpoint_Integrations.sendMessage",
          "name": "Send Message",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/integrations"
              },
              {
                "type": "literal",
                "value": "/send-message"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Integrations:SendMessageRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/integrations/send-message",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "message": "message",
                "integrationRid": "integrationRid"
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "message": "message",
                  "integrationRid": "integrationRid"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Integrations:IntegrationRid",
        "type_Integrations:Integration",
        "type_Integrations:IntegrationDetails",
        "type_Integrations:SlackWebhookIntegration",
        "type_Integrations:SimpleWebhookIntegration",
        "type_Integrations:OpsgenieIntegration",
        "type_Integrations:GenerateSlackWebhookResponse",
        "type_Integrations:CreateIntegrationRequest",
        "type_Integrations:CreateIntegrationDetails",
        "type_Integrations:CreateSimpleWebhookDetails",
        "type_Integrations:CreateOpsgenieIntegrationDetails",
        "type_Integrations:OpsgenieRegion",
        "type_Integrations:UpdateIntegrationRequest",
        "type_Integrations:SendMessageRequest",
        "type_Integrations:NotificationConfiguration"
      ],
      "subpackages": [],
      "urlSlug": "integrations",
      "description": "Service for managing integrations with external services.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_InternalVersioning": {
      "subpackageId": "subpackage_InternalVersioning",
      "name": "InternalVersioning",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "init-resource-versioning",
          "method": "POST",
          "id": "initResourceVersioning",
          "originalEndpointId": "endpoint_InternalVersioning.initResourceVersioning",
          "name": "Init Resource Versioning",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning/internal"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_InternalVersioning:InitResourceVersioningRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_InternalVersioning:BranchAndCommit"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/internal/resourceRid",
              "pathParameters": {
                "resourceRid": "resourceRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "newCommit": "newCommit",
                "message": "message"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "branch": {
                  "rid": "rid",
                  "name": "name",
                  "resourceRid": "resourceRid",
                  "commit": "commit",
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z"
                },
                "commit": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "newCommit": "newCommit",
                  "message": "message"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "branch": {
                    "rid": "rid",
                    "name": "name",
                    "resourceRid": "resourceRid",
                    "commit": "commit",
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z"
                  },
                  "commit": {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "save-working-state",
          "method": "POST",
          "id": "saveWorkingState",
          "originalEndpointId": "endpoint_InternalVersioning.saveWorkingState",
          "name": "Save Working State",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "branchName",
                "type": {
                  "type": "id",
                  "value": "type_InternalVersioning:BranchName"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning/internal"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/branch/"
              },
              {
                "type": "pathParameter",
                "value": "branchName"
              },
              {
                "type": "literal",
                "value": "/working-state"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_InternalVersioning:SaveWorkingStateRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_InternalVersioning:BranchAndCommit"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/internal/resourceRid/branch/branchName/working-state",
              "pathParameters": {
                "resourceRid": "resourceRid",
                "branchName": "branchName"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "newCommit": "newCommit"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "branch": {
                  "rid": "rid",
                  "name": "name",
                  "resourceRid": "resourceRid",
                  "commit": "commit",
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z"
                },
                "commit": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "newCommit": "newCommit"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "branch": {
                    "rid": "rid",
                    "name": "name",
                    "resourceRid": "resourceRid",
                    "commit": "commit",
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z"
                  },
                  "commit": {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "commit",
          "method": "POST",
          "id": "commit",
          "originalEndpointId": "endpoint_InternalVersioning.commit",
          "name": "Commit",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "branchName",
                "type": {
                  "type": "id",
                  "value": "type_InternalVersioning:BranchName"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning/internal"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/branch/"
              },
              {
                "type": "pathParameter",
                "value": "branchName"
              },
              {
                "type": "literal",
                "value": "/commit"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_InternalVersioning:CommitRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_InternalVersioning:BranchAndCommit"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/internal/resourceRid/branch/branchName/commit",
              "pathParameters": {
                "resourceRid": "resourceRid",
                "branchName": "branchName"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "newCommit": "newCommit",
                "message": "message"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "branch": {
                  "rid": "rid",
                  "name": "name",
                  "resourceRid": "resourceRid",
                  "commit": "commit",
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z"
                },
                "commit": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "newCommit": "newCommit",
                  "message": "message"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "branch": {
                    "rid": "rid",
                    "name": "name",
                    "resourceRid": "resourceRid",
                    "commit": "commit",
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z"
                  },
                  "commit": {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "compact-commits",
          "method": "POST",
          "id": "compactCommits",
          "originalEndpointId": "endpoint_InternalVersioning.compactCommits",
          "name": "Compact Commits",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning/internal"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/compact-commits"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_InternalVersioning:CompactCommitsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_InternalVersioning:CommitId"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/internal/resourceRid/compact-commits",
              "pathParameters": {
                "resourceRid": "resourceRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "strategy": {
                  "type": "olderThanDays",
                  "olderThanDays": 1
                }
              },
              "responseStatusCode": 200,
              "responseBody": ["string"],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "strategy": {
                    "type": "olderThanDays",
                    "olderThanDays": 1
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": ["string"]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_InternalVersioning:CommitId",
        "type_InternalVersioning:Commit",
        "type_InternalVersioning:BranchRid",
        "type_InternalVersioning:BranchName",
        "type_InternalVersioning:Branch",
        "type_InternalVersioning:TagRid",
        "type_InternalVersioning:TagName",
        "type_InternalVersioning:Tag",
        "type_InternalVersioning:InitResourceVersioningRequest",
        "type_InternalVersioning:CreateBranchRequest",
        "type_InternalVersioning:CreateTagRequest",
        "type_InternalVersioning:GetLeastCommonAncestorRequest",
        "type_InternalVersioning:SaveWorkingStateRequest",
        "type_InternalVersioning:CommitRequest",
        "type_InternalVersioning:CompactionStrategy",
        "type_InternalVersioning:CompactCommitsRequest",
        "type_InternalVersioning:BranchAndCommit",
        "type_InternalVersioning:ResourceAndCommitId",
        "type_InternalVersioning:ResourceAndBranchName",
        "type_InternalVersioning:CommitHistory"
      ],
      "subpackages": [],
      "urlSlug": "internal-versioning",
      "description": "These endpoints are not intended to be used directly by clients, since\nthey require saving resource-specific state associated with new commits.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Job": {
      "subpackageId": "subpackage_Job",
      "name": "Job",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "submit-jobs",
          "method": "POST",
          "id": "submitJobs",
          "originalEndpointId": "endpoint_Job.submitJobs",
          "name": "Submit Jobs",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/jobs/v1"
              },
              {
                "type": "literal",
                "value": "/submitJobs"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Job:SubmitJobsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Job:SubmitJobsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/jobs/v1/submitJobs",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "jobsToExecute": [
                  {
                    "type": "check",
                    "check": {
                      "dataReviewRid": "dataReviewRid",
                      "checkRid": "checkRid",
                      "checkEvaluationRid": "checkEvaluationRid",
                      "checkCondition": {
                        "type": "numRanges",
                        "numRanges": {
                          "ranges": {
                            "type": "function",
                            "function": {
                              "functionReference": "functionReference",
                              "functionIdentifier": {
                                "type": "variable",
                                "variable": "functionIdentifier"
                              }
                            }
                          },
                          "functionSpec": {
                            "key": "value"
                          },
                          "threshold": 1,
                          "operator": "GREATER_THAN",
                          "variables": {
                            "variables": {
                              "dataSourceRef": "dataSourceRef",
                              "channel": "channel",
                              "tags": {
                                "tags": "tags"
                              }
                            }
                          }
                        }
                      },
                      "start": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "end": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "context": {
                        "variables": {
                          "variables": {
                            "rid": "rid"
                          }
                        },
                        "variablesV2": {
                          "variablesV2": {
                            "type": "series",
                            "series": {
                              "rid": "rid"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "jobs": [
                  {
                    "jobRid": "jobRid",
                    "jobSpec": {
                      "type": "check",
                      "check": {
                        "dataReviewRid": "dataReviewRid",
                        "checkRid": "checkRid",
                        "checkEvaluationRid": "checkEvaluationRid",
                        "checkCondition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {
                                  "tags": "tags"
                                }
                              }
                            }
                          }
                        },
                        "start": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "end": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "context": {
                          "variables": {
                            "variables": {
                              "rid": "rid",
                              "offset": {
                                "seconds": 1000000,
                                "nanos": 1000000
                              }
                            }
                          },
                          "variablesV2": {
                            "variablesV2": {
                              "type": "series",
                              "series": {
                                "rid": "rid"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "jobRid": "jobRid",
                    "jobSpec": {
                      "type": "check",
                      "check": {
                        "dataReviewRid": "dataReviewRid",
                        "checkRid": "checkRid",
                        "checkEvaluationRid": "checkEvaluationRid",
                        "checkCondition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {
                                  "tags": "tags"
                                }
                              }
                            }
                          }
                        },
                        "start": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "end": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "context": {
                          "variables": {
                            "variables": {
                              "rid": "rid",
                              "offset": {
                                "seconds": 1000000,
                                "nanos": 1000000
                              }
                            }
                          },
                          "variablesV2": {
                            "variablesV2": {
                              "type": "series",
                              "series": {
                                "rid": "rid"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "jobsToExecute": [
                    {
                      "type": "check",
                      "check": {
                        "dataReviewRid": "dataReviewRid",
                        "checkRid": "checkRid",
                        "checkEvaluationRid": "checkEvaluationRid",
                        "checkCondition": {
                          "type": "numRanges",
                          "numRanges": {
                            "ranges": {
                              "type": "function",
                              "function": {
                                "functionReference": "functionReference",
                                "functionIdentifier": {
                                  "type": "variable",
                                  "variable": "functionIdentifier"
                                }
                              }
                            },
                            "functionSpec": {
                              "key": "value"
                            },
                            "threshold": 1,
                            "operator": "GREATER_THAN",
                            "variables": {
                              "variables": {
                                "dataSourceRef": "dataSourceRef",
                                "channel": "channel",
                                "tags": {
                                  "tags": "tags"
                                }
                              }
                            }
                          }
                        },
                        "start": {
                          "seconds": 1000000,
                          "nanos": 1000000
                        },
                        "end": {
                          "seconds": 1000000,
                          "nanos": 1000000
                        },
                        "context": {
                          "variables": {
                            "variables": {
                              "rid": "rid"
                            }
                          },
                          "variablesV2": {
                            "variablesV2": {
                              "type": "series",
                              "series": {
                                "rid": "rid"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "jobs": [
                    {
                      "jobRid": "jobRid",
                      "jobSpec": {
                        "type": "check",
                        "check": {
                          "dataReviewRid": "dataReviewRid",
                          "checkRid": "checkRid",
                          "checkEvaluationRid": "checkEvaluationRid",
                          "checkCondition": {
                            "type": "numRanges",
                            "numRanges": {
                              "ranges": {
                                "type": "function",
                                "function": {
                                  "functionReference": "functionReference",
                                  "functionIdentifier": {
                                    "type": "variable",
                                    "variable": "functionIdentifier"
                                  }
                                }
                              },
                              "functionSpec": {
                                "key": "value"
                              },
                              "threshold": 1,
                              "operator": "GREATER_THAN",
                              "variables": {
                                "variables": {
                                  "dataSourceRef": "dataSourceRef",
                                  "channel": "channel",
                                  "tags": {
                                    "tags": "tags"
                                  }
                                }
                              }
                            }
                          },
                          "start": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "end": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "context": {
                            "variables": {
                              "variables": {
                                "rid": "rid",
                                "offset": {
                                  "seconds": 1000000,
                                  "nanos": 1000000
                                }
                              }
                            },
                            "variablesV2": {
                              "variablesV2": {
                                "type": "series",
                                "series": {
                                  "rid": "rid"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "jobRid": "jobRid",
                      "jobSpec": {
                        "type": "check",
                        "check": {
                          "dataReviewRid": "dataReviewRid",
                          "checkRid": "checkRid",
                          "checkEvaluationRid": "checkEvaluationRid",
                          "checkCondition": {
                            "type": "numRanges",
                            "numRanges": {
                              "ranges": {
                                "type": "function",
                                "function": {
                                  "functionReference": "functionReference",
                                  "functionIdentifier": {
                                    "type": "variable",
                                    "variable": "functionIdentifier"
                                  }
                                }
                              },
                              "functionSpec": {
                                "key": "value"
                              },
                              "threshold": 1,
                              "operator": "GREATER_THAN",
                              "variables": {
                                "variables": {
                                  "dataSourceRef": "dataSourceRef",
                                  "channel": "channel",
                                  "tags": {
                                    "tags": "tags"
                                  }
                                }
                              }
                            }
                          },
                          "start": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "end": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "context": {
                            "variables": {
                              "variables": {
                                "rid": "rid",
                                "offset": {
                                  "seconds": 1000000,
                                  "nanos": 1000000
                                }
                              }
                            },
                            "variablesV2": {
                              "variablesV2": {
                                "type": "series",
                                "series": {
                                  "rid": "rid"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-job-report",
          "method": "GET",
          "id": "getJobReport",
          "originalEndpointId": "endpoint_Job.getJobReport",
          "name": "Get Job Report",
          "path": {
            "pathParameters": [
              {
                "key": "jobRid",
                "type": {
                  "type": "id",
                  "value": "type_common:JobRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/jobs/v1"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "jobRid"
              },
              {
                "type": "literal",
                "value": "/job-report"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Job:JobReport"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/jobs/v1/jobRid/job-report",
              "pathParameters": {
                "jobRid": "jobRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "jobStatus": {
                  "type": "inProgress",
                  "inProgress": {}
                },
                "jobRid": "jobRid",
                "submittedAt": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "jobStatus": {
                    "type": "inProgress",
                    "inProgress": {}
                  },
                  "jobRid": "jobRid",
                  "submittedAt": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get-job-reports",
          "method": "POST",
          "id": "batchGetJobReports",
          "originalEndpointId": "endpoint_Job.batchGetJobReports",
          "name": "Batch Get Job Reports",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/jobs/v1"
              },
              {
                "type": "literal",
                "value": "/batch-get-job-reports"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Job:BatchGetJobReportsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Job:BatchGetJobReportsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/jobs/v1/batch-get-job-reports",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "jobRids": ["jobRids"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "jobRidsToJobReports": {
                  "jobRidsToJobReports": {
                    "jobStatus": {
                      "type": "inProgress",
                      "inProgress": {}
                    },
                    "jobRid": "jobRid",
                    "submittedAt": "2024-01-15T09:30:00Z"
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "jobRids": ["jobRids"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "jobRidsToJobReports": {
                    "jobRidsToJobReports": {
                      "jobStatus": {
                        "type": "inProgress",
                        "inProgress": {}
                      },
                      "jobRid": "jobRid",
                      "submittedAt": "2024-01-15T09:30:00Z"
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Job:DeprecatedCheckJobSpec",
        "type_Job:CheckJobSpec",
        "type_Job:JobSpec",
        "type_Job:JobReport",
        "type_Job:JobStatus",
        "type_Job:InProgress",
        "type_Job:Completed",
        "type_Job:JobResult",
        "type_Job:CheckJobResult",
        "type_Job:Failed",
        "type_Job:BatchGetJobReportsRequest",
        "type_Job:BatchGetJobReportsResponse",
        "type_Job:SubmitJobsRequest",
        "type_Job:SubmittedJob",
        "type_Job:SubmitJobsResponse"
      ],
      "subpackages": [],
      "urlSlug": "job",
      "description": "The Job Service is responsible for running jobs for checklist executions.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_LogSet": {
      "subpackageId": "subpackage_LogSet",
      "name": "LogSet",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create",
          "method": "POST",
          "id": "create",
          "originalEndpointId": "endpoint_LogSet.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/log-set/v1"
              },
              {
                "type": "literal",
                "value": "/log-sets"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogSet:CreateLogSetRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogSet:LogSetMetadata"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/log-set/v1/log-sets",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "name",
                "originMetadata": {
                  "originMetadata": "originMetadata"
                },
                "timestampType": "ABSOLUTE"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "createdBy": "createdBy",
                "name": "name",
                "description": "description",
                "originMetadata": {
                  "originMetadata": "originMetadata"
                },
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z",
                "logCount": 1000000,
                "timestampType": "ABSOLUTE"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "name",
                  "originMetadata": {
                    "originMetadata": "originMetadata"
                  },
                  "timestampType": "ABSOLUTE"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "createdBy": "createdBy",
                  "name": "name",
                  "description": "description",
                  "originMetadata": {
                    "originMetadata": "originMetadata"
                  },
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "logCount": 1000000,
                  "timestampType": "ABSOLUTE"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "attach-logs-and-finalize",
          "method": "POST",
          "id": "attachLogsAndFinalize",
          "originalEndpointId": "endpoint_LogSet.attachLogsAndFinalize",
          "name": "Attach Logs And Finalize",
          "path": {
            "pathParameters": [
              {
                "key": "logSetRid",
                "type": {
                  "type": "id",
                  "value": "type_LogSet:LogSetRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/log-set/v1"
              },
              {
                "type": "literal",
                "value": "/log-set/"
              },
              {
                "type": "pathParameter",
                "value": "logSetRid"
              },
              {
                "type": "literal",
                "value": "/attach-and-finalize"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogSet:AttachLogsAndFinalizeRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogSet:LogSetMetadata"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/log-set/v1/log-set/logSetRid/attach-and-finalize",
              "pathParameters": {
                "logSetRid": "logSetRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "logs": [
                  {
                    "time": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "body": {
                      "type": "basic",
                      "basic": {
                        "properties": {
                          "properties": "properties"
                        },
                        "message": "message"
                      }
                    }
                  },
                  {
                    "time": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "body": {
                      "type": "basic",
                      "basic": {
                        "properties": {
                          "properties": "properties"
                        },
                        "message": "message"
                      }
                    }
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "createdBy": "createdBy",
                "name": "name",
                "description": "description",
                "originMetadata": {
                  "originMetadata": "originMetadata"
                },
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z",
                "logCount": 1000000,
                "timestampType": "ABSOLUTE"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "logs": [
                    {
                      "time": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "body": {
                        "type": "basic",
                        "basic": {
                          "properties": {
                            "properties": "properties"
                          },
                          "message": "message"
                        }
                      }
                    },
                    {
                      "time": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "body": {
                        "type": "basic",
                        "basic": {
                          "properties": {
                            "properties": "properties"
                          },
                          "message": "message"
                        }
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "createdBy": "createdBy",
                  "name": "name",
                  "description": "description",
                  "originMetadata": {
                    "originMetadata": "originMetadata"
                  },
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "logCount": 1000000,
                  "timestampType": "ABSOLUTE"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-log-set-metadata",
          "method": "GET",
          "id": "getLogSetMetadata",
          "originalEndpointId": "endpoint_LogSet.getLogSetMetadata",
          "name": "Get Log Set Metadata",
          "path": {
            "pathParameters": [
              {
                "key": "logSetRid",
                "type": {
                  "type": "id",
                  "value": "type_LogSet:LogSetRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/log-set/v1"
              },
              {
                "type": "literal",
                "value": "/log-set/"
              },
              {
                "type": "pathParameter",
                "value": "logSetRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogSet:LogSetMetadata"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/log-set/v1/log-set/logSetRid",
              "pathParameters": {
                "logSetRid": "logSetRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "createdBy": "createdBy",
                "name": "name",
                "description": "description",
                "originMetadata": {
                  "originMetadata": "originMetadata"
                },
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z",
                "logCount": 1000000,
                "timestampType": "ABSOLUTE"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "createdBy": "createdBy",
                  "name": "name",
                  "description": "description",
                  "originMetadata": {
                    "originMetadata": "originMetadata"
                  },
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "logCount": 1000000,
                  "timestampType": "ABSOLUTE"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get-log-set-metadata",
          "method": "POST",
          "id": "batchGetLogSetMetadata",
          "originalEndpointId": "endpoint_LogSet.batchGetLogSetMetadata",
          "name": "Batch Get Log Set Metadata",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/log-set/v1"
              },
              {
                "type": "literal",
                "value": "/log-set/multiple"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_LogSet:LogSetRid"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_LogSet:LogSetMetadata"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/log-set/v1/log-set/multiple",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": ["string"],
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "createdBy": "createdBy",
                  "name": "name",
                  "description": "description",
                  "originMetadata": {
                    "originMetadata": "originMetadata"
                  },
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "logCount": 1000000,
                  "timestampType": "ABSOLUTE"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": ["string"]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "createdBy": "createdBy",
                    "name": "name",
                    "description": "description",
                    "originMetadata": {
                      "originMetadata": "originMetadata"
                    },
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "logCount": 1000000,
                    "timestampType": "ABSOLUTE"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-log-sets",
          "method": "POST",
          "id": "searchLogSets",
          "originalEndpointId": "endpoint_LogSet.searchLogSets",
          "name": "Search Log Sets",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/log-set/v1"
              },
              {
                "type": "literal",
                "value": "/log-sets/get"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogSet:SearchLogSetsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogSet:SearchLogSetsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/log-set/v1/log-sets/get",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "values": [
                  {
                    "rid": "rid",
                    "createdBy": "createdBy",
                    "name": "name",
                    "description": "description",
                    "originMetadata": {
                      "originMetadata": "originMetadata"
                    },
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "logCount": 1000000,
                    "timestampType": "ABSOLUTE"
                  },
                  {
                    "rid": "rid",
                    "createdBy": "createdBy",
                    "name": "name",
                    "description": "description",
                    "originMetadata": {
                      "originMetadata": "originMetadata"
                    },
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "logCount": 1000000,
                    "timestampType": "ABSOLUTE"
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "values": [
                    {
                      "rid": "rid",
                      "createdBy": "createdBy",
                      "name": "name",
                      "description": "description",
                      "originMetadata": {
                        "originMetadata": "originMetadata"
                      },
                      "createdAt": "2024-01-15T09:30:00Z",
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "logCount": 1000000,
                      "timestampType": "ABSOLUTE"
                    },
                    {
                      "rid": "rid",
                      "createdBy": "createdBy",
                      "name": "name",
                      "description": "description",
                      "originMetadata": {
                        "originMetadata": "originMetadata"
                      },
                      "createdAt": "2024-01-15T09:30:00Z",
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "logCount": 1000000,
                      "timestampType": "ABSOLUTE"
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-logs",
          "method": "POST",
          "id": "searchLogs",
          "originalEndpointId": "endpoint_LogSet.searchLogs",
          "name": "Search Logs",
          "path": {
            "pathParameters": [
              {
                "key": "logSetRid",
                "type": {
                  "type": "id",
                  "value": "type_LogSet:LogSetRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/data-source/log-set/v1"
              },
              {
                "type": "literal",
                "value": "/log-set/"
              },
              {
                "type": "pathParameter",
                "value": "logSetRid"
              },
              {
                "type": "literal",
                "value": "/logs"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogSet:SearchLogsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogSet:SearchLogsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/data-source/log-set/v1/log-set/logSetRid/logs",
              "pathParameters": {
                "logSetRid": "logSetRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "logs": [
                  {
                    "time": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "body": {
                      "type": "basic",
                      "basic": {
                        "properties": {
                          "properties": "properties"
                        },
                        "message": "message"
                      }
                    }
                  },
                  {
                    "time": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "body": {
                      "type": "basic",
                      "basic": {
                        "properties": {
                          "properties": "properties"
                        },
                        "message": "message"
                      }
                    }
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "logs": [
                    {
                      "time": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "body": {
                        "type": "basic",
                        "basic": {
                          "properties": {
                            "properties": "properties"
                          },
                          "message": "message"
                        }
                      }
                    },
                    {
                      "time": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "body": {
                        "type": "basic",
                        "basic": {
                          "properties": {
                            "properties": "properties"
                          },
                          "message": "message"
                        }
                      }
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_LogSet:LogSetRid",
        "type_LogSet:Log",
        "type_LogSet:BasicLogBody",
        "type_LogSet:LogBody",
        "type_LogSet:LogHandle",
        "type_LogSet:LogFormat",
        "type_LogSet:S3LogHandle",
        "type_LogSet:CreateLogSetRequest",
        "type_LogSet:AttachLogsAndFinalizeRequest",
        "type_LogSet:LogSetMetadata",
        "type_LogSet:Token",
        "type_LogSet:SearchLogSetsRequest",
        "type_LogSet:SearchLogSetsResponse",
        "type_LogSet:SearchLogsResponse",
        "type_LogSet:SearchLogsRequest"
      ],
      "subpackages": [],
      "urlSlug": "log-set",
      "description": "Log sets are a type of datasource which can be used to store log data.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_LogicalSeries": {
      "subpackageId": "subpackage_LogicalSeries",
      "name": "LogicalSeries",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-logical-series",
          "method": "POST",
          "id": "createLogicalSeries",
          "originalEndpointId": "endpoint_LogicalSeries.createLogicalSeries",
          "name": "Create Logical Series",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/logical-series/v1"
              },
              {
                "type": "literal",
                "value": "/logical-series"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogicalSeries:CreateLogicalSeries"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogicalSeries:LogicalSeries"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/logical-series/v1/logical-series",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "channel": "channel",
                "locator": {
                  "type": "csvLocator",
                  "csvLocator": {
                    "s3Path": "s3Path",
                    "index": 1
                  }
                },
                "dataSourceRid": "dataSourceRid"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "dataSourceRid": "dataSourceRid",
                "locator": {
                  "type": "csvLocator",
                  "csvLocator": {
                    "s3Path": "s3Path",
                    "index": 1,
                    "usesLegacyFormat": true
                  }
                },
                "timeLocator": {
                  "type": "csvLocator",
                  "csvLocator": {
                    "s3Path": "s3Path",
                    "index": 1,
                    "usesLegacyFormat": true
                  }
                },
                "channel": "channel",
                "description": "description",
                "unit": "unit",
                "seriesDataType": "DOUBLE",
                "granularity": "DAYS"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "channel": "channel",
                  "locator": {
                    "type": "csvLocator",
                    "csvLocator": {
                      "s3Path": "s3Path",
                      "index": 1
                    }
                  },
                  "dataSourceRid": "dataSourceRid"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "dataSourceRid": "dataSourceRid",
                  "locator": {
                    "type": "csvLocator",
                    "csvLocator": {
                      "s3Path": "s3Path",
                      "index": 1,
                      "usesLegacyFormat": true
                    }
                  },
                  "timeLocator": {
                    "type": "csvLocator",
                    "csvLocator": {
                      "s3Path": "s3Path",
                      "index": 1,
                      "usesLegacyFormat": true
                    }
                  },
                  "channel": "channel",
                  "description": "description",
                  "unit": "unit",
                  "seriesDataType": "DOUBLE",
                  "granularity": "DAYS"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-create-logical-series",
          "method": "POST",
          "id": "batchCreateLogicalSeries",
          "originalEndpointId": "endpoint_LogicalSeries.batchCreateLogicalSeries",
          "name": "Batch Create Logical Series",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/logical-series/v1"
              },
              {
                "type": "literal",
                "value": "/logical-series/batch-create"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogicalSeries:BatchCreateLogicalSeriesRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogicalSeries:BatchCreateLogicalSeriesResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/logical-series/v1/logical-series/batch-create",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "requests": [
                  {
                    "channel": "channel",
                    "locator": {
                      "type": "csvLocator",
                      "csvLocator": {
                        "s3Path": "s3Path",
                        "index": 1
                      }
                    },
                    "dataSourceRid": "dataSourceRid"
                  },
                  {
                    "channel": "channel",
                    "locator": {
                      "type": "csvLocator",
                      "csvLocator": {
                        "s3Path": "s3Path",
                        "index": 1
                      }
                    },
                    "dataSourceRid": "dataSourceRid"
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "responses": [
                  {
                    "rid": "rid",
                    "dataSourceRid": "dataSourceRid",
                    "locator": {
                      "type": "csvLocator",
                      "csvLocator": {
                        "s3Path": "s3Path",
                        "index": 1,
                        "usesLegacyFormat": true
                      }
                    },
                    "timeLocator": {
                      "type": "csvLocator",
                      "csvLocator": {
                        "s3Path": "s3Path",
                        "index": 1,
                        "usesLegacyFormat": true
                      }
                    },
                    "channel": "channel",
                    "description": "description",
                    "unit": "unit",
                    "seriesDataType": "DOUBLE",
                    "granularity": "DAYS"
                  },
                  {
                    "rid": "rid",
                    "dataSourceRid": "dataSourceRid",
                    "locator": {
                      "type": "csvLocator",
                      "csvLocator": {
                        "s3Path": "s3Path",
                        "index": 1,
                        "usesLegacyFormat": true
                      }
                    },
                    "timeLocator": {
                      "type": "csvLocator",
                      "csvLocator": {
                        "s3Path": "s3Path",
                        "index": 1,
                        "usesLegacyFormat": true
                      }
                    },
                    "channel": "channel",
                    "description": "description",
                    "unit": "unit",
                    "seriesDataType": "DOUBLE",
                    "granularity": "DAYS"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "requests": [
                    {
                      "channel": "channel",
                      "locator": {
                        "type": "csvLocator",
                        "csvLocator": {
                          "s3Path": "s3Path",
                          "index": 1
                        }
                      },
                      "dataSourceRid": "dataSourceRid"
                    },
                    {
                      "channel": "channel",
                      "locator": {
                        "type": "csvLocator",
                        "csvLocator": {
                          "s3Path": "s3Path",
                          "index": 1
                        }
                      },
                      "dataSourceRid": "dataSourceRid"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "responses": [
                    {
                      "rid": "rid",
                      "dataSourceRid": "dataSourceRid",
                      "locator": {
                        "type": "csvLocator",
                        "csvLocator": {
                          "s3Path": "s3Path",
                          "index": 1,
                          "usesLegacyFormat": true
                        }
                      },
                      "timeLocator": {
                        "type": "csvLocator",
                        "csvLocator": {
                          "s3Path": "s3Path",
                          "index": 1,
                          "usesLegacyFormat": true
                        }
                      },
                      "channel": "channel",
                      "description": "description",
                      "unit": "unit",
                      "seriesDataType": "DOUBLE",
                      "granularity": "DAYS"
                    },
                    {
                      "rid": "rid",
                      "dataSourceRid": "dataSourceRid",
                      "locator": {
                        "type": "csvLocator",
                        "csvLocator": {
                          "s3Path": "s3Path",
                          "index": 1,
                          "usesLegacyFormat": true
                        }
                      },
                      "timeLocator": {
                        "type": "csvLocator",
                        "csvLocator": {
                          "s3Path": "s3Path",
                          "index": 1,
                          "usesLegacyFormat": true
                        }
                      },
                      "channel": "channel",
                      "description": "description",
                      "unit": "unit",
                      "seriesDataType": "DOUBLE",
                      "granularity": "DAYS"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-update-logical-series",
          "method": "POST",
          "id": "batchUpdateLogicalSeries",
          "originalEndpointId": "endpoint_LogicalSeries.batchUpdateLogicalSeries",
          "name": "Batch Update Logical Series",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/logical-series/v1"
              },
              {
                "type": "literal",
                "value": "/logical-series/batch-update"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogicalSeries:BatchUpdateLogicalSeriesRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogicalSeries:BatchUpdateLogicalSeriesResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/logical-series/v1/logical-series/batch-update",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "requests": [
                  {
                    "logicalSeriesRid": "logicalSeriesRid"
                  },
                  {
                    "logicalSeriesRid": "logicalSeriesRid"
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "responses": [
                  {
                    "rid": "rid",
                    "dataSourceRid": "dataSourceRid",
                    "locator": {
                      "type": "csvLocator",
                      "csvLocator": {
                        "s3Path": "s3Path",
                        "index": 1,
                        "usesLegacyFormat": true
                      }
                    },
                    "timeLocator": {
                      "type": "csvLocator",
                      "csvLocator": {
                        "s3Path": "s3Path",
                        "index": 1,
                        "usesLegacyFormat": true
                      }
                    },
                    "channel": "channel",
                    "description": "description",
                    "unit": "unit",
                    "seriesDataType": "DOUBLE",
                    "granularity": "DAYS"
                  },
                  {
                    "rid": "rid",
                    "dataSourceRid": "dataSourceRid",
                    "locator": {
                      "type": "csvLocator",
                      "csvLocator": {
                        "s3Path": "s3Path",
                        "index": 1,
                        "usesLegacyFormat": true
                      }
                    },
                    "timeLocator": {
                      "type": "csvLocator",
                      "csvLocator": {
                        "s3Path": "s3Path",
                        "index": 1,
                        "usesLegacyFormat": true
                      }
                    },
                    "channel": "channel",
                    "description": "description",
                    "unit": "unit",
                    "seriesDataType": "DOUBLE",
                    "granularity": "DAYS"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "requests": [
                    {
                      "logicalSeriesRid": "logicalSeriesRid"
                    },
                    {
                      "logicalSeriesRid": "logicalSeriesRid"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "responses": [
                    {
                      "rid": "rid",
                      "dataSourceRid": "dataSourceRid",
                      "locator": {
                        "type": "csvLocator",
                        "csvLocator": {
                          "s3Path": "s3Path",
                          "index": 1,
                          "usesLegacyFormat": true
                        }
                      },
                      "timeLocator": {
                        "type": "csvLocator",
                        "csvLocator": {
                          "s3Path": "s3Path",
                          "index": 1,
                          "usesLegacyFormat": true
                        }
                      },
                      "channel": "channel",
                      "description": "description",
                      "unit": "unit",
                      "seriesDataType": "DOUBLE",
                      "granularity": "DAYS"
                    },
                    {
                      "rid": "rid",
                      "dataSourceRid": "dataSourceRid",
                      "locator": {
                        "type": "csvLocator",
                        "csvLocator": {
                          "s3Path": "s3Path",
                          "index": 1,
                          "usesLegacyFormat": true
                        }
                      },
                      "timeLocator": {
                        "type": "csvLocator",
                        "csvLocator": {
                          "s3Path": "s3Path",
                          "index": 1,
                          "usesLegacyFormat": true
                        }
                      },
                      "channel": "channel",
                      "description": "description",
                      "unit": "unit",
                      "seriesDataType": "DOUBLE",
                      "granularity": "DAYS"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-logical-series",
          "method": "GET",
          "id": "getLogicalSeries",
          "originalEndpointId": "endpoint_LogicalSeries.getLogicalSeries",
          "name": "Get Logical Series",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_LogicalSeries:LogicalSeriesRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/logical-series/v1"
              },
              {
                "type": "literal",
                "value": "/logical-series/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogicalSeries:LogicalSeries"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/logical-series/v1/logical-series/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "dataSourceRid": "dataSourceRid",
                "locator": {
                  "type": "csvLocator",
                  "csvLocator": {
                    "s3Path": "s3Path",
                    "index": 1,
                    "usesLegacyFormat": true
                  }
                },
                "timeLocator": {
                  "type": "csvLocator",
                  "csvLocator": {
                    "s3Path": "s3Path",
                    "index": 1,
                    "usesLegacyFormat": true
                  }
                },
                "channel": "channel",
                "description": "description",
                "unit": "unit",
                "seriesDataType": "DOUBLE",
                "granularity": "DAYS"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "dataSourceRid": "dataSourceRid",
                  "locator": {
                    "type": "csvLocator",
                    "csvLocator": {
                      "s3Path": "s3Path",
                      "index": 1,
                      "usesLegacyFormat": true
                    }
                  },
                  "timeLocator": {
                    "type": "csvLocator",
                    "csvLocator": {
                      "s3Path": "s3Path",
                      "index": 1,
                      "usesLegacyFormat": true
                    }
                  },
                  "channel": "channel",
                  "description": "description",
                  "unit": "unit",
                  "seriesDataType": "DOUBLE",
                  "granularity": "DAYS"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "resolve-batch",
          "method": "POST",
          "id": "resolveBatch",
          "originalEndpointId": "endpoint_LogicalSeries.resolveBatch",
          "name": "Resolve Batch",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/logical-series/v1"
              },
              {
                "type": "literal",
                "value": "/resolve"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogicalSeries:BatchResolveSeriesRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogicalSeries:BatchResolveSeriesResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/logical-series/v1/resolve",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "requests": [
                  {
                    "name": "name",
                    "datasource": "datasource",
                    "tags": {
                      "tags": "tags"
                    }
                  },
                  {
                    "name": "name",
                    "datasource": "datasource",
                    "tags": {
                      "tags": "tags"
                    }
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "series": [
                  {
                    "type": "rid",
                    "rid": "series"
                  },
                  {
                    "type": "rid",
                    "rid": "series"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "requests": [
                    {
                      "name": "name",
                      "datasource": "datasource",
                      "tags": {
                        "tags": "tags"
                      }
                    },
                    {
                      "name": "name",
                      "datasource": "datasource",
                      "tags": {
                        "tags": "tags"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "series": [
                    {
                      "type": "rid",
                      "rid": "series"
                    },
                    {
                      "type": "rid",
                      "rid": "series"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-suggested-tags",
          "method": "POST",
          "id": "getSuggestedTags",
          "originalEndpointId": "endpoint_LogicalSeries.getSuggestedTags",
          "name": "Get Suggested Tags",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/logical-series/v1"
              },
              {
                "type": "literal",
                "value": "/get-suggested-tags"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogicalSeries:GetSuggestedTagsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_LogicalSeries:GetSuggestedTagsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/logical-series/v1/get-suggested-tags",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "currentTags": {
                  "currentTags": "currentTags"
                },
                "dataSourceRid": "dataSourceRid",
                "channel": "channel"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "tags": {
                  "tags": ["tags"]
                },
                "confidence": "LOW"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "currentTags": {
                    "currentTags": "currentTags"
                  },
                  "dataSourceRid": "dataSourceRid",
                  "channel": "channel"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "tags": {
                    "tags": ["tags"]
                  },
                  "confidence": "LOW"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_LogicalSeries:LogicalSeriesRid",
        "type_LogicalSeries:DataSourceRid",
        "type_LogicalSeries:SeriesDataType",
        "type_LogicalSeries:LogicalSeries",
        "type_LogicalSeries:Context",
        "type_LogicalSeries:ContextProperty",
        "type_LogicalSeries:Locator",
        "type_LogicalSeries:CsvLocator",
        "type_LogicalSeries:CsvLocatorV2",
        "type_LogicalSeries:TimescaleDbLocator",
        "type_LogicalSeries:DatabaseName",
        "type_LogicalSeries:SchemaName",
        "type_LogicalSeries:BucketName",
        "type_LogicalSeries:MeasurementName",
        "type_LogicalSeries:FieldName",
        "type_LogicalSeries:ColumnName",
        "type_LogicalSeries:AttributeName",
        "type_LogicalSeries:TableName",
        "type_LogicalSeries:MeasureName",
        "type_LogicalSeries:LocationName",
        "type_LogicalSeries:InfluxType",
        "type_LogicalSeries:TimescaleType",
        "type_LogicalSeries:NominalType",
        "type_LogicalSeries:VisualCrossingType",
        "type_LogicalSeries:Influx2Locator",
        "type_LogicalSeries:Influx1Locator",
        "type_LogicalSeries:NominalLocator",
        "type_LogicalSeries:VisualCrossingEndpointUri",
        "type_LogicalSeries:VisualCrossingLocator",
        "type_LogicalSeries:TimestreamLocator",
        "type_LogicalSeries:Channel",
        "type_LogicalSeries:Unit",
        "type_LogicalSeries:CreateLogicalSeries",
        "type_LogicalSeries:UnitUpdate",
        "type_LogicalSeries:Empty",
        "type_LogicalSeries:UpdateLogicalSeries",
        "type_LogicalSeries:BatchCreateLogicalSeriesRequest",
        "type_LogicalSeries:BatchCreateLogicalSeriesResponse",
        "type_LogicalSeries:BatchUpdateLogicalSeriesRequest",
        "type_LogicalSeries:BatchUpdateLogicalSeriesResponse",
        "type_LogicalSeries:ResolveSeriesRequest",
        "type_LogicalSeries:BatchResolveSeriesRequest",
        "type_LogicalSeries:ResolveSeriesResponse",
        "type_LogicalSeries:ResolveSeriesError",
        "type_LogicalSeries:BatchResolveSeriesResponse",
        "type_LogicalSeries:Confidence",
        "type_LogicalSeries:GetSuggestedTagsRequest",
        "type_LogicalSeries:GetSuggestedTagsResponse"
      ],
      "subpackages": [],
      "urlSlug": "logical-series",
      "description": "A logical series is a timeseries, represented by a channel name and a tag set.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_NominalChannelWriter": {
      "subpackageId": "subpackage_NominalChannelWriter",
      "name": "NominalChannelWriter",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "write-batches",
          "method": "POST",
          "id": "writeBatches",
          "originalEndpointId": "endpoint_NominalChannelWriter.writeBatches",
          "name": "Write Batches",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/storage/writer/v1"
              },
              {
                "type": "literal",
                "value": "/"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_NominalChannelWriter:WriteBatchesRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/storage/writer/v1/",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "batches": [
                  {
                    "channel": "channel",
                    "tags": {
                      "tags": "tags"
                    },
                    "points": {
                      "type": "string",
                      "string": [
                        {
                          "timestamp": {
                            "seconds": 1000000,
                            "nanos": 1000000
                          },
                          "value": "value"
                        },
                        {
                          "timestamp": {
                            "seconds": 1000000,
                            "nanos": 1000000
                          },
                          "value": "value"
                        }
                      ]
                    }
                  },
                  {
                    "channel": "channel",
                    "tags": {
                      "tags": "tags"
                    },
                    "points": {
                      "type": "string",
                      "string": [
                        {
                          "timestamp": {
                            "seconds": 1000000,
                            "nanos": 1000000
                          },
                          "value": "value"
                        },
                        {
                          "timestamp": {
                            "seconds": 1000000,
                            "nanos": 1000000
                          },
                          "value": "value"
                        }
                      ]
                    }
                  }
                ],
                "dataSourceRid": "dataSourceRid"
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "batches": [
                    {
                      "channel": "channel",
                      "tags": {
                        "tags": "tags"
                      },
                      "points": {
                        "type": "string",
                        "string": [
                          {
                            "timestamp": {
                              "seconds": 1000000,
                              "nanos": 1000000
                            },
                            "value": "value"
                          },
                          {
                            "timestamp": {
                              "seconds": 1000000,
                              "nanos": 1000000
                            },
                            "value": "value"
                          }
                        ]
                      }
                    },
                    {
                      "channel": "channel",
                      "tags": {
                        "tags": "tags"
                      },
                      "points": {
                        "type": "string",
                        "string": [
                          {
                            "timestamp": {
                              "seconds": 1000000,
                              "nanos": 1000000
                            },
                            "value": "value"
                          },
                          {
                            "timestamp": {
                              "seconds": 1000000,
                              "nanos": 1000000
                            },
                            "value": "value"
                          }
                        ]
                      }
                    }
                  ],
                  "dataSourceRid": "dataSourceRid"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "write-telegraf-batches",
          "method": "POST",
          "id": "writeTelegrafBatches",
          "originalEndpointId": "endpoint_NominalChannelWriter.writeTelegrafBatches",
          "name": "Write Telegraf Batches",
          "path": {
            "pathParameters": [
              {
                "key": "dataSourceRid",
                "type": {
                  "type": "id",
                  "value": "type_NominalDataSource:NominalDataSourceRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/storage/writer/v1"
              },
              {
                "type": "literal",
                "value": "/telegraf/"
              },
              {
                "type": "pathParameter",
                "value": "dataSourceRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_NominalChannelWriter:WriteTelegrafBatchesRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/storage/writer/v1/telegraf/dataSourceRid",
              "pathParameters": {
                "dataSourceRid": "dataSourceRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "metrics": [
                  {
                    "fields": {
                      "fields": {
                        "key": "value"
                      }
                    },
                    "name": "name",
                    "tags": {
                      "tags": "tags"
                    },
                    "timestamp": {
                      "key": "value"
                    }
                  },
                  {
                    "fields": {
                      "fields": {
                        "key": "value"
                      }
                    },
                    "name": "name",
                    "tags": {
                      "tags": "tags"
                    },
                    "timestamp": {
                      "key": "value"
                    }
                  }
                ]
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "metrics": [
                    {
                      "fields": {
                        "fields": {
                          "key": "value"
                        }
                      },
                      "name": "name",
                      "tags": {
                        "tags": "tags"
                      },
                      "timestamp": {
                        "key": "value"
                      }
                    },
                    {
                      "fields": {
                        "fields": {
                          "key": "value"
                        }
                      },
                      "name": "name",
                      "tags": {
                        "tags": "tags"
                      },
                      "timestamp": {
                        "key": "value"
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_NominalChannelWriter:WriteTelegrafBatchesRequest",
        "type_NominalChannelWriter:TelegrafMetric",
        "type_NominalChannelWriter:WriteBatchesRequest",
        "type_NominalChannelWriter:RecordsBatch",
        "type_NominalChannelWriter:Points",
        "type_NominalChannelWriter:StringPoint",
        "type_NominalChannelWriter:DoublePoint",
        "type_NominalChannelWriter:MeasurementName",
        "type_NominalChannelWriter:Field"
      ],
      "subpackages": [],
      "urlSlug": "nominal-channel-writer",
      "description": "Write data points to Nominal data sources.",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_NominalDataSource": {
      "subpackageId": "subpackage_NominalDataSource",
      "name": "NominalDataSource",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create",
          "method": "POST",
          "id": "create",
          "originalEndpointId": "endpoint_NominalDataSource.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/storage/data-source/v1"
              },
              {
                "type": "literal",
                "value": "/"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_NominalDataSource:CreateNominalDataSourceRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_NominalDataSource:NominalDataSource"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/storage/data-source/v1/",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "id": "id"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "id": "id",
                "description": "description",
                "dataLastWrittenAt": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": "id"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "id": "id",
                  "description": "description",
                  "dataLastWrittenAt": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get",
          "method": "POST",
          "id": "batchGet",
          "originalEndpointId": "endpoint_NominalDataSource.batchGet",
          "name": "Batch Get",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/storage/data-source/v1"
              },
              {
                "type": "literal",
                "value": "/batch-get"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_NominalDataSource:NominalDataSourceRid"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_NominalDataSource:NominalDataSource"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/storage/data-source/v1/batch-get",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": ["string"],
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "id": "id",
                  "description": "description",
                  "dataLastWrittenAt": "2024-01-15T09:30:00Z"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": ["string"]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "id": "id",
                    "description": "description",
                    "dataLastWrittenAt": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-last-written-timestamp",
          "method": "PUT",
          "id": "updateLastWrittenTimestamp",
          "originalEndpointId": "endpoint_NominalDataSource.updateLastWrittenTimestamp",
          "name": "Update Last Written Timestamp",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_NominalDataSource:NominalDataSourceRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/storage/data-source/v1"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/last-written"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "default": "1970-01-01T00:00:00.000Z"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/storage/data-source/v1/rid/last-written",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": "2024-01-15T09:30:00Z",
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": "2024-01-15T09:30:00Z"
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_NominalDataSource:NominalDataSourceRid",
        "type_NominalDataSource:NominalDataSourceId",
        "type_NominalDataSource:NominalDataSource",
        "type_NominalDataSource:CreateNominalDataSourceRequest"
      ],
      "subpackages": [],
      "urlSlug": "nominal-data-source",
      "description": "Manages data sources (logical groupings of series) that are stored by Nominal.",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_NominalSeries": {
      "subpackageId": "subpackage_NominalSeries",
      "name": "NominalSeries",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get",
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_NominalSeries.get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_NominalSeries:NominalSeriesRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/storage/series/v1"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_NominalSeries:NominalSeries"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/storage/series/v1/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "type": "DOUBLE",
                "dataSourceRid": "dataSourceRid",
                "channel": "channel",
                "tags": {
                  "tags": "tags"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "type": "DOUBLE",
                  "dataSourceRid": "dataSourceRid",
                  "channel": "channel",
                  "tags": {
                    "tags": "tags"
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get",
          "method": "POST",
          "id": "batchGet",
          "originalEndpointId": "endpoint_NominalSeries.batchGet",
          "name": "Batch Get",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/storage/series/v1"
              },
              {
                "type": "literal",
                "value": "/batch-get"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_NominalSeries:NominalSeriesRid"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_NominalSeries:NominalSeries"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/storage/series/v1/batch-get",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": ["string"],
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "type": "DOUBLE",
                  "dataSourceRid": "dataSourceRid",
                  "channel": "channel",
                  "tags": {
                    "tags": "tags"
                  }
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": ["string"]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "type": "DOUBLE",
                    "dataSourceRid": "dataSourceRid",
                    "channel": "channel",
                    "tags": {
                      "tags": "tags"
                    }
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-or-get",
          "method": "POST",
          "id": "createOrGet",
          "originalEndpointId": "endpoint_NominalSeries.createOrGet",
          "name": "Create Or Get",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/storage/series/v1"
              },
              {
                "type": "literal",
                "value": "/"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_NominalSeries:CreateSeriesRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_NominalSeries:NominalSeries"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/storage/series/v1/",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "type": "DOUBLE",
                "dataSourceRid": "dataSourceRid",
                "channel": "channel",
                "tags": {
                  "tags": "tags"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "type": "DOUBLE",
                "dataSourceRid": "dataSourceRid",
                "channel": "channel",
                "tags": {
                  "tags": "tags"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "type": "DOUBLE",
                  "dataSourceRid": "dataSourceRid",
                  "channel": "channel",
                  "tags": {
                    "tags": "tags"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "type": "DOUBLE",
                  "dataSourceRid": "dataSourceRid",
                  "channel": "channel",
                  "tags": {
                    "tags": "tags"
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-create-or-get",
          "method": "POST",
          "id": "batchCreateOrGet",
          "originalEndpointId": "endpoint_NominalSeries.batchCreateOrGet",
          "name": "Batch Create Or Get",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/storage/series/v1"
              },
              {
                "type": "literal",
                "value": "/batch-create"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_NominalSeries:CreateSeriesRequest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_NominalSeries:NominalSeries"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/storage/series/v1/batch-create",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": [
                {
                  "type": "DOUBLE",
                  "dataSourceRid": "dataSourceRid",
                  "channel": "channel",
                  "tags": {
                    "tags": "tags"
                  }
                },
                {
                  "type": "DOUBLE",
                  "dataSourceRid": "dataSourceRid",
                  "channel": "channel",
                  "tags": {
                    "tags": "tags"
                  }
                }
              ],
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "type": "DOUBLE",
                  "dataSourceRid": "dataSourceRid",
                  "channel": "channel",
                  "tags": {
                    "tags": "tags"
                  }
                },
                {
                  "rid": "rid",
                  "type": "DOUBLE",
                  "dataSourceRid": "dataSourceRid",
                  "channel": "channel",
                  "tags": {
                    "tags": "tags"
                  }
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": [
                  {
                    "type": "DOUBLE",
                    "dataSourceRid": "dataSourceRid",
                    "channel": "channel",
                    "tags": {
                      "tags": "tags"
                    }
                  },
                  {
                    "type": "DOUBLE",
                    "dataSourceRid": "dataSourceRid",
                    "channel": "channel",
                    "tags": {
                      "tags": "tags"
                    }
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "type": "DOUBLE",
                    "dataSourceRid": "dataSourceRid",
                    "channel": "channel",
                    "tags": {
                      "tags": "tags"
                    }
                  },
                  {
                    "rid": "rid",
                    "type": "DOUBLE",
                    "dataSourceRid": "dataSourceRid",
                    "channel": "channel",
                    "tags": {
                      "tags": "tags"
                    }
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search",
          "method": "POST",
          "id": "search",
          "originalEndpointId": "endpoint_NominalSeries.search",
          "name": "Search",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/storage/series/v1"
              },
              {
                "type": "literal",
                "value": "/search"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_NominalSeries:SearchSeriesRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_NominalSeries:SearchSeriesResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/storage/series/v1/search",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "channel": "channel",
                "dataSourceRid": "dataSourceRid",
                "tags": {
                  "tags": "tags"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "series": [
                  {
                    "rid": "rid",
                    "type": "DOUBLE",
                    "dataSourceRid": "dataSourceRid",
                    "channel": "channel",
                    "tags": {
                      "tags": "tags"
                    }
                  },
                  {
                    "rid": "rid",
                    "type": "DOUBLE",
                    "dataSourceRid": "dataSourceRid",
                    "channel": "channel",
                    "tags": {
                      "tags": "tags"
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "channel": "channel",
                  "dataSourceRid": "dataSourceRid",
                  "tags": {
                    "tags": "tags"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "series": [
                    {
                      "rid": "rid",
                      "type": "DOUBLE",
                      "dataSourceRid": "dataSourceRid",
                      "channel": "channel",
                      "tags": {
                        "tags": "tags"
                      }
                    },
                    {
                      "rid": "rid",
                      "type": "DOUBLE",
                      "dataSourceRid": "dataSourceRid",
                      "channel": "channel",
                      "tags": {
                        "tags": "tags"
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_NominalSeries:Channel",
        "type_NominalSeries:NominalSeriesRid",
        "type_NominalSeries:NominalDataType",
        "type_NominalSeries:CreateSeriesRequest",
        "type_NominalSeries:NominalSeries",
        "type_NominalSeries:SearchSeriesRequest",
        "type_NominalSeries:SearchSeriesResponse"
      ],
      "subpackages": [],
      "urlSlug": "nominal-series",
      "description": "Create and fetch series stored by Nominal",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Notebook": {
      "subpackageId": "subpackage_Notebook",
      "name": "Notebook",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create",
          "method": "POST",
          "id": "create",
          "originalEndpointId": "endpoint_Notebook.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/notebook"
              },
              {
                "type": "literal",
                "value": "/"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Notebook:CreateNotebookRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Notebook:Notebook"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/notebook/",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "title": "title",
                "description": "description",
                "isDraft": true,
                "stateAsJson": "stateAsJson",
                "layout": {
                  "type": "v1",
                  "v1": {
                    "rootPanel": {
                      "type": "viz",
                      "viz": {
                        "type": "v1",
                        "v1": {
                          "id": "id",
                          "vizId": "vizId",
                          "hideLegend": true
                        }
                      }
                    }
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "snapshotRid": "snapshotRid",
                "snapshotAuthorRid": "snapshotAuthorRid",
                "snapshotCreatedAt": "2024-01-15T09:30:00Z",
                "metadata": {
                  "runRid": "runRid",
                  "dataScope": {
                    "type": "runRids",
                    "runRids": ["dataScope"]
                  },
                  "notebookType": "WORKBOOK",
                  "title": "title",
                  "description": "description",
                  "isDraft": true,
                  "isArchived": true,
                  "lock": {
                    "isLocked": true,
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "updatedByRid": "updatedByRid"
                  },
                  "createdByRid": "createdByRid",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"]
                },
                "stateAsJson": "stateAsJson",
                "charts": [
                  {
                    "rid": "rid",
                    "version": 1,
                    "overlays": {
                      "key": "value"
                    }
                  },
                  {
                    "rid": "rid",
                    "version": 1,
                    "overlays": {
                      "key": "value"
                    }
                  }
                ],
                "layout": {
                  "type": "v1",
                  "v1": {
                    "rootPanel": {
                      "type": "viz",
                      "viz": {
                        "type": "v1",
                        "v1": {
                          "id": "id",
                          "vizId": "vizId",
                          "hideLegend": true
                        }
                      }
                    }
                  }
                },
                "content": {
                  "channelVariables": {
                    "channelVariables": {
                      "displayName": "displayName",
                      "variableName": "variableName",
                      "computeSpec": {
                        "type": "v1",
                        "v1": "computeSpec"
                      }
                    }
                  },
                  "charts": {
                    "charts": {
                      "type": "timeSeries",
                      "timeSeries": {
                        "type": "v1",
                        "v1": {
                          "rows": [
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            },
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            }
                          ],
                          "comparisonRunGroups": [
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [],
                              "color": "color"
                            },
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [],
                              "color": "color"
                            }
                          ],
                          "events": [
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            },
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            }
                          ],
                          "title": "title",
                          "valueAxes": [
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true
                              },
                              "range": {},
                              "limit": {},
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            },
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true
                              },
                              "range": {},
                              "limit": {},
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            }
                          ],
                          "thresholds": []
                        }
                      }
                    }
                  }
                },
                "contentV2": {
                  "type": "workbook",
                  "workbook": {
                    "channelVariables": {
                      "channelVariables": {
                        "displayName": "displayName",
                        "variableName": "variableName",
                        "computeSpec": {
                          "type": "v1",
                          "v1": "computeSpec"
                        }
                      }
                    },
                    "charts": {
                      "charts": {
                        "type": "timeSeries",
                        "timeSeries": {
                          "type": "v1",
                          "v1": {
                            "rows": [
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              },
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              }
                            ],
                            "comparisonRunGroups": [
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [],
                                "color": "color"
                              },
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [],
                                "color": "color"
                              }
                            ],
                            "events": [
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              },
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              }
                            ],
                            "title": "title",
                            "valueAxes": [
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              },
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              }
                            ],
                            "thresholds": []
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "title",
                  "description": "description",
                  "isDraft": true,
                  "stateAsJson": "stateAsJson",
                  "layout": {
                    "type": "v1",
                    "v1": {
                      "rootPanel": {
                        "type": "viz",
                        "viz": {
                          "type": "v1",
                          "v1": {
                            "id": "id",
                            "vizId": "vizId",
                            "hideLegend": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "snapshotRid": "snapshotRid",
                  "snapshotAuthorRid": "snapshotAuthorRid",
                  "snapshotCreatedAt": "2024-01-15T09:30:00Z",
                  "metadata": {
                    "runRid": "runRid",
                    "dataScope": {
                      "type": "runRids",
                      "runRids": ["dataScope"]
                    },
                    "notebookType": "WORKBOOK",
                    "title": "title",
                    "description": "description",
                    "isDraft": true,
                    "isArchived": true,
                    "lock": {
                      "isLocked": true,
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "updatedByRid": "updatedByRid"
                    },
                    "createdByRid": "createdByRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"]
                  },
                  "stateAsJson": "stateAsJson",
                  "charts": [
                    {
                      "rid": "rid",
                      "version": 1,
                      "overlays": {
                        "key": "value"
                      }
                    },
                    {
                      "rid": "rid",
                      "version": 1,
                      "overlays": {
                        "key": "value"
                      }
                    }
                  ],
                  "layout": {
                    "type": "v1",
                    "v1": {
                      "rootPanel": {
                        "type": "viz",
                        "viz": {
                          "type": "v1",
                          "v1": {
                            "id": "id",
                            "vizId": "vizId",
                            "hideLegend": true
                          }
                        }
                      }
                    }
                  },
                  "content": {
                    "channelVariables": {
                      "channelVariables": {
                        "displayName": "displayName",
                        "variableName": "variableName",
                        "computeSpec": {
                          "type": "v1",
                          "v1": "computeSpec"
                        }
                      }
                    },
                    "charts": {
                      "charts": {
                        "type": "timeSeries",
                        "timeSeries": {
                          "type": "v1",
                          "v1": {
                            "rows": [
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              },
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              }
                            ],
                            "comparisonRunGroups": [
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [],
                                "color": "color"
                              },
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [],
                                "color": "color"
                              }
                            ],
                            "events": [
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              },
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              }
                            ],
                            "title": "title",
                            "valueAxes": [
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              },
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              }
                            ],
                            "thresholds": []
                          }
                        }
                      }
                    }
                  },
                  "contentV2": {
                    "type": "workbook",
                    "workbook": {
                      "channelVariables": {
                        "channelVariables": {
                          "displayName": "displayName",
                          "variableName": "variableName",
                          "computeSpec": {
                            "type": "v1",
                            "v1": "computeSpec"
                          }
                        }
                      },
                      "charts": {
                        "charts": {
                          "type": "timeSeries",
                          "timeSeries": {
                            "type": "v1",
                            "v1": {
                              "rows": [
                                {
                                  "title": "title",
                                  "plots": [],
                                  "rowFlexSize": 1.1
                                },
                                {
                                  "title": "title",
                                  "plots": [],
                                  "rowFlexSize": 1.1
                                }
                              ],
                              "comparisonRunGroups": [
                                {
                                  "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "name": "name",
                                  "offset": {
                                    "value": 1000000,
                                    "unit": "DAYS"
                                  },
                                  "offsetAnchor": {
                                    "type": "run",
                                    "run": {}
                                  },
                                  "runs": [],
                                  "color": "color"
                                },
                                {
                                  "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "name": "name",
                                  "offset": {
                                    "value": 1000000,
                                    "unit": "DAYS"
                                  },
                                  "offsetAnchor": {
                                    "type": "run",
                                    "run": {}
                                  },
                                  "runs": [],
                                  "color": "color"
                                }
                              ],
                              "events": [
                                {
                                  "displayName": "displayName",
                                  "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "isPinned": true
                                },
                                {
                                  "displayName": "displayName",
                                  "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "isPinned": true
                                }
                              ],
                              "title": "title",
                              "valueAxes": [
                                {
                                  "id": "id",
                                  "title": "title",
                                  "displayOptions": {
                                    "showTitle": true
                                  },
                                  "range": {},
                                  "limit": {},
                                  "position": "LEFT",
                                  "domainType": "NUMERIC"
                                },
                                {
                                  "id": "id",
                                  "title": "title",
                                  "displayOptions": {
                                    "showTitle": true
                                  },
                                  "range": {},
                                  "limit": {},
                                  "position": "LEFT",
                                  "domainType": "NUMERIC"
                                }
                              ],
                              "thresholds": []
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update",
          "method": "PUT",
          "id": "update",
          "originalEndpointId": "endpoint_Notebook.update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:NotebookRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/notebook"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Notebook:UpdateNotebookRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Notebook:Notebook"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/notebook/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "stateAsJson": "stateAsJson",
                "layout": {
                  "type": "v1",
                  "v1": {
                    "rootPanel": {
                      "type": "viz",
                      "viz": {
                        "type": "v1",
                        "v1": {
                          "id": "id",
                          "vizId": "vizId",
                          "hideLegend": true
                        }
                      }
                    }
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "snapshotRid": "snapshotRid",
                "snapshotAuthorRid": "snapshotAuthorRid",
                "snapshotCreatedAt": "2024-01-15T09:30:00Z",
                "metadata": {
                  "runRid": "runRid",
                  "dataScope": {
                    "type": "runRids",
                    "runRids": ["dataScope"]
                  },
                  "notebookType": "WORKBOOK",
                  "title": "title",
                  "description": "description",
                  "isDraft": true,
                  "isArchived": true,
                  "lock": {
                    "isLocked": true,
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "updatedByRid": "updatedByRid"
                  },
                  "createdByRid": "createdByRid",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"]
                },
                "stateAsJson": "stateAsJson",
                "charts": [
                  {
                    "rid": "rid",
                    "version": 1,
                    "overlays": {
                      "key": "value"
                    }
                  },
                  {
                    "rid": "rid",
                    "version": 1,
                    "overlays": {
                      "key": "value"
                    }
                  }
                ],
                "layout": {
                  "type": "v1",
                  "v1": {
                    "rootPanel": {
                      "type": "viz",
                      "viz": {
                        "type": "v1",
                        "v1": {
                          "id": "id",
                          "vizId": "vizId",
                          "hideLegend": true
                        }
                      }
                    }
                  }
                },
                "content": {
                  "channelVariables": {
                    "channelVariables": {
                      "displayName": "displayName",
                      "variableName": "variableName",
                      "computeSpec": {
                        "type": "v1",
                        "v1": "computeSpec"
                      }
                    }
                  },
                  "charts": {
                    "charts": {
                      "type": "timeSeries",
                      "timeSeries": {
                        "type": "v1",
                        "v1": {
                          "rows": [
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            },
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            }
                          ],
                          "comparisonRunGroups": [
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [],
                              "color": "color"
                            },
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [],
                              "color": "color"
                            }
                          ],
                          "events": [
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            },
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            }
                          ],
                          "title": "title",
                          "valueAxes": [
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true
                              },
                              "range": {},
                              "limit": {},
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            },
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true
                              },
                              "range": {},
                              "limit": {},
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            }
                          ],
                          "thresholds": []
                        }
                      }
                    }
                  }
                },
                "contentV2": {
                  "type": "workbook",
                  "workbook": {
                    "channelVariables": {
                      "channelVariables": {
                        "displayName": "displayName",
                        "variableName": "variableName",
                        "computeSpec": {
                          "type": "v1",
                          "v1": "computeSpec"
                        }
                      }
                    },
                    "charts": {
                      "charts": {
                        "type": "timeSeries",
                        "timeSeries": {
                          "type": "v1",
                          "v1": {
                            "rows": [
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              },
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              }
                            ],
                            "comparisonRunGroups": [
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [],
                                "color": "color"
                              },
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [],
                                "color": "color"
                              }
                            ],
                            "events": [
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              },
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              }
                            ],
                            "title": "title",
                            "valueAxes": [
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              },
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              }
                            ],
                            "thresholds": []
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "stateAsJson": "stateAsJson",
                  "layout": {
                    "type": "v1",
                    "v1": {
                      "rootPanel": {
                        "type": "viz",
                        "viz": {
                          "type": "v1",
                          "v1": {
                            "id": "id",
                            "vizId": "vizId",
                            "hideLegend": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "snapshotRid": "snapshotRid",
                  "snapshotAuthorRid": "snapshotAuthorRid",
                  "snapshotCreatedAt": "2024-01-15T09:30:00Z",
                  "metadata": {
                    "runRid": "runRid",
                    "dataScope": {
                      "type": "runRids",
                      "runRids": ["dataScope"]
                    },
                    "notebookType": "WORKBOOK",
                    "title": "title",
                    "description": "description",
                    "isDraft": true,
                    "isArchived": true,
                    "lock": {
                      "isLocked": true,
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "updatedByRid": "updatedByRid"
                    },
                    "createdByRid": "createdByRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"]
                  },
                  "stateAsJson": "stateAsJson",
                  "charts": [
                    {
                      "rid": "rid",
                      "version": 1,
                      "overlays": {
                        "key": "value"
                      }
                    },
                    {
                      "rid": "rid",
                      "version": 1,
                      "overlays": {
                        "key": "value"
                      }
                    }
                  ],
                  "layout": {
                    "type": "v1",
                    "v1": {
                      "rootPanel": {
                        "type": "viz",
                        "viz": {
                          "type": "v1",
                          "v1": {
                            "id": "id",
                            "vizId": "vizId",
                            "hideLegend": true
                          }
                        }
                      }
                    }
                  },
                  "content": {
                    "channelVariables": {
                      "channelVariables": {
                        "displayName": "displayName",
                        "variableName": "variableName",
                        "computeSpec": {
                          "type": "v1",
                          "v1": "computeSpec"
                        }
                      }
                    },
                    "charts": {
                      "charts": {
                        "type": "timeSeries",
                        "timeSeries": {
                          "type": "v1",
                          "v1": {
                            "rows": [
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              },
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              }
                            ],
                            "comparisonRunGroups": [
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [],
                                "color": "color"
                              },
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [],
                                "color": "color"
                              }
                            ],
                            "events": [
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              },
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              }
                            ],
                            "title": "title",
                            "valueAxes": [
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              },
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              }
                            ],
                            "thresholds": []
                          }
                        }
                      }
                    }
                  },
                  "contentV2": {
                    "type": "workbook",
                    "workbook": {
                      "channelVariables": {
                        "channelVariables": {
                          "displayName": "displayName",
                          "variableName": "variableName",
                          "computeSpec": {
                            "type": "v1",
                            "v1": "computeSpec"
                          }
                        }
                      },
                      "charts": {
                        "charts": {
                          "type": "timeSeries",
                          "timeSeries": {
                            "type": "v1",
                            "v1": {
                              "rows": [
                                {
                                  "title": "title",
                                  "plots": [],
                                  "rowFlexSize": 1.1
                                },
                                {
                                  "title": "title",
                                  "plots": [],
                                  "rowFlexSize": 1.1
                                }
                              ],
                              "comparisonRunGroups": [
                                {
                                  "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "name": "name",
                                  "offset": {
                                    "value": 1000000,
                                    "unit": "DAYS"
                                  },
                                  "offsetAnchor": {
                                    "type": "run",
                                    "run": {}
                                  },
                                  "runs": [],
                                  "color": "color"
                                },
                                {
                                  "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "name": "name",
                                  "offset": {
                                    "value": 1000000,
                                    "unit": "DAYS"
                                  },
                                  "offsetAnchor": {
                                    "type": "run",
                                    "run": {}
                                  },
                                  "runs": [],
                                  "color": "color"
                                }
                              ],
                              "events": [
                                {
                                  "displayName": "displayName",
                                  "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "isPinned": true
                                },
                                {
                                  "displayName": "displayName",
                                  "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "isPinned": true
                                }
                              ],
                              "title": "title",
                              "valueAxes": [
                                {
                                  "id": "id",
                                  "title": "title",
                                  "displayOptions": {
                                    "showTitle": true
                                  },
                                  "range": {},
                                  "limit": {},
                                  "position": "LEFT",
                                  "domainType": "NUMERIC"
                                },
                                {
                                  "id": "id",
                                  "title": "title",
                                  "displayOptions": {
                                    "showTitle": true
                                  },
                                  "range": {},
                                  "limit": {},
                                  "position": "LEFT",
                                  "domainType": "NUMERIC"
                                }
                              ],
                              "thresholds": []
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get",
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_Notebook.get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:NotebookRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/notebook"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Notebook:Notebook"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/notebook/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "snapshotRid": "snapshotRid",
                "snapshotAuthorRid": "snapshotAuthorRid",
                "snapshotCreatedAt": "2024-01-15T09:30:00Z",
                "metadata": {
                  "runRid": "runRid",
                  "dataScope": {
                    "type": "runRids",
                    "runRids": ["dataScope"]
                  },
                  "notebookType": "WORKBOOK",
                  "title": "title",
                  "description": "description",
                  "isDraft": true,
                  "isArchived": true,
                  "lock": {
                    "isLocked": true,
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "updatedByRid": "updatedByRid"
                  },
                  "createdByRid": "createdByRid",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"]
                },
                "stateAsJson": "stateAsJson",
                "charts": [
                  {
                    "rid": "rid",
                    "version": 1,
                    "overlays": {
                      "key": "value"
                    }
                  },
                  {
                    "rid": "rid",
                    "version": 1,
                    "overlays": {
                      "key": "value"
                    }
                  }
                ],
                "layout": {
                  "type": "v1",
                  "v1": {
                    "rootPanel": {
                      "type": "viz",
                      "viz": {
                        "type": "v1",
                        "v1": {
                          "id": "id",
                          "vizId": "vizId",
                          "hideLegend": true
                        }
                      }
                    }
                  }
                },
                "content": {
                  "channelVariables": {
                    "channelVariables": {
                      "displayName": "displayName",
                      "variableName": "variableName",
                      "computeSpec": {
                        "type": "v1",
                        "v1": "computeSpec"
                      }
                    }
                  },
                  "charts": {
                    "charts": {
                      "type": "timeSeries",
                      "timeSeries": {
                        "type": "v1",
                        "v1": {
                          "rows": [
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            },
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            }
                          ],
                          "comparisonRunGroups": [
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [],
                              "color": "color"
                            },
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [],
                              "color": "color"
                            }
                          ],
                          "events": [
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            },
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            }
                          ],
                          "title": "title",
                          "valueAxes": [
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true
                              },
                              "range": {},
                              "limit": {},
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            },
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true
                              },
                              "range": {},
                              "limit": {},
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            }
                          ],
                          "thresholds": []
                        }
                      }
                    }
                  }
                },
                "contentV2": {
                  "type": "workbook",
                  "workbook": {
                    "channelVariables": {
                      "channelVariables": {
                        "displayName": "displayName",
                        "variableName": "variableName",
                        "computeSpec": {
                          "type": "v1",
                          "v1": "computeSpec"
                        }
                      }
                    },
                    "charts": {
                      "charts": {
                        "type": "timeSeries",
                        "timeSeries": {
                          "type": "v1",
                          "v1": {
                            "rows": [
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              },
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              }
                            ],
                            "comparisonRunGroups": [
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [],
                                "color": "color"
                              },
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [],
                                "color": "color"
                              }
                            ],
                            "events": [
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              },
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              }
                            ],
                            "title": "title",
                            "valueAxes": [
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              },
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              }
                            ],
                            "thresholds": []
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "snapshotRid": "snapshotRid",
                  "snapshotAuthorRid": "snapshotAuthorRid",
                  "snapshotCreatedAt": "2024-01-15T09:30:00Z",
                  "metadata": {
                    "runRid": "runRid",
                    "dataScope": {
                      "type": "runRids",
                      "runRids": ["dataScope"]
                    },
                    "notebookType": "WORKBOOK",
                    "title": "title",
                    "description": "description",
                    "isDraft": true,
                    "isArchived": true,
                    "lock": {
                      "isLocked": true,
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "updatedByRid": "updatedByRid"
                    },
                    "createdByRid": "createdByRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"]
                  },
                  "stateAsJson": "stateAsJson",
                  "charts": [
                    {
                      "rid": "rid",
                      "version": 1,
                      "overlays": {
                        "key": "value"
                      }
                    },
                    {
                      "rid": "rid",
                      "version": 1,
                      "overlays": {
                        "key": "value"
                      }
                    }
                  ],
                  "layout": {
                    "type": "v1",
                    "v1": {
                      "rootPanel": {
                        "type": "viz",
                        "viz": {
                          "type": "v1",
                          "v1": {
                            "id": "id",
                            "vizId": "vizId",
                            "hideLegend": true
                          }
                        }
                      }
                    }
                  },
                  "content": {
                    "channelVariables": {
                      "channelVariables": {
                        "displayName": "displayName",
                        "variableName": "variableName",
                        "computeSpec": {
                          "type": "v1",
                          "v1": "computeSpec"
                        }
                      }
                    },
                    "charts": {
                      "charts": {
                        "type": "timeSeries",
                        "timeSeries": {
                          "type": "v1",
                          "v1": {
                            "rows": [
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              },
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              }
                            ],
                            "comparisonRunGroups": [
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [],
                                "color": "color"
                              },
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [],
                                "color": "color"
                              }
                            ],
                            "events": [
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              },
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              }
                            ],
                            "title": "title",
                            "valueAxes": [
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              },
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              }
                            ],
                            "thresholds": []
                          }
                        }
                      }
                    }
                  },
                  "contentV2": {
                    "type": "workbook",
                    "workbook": {
                      "channelVariables": {
                        "channelVariables": {
                          "displayName": "displayName",
                          "variableName": "variableName",
                          "computeSpec": {
                            "type": "v1",
                            "v1": "computeSpec"
                          }
                        }
                      },
                      "charts": {
                        "charts": {
                          "type": "timeSeries",
                          "timeSeries": {
                            "type": "v1",
                            "v1": {
                              "rows": [
                                {
                                  "title": "title",
                                  "plots": [],
                                  "rowFlexSize": 1.1
                                },
                                {
                                  "title": "title",
                                  "plots": [],
                                  "rowFlexSize": 1.1
                                }
                              ],
                              "comparisonRunGroups": [
                                {
                                  "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "name": "name",
                                  "offset": {
                                    "value": 1000000,
                                    "unit": "DAYS"
                                  },
                                  "offsetAnchor": {
                                    "type": "run",
                                    "run": {}
                                  },
                                  "runs": [],
                                  "color": "color"
                                },
                                {
                                  "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "name": "name",
                                  "offset": {
                                    "value": 1000000,
                                    "unit": "DAYS"
                                  },
                                  "offsetAnchor": {
                                    "type": "run",
                                    "run": {}
                                  },
                                  "runs": [],
                                  "color": "color"
                                }
                              ],
                              "events": [
                                {
                                  "displayName": "displayName",
                                  "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "isPinned": true
                                },
                                {
                                  "displayName": "displayName",
                                  "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "isPinned": true
                                }
                              ],
                              "title": "title",
                              "valueAxes": [
                                {
                                  "id": "id",
                                  "title": "title",
                                  "displayOptions": {
                                    "showTitle": true
                                  },
                                  "range": {},
                                  "limit": {},
                                  "position": "LEFT",
                                  "domainType": "NUMERIC"
                                },
                                {
                                  "id": "id",
                                  "title": "title",
                                  "displayOptions": {
                                    "showTitle": true
                                  },
                                  "range": {},
                                  "limit": {},
                                  "position": "LEFT",
                                  "domainType": "NUMERIC"
                                }
                              ],
                              "thresholds": []
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get",
          "method": "POST",
          "id": "batchGet",
          "originalEndpointId": "endpoint_Notebook.batchGet",
          "name": "Batch Get",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/notebook"
              },
              {
                "type": "literal",
                "value": "/batch-get"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:NotebookRid"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Notebook:Notebook"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/notebook/batch-get",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": ["string"],
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "snapshotRid": "snapshotRid",
                  "snapshotAuthorRid": "snapshotAuthorRid",
                  "snapshotCreatedAt": "2024-01-15T09:30:00Z",
                  "metadata": {
                    "runRid": "runRid",
                    "dataScope": {
                      "type": "runRids",
                      "runRids": ["dataScope"]
                    },
                    "notebookType": "WORKBOOK",
                    "title": "title",
                    "description": "description",
                    "isDraft": true,
                    "isArchived": true,
                    "lock": {
                      "isLocked": true,
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "updatedByRid": "updatedByRid"
                    },
                    "createdByRid": "createdByRid",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"]
                  },
                  "stateAsJson": "stateAsJson",
                  "charts": [
                    {
                      "rid": "rid",
                      "version": 1,
                      "overlays": {
                        "key": "value"
                      }
                    },
                    {
                      "rid": "rid",
                      "version": 1,
                      "overlays": {
                        "key": "value"
                      }
                    }
                  ],
                  "layout": {
                    "type": "v1",
                    "v1": {
                      "rootPanel": {
                        "type": "viz",
                        "viz": {
                          "type": "v1",
                          "v1": {
                            "id": "id",
                            "vizId": "vizId",
                            "hideLegend": true
                          }
                        }
                      }
                    }
                  },
                  "content": {
                    "channelVariables": {
                      "channelVariables": {
                        "displayName": "displayName",
                        "variableName": "variableName",
                        "computeSpec": {
                          "type": "v1",
                          "v1": "computeSpec"
                        }
                      }
                    },
                    "charts": {
                      "charts": {
                        "type": "timeSeries",
                        "timeSeries": {
                          "type": "v1",
                          "v1": {
                            "rows": [
                              {
                                "plots": [],
                                "rowFlexSize": 1.1
                              },
                              {
                                "plots": [],
                                "rowFlexSize": 1.1
                              }
                            ],
                            "comparisonRunGroups": [],
                            "events": [
                              {
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              },
                              {
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              }
                            ],
                            "title": "title",
                            "valueAxes": [],
                            "thresholds": []
                          }
                        }
                      }
                    }
                  },
                  "contentV2": {
                    "type": "workbook",
                    "workbook": {
                      "channelVariables": {
                        "channelVariables": {
                          "displayName": "displayName",
                          "variableName": "variableName",
                          "computeSpec": {
                            "type": "v1",
                            "v1": "computeSpec"
                          }
                        }
                      },
                      "charts": {
                        "charts": {
                          "type": "timeSeries",
                          "timeSeries": {
                            "type": "v1",
                            "v1": {
                              "rows": [
                                {
                                  "plots": [],
                                  "rowFlexSize": 1.1
                                },
                                {
                                  "plots": [],
                                  "rowFlexSize": 1.1
                                }
                              ],
                              "comparisonRunGroups": [],
                              "events": [
                                {
                                  "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "isPinned": true
                                },
                                {
                                  "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "isPinned": true
                                }
                              ],
                              "title": "title",
                              "valueAxes": [],
                              "thresholds": []
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": ["string"]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "snapshotRid": "snapshotRid",
                    "snapshotAuthorRid": "snapshotAuthorRid",
                    "snapshotCreatedAt": "2024-01-15T09:30:00Z",
                    "metadata": {
                      "runRid": "runRid",
                      "dataScope": {
                        "type": "runRids",
                        "runRids": ["dataScope"]
                      },
                      "notebookType": "WORKBOOK",
                      "title": "title",
                      "description": "description",
                      "isDraft": true,
                      "isArchived": true,
                      "lock": {
                        "isLocked": true,
                        "updatedAt": "2024-01-15T09:30:00Z",
                        "updatedByRid": "updatedByRid"
                      },
                      "createdByRid": "createdByRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"]
                    },
                    "stateAsJson": "stateAsJson",
                    "charts": [
                      {
                        "rid": "rid",
                        "version": 1,
                        "overlays": {
                          "key": "value"
                        }
                      },
                      {
                        "rid": "rid",
                        "version": 1,
                        "overlays": {
                          "key": "value"
                        }
                      }
                    ],
                    "layout": {
                      "type": "v1",
                      "v1": {
                        "rootPanel": {
                          "type": "viz",
                          "viz": {
                            "type": "v1",
                            "v1": {
                              "id": "id",
                              "vizId": "vizId",
                              "hideLegend": true
                            }
                          }
                        }
                      }
                    },
                    "content": {
                      "channelVariables": {
                        "channelVariables": {
                          "displayName": "displayName",
                          "variableName": "variableName",
                          "computeSpec": {
                            "type": "v1",
                            "v1": "computeSpec"
                          }
                        }
                      },
                      "charts": {
                        "charts": {
                          "type": "timeSeries",
                          "timeSeries": {
                            "type": "v1",
                            "v1": {
                              "rows": [
                                {
                                  "plots": [],
                                  "rowFlexSize": 1.1
                                },
                                {
                                  "plots": [],
                                  "rowFlexSize": 1.1
                                }
                              ],
                              "comparisonRunGroups": [],
                              "events": [
                                {
                                  "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "isPinned": true
                                },
                                {
                                  "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                  "isPinned": true
                                }
                              ],
                              "title": "title",
                              "valueAxes": [],
                              "thresholds": []
                            }
                          }
                        }
                      }
                    },
                    "contentV2": {
                      "type": "workbook",
                      "workbook": {
                        "channelVariables": {
                          "channelVariables": {
                            "displayName": "displayName",
                            "variableName": "variableName",
                            "computeSpec": {
                              "type": "v1",
                              "v1": "computeSpec"
                            }
                          }
                        },
                        "charts": {
                          "charts": {
                            "type": "timeSeries",
                            "timeSeries": {
                              "type": "v1",
                              "v1": {
                                "rows": [
                                  {
                                    "plots": [],
                                    "rowFlexSize": 1.1
                                  },
                                  {
                                    "plots": [],
                                    "rowFlexSize": 1.1
                                  }
                                ],
                                "comparisonRunGroups": [],
                                "events": [
                                  {
                                    "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                    "isPinned": true
                                  },
                                  {
                                    "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                    "isPinned": true
                                  }
                                ],
                                "title": "title",
                                "valueAxes": [],
                                "thresholds": []
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-metadata",
          "method": "PUT",
          "id": "updateMetadata",
          "originalEndpointId": "endpoint_Notebook.updateMetadata",
          "name": "Update Metadata",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:NotebookRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/notebook"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/update-metadata"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Notebook:UpdateNotebookMetadataRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Notebook:NotebookMetadata"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/notebook/rid/update-metadata",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "runRid": "runRid",
                "dataScope": {
                  "type": "runRids",
                  "runRids": ["dataScope"]
                },
                "notebookType": "WORKBOOK",
                "title": "title",
                "description": "description",
                "isDraft": true,
                "isArchived": true,
                "lock": {
                  "isLocked": true,
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "updatedByRid": "updatedByRid"
                },
                "createdByRid": "createdByRid",
                "createdAt": "2024-01-15T09:30:00Z",
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "runRid": "runRid",
                  "dataScope": {
                    "type": "runRids",
                    "runRids": ["dataScope"]
                  },
                  "notebookType": "WORKBOOK",
                  "title": "title",
                  "description": "description",
                  "isDraft": true,
                  "isArchived": true,
                  "lock": {
                    "isLocked": true,
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "updatedByRid": "updatedByRid"
                  },
                  "createdByRid": "createdByRid",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-all-labels-and-properties",
          "method": "GET",
          "id": "getAllLabelsAndProperties",
          "originalEndpointId": "endpoint_Notebook.getAllLabelsAndProperties",
          "name": "Get All Labels And Properties",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/notebook"
              },
              {
                "type": "literal",
                "value": "/get-all-labels-properties"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Notebook:GetAllLabelsAndPropertiesResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/notebook/get-all-labels-properties",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "properties": {
                  "properties": ["properties"]
                },
                "labels": ["labels"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "properties": {
                    "properties": ["properties"]
                  },
                  "labels": ["labels"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search",
          "method": "POST",
          "id": "search",
          "originalEndpointId": "endpoint_Notebook.search",
          "name": "Search",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/notebook"
              },
              {
                "type": "literal",
                "value": "/search"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Notebook:SearchNotebooksRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Notebook:SearchNotebooksResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/notebook/search",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "query": {
                  "type": "and",
                  "and": [
                    {
                      "type": "and",
                      "and": [
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "and": [
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "showDrafts": true
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "rid": "rid",
                    "metadata": {
                      "runRid": "runRid",
                      "dataScope": {
                        "type": "runRids",
                        "runRids": ["dataScope"]
                      },
                      "notebookType": "WORKBOOK",
                      "title": "title",
                      "description": "description",
                      "isDraft": true,
                      "isArchived": true,
                      "lock": {
                        "isLocked": true,
                        "updatedAt": "2024-01-15T09:30:00Z",
                        "updatedByRid": "updatedByRid"
                      },
                      "createdByRid": "createdByRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"]
                    }
                  },
                  {
                    "rid": "rid",
                    "metadata": {
                      "runRid": "runRid",
                      "dataScope": {
                        "type": "runRids",
                        "runRids": ["dataScope"]
                      },
                      "notebookType": "WORKBOOK",
                      "title": "title",
                      "description": "description",
                      "isDraft": true,
                      "isArchived": true,
                      "lock": {
                        "isLocked": true,
                        "updatedAt": "2024-01-15T09:30:00Z",
                        "updatedByRid": "updatedByRid"
                      },
                      "createdByRid": "createdByRid",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"]
                    }
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "query": {
                    "type": "and",
                    "and": [
                      {
                        "type": "and",
                        "and": [
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "and",
                        "and": [
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "showDrafts": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "rid": "rid",
                      "metadata": {
                        "runRid": "runRid",
                        "dataScope": {
                          "type": "runRids",
                          "runRids": ["dataScope"]
                        },
                        "notebookType": "WORKBOOK",
                        "title": "title",
                        "description": "description",
                        "isDraft": true,
                        "isArchived": true,
                        "lock": {
                          "isLocked": true,
                          "updatedAt": "2024-01-15T09:30:00Z",
                          "updatedByRid": "updatedByRid"
                        },
                        "createdByRid": "createdByRid",
                        "createdAt": "2024-01-15T09:30:00Z",
                        "properties": {
                          "properties": "properties"
                        },
                        "labels": ["labels"]
                      }
                    },
                    {
                      "rid": "rid",
                      "metadata": {
                        "runRid": "runRid",
                        "dataScope": {
                          "type": "runRids",
                          "runRids": ["dataScope"]
                        },
                        "notebookType": "WORKBOOK",
                        "title": "title",
                        "description": "description",
                        "isDraft": true,
                        "isArchived": true,
                        "lock": {
                          "isLocked": true,
                          "updatedAt": "2024-01-15T09:30:00Z",
                          "updatedByRid": "updatedByRid"
                        },
                        "createdByRid": "createdByRid",
                        "createdAt": "2024-01-15T09:30:00Z",
                        "properties": {
                          "properties": "properties"
                        },
                        "labels": ["labels"]
                      }
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "lock",
          "method": "PUT",
          "id": "lock",
          "originalEndpointId": "endpoint_Notebook.lock",
          "name": "Lock",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:NotebookRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/notebook"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/lock"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/notebook/rid/lock",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "unlock",
          "method": "PUT",
          "id": "unlock",
          "originalEndpointId": "endpoint_Notebook.unlock",
          "name": "Unlock",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:NotebookRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/notebook"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/unlock"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/notebook/rid/unlock",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "archive",
          "method": "PUT",
          "id": "archive",
          "originalEndpointId": "endpoint_Notebook.archive",
          "name": "Archive",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:NotebookRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/notebook"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/archive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/notebook/rid/archive",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "unarchive",
          "method": "PUT",
          "id": "unarchive",
          "originalEndpointId": "endpoint_Notebook.unarchive",
          "name": "Unarchive",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:NotebookRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/notebook"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/unarchive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/notebook/rid/unarchive",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "delete",
          "method": "DELETE",
          "id": "delete",
          "originalEndpointId": "endpoint_Notebook.delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:NotebookRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v2/notebook"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v2/notebook/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Notebook:NotebookMetadata",
        "type_Notebook:NotebookType",
        "type_Notebook:NotebookDataScope",
        "type_Notebook:NotebookMetadataWithRid",
        "type_Notebook:Lock",
        "type_Notebook:Notebook",
        "type_Notebook:ChartWithOverlays",
        "type_Notebook:CreateNotebookRequest",
        "type_Notebook:UpdateNotebookRequest",
        "type_Notebook:SortByField",
        "type_Notebook:SortBy",
        "type_Notebook:SearchNotebooksQuery",
        "type_Notebook:SearchNotebooksRequest",
        "type_Notebook:SearchNotebooksResponse",
        "type_Notebook:GetAllLabelsAndPropertiesResponse",
        "type_Notebook:UpdateNotebookMetadataRequest"
      ],
      "subpackages": [],
      "urlSlug": "notebook",
      "description": "NotebookService manages workbooks (formerly known as notebooks).\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_OpenApiSpec": {
      "subpackageId": "subpackage_OpenApiSpec",
      "name": "OpenApiSpec",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-open-api",
          "method": "GET",
          "id": "getOpenApi",
          "originalEndpointId": "endpoint_OpenApiSpec.getOpenApi",
          "name": "Get Open Api",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/openapi"
              },
              {
                "type": "literal",
                "value": "/"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/openapi/",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": "string",
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": "string"
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [],
      "subpackages": [],
      "urlSlug": "open-api-spec",
      "description": "This service hosts the OpenAPI specification for the Nominal API.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_ResourceMetadata": {
      "subpackageId": "subpackage_ResourceMetadata",
      "name": "ResourceMetadata",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "list-properties-and-labels",
          "method": "POST",
          "id": "listPropertiesAndLabels",
          "originalEndpointId": "endpoint_ResourceMetadata.listPropertiesAndLabels",
          "name": "List Properties And Labels",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/metadata"
              },
              {
                "type": "literal",
                "value": "/list-properties-labels"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_ResourceMetadata:ListPropertiesAndLabelsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_ResourceMetadata:ListPropertiesAndLabelsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/metadata/list-properties-labels",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "properties": {
                  "properties": ["properties"]
                },
                "labels": ["labels"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "properties": {
                    "properties": ["properties"]
                  },
                  "labels": ["labels"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_ResourceMetadata:DateTimeField",
        "type_ResourceMetadata:Operator",
        "type_ResourceMetadata:TimestampField",
        "type_ResourceMetadata:StringField",
        "type_ResourceMetadata:LongField",
        "type_ResourceMetadata:SearchQuery",
        "type_ResourceMetadata:ResourceType",
        "type_ResourceMetadata:ListPropertiesAndLabelsResponse",
        "type_ResourceMetadata:ListPropertiesAndLabelsRequest"
      ],
      "subpackages": [],
      "urlSlug": "resource-metadata",
      "description": "The Resource Metadata Service provides common metadata about resources.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Run": {
      "subpackageId": "subpackage_Run",
      "name": "Run",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-run",
          "method": "POST",
          "id": "createRun",
          "originalEndpointId": "endpoint_Run.createRun",
          "name": "Create Run",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/run"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:CreateRunRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:Run"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/run",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "title": "title",
                "description": "description",
                "startTime": {
                  "secondsSinceEpoch": 1000000
                },
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "links": [
                  {
                    "url": "url"
                  },
                  {
                    "url": "url"
                  }
                ],
                "dataSources": {
                  "dataSources": {
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  }
                },
                "attachments": ["attachments"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "runNumber": 1000000,
                "runPrefix": "runPrefix",
                "title": "title",
                "description": "description",
                "authorRid": "authorRid",
                "startTime": {
                  "secondsSinceEpoch": 1000000,
                  "offsetNanoseconds": 1000000
                },
                "endTime": {
                  "secondsSinceEpoch": 1000000,
                  "offsetNanoseconds": 1000000
                },
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "links": [
                  {
                    "title": "title",
                    "url": "url"
                  },
                  {
                    "title": "title",
                    "url": "url"
                  }
                ],
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z",
                "dataSources": {
                  "dataSources": {
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "offset": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "refName": "refName",
                    "timestampType": "ABSOLUTE",
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  }
                },
                "attachments": ["attachments"],
                "asset": "asset"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "title",
                  "description": "description",
                  "startTime": {
                    "secondsSinceEpoch": 1000000
                  },
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "url": "url"
                    },
                    {
                      "url": "url"
                    }
                  ],
                  "dataSources": {
                    "dataSources": {
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  },
                  "attachments": ["attachments"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "runNumber": 1000000,
                  "runPrefix": "runPrefix",
                  "title": "title",
                  "description": "description",
                  "authorRid": "authorRid",
                  "startTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "endTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "title": "title",
                      "url": "url"
                    },
                    {
                      "title": "title",
                      "url": "url"
                    }
                  ],
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "dataSources": {
                    "dataSources": {
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "refName": "refName",
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  },
                  "attachments": ["attachments"],
                  "asset": "asset"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-run",
          "method": "PUT",
          "id": "updateRun",
          "originalEndpointId": "endpoint_Run.updateRun",
          "name": "Update Run",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:RunRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/run/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:UpdateRunRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:Run"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/run/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "runNumber": 1000000,
                "runPrefix": "runPrefix",
                "title": "title",
                "description": "description",
                "authorRid": "authorRid",
                "startTime": {
                  "secondsSinceEpoch": 1000000,
                  "offsetNanoseconds": 1000000
                },
                "endTime": {
                  "secondsSinceEpoch": 1000000,
                  "offsetNanoseconds": 1000000
                },
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "links": [
                  {
                    "title": "title",
                    "url": "url"
                  },
                  {
                    "title": "title",
                    "url": "url"
                  }
                ],
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z",
                "dataSources": {
                  "dataSources": {
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "offset": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "refName": "refName",
                    "timestampType": "ABSOLUTE",
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  }
                },
                "attachments": ["attachments"],
                "asset": "asset"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "runNumber": 1000000,
                  "runPrefix": "runPrefix",
                  "title": "title",
                  "description": "description",
                  "authorRid": "authorRid",
                  "startTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "endTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "title": "title",
                      "url": "url"
                    },
                    {
                      "title": "title",
                      "url": "url"
                    }
                  ],
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "dataSources": {
                    "dataSources": {
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "refName": "refName",
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  },
                  "attachments": ["attachments"],
                  "asset": "asset"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "add-data-sources-to-run",
          "method": "POST",
          "id": "addDataSourcesToRun",
          "originalEndpointId": "endpoint_Run.addDataSourcesToRun",
          "name": "Add Data Sources To Run",
          "path": {
            "pathParameters": [
              {
                "key": "runRid",
                "type": {
                  "type": "id",
                  "value": "type_common:RunRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/run/"
              },
              {
                "type": "pathParameter",
                "value": "runRid"
              },
              {
                "type": "literal",
                "value": "/data-sources"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_common:DataSourceRefName"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_Run:CreateRunDataSource"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:Run"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/run/runRid/data-sources",
              "pathParameters": {
                "runRid": "runRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "string": {
                  "dataSource": {
                    "type": "dataset",
                    "dataset": "dataSource"
                  },
                  "seriesTags": {
                    "seriesTags": "seriesTags"
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "runNumber": 1000000,
                "runPrefix": "runPrefix",
                "title": "title",
                "description": "description",
                "authorRid": "authorRid",
                "startTime": {
                  "secondsSinceEpoch": 1000000,
                  "offsetNanoseconds": 1000000
                },
                "endTime": {
                  "secondsSinceEpoch": 1000000,
                  "offsetNanoseconds": 1000000
                },
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "links": [
                  {
                    "title": "title",
                    "url": "url"
                  },
                  {
                    "title": "title",
                    "url": "url"
                  }
                ],
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z",
                "dataSources": {
                  "dataSources": {
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "offset": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "refName": "refName",
                    "timestampType": "ABSOLUTE",
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  }
                },
                "attachments": ["attachments"],
                "asset": "asset"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "string": {
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "runNumber": 1000000,
                  "runPrefix": "runPrefix",
                  "title": "title",
                  "description": "description",
                  "authorRid": "authorRid",
                  "startTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "endTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "title": "title",
                      "url": "url"
                    },
                    {
                      "title": "title",
                      "url": "url"
                    }
                  ],
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "dataSources": {
                    "dataSources": {
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "refName": "refName",
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  },
                  "attachments": ["attachments"],
                  "asset": "asset"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-or-update-run",
          "method": "POST",
          "id": "createOrUpdateRun",
          "originalEndpointId": "endpoint_Run.createOrUpdateRun",
          "name": "Create Or Update Run",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/run/create-or-update"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:CreateOrUpdateRunRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:Run"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/run/create-or-update",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "createRunRequest": {
                  "title": "title",
                  "description": "description",
                  "startTime": {
                    "secondsSinceEpoch": 1000000
                  },
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "url": "url"
                    },
                    {
                      "url": "url"
                    }
                  ],
                  "dataSources": {
                    "dataSources": {
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  },
                  "attachments": ["attachments"]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "runNumber": 1000000,
                "runPrefix": "runPrefix",
                "title": "title",
                "description": "description",
                "authorRid": "authorRid",
                "startTime": {
                  "secondsSinceEpoch": 1000000,
                  "offsetNanoseconds": 1000000
                },
                "endTime": {
                  "secondsSinceEpoch": 1000000,
                  "offsetNanoseconds": 1000000
                },
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "links": [
                  {
                    "title": "title",
                    "url": "url"
                  },
                  {
                    "title": "title",
                    "url": "url"
                  }
                ],
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z",
                "dataSources": {
                  "dataSources": {
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "offset": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "refName": "refName",
                    "timestampType": "ABSOLUTE",
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  }
                },
                "attachments": ["attachments"],
                "asset": "asset"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "createRunRequest": {
                    "title": "title",
                    "description": "description",
                    "startTime": {
                      "secondsSinceEpoch": 1000000
                    },
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "links": [
                      {
                        "url": "url"
                      },
                      {
                        "url": "url"
                      }
                    ],
                    "dataSources": {
                      "dataSources": {
                        "dataSource": {
                          "type": "dataset",
                          "dataset": "dataSource"
                        },
                        "seriesTags": {
                          "seriesTags": "seriesTags"
                        }
                      }
                    },
                    "attachments": ["attachments"]
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "runNumber": 1000000,
                  "runPrefix": "runPrefix",
                  "title": "title",
                  "description": "description",
                  "authorRid": "authorRid",
                  "startTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "endTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "title": "title",
                      "url": "url"
                    },
                    {
                      "title": "title",
                      "url": "url"
                    }
                  ],
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "dataSources": {
                    "dataSources": {
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "refName": "refName",
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  },
                  "attachments": ["attachments"],
                  "asset": "asset"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-run",
          "method": "GET",
          "id": "getRun",
          "originalEndpointId": "endpoint_Run.getRun",
          "name": "Get Run",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:RunRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/run/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:Run"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/run/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "runNumber": 1000000,
                "runPrefix": "runPrefix",
                "title": "title",
                "description": "description",
                "authorRid": "authorRid",
                "startTime": {
                  "secondsSinceEpoch": 1000000,
                  "offsetNanoseconds": 1000000
                },
                "endTime": {
                  "secondsSinceEpoch": 1000000,
                  "offsetNanoseconds": 1000000
                },
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "links": [
                  {
                    "title": "title",
                    "url": "url"
                  },
                  {
                    "title": "title",
                    "url": "url"
                  }
                ],
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z",
                "dataSources": {
                  "dataSources": {
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "offset": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "refName": "refName",
                    "timestampType": "ABSOLUTE",
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  }
                },
                "attachments": ["attachments"],
                "asset": "asset"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "runNumber": 1000000,
                  "runPrefix": "runPrefix",
                  "title": "title",
                  "description": "description",
                  "authorRid": "authorRid",
                  "startTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "endTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "title": "title",
                      "url": "url"
                    },
                    {
                      "title": "title",
                      "url": "url"
                    }
                  ],
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "dataSources": {
                    "dataSources": {
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "refName": "refName",
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  },
                  "attachments": ["attachments"],
                  "asset": "asset"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-run-with-data-review-metrics",
          "method": "GET",
          "id": "getRunWithDataReviewMetrics",
          "originalEndpointId": "endpoint_Run.getRunWithDataReviewMetrics",
          "name": "Get Run With Data Review Metrics",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:RunRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/run/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/with-data-review-metrics"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:RunWithDataReviewMetrics"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/run/rid/with-data-review-metrics",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "run": {
                  "rid": "rid",
                  "runNumber": 1000000,
                  "runPrefix": "runPrefix",
                  "title": "title",
                  "description": "description",
                  "authorRid": "authorRid",
                  "startTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "endTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "title": "title",
                      "url": "url"
                    },
                    {
                      "title": "title",
                      "url": "url"
                    }
                  ],
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "dataSources": {
                    "dataSources": {
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "refName": "refName",
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  },
                  "attachments": ["attachments"],
                  "asset": "asset"
                },
                "dataReviewMetrics": {
                  "checks": {
                    "pendingExecution": 1,
                    "executing": 1,
                    "passingAutomatic": 1,
                    "pendingReview": 1,
                    "closedWithIgnore": 1,
                    "closedWithFurtherAction": 1,
                    "failedToExecutePendingReview": 1,
                    "failedToExecuteClosedWithIgnore": 1,
                    "failedToExecuteClosedWithFurtherAction": 1
                  },
                  "alerts": {
                    "pendingReview": 1,
                    "closedWithIgnore": 1,
                    "closedWithFurtherAction": 1
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "run": {
                    "rid": "rid",
                    "runNumber": 1000000,
                    "runPrefix": "runPrefix",
                    "title": "title",
                    "description": "description",
                    "authorRid": "authorRid",
                    "startTime": {
                      "secondsSinceEpoch": 1000000,
                      "offsetNanoseconds": 1000000
                    },
                    "endTime": {
                      "secondsSinceEpoch": 1000000,
                      "offsetNanoseconds": 1000000
                    },
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "links": [
                      {
                        "title": "title",
                        "url": "url"
                      },
                      {
                        "title": "title",
                        "url": "url"
                      }
                    ],
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "dataSources": {
                      "dataSources": {
                        "dataSource": {
                          "type": "dataset",
                          "dataset": "dataSource"
                        },
                        "offset": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "refName": "refName",
                        "timestampType": "ABSOLUTE",
                        "seriesTags": {
                          "seriesTags": "seriesTags"
                        }
                      }
                    },
                    "attachments": ["attachments"],
                    "asset": "asset"
                  },
                  "dataReviewMetrics": {
                    "checks": {
                      "pendingExecution": 1,
                      "executing": 1,
                      "passingAutomatic": 1,
                      "pendingReview": 1,
                      "closedWithIgnore": 1,
                      "closedWithFurtherAction": 1,
                      "failedToExecutePendingReview": 1,
                      "failedToExecuteClosedWithIgnore": 1,
                      "failedToExecuteClosedWithFurtherAction": 1
                    },
                    "alerts": {
                      "pendingReview": 1,
                      "closedWithIgnore": 1,
                      "closedWithFurtherAction": 1
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-run-with-data-review-summary",
          "method": "GET",
          "id": "getRunWithDataReviewSummary",
          "originalEndpointId": "endpoint_Run.getRunWithDataReviewSummary",
          "name": "Get Run With Data Review Summary",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:RunRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/run/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/with-data-review-summary"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:RunWithDataReviewSummary"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/run/rid/with-data-review-summary",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "run": {
                  "rid": "rid",
                  "runNumber": 1000000,
                  "runPrefix": "runPrefix",
                  "title": "title",
                  "description": "description",
                  "authorRid": "authorRid",
                  "startTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "endTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "title": "title",
                      "url": "url"
                    },
                    {
                      "title": "title",
                      "url": "url"
                    }
                  ],
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "dataSources": {
                    "dataSources": {
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "refName": "refName",
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  },
                  "attachments": ["attachments"],
                  "asset": "asset"
                },
                "dataReviewSummary": {
                  "evaluationStatus": "NO_CHECKS_APPLIED",
                  "totalIssueCount": 1,
                  "reviewedIssueCount": 1,
                  "issuesWithFurtherActionCount": 1,
                  "executionErrorCount": 1
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "run": {
                    "rid": "rid",
                    "runNumber": 1000000,
                    "runPrefix": "runPrefix",
                    "title": "title",
                    "description": "description",
                    "authorRid": "authorRid",
                    "startTime": {
                      "secondsSinceEpoch": 1000000,
                      "offsetNanoseconds": 1000000
                    },
                    "endTime": {
                      "secondsSinceEpoch": 1000000,
                      "offsetNanoseconds": 1000000
                    },
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "links": [
                      {
                        "title": "title",
                        "url": "url"
                      },
                      {
                        "title": "title",
                        "url": "url"
                      }
                    ],
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "dataSources": {
                      "dataSources": {
                        "dataSource": {
                          "type": "dataset",
                          "dataset": "dataSource"
                        },
                        "offset": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "refName": "refName",
                        "timestampType": "ABSOLUTE",
                        "seriesTags": {
                          "seriesTags": "seriesTags"
                        }
                      }
                    },
                    "attachments": ["attachments"],
                    "asset": "asset"
                  },
                  "dataReviewSummary": {
                    "evaluationStatus": "NO_CHECKS_APPLIED",
                    "totalIssueCount": 1,
                    "reviewedIssueCount": 1,
                    "issuesWithFurtherActionCount": 1,
                    "executionErrorCount": 1
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-run-by-id",
          "method": "POST",
          "id": "getRunById",
          "originalEndpointId": "endpoint_Run.getRunById",
          "name": "Get Run By Id",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/run/by-id"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:GetRunByIdRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:Run"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/run/by-id",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "runNumber": 1000000
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "runNumber": 1000000,
                "runPrefix": "runPrefix",
                "title": "title",
                "description": "description",
                "authorRid": "authorRid",
                "startTime": {
                  "secondsSinceEpoch": 1000000,
                  "offsetNanoseconds": 1000000
                },
                "endTime": {
                  "secondsSinceEpoch": 1000000,
                  "offsetNanoseconds": 1000000
                },
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "links": [
                  {
                    "title": "title",
                    "url": "url"
                  },
                  {
                    "title": "title",
                    "url": "url"
                  }
                ],
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z",
                "dataSources": {
                  "dataSources": {
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "offset": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "refName": "refName",
                    "timestampType": "ABSOLUTE",
                    "seriesTags": {
                      "seriesTags": "seriesTags"
                    }
                  }
                },
                "attachments": ["attachments"],
                "asset": "asset"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "runNumber": 1000000
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "runNumber": 1000000,
                  "runPrefix": "runPrefix",
                  "title": "title",
                  "description": "description",
                  "authorRid": "authorRid",
                  "startTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "endTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "title": "title",
                      "url": "url"
                    },
                    {
                      "title": "title",
                      "url": "url"
                    }
                  ],
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "dataSources": {
                    "dataSources": {
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "refName": "refName",
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  },
                  "attachments": ["attachments"],
                  "asset": "asset"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-runs",
          "method": "POST",
          "id": "getRuns",
          "originalEndpointId": "endpoint_Run.getRuns",
          "name": "Get Runs",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/run/multiple"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_common:RunRid"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_common:RunRid"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_Run:Run"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/run/multiple",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": ["string"],
              "responseStatusCode": 200,
              "responseBody": {
                "string": {
                  "rid": "rid",
                  "runNumber": 1000000,
                  "runPrefix": "runPrefix",
                  "title": "title",
                  "description": "description",
                  "authorRid": "authorRid",
                  "startTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "endTime": {
                    "secondsSinceEpoch": 1000000,
                    "offsetNanoseconds": 1000000
                  },
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "links": [
                    {
                      "title": "title",
                      "url": "url"
                    },
                    {
                      "title": "title",
                      "url": "url"
                    }
                  ],
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "dataSources": {
                    "dataSources": {
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "offset": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "refName": "refName",
                      "timestampType": "ABSOLUTE",
                      "seriesTags": {
                        "seriesTags": "seriesTags"
                      }
                    }
                  },
                  "attachments": ["attachments"],
                  "asset": "asset"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": ["string"]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "string": {
                    "rid": "rid",
                    "runNumber": 1000000,
                    "runPrefix": "runPrefix",
                    "title": "title",
                    "description": "description",
                    "authorRid": "authorRid",
                    "startTime": {
                      "secondsSinceEpoch": 1000000,
                      "offsetNanoseconds": 1000000
                    },
                    "endTime": {
                      "secondsSinceEpoch": 1000000,
                      "offsetNanoseconds": 1000000
                    },
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "links": [
                      {
                        "title": "title",
                        "url": "url"
                      },
                      {
                        "title": "title",
                        "url": "url"
                      }
                    ],
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "dataSources": {
                      "dataSources": {
                        "dataSource": {
                          "type": "dataset",
                          "dataset": "dataSource"
                        },
                        "offset": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "refName": "refName",
                        "timestampType": "ABSOLUTE",
                        "seriesTags": {
                          "seriesTags": "seriesTags"
                        }
                      }
                    },
                    "attachments": ["attachments"],
                    "asset": "asset"
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-runs-by-asset",
          "method": "POST",
          "id": "getRunsByAsset",
          "originalEndpointId": "endpoint_Run.getRunsByAsset",
          "name": "Get Runs By Asset",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/run/by-asset"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:GetRunsByAssetRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:GetRunsByAssetResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/run/by-asset",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "asset": "asset"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "rid": "rid",
                    "runNumber": 1000000,
                    "runPrefix": "runPrefix",
                    "title": "title",
                    "description": "description",
                    "authorRid": "authorRid",
                    "startTime": {
                      "secondsSinceEpoch": 1000000,
                      "offsetNanoseconds": 1000000
                    },
                    "endTime": {
                      "secondsSinceEpoch": 1000000,
                      "offsetNanoseconds": 1000000
                    },
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "links": [
                      {
                        "title": "title",
                        "url": "url"
                      },
                      {
                        "title": "title",
                        "url": "url"
                      }
                    ],
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "dataSources": {
                      "dataSources": {
                        "dataSource": {
                          "type": "dataset",
                          "dataset": "dataSource"
                        },
                        "offset": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "refName": "refName",
                        "timestampType": "ABSOLUTE",
                        "seriesTags": {
                          "seriesTags": "seriesTags"
                        }
                      }
                    },
                    "attachments": ["attachments"],
                    "asset": "asset"
                  },
                  {
                    "rid": "rid",
                    "runNumber": 1000000,
                    "runPrefix": "runPrefix",
                    "title": "title",
                    "description": "description",
                    "authorRid": "authorRid",
                    "startTime": {
                      "secondsSinceEpoch": 1000000,
                      "offsetNanoseconds": 1000000
                    },
                    "endTime": {
                      "secondsSinceEpoch": 1000000,
                      "offsetNanoseconds": 1000000
                    },
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "links": [
                      {
                        "title": "title",
                        "url": "url"
                      },
                      {
                        "title": "title",
                        "url": "url"
                      }
                    ],
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "dataSources": {
                      "dataSources": {
                        "dataSource": {
                          "type": "dataset",
                          "dataset": "dataSource"
                        },
                        "offset": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "refName": "refName",
                        "timestampType": "ABSOLUTE",
                        "seriesTags": {
                          "seriesTags": "seriesTags"
                        }
                      }
                    },
                    "attachments": ["attachments"],
                    "asset": "asset"
                  }
                ],
                "nextPageToken": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "asset": "asset"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "rid": "rid",
                      "runNumber": 1000000,
                      "runPrefix": "runPrefix",
                      "title": "title",
                      "description": "description",
                      "authorRid": "authorRid",
                      "startTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "endTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "links": [
                        {
                          "title": "title",
                          "url": "url"
                        },
                        {
                          "title": "title",
                          "url": "url"
                        }
                      ],
                      "createdAt": "2024-01-15T09:30:00Z",
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "dataSources": {
                        "dataSources": {
                          "dataSource": {
                            "type": "dataset",
                            "dataset": "dataSource"
                          },
                          "offset": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "refName": "refName",
                          "timestampType": "ABSOLUTE",
                          "seriesTags": {
                            "seriesTags": "seriesTags"
                          }
                        }
                      },
                      "attachments": ["attachments"],
                      "asset": "asset"
                    },
                    {
                      "rid": "rid",
                      "runNumber": 1000000,
                      "runPrefix": "runPrefix",
                      "title": "title",
                      "description": "description",
                      "authorRid": "authorRid",
                      "startTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "endTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "links": [
                        {
                          "title": "title",
                          "url": "url"
                        },
                        {
                          "title": "title",
                          "url": "url"
                        }
                      ],
                      "createdAt": "2024-01-15T09:30:00Z",
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "dataSources": {
                        "dataSources": {
                          "dataSource": {
                            "type": "dataset",
                            "dataset": "dataSource"
                          },
                          "offset": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "refName": "refName",
                          "timestampType": "ABSOLUTE",
                          "seriesTags": {
                            "seriesTags": "seriesTags"
                          }
                        }
                      },
                      "attachments": ["attachments"],
                      "asset": "asset"
                    }
                  ],
                  "nextPageToken": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-all-runs-properties-and-labels",
          "method": "GET",
          "id": "getAllRunsPropertiesAndLabels",
          "originalEndpointId": "endpoint_Run.getAllRunsPropertiesAndLabels",
          "name": "Get All Runs Properties And Labels",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/all-runs-properties-labels"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:AllRunsPropertiesAndLabelsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/all-runs-properties-labels",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "properties": {
                  "properties": ["properties"]
                },
                "labels": ["labels"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "properties": {
                    "properties": ["properties"]
                  },
                  "labels": ["labels"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-runs",
          "method": "POST",
          "id": "searchRuns",
          "originalEndpointId": "endpoint_Run.searchRuns",
          "name": "Search Runs",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/search-runs"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:SearchRunsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:SearchRunsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/search-runs",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "sort": {
                  "isDescending": true,
                  "field": "CREATED_AT"
                },
                "pageSize": 1,
                "query": {
                  "type": "startTimeInclusive",
                  "startTimeInclusive": {
                    "secondsSinceEpoch": 1000000
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "rid": "rid",
                    "runNumber": 1000000,
                    "runPrefix": "runPrefix",
                    "title": "title",
                    "description": "description",
                    "authorRid": "authorRid",
                    "startTime": {
                      "secondsSinceEpoch": 1000000,
                      "offsetNanoseconds": 1000000
                    },
                    "endTime": {
                      "secondsSinceEpoch": 1000000,
                      "offsetNanoseconds": 1000000
                    },
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "links": [
                      {
                        "title": "title",
                        "url": "url"
                      },
                      {
                        "title": "title",
                        "url": "url"
                      }
                    ],
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "dataSources": {
                      "dataSources": {
                        "dataSource": {
                          "type": "dataset",
                          "dataset": "dataSource"
                        },
                        "offset": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "refName": "refName",
                        "timestampType": "ABSOLUTE",
                        "seriesTags": {
                          "seriesTags": "seriesTags"
                        }
                      }
                    },
                    "attachments": ["attachments"],
                    "asset": "asset"
                  },
                  {
                    "rid": "rid",
                    "runNumber": 1000000,
                    "runPrefix": "runPrefix",
                    "title": "title",
                    "description": "description",
                    "authorRid": "authorRid",
                    "startTime": {
                      "secondsSinceEpoch": 1000000,
                      "offsetNanoseconds": 1000000
                    },
                    "endTime": {
                      "secondsSinceEpoch": 1000000,
                      "offsetNanoseconds": 1000000
                    },
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "links": [
                      {
                        "title": "title",
                        "url": "url"
                      },
                      {
                        "title": "title",
                        "url": "url"
                      }
                    ],
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "dataSources": {
                      "dataSources": {
                        "dataSource": {
                          "type": "dataset",
                          "dataset": "dataSource"
                        },
                        "offset": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "refName": "refName",
                        "timestampType": "ABSOLUTE",
                        "seriesTags": {
                          "seriesTags": "seriesTags"
                        }
                      }
                    },
                    "attachments": ["attachments"],
                    "asset": "asset"
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "sort": {
                    "isDescending": true,
                    "field": "CREATED_AT"
                  },
                  "pageSize": 1,
                  "query": {
                    "type": "startTimeInclusive",
                    "startTimeInclusive": {
                      "secondsSinceEpoch": 1000000
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "rid": "rid",
                      "runNumber": 1000000,
                      "runPrefix": "runPrefix",
                      "title": "title",
                      "description": "description",
                      "authorRid": "authorRid",
                      "startTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "endTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "links": [
                        {
                          "title": "title",
                          "url": "url"
                        },
                        {
                          "title": "title",
                          "url": "url"
                        }
                      ],
                      "createdAt": "2024-01-15T09:30:00Z",
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "dataSources": {
                        "dataSources": {
                          "dataSource": {
                            "type": "dataset",
                            "dataset": "dataSource"
                          },
                          "offset": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "refName": "refName",
                          "timestampType": "ABSOLUTE",
                          "seriesTags": {
                            "seriesTags": "seriesTags"
                          }
                        }
                      },
                      "attachments": ["attachments"],
                      "asset": "asset"
                    },
                    {
                      "rid": "rid",
                      "runNumber": 1000000,
                      "runPrefix": "runPrefix",
                      "title": "title",
                      "description": "description",
                      "authorRid": "authorRid",
                      "startTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "endTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "links": [
                        {
                          "title": "title",
                          "url": "url"
                        },
                        {
                          "title": "title",
                          "url": "url"
                        }
                      ],
                      "createdAt": "2024-01-15T09:30:00Z",
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "dataSources": {
                        "dataSources": {
                          "dataSource": {
                            "type": "dataset",
                            "dataset": "dataSource"
                          },
                          "offset": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "refName": "refName",
                          "timestampType": "ABSOLUTE",
                          "seriesTags": {
                            "seriesTags": "seriesTags"
                          }
                        }
                      },
                      "attachments": ["attachments"],
                      "asset": "asset"
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-runs-with-data-review-metrics",
          "method": "POST",
          "id": "searchRunsWithDataReviewMetrics",
          "originalEndpointId": "endpoint_Run.searchRunsWithDataReviewMetrics",
          "name": "Search Runs With Data Review Metrics",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/search-runs-with-data-review-metrics"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:SearchRunsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:SearchRunsWithDataReviewMetricsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/search-runs-with-data-review-metrics",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "sort": {
                  "isDescending": true,
                  "field": "CREATED_AT"
                },
                "pageSize": 1,
                "query": {
                  "type": "startTimeInclusive",
                  "startTimeInclusive": {
                    "secondsSinceEpoch": 1000000
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "run": {
                      "rid": "rid",
                      "runNumber": 1000000,
                      "runPrefix": "runPrefix",
                      "title": "title",
                      "description": "description",
                      "authorRid": "authorRid",
                      "startTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "endTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "links": [
                        {
                          "title": "title",
                          "url": "url"
                        },
                        {
                          "title": "title",
                          "url": "url"
                        }
                      ],
                      "createdAt": "2024-01-15T09:30:00Z",
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "dataSources": {
                        "dataSources": {
                          "dataSource": {
                            "type": "dataset",
                            "dataset": "dataSource"
                          },
                          "offset": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "refName": "refName",
                          "timestampType": "ABSOLUTE",
                          "seriesTags": {
                            "seriesTags": "seriesTags"
                          }
                        }
                      },
                      "attachments": ["attachments"],
                      "asset": "asset"
                    },
                    "dataReviewMetrics": {
                      "checks": {
                        "pendingExecution": 1,
                        "executing": 1,
                        "passingAutomatic": 1,
                        "pendingReview": 1,
                        "closedWithIgnore": 1,
                        "closedWithFurtherAction": 1,
                        "failedToExecutePendingReview": 1,
                        "failedToExecuteClosedWithIgnore": 1,
                        "failedToExecuteClosedWithFurtherAction": 1
                      },
                      "alerts": {
                        "pendingReview": 1,
                        "closedWithIgnore": 1,
                        "closedWithFurtherAction": 1
                      }
                    }
                  },
                  {
                    "run": {
                      "rid": "rid",
                      "runNumber": 1000000,
                      "runPrefix": "runPrefix",
                      "title": "title",
                      "description": "description",
                      "authorRid": "authorRid",
                      "startTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "endTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "links": [
                        {
                          "title": "title",
                          "url": "url"
                        },
                        {
                          "title": "title",
                          "url": "url"
                        }
                      ],
                      "createdAt": "2024-01-15T09:30:00Z",
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "dataSources": {
                        "dataSources": {
                          "dataSource": {
                            "type": "dataset",
                            "dataset": "dataSource"
                          },
                          "offset": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "refName": "refName",
                          "timestampType": "ABSOLUTE",
                          "seriesTags": {
                            "seriesTags": "seriesTags"
                          }
                        }
                      },
                      "attachments": ["attachments"],
                      "asset": "asset"
                    },
                    "dataReviewMetrics": {
                      "checks": {
                        "pendingExecution": 1,
                        "executing": 1,
                        "passingAutomatic": 1,
                        "pendingReview": 1,
                        "closedWithIgnore": 1,
                        "closedWithFurtherAction": 1,
                        "failedToExecutePendingReview": 1,
                        "failedToExecuteClosedWithIgnore": 1,
                        "failedToExecuteClosedWithFurtherAction": 1
                      },
                      "alerts": {
                        "pendingReview": 1,
                        "closedWithIgnore": 1,
                        "closedWithFurtherAction": 1
                      }
                    }
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "sort": {
                    "isDescending": true,
                    "field": "CREATED_AT"
                  },
                  "pageSize": 1,
                  "query": {
                    "type": "startTimeInclusive",
                    "startTimeInclusive": {
                      "secondsSinceEpoch": 1000000
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "run": {
                        "rid": "rid",
                        "runNumber": 1000000,
                        "runPrefix": "runPrefix",
                        "title": "title",
                        "description": "description",
                        "authorRid": "authorRid",
                        "startTime": {
                          "secondsSinceEpoch": 1000000,
                          "offsetNanoseconds": 1000000
                        },
                        "endTime": {
                          "secondsSinceEpoch": 1000000,
                          "offsetNanoseconds": 1000000
                        },
                        "properties": {
                          "properties": "properties"
                        },
                        "labels": ["labels"],
                        "links": [
                          {
                            "title": "title",
                            "url": "url"
                          },
                          {
                            "title": "title",
                            "url": "url"
                          }
                        ],
                        "createdAt": "2024-01-15T09:30:00Z",
                        "updatedAt": "2024-01-15T09:30:00Z",
                        "dataSources": {
                          "dataSources": {
                            "dataSource": {
                              "type": "dataset",
                              "dataset": "dataSource"
                            },
                            "offset": {
                              "seconds": 1000000,
                              "nanos": 1000000,
                              "picos": 1
                            },
                            "refName": "refName",
                            "timestampType": "ABSOLUTE",
                            "seriesTags": {
                              "seriesTags": "seriesTags"
                            }
                          }
                        },
                        "attachments": ["attachments"],
                        "asset": "asset"
                      },
                      "dataReviewMetrics": {
                        "checks": {
                          "pendingExecution": 1,
                          "executing": 1,
                          "passingAutomatic": 1,
                          "pendingReview": 1,
                          "closedWithIgnore": 1,
                          "closedWithFurtherAction": 1,
                          "failedToExecutePendingReview": 1,
                          "failedToExecuteClosedWithIgnore": 1,
                          "failedToExecuteClosedWithFurtherAction": 1
                        },
                        "alerts": {
                          "pendingReview": 1,
                          "closedWithIgnore": 1,
                          "closedWithFurtherAction": 1
                        }
                      }
                    },
                    {
                      "run": {
                        "rid": "rid",
                        "runNumber": 1000000,
                        "runPrefix": "runPrefix",
                        "title": "title",
                        "description": "description",
                        "authorRid": "authorRid",
                        "startTime": {
                          "secondsSinceEpoch": 1000000,
                          "offsetNanoseconds": 1000000
                        },
                        "endTime": {
                          "secondsSinceEpoch": 1000000,
                          "offsetNanoseconds": 1000000
                        },
                        "properties": {
                          "properties": "properties"
                        },
                        "labels": ["labels"],
                        "links": [
                          {
                            "title": "title",
                            "url": "url"
                          },
                          {
                            "title": "title",
                            "url": "url"
                          }
                        ],
                        "createdAt": "2024-01-15T09:30:00Z",
                        "updatedAt": "2024-01-15T09:30:00Z",
                        "dataSources": {
                          "dataSources": {
                            "dataSource": {
                              "type": "dataset",
                              "dataset": "dataSource"
                            },
                            "offset": {
                              "seconds": 1000000,
                              "nanos": 1000000,
                              "picos": 1
                            },
                            "refName": "refName",
                            "timestampType": "ABSOLUTE",
                            "seriesTags": {
                              "seriesTags": "seriesTags"
                            }
                          }
                        },
                        "attachments": ["attachments"],
                        "asset": "asset"
                      },
                      "dataReviewMetrics": {
                        "checks": {
                          "pendingExecution": 1,
                          "executing": 1,
                          "passingAutomatic": 1,
                          "pendingReview": 1,
                          "closedWithIgnore": 1,
                          "closedWithFurtherAction": 1,
                          "failedToExecutePendingReview": 1,
                          "failedToExecuteClosedWithIgnore": 1,
                          "failedToExecuteClosedWithFurtherAction": 1
                        },
                        "alerts": {
                          "pendingReview": 1,
                          "closedWithIgnore": 1,
                          "closedWithFurtherAction": 1
                        }
                      }
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-runs-with-data-review-summary",
          "method": "POST",
          "id": "searchRunsWithDataReviewSummary",
          "originalEndpointId": "endpoint_Run.searchRunsWithDataReviewSummary",
          "name": "Search Runs With Data Review Summary",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/search-runs-with-data-review-summary"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:SearchRunsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:SearchRunsWithDataReviewSummaryResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/search-runs-with-data-review-summary",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "sort": {
                  "isDescending": true,
                  "field": "CREATED_AT"
                },
                "pageSize": 1,
                "query": {
                  "type": "startTimeInclusive",
                  "startTimeInclusive": {
                    "secondsSinceEpoch": 1000000
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "run": {
                      "rid": "rid",
                      "runNumber": 1000000,
                      "runPrefix": "runPrefix",
                      "title": "title",
                      "description": "description",
                      "authorRid": "authorRid",
                      "startTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "endTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "links": [
                        {
                          "title": "title",
                          "url": "url"
                        },
                        {
                          "title": "title",
                          "url": "url"
                        }
                      ],
                      "createdAt": "2024-01-15T09:30:00Z",
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "dataSources": {
                        "dataSources": {
                          "dataSource": {
                            "type": "dataset",
                            "dataset": "dataSource"
                          },
                          "offset": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "refName": "refName",
                          "timestampType": "ABSOLUTE",
                          "seriesTags": {
                            "seriesTags": "seriesTags"
                          }
                        }
                      },
                      "attachments": ["attachments"],
                      "asset": "asset"
                    },
                    "dataReviewSummary": {
                      "evaluationStatus": "NO_CHECKS_APPLIED",
                      "totalIssueCount": 1,
                      "reviewedIssueCount": 1,
                      "issuesWithFurtherActionCount": 1,
                      "executionErrorCount": 1
                    }
                  },
                  {
                    "run": {
                      "rid": "rid",
                      "runNumber": 1000000,
                      "runPrefix": "runPrefix",
                      "title": "title",
                      "description": "description",
                      "authorRid": "authorRid",
                      "startTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "endTime": {
                        "secondsSinceEpoch": 1000000,
                        "offsetNanoseconds": 1000000
                      },
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "links": [
                        {
                          "title": "title",
                          "url": "url"
                        },
                        {
                          "title": "title",
                          "url": "url"
                        }
                      ],
                      "createdAt": "2024-01-15T09:30:00Z",
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "dataSources": {
                        "dataSources": {
                          "dataSource": {
                            "type": "dataset",
                            "dataset": "dataSource"
                          },
                          "offset": {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          "refName": "refName",
                          "timestampType": "ABSOLUTE",
                          "seriesTags": {
                            "seriesTags": "seriesTags"
                          }
                        }
                      },
                      "attachments": ["attachments"],
                      "asset": "asset"
                    },
                    "dataReviewSummary": {
                      "evaluationStatus": "NO_CHECKS_APPLIED",
                      "totalIssueCount": 1,
                      "reviewedIssueCount": 1,
                      "issuesWithFurtherActionCount": 1,
                      "executionErrorCount": 1
                    }
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "sort": {
                    "isDescending": true,
                    "field": "CREATED_AT"
                  },
                  "pageSize": 1,
                  "query": {
                    "type": "startTimeInclusive",
                    "startTimeInclusive": {
                      "secondsSinceEpoch": 1000000
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "run": {
                        "rid": "rid",
                        "runNumber": 1000000,
                        "runPrefix": "runPrefix",
                        "title": "title",
                        "description": "description",
                        "authorRid": "authorRid",
                        "startTime": {
                          "secondsSinceEpoch": 1000000,
                          "offsetNanoseconds": 1000000
                        },
                        "endTime": {
                          "secondsSinceEpoch": 1000000,
                          "offsetNanoseconds": 1000000
                        },
                        "properties": {
                          "properties": "properties"
                        },
                        "labels": ["labels"],
                        "links": [
                          {
                            "title": "title",
                            "url": "url"
                          },
                          {
                            "title": "title",
                            "url": "url"
                          }
                        ],
                        "createdAt": "2024-01-15T09:30:00Z",
                        "updatedAt": "2024-01-15T09:30:00Z",
                        "dataSources": {
                          "dataSources": {
                            "dataSource": {
                              "type": "dataset",
                              "dataset": "dataSource"
                            },
                            "offset": {
                              "seconds": 1000000,
                              "nanos": 1000000,
                              "picos": 1
                            },
                            "refName": "refName",
                            "timestampType": "ABSOLUTE",
                            "seriesTags": {
                              "seriesTags": "seriesTags"
                            }
                          }
                        },
                        "attachments": ["attachments"],
                        "asset": "asset"
                      },
                      "dataReviewSummary": {
                        "evaluationStatus": "NO_CHECKS_APPLIED",
                        "totalIssueCount": 1,
                        "reviewedIssueCount": 1,
                        "issuesWithFurtherActionCount": 1,
                        "executionErrorCount": 1
                      }
                    },
                    {
                      "run": {
                        "rid": "rid",
                        "runNumber": 1000000,
                        "runPrefix": "runPrefix",
                        "title": "title",
                        "description": "description",
                        "authorRid": "authorRid",
                        "startTime": {
                          "secondsSinceEpoch": 1000000,
                          "offsetNanoseconds": 1000000
                        },
                        "endTime": {
                          "secondsSinceEpoch": 1000000,
                          "offsetNanoseconds": 1000000
                        },
                        "properties": {
                          "properties": "properties"
                        },
                        "labels": ["labels"],
                        "links": [
                          {
                            "title": "title",
                            "url": "url"
                          },
                          {
                            "title": "title",
                            "url": "url"
                          }
                        ],
                        "createdAt": "2024-01-15T09:30:00Z",
                        "updatedAt": "2024-01-15T09:30:00Z",
                        "dataSources": {
                          "dataSources": {
                            "dataSource": {
                              "type": "dataset",
                              "dataset": "dataSource"
                            },
                            "offset": {
                              "seconds": 1000000,
                              "nanos": 1000000,
                              "picos": 1
                            },
                            "refName": "refName",
                            "timestampType": "ABSOLUTE",
                            "seriesTags": {
                              "seriesTags": "seriesTags"
                            }
                          }
                        },
                        "attachments": ["attachments"],
                        "asset": "asset"
                      },
                      "dataReviewSummary": {
                        "evaluationStatus": "NO_CHECKS_APPLIED",
                        "totalIssueCount": 1,
                        "reviewedIssueCount": 1,
                        "issuesWithFurtherActionCount": 1,
                        "executionErrorCount": 1
                      }
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "archive-run",
          "method": "PUT",
          "id": "archiveRun",
          "originalEndpointId": "endpoint_Run.archiveRun",
          "name": "Archive Run",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:RunRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/archive-run/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/archive-run/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": true,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": true
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-data-source-ref-name-and-type-list",
          "method": "GET",
          "id": "getDataSourceRefNameAndTypeList",
          "originalEndpointId": "endpoint_Run.getDataSourceRefNameAndTypeList",
          "name": "Get Data Source Ref Name And Type List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/data-source-ref-names-and-types"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_Run:RefNameAndType"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/data-source-ref-names-and-types",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "name": "name",
                  "type": "DATASET"
                },
                {
                  "name": "name",
                  "type": "DATASET"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "name": "name",
                    "type": "DATASET"
                  },
                  {
                    "name": "name",
                    "type": "DATASET"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-channels",
          "method": "POST",
          "id": "searchChannels",
          "originalEndpointId": "endpoint_Run.searchChannels",
          "name": "Search Channels",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:RunRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/run/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/search-channels"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:SearchRunChannelsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:SearchRunChannelsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/run/rid/search-channels",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "searchText": "searchText",
                "previouslySelectedChannels": {
                  "previouslySelectedChannels": ["previouslySelectedChannels"]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "name": "name",
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "unit": {
                      "name": "name",
                      "symbol": "symbol"
                    },
                    "description": "description",
                    "dataType": "DOUBLE"
                  },
                  {
                    "name": "name",
                    "dataSource": {
                      "type": "dataset",
                      "dataset": "dataSource"
                    },
                    "unit": {
                      "name": "name",
                      "symbol": "symbol"
                    },
                    "description": "description",
                    "dataType": "DOUBLE"
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "searchText": "searchText",
                  "previouslySelectedChannels": {
                    "previouslySelectedChannels": ["previouslySelectedChannels"]
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "name": "name",
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "unit": {
                        "name": "name",
                        "symbol": "symbol"
                      },
                      "description": "description",
                      "dataType": "DOUBLE"
                    },
                    {
                      "name": "name",
                      "dataSource": {
                        "type": "dataset",
                        "dataset": "dataSource"
                      },
                      "unit": {
                        "name": "name",
                        "symbol": "symbol"
                      },
                      "description": "description",
                      "dataType": "DOUBLE"
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-events",
          "method": "GET",
          "id": "getEvents",
          "originalEndpointId": "endpoint_Run.getEvents",
          "name": "Get Events",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:RunRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/run/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/events"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "nextPageToken",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_common:Token"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:GetEventsForRunPage"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/run/rid/events",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "events": ["events", "events"],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "events": ["events", "events"],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "publish-events",
          "method": "POST",
          "id": "publishEvents",
          "originalEndpointId": "endpoint_Run.publishEvents",
          "name": "Publish Events",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:RunRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/run/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/events"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:PublishEventsToRunRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/run/rid/events",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "events": ["events"]
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "events": ["events"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "delete-events-from-run",
          "method": "POST",
          "id": "deleteEventsFromRun",
          "originalEndpointId": "endpoint_Run.deleteEventsFromRun",
          "name": "Delete Events From Run",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:RunRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/run/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/delete-events"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:DeleteEventsFromRunRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/run/rid/delete-events",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "events": ["events"]
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "events": ["events"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-run-attachment",
          "method": "POST",
          "id": "updateRunAttachment",
          "originalEndpointId": "endpoint_Run.updateRunAttachment",
          "name": "Update Run Attachment",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_common:RunRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1"
              },
              {
                "type": "literal",
                "value": "/run/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/attachments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Run:UpdateAttachmentsRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/run/rid/attachments",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "attachmentsToAdd": ["attachmentsToAdd"],
                "attachmentsToRemove": ["attachmentsToRemove"]
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "attachmentsToAdd": ["attachmentsToAdd"],
                  "attachmentsToRemove": ["attachmentsToRemove"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Run:UtcTimestamp",
        "type_Run:WeakTimestampType",
        "type_Run:RefNameAndType",
        "type_Run:CreateRunDataSource",
        "type_Run:RunDataSource",
        "type_Run:RunDataReviewSummary",
        "type_Run:RunDataReviewEvaluationStatus",
        "type_Run:DataReviewCheckMetrics",
        "type_Run:DataReviewAlertMetrics",
        "type_Run:DataReviewMetrics",
        "type_Run:Run",
        "type_Run:RunWithDataReviewMetrics",
        "type_Run:RunWithDataReviewSummary",
        "type_Run:CreateRunRequest",
        "type_Run:UpdateRunRequest",
        "type_Run:CreateOrUpdateRunRequest",
        "type_Run:GetRunsByAssetRequest",
        "type_Run:GetRunsByAssetResponse",
        "type_Run:GetRunByIdRequest",
        "type_Run:SortOptions",
        "type_Run:SortField",
        "type_Run:SearchRunsRequest",
        "type_Run:DataSourceSeriesTag",
        "type_Run:SearchQuery",
        "type_Run:CheckAlertStatesFilter",
        "type_Run:SearchRunsResponse",
        "type_Run:SearchRunsWithDataReviewMetricsResponse",
        "type_Run:SearchRunsWithDataReviewSummaryResponse",
        "type_Run:AllRunsPropertiesAndLabelsResponse",
        "type_Run:Unit",
        "type_Run:SeriesDataType",
        "type_Run:ChannelMetadata",
        "type_Run:SearchRunChannelsRequest",
        "type_Run:SearchRunChannelsResponse",
        "type_Run:GetEventsForRunPage",
        "type_Run:PublishEventsToRunRequest",
        "type_Run:DeleteEventsFromRunRequest",
        "type_Run:UpdateAttachmentsRequest"
      ],
      "subpackages": [],
      "urlSlug": "run",
      "description": "Runs are collections of channels and metadata from one or more data sources, synchronized over a \nrange of real time, which represents a test event or simulation. These API endpoints let you\nmanage runs in the Nominal app.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Secret": {
      "subpackageId": "subpackage_Secret",
      "name": "Secret",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create",
          "method": "POST",
          "id": "create",
          "originalEndpointId": "endpoint_Secret.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/secrets/v1"
              },
              {
                "type": "literal",
                "value": "/secrets"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Secret:CreateSecretRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Secret:Secret"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/secrets/v1/secrets",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "name",
                "description": "description",
                "decryptedValue": "decryptedValue",
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "name": "name",
                "description": "description",
                "createdBy": "createdBy",
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "createdAt": "2024-01-15T09:30:00Z",
                "isArchived": true
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "name",
                  "description": "description",
                  "decryptedValue": "decryptedValue",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "name": "name",
                  "description": "description",
                  "createdBy": "createdBy",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "createdAt": "2024-01-15T09:30:00Z",
                  "isArchived": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get",
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_Secret.get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Secret:SecretRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/secrets/v1"
              },
              {
                "type": "literal",
                "value": "/secrets/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Secret:Secret"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/secrets/v1/secrets/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "name": "name",
                "description": "description",
                "createdBy": "createdBy",
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "createdAt": "2024-01-15T09:30:00Z",
                "isArchived": true
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "name": "name",
                  "description": "description",
                  "createdBy": "createdBy",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "createdAt": "2024-01-15T09:30:00Z",
                  "isArchived": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-batch",
          "method": "POST",
          "id": "getBatch",
          "originalEndpointId": "endpoint_Secret.getBatch",
          "name": "Get Batch",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/secrets/v1"
              },
              {
                "type": "literal",
                "value": "/secrets/batch"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Secret:GetSecretsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Secret:GetSecretsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/secrets/v1/secrets/batch",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "secretRids": ["secretRids"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "response": [
                  {
                    "rid": "rid",
                    "name": "name",
                    "description": "description",
                    "createdBy": "createdBy",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "createdAt": "2024-01-15T09:30:00Z",
                    "isArchived": true
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "secretRids": ["secretRids"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "response": [
                    {
                      "rid": "rid",
                      "name": "name",
                      "description": "description",
                      "createdBy": "createdBy",
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "createdAt": "2024-01-15T09:30:00Z",
                      "isArchived": true
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update",
          "method": "PUT",
          "id": "update",
          "originalEndpointId": "endpoint_Secret.update",
          "name": "Update",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Secret:SecretRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/secrets/v1"
              },
              {
                "type": "literal",
                "value": "/secrets/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Secret:UpdateSecretRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Secret:Secret"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/secrets/v1/secrets/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "name": "name",
                "description": "description",
                "createdBy": "createdBy",
                "properties": {
                  "properties": "properties"
                },
                "labels": ["labels"],
                "createdAt": "2024-01-15T09:30:00Z",
                "isArchived": true
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "name": "name",
                  "description": "description",
                  "createdBy": "createdBy",
                  "properties": {
                    "properties": "properties"
                  },
                  "labels": ["labels"],
                  "createdAt": "2024-01-15T09:30:00Z",
                  "isArchived": true
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "delete",
          "method": "DELETE",
          "id": "delete",
          "originalEndpointId": "endpoint_Secret.delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Secret:SecretRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/secrets/v1"
              },
              {
                "type": "literal",
                "value": "/secrets/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/secrets/v1/secrets/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "archive",
          "method": "PUT",
          "id": "archive",
          "originalEndpointId": "endpoint_Secret.archive",
          "name": "Archive",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Secret:SecretRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/secrets/v1"
              },
              {
                "type": "literal",
                "value": "/secrets/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/archive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/secrets/v1/secrets/rid/archive",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "unarchive",
          "method": "PUT",
          "id": "unarchive",
          "originalEndpointId": "endpoint_Secret.unarchive",
          "name": "Unarchive",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_Secret:SecretRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/secrets/v1"
              },
              {
                "type": "literal",
                "value": "/secrets/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/unarchive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/secrets/v1/secrets/rid/unarchive",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search",
          "method": "POST",
          "id": "search",
          "originalEndpointId": "endpoint_Secret.search",
          "name": "Search",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/secrets/v1"
              },
              {
                "type": "literal",
                "value": "/secrets/search"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Secret:SearchSecretsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Secret:SearchSecretsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/secrets/v1/secrets/search",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "query": {
                  "type": "searchText",
                  "searchText": "query"
                },
                "sort": {
                  "isDescending": true,
                  "field": "CREATED_AT"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "rid": "rid",
                    "name": "name",
                    "description": "description",
                    "createdBy": "createdBy",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "createdAt": "2024-01-15T09:30:00Z",
                    "isArchived": true
                  },
                  {
                    "rid": "rid",
                    "name": "name",
                    "description": "description",
                    "createdBy": "createdBy",
                    "properties": {
                      "properties": "properties"
                    },
                    "labels": ["labels"],
                    "createdAt": "2024-01-15T09:30:00Z",
                    "isArchived": true
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "query": {
                    "type": "searchText",
                    "searchText": "query"
                  },
                  "sort": {
                    "isDescending": true,
                    "field": "CREATED_AT"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "rid": "rid",
                      "name": "name",
                      "description": "description",
                      "createdBy": "createdBy",
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "createdAt": "2024-01-15T09:30:00Z",
                      "isArchived": true
                    },
                    {
                      "rid": "rid",
                      "name": "name",
                      "description": "description",
                      "createdBy": "createdBy",
                      "properties": {
                        "properties": "properties"
                      },
                      "labels": ["labels"],
                      "createdAt": "2024-01-15T09:30:00Z",
                      "isArchived": true
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Secret:SecretRid",
        "type_Secret:Token",
        "type_Secret:ArchivedStatus",
        "type_Secret:Secret",
        "type_Secret:PropertyName",
        "type_Secret:PropertyValue",
        "type_Secret:Property",
        "type_Secret:Label",
        "type_Secret:CreateSecretRequest",
        "type_Secret:UpdateSecretRequest",
        "type_Secret:GetSecretsRequest",
        "type_Secret:GetSecretsResponse",
        "type_Secret:SearchSecretsQuery",
        "type_Secret:SearchSecretsRequest",
        "type_Secret:SortOptions",
        "type_Secret:SortField",
        "type_Secret:SearchSecretsResponse"
      ],
      "subpackages": [],
      "urlSlug": "secret",
      "description": "The secrets service provides functionality for creating and retrieving customer secrets (e.g. influx passwords, API keys, etc)\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_SeriesArchetype": {
      "subpackageId": "subpackage_SeriesArchetype",
      "name": "SeriesArchetype",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get",
          "method": "POST",
          "id": "batchGet",
          "originalEndpointId": "endpoint_SeriesArchetype.batchGet",
          "name": "Batch Get",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/archetype/v1"
              },
              {
                "type": "literal",
                "value": "/series-archetype/batch-get"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesArchetype:BatchGetSeriesArchetypeRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesArchetype:BatchGetSeriesArchetypeResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/archetype/v1/series-archetype/batch-get",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "datasources": ["datasources"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "responses": {
                  "responses": [
                    {
                      "rid": "rid",
                      "channel": "channel",
                      "dataSourceRid": "dataSourceRid",
                      "locator": {
                        "type": "timescaleDb",
                        "timescaleDb": {
                          "table": "table",
                          "schema": "schema",
                          "column": "column",
                          "timeColumn": "timeColumn",
                          "type": "BOOLEAN"
                        }
                      },
                      "unit": "unit",
                      "description": "description",
                      "tags": {
                        "tags": "tags"
                      },
                      "seriesDataType": "DOUBLE"
                    }
                  ]
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "datasources": ["datasources"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "responses": {
                    "responses": [
                      {
                        "rid": "rid",
                        "channel": "channel",
                        "dataSourceRid": "dataSourceRid",
                        "locator": {
                          "type": "timescaleDb",
                          "timescaleDb": {
                            "table": "table",
                            "schema": "schema",
                            "column": "column",
                            "timeColumn": "timeColumn",
                            "type": "BOOLEAN"
                          }
                        },
                        "unit": "unit",
                        "description": "description",
                        "tags": {
                          "tags": "tags"
                        },
                        "seriesDataType": "DOUBLE"
                      }
                    ]
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create",
          "method": "POST",
          "id": "create",
          "originalEndpointId": "endpoint_SeriesArchetype.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/archetype/v1"
              },
              {
                "type": "literal",
                "value": "/series-archetype"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesArchetype:CreateSeriesArchetypeRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesArchetype:SeriesArchetype"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/archetype/v1/series-archetype",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "channel": "channel",
                "dataSourceRid": "dataSourceRid",
                "locator": {
                  "type": "timescaleDb",
                  "timescaleDb": {
                    "table": "table",
                    "schema": "schema",
                    "column": "column",
                    "timeColumn": "timeColumn",
                    "type": "BOOLEAN"
                  }
                },
                "tags": {
                  "tags": "tags"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "channel": "channel",
                "dataSourceRid": "dataSourceRid",
                "locator": {
                  "type": "timescaleDb",
                  "timescaleDb": {
                    "table": "table",
                    "schema": "schema",
                    "column": "column",
                    "timeColumn": "timeColumn",
                    "type": "BOOLEAN"
                  }
                },
                "unit": "unit",
                "description": "description",
                "tags": {
                  "tags": "tags"
                },
                "seriesDataType": "DOUBLE"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "channel": "channel",
                  "dataSourceRid": "dataSourceRid",
                  "locator": {
                    "type": "timescaleDb",
                    "timescaleDb": {
                      "table": "table",
                      "schema": "schema",
                      "column": "column",
                      "timeColumn": "timeColumn",
                      "type": "BOOLEAN"
                    }
                  },
                  "tags": {
                    "tags": "tags"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "channel": "channel",
                  "dataSourceRid": "dataSourceRid",
                  "locator": {
                    "type": "timescaleDb",
                    "timescaleDb": {
                      "table": "table",
                      "schema": "schema",
                      "column": "column",
                      "timeColumn": "timeColumn",
                      "type": "BOOLEAN"
                    }
                  },
                  "unit": "unit",
                  "description": "description",
                  "tags": {
                    "tags": "tags"
                  },
                  "seriesDataType": "DOUBLE"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-create",
          "method": "POST",
          "id": "batchCreate",
          "originalEndpointId": "endpoint_SeriesArchetype.batchCreate",
          "name": "Batch Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/archetype/v1"
              },
              {
                "type": "literal",
                "value": "/series-archetype/batch-create"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesArchetype:BatchCreateSeriesArchetypeRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesArchetype:BatchCreateSeriesArchetypeResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/archetype/v1/series-archetype/batch-create",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "requests": [
                  {
                    "channel": "channel",
                    "dataSourceRid": "dataSourceRid",
                    "locator": {
                      "type": "timescaleDb",
                      "timescaleDb": {
                        "table": "table",
                        "schema": "schema",
                        "column": "column",
                        "timeColumn": "timeColumn",
                        "type": "BOOLEAN"
                      }
                    },
                    "tags": {
                      "tags": "tags"
                    }
                  },
                  {
                    "channel": "channel",
                    "dataSourceRid": "dataSourceRid",
                    "locator": {
                      "type": "timescaleDb",
                      "timescaleDb": {
                        "table": "table",
                        "schema": "schema",
                        "column": "column",
                        "timeColumn": "timeColumn",
                        "type": "BOOLEAN"
                      }
                    },
                    "tags": {
                      "tags": "tags"
                    }
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "responses": [
                  {
                    "rid": "rid",
                    "channel": "channel",
                    "dataSourceRid": "dataSourceRid",
                    "locator": {
                      "type": "timescaleDb",
                      "timescaleDb": {
                        "table": "table",
                        "schema": "schema",
                        "column": "column",
                        "timeColumn": "timeColumn",
                        "type": "BOOLEAN"
                      }
                    },
                    "unit": "unit",
                    "description": "description",
                    "tags": {
                      "tags": "tags"
                    },
                    "seriesDataType": "DOUBLE"
                  },
                  {
                    "rid": "rid",
                    "channel": "channel",
                    "dataSourceRid": "dataSourceRid",
                    "locator": {
                      "type": "timescaleDb",
                      "timescaleDb": {
                        "table": "table",
                        "schema": "schema",
                        "column": "column",
                        "timeColumn": "timeColumn",
                        "type": "BOOLEAN"
                      }
                    },
                    "unit": "unit",
                    "description": "description",
                    "tags": {
                      "tags": "tags"
                    },
                    "seriesDataType": "DOUBLE"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "requests": [
                    {
                      "channel": "channel",
                      "dataSourceRid": "dataSourceRid",
                      "locator": {
                        "type": "timescaleDb",
                        "timescaleDb": {
                          "table": "table",
                          "schema": "schema",
                          "column": "column",
                          "timeColumn": "timeColumn",
                          "type": "BOOLEAN"
                        }
                      },
                      "tags": {
                        "tags": "tags"
                      }
                    },
                    {
                      "channel": "channel",
                      "dataSourceRid": "dataSourceRid",
                      "locator": {
                        "type": "timescaleDb",
                        "timescaleDb": {
                          "table": "table",
                          "schema": "schema",
                          "column": "column",
                          "timeColumn": "timeColumn",
                          "type": "BOOLEAN"
                        }
                      },
                      "tags": {
                        "tags": "tags"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "responses": [
                    {
                      "rid": "rid",
                      "channel": "channel",
                      "dataSourceRid": "dataSourceRid",
                      "locator": {
                        "type": "timescaleDb",
                        "timescaleDb": {
                          "table": "table",
                          "schema": "schema",
                          "column": "column",
                          "timeColumn": "timeColumn",
                          "type": "BOOLEAN"
                        }
                      },
                      "unit": "unit",
                      "description": "description",
                      "tags": {
                        "tags": "tags"
                      },
                      "seriesDataType": "DOUBLE"
                    },
                    {
                      "rid": "rid",
                      "channel": "channel",
                      "dataSourceRid": "dataSourceRid",
                      "locator": {
                        "type": "timescaleDb",
                        "timescaleDb": {
                          "table": "table",
                          "schema": "schema",
                          "column": "column",
                          "timeColumn": "timeColumn",
                          "type": "BOOLEAN"
                        }
                      },
                      "unit": "unit",
                      "description": "description",
                      "tags": {
                        "tags": "tags"
                      },
                      "seriesDataType": "DOUBLE"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get",
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_SeriesArchetype.get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_SeriesArchetype:SeriesArchetypeRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/archetype/v1"
              },
              {
                "type": "literal",
                "value": "/series-archetype/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesArchetype:SeriesArchetype"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/archetype/v1/series-archetype/rid",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "channel": "channel",
                "dataSourceRid": "dataSourceRid",
                "locator": {
                  "type": "timescaleDb",
                  "timescaleDb": {
                    "table": "table",
                    "schema": "schema",
                    "column": "column",
                    "timeColumn": "timeColumn",
                    "type": "BOOLEAN"
                  }
                },
                "unit": "unit",
                "description": "description",
                "tags": {
                  "tags": "tags"
                },
                "seriesDataType": "DOUBLE"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "channel": "channel",
                  "dataSourceRid": "dataSourceRid",
                  "locator": {
                    "type": "timescaleDb",
                    "timescaleDb": {
                      "table": "table",
                      "schema": "schema",
                      "column": "column",
                      "timeColumn": "timeColumn",
                      "type": "BOOLEAN"
                    }
                  },
                  "unit": "unit",
                  "description": "description",
                  "tags": {
                    "tags": "tags"
                  },
                  "seriesDataType": "DOUBLE"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-metadata",
          "method": "POST",
          "id": "updateMetadata",
          "originalEndpointId": "endpoint_SeriesArchetype.updateMetadata",
          "name": "Update Metadata",
          "path": {
            "pathParameters": [
              {
                "key": "rid",
                "type": {
                  "type": "id",
                  "value": "type_SeriesArchetype:SeriesArchetypeRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/archetype/v1"
              },
              {
                "type": "literal",
                "value": "/series-archetype/"
              },
              {
                "type": "pathParameter",
                "value": "rid"
              },
              {
                "type": "literal",
                "value": "/metadata"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesArchetype:UpdateSeriesArchetypeMetadataRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesArchetype:SeriesArchetype"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/archetype/v1/series-archetype/rid/metadata",
              "pathParameters": {
                "rid": "rid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "channel": "channel",
                "dataSourceRid": "dataSourceRid",
                "locator": {
                  "type": "timescaleDb",
                  "timescaleDb": {
                    "table": "table",
                    "schema": "schema",
                    "column": "column",
                    "timeColumn": "timeColumn",
                    "type": "BOOLEAN"
                  }
                },
                "unit": "unit",
                "description": "description",
                "tags": {
                  "tags": "tags"
                },
                "seriesDataType": "DOUBLE"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "channel": "channel",
                  "dataSourceRid": "dataSourceRid",
                  "locator": {
                    "type": "timescaleDb",
                    "timescaleDb": {
                      "table": "table",
                      "schema": "schema",
                      "column": "column",
                      "timeColumn": "timeColumn",
                      "type": "BOOLEAN"
                    }
                  },
                  "unit": "unit",
                  "description": "description",
                  "tags": {
                    "tags": "tags"
                  },
                  "seriesDataType": "DOUBLE"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_SeriesArchetype:LocatorTemplate",
        "type_SeriesArchetype:TimescaleDbLocatorTemplate",
        "type_SeriesArchetype:Influx2LocatorTemplate",
        "type_SeriesArchetype:Influx1LocatorTemplate",
        "type_SeriesArchetype:NominalLocatorTemplate",
        "type_SeriesArchetype:TimestreamLocatorTemplate",
        "type_SeriesArchetype:VisualCrossingLocatorTemplate",
        "type_SeriesArchetype:SeriesArchetypeRid",
        "type_SeriesArchetype:SeriesArchetype",
        "type_SeriesArchetype:UpdateSeriesArchetypeMetadataRequest",
        "type_SeriesArchetype:SeriesArchetypeName",
        "type_SeriesArchetype:BatchCreateSeriesArchetypeRequest",
        "type_SeriesArchetype:BatchCreateSeriesArchetypeResponse",
        "type_SeriesArchetype:CreateSeriesArchetypeRequest",
        "type_SeriesArchetype:BatchGetSeriesArchetypeRequest",
        "type_SeriesArchetype:BatchGetSeriesArchetypeResponse"
      ],
      "subpackages": [],
      "urlSlug": "series-archetype",
      "description": "[INTERNAL]\nA series archetype represents the constant information about data in a series - specifically, the name, units, a\ndescription, and the tags. Series archetypes can be used to query points from specific series depending on the tag\nvalue selections.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_SeriesCache": {
      "subpackageId": "subpackage_SeriesCache",
      "name": "SeriesCache",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get-cached-series",
          "method": "POST",
          "id": "batchGetCachedSeries",
          "originalEndpointId": "endpoint_SeriesCache.batchGetCachedSeries",
          "name": "Batch Get Cached Series",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/series-cache/v1"
              },
              {
                "type": "literal",
                "value": "/logical-series/get-cached-series"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesCache:GetCachedSeriesRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesCache:CachedSeriesResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/series-cache/v1/logical-series/get-cached-series",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "logicalSeriesRids": ["logicalSeriesRids"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "cachedSeries": [
                  {
                    "logicalSeriesRid": "logicalSeriesRid",
                    "startTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "endTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "seriesDataType": "DOUBLE"
                  },
                  {
                    "logicalSeriesRid": "logicalSeriesRid",
                    "startTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "endTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "seriesDataType": "DOUBLE"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "logicalSeriesRids": ["logicalSeriesRids"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "cachedSeries": [
                    {
                      "logicalSeriesRid": "logicalSeriesRid",
                      "startTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "endTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "seriesDataType": "DOUBLE"
                    },
                    {
                      "logicalSeriesRid": "logicalSeriesRid",
                      "startTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "endTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "seriesDataType": "DOUBLE"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-cached-series",
          "method": "POST",
          "id": "createCachedSeries",
          "originalEndpointId": "endpoint_SeriesCache.createCachedSeries",
          "name": "Create Cached Series",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/series-cache/v1"
              },
              {
                "type": "literal",
                "value": "/logical-series/create-cached-series"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesCache:CreateCachedSeriesRequest"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/series-cache/v1/logical-series/create-cached-series",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "seriesToCache": [
                  {
                    "logicalSeriesRid": "logicalSeriesRid",
                    "startTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "endTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "seriesDataType": "DOUBLE"
                  },
                  {
                    "logicalSeriesRid": "logicalSeriesRid",
                    "startTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "endTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "seriesDataType": "DOUBLE"
                  }
                ]
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "seriesToCache": [
                    {
                      "logicalSeriesRid": "logicalSeriesRid",
                      "startTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "endTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "seriesDataType": "DOUBLE"
                    },
                    {
                      "logicalSeriesRid": "logicalSeriesRid",
                      "startTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "endTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "seriesDataType": "DOUBLE"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-chunks",
          "method": "POST",
          "id": "getChunks",
          "originalEndpointId": "endpoint_SeriesCache.getChunks",
          "name": "Get Chunks",
          "path": {
            "pathParameters": [
              {
                "key": "logicalSeriesRid",
                "type": {
                  "type": "id",
                  "value": "type_LogicalSeries:LogicalSeriesRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/series-cache/v1"
              },
              {
                "type": "literal",
                "value": "/logical-series/"
              },
              {
                "type": "pathParameter",
                "value": "logicalSeriesRid"
              },
              {
                "type": "literal",
                "value": "/get-chunks"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesCache:GetChunksParameters"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesCache:GetChunksResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/series-cache/v1/logical-series/logicalSeriesRid/get-chunks",
              "pathParameters": {
                "logicalSeriesRid": "logicalSeriesRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "startTimestamp": {
                  "seconds": 1000000,
                  "nanos": 1000000
                },
                "endTimestamp": {
                  "seconds": 1000000,
                  "nanos": 1000000
                },
                "resolutionNanos": 1000000
              },
              "responseStatusCode": 200,
              "responseBody": {
                "chunks": [
                  {
                    "rid": "rid",
                    "type": "ARROW_WITH_RELATIVE_TIMESTAMPS",
                    "logicalSeriesRid": "logicalSeriesRid",
                    "startTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "endTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "count": 1000000,
                    "sizeInBytes": 1000000,
                    "resolution": 1000000,
                    "handle": {
                      "type": "s3",
                      "s3": {
                        "s3Path": "s3Path"
                      }
                    }
                  },
                  {
                    "rid": "rid",
                    "type": "ARROW_WITH_RELATIVE_TIMESTAMPS",
                    "logicalSeriesRid": "logicalSeriesRid",
                    "startTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "endTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "count": 1000000,
                    "sizeInBytes": 1000000,
                    "resolution": 1000000,
                    "handle": {
                      "type": "s3",
                      "s3": {
                        "s3Path": "s3Path"
                      }
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "startTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "endTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "resolutionNanos": 1000000
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "chunks": [
                    {
                      "rid": "rid",
                      "type": "ARROW_WITH_RELATIVE_TIMESTAMPS",
                      "logicalSeriesRid": "logicalSeriesRid",
                      "startTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "endTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "count": 1000000,
                      "sizeInBytes": 1000000,
                      "resolution": 1000000,
                      "handle": {
                        "type": "s3",
                        "s3": {
                          "s3Path": "s3Path"
                        }
                      }
                    },
                    {
                      "rid": "rid",
                      "type": "ARROW_WITH_RELATIVE_TIMESTAMPS",
                      "logicalSeriesRid": "logicalSeriesRid",
                      "startTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "endTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "count": 1000000,
                      "sizeInBytes": 1000000,
                      "resolution": 1000000,
                      "handle": {
                        "type": "s3",
                        "s3": {
                          "s3Path": "s3Path"
                        }
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-chunks",
          "method": "POST",
          "id": "createChunks",
          "originalEndpointId": "endpoint_SeriesCache.createChunks",
          "name": "Create Chunks",
          "path": {
            "pathParameters": [
              {
                "key": "logicalSeriesRid",
                "type": {
                  "type": "id",
                  "value": "type_LogicalSeries:LogicalSeriesRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/series-cache/v1"
              },
              {
                "type": "literal",
                "value": "/logical-series/"
              },
              {
                "type": "pathParameter",
                "value": "logicalSeriesRid"
              },
              {
                "type": "literal",
                "value": "/create-chunks"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesCache:CreateChunksParameters"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesCache:CreateChunksResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/series-cache/v1/logical-series/logicalSeriesRid/create-chunks",
              "pathParameters": {
                "logicalSeriesRid": "logicalSeriesRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "createChunks": [
                  {
                    "type": "ARROW_WITH_RELATIVE_TIMESTAMPS",
                    "logicalSeriesRid": "logicalSeriesRid",
                    "startTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "endTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "count": 1000000,
                    "sizeInBytes": 1000000,
                    "resolution": 1000000,
                    "handle": {
                      "type": "s3",
                      "s3": {
                        "s3Path": "s3Path"
                      }
                    }
                  },
                  {
                    "type": "ARROW_WITH_RELATIVE_TIMESTAMPS",
                    "logicalSeriesRid": "logicalSeriesRid",
                    "startTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "endTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "count": 1000000,
                    "sizeInBytes": 1000000,
                    "resolution": 1000000,
                    "handle": {
                      "type": "s3",
                      "s3": {
                        "s3Path": "s3Path"
                      }
                    }
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "chunkRids": ["chunkRids", "chunkRids"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "createChunks": [
                    {
                      "type": "ARROW_WITH_RELATIVE_TIMESTAMPS",
                      "logicalSeriesRid": "logicalSeriesRid",
                      "startTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "endTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "count": 1000000,
                      "sizeInBytes": 1000000,
                      "resolution": 1000000,
                      "handle": {
                        "type": "s3",
                        "s3": {
                          "s3Path": "s3Path"
                        }
                      }
                    },
                    {
                      "type": "ARROW_WITH_RELATIVE_TIMESTAMPS",
                      "logicalSeriesRid": "logicalSeriesRid",
                      "startTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "endTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "count": 1000000,
                      "sizeInBytes": 1000000,
                      "resolution": 1000000,
                      "handle": {
                        "type": "s3",
                        "s3": {
                          "s3Path": "s3Path"
                        }
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "chunkRids": ["chunkRids", "chunkRids"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-create-chunks",
          "method": "POST",
          "id": "batchCreateChunks",
          "originalEndpointId": "endpoint_SeriesCache.batchCreateChunks",
          "name": "Batch Create Chunks",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/series-cache/v1"
              },
              {
                "type": "literal",
                "value": "/batch-create-chunks"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesCache:CreateChunksParameters"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesCache:CreateChunksResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/series-cache/v1/batch-create-chunks",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "createChunks": [
                  {
                    "type": "ARROW_WITH_RELATIVE_TIMESTAMPS",
                    "logicalSeriesRid": "logicalSeriesRid",
                    "startTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "endTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "count": 1000000,
                    "sizeInBytes": 1000000,
                    "resolution": 1000000,
                    "handle": {
                      "type": "s3",
                      "s3": {
                        "s3Path": "s3Path"
                      }
                    }
                  },
                  {
                    "type": "ARROW_WITH_RELATIVE_TIMESTAMPS",
                    "logicalSeriesRid": "logicalSeriesRid",
                    "startTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "endTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    },
                    "count": 1000000,
                    "sizeInBytes": 1000000,
                    "resolution": 1000000,
                    "handle": {
                      "type": "s3",
                      "s3": {
                        "s3Path": "s3Path"
                      }
                    }
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "chunkRids": ["chunkRids", "chunkRids"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "createChunks": [
                    {
                      "type": "ARROW_WITH_RELATIVE_TIMESTAMPS",
                      "logicalSeriesRid": "logicalSeriesRid",
                      "startTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "endTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "count": 1000000,
                      "sizeInBytes": 1000000,
                      "resolution": 1000000,
                      "handle": {
                        "type": "s3",
                        "s3": {
                          "s3Path": "s3Path"
                        }
                      }
                    },
                    {
                      "type": "ARROW_WITH_RELATIVE_TIMESTAMPS",
                      "logicalSeriesRid": "logicalSeriesRid",
                      "startTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "endTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      },
                      "count": 1000000,
                      "sizeInBytes": 1000000,
                      "resolution": 1000000,
                      "handle": {
                        "type": "s3",
                        "s3": {
                          "s3Path": "s3Path"
                        }
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "chunkRids": ["chunkRids", "chunkRids"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "delete-chunks",
          "method": "POST",
          "id": "deleteChunks",
          "originalEndpointId": "endpoint_SeriesCache.deleteChunks",
          "name": "Delete Chunks",
          "path": {
            "pathParameters": [
              {
                "key": "logicalSeriesRid",
                "type": {
                  "type": "id",
                  "value": "type_LogicalSeries:LogicalSeriesRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/timeseries/series-cache/v1"
              },
              {
                "type": "literal",
                "value": "/logical-series/"
              },
              {
                "type": "pathParameter",
                "value": "logicalSeriesRid"
              },
              {
                "type": "literal",
                "value": "/delete-chunks"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesCache:DeleteChunksParameters"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_SeriesCache:DeleteChunksResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/timeseries/series-cache/v1/logical-series/logicalSeriesRid/delete-chunks",
              "pathParameters": {
                "logicalSeriesRid": "logicalSeriesRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "startTimestamp": {
                  "seconds": 1000000,
                  "nanos": 1000000
                },
                "endTimestamp": {
                  "seconds": 1000000,
                  "nanos": 1000000
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "deletedChunkRids": ["deletedChunkRids"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "startTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  },
                  "endTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "deletedChunkRids": ["deletedChunkRids"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_SeriesCache:ChunkRid",
        "type_SeriesCache:S3Path",
        "type_SeriesCache:Handle",
        "type_SeriesCache:S3Handle",
        "type_SeriesCache:Resolution",
        "type_SeriesCache:Chunk",
        "type_SeriesCache:GetChunksParameters",
        "type_SeriesCache:DeleteChunksParameters",
        "type_SeriesCache:DeleteChunksResponse",
        "type_SeriesCache:CreateChunksParameters",
        "type_SeriesCache:CreateChunk",
        "type_SeriesCache:ChunkType",
        "type_SeriesCache:GetChunksResponse",
        "type_SeriesCache:CreateChunksResponse",
        "type_SeriesCache:GetCachedSeriesRequest",
        "type_SeriesCache:CachedSeries",
        "type_SeriesCache:CreateCachedSeriesRequest",
        "type_SeriesCache:CachedSeriesResponse"
      ],
      "subpackages": [],
      "urlSlug": "series-cache",
      "description": "The Series Cache service manages internal chunks of data cached by Nominal's backend.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Template": {
      "subpackageId": "subpackage_Template",
      "name": "Template",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create",
          "method": "POST",
          "id": "create",
          "originalEndpointId": "endpoint_Template.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/template"
              },
              {
                "type": "literal",
                "value": "/"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Template:CreateTemplateRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Template:Template"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/template/",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "title": "title",
                "description": "description",
                "labels": ["labels"],
                "properties": {
                  "properties": "properties"
                },
                "layout": {
                  "type": "v1",
                  "v1": {
                    "rootPanel": {
                      "type": "viz",
                      "viz": {
                        "type": "v1",
                        "v1": {
                          "id": "id",
                          "vizId": "vizId",
                          "hideLegend": true
                        }
                      }
                    }
                  }
                },
                "content": {
                  "channelVariables": {
                    "channelVariables": {
                      "variableName": "variableName",
                      "computeSpec": {
                        "type": "v1",
                        "v1": "computeSpec"
                      }
                    }
                  },
                  "charts": {
                    "charts": {
                      "type": "timeSeries",
                      "timeSeries": {
                        "type": "v1",
                        "v1": {
                          "rows": [
                            {
                              "plots": [],
                              "rowFlexSize": 1.1
                            },
                            {
                              "plots": [],
                              "rowFlexSize": 1.1
                            }
                          ],
                          "comparisonRunGroups": [
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ]
                            },
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ]
                            }
                          ],
                          "events": [
                            {
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            },
                            {
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            }
                          ],
                          "valueAxes": [
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true
                              },
                              "range": {},
                              "limit": {},
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            },
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true
                              },
                              "range": {},
                              "limit": {},
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "message": "message"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "metadata": {
                  "title": "title",
                  "description": "description",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "isArchived": true,
                  "isPublished": true,
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "editedAt": "2024-01-15T09:30:00Z"
                },
                "commit": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                },
                "charts": [
                  {
                    "rid": "rid",
                    "version": 1
                  },
                  {
                    "rid": "rid",
                    "version": 1
                  }
                ],
                "layout": {
                  "type": "v1",
                  "v1": {
                    "rootPanel": {
                      "type": "viz",
                      "viz": {
                        "type": "v1",
                        "v1": {
                          "id": "id",
                          "vizId": "vizId",
                          "hideLegend": true
                        }
                      }
                    }
                  }
                },
                "content": {
                  "channelVariables": {
                    "channelVariables": {
                      "displayName": "displayName",
                      "variableName": "variableName",
                      "computeSpec": {
                        "type": "v1",
                        "v1": "computeSpec"
                      }
                    }
                  },
                  "charts": {
                    "charts": {
                      "type": "timeSeries",
                      "timeSeries": {
                        "type": "v1",
                        "v1": {
                          "rows": [
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            },
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            }
                          ],
                          "comparisonRunGroups": [
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ],
                              "color": "color"
                            },
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ],
                              "color": "color"
                            }
                          ],
                          "events": [
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            },
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            }
                          ],
                          "title": "title",
                          "valueAxes": [
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true,
                                "axisWidth": 1.1
                              },
                              "range": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "limit": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            },
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true,
                                "axisWidth": 1.1
                              },
                              "range": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "limit": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            }
                          ],
                          "thresholds": []
                        }
                      }
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "title",
                  "description": "description",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "layout": {
                    "type": "v1",
                    "v1": {
                      "rootPanel": {
                        "type": "viz",
                        "viz": {
                          "type": "v1",
                          "v1": {
                            "id": "id",
                            "vizId": "vizId",
                            "hideLegend": true
                          }
                        }
                      }
                    }
                  },
                  "content": {
                    "channelVariables": {
                      "channelVariables": {
                        "variableName": "variableName",
                        "computeSpec": {
                          "type": "v1",
                          "v1": "computeSpec"
                        }
                      }
                    },
                    "charts": {
                      "charts": {
                        "type": "timeSeries",
                        "timeSeries": {
                          "type": "v1",
                          "v1": {
                            "rows": [
                              {
                                "plots": [],
                                "rowFlexSize": 1.1
                              },
                              {
                                "plots": [],
                                "rowFlexSize": 1.1
                              }
                            ],
                            "comparisonRunGroups": [
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ]
                              },
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ]
                              }
                            ],
                            "events": [
                              {
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              },
                              {
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              }
                            ],
                            "valueAxes": [
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              },
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "message": "message"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "metadata": {
                    "title": "title",
                    "description": "description",
                    "labels": ["labels"],
                    "properties": {
                      "properties": "properties"
                    },
                    "isArchived": true,
                    "isPublished": true,
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "editedAt": "2024-01-15T09:30:00Z"
                  },
                  "commit": {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  },
                  "charts": [
                    {
                      "rid": "rid",
                      "version": 1
                    },
                    {
                      "rid": "rid",
                      "version": 1
                    }
                  ],
                  "layout": {
                    "type": "v1",
                    "v1": {
                      "rootPanel": {
                        "type": "viz",
                        "viz": {
                          "type": "v1",
                          "v1": {
                            "id": "id",
                            "vizId": "vizId",
                            "hideLegend": true
                          }
                        }
                      }
                    }
                  },
                  "content": {
                    "channelVariables": {
                      "channelVariables": {
                        "displayName": "displayName",
                        "variableName": "variableName",
                        "computeSpec": {
                          "type": "v1",
                          "v1": "computeSpec"
                        }
                      }
                    },
                    "charts": {
                      "charts": {
                        "type": "timeSeries",
                        "timeSeries": {
                          "type": "v1",
                          "v1": {
                            "rows": [
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              },
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              }
                            ],
                            "comparisonRunGroups": [
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ],
                                "color": "color"
                              },
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ],
                                "color": "color"
                              }
                            ],
                            "events": [
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              },
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              }
                            ],
                            "title": "title",
                            "valueAxes": [
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true,
                                  "axisWidth": 1.1
                                },
                                "range": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "limit": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              },
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true,
                                  "axisWidth": 1.1
                                },
                                "range": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "limit": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              }
                            ],
                            "thresholds": []
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get",
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_Template.get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "templateRid",
                "type": {
                  "type": "id",
                  "value": "type_common:TemplateRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/template"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "templateRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "key": "branch",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_InternalVersioning:BranchName"
                }
              }
            },
            {
              "key": "commit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_InternalVersioning:CommitId"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Template:Template"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/template/templateRid",
              "pathParameters": {
                "templateRid": "templateRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "metadata": {
                  "title": "title",
                  "description": "description",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "isArchived": true,
                  "isPublished": true,
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "editedAt": "2024-01-15T09:30:00Z"
                },
                "commit": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                },
                "charts": [
                  {
                    "rid": "rid",
                    "version": 1
                  },
                  {
                    "rid": "rid",
                    "version": 1
                  }
                ],
                "layout": {
                  "type": "v1",
                  "v1": {
                    "rootPanel": {
                      "type": "viz",
                      "viz": {
                        "type": "v1",
                        "v1": {
                          "id": "id",
                          "vizId": "vizId",
                          "hideLegend": true
                        }
                      }
                    }
                  }
                },
                "content": {
                  "channelVariables": {
                    "channelVariables": {
                      "displayName": "displayName",
                      "variableName": "variableName",
                      "computeSpec": {
                        "type": "v1",
                        "v1": "computeSpec"
                      }
                    }
                  },
                  "charts": {
                    "charts": {
                      "type": "timeSeries",
                      "timeSeries": {
                        "type": "v1",
                        "v1": {
                          "rows": [
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            },
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            }
                          ],
                          "comparisonRunGroups": [
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ],
                              "color": "color"
                            },
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ],
                              "color": "color"
                            }
                          ],
                          "events": [
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            },
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            }
                          ],
                          "title": "title",
                          "valueAxes": [
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true,
                                "axisWidth": 1.1
                              },
                              "range": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "limit": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            },
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true,
                                "axisWidth": 1.1
                              },
                              "range": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "limit": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            }
                          ],
                          "thresholds": []
                        }
                      }
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "metadata": {
                    "title": "title",
                    "description": "description",
                    "labels": ["labels"],
                    "properties": {
                      "properties": "properties"
                    },
                    "isArchived": true,
                    "isPublished": true,
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "editedAt": "2024-01-15T09:30:00Z"
                  },
                  "commit": {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  },
                  "charts": [
                    {
                      "rid": "rid",
                      "version": 1
                    },
                    {
                      "rid": "rid",
                      "version": 1
                    }
                  ],
                  "layout": {
                    "type": "v1",
                    "v1": {
                      "rootPanel": {
                        "type": "viz",
                        "viz": {
                          "type": "v1",
                          "v1": {
                            "id": "id",
                            "vizId": "vizId",
                            "hideLegend": true
                          }
                        }
                      }
                    }
                  },
                  "content": {
                    "channelVariables": {
                      "channelVariables": {
                        "displayName": "displayName",
                        "variableName": "variableName",
                        "computeSpec": {
                          "type": "v1",
                          "v1": "computeSpec"
                        }
                      }
                    },
                    "charts": {
                      "charts": {
                        "type": "timeSeries",
                        "timeSeries": {
                          "type": "v1",
                          "v1": {
                            "rows": [
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              },
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              }
                            ],
                            "comparisonRunGroups": [
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ],
                                "color": "color"
                              },
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ],
                                "color": "color"
                              }
                            ],
                            "events": [
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              },
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              }
                            ],
                            "title": "title",
                            "valueAxes": [
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true,
                                  "axisWidth": 1.1
                                },
                                "range": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "limit": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              },
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true,
                                  "axisWidth": 1.1
                                },
                                "range": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "limit": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              }
                            ],
                            "thresholds": []
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "save-working-state",
          "method": "POST",
          "id": "saveWorkingState",
          "originalEndpointId": "endpoint_Template.saveWorkingState",
          "name": "Save Working State",
          "path": {
            "pathParameters": [
              {
                "key": "templateRid",
                "type": {
                  "type": "id",
                  "value": "type_common:TemplateRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/template"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "templateRid"
              },
              {
                "type": "literal",
                "value": "/save-working-state"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Template:SaveTemplateRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Template:Template"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/template/templateRid/save-working-state",
              "pathParameters": {
                "templateRid": "templateRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "layout": {
                  "type": "v1",
                  "v1": {
                    "rootPanel": {
                      "type": "viz",
                      "viz": {
                        "type": "v1",
                        "v1": {
                          "id": "id",
                          "vizId": "vizId",
                          "hideLegend": true
                        }
                      }
                    }
                  }
                },
                "content": {
                  "channelVariables": {
                    "channelVariables": {
                      "variableName": "variableName",
                      "computeSpec": {
                        "type": "v1",
                        "v1": "computeSpec"
                      }
                    }
                  },
                  "charts": {
                    "charts": {
                      "type": "timeSeries",
                      "timeSeries": {
                        "type": "v1",
                        "v1": {
                          "rows": [
                            {
                              "plots": [],
                              "rowFlexSize": 1.1
                            },
                            {
                              "plots": [],
                              "rowFlexSize": 1.1
                            }
                          ],
                          "comparisonRunGroups": [
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ]
                            },
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ]
                            }
                          ],
                          "events": [
                            {
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            },
                            {
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            }
                          ],
                          "valueAxes": [
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true
                              },
                              "range": {},
                              "limit": {},
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            },
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true
                              },
                              "range": {},
                              "limit": {},
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "metadata": {
                  "title": "title",
                  "description": "description",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "isArchived": true,
                  "isPublished": true,
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "editedAt": "2024-01-15T09:30:00Z"
                },
                "commit": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                },
                "charts": [
                  {
                    "rid": "rid",
                    "version": 1
                  },
                  {
                    "rid": "rid",
                    "version": 1
                  }
                ],
                "layout": {
                  "type": "v1",
                  "v1": {
                    "rootPanel": {
                      "type": "viz",
                      "viz": {
                        "type": "v1",
                        "v1": {
                          "id": "id",
                          "vizId": "vizId",
                          "hideLegend": true
                        }
                      }
                    }
                  }
                },
                "content": {
                  "channelVariables": {
                    "channelVariables": {
                      "displayName": "displayName",
                      "variableName": "variableName",
                      "computeSpec": {
                        "type": "v1",
                        "v1": "computeSpec"
                      }
                    }
                  },
                  "charts": {
                    "charts": {
                      "type": "timeSeries",
                      "timeSeries": {
                        "type": "v1",
                        "v1": {
                          "rows": [
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            },
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            }
                          ],
                          "comparisonRunGroups": [
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ],
                              "color": "color"
                            },
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ],
                              "color": "color"
                            }
                          ],
                          "events": [
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            },
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            }
                          ],
                          "title": "title",
                          "valueAxes": [
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true,
                                "axisWidth": 1.1
                              },
                              "range": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "limit": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            },
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true,
                                "axisWidth": 1.1
                              },
                              "range": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "limit": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            }
                          ],
                          "thresholds": []
                        }
                      }
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "layout": {
                    "type": "v1",
                    "v1": {
                      "rootPanel": {
                        "type": "viz",
                        "viz": {
                          "type": "v1",
                          "v1": {
                            "id": "id",
                            "vizId": "vizId",
                            "hideLegend": true
                          }
                        }
                      }
                    }
                  },
                  "content": {
                    "channelVariables": {
                      "channelVariables": {
                        "variableName": "variableName",
                        "computeSpec": {
                          "type": "v1",
                          "v1": "computeSpec"
                        }
                      }
                    },
                    "charts": {
                      "charts": {
                        "type": "timeSeries",
                        "timeSeries": {
                          "type": "v1",
                          "v1": {
                            "rows": [
                              {
                                "plots": [],
                                "rowFlexSize": 1.1
                              },
                              {
                                "plots": [],
                                "rowFlexSize": 1.1
                              }
                            ],
                            "comparisonRunGroups": [
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ]
                              },
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ]
                              }
                            ],
                            "events": [
                              {
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              },
                              {
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              }
                            ],
                            "valueAxes": [
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              },
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "metadata": {
                    "title": "title",
                    "description": "description",
                    "labels": ["labels"],
                    "properties": {
                      "properties": "properties"
                    },
                    "isArchived": true,
                    "isPublished": true,
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "editedAt": "2024-01-15T09:30:00Z"
                  },
                  "commit": {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  },
                  "charts": [
                    {
                      "rid": "rid",
                      "version": 1
                    },
                    {
                      "rid": "rid",
                      "version": 1
                    }
                  ],
                  "layout": {
                    "type": "v1",
                    "v1": {
                      "rootPanel": {
                        "type": "viz",
                        "viz": {
                          "type": "v1",
                          "v1": {
                            "id": "id",
                            "vizId": "vizId",
                            "hideLegend": true
                          }
                        }
                      }
                    }
                  },
                  "content": {
                    "channelVariables": {
                      "channelVariables": {
                        "displayName": "displayName",
                        "variableName": "variableName",
                        "computeSpec": {
                          "type": "v1",
                          "v1": "computeSpec"
                        }
                      }
                    },
                    "charts": {
                      "charts": {
                        "type": "timeSeries",
                        "timeSeries": {
                          "type": "v1",
                          "v1": {
                            "rows": [
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              },
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              }
                            ],
                            "comparisonRunGroups": [
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ],
                                "color": "color"
                              },
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ],
                                "color": "color"
                              }
                            ],
                            "events": [
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              },
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              }
                            ],
                            "title": "title",
                            "valueAxes": [
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true,
                                  "axisWidth": 1.1
                                },
                                "range": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "limit": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              },
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true,
                                  "axisWidth": 1.1
                                },
                                "range": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "limit": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              }
                            ],
                            "thresholds": []
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "commit",
          "method": "POST",
          "id": "commit",
          "originalEndpointId": "endpoint_Template.commit",
          "name": "Commit",
          "path": {
            "pathParameters": [
              {
                "key": "templateRid",
                "type": {
                  "type": "id",
                  "value": "type_common:TemplateRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/template"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "templateRid"
              },
              {
                "type": "literal",
                "value": "/commit"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Template:CommitTemplateRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Template:Template"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/template/templateRid/commit",
              "pathParameters": {
                "templateRid": "templateRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "layout": {
                  "type": "v1",
                  "v1": {
                    "rootPanel": {
                      "type": "viz",
                      "viz": {
                        "type": "v1",
                        "v1": {
                          "id": "id",
                          "vizId": "vizId",
                          "hideLegend": true
                        }
                      }
                    }
                  }
                },
                "content": {
                  "channelVariables": {
                    "channelVariables": {
                      "variableName": "variableName",
                      "computeSpec": {
                        "type": "v1",
                        "v1": "computeSpec"
                      }
                    }
                  },
                  "charts": {
                    "charts": {
                      "type": "timeSeries",
                      "timeSeries": {
                        "type": "v1",
                        "v1": {
                          "rows": [
                            {
                              "plots": [],
                              "rowFlexSize": 1.1
                            },
                            {
                              "plots": [],
                              "rowFlexSize": 1.1
                            }
                          ],
                          "comparisonRunGroups": [
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ]
                            },
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ]
                            }
                          ],
                          "events": [
                            {
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            },
                            {
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            }
                          ],
                          "valueAxes": [
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true
                              },
                              "range": {},
                              "limit": {},
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            },
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true
                              },
                              "range": {},
                              "limit": {},
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "message": "message"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "metadata": {
                  "title": "title",
                  "description": "description",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "isArchived": true,
                  "isPublished": true,
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "editedAt": "2024-01-15T09:30:00Z"
                },
                "commit": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                },
                "charts": [
                  {
                    "rid": "rid",
                    "version": 1
                  },
                  {
                    "rid": "rid",
                    "version": 1
                  }
                ],
                "layout": {
                  "type": "v1",
                  "v1": {
                    "rootPanel": {
                      "type": "viz",
                      "viz": {
                        "type": "v1",
                        "v1": {
                          "id": "id",
                          "vizId": "vizId",
                          "hideLegend": true
                        }
                      }
                    }
                  }
                },
                "content": {
                  "channelVariables": {
                    "channelVariables": {
                      "displayName": "displayName",
                      "variableName": "variableName",
                      "computeSpec": {
                        "type": "v1",
                        "v1": "computeSpec"
                      }
                    }
                  },
                  "charts": {
                    "charts": {
                      "type": "timeSeries",
                      "timeSeries": {
                        "type": "v1",
                        "v1": {
                          "rows": [
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            },
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            }
                          ],
                          "comparisonRunGroups": [
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ],
                              "color": "color"
                            },
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ],
                              "color": "color"
                            }
                          ],
                          "events": [
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            },
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            }
                          ],
                          "title": "title",
                          "valueAxes": [
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true,
                                "axisWidth": 1.1
                              },
                              "range": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "limit": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            },
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true,
                                "axisWidth": 1.1
                              },
                              "range": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "limit": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            }
                          ],
                          "thresholds": []
                        }
                      }
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "layout": {
                    "type": "v1",
                    "v1": {
                      "rootPanel": {
                        "type": "viz",
                        "viz": {
                          "type": "v1",
                          "v1": {
                            "id": "id",
                            "vizId": "vizId",
                            "hideLegend": true
                          }
                        }
                      }
                    }
                  },
                  "content": {
                    "channelVariables": {
                      "channelVariables": {
                        "variableName": "variableName",
                        "computeSpec": {
                          "type": "v1",
                          "v1": "computeSpec"
                        }
                      }
                    },
                    "charts": {
                      "charts": {
                        "type": "timeSeries",
                        "timeSeries": {
                          "type": "v1",
                          "v1": {
                            "rows": [
                              {
                                "plots": [],
                                "rowFlexSize": 1.1
                              },
                              {
                                "plots": [],
                                "rowFlexSize": 1.1
                              }
                            ],
                            "comparisonRunGroups": [
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ]
                              },
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ]
                              }
                            ],
                            "events": [
                              {
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              },
                              {
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              }
                            ],
                            "valueAxes": [
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              },
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true
                                },
                                "range": {},
                                "limit": {},
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "message": "message"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "metadata": {
                    "title": "title",
                    "description": "description",
                    "labels": ["labels"],
                    "properties": {
                      "properties": "properties"
                    },
                    "isArchived": true,
                    "isPublished": true,
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "editedAt": "2024-01-15T09:30:00Z"
                  },
                  "commit": {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  },
                  "charts": [
                    {
                      "rid": "rid",
                      "version": 1
                    },
                    {
                      "rid": "rid",
                      "version": 1
                    }
                  ],
                  "layout": {
                    "type": "v1",
                    "v1": {
                      "rootPanel": {
                        "type": "viz",
                        "viz": {
                          "type": "v1",
                          "v1": {
                            "id": "id",
                            "vizId": "vizId",
                            "hideLegend": true
                          }
                        }
                      }
                    }
                  },
                  "content": {
                    "channelVariables": {
                      "channelVariables": {
                        "displayName": "displayName",
                        "variableName": "variableName",
                        "computeSpec": {
                          "type": "v1",
                          "v1": "computeSpec"
                        }
                      }
                    },
                    "charts": {
                      "charts": {
                        "type": "timeSeries",
                        "timeSeries": {
                          "type": "v1",
                          "v1": {
                            "rows": [
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              },
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              }
                            ],
                            "comparisonRunGroups": [
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ],
                                "color": "color"
                              },
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ],
                                "color": "color"
                              }
                            ],
                            "events": [
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              },
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              }
                            ],
                            "title": "title",
                            "valueAxes": [
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true,
                                  "axisWidth": 1.1
                                },
                                "range": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "limit": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              },
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true,
                                  "axisWidth": 1.1
                                },
                                "range": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "limit": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              }
                            ],
                            "thresholds": []
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-metadata",
          "method": "POST",
          "id": "updateMetadata",
          "originalEndpointId": "endpoint_Template.updateMetadata",
          "name": "Update Metadata",
          "path": {
            "pathParameters": [
              {
                "key": "templateRid",
                "type": {
                  "type": "id",
                  "value": "type_common:TemplateRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/template"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "templateRid"
              },
              {
                "type": "literal",
                "value": "/metadata"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Template:UpdateMetadataRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Template:TemplateMetadata"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/template/templateRid/metadata",
              "pathParameters": {
                "templateRid": "templateRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "title": "title",
                "description": "description",
                "labels": ["labels"],
                "properties": {
                  "properties": "properties"
                },
                "isArchived": true,
                "isPublished": true,
                "createdBy": "createdBy",
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z",
                "editedAt": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "title": "title",
                  "description": "description",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "isArchived": true,
                  "isPublished": true,
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "editedAt": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search-templates",
          "method": "POST",
          "id": "searchTemplates",
          "originalEndpointId": "endpoint_Template.searchTemplates",
          "name": "Search Templates",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/template"
              },
              {
                "type": "literal",
                "value": "/search"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Template:SearchTemplatesRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Template:SearchTemplatesResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/template/search",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "query": {
                  "type": "and",
                  "and": [
                    {
                      "type": "and",
                      "and": [
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "and",
                      "and": [
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "and",
                          "and": [
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            },
                            {
                              "type": "and",
                              "and": [
                                {
                                  "type": "and",
                                  "and": []
                                },
                                {
                                  "type": "and",
                                  "and": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "rid": "rid",
                    "metadata": {
                      "title": "title",
                      "description": "description",
                      "labels": ["labels"],
                      "properties": {
                        "properties": "properties"
                      },
                      "isArchived": true,
                      "isPublished": true,
                      "createdBy": "createdBy",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "editedAt": "2024-01-15T09:30:00Z"
                    }
                  },
                  {
                    "rid": "rid",
                    "metadata": {
                      "title": "title",
                      "description": "description",
                      "labels": ["labels"],
                      "properties": {
                        "properties": "properties"
                      },
                      "isArchived": true,
                      "isPublished": true,
                      "createdBy": "createdBy",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "updatedAt": "2024-01-15T09:30:00Z",
                      "editedAt": "2024-01-15T09:30:00Z"
                    }
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "query": {
                    "type": "and",
                    "and": [
                      {
                        "type": "and",
                        "and": [
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "and",
                        "and": [
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "and",
                            "and": [
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              },
                              {
                                "type": "and",
                                "and": [
                                  {
                                    "type": "and",
                                    "and": []
                                  },
                                  {
                                    "type": "and",
                                    "and": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "rid": "rid",
                      "metadata": {
                        "title": "title",
                        "description": "description",
                        "labels": ["labels"],
                        "properties": {
                          "properties": "properties"
                        },
                        "isArchived": true,
                        "isPublished": true,
                        "createdBy": "createdBy",
                        "createdAt": "2024-01-15T09:30:00Z",
                        "updatedAt": "2024-01-15T09:30:00Z",
                        "editedAt": "2024-01-15T09:30:00Z"
                      }
                    },
                    {
                      "rid": "rid",
                      "metadata": {
                        "title": "title",
                        "description": "description",
                        "labels": ["labels"],
                        "properties": {
                          "properties": "properties"
                        },
                        "isArchived": true,
                        "isPublished": true,
                        "createdBy": "createdBy",
                        "createdAt": "2024-01-15T09:30:00Z",
                        "updatedAt": "2024-01-15T09:30:00Z",
                        "editedAt": "2024-01-15T09:30:00Z"
                      }
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-all-labels-and-properties",
          "method": "GET",
          "id": "getAllLabelsAndProperties",
          "originalEndpointId": "endpoint_Template.getAllLabelsAndProperties",
          "name": "Get All Labels And Properties",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/template"
              },
              {
                "type": "literal",
                "value": "/get-all-labels-properties"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Template:GetAllLabelsAndPropertiesResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/template/get-all-labels-properties",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "properties": {
                  "properties": ["properties"]
                },
                "labels": ["labels"]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "properties": {
                    "properties": ["properties"]
                  },
                  "labels": ["labels"]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "merge-to-main",
          "method": "POST",
          "id": "mergeToMain",
          "originalEndpointId": "endpoint_Template.mergeToMain",
          "name": "Merge To Main",
          "path": {
            "pathParameters": [
              {
                "key": "templateRid",
                "type": {
                  "type": "id",
                  "value": "type_common:TemplateRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/template"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "templateRid"
              },
              {
                "type": "literal",
                "value": "/merge-to-main"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Template:MergeToMainRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Template:Template"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/template/templateRid/merge-to-main",
              "pathParameters": {
                "templateRid": "templateRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "branchName": "branchName",
                "message": "message"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "metadata": {
                  "title": "title",
                  "description": "description",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "isArchived": true,
                  "isPublished": true,
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z",
                  "editedAt": "2024-01-15T09:30:00Z"
                },
                "commit": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                },
                "charts": [
                  {
                    "rid": "rid",
                    "version": 1
                  },
                  {
                    "rid": "rid",
                    "version": 1
                  }
                ],
                "layout": {
                  "type": "v1",
                  "v1": {
                    "rootPanel": {
                      "type": "viz",
                      "viz": {
                        "type": "v1",
                        "v1": {
                          "id": "id",
                          "vizId": "vizId",
                          "hideLegend": true
                        }
                      }
                    }
                  }
                },
                "content": {
                  "channelVariables": {
                    "channelVariables": {
                      "displayName": "displayName",
                      "variableName": "variableName",
                      "computeSpec": {
                        "type": "v1",
                        "v1": "computeSpec"
                      }
                    }
                  },
                  "charts": {
                    "charts": {
                      "type": "timeSeries",
                      "timeSeries": {
                        "type": "v1",
                        "v1": {
                          "rows": [
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            },
                            {
                              "title": "title",
                              "plots": [],
                              "rowFlexSize": 1.1
                            }
                          ],
                          "comparisonRunGroups": [
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ],
                              "color": "color"
                            },
                            {
                              "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "name": "name",
                              "offset": {
                                "value": 1000000,
                                "unit": "DAYS"
                              },
                              "offsetAnchor": {
                                "type": "run",
                                "run": {}
                              },
                              "runs": [
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                },
                                {
                                  "runRid": "runRid",
                                  "enabled": true
                                }
                              ],
                              "color": "color"
                            }
                          ],
                          "events": [
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            },
                            {
                              "displayName": "displayName",
                              "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                              "isPinned": true
                            }
                          ],
                          "title": "title",
                          "valueAxes": [
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true,
                                "axisWidth": 1.1
                              },
                              "range": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "limit": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            },
                            {
                              "id": "id",
                              "title": "title",
                              "displayOptions": {
                                "showTitle": true,
                                "axisWidth": 1.1
                              },
                              "range": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "limit": {
                                "start": 1.1,
                                "end": 1.1
                              },
                              "position": "LEFT",
                              "domainType": "NUMERIC"
                            }
                          ],
                          "thresholds": []
                        }
                      }
                    }
                  }
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "branchName": "branchName",
                  "message": "message"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "metadata": {
                    "title": "title",
                    "description": "description",
                    "labels": ["labels"],
                    "properties": {
                      "properties": "properties"
                    },
                    "isArchived": true,
                    "isPublished": true,
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z",
                    "editedAt": "2024-01-15T09:30:00Z"
                  },
                  "commit": {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  },
                  "charts": [
                    {
                      "rid": "rid",
                      "version": 1
                    },
                    {
                      "rid": "rid",
                      "version": 1
                    }
                  ],
                  "layout": {
                    "type": "v1",
                    "v1": {
                      "rootPanel": {
                        "type": "viz",
                        "viz": {
                          "type": "v1",
                          "v1": {
                            "id": "id",
                            "vizId": "vizId",
                            "hideLegend": true
                          }
                        }
                      }
                    }
                  },
                  "content": {
                    "channelVariables": {
                      "channelVariables": {
                        "displayName": "displayName",
                        "variableName": "variableName",
                        "computeSpec": {
                          "type": "v1",
                          "v1": "computeSpec"
                        }
                      }
                    },
                    "charts": {
                      "charts": {
                        "type": "timeSeries",
                        "timeSeries": {
                          "type": "v1",
                          "v1": {
                            "rows": [
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              },
                              {
                                "title": "title",
                                "plots": [],
                                "rowFlexSize": 1.1
                              }
                            ],
                            "comparisonRunGroups": [
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ],
                                "color": "color"
                              },
                              {
                                "uuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "name": "name",
                                "offset": {
                                  "value": 1000000,
                                  "unit": "DAYS"
                                },
                                "offsetAnchor": {
                                  "type": "run",
                                  "run": {}
                                },
                                "runs": [
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  },
                                  {
                                    "runRid": "runRid",
                                    "enabled": true
                                  }
                                ],
                                "color": "color"
                              }
                            ],
                            "events": [
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              },
                              {
                                "displayName": "displayName",
                                "eventUuid": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
                                "isPinned": true
                              }
                            ],
                            "title": "title",
                            "valueAxes": [
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true,
                                  "axisWidth": 1.1
                                },
                                "range": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "limit": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              },
                              {
                                "id": "id",
                                "title": "title",
                                "displayOptions": {
                                  "showTitle": true,
                                  "axisWidth": 1.1
                                },
                                "range": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "limit": {
                                  "start": 1.1,
                                  "end": 1.1
                                },
                                "position": "LEFT",
                                "domainType": "NUMERIC"
                              }
                            ],
                            "thresholds": []
                          }
                        }
                      }
                    }
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Template:TemplateMetadata",
        "type_Template:TemplateSummary",
        "type_Template:Template",
        "type_Template:CreateTemplateRequest",
        "type_Template:SaveTemplateRequest",
        "type_Template:CommitTemplateRequest",
        "type_Template:UpdateMetadataRequest",
        "type_Template:SearchTemplatesQuery",
        "type_Template:SortByField",
        "type_Template:SortBy",
        "type_Template:SearchTemplatesRequest",
        "type_Template:SearchTemplatesResponse",
        "type_Template:GetAllLabelsAndPropertiesResponse",
        "type_Template:MergeToMainRequest"
      ],
      "subpackages": [],
      "urlSlug": "template",
      "description": "TemplateService manages templates, which are workbooks that\ncan be re-used across runs. Templates are versioned.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Units": {
      "subpackageId": "subpackage_Units",
      "name": "Units",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-all-units",
          "method": "GET",
          "id": "getAllUnits",
          "originalEndpointId": "endpoint_Units.getAllUnits",
          "name": "Get All Units",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/units/v1"
              },
              {
                "type": "literal",
                "value": "/units"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Units:GetUnitsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/units/v1/units",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "unitsByProperty": {
                  "unitsByProperty": [
                    {
                      "name": "name",
                      "symbol": "symbol",
                      "property": "property",
                      "dimension": {
                        "baseDimensions": {
                          "baseDimensions": 1
                        }
                      },
                      "system": "system"
                    }
                  ]
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "unitsByProperty": {
                    "unitsByProperty": [
                      {
                        "name": "name",
                        "symbol": "symbol",
                        "property": "property",
                        "dimension": {
                          "baseDimensions": {
                            "baseDimensions": 1
                          }
                        },
                        "system": "system"
                      }
                    ]
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-unit",
          "method": "POST",
          "id": "getUnit",
          "originalEndpointId": "endpoint_Units.getUnit",
          "name": "Get Unit",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/units/v1"
              },
              {
                "type": "literal",
                "value": "/units/get-unit"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Units:UnitSymbol"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_Units:Unit"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/units/v1/units/get-unit",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": "string",
              "responseStatusCode": 200,
              "responseBody": {
                "name": "name",
                "symbol": "symbol",
                "property": "property",
                "dimension": {
                  "baseDimensions": {
                    "baseDimensions": 1
                  }
                },
                "system": "system"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": "string"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "name",
                  "symbol": "symbol",
                  "property": "property",
                  "dimension": {
                    "baseDimensions": {
                      "baseDimensions": 1
                    }
                  },
                  "system": "system"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-commensurable-units",
          "method": "POST",
          "id": "getCommensurableUnits",
          "originalEndpointId": "endpoint_Units.getCommensurableUnits",
          "name": "Get Commensurable Units",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/units/v1"
              },
              {
                "type": "literal",
                "value": "/units/commensurable-units"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Units:UnitSymbol"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Units:Unit"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/units/v1/units/commensurable-units",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": "string",
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "name": "name",
                  "symbol": "symbol",
                  "property": "property",
                  "dimension": {
                    "baseDimensions": {
                      "baseDimensions": 1
                    }
                  },
                  "system": "system"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": "string"
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "name": "name",
                    "symbol": "symbol",
                    "property": "property",
                    "dimension": {
                      "baseDimensions": {
                        "baseDimensions": 1
                      }
                    },
                    "system": "system"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Units:UnitSymbol",
        "type_Units:UnitName",
        "type_Units:UnitProperty",
        "type_Units:UnitDimension",
        "type_Units:UnitSystem",
        "type_Units:Unit",
        "type_Units:GetUnitsResponse"
      ],
      "subpackages": [],
      "urlSlug": "units",
      "description": "The Units Service serves as a comprehensive catalog of the units of measurement supported by scout. Units, by \ndefault, follow the UCUM convention for representation.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Upload": {
      "subpackageId": "subpackage_Upload",
      "name": "Upload",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "initiate-multipart-upload",
          "method": "POST",
          "id": "initiateMultipartUpload",
          "originalEndpointId": "endpoint_Upload.initiateMultipartUpload",
          "name": "Initiate Multipart Upload",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/upload/v1"
              },
              {
                "type": "literal",
                "value": "/multipart-upload"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Upload:InitiateMultipartUploadRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Upload:InitiateMultipartUploadResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/upload/v1/multipart-upload",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "filename": "filename",
                "filetype": "filetype"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "uploadId": "uploadId",
                "key": "key"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "filename": "filename",
                  "filetype": "filetype"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "uploadId": "uploadId",
                  "key": "key"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "list-parts",
          "method": "GET",
          "id": "listParts",
          "originalEndpointId": "endpoint_Upload.listParts",
          "name": "List Parts",
          "path": {
            "pathParameters": [
              {
                "key": "uploadId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/upload/v1"
              },
              {
                "type": "literal",
                "value": "/multipart-upload/"
              },
              {
                "type": "pathParameter",
                "value": "uploadId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "key": "key",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_Upload:PartWithSize"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/upload/v1/multipart-upload/uploadId",
              "pathParameters": {
                "uploadId": "uploadId"
              },
              "queryParameters": {
                "key": "key"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "partNumber": 1,
                  "etag": "etag",
                  "size": 1000000
                },
                {
                  "partNumber": 1,
                  "etag": "etag",
                  "size": 1000000
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "partNumber": 1,
                    "etag": "etag",
                    "size": 1000000
                  },
                  {
                    "partNumber": 1,
                    "etag": "etag",
                    "size": 1000000
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "sign-part",
          "method": "POST",
          "id": "signPart",
          "originalEndpointId": "endpoint_Upload.signPart",
          "name": "Sign Part",
          "path": {
            "pathParameters": [
              {
                "key": "uploadId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/upload/v1"
              },
              {
                "type": "literal",
                "value": "/multipart-upload/"
              },
              {
                "type": "pathParameter",
                "value": "uploadId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "key": "key",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            {
              "key": "partNumber",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Upload:SignPartResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/upload/v1/multipart-upload/uploadId",
              "pathParameters": {
                "uploadId": "uploadId"
              },
              "queryParameters": {
                "key": "key",
                "partNumber": 1
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "url": "url",
                "headers": {
                  "headers": "headers"
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "url": "url",
                  "headers": {
                    "headers": "headers"
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "complete-multipart-upload",
          "method": "POST",
          "id": "completeMultipartUpload",
          "originalEndpointId": "endpoint_Upload.completeMultipartUpload",
          "name": "Complete Multipart Upload",
          "path": {
            "pathParameters": [
              {
                "key": "uploadId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/upload/v1"
              },
              {
                "type": "literal",
                "value": "/multipart-upload/"
              },
              {
                "type": "pathParameter",
                "value": "uploadId"
              },
              {
                "type": "literal",
                "value": "/complete"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_Upload:Part"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Upload:CompleteMultipartUploadResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/upload/v1/multipart-upload/uploadId/complete",
              "pathParameters": {
                "uploadId": "uploadId"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": [
                {
                  "partNumber": 1,
                  "etag": "etag"
                },
                {
                  "partNumber": 1,
                  "etag": "etag"
                }
              ],
              "responseStatusCode": 200,
              "responseBody": {
                "location": "location"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": [
                  {
                    "partNumber": 1,
                    "etag": "etag"
                  },
                  {
                    "partNumber": 1,
                    "etag": "etag"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "location": "location"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "abort-multipart-upload",
          "method": "POST",
          "id": "abortMultipartUpload",
          "originalEndpointId": "endpoint_Upload.abortMultipartUpload",
          "name": "Abort Multipart Upload",
          "path": {
            "pathParameters": [
              {
                "key": "uploadId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/upload/v1"
              },
              {
                "type": "literal",
                "value": "/multipart-upload/"
              },
              {
                "type": "pathParameter",
                "value": "uploadId"
              },
              {
                "type": "literal",
                "value": "/abort"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "key",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/upload/v1/multipart-upload/uploadId/abort",
              "pathParameters": {
                "uploadId": "uploadId"
              },
              "queryParameters": {
                "key": "key"
              },
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "upload-file",
          "method": "POST",
          "id": "uploadFile",
          "originalEndpointId": "endpoint_Upload.uploadFile",
          "name": "Upload File",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/upload/v1"
              },
              {
                "type": "literal",
                "value": "/upload-file"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/octet-stream",
            "type": {
              "type": "bytes",
              "isOptional": false
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Upload:S3Path"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/upload/v1/upload-file",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "bytes",
                "value": {
                  "type": "base64",
                  "value": "SGVsbG8gd29ybGQh"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": "string"
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Upload:S3Path",
        "type_Upload:DeprecatedTriggerIngest",
        "type_Upload:TriggerIngest",
        "type_Upload:TriggerFileIngest",
        "type_Upload:SkipRowsConfig",
        "type_Upload:ChannelConfig",
        "type_Upload:IngestSource",
        "type_Upload:S3IngestSource",
        "type_Upload:IngestSourceMetadata",
        "type_Upload:IngestDestination",
        "type_Upload:NewDatasetIngestDestination",
        "type_Upload:ExistingDatasetIngestDestination",
        "type_Upload:DeprecatedTimestampMetadata",
        "type_Upload:TimestampMetadata",
        "type_Upload:TimestampType",
        "type_Upload:RelativeTimestamp",
        "type_Upload:AbsoluteTimestamp",
        "type_Upload:Iso8601Timestamp",
        "type_Upload:EpochTimestamp",
        "type_Upload:CustomTimestamp",
        "type_Upload:DatasetSpec",
        "type_Upload:TriggeredIngest",
        "type_Upload:ErrorResult",
        "type_Upload:ErrorType",
        "type_Upload:SuccessResult",
        "type_Upload:InProgressResult",
        "type_Upload:IngestStatus",
        "type_Upload:IngestStatusV2",
        "type_Upload:IngestProgressV2",
        "type_Upload:AsyncHandle",
        "type_Upload:InitiateMultipartUploadRequest",
        "type_Upload:InitiateMultipartUploadResponse",
        "type_Upload:PartWithSize",
        "type_Upload:SignPartResponse",
        "type_Upload:Part",
        "type_Upload:CompleteMultipartUploadResponse",
        "type_Upload:DeprecatedNewCsv",
        "type_Upload:DeprecatedNewDataSource",
        "type_Upload:NewDataSource",
        "type_Upload:DataSourceRid",
        "type_Upload:IngestDataSource",
        "type_Upload:TimeOffsetSpec",
        "type_Upload:UtcTimestamp",
        "type_Upload:PropertyName",
        "type_Upload:PropertyValue",
        "type_Upload:Label",
        "type_Upload:DataSourceRefName",
        "type_Upload:IngestRunDataSource",
        "type_Upload:IngestRunRequest",
        "type_Upload:RunRid",
        "type_Upload:IngestRunResponse",
        "type_Upload:VideoTimestampManifest",
        "type_Upload:NoTimestampManifest",
        "type_Upload:TimestampManifest",
        "type_Upload:ScaleParameter",
        "type_Upload:IngestVideoRequest",
        "type_Upload:IngestVideoResponse",
        "type_Upload:McapChannelConfig",
        "type_Upload:McapChannelConfigType",
        "type_Upload:McapVideoChannelConfig",
        "type_Upload:IngestMcapRequest",
        "type_Upload:McapSource",
        "type_Upload:McapDestination",
        "type_Upload:McapIngestionOutput",
        "type_Upload:IngestMcapResponse"
      ],
      "subpackages": [],
      "urlSlug": "upload",
      "description": "The Upload Service manages file uploads to S3.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Versioning": {
      "subpackageId": "subpackage_Versioning",
      "name": "Versioning",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-branch",
          "method": "POST",
          "id": "createBranch",
          "originalEndpointId": "endpoint_Versioning.createBranch",
          "name": "Create Branch",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/branch"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Versioning:CreateBranchRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Versioning:Branch"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/resourceRid/branch",
              "pathParameters": {
                "resourceRid": "resourceRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "existingCommit": "existingCommit",
                "branchName": "branchName"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "name": "name",
                "resourceRid": "resourceRid",
                "commit": "commit",
                "createdBy": "createdBy",
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "existingCommit": "existingCommit",
                  "branchName": "branchName"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "name": "name",
                  "resourceRid": "resourceRid",
                  "commit": "commit",
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-tag",
          "method": "POST",
          "id": "createTag",
          "originalEndpointId": "endpoint_Versioning.createTag",
          "name": "Create Tag",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/tag"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Versioning:CreateTagRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Versioning:Tag"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/resourceRid/tag",
              "pathParameters": {
                "resourceRid": "resourceRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "existingCommit": "existingCommit",
                "tagName": "tagName"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "name": "name",
                "resourceRid": "resourceRid",
                "commit": "commit",
                "createdBy": "createdBy",
                "createdAt": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "existingCommit": "existingCommit",
                  "tagName": "tagName"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "name": "name",
                  "resourceRid": "resourceRid",
                  "commit": "commit",
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-commit",
          "method": "GET",
          "id": "getCommit",
          "originalEndpointId": "endpoint_Versioning.getCommit",
          "name": "Get Commit",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "commitId",
                "type": {
                  "type": "id",
                  "value": "type_Versioning:CommitId"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/commit/"
              },
              {
                "type": "pathParameter",
                "value": "commitId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Versioning:Commit"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/resourceRid/commit/commitId",
              "pathParameters": {
                "resourceRid": "resourceRid",
                "commitId": "commitId"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "resourceRid": "resourceRid",
                "parentCommit": "parentCommit",
                "mergeParentCommit": "mergeParentCommit",
                "message": "message",
                "isWorkingState": true,
                "committedBy": "committedBy",
                "committedAt": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get-commits",
          "method": "POST",
          "id": "batchGetCommits",
          "originalEndpointId": "endpoint_Versioning.batchGetCommits",
          "name": "Batch Get Commits",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/commit/batch-get"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Versioning:ResourceAndCommitId"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Versioning:Commit"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/commit/batch-get",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": [
                {
                  "resourceRid": "resourceRid",
                  "commitId": "commitId"
                }
              ],
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": [
                  {
                    "resourceRid": "resourceRid",
                    "commitId": "commitId"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-commit-by-branch",
          "method": "GET",
          "id": "getCommitByBranch",
          "originalEndpointId": "endpoint_Versioning.getCommitByBranch",
          "name": "Get Commit By Branch",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "branchName",
                "type": {
                  "type": "id",
                  "value": "type_Versioning:BranchName"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/branch/"
              },
              {
                "type": "pathParameter",
                "value": "branchName"
              },
              {
                "type": "literal",
                "value": "/commit"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Versioning:Commit"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/resourceRid/branch/branchName/commit",
              "pathParameters": {
                "resourceRid": "resourceRid",
                "branchName": "branchName"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "resourceRid": "resourceRid",
                "parentCommit": "parentCommit",
                "mergeParentCommit": "mergeParentCommit",
                "message": "message",
                "isWorkingState": true,
                "committedBy": "committedBy",
                "committedAt": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-commit-by-tag",
          "method": "GET",
          "id": "getCommitByTag",
          "originalEndpointId": "endpoint_Versioning.getCommitByTag",
          "name": "Get Commit By Tag",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "tagName",
                "type": {
                  "type": "id",
                  "value": "type_Versioning:TagName"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/tag/"
              },
              {
                "type": "pathParameter",
                "value": "tagName"
              },
              {
                "type": "literal",
                "value": "/commit"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Versioning:Commit"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/resourceRid/tag/tagName/commit",
              "pathParameters": {
                "resourceRid": "resourceRid",
                "tagName": "tagName"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "resourceRid": "resourceRid",
                "parentCommit": "parentCommit",
                "mergeParentCommit": "mergeParentCommit",
                "message": "message",
                "isWorkingState": true,
                "committedBy": "committedBy",
                "committedAt": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "resourceRid": "resourceRid",
                  "parentCommit": "parentCommit",
                  "mergeParentCommit": "mergeParentCommit",
                  "message": "message",
                  "isWorkingState": true,
                  "committedBy": "committedBy",
                  "committedAt": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-least-common-ancestor",
          "method": "POST",
          "id": "getLeastCommonAncestor",
          "originalEndpointId": "endpoint_Versioning.getLeastCommonAncestor",
          "name": "Get Least Common Ancestor",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/commit/least-common-ancestor"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Versioning:GetLeastCommonAncestorRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Versioning:CommitId"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/resourceRid/commit/least-common-ancestor",
              "pathParameters": {
                "resourceRid": "resourceRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "commit1": "commit1",
                "commit2": "commit2"
              },
              "responseStatusCode": 200,
              "responseBody": "string",
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "commit1": "commit1",
                  "commit2": "commit2"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": "string"
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-commit-history",
          "method": "GET",
          "id": "getCommitHistory",
          "originalEndpointId": "endpoint_Versioning.getCommitHistory",
          "name": "Get Commit History",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "commitId",
                "type": {
                  "type": "id",
                  "value": "type_Versioning:CommitId"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/commit/"
              },
              {
                "type": "pathParameter",
                "value": "commitId"
              },
              {
                "type": "literal",
                "value": "/history"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "pageSize",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "nextPageToken",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_common:Token"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Versioning:CommitHistory"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/resourceRid/commit/commitId/history",
              "pathParameters": {
                "resourceRid": "resourceRid",
                "commitId": "commitId"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "history": [
                  {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  },
                  {
                    "id": "id",
                    "resourceRid": "resourceRid",
                    "parentCommit": "parentCommit",
                    "mergeParentCommit": "mergeParentCommit",
                    "message": "message",
                    "isWorkingState": true,
                    "committedBy": "committedBy",
                    "committedAt": "2024-01-15T09:30:00Z"
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "history": [
                    {
                      "id": "id",
                      "resourceRid": "resourceRid",
                      "parentCommit": "parentCommit",
                      "mergeParentCommit": "mergeParentCommit",
                      "message": "message",
                      "isWorkingState": true,
                      "committedBy": "committedBy",
                      "committedAt": "2024-01-15T09:30:00Z"
                    },
                    {
                      "id": "id",
                      "resourceRid": "resourceRid",
                      "parentCommit": "parentCommit",
                      "mergeParentCommit": "mergeParentCommit",
                      "message": "message",
                      "isWorkingState": true,
                      "committedBy": "committedBy",
                      "committedAt": "2024-01-15T09:30:00Z"
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "persist-commits",
          "method": "POST",
          "id": "persistCommits",
          "originalEndpointId": "endpoint_Versioning.persistCommits",
          "name": "Persist Commits",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/commit/persist"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Versioning:ResourceAndCommitId"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/commit/persist",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": [
                {
                  "resourceRid": "resourceRid",
                  "commitId": "commitId"
                }
              ],
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": [
                  {
                    "resourceRid": "resourceRid",
                    "commitId": "commitId"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-branch",
          "method": "GET",
          "id": "getBranch",
          "originalEndpointId": "endpoint_Versioning.getBranch",
          "name": "Get Branch",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "branchName",
                "type": {
                  "type": "id",
                  "value": "type_Versioning:BranchName"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/branch/"
              },
              {
                "type": "pathParameter",
                "value": "branchName"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Versioning:Branch"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/resourceRid/branch/branchName",
              "pathParameters": {
                "resourceRid": "resourceRid",
                "branchName": "branchName"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "name": "name",
                "resourceRid": "resourceRid",
                "commit": "commit",
                "createdBy": "createdBy",
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "name": "name",
                  "resourceRid": "resourceRid",
                  "commit": "commit",
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-branches",
          "method": "GET",
          "id": "getBranches",
          "originalEndpointId": "endpoint_Versioning.getBranches",
          "name": "Get Branches",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/branch"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_Versioning:Branch"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/resourceRid/branch",
              "pathParameters": {
                "resourceRid": "resourceRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "name": "name",
                  "resourceRid": "resourceRid",
                  "commit": "commit",
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z"
                },
                {
                  "rid": "rid",
                  "name": "name",
                  "resourceRid": "resourceRid",
                  "commit": "commit",
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "name": "name",
                    "resourceRid": "resourceRid",
                    "commit": "commit",
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z"
                  },
                  {
                    "rid": "rid",
                    "name": "name",
                    "resourceRid": "resourceRid",
                    "commit": "commit",
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get-branches",
          "method": "POST",
          "id": "batchGetBranches",
          "originalEndpointId": "endpoint_Versioning.batchGetBranches",
          "name": "Batch Get Branches",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/branch/batch-get"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Versioning:ResourceAndBranchName"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Versioning:Branch"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/branch/batch-get",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": [
                {
                  "resourceRid": "resourceRid",
                  "branchName": "branchName"
                }
              ],
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "name": "name",
                  "resourceRid": "resourceRid",
                  "commit": "commit",
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "updatedAt": "2024-01-15T09:30:00Z"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": [
                  {
                    "resourceRid": "resourceRid",
                    "branchName": "branchName"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "name": "name",
                    "resourceRid": "resourceRid",
                    "commit": "commit",
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "updatedAt": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-tag",
          "method": "GET",
          "id": "getTag",
          "originalEndpointId": "endpoint_Versioning.getTag",
          "name": "Get Tag",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "tagName",
                "type": {
                  "type": "id",
                  "value": "type_Versioning:TagName"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/tag/"
              },
              {
                "type": "pathParameter",
                "value": "tagName"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Versioning:Tag"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/resourceRid/tag/tagName",
              "pathParameters": {
                "resourceRid": "resourceRid",
                "tagName": "tagName"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "name": "name",
                "resourceRid": "resourceRid",
                "commit": "commit",
                "createdBy": "createdBy",
                "createdAt": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "name": "name",
                  "resourceRid": "resourceRid",
                  "commit": "commit",
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get-tags",
          "method": "POST",
          "id": "batchGetTags",
          "originalEndpointId": "endpoint_Versioning.batchGetTags",
          "name": "Batch Get Tags",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/tag/batch-get"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Versioning:ResourceAndCommitId"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Versioning:Tag"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/tag/batch-get",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": [
                {
                  "resourceRid": "resourceRid",
                  "commitId": "commitId"
                }
              ],
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "name": "name",
                  "resourceRid": "resourceRid",
                  "commit": "commit",
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": [
                  {
                    "resourceRid": "resourceRid",
                    "commitId": "commitId"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "name": "name",
                    "resourceRid": "resourceRid",
                    "commit": "commit",
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-tags-by-resource",
          "method": "GET",
          "id": "getTagsByResource",
          "originalEndpointId": "endpoint_Versioning.getTagsByResource",
          "name": "Get Tags By Resource",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/tag"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_Versioning:Tag"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/resourceRid/tag",
              "pathParameters": {
                "resourceRid": "resourceRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "rid": "rid",
                  "name": "name",
                  "resourceRid": "resourceRid",
                  "commit": "commit",
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z"
                },
                {
                  "rid": "rid",
                  "name": "name",
                  "resourceRid": "resourceRid",
                  "commit": "commit",
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "rid": "rid",
                    "name": "name",
                    "resourceRid": "resourceRid",
                    "commit": "commit",
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z"
                  },
                  {
                    "rid": "rid",
                    "name": "name",
                    "resourceRid": "resourceRid",
                    "commit": "commit",
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "delete-branch",
          "method": "DELETE",
          "id": "deleteBranch",
          "originalEndpointId": "endpoint_Versioning.deleteBranch",
          "name": "Delete Branch",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "branchName",
                "type": {
                  "type": "id",
                  "value": "type_Versioning:BranchName"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/branch/"
              },
              {
                "type": "pathParameter",
                "value": "branchName"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/resourceRid/branch/branchName",
              "pathParameters": {
                "resourceRid": "resourceRid",
                "branchName": "branchName"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "delete-branches",
          "method": "POST",
          "id": "deleteBranches",
          "originalEndpointId": "endpoint_Versioning.deleteBranches",
          "name": "Delete Branches",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/branch/batch-delete"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Versioning:ResourceAndBranchName"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/branch/batch-delete",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": [
                {
                  "resourceRid": "resourceRid",
                  "branchName": "branchName"
                }
              ],
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": [
                  {
                    "resourceRid": "resourceRid",
                    "branchName": "branchName"
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "delete-tag",
          "method": "DELETE",
          "id": "deleteTag",
          "originalEndpointId": "endpoint_Versioning.deleteTag",
          "name": "Delete Tag",
          "path": {
            "pathParameters": [
              {
                "key": "resourceRid",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "tagName",
                "type": {
                  "type": "id",
                  "value": "type_Versioning:TagName"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/scout/v1/versioning"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "resourceRid"
              },
              {
                "type": "literal",
                "value": "/tag/"
              },
              {
                "type": "pathParameter",
                "value": "tagName"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/scout/v1/versioning/resourceRid/tag/tagName",
              "pathParameters": {
                "resourceRid": "resourceRid",
                "tagName": "tagName"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Versioning:CommitId",
        "type_Versioning:Commit",
        "type_Versioning:BranchRid",
        "type_Versioning:BranchName",
        "type_Versioning:Branch",
        "type_Versioning:TagRid",
        "type_Versioning:TagName",
        "type_Versioning:Tag",
        "type_Versioning:InitResourceVersioningRequest",
        "type_Versioning:CreateBranchRequest",
        "type_Versioning:CreateTagRequest",
        "type_Versioning:GetLeastCommonAncestorRequest",
        "type_Versioning:SaveWorkingStateRequest",
        "type_Versioning:CommitRequest",
        "type_Versioning:CompactionStrategy",
        "type_Versioning:CompactCommitsRequest",
        "type_Versioning:BranchAndCommit",
        "type_Versioning:ResourceAndCommitId",
        "type_Versioning:ResourceAndBranchName",
        "type_Versioning:CommitHistory"
      ],
      "subpackages": [],
      "urlSlug": "versioning",
      "description": "This is the external-facing portion of VersioningService which\ngives clients access to functionality that doesn't create new\ncommits. The creation of new commits should be done via the\nresource-specific services.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_Video": {
      "subpackageId": "subpackage_Video",
      "name": "Video",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get",
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_Video.get",
          "name": "Get",
          "path": {
            "pathParameters": [
              {
                "key": "videoRid",
                "type": {
                  "type": "id",
                  "value": "type_Video:VideoRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos/"
              },
              {
                "type": "pathParameter",
                "value": "videoRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Video:Video"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos/videoRid",
              "pathParameters": {
                "videoRid": "videoRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "title": "title",
                "description": "description",
                "labels": ["labels"],
                "properties": {
                  "properties": "properties"
                },
                "createdBy": "createdBy",
                "createdAt": "2024-01-15T09:30:00Z",
                "originMetadata": {
                  "videoSources": [
                    {
                      "type": "s3",
                      "s3": "videoSources"
                    },
                    {
                      "type": "s3",
                      "s3": "videoSources"
                    }
                  ],
                  "videoSourcesOriginalHandles": [
                    {
                      "type": "s3",
                      "s3": "videoSourcesOriginalHandles"
                    },
                    {
                      "type": "s3",
                      "s3": "videoSourcesOriginalHandles"
                    }
                  ],
                  "timestampManifest": {
                    "type": "mcap",
                    "mcap": {
                      "mcapChannelLocator": {
                        "type": "topic",
                        "topic": "mcapChannelLocator"
                      }
                    }
                  }
                },
                "allSegmentsMetadata": {
                  "rid": "rid",
                  "numFrames": 1,
                  "numSegments": 1,
                  "scaleFactor": 1.1,
                  "minAbsoluteTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "maxAbsoluteTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "mediaDurationSeconds": 1.1,
                  "mediaFrameRate": 1.1,
                  "minTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "maxTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "durationSeconds": 1.1,
                  "frameRate": 1.1
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "title": "title",
                  "description": "description",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "originMetadata": {
                    "videoSources": [
                      {
                        "type": "s3",
                        "s3": "videoSources"
                      },
                      {
                        "type": "s3",
                        "s3": "videoSources"
                      }
                    ],
                    "videoSourcesOriginalHandles": [
                      {
                        "type": "s3",
                        "s3": "videoSourcesOriginalHandles"
                      },
                      {
                        "type": "s3",
                        "s3": "videoSourcesOriginalHandles"
                      }
                    ],
                    "timestampManifest": {
                      "type": "mcap",
                      "mcap": {
                        "mcapChannelLocator": {
                          "type": "topic",
                          "topic": "mcapChannelLocator"
                        }
                      }
                    }
                  },
                  "allSegmentsMetadata": {
                    "rid": "rid",
                    "numFrames": 1,
                    "numSegments": 1,
                    "scaleFactor": 1.1,
                    "minAbsoluteTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "maxAbsoluteTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "mediaDurationSeconds": 1.1,
                    "mediaFrameRate": 1.1,
                    "minTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "maxTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "durationSeconds": 1.1,
                    "frameRate": 1.1
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get",
          "method": "POST",
          "id": "batchGet",
          "originalEndpointId": "endpoint_Video.batchGet",
          "name": "Batch Get",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos/batchGet"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Video:GetVideosRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Video:GetVideosResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos/batchGet",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "videoRids": ["videoRids"]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "responses": [
                  {
                    "rid": "rid",
                    "title": "title",
                    "description": "description",
                    "labels": ["labels"],
                    "properties": {
                      "properties": "properties"
                    },
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "originMetadata": {
                      "videoSources": [
                        {
                          "type": "s3",
                          "s3": "videoSources"
                        },
                        {
                          "type": "s3",
                          "s3": "videoSources"
                        }
                      ],
                      "videoSourcesOriginalHandles": [
                        {
                          "type": "s3",
                          "s3": "videoSourcesOriginalHandles"
                        },
                        {
                          "type": "s3",
                          "s3": "videoSourcesOriginalHandles"
                        }
                      ],
                      "timestampManifest": {
                        "type": "mcap",
                        "mcap": {
                          "mcapChannelLocator": {
                            "type": "topic",
                            "topic": "mcapChannelLocator"
                          }
                        }
                      }
                    },
                    "allSegmentsMetadata": {
                      "rid": "rid",
                      "numFrames": 1,
                      "numSegments": 1,
                      "scaleFactor": 1.1,
                      "minAbsoluteTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "maxAbsoluteTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "mediaDurationSeconds": 1.1,
                      "mediaFrameRate": 1.1,
                      "minTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "maxTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "durationSeconds": 1.1,
                      "frameRate": 1.1
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "videoRids": ["videoRids"]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "responses": [
                    {
                      "rid": "rid",
                      "title": "title",
                      "description": "description",
                      "labels": ["labels"],
                      "properties": {
                        "properties": "properties"
                      },
                      "createdBy": "createdBy",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "originMetadata": {
                        "videoSources": [
                          {
                            "type": "s3",
                            "s3": "videoSources"
                          },
                          {
                            "type": "s3",
                            "s3": "videoSources"
                          }
                        ],
                        "videoSourcesOriginalHandles": [
                          {
                            "type": "s3",
                            "s3": "videoSourcesOriginalHandles"
                          },
                          {
                            "type": "s3",
                            "s3": "videoSourcesOriginalHandles"
                          }
                        ],
                        "timestampManifest": {
                          "type": "mcap",
                          "mcap": {
                            "mcapChannelLocator": {
                              "type": "topic",
                              "topic": "mcapChannelLocator"
                            }
                          }
                        }
                      },
                      "allSegmentsMetadata": {
                        "rid": "rid",
                        "numFrames": 1,
                        "numSegments": 1,
                        "scaleFactor": 1.1,
                        "minAbsoluteTimestamp": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "maxAbsoluteTimestamp": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "mediaDurationSeconds": 1.1,
                        "mediaFrameRate": 1.1,
                        "minTimestamp": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "maxTimestamp": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "durationSeconds": 1.1,
                        "frameRate": 1.1
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "search",
          "method": "POST",
          "id": "search",
          "originalEndpointId": "endpoint_Video.search",
          "name": "Search",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos/search"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Video:SearchVideosRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Video:SearchVideosResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos/search",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "query": {
                  "type": "searchText",
                  "searchText": "query"
                },
                "sortOptions": {
                  "isDescending": true,
                  "field": "CREATED_AT"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "results": [
                  {
                    "rid": "rid",
                    "title": "title",
                    "description": "description",
                    "labels": ["labels"],
                    "properties": {
                      "properties": "properties"
                    },
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "originMetadata": {
                      "videoSources": [
                        {
                          "type": "s3",
                          "s3": "videoSources"
                        },
                        {
                          "type": "s3",
                          "s3": "videoSources"
                        }
                      ],
                      "videoSourcesOriginalHandles": [
                        {
                          "type": "s3",
                          "s3": "videoSourcesOriginalHandles"
                        },
                        {
                          "type": "s3",
                          "s3": "videoSourcesOriginalHandles"
                        }
                      ],
                      "timestampManifest": {
                        "type": "mcap",
                        "mcap": {
                          "mcapChannelLocator": {
                            "type": "topic",
                            "topic": "mcapChannelLocator"
                          }
                        }
                      }
                    },
                    "allSegmentsMetadata": {
                      "rid": "rid",
                      "numFrames": 1,
                      "numSegments": 1,
                      "scaleFactor": 1.1,
                      "minAbsoluteTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "maxAbsoluteTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "mediaDurationSeconds": 1.1,
                      "mediaFrameRate": 1.1,
                      "minTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "maxTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "durationSeconds": 1.1,
                      "frameRate": 1.1
                    }
                  },
                  {
                    "rid": "rid",
                    "title": "title",
                    "description": "description",
                    "labels": ["labels"],
                    "properties": {
                      "properties": "properties"
                    },
                    "createdBy": "createdBy",
                    "createdAt": "2024-01-15T09:30:00Z",
                    "originMetadata": {
                      "videoSources": [
                        {
                          "type": "s3",
                          "s3": "videoSources"
                        },
                        {
                          "type": "s3",
                          "s3": "videoSources"
                        }
                      ],
                      "videoSourcesOriginalHandles": [
                        {
                          "type": "s3",
                          "s3": "videoSourcesOriginalHandles"
                        },
                        {
                          "type": "s3",
                          "s3": "videoSourcesOriginalHandles"
                        }
                      ],
                      "timestampManifest": {
                        "type": "mcap",
                        "mcap": {
                          "mcapChannelLocator": {
                            "type": "topic",
                            "topic": "mcapChannelLocator"
                          }
                        }
                      }
                    },
                    "allSegmentsMetadata": {
                      "rid": "rid",
                      "numFrames": 1,
                      "numSegments": 1,
                      "scaleFactor": 1.1,
                      "minAbsoluteTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "maxAbsoluteTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "mediaDurationSeconds": 1.1,
                      "mediaFrameRate": 1.1,
                      "minTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "maxTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      "durationSeconds": 1.1,
                      "frameRate": 1.1
                    }
                  }
                ],
                "nextPageToken": "nextPageToken"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "query": {
                    "type": "searchText",
                    "searchText": "query"
                  },
                  "sortOptions": {
                    "isDescending": true,
                    "field": "CREATED_AT"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "results": [
                    {
                      "rid": "rid",
                      "title": "title",
                      "description": "description",
                      "labels": ["labels"],
                      "properties": {
                        "properties": "properties"
                      },
                      "createdBy": "createdBy",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "originMetadata": {
                        "videoSources": [
                          {
                            "type": "s3",
                            "s3": "videoSources"
                          },
                          {
                            "type": "s3",
                            "s3": "videoSources"
                          }
                        ],
                        "videoSourcesOriginalHandles": [
                          {
                            "type": "s3",
                            "s3": "videoSourcesOriginalHandles"
                          },
                          {
                            "type": "s3",
                            "s3": "videoSourcesOriginalHandles"
                          }
                        ],
                        "timestampManifest": {
                          "type": "mcap",
                          "mcap": {
                            "mcapChannelLocator": {
                              "type": "topic",
                              "topic": "mcapChannelLocator"
                            }
                          }
                        }
                      },
                      "allSegmentsMetadata": {
                        "rid": "rid",
                        "numFrames": 1,
                        "numSegments": 1,
                        "scaleFactor": 1.1,
                        "minAbsoluteTimestamp": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "maxAbsoluteTimestamp": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "mediaDurationSeconds": 1.1,
                        "mediaFrameRate": 1.1,
                        "minTimestamp": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "maxTimestamp": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "durationSeconds": 1.1,
                        "frameRate": 1.1
                      }
                    },
                    {
                      "rid": "rid",
                      "title": "title",
                      "description": "description",
                      "labels": ["labels"],
                      "properties": {
                        "properties": "properties"
                      },
                      "createdBy": "createdBy",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "originMetadata": {
                        "videoSources": [
                          {
                            "type": "s3",
                            "s3": "videoSources"
                          },
                          {
                            "type": "s3",
                            "s3": "videoSources"
                          }
                        ],
                        "videoSourcesOriginalHandles": [
                          {
                            "type": "s3",
                            "s3": "videoSourcesOriginalHandles"
                          },
                          {
                            "type": "s3",
                            "s3": "videoSourcesOriginalHandles"
                          }
                        ],
                        "timestampManifest": {
                          "type": "mcap",
                          "mcap": {
                            "mcapChannelLocator": {
                              "type": "topic",
                              "topic": "mcapChannelLocator"
                            }
                          }
                        }
                      },
                      "allSegmentsMetadata": {
                        "rid": "rid",
                        "numFrames": 1,
                        "numSegments": 1,
                        "scaleFactor": 1.1,
                        "minAbsoluteTimestamp": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "maxAbsoluteTimestamp": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "mediaDurationSeconds": 1.1,
                        "mediaFrameRate": 1.1,
                        "minTimestamp": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "maxTimestamp": {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        "durationSeconds": 1.1,
                        "frameRate": 1.1
                      }
                    }
                  ],
                  "nextPageToken": "nextPageToken"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create",
          "method": "POST",
          "id": "create",
          "originalEndpointId": "endpoint_Video.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Video:CreateVideoRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Video:Video"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "title": "title",
                "labels": ["labels"],
                "properties": {
                  "properties": "properties"
                },
                "originMetadata": {
                  "videoSources": [
                    {
                      "type": "s3",
                      "s3": "videoSources"
                    },
                    {
                      "type": "s3",
                      "s3": "videoSources"
                    }
                  ],
                  "timestampManifest": {
                    "type": "mcap",
                    "mcap": {
                      "mcapChannelLocator": {
                        "type": "topic",
                        "topic": "mcapChannelLocator"
                      }
                    }
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "title": "title",
                "description": "description",
                "labels": ["labels"],
                "properties": {
                  "properties": "properties"
                },
                "createdBy": "createdBy",
                "createdAt": "2024-01-15T09:30:00Z",
                "originMetadata": {
                  "videoSources": [
                    {
                      "type": "s3",
                      "s3": "videoSources"
                    },
                    {
                      "type": "s3",
                      "s3": "videoSources"
                    }
                  ],
                  "videoSourcesOriginalHandles": [
                    {
                      "type": "s3",
                      "s3": "videoSourcesOriginalHandles"
                    },
                    {
                      "type": "s3",
                      "s3": "videoSourcesOriginalHandles"
                    }
                  ],
                  "timestampManifest": {
                    "type": "mcap",
                    "mcap": {
                      "mcapChannelLocator": {
                        "type": "topic",
                        "topic": "mcapChannelLocator"
                      }
                    }
                  }
                },
                "allSegmentsMetadata": {
                  "rid": "rid",
                  "numFrames": 1,
                  "numSegments": 1,
                  "scaleFactor": 1.1,
                  "minAbsoluteTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "maxAbsoluteTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "mediaDurationSeconds": 1.1,
                  "mediaFrameRate": 1.1,
                  "minTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "maxTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "durationSeconds": 1.1,
                  "frameRate": 1.1
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "title",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "originMetadata": {
                    "videoSources": [
                      {
                        "type": "s3",
                        "s3": "videoSources"
                      },
                      {
                        "type": "s3",
                        "s3": "videoSources"
                      }
                    ],
                    "timestampManifest": {
                      "type": "mcap",
                      "mcap": {
                        "mcapChannelLocator": {
                          "type": "topic",
                          "topic": "mcapChannelLocator"
                        }
                      }
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "title": "title",
                  "description": "description",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "originMetadata": {
                    "videoSources": [
                      {
                        "type": "s3",
                        "s3": "videoSources"
                      },
                      {
                        "type": "s3",
                        "s3": "videoSources"
                      }
                    ],
                    "videoSourcesOriginalHandles": [
                      {
                        "type": "s3",
                        "s3": "videoSourcesOriginalHandles"
                      },
                      {
                        "type": "s3",
                        "s3": "videoSourcesOriginalHandles"
                      }
                    ],
                    "timestampManifest": {
                      "type": "mcap",
                      "mcap": {
                        "mcapChannelLocator": {
                          "type": "topic",
                          "topic": "mcapChannelLocator"
                        }
                      }
                    }
                  },
                  "allSegmentsMetadata": {
                    "rid": "rid",
                    "numFrames": 1,
                    "numSegments": 1,
                    "scaleFactor": 1.1,
                    "minAbsoluteTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "maxAbsoluteTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "mediaDurationSeconds": 1.1,
                    "mediaFrameRate": 1.1,
                    "minTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "maxTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "durationSeconds": 1.1,
                    "frameRate": 1.1
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-metadata",
          "method": "PUT",
          "id": "updateMetadata",
          "originalEndpointId": "endpoint_Video.updateMetadata",
          "name": "Update Metadata",
          "path": {
            "pathParameters": [
              {
                "key": "videoRid",
                "type": {
                  "type": "id",
                  "value": "type_Video:VideoRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos/"
              },
              {
                "type": "pathParameter",
                "value": "videoRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Video:UpdateVideoMetadataRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Video:Video"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos/videoRid",
              "pathParameters": {
                "videoRid": "videoRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "properties": {
                  "properties": "properties"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "title": "title",
                "description": "description",
                "labels": ["labels"],
                "properties": {
                  "properties": "properties"
                },
                "createdBy": "createdBy",
                "createdAt": "2024-01-15T09:30:00Z",
                "originMetadata": {
                  "videoSources": [
                    {
                      "type": "s3",
                      "s3": "videoSources"
                    },
                    {
                      "type": "s3",
                      "s3": "videoSources"
                    }
                  ],
                  "videoSourcesOriginalHandles": [
                    {
                      "type": "s3",
                      "s3": "videoSourcesOriginalHandles"
                    },
                    {
                      "type": "s3",
                      "s3": "videoSourcesOriginalHandles"
                    }
                  ],
                  "timestampManifest": {
                    "type": "mcap",
                    "mcap": {
                      "mcapChannelLocator": {
                        "type": "topic",
                        "topic": "mcapChannelLocator"
                      }
                    }
                  }
                },
                "allSegmentsMetadata": {
                  "rid": "rid",
                  "numFrames": 1,
                  "numSegments": 1,
                  "scaleFactor": 1.1,
                  "minAbsoluteTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "maxAbsoluteTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "mediaDurationSeconds": 1.1,
                  "mediaFrameRate": 1.1,
                  "minTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "maxTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "durationSeconds": 1.1,
                  "frameRate": 1.1
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "properties": {
                    "properties": "properties"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "title": "title",
                  "description": "description",
                  "labels": ["labels"],
                  "properties": {
                    "properties": "properties"
                  },
                  "createdBy": "createdBy",
                  "createdAt": "2024-01-15T09:30:00Z",
                  "originMetadata": {
                    "videoSources": [
                      {
                        "type": "s3",
                        "s3": "videoSources"
                      },
                      {
                        "type": "s3",
                        "s3": "videoSources"
                      }
                    ],
                    "videoSourcesOriginalHandles": [
                      {
                        "type": "s3",
                        "s3": "videoSourcesOriginalHandles"
                      },
                      {
                        "type": "s3",
                        "s3": "videoSourcesOriginalHandles"
                      }
                    ],
                    "timestampManifest": {
                      "type": "mcap",
                      "mcap": {
                        "mcapChannelLocator": {
                          "type": "topic",
                          "topic": "mcapChannelLocator"
                        }
                      }
                    }
                  },
                  "allSegmentsMetadata": {
                    "rid": "rid",
                    "numFrames": 1,
                    "numSegments": 1,
                    "scaleFactor": 1.1,
                    "minAbsoluteTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "maxAbsoluteTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "mediaDurationSeconds": 1.1,
                    "mediaFrameRate": 1.1,
                    "minTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "maxTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "durationSeconds": 1.1,
                    "frameRate": 1.1
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-ingest-status",
          "method": "PUT",
          "id": "updateIngestStatus",
          "originalEndpointId": "endpoint_Video.updateIngestStatus",
          "name": "Update Ingest Status",
          "path": {
            "pathParameters": [
              {
                "key": "videoRid",
                "type": {
                  "type": "id",
                  "value": "type_Video:VideoRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos/"
              },
              {
                "type": "pathParameter",
                "value": "videoRid"
              },
              {
                "type": "literal",
                "value": "/ingest-status"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Video:UpdateIngestStatus"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos/videoRid/ingest-status",
              "pathParameters": {
                "videoRid": "videoRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "type": "success",
                "success": {}
              },
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "type": "success",
                  "success": {}
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-ingest-status",
          "method": "GET",
          "id": "getIngestStatus",
          "originalEndpointId": "endpoint_Video.getIngestStatus",
          "name": "Get Ingest Status",
          "path": {
            "pathParameters": [
              {
                "key": "videoRid",
                "type": {
                  "type": "id",
                  "value": "type_Video:VideoRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos/"
              },
              {
                "type": "pathParameter",
                "value": "videoRid"
              },
              {
                "type": "literal",
                "value": "/ingest-status"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Video:DetailedIngestStatus"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos/videoRid/ingest-status",
              "pathParameters": {
                "videoRid": "videoRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "success",
                "success": {}
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "success",
                  "success": {}
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "batch-get-ingest-status",
          "method": "POST",
          "id": "batchGetIngestStatus",
          "originalEndpointId": "endpoint_Video.batchGetIngestStatus",
          "name": "Batch Get Ingest Status",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos/batch-get-ingest-status"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "set",
                "itemType": {
                  "type": "id",
                  "value": "type_Video:VideoRid"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "id",
                  "value": "type_Video:VideoRid"
                },
                "valueType": {
                  "type": "id",
                  "value": "type_Video:DetailedIngestStatus"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos/batch-get-ingest-status",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": ["string"],
              "responseStatusCode": 200,
              "responseBody": {
                "string": {
                  "type": "success",
                  "success": {}
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": ["string"]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "string": {
                    "type": "success",
                    "success": {}
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "archive",
          "method": "PUT",
          "id": "archive",
          "originalEndpointId": "endpoint_Video.archive",
          "name": "Archive",
          "path": {
            "pathParameters": [
              {
                "key": "videoRid",
                "type": {
                  "type": "id",
                  "value": "type_Video:VideoRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos/"
              },
              {
                "type": "pathParameter",
                "value": "videoRid"
              },
              {
                "type": "literal",
                "value": "/archive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos/videoRid/archive",
              "pathParameters": {
                "videoRid": "videoRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "unarchive",
          "method": "PUT",
          "id": "unarchive",
          "originalEndpointId": "endpoint_Video.unarchive",
          "name": "Unarchive",
          "path": {
            "pathParameters": [
              {
                "key": "videoRid",
                "type": {
                  "type": "id",
                  "value": "type_Video:VideoRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos/"
              },
              {
                "type": "pathParameter",
                "value": "videoRid"
              },
              {
                "type": "literal",
                "value": "/unarchive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos/videoRid/unarchive",
              "pathParameters": {
                "videoRid": "videoRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-playlist",
          "method": "GET",
          "id": "getPlaylist",
          "originalEndpointId": "endpoint_Video.getPlaylist",
          "name": "Get Playlist",
          "path": {
            "pathParameters": [
              {
                "key": "videoRid",
                "type": {
                  "type": "id",
                  "value": "type_Video:VideoRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos/"
              },
              {
                "type": "pathParameter",
                "value": "videoRid"
              },
              {
                "type": "literal",
                "value": "/playlist"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "fileDownload"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos/videoRid/playlist",
              "pathParameters": {
                "videoRid": "videoRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "filename",
                "value": "<bytes>"
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "update-target-duration",
          "method": "PUT",
          "id": "updateTargetDuration",
          "originalEndpointId": "endpoint_Video.updateTargetDuration",
          "name": "Update Target Duration",
          "path": {
            "pathParameters": [
              {
                "key": "videoRid",
                "type": {
                  "type": "id",
                  "value": "type_Video:VideoRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos/"
              },
              {
                "type": "pathParameter",
                "value": "videoRid"
              },
              {
                "type": "literal",
                "value": "/target-duration"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Video:UpdateTargetDurationRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_Video:UpdateTargetDurationResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos/videoRid/target-duration",
              "pathParameters": {
                "videoRid": "videoRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "targetDurationSeconds": 1.1
              },
              "responseStatusCode": 200,
              "responseBody": {
                "targetDurationSeconds": 1.1
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "targetDurationSeconds": 1.1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "targetDurationSeconds": 1.1
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-segment-summaries",
          "method": "GET",
          "id": "getSegmentSummaries",
          "originalEndpointId": "endpoint_Video.getSegmentSummaries",
          "name": "Get Segment Summaries",
          "path": {
            "pathParameters": [
              {
                "key": "videoRid",
                "type": {
                  "type": "id",
                  "value": "type_Video:VideoRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos/"
              },
              {
                "type": "pathParameter",
                "value": "videoRid"
              },
              {
                "type": "literal",
                "value": "/segment-summaries"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_Video:SegmentSummary"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos/videoRid/segment-summaries",
              "pathParameters": {
                "videoRid": "videoRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "minAbsoluteTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "maxAbsoluteTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "minMediaTimestamp": 1.1,
                  "maxMediaTimestamp": 1.1
                },
                {
                  "minAbsoluteTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "maxAbsoluteTimestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000,
                    "picos": 1
                  },
                  "minMediaTimestamp": 1.1,
                  "maxMediaTimestamp": 1.1
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "minAbsoluteTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "maxAbsoluteTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "minMediaTimestamp": 1.1,
                    "maxMediaTimestamp": 1.1
                  },
                  {
                    "minAbsoluteTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "maxAbsoluteTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    "minMediaTimestamp": 1.1,
                    "maxMediaTimestamp": 1.1
                  }
                ]
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_Video:S3Path",
        "type_Video:VideoRid",
        "type_Video:SegmentRid",
        "type_Video:Handle",
        "type_Video:Token",
        "type_Video:PropertyName",
        "type_Video:PropertyValue",
        "type_Video:Property",
        "type_Video:Label",
        "type_Video:ArchivedStatus",
        "type_Video:Video",
        "type_Video:VideoAllSegmentsMetadata",
        "type_Video:SegmentSummary",
        "type_Video:CreateVideoRequest",
        "type_Video:VideoOriginMetadata",
        "type_Video:VideoTimestampManifest",
        "type_Video:McapTimestampManifest",
        "type_Video:NoTimestampManifest",
        "type_Video:UpdateVideoMetadataRequest",
        "type_Video:ScaleParameter",
        "type_Video:UpdateTargetDurationRequest",
        "type_Video:UpdateTargetDurationResponse",
        "type_Video:GetVideosRequest",
        "type_Video:GetVideosResponse",
        "type_Video:SearchVideosQuery",
        "type_Video:SearchVideosRequest",
        "type_Video:SortOptions",
        "type_Video:SortField",
        "type_Video:SearchVideosResponse",
        "type_Video:TimestampMappings",
        "type_Video:SegmentTimestamps",
        "type_Video:Segment",
        "type_Video:CreateSegment",
        "type_Video:CreateSegmentsRequest",
        "type_Video:CreateSegmentsResponse",
        "type_Video:GetSegmentByTimestampRequest",
        "type_Video:IngestStatus",
        "type_Video:DetailedIngestStatus",
        "type_Video:UpdateIngestStatus",
        "type_Video:Empty",
        "type_Video:SuccessIngestStatus",
        "type_Video:ErrorIngestStatus",
        "type_Video:ErrorType",
        "type_Video:IngestError"
      ],
      "subpackages": [],
      "urlSlug": "video",
      "description": "The video service manages videos and video metadata.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_VideoSegment": {
      "subpackageId": "subpackage_VideoSegment",
      "name": "VideoSegment",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-segment-data",
          "method": "GET",
          "id": "getSegmentData",
          "originalEndpointId": "endpoint_VideoSegment.getSegmentData",
          "name": "Get Segment Data",
          "path": {
            "pathParameters": [
              {
                "key": "videoRid",
                "type": {
                  "type": "id",
                  "value": "type_VideoSegment:VideoRid"
                }
              },
              {
                "key": "segmentRid",
                "type": {
                  "type": "id",
                  "value": "type_VideoSegment:SegmentRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos/"
              },
              {
                "type": "pathParameter",
                "value": "videoRid"
              },
              {
                "type": "literal",
                "value": "/segments/"
              },
              {
                "type": "pathParameter",
                "value": "segmentRid"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "fileDownload"
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos/videoRid/segments/segmentRid",
              "pathParameters": {
                "videoRid": "videoRid",
                "segmentRid": "segmentRid"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "filename",
                "value": "<bytes>"
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "create-segments",
          "method": "POST",
          "id": "createSegments",
          "originalEndpointId": "endpoint_VideoSegment.createSegments",
          "name": "Create Segments",
          "path": {
            "pathParameters": [
              {
                "key": "videoRid",
                "type": {
                  "type": "id",
                  "value": "type_VideoSegment:VideoRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos/"
              },
              {
                "type": "pathParameter",
                "value": "videoRid"
              },
              {
                "type": "literal",
                "value": "/create-segments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_VideoSegment:CreateSegmentsRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_VideoSegment:CreateSegmentsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos/videoRid/create-segments",
              "pathParameters": {
                "videoRid": "videoRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "requests": [
                  {
                    "dataHandle": {
                      "type": "s3",
                      "s3": "dataHandle"
                    },
                    "frameRate": 1.1,
                    "durationSeconds": 1.1,
                    "timestamps": {
                      "type": "timestamps",
                      "timestamps": [
                        {
                          "seconds": 1000000,
                          "nanos": 1000000
                        },
                        {
                          "seconds": 1000000,
                          "nanos": 1000000
                        }
                      ]
                    },
                    "segmentEndTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    }
                  },
                  {
                    "dataHandle": {
                      "type": "s3",
                      "s3": "dataHandle"
                    },
                    "frameRate": 1.1,
                    "durationSeconds": 1.1,
                    "timestamps": {
                      "type": "timestamps",
                      "timestamps": [
                        {
                          "seconds": 1000000,
                          "nanos": 1000000
                        },
                        {
                          "seconds": 1000000,
                          "nanos": 1000000
                        }
                      ]
                    },
                    "segmentEndTimestamp": {
                      "seconds": 1000000,
                      "nanos": 1000000
                    }
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "segments": [
                  {
                    "rid": "rid",
                    "videoRid": "videoRid",
                    "dataHandle": {
                      "type": "s3",
                      "s3": "dataHandle"
                    },
                    "frameRate": 1.1,
                    "durationSeconds": 1.1,
                    "timestamps": {
                      "type": "timestamps",
                      "timestamps": [
                        {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        }
                      ]
                    }
                  },
                  {
                    "rid": "rid",
                    "videoRid": "videoRid",
                    "dataHandle": {
                      "type": "s3",
                      "s3": "dataHandle"
                    },
                    "frameRate": 1.1,
                    "durationSeconds": 1.1,
                    "timestamps": {
                      "type": "timestamps",
                      "timestamps": [
                        {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        },
                        {
                          "seconds": 1000000,
                          "nanos": 1000000,
                          "picos": 1
                        }
                      ]
                    }
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "requests": [
                    {
                      "dataHandle": {
                        "type": "s3",
                        "s3": "dataHandle"
                      },
                      "frameRate": 1.1,
                      "durationSeconds": 1.1,
                      "timestamps": {
                        "type": "timestamps",
                        "timestamps": [
                          {
                            "seconds": 1000000,
                            "nanos": 1000000
                          },
                          {
                            "seconds": 1000000,
                            "nanos": 1000000
                          }
                        ]
                      },
                      "segmentEndTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      }
                    },
                    {
                      "dataHandle": {
                        "type": "s3",
                        "s3": "dataHandle"
                      },
                      "frameRate": 1.1,
                      "durationSeconds": 1.1,
                      "timestamps": {
                        "type": "timestamps",
                        "timestamps": [
                          {
                            "seconds": 1000000,
                            "nanos": 1000000
                          },
                          {
                            "seconds": 1000000,
                            "nanos": 1000000
                          }
                        ]
                      },
                      "segmentEndTimestamp": {
                        "seconds": 1000000,
                        "nanos": 1000000
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "segments": [
                    {
                      "rid": "rid",
                      "videoRid": "videoRid",
                      "dataHandle": {
                        "type": "s3",
                        "s3": "dataHandle"
                      },
                      "frameRate": 1.1,
                      "durationSeconds": 1.1,
                      "timestamps": {
                        "type": "timestamps",
                        "timestamps": [
                          {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          }
                        ]
                      }
                    },
                    {
                      "rid": "rid",
                      "videoRid": "videoRid",
                      "dataHandle": {
                        "type": "s3",
                        "s3": "dataHandle"
                      },
                      "frameRate": 1.1,
                      "durationSeconds": 1.1,
                      "timestamps": {
                        "type": "timestamps",
                        "timestamps": [
                          {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          },
                          {
                            "seconds": 1000000,
                            "nanos": 1000000,
                            "picos": 1
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "get-segment-by-timestamp",
          "method": "POST",
          "id": "getSegmentByTimestamp",
          "originalEndpointId": "endpoint_VideoSegment.getSegmentByTimestamp",
          "name": "Get Segment By Timestamp",
          "path": {
            "pathParameters": [
              {
                "key": "videoRid",
                "type": {
                  "type": "id",
                  "value": "type_VideoSegment:VideoRid"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": "/video/v1"
              },
              {
                "type": "literal",
                "value": "/videos/"
              },
              {
                "type": "pathParameter",
                "value": "videoRid"
              },
              {
                "type": "literal",
                "value": "/get-segment-by-timestamp"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_VideoSegment:GetSegmentByTimestampRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_VideoSegment:Segment"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video/v1/videos/videoRid/get-segment-by-timestamp",
              "pathParameters": {
                "videoRid": "videoRid"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "timestamp": {
                  "seconds": 1000000,
                  "nanos": 1000000
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "rid": "rid",
                "videoRid": "videoRid",
                "dataHandle": {
                  "type": "s3",
                  "s3": "dataHandle"
                },
                "frameRate": 1.1,
                "durationSeconds": 1.1,
                "timestamps": {
                  "type": "timestamps",
                  "timestamps": [
                    {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    },
                    {
                      "seconds": 1000000,
                      "nanos": 1000000,
                      "picos": 1
                    }
                  ]
                }
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "timestamp": {
                    "seconds": 1000000,
                    "nanos": 1000000
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "rid": "rid",
                  "videoRid": "videoRid",
                  "dataHandle": {
                    "type": "s3",
                    "s3": "dataHandle"
                  },
                  "frameRate": 1.1,
                  "durationSeconds": 1.1,
                  "timestamps": {
                    "type": "timestamps",
                    "timestamps": [
                      {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      },
                      {
                        "seconds": 1000000,
                        "nanos": 1000000,
                        "picos": 1
                      }
                    ]
                  }
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_VideoSegment:S3Path",
        "type_VideoSegment:VideoRid",
        "type_VideoSegment:SegmentRid",
        "type_VideoSegment:Handle",
        "type_VideoSegment:Token",
        "type_VideoSegment:PropertyName",
        "type_VideoSegment:PropertyValue",
        "type_VideoSegment:Property",
        "type_VideoSegment:Label",
        "type_VideoSegment:ArchivedStatus",
        "type_VideoSegment:Video",
        "type_VideoSegment:VideoAllSegmentsMetadata",
        "type_VideoSegment:SegmentSummary",
        "type_VideoSegment:CreateVideoRequest",
        "type_VideoSegment:VideoOriginMetadata",
        "type_VideoSegment:VideoTimestampManifest",
        "type_VideoSegment:McapTimestampManifest",
        "type_VideoSegment:NoTimestampManifest",
        "type_VideoSegment:UpdateVideoMetadataRequest",
        "type_VideoSegment:ScaleParameter",
        "type_VideoSegment:UpdateTargetDurationRequest",
        "type_VideoSegment:UpdateTargetDurationResponse",
        "type_VideoSegment:GetVideosRequest",
        "type_VideoSegment:GetVideosResponse",
        "type_VideoSegment:SearchVideosQuery",
        "type_VideoSegment:SearchVideosRequest",
        "type_VideoSegment:SortOptions",
        "type_VideoSegment:SortField",
        "type_VideoSegment:SearchVideosResponse",
        "type_VideoSegment:TimestampMappings",
        "type_VideoSegment:SegmentTimestamps",
        "type_VideoSegment:Segment",
        "type_VideoSegment:CreateSegment",
        "type_VideoSegment:CreateSegmentsRequest",
        "type_VideoSegment:CreateSegmentsResponse",
        "type_VideoSegment:GetSegmentByTimestampRequest",
        "type_VideoSegment:IngestStatus",
        "type_VideoSegment:DetailedIngestStatus",
        "type_VideoSegment:UpdateIngestStatus",
        "type_VideoSegment:Empty",
        "type_VideoSegment:SuccessIngestStatus",
        "type_VideoSegment:ErrorIngestStatus",
        "type_VideoSegment:ErrorType",
        "type_VideoSegment:IngestError"
      ],
      "subpackages": [],
      "urlSlug": "video-segment",
      "description": "Upon ingestion, every video is split into smaller segments. The Video Segment Service manages operations on videos\nat the segment-level.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_VideoSegmenter": {
      "subpackageId": "subpackage_VideoSegmenter",
      "name": "VideoSegmenter",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.gov.nominal.io/api"
            }
          ],
          "defaultEnvironment": "Production",
          "urlSlug": "segment-video-async",
          "method": "POST",
          "id": "segmentVideoAsync",
          "originalEndpointId": "endpoint_VideoSegmenter.segmentVideoAsync",
          "name": "Segment Video Async",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": "/video-segmenter/v1"
              },
              {
                "type": "literal",
                "value": "/segment-video-async"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_VideoSegmenter:SegmentVideoRequest"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_VideoSegmenter:SegmentVideoAsyncResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [],
          "examples": [
            {
              "path": "/video-segmenter/v1/segment-video-async",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "videoRid": "videoRid"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "jobRid": "jobRid"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "videoRid": "videoRid"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "jobRid": "jobRid"
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        }
      ],
      "types": [
        "type_VideoSegmenter:VideoRid",
        "type_VideoSegmenter:SegmentVideoRequest",
        "type_VideoSegmenter:SegmentVideoAsyncResponse"
      ],
      "subpackages": [],
      "urlSlug": "video-segmenter",
      "description": "The video segmenter service is called by ingest service to \nsplit a video into segments.\n",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_channel-variables": {
      "subpackageId": "subpackage_channel-variables",
      "name": "channel-variables",
      "endpoints": [],
      "types": [
        "type_channel-variables:ChannelVariableName",
        "type_channel-variables:ChannelVariable",
        "type_channel-variables:WorkbookChannelVariableMap",
        "type_channel-variables:ComputeSpec",
        "type_channel-variables:ComputeSpecV1"
      ],
      "subpackages": [],
      "urlSlug": "channel-variables",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_chart-api": {
      "subpackageId": "subpackage_chart-api",
      "name": "chart-api",
      "endpoints": [],
      "types": ["type_chart-api:JsonString", "type_chart-api:DeprecatedDefinitionAndSchemaVersion"],
      "subpackages": [],
      "urlSlug": "chart-api",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_common": {
      "subpackageId": "subpackage_common",
      "name": "common",
      "endpoints": [],
      "types": [
        "type_common:DatasetRid",
        "type_common:DatasetFileId",
        "type_common:TimestampType",
        "type_common:Token",
        "type_common:Label",
        "type_common:PropertyName",
        "type_common:PropertyValue",
        "type_common:Property",
        "type_common:AssetRid",
        "type_common:NotebookRid",
        "type_common:ChecklistRid",
        "type_common:VizId",
        "type_common:FunctionRid",
        "type_common:FunctionLineageRid",
        "type_common:UserRid",
        "type_common:Version",
        "type_common:VersionedVizId",
        "type_common:CheckLineageRid",
        "type_common:CheckRid",
        "type_common:SnapshotRid",
        "type_common:RunRid",
        "type_common:AttachmentRid",
        "type_common:DataSource",
        "type_common:DataSourceType",
        "type_common:ConnectionRid",
        "type_common:LogSetRid",
        "type_common:VideoRid",
        "type_common:Duration",
        "type_common:Link",
        "type_common:EventRid",
        "type_common:HexColor",
        "type_common:DataSourceRefName",
        "type_common:Channel",
        "type_common:ChannelLocator",
        "type_common:JobRid",
        "type_common:TemplateRid",
        "type_common:ArchivedStatus",
        "type_common:Empty",
        "type_common:CheckAlertState",
        "type_common:ClosedWithFurtherActionAlertState",
        "type_common:ClosedWithIgnoreAlertState",
        "type_common:PendingReviewAlertState"
      ],
      "subpackages": [],
      "urlSlug": "common",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_comparison-run": {
      "subpackageId": "subpackage_comparison-run",
      "name": "comparison-run",
      "endpoints": [],
      "types": [
        "type_comparison-run:ComparisonRunGroup",
        "type_comparison-run:ComparisonRun",
        "type_comparison-run:Offset",
        "type_comparison-run:OffsetAnchor",
        "type_comparison-run:OffsetRunAnchor",
        "type_comparison-run:OffsetSeriesAnchor"
      ],
      "subpackages": [],
      "urlSlug": "comparison-run",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_comparison-workbook-definition": {
      "subpackageId": "subpackage_comparison-workbook-definition",
      "name": "comparison-workbook-definition",
      "endpoints": [],
      "types": [
        "type_comparison-workbook-definition:ComparisonWorkbookContent",
        "type_comparison-workbook-definition:ComparisonChannelVariableMap",
        "type_comparison-workbook-definition:VariableName",
        "type_comparison-workbook-definition:ChannelVariable",
        "type_comparison-workbook-definition:ComputeNodeWithContext",
        "type_comparison-workbook-definition:ComparisonWorkbookContext",
        "type_comparison-workbook-definition:VariableLocator",
        "type_comparison-workbook-definition:SupplementalComparisonWorkbookContext",
        "type_comparison-workbook-definition:RangeAggregationContext",
        "type_comparison-workbook-definition:VariableWithAggregation",
        "type_comparison-workbook-definition:ComparisonWorkbookDataScope",
        "type_comparison-workbook-definition:AggregationType",
        "type_comparison-workbook-definition:Max",
        "type_comparison-workbook-definition:Min",
        "type_comparison-workbook-definition:Mean",
        "type_comparison-workbook-definition:StandardDeviation",
        "type_comparison-workbook-definition:ComparisonVizDefinitionMap",
        "type_comparison-workbook-definition:VizDefinition",
        "type_comparison-workbook-definition:ComparisonTableDefinition",
        "type_comparison-workbook-definition:RangeAggregationDefinition",
        "type_comparison-workbook-definition:ComparisonTableDefinitionV1",
        "type_comparison-workbook-definition:ComparisonTableVisualizationOptions",
        "type_comparison-workbook-definition:ComparisonTableDefinitionV2",
        "type_comparison-workbook-definition:ComparisonTableColumn",
        "type_comparison-workbook-definition:ComparisonTableColumnVisualizationOptions",
        "type_comparison-workbook-definition:ComparisonTableColumnOptions"
      ],
      "subpackages": [],
      "urlSlug": "comparison-workbook-definition",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_compute-api-v1": {
      "subpackageId": "subpackage_compute-api-v1",
      "name": "compute-api-v1",
      "endpoints": [],
      "types": [
        "type_compute-api-v1:ComputableNode",
        "type_compute-api-v1:NumericSeriesNode",
        "type_compute-api-v1:EnumSeriesNode",
        "type_compute-api-v1:RangesNode",
        "type_compute-api-v1:CartesianNode",
        "type_compute-api-v1:SummarizeCartesianNode",
        "type_compute-api-v1:FrequencyDomainNode",
        "type_compute-api-v1:FftNode",
        "type_compute-api-v1:SummarizeSeriesNode",
        "type_compute-api-v1:SeriesNode",
        "type_compute-api-v1:SummarizeRangesNode",
        "type_compute-api-v1:SelectValueNode",
        "type_compute-api-v1:RollingOperationSeriesNode",
        "type_compute-api-v1:Window",
        "type_compute-api-v1:VariableValue",
        "type_compute-api-v1:Context",
        "type_compute-api-v1:PersistenceWindowConfiguration",
        "type_compute-api-v1:ArithmeticSeriesNode",
        "type_compute-api-v1:CumulativeSumSeriesNode",
        "type_compute-api-v1:DerivativeSeriesNode",
        "type_compute-api-v1:EnumTimeRangeFilterSeriesNode",
        "type_compute-api-v1:NumericTimeRangeFilterSeriesNode",
        "type_compute-api-v1:EnumTimeShiftSeriesNode",
        "type_compute-api-v1:NumericTimeShiftSeriesNode",
        "type_compute-api-v1:TimeDifferenceSeriesNode",
        "type_compute-api-v1:UnaryArithmeticSeriesNode",
        "type_compute-api-v1:EnumUnionSeriesNode",
        "type_compute-api-v1:NumericUnionSeriesNode",
        "type_compute-api-v1:ValueDifferenceSeriesNode",
        "type_compute-api-v1:BitOperationSeriesNode",
        "type_compute-api-v1:UnionRangesNode",
        "type_compute-api-v1:IntersectRangesNode",
        "type_compute-api-v1:EnumFilterRangesNode",
        "type_compute-api-v1:ThresholdingRangesNode",
        "type_compute-api-v1:OnChangeRangesNode",
        "type_compute-api-v1:CartesianBounds",
        "type_compute-api-v1:ScatterNode",
        "type_compute-api-v1:ComputeNodeRequest"
      ],
      "subpackages": [],
      "urlSlug": "compute-api-v-1",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_global": {
      "subpackageId": "subpackage_global",
      "name": "global",
      "endpoints": [],
      "types": [
        "type_global:TagName",
        "type_global:TagValue",
        "type_global:Timestamp",
        "type_global:TimeUnit",
        "type_global:McapChannelTopic",
        "type_global:McapChannelId",
        "type_global:McapChannelLocator",
        "type_global:SerializableError"
      ],
      "subpackages": [],
      "urlSlug": "global",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_layout": {
      "subpackageId": "subpackage_layout",
      "name": "layout",
      "endpoints": [],
      "types": [
        "type_layout:PanelId",
        "type_layout:VizPanelV1",
        "type_layout:VizPanel",
        "type_layout:ChartPanelV1",
        "type_layout:ChartPanel",
        "type_layout:EmptyPanelV1",
        "type_layout:EmptyPanel",
        "type_layout:SplitPanelV1",
        "type_layout:SplitPanel",
        "type_layout:SplitPanelOrientation",
        "type_layout:SingleTabV1",
        "type_layout:SingleTab",
        "type_layout:TabbedPanelV1",
        "type_layout:TabbedPanel",
        "type_layout:Panel",
        "type_layout:WorkbookLayoutV1",
        "type_layout:WorkbookLayout"
      ],
      "subpackages": [],
      "urlSlug": "layout",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_pagination-api": {
      "subpackageId": "subpackage_pagination-api",
      "name": "pagination-api",
      "endpoints": [],
      "types": ["type_pagination-api:PageToken", "type_pagination-api:PageRequest", "type_pagination-api:PageResponse"],
      "subpackages": [],
      "urlSlug": "pagination-api",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_resolved-compute-api": {
      "subpackageId": "subpackage_resolved-compute-api",
      "name": "resolved-compute-api",
      "endpoints": [],
      "types": [
        "type_resolved-compute-api:ResolvedNode",
        "type_resolved-compute-api:NumericSeriesNode",
        "type_resolved-compute-api:EnumSeriesNode",
        "type_resolved-compute-api:RangesNode",
        "type_resolved-compute-api:CartesianNode",
        "type_resolved-compute-api:SummarizeCartesianNode",
        "type_resolved-compute-api:FrequencyDomainNode",
        "type_resolved-compute-api:FftNode",
        "type_resolved-compute-api:SummarizeGeoNode",
        "type_resolved-compute-api:GeoNodeSummaryStrategy",
        "type_resolved-compute-api:GeoNodeTemporalSummary",
        "type_resolved-compute-api:GeoNode",
        "type_resolved-compute-api:LatLongGeoNode",
        "type_resolved-compute-api:LatLongBounds",
        "type_resolved-compute-api:HistogramNode",
        "type_resolved-compute-api:NumericHistogramNode",
        "type_resolved-compute-api:EnumHistogramNode",
        "type_resolved-compute-api:NumericHistogramBucketStrategy",
        "type_resolved-compute-api:NumericHistogramBucketWidthAndOffset",
        "type_resolved-compute-api:SummarizeSeriesNode",
        "type_resolved-compute-api:RawUntypedSeriesNode",
        "type_resolved-compute-api:EnumResampleSeriesNode",
        "type_resolved-compute-api:NumericResampleSeriesNode",
        "type_resolved-compute-api:SeriesNode",
        "type_resolved-compute-api:SummarizeRangesNode",
        "type_resolved-compute-api:SelectValueNode",
        "type_resolved-compute-api:RawNumericSeriesNode",
        "type_resolved-compute-api:RawEnumSeriesNode",
        "type_resolved-compute-api:RollingOperationSeriesNode",
        "type_resolved-compute-api:Window",
        "type_resolved-compute-api:PersistenceWindowConfiguration",
        "type_resolved-compute-api:ArithmeticSeriesNode",
        "type_resolved-compute-api:CumulativeSumSeriesNode",
        "type_resolved-compute-api:DerivativeSeriesNode",
        "type_resolved-compute-api:IntegralSeriesNode",
        "type_resolved-compute-api:EnumTimeRangeFilterSeriesNode",
        "type_resolved-compute-api:NumericTimeRangeFilterSeriesNode",
        "type_resolved-compute-api:EnumTimeShiftSeriesNode",
        "type_resolved-compute-api:NumericTimeShiftSeriesNode",
        "type_resolved-compute-api:TimeDifferenceSeriesNode",
        "type_resolved-compute-api:UnaryArithmeticSeriesNode",
        "type_resolved-compute-api:BinaryArithmeticSeriesNode",
        "type_resolved-compute-api:EnumUnionSeriesNode",
        "type_resolved-compute-api:UnitConversionSeriesNode",
        "type_resolved-compute-api:NumericUnionSeriesNode",
        "type_resolved-compute-api:ValueDifferenceSeriesNode",
        "type_resolved-compute-api:NumericFilterTransformationSeriesNode",
        "type_resolved-compute-api:EnumFilterTransformationSeriesNode",
        "type_resolved-compute-api:AggregateEnumSeriesNode",
        "type_resolved-compute-api:AggregateNumericSeriesNode",
        "type_resolved-compute-api:BitOperationSeriesNode",
        "type_resolved-compute-api:MaxSeriesNode",
        "type_resolved-compute-api:MeanSeriesNode",
        "type_resolved-compute-api:MinSeriesNode",
        "type_resolved-compute-api:ProductSeriesNode",
        "type_resolved-compute-api:SumSeriesNode",
        "type_resolved-compute-api:ScaleSeriesNode",
        "type_resolved-compute-api:OffsetSeriesNode",
        "type_resolved-compute-api:InterpolationConfiguration",
        "type_resolved-compute-api:ForwardFillInterpolation",
        "type_resolved-compute-api:ResampleConfiguration",
        "type_resolved-compute-api:ResampleInterpolationConfiguration",
        "type_resolved-compute-api:ForwardFillResampleInterpolationConfiguration",
        "type_resolved-compute-api:RangesNumericAggregationNode",
        "type_resolved-compute-api:UnionRangesNode",
        "type_resolved-compute-api:IntersectRangesNode",
        "type_resolved-compute-api:NotRangesNode",
        "type_resolved-compute-api:SeriesCrossoverRangesNode",
        "type_resolved-compute-api:EnumFilterRangesNode",
        "type_resolved-compute-api:EnumEqualityRangesNode",
        "type_resolved-compute-api:ExtremaRangesNode",
        "type_resolved-compute-api:MinMaxThresholdRangesNode",
        "type_resolved-compute-api:ThresholdingRangesNode",
        "type_resolved-compute-api:OnChangeRangesNode",
        "type_resolved-compute-api:StaleRangesNode",
        "type_resolved-compute-api:CartesianBounds",
        "type_resolved-compute-api:ScatterNode"
      ],
      "subpackages": [],
      "urlSlug": "resolved-compute-api",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_viz-definition": {
      "subpackageId": "subpackage_viz-definition",
      "name": "viz-definition",
      "endpoints": [],
      "types": [
        "type_viz-definition:DataSourceRefName",
        "type_viz-definition:WorkbookVizDefinitionMap",
        "type_viz-definition:VizDefinition",
        "type_viz-definition:TimeSeriesChartDefinition",
        "type_viz-definition:CartesianChartDefinition",
        "type_viz-definition:FrequencyChartDefinition",
        "type_viz-definition:HistogramChartDefinition",
        "type_viz-definition:VideoVizDefinition",
        "type_viz-definition:GeoVizDefinition",
        "type_viz-definition:ChecklistChartDefinition",
        "type_viz-definition:ChecklistChartDefinitionV1",
        "type_viz-definition:CartesianChartDefinitionV1",
        "type_viz-definition:FrequencyChartDefinitionV1",
        "type_viz-definition:GeoVizDefinitionV1",
        "type_viz-definition:GeoPlotFromLatLong",
        "type_viz-definition:GeoSecondaryVariable",
        "type_viz-definition:GeoSecondaryPlotVisualizationOption",
        "type_viz-definition:ValueToColorMap",
        "type_viz-definition:GeoPlotVisualizationOptions",
        "type_viz-definition:GeoPlotSecondaryVisibilityConfig",
        "type_viz-definition:GeoLineStyle",
        "type_viz-definition:HistogramChartDefinitionV1",
        "type_viz-definition:VideoVizDefinitionV1",
        "type_viz-definition:TimeSeriesChartDefinitionV1",
        "type_viz-definition:TimeSeriesRow",
        "type_viz-definition:TimeSeriesPlot",
        "type_viz-definition:CartesianPlot",
        "type_viz-definition:FrequencyPlot",
        "type_viz-definition:HistogramPlot",
        "type_viz-definition:HistogramDisplaySettings",
        "type_viz-definition:HistogramSortOrder",
        "type_viz-definition:Event",
        "type_viz-definition:ValueAxis",
        "type_viz-definition:AxisDisplayOptions",
        "type_viz-definition:AxisDomainType",
        "type_viz-definition:AxisPosition",
        "type_viz-definition:AxisRange",
        "type_viz-definition:AxisThresholdVisualization",
        "type_viz-definition:AxisThresholdGroup",
        "type_viz-definition:LineThresholdGroup",
        "type_viz-definition:ThresholdShadingConfig",
        "type_viz-definition:DefaultFill",
        "type_viz-definition:LineThreshold",
        "type_viz-definition:ThresholdLineStyle",
        "type_viz-definition:AxisId",
        "type_viz-definition:LineStyle",
        "type_viz-definition:LineStyleV1",
        "type_viz-definition:ValueTableDefinition",
        "type_viz-definition:ValueTableDefinitionV1",
        "type_viz-definition:ValueTableChannel",
        "type_viz-definition:NumericValueChannel",
        "type_viz-definition:NumericValueVisualisation",
        "type_viz-definition:NumericRawVisualisation",
        "type_viz-definition:NumericBarGaugeVisualisation",
        "type_viz-definition:EnumValueChannel",
        "type_viz-definition:EnumValueVisualisation",
        "type_viz-definition:EnumRawVisualisation",
        "type_viz-definition:RangeValueChannel",
        "type_viz-definition:RangeValueVisualisation",
        "type_viz-definition:RangeRawVisualisation"
      ],
      "subpackages": [],
      "urlSlug": "viz-definition",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_workbook-common": {
      "subpackageId": "subpackage_workbook-common",
      "name": "workbook-common",
      "endpoints": [],
      "types": ["type_workbook-common:WorkbookContent", "type_workbook-common:UnifiedWorkbookContent"],
      "subpackages": [],
      "urlSlug": "workbook-common",
      "webhooks": [],
      "websockets": []
    }
  },
  "auth": {
    "type": "bearerAuth",
    "tokenName": "token"
  },
  "hasMultipleBaseUrls": false,
  "globalHeaders": []
}
