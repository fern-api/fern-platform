{
  "rootPackage": {
    "endpoints": [],
    "subpackages": ["subpackage_prompts", "subpackage_tools", "subpackage_datasets"],
    "types": [
      "type_:ActiveEvaluatorResponse",
      "type_:BaseMetricResponse",
      "type_:CategoricalFeedbackLabel",
      "type_:ChatMessageContentItem",
      "type_:Content",
      "type_:ChatMessage",
      "type_:ChatMessageDictContentItem",
      "type_:ChatMessageDict",
      "type_:ChatPromptVersionResponseStop",
      "type_:ChatPromptVersionResponse",
      "type_:ChatRole",
      "type_:CompletionPromptVersionResponseStop",
      "type_:CompletionPromptVersionResponse",
      "type_:CreateChatPromptVersionRequestStop",
      "type_:CreateChatPromptVersionRequest",
      "type_:CreateCompletionPromptVersionRequestStop",
      "type_:CreateCompletionPromptVersionRequest",
      "type_:DashboardConfiguration",
      "type_:DatapointRequest",
      "type_:DatapointResponse",
      "type_:DatasetResponse",
      "type_:DatasetVersionResponse",
      "type_:DeploymentResponsePromptVersionResponse",
      "type_:DeploymentResponseToolVersionResponse",
      "type_:EnvironmentResponse",
      "type_:EnvironmentTag",
      "type_:EvaluatorReturnTypeEnum",
      "type_:ExperimentResponse",
      "type_:ExperimentStatus",
      "type_:Version",
      "type_:ExperimentVersionResponse",
      "type_:FeedbackClass",
      "type_:FeedbackLabelStatus",
      "type_:FeedbackType",
      "type_:FeedbackTypeModelType",
      "type_:FeedbackTypeModel",
      "type_:FeedbackTypes",
      "type_:FunctionTool",
      "type_:FunctionToolDict",
      "type_:HTTPValidationError",
      "type_:ImageChatContent",
      "type_:ImageChatContentDict",
      "type_:ImageUrlDetail",
      "type_:ImageUrl",
      "type_:ImageUrlDict",
      "type_:LabelSentiment",
      "type_:ListDatasetVersionsResponse",
      "type_:ListPromptVersionsResponse",
      "type_:ListToolVersionsResponse",
      "type_:ModelProviders",
      "type_:PlatformAccessEnum",
      "type_:PositiveLabel",
      "type_:PromptInputResponse",
      "type_:PromptResponse",
      "type_:PromptVersionFeedbackStatsResponse",
      "type_:PromptVersionPromptResponse",
      "type_:PromptVersionResponse",
      "type_:PromptVersionToolResponse",
      "type_:ResponseFormat",
      "type_:TextChatContent",
      "type_:TextChatContentDict",
      "type_:TimeUnit",
      "type_:ToolCall",
      "type_:ToolCallDict",
      "type_:ToolInputResponse",
      "type_:ToolResponse",
      "type_:ToolTemplateResponse",
      "type_:ToolVersionResponse",
      "type_:ToolVersionToolResponse",
      "type_:UserResponse",
      "type_:ValidationErrorLocItem",
      "type_:ValidationError",
      "type_:VersionStatus",
      "type_:ToolType"
    ],
    "webhooks": [],
    "websockets": []
  },
  "types": {
    "type_prompts:Request": {
      "name": "Request",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "endpoint",
        "variants": [
          {
            "discriminantValue": "chat",
            "additionalProperties": {
              "extends": ["type_:CreateChatPromptVersionRequest"],
              "properties": []
            }
          },
          {
            "discriminantValue": "complete",
            "additionalProperties": {
              "extends": ["type_:CreateCompletionPromptVersionRequest"],
              "properties": []
            }
          }
        ]
      }
    },
    "type_:ActiveEvaluatorResponse": {
      "name": "ActiveEvaluatorResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique ID for the evaluator. Starts with `evfn_`.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The name of the evaluator.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1,
                "maxLength": 1
              }
            }
          },
          {
            "description": "The description of the evaluator.",
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The type of the return value of the evaluator.",
            "key": "return_type",
            "valueType": {
              "type": "id",
              "value": "type_:EvaluatorReturnTypeEnum"
            }
          }
        ]
      }
    },
    "type_:BaseMetricResponse": {
      "name": "BaseMetricResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "ID of the metric. Starts with 'metric\\_'.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The name of the metric.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "A description of what the metric measures.",
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Python code used to calculate a metric value on each logged datapoint.",
            "key": "code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Whether the metric is a global default metric. Metrics with this flag enabled cannot be deleted or modified.",
            "key": "default",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "If enabled, the metric is calculated for every logged datapoint.",
            "key": "active",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          }
        ]
      }
    },
    "type_:CategoricalFeedbackLabel": {
      "name": "CategoricalFeedbackLabel",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Whether the feedback sentiment is positive or negative.",
            "key": "sentiment",
            "valueType": {
              "type": "id",
              "value": "type_:LabelSentiment"
            }
          },
          {
            "description": "Whether the feedback label is active or inactive.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_:FeedbackLabelStatus"
            }
          }
        ]
      }
    },
    "type_:ChatMessageContentItem": {
      "name": "ChatMessageContentItem",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "text",
            "additionalProperties": {
              "extends": ["type_:TextChatContent"],
              "properties": []
            }
          },
          {
            "discriminantValue": "image_url",
            "additionalProperties": {
              "extends": ["type_:ImageChatContent"],
              "properties": []
            }
          }
        ]
      }
    },
    "type_:Content": {
      "name": "Content",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:ChatMessageDictContentItem"
              }
            }
          }
        ]
      }
    },
    "type_:ChatMessage": {
      "name": "ChatMessage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The content of the message.",
            "key": "content",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:Content"
              }
            }
          },
          {
            "description": "Optional name of the message author.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Tool call that this message is responding to.",
            "key": "tool_call_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Role of the message author.",
            "key": "role",
            "valueType": {
              "type": "id",
              "value": "type_:ChatRole"
            }
          },
          {
            "description": "A list of tool calls requested by the assistant.",
            "key": "tool_calls",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ToolCall"
                }
              }
            }
          }
        ]
      }
    },
    "type_:ChatMessageDictContentItem": {
      "name": "ChatMessageDictContentItem",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "type",
        "variants": [
          {
            "discriminantValue": "text",
            "additionalProperties": {
              "extends": ["type_:TextChatContentDict"],
              "properties": []
            }
          },
          {
            "discriminantValue": "image_url",
            "additionalProperties": {
              "extends": ["type_:ImageChatContentDict"],
              "properties": []
            }
          }
        ]
      }
    },
    "type_:ChatMessageDict": {
      "name": "ChatMessageDict",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "content",
            "valueType": {
              "type": "id",
              "value": "type_:Content"
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "tool_call_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "role",
            "valueType": {
              "type": "id",
              "value": "type_:ChatRole"
            }
          },
          {
            "key": "tool_call",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:FunctionToolDict"
              }
            }
          },
          {
            "key": "tool_calls",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ToolCallDict"
                }
              }
            }
          }
        ]
      }
    },
    "type_:ChatPromptVersionResponseStop": {
      "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
      "name": "ChatPromptVersionResponseStop",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:ChatPromptVersionResponse": {
      "description": "Base type that all Version Responses should inherit from.",
      "name": "ChatPromptVersionResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Prompt Version. Starts with `prv_`.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the Prompt that this Prompt Version belongs to. Starts with `pr_`.",
            "key": "prompt_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "prompt",
            "valueType": {
              "type": "id",
              "value": "type_:PromptVersionPromptResponse"
            }
          },
          {
            "description": "Message describing the changes made.",
            "key": "commit_message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The status of the Prompt Version.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_:VersionStatus"
            }
          },
          {
            "description": "The list of Tools and Tool Versions that have are associated to this Prompt Version.",
            "key": "tools",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:PromptVersionToolResponse"
              }
            }
          },
          {
            "description": "Feedback statistics for the Prompt Version.",
            "key": "feedback_stats",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:PromptVersionFeedbackStatsResponse"
                }
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "literal",
                "value": {
                  "type": "stringLiteral",
                  "value": "prompt"
                }
              }
            }
          },
          {
            "key": "created_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:UserResponse"
              }
            }
          },
          {
            "key": "num_logs",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "last_used_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "description": "Messages prepended to the list of messages sent to the provider. These messages that will take your specified inputs to form your final request to the provider model. Input variables within the template should be specified with syntax: {{INPUT_NAME}}.",
            "key": "chat_template",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessage"
                }
              }
            }
          },
          {
            "description": "The company providing the underlying model service.",
            "key": "provider",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ModelProviders"
              }
            }
          },
          {
            "description": "The model instance used. E.g. gpt-4.",
            "key": "model",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The maximum number of tokens to generate. Provide max_tokens=-1 to dynamically calculate the maximum number of tokens to generate given the length of the prompt",
            "key": "max_tokens",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "default": -1
                }
              }
            }
          },
          {
            "description": "What sampling temperature to use when making a generation. Higher values means the model will be more creative.",
            "key": "temperature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 1
                }
              }
            }
          },
          {
            "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.",
            "key": "top_p",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 1
                }
              }
            }
          },
          {
            "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
            "key": "stop",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ChatPromptVersionResponseStop"
              }
            }
          },
          {
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the generation so far.",
            "key": "presence_penalty",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on how frequently they appear in the generation so far.",
            "key": "frequency_penalty",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Other parameter values to be passed to the provider call.",
            "key": "other",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "If specified, model will make a best effort to sample deterministically, but it is not guaranteed.",
            "key": "seed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The format of the response. Only `{\"type\": \"json_object\"}` is currently supported for chat.",
            "key": "response_format",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ResponseFormat"
              }
            }
          }
        ]
      }
    },
    "type_:ChatRole": {
      "description": "An enumeration.",
      "name": "ChatRole",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "user"
          },
          {
            "value": "assistant"
          },
          {
            "value": "system"
          },
          {
            "value": "tool"
          }
        ]
      }
    },
    "type_:CompletionPromptVersionResponseStop": {
      "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
      "name": "CompletionPromptVersionResponseStop",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:CompletionPromptVersionResponse": {
      "description": "Base type that all Version Responses should inherit from.",
      "name": "CompletionPromptVersionResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Prompt Version. Starts with `prv_`.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the Prompt that this Prompt Version belongs to. Starts with `pr_`.",
            "key": "prompt_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "prompt",
            "valueType": {
              "type": "id",
              "value": "type_:PromptVersionPromptResponse"
            }
          },
          {
            "description": "Message describing the changes made.",
            "key": "commit_message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The status of the Prompt Version.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_:VersionStatus"
            }
          },
          {
            "description": "The list of Tools and Tool Versions that have are associated to this Prompt Version.",
            "key": "tools",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:PromptVersionToolResponse"
              }
            }
          },
          {
            "description": "Feedback statistics for the Prompt Version.",
            "key": "feedback_stats",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:PromptVersionFeedbackStatsResponse"
                }
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "literal",
                "value": {
                  "type": "stringLiteral",
                  "value": "prompt"
                }
              }
            }
          },
          {
            "key": "created_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:UserResponse"
              }
            }
          },
          {
            "key": "num_logs",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "last_used_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "description": "Prompt template that will take your specified inputs to form your final request to the model. Input variables within the prompt template should be specified with syntax: {{INPUT_NAME}}.",
            "key": "prompt_template",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The company providing the underlying model service.",
            "key": "provider",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ModelProviders"
              }
            }
          },
          {
            "description": "The model instance used. E.g. gpt-4.",
            "key": "model",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The maximum number of tokens to generate. Provide max_tokens=-1 to dynamically calculate the maximum number of tokens to generate given the length of the prompt",
            "key": "max_tokens",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "default": -1
                }
              }
            }
          },
          {
            "description": "What sampling temperature to use when making a generation. Higher values means the model will be more creative.",
            "key": "temperature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 1
                }
              }
            }
          },
          {
            "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.",
            "key": "top_p",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 1
                }
              }
            }
          },
          {
            "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
            "key": "stop",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CompletionPromptVersionResponseStop"
              }
            }
          },
          {
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the generation so far.",
            "key": "presence_penalty",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on how frequently they appear in the generation so far.",
            "key": "frequency_penalty",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Other parameter values to be passed to the provider call.",
            "key": "other",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "If specified, model will make a best effort to sample deterministically, but it is not guaranteed.",
            "key": "seed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The format of the response. Only `{\"type\": \"json_object\"}` is currently supported for chat.",
            "key": "response_format",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ResponseFormat"
              }
            }
          }
        ]
      }
    },
    "type_:CreateChatPromptVersionRequestStop": {
      "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
      "name": "CreateChatPromptVersionRequestStop",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:CreateChatPromptVersionRequest": {
      "name": "CreateChatPromptVersionRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Prompt to create a new Prompt Version for. Starts with `pr_`.",
            "key": "prompt_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Message describing the changes made.",
            "key": "commit_message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1,
                "maxLength": 1
              }
            }
          },
          {
            "description": "Messages prepended to the list of messages sent to the provider. These messages that will take your specified inputs to form your final request to the provider model. Input variables within the template should be specified with syntax: {{INPUT_NAME}}.",
            "key": "chat_template",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessage"
                }
              }
            }
          },
          {
            "description": "The company providing the underlying model service.",
            "key": "provider",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ModelProviders"
              }
            }
          },
          {
            "description": "The model instance used. E.g. gpt-4.",
            "key": "model",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The maximum number of tokens to generate. Provide max_tokens=-1 to dynamically calculate the maximum number of tokens to generate given the length of the prompt",
            "key": "max_tokens",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "default": -1
                }
              }
            }
          },
          {
            "description": "What sampling temperature to use when making a generation. Higher values means the model will be more creative.",
            "key": "temperature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 1
                }
              }
            }
          },
          {
            "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.",
            "key": "top_p",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 1
                }
              }
            }
          },
          {
            "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
            "key": "stop",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CreateChatPromptVersionRequestStop"
              }
            }
          },
          {
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the generation so far.",
            "key": "presence_penalty",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on how frequently they appear in the generation so far.",
            "key": "frequency_penalty",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Other parameter values to be passed to the provider call.",
            "key": "other",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "If specified, model will make a best effort to sample deterministically, but it is not guaranteed.",
            "key": "seed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The format of the response. Only `{\"type\": \"json_object\"}` is currently supported for chat.",
            "key": "response_format",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ResponseFormat"
              }
            }
          }
        ]
      }
    },
    "type_:CreateCompletionPromptVersionRequestStop": {
      "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
      "name": "CreateCompletionPromptVersionRequestStop",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:CreateCompletionPromptVersionRequest": {
      "name": "CreateCompletionPromptVersionRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Prompt to create a new Prompt Version for. Starts with `pr_`.",
            "key": "prompt_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Message describing the changes made.",
            "key": "commit_message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1,
                "maxLength": 1
              }
            }
          },
          {
            "description": "Prompt template that will take your specified inputs to form your final request to the model. Input variables within the prompt template should be specified with syntax: {{INPUT_NAME}}.",
            "key": "prompt_template",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The company providing the underlying model service.",
            "key": "provider",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ModelProviders"
              }
            }
          },
          {
            "description": "The model instance used. E.g. gpt-4.",
            "key": "model",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The maximum number of tokens to generate. Provide max_tokens=-1 to dynamically calculate the maximum number of tokens to generate given the length of the prompt",
            "key": "max_tokens",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "default": -1
                }
              }
            }
          },
          {
            "description": "What sampling temperature to use when making a generation. Higher values means the model will be more creative.",
            "key": "temperature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 1
                }
              }
            }
          },
          {
            "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.",
            "key": "top_p",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 1
                }
              }
            }
          },
          {
            "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
            "key": "stop",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:CreateCompletionPromptVersionRequestStop"
              }
            }
          },
          {
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the generation so far.",
            "key": "presence_penalty",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on how frequently they appear in the generation so far.",
            "key": "frequency_penalty",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Other parameter values to be passed to the provider call.",
            "key": "other",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "If specified, model will make a best effort to sample deterministically, but it is not guaranteed.",
            "key": "seed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The format of the response. Only `{\"type\": \"json_object\"}` is currently supported for chat.",
            "key": "response_format",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ResponseFormat"
              }
            }
          }
        ]
      }
    },
    "type_:DashboardConfiguration": {
      "name": "DashboardConfiguration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "time_unit",
            "valueType": {
              "type": "id",
              "value": "type_:TimeUnit"
            }
          },
          {
            "key": "time_range_days",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "model_config_ids",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:DatapointRequest": {
      "name": "DatapointRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variables",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "messages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessageDict"
                }
              }
            }
          },
          {
            "key": "target",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "type_:DatapointResponse": {
      "name": "DatapointResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "variables",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "messages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ChatMessageDict"
                }
              }
            }
          },
          {
            "key": "target",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          },
          {
            "key": "hash",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:DatasetResponse": {
      "description": "Base type that all File Responses should inherit from.",
      "name": "DatasetResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for Prompt. Starts with `ds_`.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the dataset.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "dataset"
              }
            }
          },
          {
            "description": "Unique identifier for the Directory the Prompt belongs to. Starts with `dir_`.",
            "key": "directory_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          }
        ]
      }
    },
    "type_:DatasetVersionResponse": {
      "description": "Base type that all Version Responses should inherit from.",
      "name": "DatasetVersionResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for this Version. Starts with `dsv_`.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Unique identifier for the Dataset of which this is a version. Starts with `ds_`.",
            "key": "dataset_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The dataset of which this is a version.",
            "key": "dataset",
            "valueType": {
              "type": "id",
              "value": "type_:DatasetResponse"
            }
          },
          {
            "key": "datapoints",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:DatapointResponse"
              }
            }
          },
          {
            "description": "Message describing the changes made.",
            "key": "commit_message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1,
                "maxLength": 1
              }
            }
          },
          {
            "description": "The commit status of this version of the dataset - either 'committed' or 'uncommitted'.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_:VersionStatus"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "literal",
                "value": {
                  "type": "stringLiteral",
                  "value": "dataset"
                }
              }
            }
          },
          {
            "key": "created_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:UserResponse"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          }
        ]
      }
    },
    "type_:DeploymentResponsePromptVersionResponse": {
      "name": "DeploymentResponsePromptVersionResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Version that is deployed.",
            "key": "version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:PromptVersionResponse"
              }
            }
          },
          {
            "description": "Experiment that is deployed.",
            "key": "experiment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ExperimentResponse"
              }
            }
          },
          {
            "description": "Environment where the version or experiment is deployed.",
            "key": "environment",
            "valueType": {
              "type": "id",
              "value": "type_:EnvironmentResponse"
            }
          }
        ]
      }
    },
    "type_:DeploymentResponseToolVersionResponse": {
      "name": "DeploymentResponseToolVersionResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Version that is deployed.",
            "key": "version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ToolVersionResponse"
              }
            }
          },
          {
            "description": "Experiment that is deployed.",
            "key": "experiment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ExperimentResponse"
              }
            }
          },
          {
            "description": "Environment where the version or experiment is deployed.",
            "key": "environment",
            "valueType": {
              "type": "id",
              "value": "type_:EnvironmentResponse"
            }
          }
        ]
      }
    },
    "type_:EnvironmentResponse": {
      "name": "EnvironmentResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "tag",
            "valueType": {
              "type": "id",
              "value": "type_:EnvironmentTag"
            }
          }
        ]
      }
    },
    "type_:EnvironmentTag": {
      "description": "An enumeration.",
      "name": "EnvironmentTag",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "default"
          },
          {
            "value": "other"
          }
        ]
      }
    },
    "type_:EvaluatorReturnTypeEnum": {
      "description": "Enum representing the possible return types of an evaluator.",
      "name": "EvaluatorReturnTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "boolean"
          },
          {
            "value": "number"
          }
        ]
      }
    },
    "type_:ExperimentResponse": {
      "name": "ExperimentResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String ID of experiment. Starts with `exp_`.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "String ID of file the experiment belongs to.",
            "key": "file_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of experiment.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Status of experiment.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_:ExperimentStatus"
            }
          },
          {
            "description": "List of Versions associated to the experiment.",
            "key": "versions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ExperimentVersionResponse"
                }
              }
            }
          },
          {
            "description": "Metric used as the experiment's objective.",
            "key": "metric",
            "valueType": {
              "type": "id",
              "value": "type_:BaseMetricResponse"
            }
          },
          {
            "description": "Feedback labels to treat as positive user feedback. Used to monitor the performance of model configs in the experiment.",
            "key": "positive_labels",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:PositiveLabel"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          }
        ]
      }
    },
    "type_:ExperimentStatus": {
      "description": "An enumeration.",
      "name": "ExperimentStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Initialized"
          },
          {
            "value": "In progress"
          }
        ]
      }
    },
    "type_:Version": {
      "description": "Version of the Tool.",
      "name": "Version",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:PromptVersionResponse"
            },
            "displayName": "Prompt Version Response"
          },
          {
            "type": {
              "type": "id",
              "value": "type_:ToolVersionResponse"
            },
            "displayName": "Tool Version Response"
          }
        ]
      }
    },
    "type_:ExperimentVersionResponse": {
      "name": "ExperimentVersionResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The mean performance of the Version.",
            "key": "mean",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The spread of performance of the Version.",
            "key": "spread",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Number of datapoints with feedback associated to the experiment.",
            "key": "trials_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Whether the Version is active in the experiment. Only active model configs can be sampled from the experiment.",
            "key": "active",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "String ID of Version.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Commit message of Version.",
            "key": "commit_message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Version of the Tool.",
            "key": "version",
            "valueType": {
              "type": "id",
              "value": "type_:Version"
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          }
        ]
      }
    },
    "type_:FeedbackClass": {
      "description": "An enumeration.",
      "name": "FeedbackClass",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "select"
          },
          {
            "value": "multi_select"
          },
          {
            "value": "text"
          },
          {
            "value": "number"
          }
        ]
      }
    },
    "type_:FeedbackLabelStatus": {
      "description": "Controls whether the label is displayed in the UI.",
      "name": "FeedbackLabelStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "unset"
          },
          {
            "value": "active"
          },
          {
            "value": "inactive"
          }
        ]
      }
    },
    "type_:FeedbackType": {
      "description": "An enumeration.",
      "name": "FeedbackType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "rating"
          },
          {
            "value": "action"
          },
          {
            "value": "issue"
          },
          {
            "value": "correction"
          },
          {
            "value": "comment"
          }
        ]
      }
    },
    "type_:FeedbackTypeModelType": {
      "description": "The type of feedback. The default feedback types available are 'rating', 'action', 'issue', 'correction', and 'comment'.",
      "name": "FeedbackTypeModelType",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "id",
              "value": "type_:FeedbackType"
            },
            "displayName": "Feedback Type"
          },
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:FeedbackTypeModel": {
      "name": "FeedbackTypeModel",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of feedback. The default feedback types available are 'rating', 'action', 'issue', 'correction', and 'comment'.",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_:FeedbackTypeModelType"
            }
          },
          {
            "description": "The allowed values for categorical feedback types. Not populated for `correction` and `comment`.",
            "key": "values",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:CategoricalFeedbackLabel"
                }
              }
            }
          }
        ]
      }
    },
    "type_:FeedbackTypes": {
      "name": "FeedbackTypes",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "type_:FeedbackTypeModel"
          }
        }
      }
    },
    "type_:FunctionTool": {
      "description": "A function tool to be called by the model where user owns runtime.",
      "name": "FunctionTool",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "arguments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:FunctionToolDict": {
      "name": "FunctionToolDict",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "arguments",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:HTTPValidationError": {
      "name": "HTTPValidationError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "detail",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ValidationError"
                }
              }
            }
          }
        ]
      }
    },
    "type_:ImageChatContent": {
      "name": "ImageChatContent",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The message's image content.",
            "key": "image_url",
            "valueType": {
              "type": "id",
              "value": "type_:ImageUrl"
            }
          }
        ]
      }
    },
    "type_:ImageChatContentDict": {
      "name": "ImageChatContentDict",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "image_url",
            "valueType": {
              "type": "id",
              "value": "type_:ImageUrlDict"
            }
          }
        ]
      }
    },
    "type_:ImageUrlDetail": {
      "description": "Specify the detail level of the image provided to the model. For more details see: https://platform.openai.com/docs/guides/vision/low-or-high-fidelity-image-understanding",
      "name": "ImageUrlDetail",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "high"
          },
          {
            "value": "low"
          },
          {
            "value": "auto"
          }
        ]
      }
    },
    "type_:ImageUrl": {
      "name": "ImageUrl",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Either a URL of the image or the base64 encoded image data.",
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Specify the detail level of the image provided to the model. For more details see: https://platform.openai.com/docs/guides/vision/low-or-high-fidelity-image-understanding",
            "key": "detail",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ImageUrlDetail"
              }
            }
          }
        ]
      }
    },
    "type_:ImageUrlDict": {
      "name": "ImageUrlDict",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "detail",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:LabelSentiment": {
      "description": "How a label should be treated in calculating Version performance.\n\nUsed by a File's PAPV (Positive Action Per View) metric.",
      "name": "LabelSentiment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "positive"
          },
          {
            "value": "negative"
          },
          {
            "value": "neutral"
          },
          {
            "value": "unset"
          }
        ]
      }
    },
    "type_:ListDatasetVersionsResponse": {
      "name": "ListDatasetVersionsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The list of Dataset Versions for this.",
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:DatasetVersionResponse"
              }
            }
          }
        ]
      }
    },
    "type_:ListPromptVersionsResponse": {
      "name": "ListPromptVersionsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The list of Prompt Versions associated to the Prompt.",
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:PromptVersionResponse"
              }
            }
          }
        ]
      }
    },
    "type_:ListToolVersionsResponse": {
      "name": "ListToolVersionsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The list of Tool Versions associated to the Tool.",
            "key": "records",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:ToolVersionResponse"
              }
            }
          }
        ]
      }
    },
    "type_:ModelProviders": {
      "description": "Supported model providers.",
      "name": "ModelProviders",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "openai"
          },
          {
            "value": "openai_azure"
          },
          {
            "value": "ai21"
          },
          {
            "value": "mock"
          },
          {
            "value": "anthropic"
          },
          {
            "value": "langchain"
          },
          {
            "value": "cohere"
          },
          {
            "value": "replicate"
          },
          {
            "value": "google"
          }
        ]
      }
    },
    "type_:PlatformAccessEnum": {
      "description": "An enumeration.",
      "name": "PlatformAccessEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "superadmin"
          },
          {
            "value": "user"
          }
        ]
      }
    },
    "type_:PositiveLabel": {
      "name": "PositiveLabel",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:PromptInputResponse": {
      "name": "PromptInputResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Type of input.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:PromptResponse": {
      "description": "Base type that all File Responses should inherit from.",
      "name": "PromptResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for this Prompt. Starts with `pr_`.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the prompt.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "prompt"
              }
            }
          },
          {
            "description": "Unique identifier for the Directory the Prompt belongs to. Starts with `dir_`.",
            "key": "directory_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The list of deployments associated to the Prompt.",
            "key": "deployments",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:DeploymentResponsePromptVersionResponse"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          }
        ]
      }
    },
    "type_:PromptVersionFeedbackStatsResponse": {
      "name": "PromptVersionFeedbackStatsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "feedback_type_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "feedback_type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "feedback_value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "feedback_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:PromptVersionPromptResponse": {
      "name": "PromptVersionPromptResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for this Prompt. Starts with `pr_`.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the prompt.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "prompt"
              }
            }
          },
          {
            "description": "Unique identifier for the Directory the Prompt belongs to. Starts with `dir_`.",
            "key": "directory_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          }
        ]
      }
    },
    "type_:PromptVersionResponse": {
      "name": "PromptVersionResponse",
      "shape": {
        "type": "discriminatedUnion",
        "discriminant": "endpoint",
        "variants": [
          {
            "discriminantValue": "chat",
            "additionalProperties": {
              "extends": ["type_:ChatPromptVersionResponse"],
              "properties": []
            }
          },
          {
            "discriminantValue": "complete",
            "additionalProperties": {
              "extends": ["type_:CompletionPromptVersionResponse"],
              "properties": []
            }
          }
        ]
      }
    },
    "type_:PromptVersionToolResponse": {
      "name": "PromptVersionToolResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID of the tool. Starts with either tlv* or tl*.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Name for the tool referenced by the model.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Description of the tool referenced by the model",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Definition of parameters needed to run the tool. Provided in jsonschema format: https://json-schema.org/",
            "key": "parameters",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "The origin of the tool",
            "key": "source",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:ResponseFormat": {
      "description": "Response format of the model.",
      "name": "ResponseFormat",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "json_object"
              }
            }
          }
        ]
      }
    },
    "type_:TextChatContent": {
      "name": "TextChatContent",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The message's text content.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:TextChatContentDict": {
      "name": "TextChatContentDict",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:TimeUnit": {
      "description": "An enumeration.",
      "name": "TimeUnit",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "day"
          },
          {
            "value": "week"
          },
          {
            "value": "month"
          }
        ]
      }
    },
    "type_:ToolCall": {
      "description": "A tool call to be made.",
      "name": "ToolCall",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_:ToolType"
            }
          },
          {
            "key": "function",
            "valueType": {
              "type": "id",
              "value": "type_:FunctionTool"
            }
          }
        ]
      }
    },
    "type_:ToolCallDict": {
      "name": "ToolCallDict",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "type_:ToolType"
            }
          },
          {
            "key": "function",
            "valueType": {
              "type": "id",
              "value": "type_:FunctionToolDict"
            }
          }
        ]
      }
    },
    "type_:ToolInputResponse": {
      "name": "ToolInputResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Type of input.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:ToolResponse": {
      "description": "Base type that all File Responses should inherit from.",
      "name": "ToolResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for Tool. Starts with `tl_`.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the tool.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "tool"
              }
            }
          },
          {
            "description": "Type of Tool if runnable by Humanloop. Otherwise `null`.",
            "key": "tool_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ToolType"
              }
            }
          },
          {
            "description": "Unique identifier for the Directory the Tool belongs to. Starts with `dir_`.",
            "key": "directory_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The list of deployments associated to the Tool.",
            "key": "deployments",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:DeploymentResponseToolVersionResponse"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          }
        ]
      }
    },
    "type_:ToolTemplateResponse": {
      "name": "ToolTemplateResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of Tool if runnable by Humanloop.",
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "type_:ToolType"
            }
          },
          {
            "description": "Description of the Tool.",
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Signature of the Tool.",
            "key": "signature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:ToolVersionResponse": {
      "description": "Base type that all Version Responses should inherit from.",
      "name": "ToolVersionResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Tool that this Tool Version belongs to. Starts with `tl_`.",
            "key": "tool_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Message describing the changes made.",
            "key": "commit_message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Name for the Tool referenced by the model.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Description of the Tool referenced by the model",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Parameters needed to run the Tool, defined in JSON Schema format: https://json-schema.org/",
            "key": "parameters",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Code source of the Tool.",
            "key": "source_code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Values needed to setup the Tool, defined in JSON Schema format: https://json-schema.org/",
            "key": "setup_values",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the Tool Version. Starts with `tlv_`.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "tool",
            "valueType": {
              "type": "id",
              "value": "type_:ToolVersionToolResponse"
            }
          },
          {
            "description": "The function signature of the tool when being called.",
            "key": "signature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The status of the Tool Version.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "type_:VersionStatus"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "literal",
                "value": {
                  "type": "stringLiteral",
                  "value": "tool"
                }
              }
            }
          },
          {
            "key": "created_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:UserResponse"
              }
            }
          },
          {
            "key": "num_logs",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "last_used_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          }
        ]
      }
    },
    "type_:ToolVersionToolResponse": {
      "name": "ToolVersionToolResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for Tool. Starts with `tl_`.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the tool.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "tool"
              }
            }
          },
          {
            "description": "Type of Tool if runnable by Humanloop. Otherwise `null`.",
            "key": "tool_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_:ToolType"
              }
            }
          },
          {
            "description": "Unique identifier for the Directory the Tool belongs to. Starts with `dir_`.",
            "key": "directory_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "datetime"
              }
            }
          }
        ]
      }
    },
    "type_:UserResponse": {
      "name": "UserResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for User. Starts with `usr`.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The User's email address.",
            "key": "email_address",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The User's full name.",
            "key": "full_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "type_:ValidationErrorLocItem": {
      "name": "ValidationErrorLocItem",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "type_:ValidationError": {
      "name": "ValidationError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "loc",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "type_:ValidationErrorLocItem"
              }
            }
          },
          {
            "key": "msg",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "type_:VersionStatus": {
      "description": "An enumeration.",
      "name": "VersionStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "uncommitted"
          },
          {
            "value": "committed"
          },
          {
            "value": "deleted"
          }
        ]
      }
    },
    "type_:ToolType": {
      "description": "Type of tool.",
      "name": "ToolType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pinecone_search"
          },
          {
            "value": "google"
          },
          {
            "value": "mock"
          },
          {
            "value": "snippet"
          },
          {
            "value": "json_schema"
          },
          {
            "value": "get_api_call"
          }
        ]
      }
    }
  },
  "subpackages": {
    "subpackage_prompts": {
      "subpackageId": "subpackage_prompts",
      "name": "prompts",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "create",
          "migratedFromUrlSlugs": ["create-a-prompt"],
          "method": "POST",
          "id": "create",
          "originalEndpointId": "endpoint_prompts.create",
          "name": "Create A Prompt",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Name of the Prompt. This has to be unique within your Organization.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Directory to create Prompt in. Starts with `dir_`. If not provided, the Prompt will be created in your Organization's root directory.",
                  "key": "directory_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PromptResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/prompts",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "name": "name",
                "type": "prompt",
                "directory_id": "directory_id",
                "deployments": [
                  {
                    "experiment": {
                      "id": "id",
                      "file_id": "file_id",
                      "name": "name",
                      "status": "Initialized",
                      "metric": {
                        "id": "id",
                        "name": "name",
                        "description": "description",
                        "code": "code",
                        "default": true,
                        "active": true,
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "positive_labels": [
                        {
                          "type": "type",
                          "value": "value"
                        }
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    },
                    "environment": {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "name": "name",
                  "type": "prompt",
                  "directory_id": "directory_id",
                  "deployments": [
                    {
                      "experiment": {
                        "id": "id",
                        "file_id": "file_id",
                        "name": "name",
                        "status": "Initialized",
                        "metric": {
                          "id": "id",
                          "name": "name",
                          "description": "description",
                          "code": "code",
                          "default": true,
                          "active": true,
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        },
                        "positive_labels": [
                          {
                            "type": "type",
                            "value": "value"
                          }
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "environment": {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Create a Prompt in an existing Directory. If no Directory is specified, the\nPrompt will be created in the Organization's root directory.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "get",
          "migratedFromUrlSlugs": ["retrieve-a-prompt"],
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_prompts.get",
          "name": "Retrieve A Prompt",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt. Starts with `pr_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PromptResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/prompts/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "name": "name",
                "type": "prompt",
                "directory_id": "directory_id",
                "deployments": [
                  {
                    "experiment": {
                      "id": "id",
                      "file_id": "file_id",
                      "name": "name",
                      "status": "Initialized",
                      "metric": {
                        "id": "id",
                        "name": "name",
                        "description": "description",
                        "code": "code",
                        "default": true,
                        "active": true,
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "positive_labels": [
                        {
                          "type": "type",
                          "value": "value"
                        }
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    },
                    "environment": {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "name": "name",
                  "type": "prompt",
                  "directory_id": "directory_id",
                  "deployments": [
                    {
                      "experiment": {
                        "id": "id",
                        "file_id": "file_id",
                        "name": "name",
                        "status": "Initialized",
                        "metric": {
                          "id": "id",
                          "name": "name",
                          "description": "description",
                          "code": "code",
                          "default": true,
                          "active": true,
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        },
                        "positive_labels": [
                          {
                            "type": "type",
                            "value": "value"
                          }
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "environment": {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Retrieve the Prompt with the given ID.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "delete",
          "migratedFromUrlSlugs": ["delete-a-prompt"],
          "method": "DELETE",
          "id": "delete",
          "originalEndpointId": "endpoint_prompts.delete",
          "name": "Delete A Prompt",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt. Starts with `pr_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/prompts/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Delete the Prompt with the given ID.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "update",
          "migratedFromUrlSlugs": ["update-a-prompt"],
          "method": "PATCH",
          "id": "update",
          "originalEndpointId": "endpoint_prompts.update",
          "name": "Update A Prompt",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt. Starts with `pr_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Name of the Prompt. This has to be unique within your Organization.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Directory to move Prompt to. Starts with `dir_`.",
                  "key": "directory_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PromptResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/prompts/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "name": "name",
                "type": "prompt",
                "directory_id": "directory_id",
                "deployments": [
                  {
                    "experiment": {
                      "id": "id",
                      "file_id": "file_id",
                      "name": "name",
                      "status": "Initialized",
                      "metric": {
                        "id": "id",
                        "name": "name",
                        "description": "description",
                        "code": "code",
                        "default": true,
                        "active": true,
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "positive_labels": [
                        {
                          "type": "type",
                          "value": "value"
                        }
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    },
                    "environment": {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "name": "name",
                  "type": "prompt",
                  "directory_id": "directory_id",
                  "deployments": [
                    {
                      "experiment": {
                        "id": "id",
                        "file_id": "file_id",
                        "name": "name",
                        "status": "Initialized",
                        "metric": {
                          "id": "id",
                          "name": "name",
                          "description": "description",
                          "code": "code",
                          "default": true,
                          "active": true,
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        },
                        "positive_labels": [
                          {
                            "type": "type",
                            "value": "value"
                          }
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "environment": {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Update the Prompt with the given ID.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list",
          "migratedFromUrlSlugs": ["list-prompt-versions"],
          "method": "GET",
          "id": "list",
          "originalEndpointId": "endpoint_prompts.list",
          "name": "List Prompt Versions",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt. Starts with `pr_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/versions"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Filter versions by status: 'uncommitted', 'committed'. If no status is provided, all versions are returned.",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:VersionStatus"
                }
              }
            },
            {
              "key": "evaluation_aggregates",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ListPromptVersionsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/prompts/id/versions",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": []
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": []
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/:id/versions",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "status": "uncommitted",
                "evaluation_aggregates": true
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Get a list of the Prompt Versions for a Prompt.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "prompt-versions-commit",
          "migratedFromUrlSlugs": ["commit-prompt-version"],
          "method": "POST",
          "id": "PromptVersions_commit",
          "originalEndpointId": "endpoint_prompts.PromptVersions_commit",
          "name": "Commit Prompt Version",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/versions"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_prompts:Request"
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PromptVersionResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/prompts/versions",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "endpoint": "chat",
                  "prompt_id": "string",
                  "commit_message": "string",
                  "model": "string"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "endpoint": "chat",
                  "id": "string",
                  "prompt_id": "string",
                  "prompt": {
                    "id": "string",
                    "name": "string",
                    "type": "prompt",
                    "directory_id": "string",
                    "created_at": "2023-01-01T00:00:00Z",
                    "updated_at": "2023-01-01T00:00:00Z"
                  },
                  "commit_message": "string",
                  "status": "uncommitted",
                  "tools": [
                    {
                      "id": "string",
                      "name": "string",
                      "description": "string",
                      "parameters": {
                        "string": {}
                      },
                      "source": "string"
                    }
                  ],
                  "feedback_stats": [
                    {
                      "feedback_type_id": 0,
                      "feedback_type": "string",
                      "feedback_value": "string",
                      "feedback_count": 0
                    }
                  ],
                  "type": "prompt",
                  "created_by": {
                    "id": "string",
                    "email_address": "string",
                    "full_name": "string"
                  },
                  "num_logs": 0,
                  "last_used_at": "2023-01-01T00:00:00Z",
                  "created_at": "2023-01-01T00:00:00Z",
                  "updated_at": "2023-01-01T00:00:00Z",
                  "chat_template": [
                    {
                      "content": "string",
                      "name": "string",
                      "tool_call_id": "string",
                      "role": "user",
                      "tool_calls": [
                        {
                          "id": "string",
                          "type": "pinecone_search",
                          "function": {
                            "name": "string",
                            "arguments": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "provider": "openai",
                  "model": "string",
                  "max_tokens": 0,
                  "temperature": 1,
                  "top_p": 1,
                  "stop": "string",
                  "presence_penalty": 1,
                  "frequency_penalty": 1,
                  "other": {
                    "string": {}
                  },
                  "seed": 0,
                  "response_format": {
                    "type": "json_object"
                  }
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/versions",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "endpoint": "chat",
                  "prompt_id": "string",
                  "commit_message": "string",
                  "model": "string"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Commit a new Prompt Version for the Prompt with the given ID.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "prompt-versions-get",
          "migratedFromUrlSlugs": ["retrieve-prompt-version"],
          "method": "GET",
          "id": "PromptVersions_get",
          "originalEndpointId": "endpoint_prompts.PromptVersions_get",
          "name": "Retrieve Prompt Version",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Prompt. Starts with `pr_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/prompts/versions/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:PromptVersionResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/prompts/versions/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "endpoint": "chat",
                  "id": "string",
                  "prompt_id": "string",
                  "prompt": {
                    "id": "string",
                    "name": "string",
                    "type": "prompt",
                    "directory_id": "string",
                    "created_at": "2023-01-01T00:00:00Z",
                    "updated_at": "2023-01-01T00:00:00Z"
                  },
                  "commit_message": "string",
                  "status": "uncommitted",
                  "tools": [
                    {
                      "id": "string",
                      "name": "string",
                      "description": "string",
                      "parameters": {
                        "string": {}
                      },
                      "source": "string"
                    }
                  ],
                  "feedback_stats": [
                    {
                      "feedback_type_id": 0,
                      "feedback_type": "string",
                      "feedback_value": "string",
                      "feedback_count": 0
                    }
                  ],
                  "type": "prompt",
                  "created_by": {
                    "id": "string",
                    "email_address": "string",
                    "full_name": "string"
                  },
                  "num_logs": 0,
                  "last_used_at": "2023-01-01T00:00:00Z",
                  "created_at": "2023-01-01T00:00:00Z",
                  "updated_at": "2023-01-01T00:00:00Z",
                  "chat_template": [
                    {
                      "content": "string",
                      "name": "string",
                      "tool_call_id": "string",
                      "role": "user",
                      "tool_calls": [
                        {
                          "id": "string",
                          "type": "pinecone_search",
                          "function": {
                            "name": "string",
                            "arguments": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "provider": "openai",
                  "model": "string",
                  "max_tokens": 0,
                  "temperature": 1,
                  "top_p": 1,
                  "stop": "string",
                  "presence_penalty": 1,
                  "frequency_penalty": 1,
                  "other": {
                    "string": {}
                  },
                  "seed": 0,
                  "response_format": {
                    "type": "json_object"
                  }
                }
              },
              "codeSamples": []
            },
            {
              "path": "/prompts/versions/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Retrieve the Prompt Version with the given ID.",
          "authed": true
        }
      ],
      "types": ["type_prompts:Request"],
      "subpackages": [],
      "urlSlug": "prompts",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_tools": {
      "subpackageId": "subpackage_tools",
      "name": "tools",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list-tool-templates",
          "method": "GET",
          "id": "listToolTemplates",
          "originalEndpointId": "endpoint_tools.listToolTemplates",
          "name": "List Tool Templates",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/templates"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Type of tool to return the template",
              "key": "tool_type",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:ToolType"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:ToolTemplateResponse"
                }
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/tools/templates",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": [
                {
                  "name": "pinecone_search",
                  "description": "description",
                  "signature": "signature"
                }
              ],
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "name": "pinecone_search",
                    "description": "description",
                    "signature": "signature"
                  }
                ]
              },
              "codeSamples": []
            },
            {
              "path": "/tools/templates",
              "pathParameters": {},
              "queryParameters": {
                "tool_type": "pinecone_search"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "create",
          "migratedFromUrlSlugs": ["create-a-tool"],
          "method": "POST",
          "id": "create",
          "originalEndpointId": "endpoint_tools.create",
          "name": "Create A Tool",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Name of the Tool. This has to be unique within your Organization.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Directory to create Tool in. Starts with `dir_`. If not provided, the Tool will be created in your Organization's root directory.",
                  "key": "directory_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Type of Tool if runnable by Humanloop. Otherwise `null`.",
                  "key": "tool_type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ToolType"
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ToolResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/tools",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "name": "name",
                "type": "tool",
                "tool_type": "pinecone_search",
                "directory_id": "directory_id",
                "deployments": [
                  {
                    "version": {
                      "tool_id": "tool_id",
                      "name": "name",
                      "id": "id",
                      "tool": {
                        "id": "id",
                        "name": "name",
                        "type": "tool",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "status": "uncommitted",
                      "num_logs": 1,
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    },
                    "experiment": {
                      "id": "id",
                      "file_id": "file_id",
                      "name": "name",
                      "status": "Initialized",
                      "metric": {
                        "id": "id",
                        "name": "name",
                        "description": "description",
                        "code": "code",
                        "default": true,
                        "active": true,
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "positive_labels": [
                        {
                          "type": "type",
                          "value": "value"
                        }
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    },
                    "environment": {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "name": "name",
                  "type": "tool",
                  "tool_type": "pinecone_search",
                  "directory_id": "directory_id",
                  "deployments": [
                    {
                      "version": {
                        "tool_id": "tool_id",
                        "name": "name",
                        "id": "id",
                        "tool": {
                          "id": "id",
                          "name": "name",
                          "type": "tool",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        },
                        "status": "uncommitted",
                        "num_logs": 1,
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "experiment": {
                        "id": "id",
                        "file_id": "file_id",
                        "name": "name",
                        "status": "Initialized",
                        "metric": {
                          "id": "id",
                          "name": "name",
                          "description": "description",
                          "code": "code",
                          "default": true,
                          "active": true,
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        },
                        "positive_labels": [
                          {
                            "type": "type",
                            "value": "value"
                          }
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "environment": {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Create a Tool in an existing Directory. If no Directory is specified, the\nTool will be created in the Organization's root directory.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "get",
          "migratedFromUrlSlugs": ["retrieve-a-tool"],
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_tools.get",
          "name": "Retrieve A Tool",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Tool. Starts with `tl_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ToolResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/tools/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "name": "name",
                "type": "tool",
                "tool_type": "pinecone_search",
                "directory_id": "directory_id",
                "deployments": [
                  {
                    "version": {
                      "tool_id": "tool_id",
                      "name": "name",
                      "id": "id",
                      "tool": {
                        "id": "id",
                        "name": "name",
                        "type": "tool",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "status": "uncommitted",
                      "num_logs": 1,
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    },
                    "experiment": {
                      "id": "id",
                      "file_id": "file_id",
                      "name": "name",
                      "status": "Initialized",
                      "metric": {
                        "id": "id",
                        "name": "name",
                        "description": "description",
                        "code": "code",
                        "default": true,
                        "active": true,
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "positive_labels": [
                        {
                          "type": "type",
                          "value": "value"
                        }
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    },
                    "environment": {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "name": "name",
                  "type": "tool",
                  "tool_type": "pinecone_search",
                  "directory_id": "directory_id",
                  "deployments": [
                    {
                      "version": {
                        "tool_id": "tool_id",
                        "name": "name",
                        "id": "id",
                        "tool": {
                          "id": "id",
                          "name": "name",
                          "type": "tool",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        },
                        "status": "uncommitted",
                        "num_logs": 1,
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "experiment": {
                        "id": "id",
                        "file_id": "file_id",
                        "name": "name",
                        "status": "Initialized",
                        "metric": {
                          "id": "id",
                          "name": "name",
                          "description": "description",
                          "code": "code",
                          "default": true,
                          "active": true,
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        },
                        "positive_labels": [
                          {
                            "type": "type",
                            "value": "value"
                          }
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "environment": {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Retrieve the Tool with the given ID.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "delete",
          "migratedFromUrlSlugs": ["delete-a-tool"],
          "method": "DELETE",
          "id": "delete",
          "originalEndpointId": "endpoint_tools.delete",
          "name": "Delete A Tool",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Tool. Starts with `tl_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/tools/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            },
            {
              "path": "/tools/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Delete the Tool with the given ID.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "update",
          "migratedFromUrlSlugs": ["update-a-tool"],
          "method": "PATCH",
          "id": "update",
          "originalEndpointId": "endpoint_tools.update",
          "name": "Update A Tool",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Tool. Starts with `tl_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Name of the Tool. This has to be unique within your Organization.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Directory to move Tool to. Starts with `dir_`.",
                  "key": "directory_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Type of Tool if runnable by Humanloop. Otherwise `null`.",
                  "key": "tool_type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ToolType"
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ToolResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/tools/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "name": "name",
                "type": "tool",
                "tool_type": "pinecone_search",
                "directory_id": "directory_id",
                "deployments": [
                  {
                    "version": {
                      "tool_id": "tool_id",
                      "name": "name",
                      "id": "id",
                      "tool": {
                        "id": "id",
                        "name": "name",
                        "type": "tool",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "status": "uncommitted",
                      "num_logs": 1,
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    },
                    "experiment": {
                      "id": "id",
                      "file_id": "file_id",
                      "name": "name",
                      "status": "Initialized",
                      "metric": {
                        "id": "id",
                        "name": "name",
                        "description": "description",
                        "code": "code",
                        "default": true,
                        "active": true,
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "positive_labels": [
                        {
                          "type": "type",
                          "value": "value"
                        }
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    },
                    "environment": {
                      "id": "id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "name": "name",
                      "tag": "default"
                    }
                  }
                ],
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "name": "name",
                  "type": "tool",
                  "tool_type": "pinecone_search",
                  "directory_id": "directory_id",
                  "deployments": [
                    {
                      "version": {
                        "tool_id": "tool_id",
                        "name": "name",
                        "id": "id",
                        "tool": {
                          "id": "id",
                          "name": "name",
                          "type": "tool",
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        },
                        "status": "uncommitted",
                        "num_logs": 1,
                        "last_used_at": "2024-01-15T09:30:00Z",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "experiment": {
                        "id": "id",
                        "file_id": "file_id",
                        "name": "name",
                        "status": "Initialized",
                        "metric": {
                          "id": "id",
                          "name": "name",
                          "description": "description",
                          "code": "code",
                          "default": true,
                          "active": true,
                          "created_at": "2024-01-15T09:30:00Z",
                          "updated_at": "2024-01-15T09:30:00Z"
                        },
                        "positive_labels": [
                          {
                            "type": "type",
                            "value": "value"
                          }
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "environment": {
                        "id": "id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "name": "name",
                        "tag": "default"
                      }
                    }
                  ],
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Update the Tool with the given ID.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list",
          "migratedFromUrlSlugs": ["list-tool-versions"],
          "method": "GET",
          "id": "list",
          "originalEndpointId": "endpoint_tools.list",
          "name": "List Tool Versions",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Tool. Starts with `tl_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/versions"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Filter versions by status: 'uncommitted', 'committed''",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:VersionStatus"
                }
              }
            },
            {
              "key": "evaluation_aggregates",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ListToolVersionsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/tools/id/versions",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": [
                  {
                    "tool_id": "tool_id",
                    "commit_message": "commit_message",
                    "name": "name",
                    "description": "description",
                    "source_code": "source_code",
                    "id": "id",
                    "tool": {
                      "id": "id",
                      "name": "name",
                      "type": "tool",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    },
                    "signature": "signature",
                    "status": "uncommitted",
                    "type": "tool",
                    "created_by": {
                      "id": "id",
                      "email_address": "email_address"
                    },
                    "num_logs": 1,
                    "last_used_at": "2024-01-15T09:30:00Z",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": [
                    {
                      "tool_id": "tool_id",
                      "commit_message": "commit_message",
                      "name": "name",
                      "description": "description",
                      "source_code": "source_code",
                      "id": "id",
                      "tool": {
                        "id": "id",
                        "name": "name",
                        "type": "tool",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "signature": "signature",
                      "status": "uncommitted",
                      "type": "tool",
                      "created_by": {
                        "id": "id",
                        "email_address": "email_address"
                      },
                      "num_logs": 1,
                      "last_used_at": "2024-01-15T09:30:00Z",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools/:id/versions",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "status": "uncommitted",
                "evaluation_aggregates": true
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Get a list of the Tool Versions for a Tool.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "tool-versions-commit",
          "migratedFromUrlSlugs": ["commit-a-tool-version"],
          "method": "POST",
          "id": "ToolVersions_commit",
          "originalEndpointId": "endpoint_tools.ToolVersions_commit",
          "name": "Commit A Tool Version",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/versions"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Unique identifier for the Tool to create a new Tool Version for. Starts with `tl_`.",
                  "key": "tool_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Message describing the changes made.",
                  "key": "commit_message",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1
                    }
                  }
                },
                {
                  "description": "Name for the Tool referenced by the model.",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Description of the Tool referenced by the model",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Parameters needed to run the Tool, defined in JSON Schema format: https://json-schema.org/",
                  "key": "parameters",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Code source of the Tool.",
                  "key": "source_code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Values needed to setup the Tool, defined in JSON Schema format: https://json-schema.org/",
                  "key": "setup_values",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ToolVersionResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/tools/versions",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "tool_id": "tool_id",
                "commit_message": "commit_message",
                "name": "name"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "tool_id": "tool_id",
                "commit_message": "commit_message",
                "name": "name",
                "description": "description",
                "parameters": {
                  "parameters": {
                    "key": "value"
                  }
                },
                "source_code": "source_code",
                "setup_values": {
                  "setup_values": {
                    "key": "value"
                  }
                },
                "id": "id",
                "tool": {
                  "id": "id",
                  "name": "name",
                  "type": "tool",
                  "tool_type": "pinecone_search",
                  "directory_id": "directory_id",
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                },
                "signature": "signature",
                "status": "uncommitted",
                "type": "tool",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "num_logs": 1,
                "last_used_at": "2024-01-15T09:30:00Z",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "tool_id": "tool_id",
                  "commit_message": "commit_message",
                  "name": "name"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "tool_id": "tool_id",
                  "commit_message": "commit_message",
                  "name": "name",
                  "description": "description",
                  "parameters": {
                    "parameters": {
                      "key": "value"
                    }
                  },
                  "source_code": "source_code",
                  "setup_values": {
                    "setup_values": {
                      "key": "value"
                    }
                  },
                  "id": "id",
                  "tool": {
                    "id": "id",
                    "name": "name",
                    "type": "tool",
                    "tool_type": "pinecone_search",
                    "directory_id": "directory_id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  },
                  "signature": "signature",
                  "status": "uncommitted",
                  "type": "tool",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "num_logs": 1,
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools/versions",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "tool_id": "string",
                  "commit_message": "string",
                  "name": "string"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Commit a new Tool Version for the Tool with the given ID.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "tool-versions-get",
          "migratedFromUrlSlugs": ["retrieve-a-tool-version"],
          "method": "GET",
          "id": "ToolVersions_get",
          "originalEndpointId": "endpoint_tools.ToolVersions_get",
          "name": "Retrieve A Tool Version",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Tool. Starts with `tl_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tools/versions/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ToolVersionResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/tools/versions/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "tool_id": "tool_id",
                "commit_message": "commit_message",
                "name": "name",
                "description": "description",
                "parameters": {
                  "parameters": {
                    "key": "value"
                  }
                },
                "source_code": "source_code",
                "setup_values": {
                  "setup_values": {
                    "key": "value"
                  }
                },
                "id": "id",
                "tool": {
                  "id": "id",
                  "name": "name",
                  "type": "tool",
                  "tool_type": "pinecone_search",
                  "directory_id": "directory_id",
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                },
                "signature": "signature",
                "status": "uncommitted",
                "type": "tool",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "num_logs": 1,
                "last_used_at": "2024-01-15T09:30:00Z",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "tool_id": "tool_id",
                  "commit_message": "commit_message",
                  "name": "name",
                  "description": "description",
                  "parameters": {
                    "parameters": {
                      "key": "value"
                    }
                  },
                  "source_code": "source_code",
                  "setup_values": {
                    "setup_values": {
                      "key": "value"
                    }
                  },
                  "id": "id",
                  "tool": {
                    "id": "id",
                    "name": "name",
                    "type": "tool",
                    "tool_type": "pinecone_search",
                    "directory_id": "directory_id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  },
                  "signature": "signature",
                  "status": "uncommitted",
                  "type": "tool",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "num_logs": 1,
                  "last_used_at": "2024-01-15T09:30:00Z",
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/tools/versions/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Retrieve the Tool Version with the given ID.",
          "authed": true
        }
      ],
      "types": [],
      "subpackages": [],
      "urlSlug": "tools",
      "webhooks": [],
      "websockets": []
    },
    "subpackage_datasets": {
      "subpackageId": "subpackage_datasets",
      "name": "datasets",
      "endpoints": [
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "create",
          "migratedFromUrlSlugs": ["create-a-dataset"],
          "method": "POST",
          "id": "create",
          "originalEndpointId": "endpoint_datasets.create",
          "name": "Create A Dataset",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Name of the Dataset. This has to be unique within your Organization.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Directory to create the Dataset in. Starts with `dir_`. If not provided, the Dataset will be created in your Organization's root directory.",
                  "key": "directory_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:DatasetResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/datasets",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "name": "name",
                "type": "dataset",
                "directory_id": "directory_id",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "name": "name",
                  "type": "dataset",
                  "directory_id": "directory_id",
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Create a Dataset in an existing Directory.\n\nIf no Directory is specified, the Dataset will be created in the Organization's root directory.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "get",
          "migratedFromUrlSlugs": ["retrieve-a-dataset"],
          "method": "GET",
          "id": "get",
          "originalEndpointId": "endpoint_datasets.get",
          "name": "Retrieve A Dataset",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Dataset. Starts with `ds_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:DatasetResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/datasets/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "name": "name",
                "type": "dataset",
                "directory_id": "directory_id",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "name": "name",
                  "type": "dataset",
                  "directory_id": "directory_id",
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Retrieve the Dataset with the given ID.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "delete",
          "migratedFromUrlSlugs": ["delete-dataset"],
          "method": "DELETE",
          "id": "delete",
          "originalEndpointId": "endpoint_datasets.delete",
          "name": "Delete Dataset",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Dataset. Starts with `ds_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/datasets/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "codeExamples": {
                "nodeAxios": ""
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Delete the Dataset with the given ID.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "update",
          "migratedFromUrlSlugs": ["update-a-dataset"],
          "method": "PATCH",
          "id": "update",
          "originalEndpointId": "endpoint_datasets.update",
          "name": "Update A Dataset",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Dataset. Starts with `ds_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Name of the Dataset. This has to be unique within your Organization.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the Directory to move Dataset to. Starts with `dir_`.",
                  "key": "directory_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:DatasetResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/datasets/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "name": "name",
                "type": "dataset",
                "directory_id": "directory_id",
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "name": "name",
                  "type": "dataset",
                  "directory_id": "directory_id",
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Update the Prompt with the given ID.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "list-versions",
          "method": "GET",
          "id": "listVersions",
          "originalEndpointId": "endpoint_datasets.listVersions",
          "name": "List Versions",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Dataset. Starts with `ds_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/versions"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Filter versions by status: 'uncommitted', 'committed''",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "type_:VersionStatus"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:ListDatasetVersionsResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/datasets/id/versions",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "records": [
                  {
                    "id": "id",
                    "dataset_id": "dataset_id",
                    "dataset": {
                      "id": "id",
                      "name": "name",
                      "type": "dataset",
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    },
                    "datapoints": [
                      {
                        "target": {},
                        "hash": "hash"
                      }
                    ],
                    "commit_message": "commit_message",
                    "status": "uncommitted",
                    "type": "dataset",
                    "created_by": {
                      "id": "id",
                      "email_address": "email_address"
                    },
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  }
                ]
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "records": [
                    {
                      "id": "id",
                      "dataset_id": "dataset_id",
                      "dataset": {
                        "id": "id",
                        "name": "name",
                        "type": "dataset",
                        "created_at": "2024-01-15T09:30:00Z",
                        "updated_at": "2024-01-15T09:30:00Z"
                      },
                      "datapoints": [
                        {
                          "target": {},
                          "hash": "hash"
                        }
                      ],
                      "commit_message": "commit_message",
                      "status": "uncommitted",
                      "type": "dataset",
                      "created_by": {
                        "id": "id",
                        "email_address": "email_address"
                      },
                      "created_at": "2024-01-15T09:30:00Z",
                      "updated_at": "2024-01-15T09:30:00Z"
                    }
                  ]
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/:id/versions",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {
                "status": "uncommitted"
              },
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "List the Dataset Versions associated with this Dataset.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "dataset-versions-commit",
          "migratedFromUrlSlugs": ["commit-a-dataset-version"],
          "method": "POST",
          "id": "DatasetVersions_commit",
          "originalEndpointId": "endpoint_datasets.DatasetVersions_commit",
          "name": "Commit A Dataset Version",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/versions"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Unique identifier of the Dataset to create a new Version of. Starts with `ds_`.",
                  "key": "dataset_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Message describing the changes made.",
                  "key": "commit_message",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1
                    }
                  }
                },
                {
                  "description": "The list of datapoints in this version of the dataset.",
                  "key": "datapoints",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DatapointRequest"
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:DatasetVersionResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/datasets/versions",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "dataset_id": "dataset_id",
                "commit_message": "commit_message",
                "datapoints": [
                  {
                    "target": {}
                  }
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "dataset_id": "dataset_id",
                "dataset": {
                  "id": "id",
                  "name": "name",
                  "type": "dataset",
                  "directory_id": "directory_id",
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                },
                "datapoints": [
                  {
                    "variables": {
                      "variables": "variables"
                    },
                    "messages": [
                      {
                        "content": "content",
                        "role": "user"
                      }
                    ],
                    "target": {},
                    "hash": "hash"
                  }
                ],
                "commit_message": "commit_message",
                "status": "uncommitted",
                "type": "dataset",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "dataset_id": "dataset_id",
                  "commit_message": "commit_message",
                  "datapoints": [
                    {
                      "target": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "dataset_id": "dataset_id",
                  "dataset": {
                    "id": "id",
                    "name": "name",
                    "type": "dataset",
                    "directory_id": "directory_id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  },
                  "datapoints": [
                    {
                      "variables": {
                        "variables": "variables"
                      },
                      "messages": [
                        {
                          "content": "content",
                          "role": "user"
                        }
                      ],
                      "target": {},
                      "hash": "hash"
                    }
                  ],
                  "commit_message": "commit_message",
                  "status": "uncommitted",
                  "type": "dataset",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/versions",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "dataset_id": "string",
                  "commit_message": "string",
                  "datapoints": [
                    {
                      "target": {
                        "string": {}
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Commit a new Dataset Version for the Dataset with the given ID.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "dataset-versions-get",
          "migratedFromUrlSlugs": ["retrieve-a-dataset-version"],
          "method": "GET",
          "id": "DatasetVersions_get",
          "originalEndpointId": "endpoint_datasets.DatasetVersions_get",
          "name": "Retrieve A Dataset Version",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Dataset Version. Starts with `dsv_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/versions/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:DatasetVersionResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/datasets/versions/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "dataset_id": "dataset_id",
                "dataset": {
                  "id": "id",
                  "name": "name",
                  "type": "dataset",
                  "directory_id": "directory_id",
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                },
                "datapoints": [
                  {
                    "variables": {
                      "variables": "variables"
                    },
                    "messages": [
                      {
                        "content": "content",
                        "role": "user"
                      }
                    ],
                    "target": {},
                    "hash": "hash"
                  }
                ],
                "commit_message": "commit_message",
                "status": "uncommitted",
                "type": "dataset",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "dataset_id": "dataset_id",
                  "dataset": {
                    "id": "id",
                    "name": "name",
                    "type": "dataset",
                    "directory_id": "directory_id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  },
                  "datapoints": [
                    {
                      "variables": {
                        "variables": "variables"
                      },
                      "messages": [
                        {
                          "content": "content",
                          "role": "user"
                        }
                      ],
                      "target": {},
                      "hash": "hash"
                    }
                  ],
                  "commit_message": "commit_message",
                  "status": "uncommitted",
                  "type": "dataset",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/versions/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Retrieve the Dataset Version with the given ID.",
          "authed": true
        },
        {
          "environments": [
            {
              "id": "Default",
              "baseUrl": "https://api.humanloop.com/v5"
            }
          ],
          "defaultEnvironment": "Default",
          "urlSlug": "dataset-versions-modify",
          "migratedFromUrlSlugs": ["modify-a-dataset-version"],
          "method": "POST",
          "id": "DatasetVersions_modify",
          "originalEndpointId": "endpoint_datasets.DatasetVersions_modify",
          "name": "Modify A Dataset Version",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for Dataset Version. Starts with `dsv_`.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasets/versions/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "contentType": "application/json",
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Message describing the changes made.",
                  "key": "commit_message",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1
                    }
                  }
                },
                {
                  "description": "The list of datapoints to add to this version of the dataset.",
                  "key": "add_datapoints",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:DatapointRequest"
                      }
                    }
                  }
                },
                {
                  "description": "The list of datapoint hashes to remove from this version of the dataset.",
                  "key": "remove_datapoints",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "type_:DatasetVersionResponse"
              }
            }
          },
          "errors": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "type_:HTTPValidationError"
                }
              },
              "statusCode": 422,
              "description": "Validation Error",
              "examples": []
            }
          ],
          "examples": [
            {
              "path": "/datasets/versions/id",
              "pathParameters": {
                "id": "id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "commit_message": "commit_message"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "id",
                "dataset_id": "dataset_id",
                "dataset": {
                  "id": "id",
                  "name": "name",
                  "type": "dataset",
                  "directory_id": "directory_id",
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                },
                "datapoints": [
                  {
                    "variables": {
                      "variables": "variables"
                    },
                    "messages": [
                      {
                        "content": "content",
                        "role": "user"
                      }
                    ],
                    "target": {},
                    "hash": "hash"
                  }
                ],
                "commit_message": "commit_message",
                "status": "uncommitted",
                "type": "dataset",
                "created_by": {
                  "id": "id",
                  "email_address": "email_address",
                  "full_name": "full_name"
                },
                "created_at": "2024-01-15T09:30:00Z",
                "updated_at": "2024-01-15T09:30:00Z"
              },
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "commit_message": "commit_message"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "id",
                  "dataset_id": "dataset_id",
                  "dataset": {
                    "id": "id",
                    "name": "name",
                    "type": "dataset",
                    "directory_id": "directory_id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z"
                  },
                  "datapoints": [
                    {
                      "variables": {
                        "variables": "variables"
                      },
                      "messages": [
                        {
                          "content": "content",
                          "role": "user"
                        }
                      ],
                      "target": {},
                      "hash": "hash"
                    }
                  ],
                  "commit_message": "commit_message",
                  "status": "uncommitted",
                  "type": "dataset",
                  "created_by": {
                    "id": "id",
                    "email_address": "email_address",
                    "full_name": "full_name"
                  },
                  "created_at": "2024-01-15T09:30:00Z",
                  "updated_at": "2024-01-15T09:30:00Z"
                }
              },
              "codeSamples": []
            },
            {
              "path": "/datasets/versions/:id",
              "pathParameters": {
                "id": ":id"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 422,
              "codeExamples": {
                "nodeAxios": ""
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "commit_message": "string"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "detail": [
                    {
                      "loc": ["string"],
                      "msg": "string",
                      "type": "string"
                    }
                  ]
                }
              },
              "codeSamples": []
            }
          ],
          "description": "Apply a modification to a Dataset Version and get back a new Version.\n\nIt is possible to add a list of new Datapoints and remove a list of existing\nDatapoints from the passed in Dataset Version.\n\nSince Dataset Versions are immutable, a new Dataset Version will be created\nand returned. The new version will have its own unique ID.",
          "authed": true
        }
      ],
      "types": [],
      "subpackages": [],
      "urlSlug": "datasets",
      "webhooks": [],
      "websockets": []
    }
  },
  "auth": {
    "type": "header",
    "headerWireValue": "X-API-KEY",
    "nameOverride": "apiKey"
  },
  "hasMultipleBaseUrls": false,
  "globalHeaders": []
}
